{
	"title": "技术和趋势",
	"description": "聊一些技术细节，以及大趋势",
	"links": "- [Source code](https://github.com/HelloZeroNet)",
	"next_post_id": 37,
	"demo": false,
	"modified": 1493285675,
	"post": [
		{
			"post_id": 36,
			"title": "PyPy已经越来越成熟了",
			"date_published": 1493285503.555,
			"body": "现在PyPy的兼容性已经快到100%兼容Py2.7的标准库了。\n\n对于大部分老的程序，只要没用什么第三方库，都可以快速的迁移到PyPy平台。\n\nZeroNet还是不行，主要是没人关注性能，可惜。"
		},
		{
			"post_id": 35,
			"title": "mongodb为何在国内不受待见",
			"date_published": 1493032458.052,
			"body": "最主要的原因是mongodb的2.x版本比较不稳定，丢数据是经常发生的事情。\n\n目前只知道58同城和360是大规模的在用Mongodb做为主要数据库。其它公司大部分是用mongodb于一些小项目，没有作为核心数据库使用。\n\n我们知道MongoDB的数据的删除将会造成数据的空洞或者碎片，碎片太多，会造成数据库空间占用较大，加载到内存时也会存在碎片的问题，内存使用率不高，会造成数据频繁地在内存和磁盘之间Swap，影响MongoDB集群性能。\n\nMongoDB的尴尬之处还在于定位处于MySQL和Redis的夹层中。尤其是Redis的快速普及，使得缓存也可以保存比较复杂的数据结构。这样子带来的问题就是，Redis+MySQL已经满足了大部分场合的需求。为何还要用MongoDB呢？"
		},
		{
			"post_id": 34,
			"title": "智能驾驶的困局",
			"date_published": 1492769461.397,
			"body": "1.  安全性没有保证。这里的保证是说，智能驾驶是一个计算机系统，而计算机系统就必然是可能存在漏洞的。如果智能驾驶系统又像特斯拉那样是联网的，那么被黑客攻击的概率就非常大了。\n2.  厂家没能力承担责任。一旦自动驾驶车压死了一个老太婆，怎么算责任就是一个大问题。基本无解。"
		},
		{
			"post_id": 33,
			"title": "微耗电的FPGA是非常有前途的",
			"date_published": 1490241075.301,
			"body": "随着物联网的普及，产品迭代速度加快，两个问题越来越关键：\n\n1.  耗电量\n2.  可升级性\n\n微耗电FPGA可以满足这两个需求，同时还很便宜。"
		},
		{
			"post_id": 32,
			"title": "未来5年最有价值的高性能计算平台还是CUDA",
			"date_published": 1490091896.316,
			"body": "理由：\n\n1\\. 竞争对手人多势众，但是各怀鬼胎，尤其是谷歌，先支持OpenCL又不支持了。\n\n2\\. CUDA在DNN领域领先太多了，除了FPGA在部分领域可能有点优势以外，没有什么可以撼动CUDA在高性能计算领域的地位。\n\n3\\. CUDA的硬件便宜。\n\n4\\. CUDA的用户量太大了。\n\nCUDA的劣势：\n\n1.  必须要英伟达的硬件\n2.  没有什么可移植性\n\n但是，便宜的硬件并不难取得，而且，对于科研机构，能发论文才是关键啊。"
		},
		{
			"post_id": 31,
			"title": "关于OpenCL/Vulkan",
			"date_published": 1490091247.692,
			"body": "看来是本性难移，[https://www.khronos.org/](https://www.khronos.org/) 一向是低效和闹哄哄的吵架的组织。\n\nGoogle一方面移除了Android对OpenCL的支持，一方面在Vulkan上发力，要强推。Intel又想保持OpenCL在计算领域的优势，保住FPGA在OpenCL上的一点阵地。\n\n于是乎，吵吵吵，吵吵吵。\n\n然后Apple搞自己的Metal，英伟达拼命发力CUDA。\n\n看来，之前是高估了khronos组织，现在，我觉得这个组织基本上无力和Apple以及英伟达主导的计算标准竞争。在图形渲染领域，vulkan由于相对OpenGL的巨大改进，应该会普及。但是CUDA还是会牢牢的控制高性能计算领域。"
		},
		{
			"post_id": 30,
			"title": "OpenCL的发展调研",
			"date_published": 1490075646.401,
			"body": "目前在深度学习领域，主流的技术平台还是CUDA，但是Intel和AMD都押注OpenCL，还有几个FPGA厂家，也押注OpenCL。\n\n调研了下FPGA的OpenCL，发现其开发效率低，成熟度低，麻烦，贵。\n\n倒是，发现FPGA在专用于深度网络的一些ASIC设计领域有很大的用途。但是需求量不大。FPGA主要可能还是用于通讯行业，尤其是5G的基站设备等。\n\n在手机领域OpenCL的支持也很不完善。\n\n可以说未来10年，OpenCL都不会有大的起色，主要用途还是简单加速下图片处理等领域。"
		},
		{
			"post_id": 28,
			"title": "关于CUDA在AI领域的调研",
			"date_published": 1489644615.501,
			"body": "主流开源深度学习和周边的数据处理库，以及NLP库，均支持CUDA加速。\n\n大部分都不支持OpenCL加速。\n\n大部分都没有对Intel的CPU做特别的优化。\n\n没有一个支持FPGA加速的。\n\n* * *\n\n主流的AI公司，如DeepMind大量部署英伟达的GPU来做CUDA加速运算以便快速的训练深度神经网络。\n\n* * *\n\n汽车行业大量的使用英伟达的解决方案，不光在无人驾驶领域，甚至是简单的中控系统中。\n\n=========================\n\n结论：CUDA将统治AI领域至少5年以上。"
		},
		{
			"post_id": 27,
			"title": "Hprose-golang一个高性能的多语言RPC的golang实现",
			"date_published": 1489496596,
			"body": "RPC框架很多，但是好用却很少。\n\nHprose是具有10年历史的靠谱的RPC框架，而且支持多语言，包括Python Java PHP等。"
		},
		{
			"post_id": 26,
			"title": "HttpDNS是什么？",
			"date_published": 1489480006.346,
			"body": "运营商劫持域名越来越厉害，我们不得不考虑用别的方式来解析域名。\n\n于是HTTPDNS方案诞生了。\n\n目前腾讯和百度都已经大规模部署了。相信不远的将来，很多人都会用这个方案了。"
		},
		{
			"post_id": 25,
			"title": "发现一个很好的golang的缓存库",
			"date_published": 1489479869.359,
			"body": "cache2go 作者是 muesli。\n\n代码写的很不错，简洁易读。"
		},
		{
			"post_id": 24,
			"title": "PHP为何能成功",
			"date_published": 1489278101.495,
			"body": "1.  简单。\n2.  针对Web开发的高度优化。\n3.  集成了简单的开源数据库支持-mysql。\n4.  性能越来越快，PHP7比PHP5快来2倍。\n5.  社区友好，核心开发团队积极面对核心问题并改进。\n6.  市场需求强烈，很多外包开发任务是机遇PHP的。\n7.  开发人员工资较低廉，培训机构多，学习所需要的基础知识较少。"
		},
		{
			"post_id": 23,
			"title": "golang的chan的一个容易被忽略的点",
			"date_published": 1489125860.798,
			"body": "当一个chan关闭时，从这个chan上读取将返回0值。\n\n建议用range c这种用法，而不是直接在chan上读。"
		},
		{
			"post_id": 22,
			"title": "Go的一个缺点",
			"date_published": 1487657905.614,
			"body": "interface{}出现的太多，强类型在这里其实变成了弱类型。\n\n有必要引入范型了。\n\n范型并不只是可以少写代码，更重要的是增加了抽象层次，把逻辑和类型无关化；换句话说，就是创造了一种契约Contract。\n\n如果不引入范型，也可以用 闭包来暂时替代下。\n\n比如需要范型表达的参数，直接用一个func()替代，把数据和怎么处理数据直接打包📦起来。勉强能在部分场合替代范型。"
		},
		{
			"post_id": 20,
			"title": "Go的GC",
			"date_published": 1487147763.421,
			"body": "目前Go语言的GC重点优化方向是延时。因为GOGC不是分代的，所以延时在堆比较大的时候会变长。尤其是对于有很多小对象，而且小对象寿命还很长的情况，比如有一个全局的大map，保存了一部分用户对象的情况。\n\nGO在GC的时候会做一个 栈收缩 动作。如果协程的数目很多，这就会很费时。对于大部分程序，这个动作是不必要的。所以可以禁用这个功能。\n\nGO的GC问题还可以通过对象池来减轻，另外通过mmap实现堆外内存也是一个方案。"
		},
		{
			"post_id": 19,
			"title": "Go语言的机器学习库",
			"date_published": 1486993029.129,
			"body": "https://github.com/sjwhitworth/golearn"
		},
		{
			"post_id": 18,
			"title": "Baa框架（Golang）",
			"date_published": 1486968383.036,
			"body": "发现一个很有趣的golang写的[web框架](https://github.com/go-baa/doc/tree/master/zh-CN)，特色是简单，没有用正则和反射。代码比较好懂。"
		},
		{
			"post_id": 16,
			"title": "通用的Actor模型",
			"date_published": 1486370514.253,
			"body": "[http://proto.actor](http://proto.actor)\n\n不同于一般绑定到语言的Actor实现，ProtorActor定义了语言无关的Actor协议。目前官方实现了[Golang](http://proto.actor/docs/golang/)和[.Net](http://proto.actor/docs/dotnet/)的版本。"
		},
		{
			"post_id": 15,
			"title": "PySocks",
			"date_published": 1486226908.366,
			"body": "ZeroNet用了[PySocks](https://github.com/Anorov/PySocks)作为socks代理层，这是一个源自[SocksiPy](http://socksipy.sourceforge.net)的fork。\n\n主要是完成了对socks代理的支持。"
		},
		{
			"post_id": 14,
			"title": "CoffeeScript和LLVM与WebAssembly",
			"date_published": 1486218030.134,
			"body": "说不定哪天CoffeeScript就可以编译到WebAssembly了。\n\n那么也就和JS这种漏洞百出的语言彻底无关了。\n\nLLVM发展很快，但是复杂度也上去了，几种新语言都没有用LLVM平台，比如Go。"
		},
		{
			"post_id": 13,
			"title": "ZeroNet的性能测试",
			"date_published": 1486100899.855,
			"body": "ZeroNet自带了一个性能测试工具，直接打开URL:\n\n[http://127.0.0.1:43110/Benchmark](http://127.0.0.1:43110/Benchmark)"
		},
		{
			"post_id": 12,
			"title": "MacMini该更新了",
			"date_published": 1486099269.099,
			"body": "2014最后做过一次更新以后，苹果就没有更新过MacMini产品线了。\n\n很不错的产品，尤其是有一个大电视做显示器的时候。"
		},
		{
			"post_id": 11,
			"title": "三星的固态盘",
			"date_published": 1485960893.422,
			"body": "手里有N块三星的固态盘，都用了比较久了。\n\n大部分超过了3年了。\n\n从smart信息看，大部分出现了很多的坏块，即便写入的数据量还不足10TB的，也是一样。\n\n三星的东西果然质量很一般。"
		},
		{
			"post_id": 10,
			"title": "Cython的成熟度越来越高了",
			"date_published": 1485500118.896,
			"body": "使用以下语句，轻松自动编译大部分纯Python模块。\n\n`**import** **pyximport**; pyximport.install(pyimport = True)`"
		},
		{
			"post_id": 9,
			"title": "Atom编辑器是一个很好的编辑器",
			"date_published": 1485223964.5,
			"body": "架构先进，插件多。\n\n开发语言主要是要CoffeeScript。"
		},
		{
			"post_id": 8,
			"title": "ES6",
			"date_published": 1485082051.272,
			"body": "ES6的流行势头超乎我的想象。\n\n我认为，ES6/7/8/9每年一个版本的发展速度，很可能会极大的促进ECMAScript在server端的普及。甚至会取代大部分脚本语言。"
		},
		{
			"post_id": 7,
			"title": "技术的惯性",
			"date_published": 1485015728.964,
			"body": "很多公司一直沿用老的技术，直到实现是不堪使用，或者公司死亡。\n\n这是为何呢？\n\n主要的原因是技术的惯性，技术本身会导致组织有路径依赖。\n\n比如一个GCC版本，一个开发语言，一个体系架构，一个数据库选型。\n\n本质上，不是哪个技术更好就应该用哪个，而是哪个技术风险最低就应该用哪个。\n\n这就是为何大公司的技术逐渐老去的原因。"
		},
		{
			"post_id": 6,
			"title": "Python的发展",
			"date_published": 1484906066.693,
			"body": "Py3系列的语法越来越酷，随着程序员的自然更替，Python3.6及以后的版本会很快流行起来。"
		},
		{
			"post_id": 5,
			"title": "Swift看起来不错",
			"date_published": 1484905828.994,
			"body": "可惜实在是没时间学习了。"
		},
		{
			"post_id": 4,
			"title": "Python为何被国内的大中型互联网公司放弃？",
			"date_published": 1484626258.337,
			"body": "1\\. Python的运行速度确实太慢了，即使有PyPy Cython等加速，也太慢了；\n\n2\\. 开发人员太少；\n\n3\\. 动态类型，不能静态编译器除错；\n\n4\\. Python2和Python3不兼容，使得很多公司停留在Python2；\n\n5\\. Python3发展太快，但是几个核心的问题不解决；\n\n6\\. Go发展太快\n\n7\\. PHP越来越快\n\n8\\. Java越来越成熟"
		},
		{
			"post_id": 3,
			"title": "开始学习Dart",
			"date_published": 1484530775.974,
			"body": "学习Dart的目的是掌握Google推荐的Dart技术栈。"
		},
		{
			"post_id": 2,
			"title": "Dart语言和CoffeeScript",
			"date_published": 1484494870.924,
			"body": "目前看CoffeeScript是~~主动放弃了演进  ~~，而Dart还在继续努力演进。\n\n更新：CoffeeScript仍然在继续演进，马上要发布2.0版本了。\n\n未来CoffeeScript可能会发展的更好。"
		},
		{
			"post_id": 1,
			"title": "Congratulations!",
			"date_published": 1433033779.604,
			"body": "Your zeronet blog has been successfully created!"
		}
	]
}