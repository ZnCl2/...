function debugLog(l,v) {if(v<=verbosity)console.log("%c[DEBUG] "+l,"color: cyan;");}
function arrayContains(a,o) {var i=a.length;while (i--) {if(a[i].indexOf(o) > -1)return true;}return false;}
function stringContains(s,c) {if(s.toLowerCase().indexOf(c) > -1)return true;return false;}
function whereInString(s,c){return s.toLowerCase().indexOf(c);}
function getUrlParam(name){name=name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");var regexS="[\\?&]"+name+"=([^&#]*)";var regex=new RegExp(regexS);var results=regex.exec(location.href);return results==null?null:results[1]}
function getUrlBool(a){a=a.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");var b="[\\?&]"+a;var c=new RegExp(b);var d=c.exec(location.href);return(d!=null);}
function levenshteinDistance(a,b){if(a.length==0){return b.length}if(b.length==0){return a.length}var matrix=[];var i;for(i=0;i<=b.length;i+=1){matrix[i]=[i]}var j;for(j=0;j<=a.length;j+=1){matrix[0][j]=j}for(i=1;i<=b.length;i+=1){for(j=1;j<=a.length;j+=1){if(b.charAt(i-1)==a.charAt(j-1)){matrix[i][j]=matrix[i-1][j-1]}else{matrix[i][j]=Math.min(matrix[i-1][j-1]+1,Math.min(matrix[i][j-1]+1,matrix[i-1][j]+1));}}}return matrix[b.length][a.length]};
function hideElement(e){document.getElementById(e).style.display="none";}
function showElement(e){document.getElementById(e).style.display="block";}
function logTime(operation,optimal,slow,operationStart){if(verbosity<5){return}var operationEnd=new Date();debugLog("Time: "+operation+" took ~"+(operationEnd.getTime()-operationStart.getTime())/1000+"s",3);if(operationEnd.getTime()-operationStart.getTime()<=optimal){debugLog("Time: "+operation+" is at optimal speed.",4)}else if(operationEnd.getTime()-operationStart.getTime()>=slow){debugLog("Time: "+operation+" is slow!",4)}}
