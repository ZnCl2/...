{
	"title": "Œöappa Œ£igma",
	"description": "Snippets about\neverything and nothing",
	"links": "- [Table of contents](?Post:1)\n- [Colophon](?Post:23)\n- [FAQ](?Post:24)\n\nElsewhere\non Zeronet\n- [Today I learned](/todayilearned.bit/)\n\nJeg har osse\net par blogs p√• dansk\n- [Kogebogen](/kogebogen.bit/)\n- [Nulblog](/nulblog.bit/)",
	"next_post_id": 42,
	"demo": false,
	"modified": 1485783284,
	"post": [
		{
			"post_id": 41,
			"title": "How to make your own yogurt",
			"date_published": 1485782949.492,
			"body": "Making your own yogurt is very easy and the final product is delicious. You can use the type of milk you want ‚Äî from full cream milk to skimmed milk, and even soy milk if you wish to go vegan. And what more is: with a bit of practice you can get exactly the tanginess you want by adjusting the ferment¬≠ation time (and to a certain extend, the temperature).\n\nStrictly speaking, _yogurt_ is milk cultured with the lactic acid bacteria _Lacto¬≠bacillus delbrueckii subsp. bulgaricus_ and _Streptococcus thermo¬≠philus_. Milk cultured with other lacto¬≠bacilli or bifido¬≠bacteria have other names, e.g., _acido¬≠philus_. For the sake of ease, I will refer to both types as ‚Äúyogurt‚Äù unless we're talking about real yogurt, in which case I will use the term ‚Äúyogurt proper‚Äù.\n\nThe effective time for making a batch of yogurt is around half an hour. How¬≠ever, heating and cooling the milk takes time, so does the fermentation and the final ‚Äúmaturing‚Äù: Starting one day before noon, the yogurt is ready for con¬≠sump¬≠tion the next morning.\n\n### Ingredients\n\n* 1 L milk (cow's, goat's, soy)\n* 1 dL starter culture\n\n### Instructions\n\nMake sure your hands and utensils are impeccably _clean_!\n\nHeat the milk to 85¬∞C in order to denature the proteins. If this step is omitted, the final yogurt tend to separate into curd and whey. If you overdo the temp¬≠erature significantly, the final product will have a faint taste of boiled milk.\n\nLet the hot milk cool to 41¬∞C if you wish to make yogurt proper, or around 37¬∞C for other cultures.\n\nMix in starter culture. If you haven't made yogurt before, buy some unsweet¬≠ened, unflavoured, and unpasteurized yogurt, otherwise use some yogurt from a previous batch. Alternatively, use one or two probiotic capsules (you can easily separate the gelatine capsules and use the freeze dried culture inside).\n\nCover with a lid and let the mixture sit at the required temperature (41¬∞C for yogurt proper, 37¬∞C otherwise) for 6-8 hours. The longer the fermentation, the more tangy the final product will be. If you're using soymilk, the fermentation will take approximately 50% longer: 9-12 hours.\n\nPlace the yogurt in the fridge and let it set for 12+ hours before using it.\n\nSet aside some yogurt for your next batch before adding fruits or flavouring.\n\n### Tips\n\nWe're culturing bacteria here, so keep your hands and utensils clean at all times!\n\nYou can heat the milk in the microwave oven. When my microwave operates at full power, it takes 2√ó5 minutes to reach 85¬∞C if the milk is taken from the fridge, and 2√ó4 minutes when the milk has room temperature (e.g., soymilk that hasn't been refrigerated). If you plan on making yogurt regularly, knowing your microwave can be a real timesaver.\n\nA good yogurt machine that holds one litre cost ‚Ç¨25-30 and is totally worth it. Otherwise it can be difficult to keep a stable temperature for a prolonged time. These yogurt machines almost always come with one setting only, 41¬∞C, which is too warm for other cultures than yogurt proper. To solve this problem, connect the yogurt machine to a plug-in timer of the type that has a dip-switch for every 15 minutes. Switching the machine on and off for 15 minutes at a time keeps the temperature at an average 36-37¬∞C, which is just perfect for other cultures.\n\nEnjoy!\n"
		},
		{
			"post_id": 40,
			"title": "MORPHiS quickstart",
			"date_published": 1484164926.99,
			"body": "As mentioned [elsewhere](/Me.ZeroNetwork.bit/?Post/1BLueGvui1GdbtsjcKqCf4F67uKfritG49/14TDWFVHuTXNcg8pp6LR 7v9ZcfbFsMSyx/1484036465), the creator of [MORPHiS ü°ï](https://morph.is/), Sam Maloney, was shot dead by the police a few days before Christmas, 2016. Shocking story aside, this seems to have sparked a new interest in the MORPHiS software: While I'm writing this, a dozen users are logged into the #morphis IRC channel on Free¬≠node.\n\nAmong other things, MORPHiS sports _Dmail_ ‚Äî encrypted uncensorable messaging ‚Äî which might be of interest to Zeronet users, so here's how to get started with MORPHiS on ArchLinux:\n\n```sh\n$ git clone https://github.com/bitcoinembassy/morphis.git  # get morphis\n$ cd morphis\n$ sudo pacman -S --needed python-crypto      # install PyCrypto\n$ sudo pacman -S --needed python-sqlalchemy  # install SQLAlchemy\n$ sudo pacman -S --needed cython             # optionally install Cython\n$ make                                       # optionally compile the C-modules\n$ ./run.sh                                   # run MORPHiS\n```\n\nNow point your browser at [localhost:4251](http://127.0.0.1:4251/) and click the [Dmail link](http://127.0.0.1:4251/.dmail/). You may now want to create a Dmail address. Using the standard parameters is fine. After a few minutes you're good to go.\n\nFeel free to dmail me at my test address, toy48fznw1afmxf1, if you want to check your setup.\n"
		},
		{
			"post_id": 39,
			"title": "Show ZN: memx",
			"date_published": 1473700705.235,
			"body": "Memoize output from job execution: Subsequent runs will use the cached values from a previous run (and preserve `stdout`, `stderr` and returncode), unless TTL has been reached (by default, jobs are only run once).\n\nGet it while it's hot ‚åò https://github.com/kseistrup/memx\n\n### **Usage**\n```markdown\nUsage: memx [OPTIONS] -- COMMAND [ARG [ARG ‚Ä¶]]\n\nPositional arguments:\n  COMMAND               command to run\n  ARG                   optional arg(s) to command\n\nOptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show version information and exit\n  -c, --copyright       show copying policy and exit\n  -f, --force           re-run command no matter what\n  -d [DIR], --dir [DIR]\n                        where to store cache data     (default: ~/.cache)\n  -t [TTL], --ttl [TTL]\n                        time before we re-run command (default: never)\n```\n\n### **Requirements**\nRuns on Python 3 only (tested on Python 3.5.2).\n\n### **Install**\nDrop `memx` in your `$PATH`.\n\n### **Example(s)**\n```sh\n$ memx -- date --utc '+%F %T %Z'  # first run\n2016-09-12 16:22:44 UTC\n$ echo $?\n0\n$ memx -- date --utc '+%F %T %Z'  # subsequent run\n2016-09-12 16:22:44 UTC\n$ echo $?\n0\n```\nBugs and enhancement requests to [Github ü°ï](https://github.com/kseistrup/memx/issues), please.\n"
		},
		{
			"post_id": 38,
			"title": "KBFS messenger (proof of concept)",
			"date_published": 1471710946.789,
			"body": "Inspired by the [twtxt ü°ï](https://github.com/buckket/twtxt) file format, I've put together a handful of shell- and python-scripts that allow you to communicate securely (sign and encrypt) with somebody in near real-time, using the [Keybase filesystem](?Post:37) (KBFS) as transport- and storage-medium: [kbmsgr ü°ï](https://github.com/kseistrup/kbmsgr)\n\n### **Requirements**\n\n* Bash (tested with v4.3.46)\n  * tmux (tested with v2.2)\n  * stat (from coreutils)\n* Python 3 (tested with v3.5.2)\n  * [python-dateutil ü°ï](https://pypi.python.org/pypi/python-dateutil/)\n  * [humanize ü°ï](https://pypi.python.org/pypi/humanize/)\n\n### **Quickstart**\n\nPut all of the scripts from the [‚Ä¶/src ü°ï](https://github.com/kseistrup/kbmsgr/tree/master/src) directory somewhere in your $PATH, then launch `kbmsgr` (`/keybase` should be mounted, of course):\n\n```sh\n$ kbmsgr ${my_keybase_username} ${their_keybase_username}\n```\n\n### **Screenshot**\n![kbmsgr](data/img/kbmsgr.png \"Screenshot of an early version of kbmsgr\")\n\n### **Caveat**\n\nThis is *alpha* quality software, use at your own peril."
		},
		{
			"post_id": 37,
			"title": "Keybase invites",
			"date_published": 1466856735.795,
			"body": "I've got a bunch of [Keybase ü°ï](https://keybase.io/) invites. The signup queue is > 25,000 people long right now, and an invite bypasses the line entirely.\n\n[Send me a message](/itskas.bit/) with your email address if you're interested.\n\nThe keybase pre-release sports the [Keybase filesystem ü°ï](https://keybase.io/docs/kbfs), KBFS, which is awesome.\n\n### **See also**\n* [KBFS messenger](?Post:38)"
		},
		{
			"post_id": 36,
			"title": "Ghost peers?",
			"date_published": 1463308252.058,
			"body": "A while ago I created a new zite by cloning [ZeroBlog](/blog.zeronetwork.bit/). I also created a bunch of ‚Äòempty‚Äô posts by clicking the _Add new post_ button, and finally I made sure that the Zeronet nodes on my VPSes were aware of the zite. That's all. I never announced the zite on [ZeroTalk](/talk.zeronetwork.bit/), [0List](/0list.bit/) or any of the search engines around here. Nor did I associate a _.bit_ domain with the zite or loaded the zite through any proxies.\n\nFor a few weeks now, the zite has pretty consistently showed up in [New ZeroHello](/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/) with ~20 peers, 5 of which are my own. This baffles me:\n\n1. Where did the remaining ~15 peers learn about the zite?\n2. Why on Earth would those ~15 peers keep seeding a zite with no contents?"
		},
		{
			"post_id": 35,
			"title": "Maj √§r v√§lkommen ‚ô´",
			"date_published": 1462006424.507,
			"body": "[![√Ñggavisan](https://img.youtube.com/vi/xgBJk2vGwQU/0.jpg)](https://youtu.be/xgBJk2vGwQU \"[YouTube] Folk & Rackare: √Ñggavisan\")\n\nI natt s√• √§r det [Valborgsnatt ü°ï](https://sv.wikipedia.org/wiki/Valborgsm%C3%A4ssoafton \"Valborgsm√§ssoafton\")\nMaj √§r v√§lkommen\nOch skogen den b√§r gr√∂ner hatt\nSommaren √§r ljuvlig f√∂r oss alla\n\nH√§r st√•r vi n√•gra piltar sm√•\nMaj √§r v√§lkommen\nS√• ge oss lite och l√•t oss sen g√•\nSommaren √§r ljuvlig f√∂r oss alla\n\nNu s√§tter vi maj i bondens v√§gg\nMaj √§r v√§lkommen\nS√• f√•r vi br√§nnevin och √§gg\nSommaren √§r ljuvlig f√∂r oss alla\n\nOch kan vi inga pengar f√•\nMaj √§r v√§lkommen\nS√• l√•t den svarta buteljen g√•\nSommaren √§r ljuvlig f√∂r oss alla\n\nH√§r inne bor en bonde sn√•l\nMaj √§r v√§lkommen\nHan √§ter sill och surer k√•l\nSommaren √§r ljuvlig f√∂r oss alla\n\nNu h√∂r vi mor p√• golvet g√•\nMaj √§r v√§lkommen\nHon letar √§gg i varje vr√•\nSommaren √§r ljuvlig f√∂r oss alla\n\nNu s√§tter vi maj i pigans s√§ng\nMaj √§r v√§lkommen\nOch akta dig v√§l f√∂r grannens dr√§ng\nSommaren √§r ljuvlig f√∂r oss alla\n\nN√§sta √•r n√§r vi komma igen\nMaj √§r v√§lkommen\nS√• st√•r v√§l vaggan vid pigans s√§ng\nSommaren √§r ljuvlig f√∂r oss alla\n\nV√•r spelman vi ej klandra m√•\nMaj √§r v√§lkommen\nF√∂r att han l√•ter str√•ken g√•\nSommaren √§r ljuvlig f√∂r oss alla\n\nNu h√∂r vi tr√§skorna skramla\nMaj √§r v√§lkommen\nOch v√•r speleman han ramla\nSommaren √§r ljuvlig f√∂r oss alla\n\nSommarn har vi i v√•r s√§ck\nMaj √§r v√§lkommen\nOch vintern har vi jagat v√§ck\nSommaren √§r ljuvlig f√∂r oss alla\n\nOch den som har men ej vill ge\nMaj √§r v√§lkommen\nDen √∂nskar vi √•t helvete!\nSommaren √§r ljuvlig f√∂r oss alla\n\nVi lyfter p√• v√•r gamla hatt\nMaj √§r v√§lkommen\nOch √∂nskar er alla tack och godnatt\nSommaren √§r ljuvlig f√∂r oss alla"
		},
		{
			"post_id": 34,
			"title": "Cymbalaria muralis",
			"date_published": 1461832774.559,
			"body": "![All alone and feeling blue](data/img/cymbalaria_muralis.jpg \"Cymbalaria muralis\")"
		},
		{
			"post_id": 33,
			"title": "Unknown species",
			"date_published": 1461619119.215,
			"body": "Help needed:\n\nHere's a snapshot from my windowsill. Is anyone here able to identify the species (heck, even the genus would be a step forward)?\n\n![Unknown species](data/img/unknown-species.jpg \"Does anyone here know the species of this plant?\")\n\n**Update**\nChances are we're talking about a [_Pfeiffera monacantha_ ü°ï](https://de.wikipedia.org/wiki/Lepismium_monacanthum) (syn. _Lepismium monacanthum_)."
		},
		{
			"post_id": 32,
			"title": "New zombie on the block: MORPHiS",
			"date_published": 1461400260.658,
			"body": "Back in October 2015 people on [/r/morphis ü°ï](https://www.reddit.com/r/morphis/) started wondering where Sam Maloney, the author of [MORPHiS ü°ï](https://morph.is/), had gone. Nobody had seen him on IRC or in /r/morphis since appr. September 10.\n\nA dmail from Sam dated October 2 explained that\n\n> As long as I am alive I will not be abandoning [MORPHiS], I promise you all this. I have continued to work on the net v2 code. After that I am convinced to do the forum (DDS), and then immediately following that will be concentration on all things that are ease of use stuff (with publishing tools as the primary focus).\n\nand continued\n\n> I am working on morphis as much as possible (it is what I do instead of listen to the prof in my CS courses :), but the non CS courses are a bit more work than I expected, as well, trying to network/socialize wastes/uses a lot of time.\n\n> I will be back to full time work on morphis for the winter and possibly spring breaks, and for sure come summer again I will be full-time plus on morphis again until next school year (if I choose to continue). I should have the net code done in maybe another month. Then the forum stuff will go pretty quick as it, unlike the net code, is much more just coding than complex designing.\n\n> I am open to any pull-requests as always.\n\nThen: nothing, and more nothing, until this morning ‚Äì after 226+ days of absence ‚Äì when I received an email from Sam with just these words:\n\n> Hi Klaus,\n\n> I am back.\n\nHeading back to /r/morphis I learned that not only did Sam [announce his resurrection ü°ï](https://www.reddit.com/r/morphis/comments/4g1lez/im_back/), he had also blatantly removed a bunch of comments from the darker side of MORPHiS' history that he obviously didn't like, such as this one from yours truly:\n\n[![It's difficult to stay optimistic](data/img/morphis-deleted-comments.png)](https://www.reddit.com/r/morphis/comments/485iz9/its_difficult_to_stay_optimistic/ \"Click picture to see thread on /r/morphis\")\n\nIf you browse the subreddit you can find several such examples.\n\nI'm sorry, Sam, but I cannot support your project anymore. You, the lead developer ‚Äì and sole person with commit privileges ‚Äì left ‚Äú[your] life's work, [your] purpose in life, [your] calling‚Äù without prior notice and kept the active userbase you had on IRC and Reddit in the dark for 7+ months, and then you suddently pop up like a jack-in-the-box and say ‚ÄúI'm back!‚Äù? I'm sorry, Sam, but that's not how it works for me. For how long are you gonna stay this time? And if you leave for ‚Äúthe next school year‚Äù, will you this time notify your users that you will be absent for the next 7+ months? And when it happens, will all development be suspended until you one day decide to come back again and continue where you left off? Sam, let me give you a free advice: don't piss on your users.\n\n**Update**\nI just received an email response from Sam Maloney, who is unamused:\n\n> You sound crazy. Your interpretation is that of a negative or crazy thought process. Seriously, that is really negative, I don't understand how what you said could alter someone like I remembered you to such a drastic change to what you are acting now. I hope you cheer up. Worse case you will be happier when we've all succeeded, and see you then!\n> PS. Didn't mean to delete anything. What I deleted looked like empty spamish stuff. You can see I left the negative stuff people were saying about me, so obviously I wasn't trying to censor anything. That interpeer paper I read when he first posted but there was no new developments, so was cleaning that out since it didn't belong here but in /r/p2p, would have left it if it had developed, would liked to work with him, etc.\n> Good luck!\n\n**Another update**\nIt seems Sam found his brains (or heart?) and the undelete button on Reddit: At least [one comment ü°ï](https://www.reddit.com/r/morphis/comments/485iz9/its_difficult_to_stay_optimistic/) has been undeleted.\n\nI have [previously mumbled](?Post:3 \"Morphis rising from the dead ‚Äì maybe\") about Morphis."
		},
		{
			"post_id": 31,
			"title": "Python + timezones = FSCK",
			"date_published": 1460897031.498,
			"body": "```py3\n>>> import pytz\n>>> pytz.timezone('Europe/Copenhagen')\n<DstTzInfo 'Europe/Copenhagen' CMT+0:50:00 STD>\n>>>\n```\nWTF?"
		},
		{
			"post_id": 30,
			"title": "Frigate flask",
			"date_published": 1460896704.194,
			"body": "I wonder where the designer got their inspiration for this thermo flask:\n\n![Frigate flask or thermo bird?](data/img/frigate-flask.jpg \"Frigate flask or thermo bird?\")"
		},
		{
			"post_id": 29,
			"title": "Toilet paper roll",
			"date_published": 1460565105.419,
			"body": "The original patent from 1891 for a toilet paper roll shows the correct rolling direction, in case you ever doubted.\n![Loo roll](data/img/loo-roll.jpg \"Loo roll\")\n"
		},
		{
			"post_id": 28,
			"title": "Map of emotions",
			"date_published": 1460235558.47,
			"body": "Musickiller's [full moon sickness](/blog.musickiller.bit/?Post:93) made me think: Wouldn't it be interesting if the emotions of every human being could be mapped in real-time, using e.g. the colours of [Plutchik's wheel of emotions ü°ï](https://en.wikipedia.org/wiki/Contrasting_and_categorization_of_emotions#Plutchik.27s_wheel_of_emotions)?\n\n![Plutchik's wheel of emotions](data/img/plutchik-wheel.svg \"Plutchik's wheel of emotions\")\n\nIf each human's emotions were completely uncorrelated to, say, other people's emotions or to external circumstances, the large picture should be a more or less uniform noise (some would say ‚Äúeigengrau‚Äù, although I personally see colours in the total absence of light). And if they were correlated, perhaps we would see waves of similar emotions sweeping over the globe. I would like to see such a map, wouldn't you?"
		},
		{
			"post_id": 27,
			"title": "Create secure passwords from CLI",
			"date_published": 1459877815.42,
			"body": "```sh\n# This alphabet avoids ambiguities like 1/l/I and O/0\nmyAlphabet='2-9A-HJ-NP-Za-km-z'\n# Default password length\nmyPasswordLength=24\n\ntr -dc -- \"${myAlphabet}\" < /dev/urandom \\\n| head -c \"${myPasswordLength}\" \\\n| xargs -r\n```\nDownload [genpass.sh](data/files/genpass.sh) and stick it in your $PATH.\n\n```markdown\n$ genpass.sh -h\nusage: genpass.sh [OPTIONS] [LENGTH]\n  positional argument:\n    LENGTH ............ create a password of length LENGTH (default: 24)\n  options are:\n    -h, --help ........ show this help text and exit\n    -v, --version ..... show version information and exit\n    -c, --copyright ... show copyright notice and exit\n$ genpass.sh 17\nekbEp2hRDfuafUjzP\n```"
		},
		{
			"post_id": 26,
			"title": "Authentication with Namecoin",
			"date_published": 1459525949.561,
			"body": "This entry is related to an earlier post about [authentication with NXT tokens](?Post:6), and is inspired by a question from [Music¬≠Killer](/blog.musickiller.bit/?Post:44). Only, perhaps, is it more relevant to Zeronet because it uses Namecoin, that is already a part of the Zeronet eco¬≠system, rather than NXT.\n\nThe Namecoin RPC API has two functions that compliment each other:\n\n**signmessage()**\n```markdown\nsignmessage ‚Äúnamecoinaddress‚Äù ‚Äúmessage‚Äù\n\nSign a message with the private key of an address\n\nArguments:\n1. ‚Äúnamecoinaddress‚Äù (string, required) The namecoin address to use for the private key.\n2. ‚Äúmessage‚Äù         (string, required) The message to create a signature of.\n\nResult:\n‚Äúsignature‚Äù          (string) The signature of the message encoded in base 64\n```\n\n**verifymessage()**\n```markdown\nverifymessage ‚Äúnamecoinaddress‚Äù ‚Äúsignature‚Äù ‚Äúmessage‚Äù\n\nVerify a signed message\n\nArguments:\n1. ‚Äúnamecoinaddress‚Äù (string, required) The namecoin address to use for the signature.\n2. ‚Äúsignature‚Äù       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\n3. ‚Äúmessage‚Äù         (string, required) The message that was signed.\n\nResult:\ntrue|false           (boolean) If the signature is verified or not.\n```\nLet's say our imaginary friend, [Abe Cyprian](/todayilearned.bit/?Post:8), wants to authenticate himself ‚Äì perhaps to a Zeronet ID provider (we're looking at you, Erkan üòâ). He then tells the website his Namecoin ID: `id/abcy`, and the website says ‚ÄúRight, sign this string: ‚Äòflawed slug lacking furnished toast level‚Äô‚Äù.\n\nAbe looks up the address of his Namecoin ID and signs the string:\n```sh\n$ namecoin-cli name_show id/abcy | jshon -e address\n\"MzPhLrYUuq6amMyRCBgfxYaG65NepAjDgW\"\n$ namecoin-cli signmessage MzPhLrYUuq6amMyRCBgfxYaG65NepAjDgW \"flawed slug lacking furnished toast level\"\nHHJ9UMbMB8c7YPc8ynvlu8EN3ny5J56PBne2Owc/n0Ubanuqh+TFbWOOe/vhZ+iXosR0jtdmjabnzzdLAQrumRs=\n```\nHe hands over the result to the website, who can then verify that the message has indeed been signed with Abe's private key:\n```sh\n$ namecoin-cli verifymessage MzPhLrYUuq6amMyRCBgfxYaG65NepAjDgW HHJ9UMbMB8c7YPc8ynvlu8EN3ny5J56PBne2Owc/n0Ubanuqh+TFbWOOe/vhZ+iXosR0jtdmjabnzzdLAQrumRs= \"flawed slug lacking furnished toast level\"\ntrue\n```\nMission accomplished."
		},
		{
			"post_id": 25,
			"title": "Note to self",
			"date_published": 1458920107.14,
			"body": "When creating a new blog, I should learn to reserve a handful of entries for such things as a TOC, a FAQ, or a license‚Ä¶"
		},
		{
			"post_id": 24,
			"title": "Frequently asked questions",
			"date_published": 1458919738.919,
			"body": "None yet, but feel free to [drop me a line](/mail.zeronetwork.bit/?to=ks)."
		},
		{
			"post_id": 23,
			"title": "Colophon",
			"date_published": 1458919623.264,
			"body": "**Title**\n&nbsp;&nbsp;&nbsp;&nbsp;Œöappa Œ£igma\n\n**Publisher**\n&nbsp;&nbsp;&nbsp;&nbsp;[id/kas](/itskas.bit/)\n\n**Editor**\n&nbsp;&nbsp;&nbsp;&nbsp;Idem\n\n**Language**\n&nbsp;&nbsp;&nbsp;&nbsp;English\n\n**Price**\n&nbsp;&nbsp;&nbsp;&nbsp;Gratis\n\n**URI**\n&nbsp;&nbsp;&nbsp;&nbsp;[kappasigma.bit](/kappasigma.bit/)\n\n**Character set**\n&nbsp;&nbsp;&nbsp;&nbsp;UTF-8\n\n**License**\n&nbsp;&nbsp;&nbsp;&nbsp;[CC BY-SA 4.0 ü°ï](https://creativecommons.org/licenses/by-sa/4.0/ \"Creative Commons Attribution-ShareAlike 4.0 International\")"
		},
		{
			"post_id": 22,
			"title": "Happy Holi!",
			"date_published": 1458820088.107,
			"body": "![Happy Holi 2016!](data/img/happy-holi.jpg \"Happy Holi 2016!\")"
		},
		{
			"post_id": 21,
			"title": "Twistniks on Zeronet",
			"date_published": 1458765535.126,
			"body": "Speaking of [Twister](?Post:13): There are ~~at least five~~ quite a few twistniks that I know of here on Zeronet (darn, that this flavour of markdown is unaware of definition lists!):\n* @b1eeder\n  * [keed](/1Pvxkfj3MCrk51XvUEhhXCkCFTKw28i5ot/)\n* @deafboy\n  * ‚ÄúI don't have any zite. I'm just one of the non-creative content-consuming types :)‚Äù\n* @erkan_yilmaz\n  * [Erkan@ ZeroBlog](/zeroblog.bit/)\n* @jpfox\n  * [jp.fox ZeroBlog](/172n1h3eg2X2LJEycStpVeFExDPHPwiAC5/)\n* @kseistrup\n  * [Œöappa Œ£igma](/kappasigma.bit/)\n* @meidan\n  * [// 2084](/1JubdWmm1QxfFwVAUSKo5rxLUUcuooPndu/)\n* @musickillerrus\n  * [Musickiller's Blog](/blog.musickiller.bit/)\n* @ulrichard\n  * [Richi's news](/ulrichard.bit/)\n\nAnd I have a feeling that the guy behind [Pen Pen](/penpen.bit/) is also from  Twister ‚Äì but who? @chinanet?\n\nDo you know other twistniks on Zeronet? Please let me know in the comments (or [drop me a line](/mail.zeronetwork.bit/?to=ks)).\n\nPS: If any of you are still using Twister, perhaps you would announce this post on Twister so that other twistniks can easily find someone they know around here (and decide whether they want to interact or not)?\n\nCheers!"
		},
		{
			"post_id": 20,
			"title": "Twtxt, Zeronet, microblogging",
			"date_published": 1458716355.531,
			"body": "### Twtxt ‚Äì a minimalist microblogging service for hackers\n\nIn the last couple of months I've been tinkering with the [twtxt ü°ï](https://github.com/buckket/twtxt) micro¬≠blogging system, which is basically a cross¬≠breed between a unix ~/.plan file and an Atom/RSS feed. In all simplicity: An UTF-8 encoded plain text file where each line consists of a [RFC 3339 ü°ï](https://www.ietf.org/rfc/rfc3339.txt) formatted time¬≠stamp and a TAB (although, since there are no blanks in the time¬≠stamp, it might as well be defined as a SPACE), followed by up to 140 characters of wisdom (why micro¬≠blogging developers seem hell¬≠bent on restricting their users to a scrawny 140 characters is a different kettle of fish). Here are a few lines from a real twtxt.txt file:\n\n```markdown\n2016-02-09T19:55:40Z\tFirst post. Let's see if this works‚Ä¶\n2016-02-09T20:24:50Z\tSomething's waiting in the bushes of love ‚åò https://youtu.be/RySHDUU2juM #BLR #StarWars\n2016-02-10T00:41:14Z\tWouldn't it be more efficient if #twtxt clients were caching the twtxt.txt file and only downloaded it when modified?\n2016-02-10T03:24:04Z\tWorking on TwTxtGet that uses If-Modified-Since to download only files that have changed.\n2016-02-10T11:55:23Z\tWhile I acknowledge that this is microblogging, I still don't understand why we have to restrict ourselves to max 140 chars.\n```\n\nThe idea is now that people who follow a given twtxt'er download their twtxt file and displays its contents on the terminal along with lines from other such twtxt files, ordered by timestamp. This is almost as simple as it can be, and everyone can join the game. Use the standard client, or use simple CLI tools like `echo(1)` and `curl(1)`, that's all it takes. Here's how it looks in the client I currently use:\n\n[![Boring twtxt example](https://ipfs.pics/ipfs/QmRMjTtWA4qPLKVsUFzBXVLph6mYLM6ybbz2k9sxbDxjcT)](https://ipfs.pics/QmRMjTtWA4qPLKVsUFzBXVLph6mYLM6ybbz2k9sxbDxjcT)\n\nWhile this is KISS at its best, it's also a horrible idea. It doesn't scale, and never will: Every follower has to download the entire twtxt file every time they're refreshing their timeline ‚Äî even if only one single line has been added. It doesn't take much imagination to see where this will go when your twtxt file grows to hundreds of kB (my own is just over 50 kB as we're speaking) and you have a couple of hundreds of followers who want to refresh their timeline every few minutes (or seconds ‚Äì I'm looking at you, @draco¬≠blue!).\n\n### Enter Zeronet\n\nBut hey, Zeronet knows how to move files about to your followers when there's an update, so why don't I just dump my twtxt file into the zite root and sign and publish? Problem [partly] solved! We still have to download the entire file for each update, but a follower can query each twtxt every few seconds if they so wish, because all twtxt files now resides on 127.0.0.1 instead of on a remote servers. So even just hosting twtxt files on Zeronet would be an improvement. But couldn't we take this even further?\n\nFirstly, we could associate each twtxt'er with his zite address. So instead of @ks I would be @1KdF3z61jUqqcfLnufJJs8MbuHwfQwjS89 (or we could cut it short and call me @1KdF3z6), or I could put a\n```json\n  {\"nickname\": \"ks\"}\n```\nin my zite's content.json file, the same way we can now have a \"domain\" field in said file, and everyone would know that @ks is the guy who owns 1KdF3z6[‚Ä¶]. This would also solve the problem on name clashing when more than one micro¬≠blogger wants the same nick.\n\nSecondly, we could add a nice web interface √† la [0rc](/1CjR14fofbRJ54oj8A7rAfWpzpLawdP5uc/), that shows the combined time¬≠line for me and those I follow, but with a text input field that is only active for me ‚Äì the zite owner ‚Äì much the same way that ‚ÄúAdd new post‚Äù is only active for me on my zero¬≠blog. My posts should probably also reside in data/data.json (and a corresponding .db file) along with the twtxt.txt aggregate.\n\nIs this how we could implement a micro¬≠blogging system on Zeronet? It doesn't have a ‚Äúdirect messages‚Äù feature, but would it be difficult to build in some¬≠thing Zeromail like? And while we're at it, could each of these micro¬≠blogging instances be used as an ID provider in its own right so that we don't have to rely on the ZeroID and ZeroVerse ID providers? I don't speak js, so I have no idea, but please let me know what you think.\n\nCheers."
		},
		{
			"post_id": 19,
			"title": "Bitcoin QR Code Generator",
			"date_published": 1458638818.113,
			"body": "In the series of [unhosted web apps](?Post:5), please meet\n* [Bitcoin QR Code Generator](/bitcoinqrcode.bit/) ([1BTCQR6n6WwgaqJiy8iWabVrDGXdj79KEH](/1BTCQR6n6WwgaqJiy8iWabVrDGXdj79KEH/))"
		},
		{
			"post_id": 18,
			"title": "Honey, I shrunk the phone",
			"date_published": 1458587613.996,
			"body": "A friend sent me a link to the new [iPhone SE ü°ï](https://www.apple.com/iphone-se/). While I don't use Apple products, the good news is that they have actually shrunk the phone to 4‚Ä≥:\n\n![iPhone SE weight and dimensions](data/img/iphone-se.png \"Phone SE weight and dimensions\")\nSo with a bit of luck, small phones is the new black by the time I need a new mobile. üòä\n"
		},
		{
			"post_id": 17,
			"title": "Please meet ü°ï",
			"date_published": 1458584362.537,
			"body": "With the exception of pictures, all links to external sites are now marked with a [NORTH EAST SANS-SERIF ARROW ü°ï](http://www.unicode.org/charts/beta/nameslist/n_1F800.html#1F855) (U+1F855). I actually wanted to use the same symbol as Wikipedia, but reading their CSS turned my brain into guacamole‚Ä¶\n\nSome pictures on this site are stored as site data, while other are hosted on e.g. [IPFS.pics ü°ï](https://ipfs.pics/). I'm still trying to decide what to do with the latter.\n\nHow do you handle external links and pictures on your zite?"
		},
		{
			"post_id": 15,
			"title": "Listen, learn, and behave!",
			"date_published": 1458380299.131,
			"body": "Just found [this note ü°ï]( https://ipfs.pics/QmREKP2ieFSYRW6g8Tb1hrJ3j9uXSHb7Pfh1hKKHUijGc2) between the pages of a pre-loved book:\n[![\"Listen, learn, and BEHAVE!\"](https://ipfs.pics/ipfs/QmREKP2ieFSYRW6g8Tb1hrJ3j9uXSHb7Pfh1hKKHUijGc2)](https://ipfs.pics/QmREKP2ieFSYRW6g8Tb1hrJ3j9uXSHb7Pfh1hKKHUijGc2 \"Listen, learn, and BEHAVE!\")\nI wish I knew the background story‚Ä¶"
		},
		{
			"post_id": 14,
			"title": "BLR: Ted Cruz üé•",
			"date_published": 1458317396.507,
			"body": "[A bad lip reading ü°ï](https://youtu.be/v75wCTMZoSY)\n[![Ted Cruz for president!](https://img.youtube.com/vi/v75wCTMZoSY/0.jpg)](https://youtu.be/v75wCTMZoSY)\n\nThe guy behind BLR sure knows how to make politicians look like idiots! üòÇ"
		},
		{
			"post_id": 13,
			"title": "Goodbye, Twister!",
			"date_published": 1458313822.637,
			"body": "[Erkan Yƒ±lmaz](/zeroblog.bit/?Post:35) and [MusicKiller](/blog.musickiller.bit/?Post:64) have recently posted a couple of short notices about [Twister ü°ï](http://twister.net.co/) ‚Äî the peer-to-peer microblogging platform. Here's mine.\n\nFor those who are unacquainted with Twister, here's a screenshot of the Twister timeline as it would look with [@myleneb's ‚ÄúNin‚Äù theme ü°ï](https://github.com/myleneb/theme_nin) and a French locale:\n\n[![Twister in French with Theme Nin](https://ipfs.pics/ipfs/QmSKz4kYN9duZpbh232YszKm18TEiB8Uw5WDLE9VfEuqMT)](https://ipfs.pics/QmSKz4kYN9duZpbh232YszKm18TEiB8Uw5WDLE9VfEuqMT)\n\nPretty sleek, huh? So why did I leave? The three main reasons were\n\n1. For unknown reasons twists (Twister lingo for ‚Äútweets‚Äù) were limited to 140 characters, which was much too restrictive for me. And although this was by far the most common complaint about Twister, the limitation remained for the entire 26+ months that I was active on Twister. I never quite understood why we had to be ‚ÄúTwitter compatible‚Äù here ‚Äî the ‚Äúprinciple of the lowest denominator‚Äù hardly benefits anyone. And another funny thing: The 140 characters were counted as unicode characters, not bytes, so an exotic alphabet could have twists up to 4 √ó 140 = 560 bytes, while the poor USAnians would have to make do with 140 bytes. Why? I have no idea.\n2. Twister doesn't have a firehose ‚Äî a global timeline. So newcomers were left with an empty, if pretty, timeline and no idea how to find fellow twisters to follow. Major bummer.\n3. I felt that development had stagnated. While there were bugfixes here and there, and while people authored nice themes (like ‚ÄúNin‚Äù above) and markdown for rudimentary styling, no attempts were done to address the two first flaws.\n\nHowever, Twister does have a very friendly, if small, userbase. And even with the two first limitations mentioned above, Twister works surprisingly well. It has public and private (encrypted) messaging, and also group messaging, and messages propagate quickly through the DHT network. So if you can live with the character limitation I encourage you to take a closer look at Twister.\n\nBest of luck, Twister ‚Äî I enjoyed the time we had together!"
		},
		{
			"post_id": 12,
			"title": "Raghu Dixit: ‚ÄúAmbar‚Äù üéù",
			"date_published": 1458309248.108,
			"body": "[‚ÄúAmbar‚Äù ü°ï](https://youtu.be/vCoi_p7drek)\n[![Raghu Dixit: Ambar](https://img.youtube.com/vi/vCoi_p7drek/0.jpg)](https://youtu.be/vCoi_p7drek)\n\nAmbar pe milte hai kadamon ke nishaan tere hi har shaam\nKhidki pe likhe koi os ki boondon se tera naam\nNa khelo sanam tere hi hain hum\nDhadkaan ye mere dil ki pooche re tere dil se\nKi sach much kya hai tu duniya mein\n\nAmbar pe milte hai kadamon ke nishaan ter hi har shaam\nKhidki pe likhe koi os ki boondon se tera naam\n\nLikha hai raeth pe pyar ka nagma lehron se sunle kabhi\nChipe hain seepiyon mein khol dhadkane aake tu chunle kabhi\nJab aaoge tum tab gaayenge hum sargam ye saje tere sang sang\nIs khaab ke sach karke hi jaana re\nDhadkan ye mere dil ki pooche re tere dil se\nKi sach much kya hai tu duniya mein\n\nAmbar pe milte hai kadamon ke nishaan ter hi har shaam\nKhidki pe likhe koi os ki boondon se tera naam\n\nPalkon ke dhagon se baandh ke ghunguroo nainan bitaaye main rain\nTinka tinka peesi raina madhhosh hai mera chain\nJab aaoge tum tab gaayenge hum sargam ye saje tere sang sang\nIs khaab ko sach karke hi jaana re\nDhadkan ye mere dil ki, pooche re tere dil se\nKi sach much kya hai tu duniya mein\n\nAmbar pe milte hai kadamon ke nsihaan tere hi har shaam\nKidki pe likhe koi os ki boondon se tera naam"
		},
		{
			"post_id": 11,
			"title": "Namecoin fail",
			"date_published": 1458290388.03,
			"body": "More than 11 hours ago I sent at `name_new` transaction for a domain registration on the namecoin blockchain. As I'm writing this the transaction still hasn't got even a single confirmation. How is that?\n\nI'm running the latest [namecoin-core ü°ï](https://github.com/namecoin/namecoin-core), the blockchain is up-to-date, and `namecoind` has 12 peers (4 ingoing and 8 outgoing).\n\nThis is clearly unacceptable.\n\nSo what went wrong? Namecoin got to choose the transaction fee. Should I have intervened? Is there anything else I could have done to speed things up?"
		},
		{
			"post_id": 10,
			"title": "ZeroNet behind reverse proxy ‚Äì help! (solved)",
			"date_published": 1458240450.121,
			"body": "I want to put ZeroNet behind a reverse proxy so that I can access ZeroNet from the WAN side and from devices that don't run ZeroNet.\n\nI use the [Caddy ü°ï](https://caddyserver.com/) webserver and have obtained an SSL certificate from [Let's Encrypt ü°ï](https://letsencrypt.org/).\n\nThe relevant part of Caddy's [configuration file ü°ï](https://caddyserver.com/docs/proxy) looks like this:\n```perl\nzeronet.example.com {\n  proxy / http://127.0.0.1:43110 {\n    proxy_header Host {host}\n    proxy_header X-Forwarded-For {remote}\n  }\n  proxy /Websocket http://127.0.0.1:43110 {\n    websocket\n    proxy_header Host {host}\n    proxy_header X-Forwarded-For {remote}\n  }\n}\n```\nUnfortunately this doesn't work: Caddy logs a ‚Äú400 Bad request‚Äù when attempting to `GET /Websocket?wrapper_key=397a‚Ä¶`, and ZeroNet display an error in the upper right corner, saying ‚ÄúConnection with UiServer Websocket was lost.‚Äù\n\nAnyone?\n\n**Update 2016-08-31:**\n\n@keithirwin [found](/Talk.ZeroNetwork.bit/?Topic:1_13G7h5b1e4Ch1vBfWvA4Nuttaqa8cf91W4) this simple solution:\n```perl\nzeronet.example.com {\n  proxy / http://127.0.0.1:43110 {\n    transparent\n  }\n  proxy /Websocket http://127.0.0.1:43110 {\n    websocket\n  }\n}\n```\nYay!\n"
		},
		{
			"post_id": 9,
			"title": "Grass is so happy",
			"date_published": 1458230123.976,
			"body": "[![Grass is so happy](https://ipfs.pics/ipfs/QmXVMGhLwmwe4qriaf7tuxPyCHV58Hsn8s9nXTtuzWr1AC)](https://ipfs.pics/QmXVMGhLwmwe4qriaf7tuxPyCHV58Hsn8s9nXTtuzWr1AC)"
		},
		{
			"post_id": 8,
			"title": "BIP32 Generator",
			"date_published": 1458225590.406,
			"body": "While not found on [Unhosted](/kappasigma.bit/?Post:5), here's another app that seems to go well with ZeroNet ‚Äî a brainwallet-based implementation for [BIP0032 ü°ï](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki) deterministic wallet generation:\n* [BIP32 Generator](/bip32gen.bit/) ([1BiP32SwyooMNtntKmX2NEF7fn37rpxje6](/1BiP32SwyooMNtntKmX2NEF7fn37rpxje6))\n\nUse at your own discretion.\n"
		},
		{
			"post_id": 7,
			"title": "A broken TV is a good TV",
			"date_published": 1458157386.941,
			"body": "[![A Broken TV is a good TV](https://ipfs.pics/ipfs/QmW9rLPBY4oEL3Pi9oM75seFjrwj72e8b2KHQinw6HJe7y)](https://ipfs.pics/QmW9rLPBY4oEL3Pi9oM75seFjrwj72e8b2KHQinw6HJe7y)\n"
		},
		{
			"post_id": 6,
			"title": "Authentication with NXT tokens",
			"date_published": 1457902143.694,
			"body": "Musickiller [asked](/blog.musickiller.bit/?Post:44) if crypto currencies could be used for authentication ‚Äî e.g., by a website ‚Äî and I answered that [NXT ü°ï](https://en.wikipedia.org/wiki/Nxt) already has such a system in place with its [token generation and verification ü°ï](http://nxtwiki.org/wiki/Token).\n\nHere's how it could work:\n\nLet's say that Musickiller has\n* NXT account NXT-MKRU-PW4A-DZHU-B7MQK\n* NXT alias mkru\n\n[![Account info for MK](https://ipfs.pics/ipfs/QmR6Y29nAUrEfWYMyE23fBzfyAY47PQLqxEggYrswuRq1u)](https://ipfs.pics/QmR6Y29nAUrEfWYMyE23fBzfyAY47PQLqxEggYrswuRq1u)\n\nMusickiller wants to log in at a website, and he provides either his account address or his alias as ‚Äòusername‚Äô. If he provides his alias, the website can get his account address from the API:\n```sh\n$ curl -s 'http://localhost:7876/nxt?requestType=getAlias&aliasName=mkru'\n```\n\nIn reponse we get this JSON object:\n```json\n{\n  \"account\": \"11014227641057789690\",\n  \"accountRS\": \"NXT-MKRU-PW4A-DZHU-B7MQK\",\n  \"alias\": \"9656350357611104218\",\n  \"aliasName\": \"mkru\",\n  \"aliasURI\": \"acct:nxt-mkru-pw4a-dzhu-b7mqk@nxt\",\n  \"requestProcessingTime\": 0,\n  \"timestamp\": 72590478\n}\n```\n\nThe website takes a note of the current time and says ‚ÄúPlease create an NXT token from the following randomly generated phrase: vinyl muster smack lakeshore discomfort juiced‚Äù, and Musickiller does:\n\n[![MK creates a web token](https://ipfs.pics/ipfs/QmRgZjyPkPjTygDy2whEXUEwpP6dnxCQVWmHgeU54GGtVm)](https://ipfs.pics/QmRgZjyPkPjTygDy2whEXUEwpP6dnxCQVWmHgeU54GGtVm)\n\nThe website can now verify both that the token is created with MK's account and that it is valid (i.e., generated from the data ‚Äúvinyl muster smack lakeshore discomfort juiced‚Äù):\n```sh\n$ curl -s 'http://localhost:7876/nxt?requestType=decodeToken&website=vinyl+muster+smack+lakeshore+discomfort+juiced&token=4ojtr7p392tqc2dsgkptc5i1jm23idtbrt5eh2vnqm3un3emaejegai2gstbhmg4d3aieh512hcq819psqneahkf6rhqesu0din96tibtvsgfacvmkbi7u8f1gs4rvjug82q4bdockjkfo7c476u6higla11jfn0'\n```\n\nAgain we recive a JSON object in response:\n```json\n{\n  \"account\": \"11014227641057789690\",\n  \"accountRS\": \"NXT-MKRU-PW4A-DZHU-B7MQK\",\n  \"requestProcessingTime\": 1,\n  \"timestamp\": 72591080,\n  \"valid\": true\n}\n```\nshowing the account number, the Reed-Solomon encoded address, a timestamp and a confirmation that the token is valid.\n\nConclusion: MK has, by generating a web token, showed that he has access to the account NXT-MKRU-PW4A-DZHU-B7MQK, and the website can easily verify that the token indeed belongs to MK (or someone who knows the password of his account).\n\nFree OTP for the masses!\n\n**See also**\n* [Authentication with Namecoin](?Post:26)"
		},
		{
			"post_id": 5,
			"title": "Unhosted web apps",
			"date_published": 1457797582,
			"body": "[Unhosted ü°ï](http://unhosted.org/) lists a score of [web apps ü°ï](http://unhosted.org/apps/) under the tag line ‚Äúfreedom from web 2.0's monopoly platforms‚Äù. Will they run on ZeroNet? Not all, but here's one that does:\n* [myLock](/mylock.bit) ([drawbacks ü°ï](https://github.com/diafygi/mylock#user-content-drawbacks))\n\nSee also:\n* [BIP32 Generator](?Post:8) / [bip32gen.bit](/bip32gen.bit/)\n* [Bitcoin QR code generator](?Post:19) / [bitcoinqrcode.bit](/bitcoinqrcode.bit/)\n"
		},
		{
			"post_id": 4,
			"title": "ZeroNet on PyPy 5.0: not yet",
			"date_published": 1457784189.524,
			"body": "Running ZeroNet on PyPy 4.0.1 [didn't go so well](/kappasigma.bit/?Post:2). Today PyPy 5.0 reached ArchLinux, so I decided to try again.\n\nResult? Same sh*t: An SQL locking error and an msgpack exception.\n\nHowever, the [benchmark](/Benchmark) looks promising, number-crunching-wise, even if it didn't make it all the way through:\n```markdown\nBenchmarking ZeroNet 0.3.6 (rev989) Python 2.7.10 (246c9cf22037, Mar 11 2016, 12:05:36) [PyPy 5.0.0 with GCC 5.3.0] on: linux2...\n\nCryptBitcoin:\n- hdPrivatekey x 10..........0.225s [x3.11: WOW]\n- sign x 10..........0.085s [x4.10: Insane!!]\n- openssl verify x 100..........0.359s [x1.03: OK]\n- pure-python verify x 10..........0.301s [x5.32: Insane!!]\n\nCryptHash:\n- sha256 5M x 10..........0.305s [x1.96: Fast]\n- sha512 5M x 10..........0.247s [x2.43: Fast]\n- os.urandom(256) x 100 000..........1.913s [x0.34: Ehh]\n\nMsgpack:\n- pack 5K x 10 000..........\n! Error: '\\x84\\xa3int\\xce@\\x00\\x00\\x00\\xa5float\\xcb@\\xc8\\x1c\\xd6\\xe61\\xf8\\xa1\\xa4text\\xda\\x14\\x00hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello\\xa6binary\\xda\\x01\\x00fqv\\xf0\\x1a\"e\\x10,\\xbe\\x9cT\\x9e(\\xa5]u\\x072C\\x8c\\x15\\xa2\\xa8\\x93Sw)\\x19\\x02\\xdd\\t\\xfb\\xf67\\x88\\xd9\\xee\\x86\\xa1\\xe4\\xb6,\\xc6\\x14\\xbb\\xd7$z\\x1d\\xb2\\xda\\x85\\xf5\\xa0\\x97^\\x01*\\xaf\\xd3\\xb0!\\xb7\\x9d\\xea\\x89\\xbbh8\\xa1\"\\xa7]e(@\\xa2\\xa5g\\xb7[\\xae\\x8eE\\xc2\\x9fL\\xb6s\\x19\\x19\\r\\xc8\\x04S\\xd0N\\xe4]?/\\x01\\xea\\xf6\\xec\\xd1\\xb3\\xc2\\x91\\x86\\xd7\\xf4K\\xdf\\xc2lV\\xf4\\xe8\\x80\\xfc\\x8ep\\xbb\\x82\\xb3\\x86\\x98F\\x1c\\xecS\\xc8\\x15\\xcf\\xdc\\xf1\\xed\\xfc\\xd8\\x18r\\xf9\\x80\\x0f\\xfa\\x8cO\\x97(\\x0b]\\xf1\\xdd\\r\\xe7\\xbf\\xed\\x06\\xbd\\x1b?\\xc5\\xa0\\xd7a\\x82\\xf3\\xa8\\xe6@\\xf3\\ri\\xa1\\xb10\\xf6\\xd4W\\xbc\\x86\\x1a\\xbb\\xfd\\x94!bS\\xdb\\xaeM\\x92\\x00#\\x0b\\xf7\\xad\\xe9\\xc2\\x8e\\x86\\xbfi![%\\xd31]\\xc6\\xfc2\\xc9\\xda\\xc6v\\x82P\\xcc\\xa9\\xea\\xb9\\xff\\xf6\\xc8\\x17iD\\xcf\\xf3\\xeeI\\x04\\xe9\\xa1\\x19\\xbb\\x01\\x92\\xf5nn4K\\xf8\\xbb\\xc6\\x17e>\\xa7 \\xbbv'\n!=\n'\\x84\\xa3int\\xce@\\x00\\x00\\x00\\xa4text\\xda\\x14\\x00hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello\\xa5float\\xcb@\\xc8\\x1c\\xd6\\xe61\\xf8\\xa1\\xa6binary\\xda\\x01\\x00fqv\\xf0\\x1a\"e\\x10,\\xbe\\x9cT\\x9e(\\xa5]u\\x072C\\x8c\\x15\\xa2\\xa8\\x93Sw)\\x19\\x02\\xdd\\t\\xfb\\xf67\\x88\\xd9\\xee\\x86\\xa1\\xe4\\xb6,\\xc6\\x14\\xbb\\xd7$z\\x1d\\xb2\\xda\\x85\\xf5\\xa0\\x97^\\x01*\\xaf\\xd3\\xb0!\\xb7\\x9d\\xea\\x89\\xbbh8\\xa1\"\\xa7]e(@\\xa2\\xa5g\\xb7[\\xae\\x8eE\\xc2\\x9fL\\xb6s\\x19\\x19\\r\\xc8\\x04S\\xd0N\\xe4]?/\\x01\\xea\\xf6\\xec\\xd1\\xb3\\xc2\\x91\\x86\\xd7\\xf4K\\xdf\\xc2lV\\xf4\\xe8\\x80\\xfc\\x8ep\\xbb\\x82\\xb3\\x86\\x98F\\x1c\\xecS\\xc8\\x15\\xcf\\xdc\\xf1\\xed\\xfc\\xd8\\x18r\\xf9\\x80\\x0f\\xfa\\x8cO\\x97(\\x0b]\\xf1\\xdd\\r\\xe7\\xbf\\xed\\x06\\xbd\\x1b?\\xc5\\xa0\\xd7a\\x82\\xf3\\xa8\\xe6@\\xf3\\ri\\xa1\\xb10\\xf6\\xd4W\\xbc\\x86\\x1a\\xbb\\xfd\\x94!bS\\xdb\\xaeM\\x92\\x00#\\x0b\\xf7\\xad\\xe9\\xc2\\x8e\\x86\\xbfi![%\\xd31]\\xc6\\xfc2\\xc9\\xda\\xc6v\\x82P\\xcc\\xa9\\xea\\xb9\\xff\\xf6\\xc8\\x17iD\\xcf\\xf3\\xeeI\\x04\\xe9\\xa1\\x19\\xbb\\x01\\x92\\xf5nn4K\\xf8\\xbb\\xc6\\x17e>\\xa7 \\xbbv'\n0.143s [x5.46: Insane!!]\n- unpack 5K x 10 000..........0.161s [x7.46: Insane!!]\n- streaming unpack 5K x 10 000..........0.087s [x16.16: Insane!!]\n\nDb:\n- Open x 10\n! Error: cannot commit transaction - SQL statements in progress\n0.012s [x10.81: Insane!!]\n```\nCompare this to the results on vanilla Python 2.7.11 on the same machine:\n```markdown\nBenchmarking ZeroNet 0.3.6 (rev989) Python 2.7.11 (default, Mar 3 2016, 11:00:04) [GCC 5.3.0] on: linux2...\n\nCryptBitcoin:\n- hdPrivatekey x 10..........0.267s [x2.62: WOW]\n- sign x 10..........0.171s [x2.05: Fast]\n- openssl verify x 100..........0.157s [x2.36: Fast]\n- pure-python verify x 10..........0.676s [x2.37: Fast]\n\nCryptHash:\n- sha256 5M x 10..........0.630s [x0.95: OK]\n- sha512 5M x 10..........0.372s [x1.61: Fine]\n- os.urandom(256) x 100 000..........2.400s [x0.27: Sloooow]\n\nMsgpack:\n- pack 5K x 10 000..........0.569s [x1.37: Fine]\n- unpack 5K x 10 000..........0.940s [x1.28: Fine]\n- streaming unpack 5K x 10 000..........0.821s [x1.70: Fast]\n\nDb:\n- Open x 10..........0.137s [x0.95: OK]\n- Insert x 10 x 1000..........1.476s [x0.68: Goodish]\n- Buffered insert x 100 x 100..........1.295s [x1.00: OK]\n- Total rows in db: 20000\n- Indexed query x 1000..........0.193s [x1.29: Fine]\n- Not indexed query x 100..........0.544s [x1.10: OK]\n- Like query x 100..........0.956s [x1.88: Fast]\n\nDone. Total: 9.86s\n```\n**Update (2016-04-23)**:\nStatus for PyPy 5.1: same sh*t."
		},
		{
			"post_id": 3,
			"title": "Morphis rising from the dead ‚Äî maybe",
			"date_published": 1457780832.505,
			"body": "Yesterday I was contacted by a guy who calls himself Rehan Basson ([G+ ü°ï](https://plus.google.com/112700464517935717021/about)), who asked:\n> I am writing in regards to Morphis\n> I see you provided some contributions to the project, what was the scope of your involvement if I may ask?\n\nAfter a short email exchange in which I asked the guy to identify himself and tell me where he found my contributions, I received an email that read:\n> We are relaunching it all in a big way, we are actually integrating a couple of different and powerful products to release a full stack platform. It is taking more time than we anticipated bit we have also expanded potential significantly.\n\nSo is [Morphis ü°ï](https://morph.is/) actually rising from the dead? It would seem so. However, 5+ months ago Morphis' author, Sam Maloney, dropped out of IRC ‚Äî where he was very active ‚Äî without prior notice, and hardly anyone have heard from him since, nor has Morphis' git repo been updated, so I'm not going to hold my breath.\n\nIf someone has more information than mentioned here, please chime in below.\n\nSee also [/r/morphis ü°ï](https://www.reddit.com/r/morphis/).\n\n**Update**\nSee also [this post](?Post:32 \"New zombie on the block: MORPHiS\").\n"
		},
		{
			"post_id": 2,
			"title": "ZeroNet on PyPy?",
			"date_published": 1457718479.16,
			"body": "TL;DR: Not yet‚Ä¶ (see also [‚ÄúBetteridge's law of headlines‚Äù ü°ï](https://en.wikipedia.org/wiki/Betteridge%27s_law_of_headlines))\n\nI ran ‚Äî or rather attempted to run ‚Äî ZeroNet on [PyPy 4.0.1 ü°ï](http://pypy.org/) in a virtual environment:\n\n```sh\n$ # Get a fresh copy of ZeroNet\n$ git clone https://github.com/HelloZeroNet/ZeroNet\n$ cd ZeroNet\n$ # Install the msgpack-python and gevent modules\n$ # (We already had a working copy of pip and virtualenv)\n$ /opt/pypy/bin/pip install -r requirements.txt\n$ # Create a virtual environment\n$ /opt/pypy/bin/virtualenv venv\n$ source venv/bin/activate\n(venv) $ python zeronet.py\n- Starting ZeroNet...\n[18:36:04] - OpenSSL loaded, version: 01000207F\n[18:36:05] - Version: 0.3.6 r989, Python 2.7.10 (5f8302b8bf9f, Mar 04 2016, 08:29:09)\n[PyPy 4.0.1 with GCC 5.3.0], Gevent: 1.1.0\n[18:36:05] - Creating FileServer....\n[18:36:05] TorManager Tor controller connect error: error: [Errno 111] Connection refused in TorManager.py line 151 > _socket2.py line 228\n[18:36:05] - Creating UiServer....\n[18:36:05] Site:1Name2..hM9F Content.json not exist: data/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F/content.json\n[18:36:05] - Removing old SSL certs...\n[18:36:05] - Starting servers....\n[18:36:05] Ui.UiServer --------------------------------------\n[18:36:05] Ui.UiServer Web interface: http://127.0.0.1:43110/\n[18:36:05] Ui.UiServer --------------------------------------\n[18:36:05] Site:1Name2..hM9F Content.json not exist: data/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F/content.json\n[18:36:06] FileServer Checking port 15441 using portchecker.co...\n[18:36:07] FileServer [OK :)] Port open: Port 15441 is open.\n[18:36:10] Ui.UiServer Wrapper key not found: 2948bfa27342bcc0fdabed5de2b53b9eafbce2a2ae5e7db650ab4d8c5bde9c28\n[18:36:22] Db:TestDb Table keyvalue outdated...version: False need: 1, rebuilding...\n[18:36:22] Db:TestDb Table json outdated...version: 0 need: 1, rebuilding...\n[18:36:22] Db:TestDb Table test outdated...version: 0 need: 1426195822, rebuilding...\n[18:36:27] - UiWSGIHandler error: OperationalError: database is locked in UiServer.py line 39 > pywsgi.py line 871 > pywsgi.py line 860 > StatsPlugin.py line 547 > Db.py line 119 > Db.py line 89 > Db.py line 60 > DbCursor.py line 53 > _sqlite3.py line 700 > _sqlite3.py line 857 > _sqlite3.py line 795 > _sqlite3.py line 181 > _sqlite3.py line 1026\n```\nAnd this is basically where the adventure ended. An attempt to run [the benchmark](/Benchmark) showed an `msgpack` exception and a complaint about the locked SQL database above, so I didn't get to see the finals. It did say ‚ÄúFast‚Äù or ‚ÄúInsanely fast‚Äù about the majority of the tests, so that was encouraging.\n\nI'll try again when [PyPy 5.0 ü°ï](http://morepypy.blogspot.com/2016/03/pypy-50-released.html) reaches ArchLinux.\n\nStay tuned.\n\n[Update](/kappasigma.bit/?Post:4)"
		},
		{
			"post_id": 1,
			"title": "Table of contents",
			"date_published": 1457350496,
			"body": "* [Colophon](?Post:23 \"Published on 2016-03-25 at 15:27 UTC\")\n* [FAQ](?Post:24 \"Published on 2016-03-25 at 15:29 UTC\")\n\n### Contents (most recent entries first)\n\n* [How to make your own yogurt](?Post:41 \"Published on 2017-01-30 at 13:29 UTC\")\n* [MORPHiS quickstart](?Post:40 \"Published on 2017-01-11 at 20:02 UTC\")\n* [memx ‚Äì memoize command output](?Post:39 \"Published on 2016-09-12 at 17:18 UTC\")\n* [KBFS messenger (proof of concept)](?Post:38 \"Published on 2016-08-20 at 16:36 UTC\")\n* [Keybase invites](?Post:37 \"Published on 2016-06-25 at 12:12 UTC\")\n* [Ghost peers?](?Post:36 \"Published on 2016-05-15 at 10:31 UTC\")\n* [Maj √§r v√§lkommen](?Post:35 \"Published on 2016-04-30 at 08:54 UTC\")\n* [Cymbalaria muralis](?Post:34 \"Published on 2016-04-28 at 08:40 UTC\")\n* [Unknown species](?Post:33 \"Published on 2016-04-25 at 21:19 UTC\")\n* [New zombie on the block: MORPHiS](?Post:32 \"Published on 2016-04-23 at 08:31 UTC\")\n* [Python + timezones = FSCK](?Post:31 \"Published on 2016-04-17 at 12:44 UTC\")\n* [Frigate flask](?Post:30 \"Published on 2016-04-17 at 12:38 UTC\")\n* [Toilet paper roll](?Post:29 \"Published on 2016-04-13 at 16:32 UTC\")\n* [Map of emotions](?Post:28 \"Published on 2016-04-09 at 20:59 UTC\")\n* [Create secure passwords from CLI](?Post:27 \"Published on 2016-04-05 at 17:37 UTC\")\n* [Authentication with Namecoin](?Post:26 \"Published on 2016-04-01 at 15:52 UTC\")\n* [Note to self](?Post:25 \"Published on 2016-03-25 at 15:35 UTC\")\n* [Happy Holi!](?Post:22 \"Published on 2016-03-24 at 11:48 UTC\")\n* [Twistniks on Zeronet](?Post:21 \"Published on 2016-03-23 at 20:39 UTC\")\n* [Twtxt, Zeronet, microblogging](?Post:20 \"Published on 2016-03-23 at 06:59 UTC\")\n* [Bitcoin QR Code Generator](?Post:19 \"Published on 2016-03-22 at 09:27 UTC\")\n* [Honey, I shrunk the phone](?Post:18 \"Published on 2016-03-21 at 19:14 UTC\")\n* [Please meet ü°ï](?Post:17 \"Published on 2016-03-21 at 18:19 UTC\")\n* [Listen, learn, and behave!](?Post:15 \"Published on 2016-03-19 at 09:38 UTC\")\n* [BLR: Ted Cruz üé•](?Post:14 \"Published on 2016-03-18 at 16:10 UTC\")\n* [Goodbye, Twister!](?Post:13 \"Published on 2016-03-18 at 15:10 UTC\")\n* [Raghu Dixit: ‚ÄúAmbar‚Äù üéù](?Post:12 \"Published on 2016-03-18 at 13:54 UTC\")\n* [Namecoin fail](?Post:11 \"Published on 2016-03-18 at 08:40 UTC\")\n* [ZeroNet behind reverse proxy ‚Äì help! (solved)](?Post:10 \"Published on 2016-03-17 at 18:48 UTC\")\n* [Grass is so happy](?Post:9 \"Published on 2016-03-17 at 15:55 UTC\")\n* [BIP32 Generator](?Post:8 \"Published on 2016-03-17 at 14:40 UTC\")\n* [A broken TV is a good TV](?Post:7 \"Published on 2016-03-16 at 19:43 UTC\")\n* [Authentication with NXT tokens](?Post:6 \"Published on 2016-03-13 at 20:49 UTC\")\n* [Unhosted web apps](?Post:5 \"Published on 2016-03-12 at 15:46 UTC\")\n* [ZeroNet on PyPy 5.0: not yet](?Post:4 \"Published on 2016-03-12 at 12:03 UTC\")\n* [Morphis rising from the dead ‚Äî maybe](?Post:3 \"Published on 2016-03-12 at 11:07 UTC\")\n* [ZeroNet on PyPy?](?Post:2 \"Published on 2016-03-11 at 17:48 UTC\")"
		}
	]
}