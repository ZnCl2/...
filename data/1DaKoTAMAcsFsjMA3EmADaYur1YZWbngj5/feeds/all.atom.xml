<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CyberSecurity Blog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2016-09-03T00:01:00-05:00</updated><entry><title>Anti-Forensics</title><link href="/anti-forensics.html" rel="alternate"></link><published>2016-09-03T00:01:00-05:00</published><updated>2016-09-03T00:01:00-05:00</updated><author><name>Dakota Mullins</name></author><id>tag:None,2016-09-03:/anti-forensics.html</id><summary type="html">&lt;p&gt;Most of the security practices we’ve previously covered won’t protect you if your computer is fully unlocked and running at the time of attack. So the next thing we need to cover is anti-forensics. Even if the majority of your files are protected in some way, an attacker …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Most of the security practices we’ve previously covered won’t protect you if your computer is fully unlocked and running at the time of attack. So the next thing we need to cover is anti-forensics. Even if the majority of your files are protected in some way, an attacker with access to your computer can still gather a lot of information about you:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;By looking at file creation, modification, and read times, they can get a good idea of how long it’s been running the current OS, and a list of times where you’ve been on the computer.
Logs from things like antivirus will show names of files and directories, even if you’ve since moved them.
Firewall logs can list websites you’ve visited or interacted with.
Windows Error Reports can reveal applications you’ve used and various settings.
Uninstalled programs may still leave behind files and configuration files on your computer, especially in places such as %appdata%.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I could go on. Locations you’ve been to, devices you’ve plugged in… My point is, you need to take care of this. The sooner the better.&lt;/p&gt;
&lt;p&gt;So let’s get right to work. There are two ways to do this. Preferably, we need to stop our system from recording things in the first place. If it’s never saved then there is nothing to recover. Unfortunately, sometimes that isn’t an option. Sure you can have your web browser delete everything when you close it, but even then it can be forensically recovered. Therefore, the second option is securely erasing whatever files do manage to be saved. These aren’t really in any particular order, just follow as many as you can. You need to disable hibernation. If someone gains access to the hibernation file, they can see all of the running processes inside and take a look at your RAM. (FYI, in full disk encryption, the decryption key is stored in RAM.) The easiest way to disable this is to open command prompt (as admin) and run this command.&lt;/p&gt;
&lt;p&gt;Powercfg/h off&lt;/p&gt;
&lt;p&gt;If you are on a laptop or have a WiFi adapter, make sure to “Forget” known networks, as they can be used to build a profile of places you’ve visited. An attacker does not need physical access to your device to see this information either. (More on that in the upcoming WiFi article). The command for this is:&lt;/p&gt;
&lt;p&gt;netsh wlan show profiles
netsh wlan delete profile name=&lt;em&gt; i=&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It’s also a good idea to turn off WiFi scanning if you’re not actively using it. You can be tracked via MAC address by leaving it on. Linux users can use macchanger to spoof their address, but Windows users are out of luck. Some mobile phones automatically change addresses, but not very effectively. Recent editions of Windows 10 give you the option to randomize your MAC address at new networks. Doing this will greatly help prevent tracking.&lt;/p&gt;
&lt;p&gt;Next you will definitely want a tool called CCleaner. It the windows equivalent of Bleachbit. In the settings, make sure you have it set to secure deletion, then check as many of the items you feel comfortable with. This will take care of a lot of items: things left over from your browser history and cache, windows error reports, recently opened files, etc. This tool is definitely on the must-have list. You can set it to run automatically at boot. It also has a tool to wipe the free space of a hard drive. If you find yourself using the secure erase feature often, you should also look at Eraser. It provides an explorer shell extension to make things easier.&lt;/p&gt;
&lt;p&gt;The next thing to consider is your time-stamps. Right click a file and view its properties. If you look towards the bottom you will see its MACE values. These are the time-stamps of when the file was last Modified, Accessed, Changed, and Entered into the file table. This information could prove you were using something at a certain time, or that you had knowledge of a file. To remove these values, you can use a tool such as Timestomp or SetMACE.&lt;/p&gt;</content></entry><entry><title>Using PGP</title><link href="/using-pgp.html" rel="alternate"></link><published>2016-09-03T00:01:00-05:00</published><updated>2016-09-03T00:01:00-05:00</updated><author><name>Dakota Mullins</name></author><id>tag:None,2016-09-03:/using-pgp.html</id><summary type="html">&lt;p&gt;Personal message and file encryption&lt;/p&gt;
&lt;p&gt;For this you’re going to need Gpg4win. When it first opens you’ll be asked to generate a key. This is important, so it will be the first thing we do.&lt;/p&gt;
&lt;p&gt;It will ask for some information, starting with your name. Keep in mind …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Personal message and file encryption&lt;/p&gt;
&lt;p&gt;For this you’re going to need Gpg4win. When it first opens you’ll be asked to generate a key. This is important, so it will be the first thing we do.&lt;/p&gt;
&lt;p&gt;It will ask for some information, starting with your name. Keep in mind all of the information you use will be public, so if you don’t want people knowing your real name, use your screen name. Next your email. Again this will be public, but it’s important that you use a real email address, so people can more easily get in contact with you. Now you will be asked to make a backup copy of your secret key. I’ll explain what it is shortly, but for now just treat it as a password. Don’t share it. But you do want to make a backup. Once you start using it a lot, it’s extremely important to not lose your key. Now we wait a few moments for the key to be created. During the creation, you’ll be asked to create a password. It will ask where to save your backup. Store a backup on an encrypted USB drive or something- treat it as an important password, so don’t leave it lying around. Using PGP&lt;/p&gt;
&lt;p&gt;The main uses of PGP come down to Encryption/Decryption and Signing/Verifying. Allow me to explain a bit. Or you can just skip this part since it’s somewhat complex, and hard to explain simply. I have a public PGP key. We will call it KeyDakotaPublic. You have a Public PGP key, which we will call KeyReaderPublic. Lets say you wanted to send me a message that says “Hey Dakota, how’s it going?” but you don’t want anyone else in the world to be able to read it. What you would do is download my Public PGP key, type the message, and then encrypt it using my public key. (Don’t worry, the software handles this for you) Since you encrypted it using my key, only I can read it. Even if you were to post it to your wall on Facebook, I’d still be the only person able to read it. Everyone else would just see a jumble of random letters.&lt;/p&gt;
&lt;p&gt;Every PGP user has a public key and a secret key. The public key is available to anyone, and it’s what you use to encrypt things in a way that only the person you’re trying to contact can read it. The secret key is used to open messages sent to the corresponding public key. This makes PGP more secure, as it uses both a password and a key. Even if someone knew my password, they still couldn’t open the message sent to me, since they don’t have my secret key. On the other hand, if they somehow stole my secret key from my computer, they would still need my password to use it.&lt;/p&gt;
&lt;p&gt;So now that we’ve set our name and email and generated our keys, there’s one more step before we can use it. We need to get our public key and put it online. People need your public key in order to send messages to you. To get your public key, right click on the key in the program window. In the menu that appears, click Export Key. Simply save it somewhere like your desktop. It will be a file ending in .asc Send this to anyone you plan on communicating with. Usually it’s just easiest to upload this file to the internet, so anyone can download it if they need it. I’ll cover that later.&lt;/p&gt;
&lt;p&gt;Okay, PGP is set up and you want to send me an encrypted message. How do you do it? Sending/Receiving an encrypted message&lt;/p&gt;
&lt;p&gt;First you need my public key. (KeyBase.io/DakotaMullins) Now that you have my key, you need to add it to your program. Just click the big Import button on the top, then select my key. Next, open the Clipboard in the top right. Type whatever you want to send me in this area. When you’re done, click the button on top that says Encrypt. A window will appear showing you all of the keys you have. Click on mine to select it. Just below the box with all of the keys, there is a checkbox that says “Sign”. Tick the box (for reasons I’ll explain later). Once you click Okay it will ask you for your password, then it will encrypt the message. When it’s done, you’ll see a bunch of random text. This is the encrypted version of the message. Send this to me however you’d like. As long as I have your public key and you choose my public key from the list, I’ll be able to read it.&lt;/p&gt;
&lt;p&gt;Now you need to know how to read messages that were sent to you. (Trust me, it’s easy.) Do the same steps as above to send a message, but this time send it to yourself instead of me.Once you get the random text, save it in a text file or something.&lt;/p&gt;
&lt;p&gt;Optionally, you can close everything so it’s more like you were sent a real message. Once you get your message, open up the program again. Then open the clipboard again. Now copy and paste the entire encrypted message into the clipboard, then press Decrypt. If everything worked, it will ask you for your password, then once it’s entered the message will be decrypted and readable.&lt;/p&gt;
&lt;p&gt;Practice this a few times, just in case. Remember you can also encrypt files.&lt;/p&gt;
&lt;p&gt;So now that you know how to read and send messages, you can upload your public key to a server so people can start using it. Before doing this, make sure your name and email is correct. It’s a real pain to have to revoke keys and reupload them. It’s much easier to just get everything right the first time. To upload your key, you’ll want to go to a keyserver. This is extremely simple. First, go to the key you want to share, then right click it. On the menu, click Send Key. This will upload it to a server. Anyone who wants your public key can search for it on that server. Now, you’ll probably want to upload it to more than one server so it’s easier for people to find. I’d recommend going to these websites and adding them there as well. https://pgp.mit.edu/ https://sks-keyservers.net/i/#submit https://pgp.key-server.io/ Signing and Verifying&lt;/p&gt;
&lt;p&gt;As promised, now I’ll explain signing a bit. Signing is basically a way of saying “Hey, I approve of this message/file.”&lt;/p&gt;
&lt;p&gt;If I send you a program that instantly levels you up to level 50 on Pokemon Go, I could sign it. Then, using my public key, you could verify that the file is from me. If someone hacks my account and replaces the file with a fake one, possibly with a Pokemon Go account stealing virus, when you go to verify the file, it won’t be correct. This way you can tell that someone has replaced the file or modified it in some way.&lt;/p&gt;
&lt;p&gt;The easiest way of dealing with files is by using the shell extension that got installed when you installed the program. This means you can just right click on a file and use all the functions from there.&lt;/p&gt;
&lt;p&gt;Let’s say you’re working on a new program and you want me to try it out. However, you don’t want anyone else to steal it since it’s still in development. Simply right click the file, click Sign and Encrypt. A box will come up with more options. Just choose Sign and Encrypt, then click next. Now choose the key you want to send it to. Click add, then next. It will ask for your password and then it will be created.&lt;/p&gt;
&lt;p&gt;Now that you’ve sent me the program, I would just have to right click it and press Decrypt and Verify.&lt;/p&gt;</content></entry><entry><title>XMPP</title><link href="/xmpp.html" rel="alternate"></link><published>2016-09-03T00:01:00-05:00</published><updated>2016-09-03T00:01:00-05:00</updated><author><name>Dakota Mullins</name></author><id>tag:None,2016-09-03:/xmpp.html</id><summary type="html">&lt;p&gt;This guide will show you how to set up an XMPP account and use it. I’ll be using a windows program, but it’s basically the same no matter what you use. I’ll also cover OTR (Off The Record), which is used to encrypt your messages. I won …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This guide will show you how to set up an XMPP account and use it. I’ll be using a windows program, but it’s basically the same no matter what you use. I’ll also cover OTR (Off The Record), which is used to encrypt your messages. I won’t go into details on how the service works; since there are many other tutorials like this I will keep things brief. You send a message, it goes to a server, the server sends it to the recipient. Simple. Much like email.
Pidgin&lt;/p&gt;
&lt;p&gt;To start off we are going to need the XMPP client, Pidgin, as well as the OTR client for it. For Pidgin, you need to go to this address here. There is an online installer as well, but sometimes it doesn’t work correctly. Next we need to download the OTR plugin. You can find that at the bottom of my main website. If you’ve read my earlier post on using PGP, you’ll notice there’s a signature here (.asc) you can use to ensure validity of your download.&lt;/p&gt;
&lt;p&gt;Now that you have them downloaded we can begin. Just double click the Pidgin setup. You can leave everything to defaults if you want, or you can add different localization for other languages if you need them. You can change the install folder if you need to, but if you do you’ll have to change it in OTR as well. Once you have Pidgin installed, it should run automatically. If not, go to your start menu and open it.&lt;/p&gt;
&lt;p&gt;Once Pidgin opens it will ask you to add an account. We don’t have one yet, so this is where we will create one. First change the protocol from AIM to XMPP. Now you’ll see the rest of the options we need.&lt;/p&gt;
&lt;p&gt;For the username, choose whatever you wish. If it’s already taken it will let you know when you try to register. For domain, this is the server you are creating your account on. (Like Gmail or Yahoo on email.) There are tons of jabber (XMPP) servers online, so just google them until you find one you like. A few I’d recommend are hacker.im, jabber.calyxinstitute.org, and creep.im. You want one that doesn’t keep logs, and isn’t a closed system, one that can’t communicate with others. For example, if Gmail was a closed system you would only be able to message other Gmail users. For resource, this is a way of saying which of your devices you are using, separating your phone/laptop login from your desktop login. Next of course is your password; just follow strong password settings and you should be good here.&lt;/p&gt;
&lt;p&gt;The rest of the options are either not required, or are already on the values they need to be. The only exception is if you use a proxy. If so, add this to the tab at the top labeled Proxy. Now you just need to tick the checkbox near the bottom saying to create the new account, then click add. A few servers will require you to make an account on their website instead of using the checkbox. But most of them will work this way.&lt;/p&gt;
&lt;p&gt;Now you have an account and can message people. You can add buddies to your friends list and start chat in the top left. You can add a buddy icon in the bottom right. Change your mood/status in the bottom left. And change your settings/preferences at the top. The net thing we need to do is add OTR so that your chat’s can be encrypted.
OTR&lt;/p&gt;
&lt;p&gt;Okay, so now we need to install the OTR plugin you downloaded earlier. Just double-click it and let it install. You can keep everything default unless you’ve changed your Pidgin location.&lt;/p&gt;
&lt;p&gt;Once it’s installed, open Pidgin and go to your plugins. (Tools -&amp;gt; Plugins) Scroll down to the off-the-record messaging plugin and tick the box to enable it. Now select it and press configure plugin. The next step is to generate your key. Select your account from the drop down list, then click generate. (Easy, right?) If you want, you can also tick the box to require encryption. If you have this ticked, you won’t be able to message someone without using encryption.&lt;/p&gt;
&lt;p&gt;You’re not done just yet though. Whenever you start a chat with someone, you have to turn on OTR. It doesn’t just automatically protect everything you type. Once you’re in a chat, there will be a box in the top right. Either click the box or the menu that says OTR. In the dropdown box, click the button to start the private chat. Next you’ll have to wait for the other person to join the private mode as well. Once it’s done, you’ll be asked to verify. Verifying is a way to make sure the person you are talking to isn’t an impostor. Anyone can make an account with the name potus@whatever.com. To make sure you’re talking to the right person, always send a verification code using something else. Preferably this is something encrypted that nobody else has access to. It’s best to secretly exchange a key such as this in person, but online that’s generally not possible.&lt;/p&gt;</content></entry><entry><title>Securing Your Windows PC</title><link href="/securing-your-windows-pc.html" rel="alternate"></link><published>2016-09-02T00:01:00-05:00</published><updated>2016-09-02T00:01:00-05:00</updated><author><name>Dakota Mullins</name></author><id>tag:None,2016-09-02:/securing-your-windows-pc.html</id><summary type="html">&lt;p&gt;The majority of the people reading this are probably Windows users so I’m going to focus this guide there, specifically on Windows 10. I often hear a lot of people choosing to stick with Windows 7 instead of ten. While it’s still supported this is fine, but be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The majority of the people reading this are probably Windows users so I’m going to focus this guide there, specifically on Windows 10. I often hear a lot of people choosing to stick with Windows 7 instead of ten. While it’s still supported this is fine, but be aware that the spying stuff in Windows 10 has been back ported into Windows 7. BIOS&lt;/p&gt;
&lt;p&gt;We’re going to start off with booting your machine. Ideally, when you’re attacked, your machine will be offline. Please remember that if your machine is running and unlocked when it’s compromised, neither BIOS settings or full disk encryption will help you.&lt;/p&gt;
&lt;p&gt;Whenever your PC initially turns on, it will go though BIOS. Since it’s the first thing that happens, it’s the first thing we will secure. There are many different BIOS options, and not every device has the same one. You’re going to have to use some common sense if yours is different. Also, the majority of BIOSes can easily be flashed to default settings, so it’s important to not rely on this by itself.&lt;/p&gt;
&lt;p&gt;The first thing we want to do is add a boot password (sometimes called a user or system password) and an admin password. A user password will prevent people from accessing your device, and an admin password will prevent changes to the BIOS settings. The main goal of this is so nobody can change the boot order or allow booting from USB/CD drives. Unfortunately some will allow this even without a password, but better safe than sorry.&lt;/p&gt;
&lt;p&gt;You’re going to want to change your boot order/priority to make your OS hard drive boot first, and disable booting from anything else. It’s important to completely disable the rest, since an attacker could remove your hard drive to force the machine to boot from another device, then simply reconnect the hard drive after restarting.&lt;/p&gt;
&lt;p&gt;You’ll want to disable options such as recovery and ones that store the BIOS on your hard drive. If your computer has it, you’ll want to enable hard drive locking. This password protects your hard drive. One other thing to note about this is that a lot of Dell laptops (and maybe more) have a special built-in password that securely erases the hard drive if the password is entered (much like a cryptonuke that I’ll talk about later). I have this “delete everything” password written down on a piece of paper, pseudo-hidden. If someone looks at my desk they will see the sticky note labeled “HDD0-SE”. Since my password prompt says HDD0, they will assume this is the password. They will try it, and then all my data is deleted. This password is already set for your computer and can be difficult to locate. I spoke with Dell to get mine.&lt;/p&gt;
&lt;p&gt;Next, be sure that features such as secure boot and anything else mentioning security are turned on. The only exception to this are tools such as LowJack and CompuTrace. These are basically backdoors you can choose to have in case your computer is stolen. I admit it can be useful if you don’t have sensitive data on your machine and don’t want it to be stolen, but if you’re following this guide you’re probably not the kind of person who wants to give another company backdoor access to your system. A lot of intel processors also have a management engine running outside of the operating system that should be secured. FDE&lt;/p&gt;
&lt;p&gt;After BIOS, your computer would normally load your operating system. But we want to encrypt that in order to keep our data safe if your device or hard drive is stolen. On Linux, full disk encryption is essentially a built in feature. but for Windows, we’ll want to use Veracrypt.&lt;/p&gt;
&lt;p&gt;After installing this you’ll want to set up system encryption. Make sure to use a custom PIM to make your password two-dimensional. If you’re feeling adventurous, try using a hidden operating system. You’ll sometimes have to disable secure boot to use VeraCrypt, but this won’t be a problem since you’ve locked the boot order and encrypted your hard drive. Windows does support Bitlocker, but this is closed source, and there is a strong chance that Microsoft will have a copy of your recovery keys- not to mention that you need a TPM module or USB alongside your password. A large amount of TPM modules seem to be implemented incorrectly anyways.&lt;/p&gt;
&lt;p&gt;For Linux users reading this, you’ll want to set up LUKS encryption. And make sure to add nukes. (It looks hard, but I promise it’s not). After your device is encrypted with LUKS, use this command to add “delete everything” passwords:&lt;/p&gt;
&lt;p&gt;cryptsetup luksAddNuke /dev/sda5&lt;/p&gt;
&lt;p&gt;What are nukes? Similar to the “delete everything” password, these are special passwords that will wipe your encryption headers when typed in. My Kali install is using all 8 keyslots. I have one really long and complicated password that will unlock my device. I have seven more passwords that will delete everything. Make sure to put the letter “A” as a nuke, and “AAAAAAAA”, as this will help ensure that bruteforce attempts destroy your data. For the five remaining keyslots, I use passwords that I have previously used, that way an attacker who has been following me is likely to try it to see if I have re-used the password.&lt;/p&gt;
&lt;p&gt;I’m not sure what options are available for a Mac, as I don’t use them. Hardening Windows&lt;/p&gt;
&lt;p&gt;So now we focus on the actual windows installation itself. Here we try to make it harder to break into.&lt;/p&gt;
&lt;p&gt;The very first thing you need to do is reinstall your OS. I get it, that probably sounds pretty cumbersome, but I do it once or twice a year and it’s not nearly as bad as it seems. Besides, if you’re already compromised before we begin then this won’t do you any good. It’s also worth checking into Windows 10 LSBT at this point. This is an ESR branch of windows without bloatware and extra features you don’t need.&lt;/p&gt;
&lt;p&gt;So now you have a fresh installation, and you made sure to turn off all spying stuff when you were installing it. Once you have Windows fully loaded and running, we’re going to want to get rid of all the bloatware. To do this, we will use tool called Decrap My Computer. This will go through and get rid of all the software that’s been added on top of windows. Then of course you’re going to want to use some of the many programs to help stop the spying telemetry.&lt;/p&gt;
&lt;p&gt;There is a really nice website that has a walk through showing you how you should have your windows installation set up. I’m not going to lie, it’s long and tedious, but if you’re serious about this you should give it a shot. Maybe at some point somebody can automate it. The trick is balancing security with usability. This mainly comes down to things like disabling services, setting very strict firewall rules (whitelist mode, not blacklist), and running everything in sandboxes. It does mention a few programs you should check out, but really the ones I would recommend are MBAE, Sandboxie, and a good antivirus (Free or Paid). Also, if your antivirus doesn’t have a built in firewall, you’ll definitely want to get one.&lt;/p&gt;</content></entry><entry><title>Securing Your Mobile Devices</title><link href="/securing-your-mobile-devices.html" rel="alternate"></link><published>2016-09-01T00:01:00-05:00</published><updated>2016-09-01T00:01:00-05:00</updated><author><name>Dakota Mullins</name></author><id>tag:None,2016-09-01:/securing-your-mobile-devices.html</id><summary type="html">&lt;p&gt;Firstly, your lock screen.&lt;/p&gt;
&lt;p&gt;Vital when talking about physical access. This is probably the downfall of many users, since a surprising amount of people think a four-digit passcode is enough to secure their device. Fun fact-it’s not. It might stop your little brother from “hacking” your Facebook, but that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Firstly, your lock screen.&lt;/p&gt;
&lt;p&gt;Vital when talking about physical access. This is probably the downfall of many users, since a surprising amount of people think a four-digit passcode is enough to secure their device. Fun fact-it’s not. It might stop your little brother from “hacking” your Facebook, but that’s about it.&lt;/p&gt;
&lt;p&gt;You need to realize that your cell phone’s password should stand up to a desktop password. Think about it. They are just as easy to hack and bruteforce, and they contain a huge portion of your personal life. Pictures, GPS data, timestamps to go with your GPS location, emails, contacts, messages, etc. And what’s more, your phone can be used to get any other information someone might want. I’ll use Twitter as an example. Let’s say you don’t have Twitter installed on your phone, you’re not signed in, and you haven’t reused that password. Once someone has access to your phone, they can just have Twitter send them a security code to your number and reset your password. And notice I said your number, not your phone. Even if your phone is encrypted to hell, an attacker could pop out your sim and stick it in a different phone. If they have the right amount of knowledge and money to manipulate SS7, they don’t even need access to your phone to do this. Suddenly all your texts and calls are going to their phone instead of yours. And don’t forget, a lot of apps (ex. Telegram, WhatsApp, Signal, Authy) use your phone number as your login by default.
Yikes! So how do we go about securing them?&lt;/p&gt;
&lt;p&gt;As I mentioned before, it’s vital that you have a strong password. For androids, use the highest amount of characters your device will allow. I think it’s only 16 for some devices, but some go to 40+. Having a very long password is better than having a short one with fancy symbols and numbers and such. If you’re on iOS you’re in luck. My old iPhone password was 40+ characters, and I have no idea what the max is. You may want to check out this website to test the strength of your passwords. Everything is done offline so you don’t have to worry about your password being sent anywhere.&lt;/p&gt;
&lt;p&gt;Now we need to make sure this password actually does something. For androids, this means encrypting your device. If your device is encrypted, an attacker would have to bruteforce your password; bypassing the lock screen or dumping your data to a computer wouldn’t get them anywhere. If your device is not encrypted, an attacker could still access all the data on your phone without needing your password (bonus security lost if you have ADB enabled). So at this point we have our device encrypted, and we have a strong password. Invincible, right? Shocker- no.
There are still a few more things to worry about.&lt;/p&gt;
&lt;p&gt;Most iOS users probably have iTunes installed on their computer. It’s what you use to copy songs over and restore your device if it’s broken, as well as to make backups of your devices. If you have a 64,000-character password, it will do you no good if all your data is sitting on your PC ready to be copied. Yes, you can encrypt your backups if you choose to, but again, this can be bruteforced. If your device is being backed up to iCloud or Google Drive, then it’s at the mercy of whoever has access to your account. And as I mentioned before, your online accounts can be taken extremely quickly if someone has access to your phone number or email.&lt;/p&gt;
&lt;p&gt;Alright, no insecure backups. Are we done here yet?
What’s next?&lt;/p&gt;
&lt;p&gt;Now we need to look at a few more things. Is your device rooted or jailbroken? Are you using developer mode/ADB? This can be bad. Keep in mind that in android’s case (if you know what you’re doing), root can be a good thing. However, for the less experienced, it can be negative. For iOS devices, I would never recommend jailbreaking if you’re in any way concerned about security. Jailbroken devices and root provide full access to everything. Invisible backdoors could be installed. Your files could be copied. Antivirus could be disabled- and that’s just a few of many potential consequences.&lt;/p&gt;
&lt;p&gt;You should also learn about Cellebrite. Cellebrite is a tool with many different modes used to break into your devices. (Sidenote: I have not personally owned or used one, so this information is based on what I learned from reading the manuals (RTFM!).) The first mode uses your device’s built-in functions to basically ask for all the information it needs. This is why it’s important to disable backups and developer tools as well as keeping your device unrooted/jailbroken. The second mode just copies the files from your device- like if you plugged in a flash drive to your computer and copied the contents to a folder. The third mode is a full forensic bit-by-bit extraction (meaning it can probably see your deleted files too). That mode will not be stopped by anything we’ve done above; you have to rely on the strength of your password versus the computational power of your attacker. Cellebrite can perform many additional functions, including a password grabber, sim cloner, and various developer tools. The most important thing about this tool is that it can bruteforce your password even if you have a self-destruct set. On androids and iOS, there is an option to wipe your device if an incorrect password is entered ten times. This tool can bypass that. Also remember, if your device is jailbreak-able, Cellebrite can jailbreak it and bypass the password.&lt;/p&gt;</content></entry></feed>