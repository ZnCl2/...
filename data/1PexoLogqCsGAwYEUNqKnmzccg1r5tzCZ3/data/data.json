{
	"title": "Pexo's Blog",
	"description": "A blog, where I, pexo, will post different things, at uncertain times about some topics.\n\nThe x makes it sound friendlier.",
	"links": "My zites/projects:\n\n*   [PomfPomfMoe Gallery](../1PomfMoeTPxQ5gLJBeD1sBvaizxbHxf8Zv/)\n\nMy accounts:\n\n*   [ZeroMe](../Me.ZeroNetwork.bit/?Profile/1oranGeS2xsKZ4jVsu9SVttzgkYXu4k9v/1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC/pexo@zeroid.bit)\n\n*   [ZeroMail](../Mail.ZeroNetwork.bit/?to=pexo)\n\n* * *\n\n*   [Source code](https://github.com/HelloZeroNet) (Clearnet)",
	"next_post_id": 7,
	"demo": false,
	"modified": 1574094269,
	"post": [
		{
			"post_id": 5,
			"title": "How to install Zeronet on QubesOS",
			"date_published": 1535643014.2,
			"body": "I've recently rebuild my QubesOS setup and as part of that I have also remade my Zeronet setup. Since I was going to do it anyway, I decided it just write my steps down and post them here.\n\n# Requirements and assumptions\n\n*   I'll be using the fedora 28 templateVM for the Zeronet templateVM. The basic procedure should the same for older fedora versions, but can differ slightly, so be aware of that, should you want to use a different fedora template.\n\n*   I'll also be assuming Qubes 4, but older Qubes versions shouldn't make much of a difference, at least as far as I'm aware of.\n\n*   Anything in {curly braces} needs to be replaced by something.\n    Example: `tor-browser-linux64-{someversion}_en-US.tar.xz` could be `tor-browser-linux64-7.5.5_en-US.tar.xz` or `tor-browser-linux64-7.5.6_en-US.tar.xz`.\n\n# Note from 09-24-2018\n\nI have adjusted this guide to now work with the new Tor Browser release(8.0). In addition to that I have also included some scripts, that make managing the Zeronet templateVM, specifically new Tor Browser versions or manual changes of it in the templateVM way more comfortable, easier to apply and work with in appVMs.\n\n# Installation\n\n## The Setup\n\n1.  Open the Qubes manager and clone the fedora 28 templateVM. The name can be anything you want, I named it ZeronetTemplateVM.\n\n2.  In the Qube Manager open the `Qube Settings` section for the VM you just cloned and set under networking any netVM that has internet access. I'd choose `sys-whonix`, since that forces all traffic in our installation process through Tor, as well.\n\n3.  In the same window move to `Applications` and select `Terminal` and `Firefox`. You can also select other applications, but we only need Firefox and the terminal. You may need to press `Refresh Applications` before they appear.\n    After you're done you can hit `Apply` and close the window.\n\n4.  Start the VM and open Firefox and it's terminal.\n\n5.  In Firefox download:\n\n    *   The Zero Bundle from `zeronet.io`\n\n    *   The Tor Browser and it's signature from `torproject.org`\n\n6.  Now get the public key fingerprints from `torproject.org` and import them into gpg with:\n\n    `gpg --recv-keys {key1} {key2} {...}`\n\n    **Note**: At the time of this writing the command to get all keys is: `gpg --recv-keys 0x4E2C6E8793298290 0xEB774491D9FF06E2 0xD1483FA6C3C07136`, but times change and I STRONGLY discourage anyone from copying and pasting random signing keys from anywhere. I could claim just about anything I want and you wouldn't know, whether that really were the Tor Browser signing keys or I lied to you.\n\n7.  Verify the signature of the Tor Browser, to do this:\n\n    `cd /home/user/Downloads/`\n    `gpg --verify tor-browser-linux64-{someversion}_en-US.tar.xz.asc tor-browser-linux64-{someversion}_en-US.tar.xz`\n    Should the signature fail, redownload the Tor Browser and the signature and try again. Should it fail again, wait a day and then redownload the Tor Browser and the signature and try again. If it continues to fail, report what failed to `torproject.org`.\n\n## Installing Tor\n\n1.  Give yourself root privileges in the terminal\n\n    `sudo -i`\n\n2.  Install Tor with:\n\n    `sudo dnf install tor`\n\n    Confirm that you want to install Tor and wait for the installation to finish.\n\n3.  Now we need to configure Tor. We do this, by editing the torrc file:\n\n    `sudo gedit /etc/tor/torrc`\n\n    Here you'll need to remove the `#` character in the lines that say `CookieAuthentication 1` and `ControlPort 9051`.\n\n    **Note**: The auth-cookie entry might be inside there multiple times, if you have no experience with editing the torrc file, just remove the `#` character from all appearing instances.\n    **Note2**: If one of them is not present in the entire file type them in yourself and make sure, that there isn't a `#` character somewhere before it in the same line.\n\n    Now save and close gedit.\n\n4.  We need to add permission for the default user `user` to read the Tor auth-cookie with(if your default user is not `user` change the word `user` in the command below to your default user name):\n\n    `sudo usermod -a -G toranon user`\n\n## Starting Tor\n\nFor the next step we need Tor running, so open a new terminal window and run:\n\n`sudo runuser -u toranon tor`\n\nThis will start the Tor instance.\n\n## Installing Zeronet\n\nNow we can get to the installation of the Zero Bundle.\n\n1.  Go back to your download directory(if you left it) and unpack the Zero Bundle with:\n\n    `cd /home/user/Downloads/`\n    `tar xvf ZeroBundle-linux64.tar.gz`\n\n2.  Copy the unpacked folder into /usr/share:\n\n    `sudo cp -r ZeroBundle/ /usr/share/ZeroBundle`\n\n3.  Now we need to configure Zeronet, to do that we have to run Zeronet for the first time, so that it can download the newest version(make sure you are still in root terminal):\n\n    `cd /usr/share/ZeroBundle/`\n    `./ZeroNet.sh --version`\n\n    This will download the most recent Zeronet version and print out the version after its done.\n    **Note**: In the current version of Zeronet(Version: 0.6.3 r3576) you'll see an error here, you can run the command again and it should produce the expected output.\n\n4.  Now, that the newest version has been downloaded, we can start Zeronet for real with:\n\n    `./ZeroNet.sh --tor always`\n\n    If all downloads are finished, you can shut down Zeronet (either normally or by pressing `ctrl+c` in the terminal)\n\n    **Note**: If Firefox doesn't open automatically, open it yourself, type `127.0.0.1:43110` in the url field and press enter.\n\n5.  From here on out we don't need Tor running anymore, so in the terminal where Tor was running you can terminate it's process(with `ctrl+c`) and close the window.\n\n6.  Now we remove the generated data-directory, since we wont be using it:\n\n    `cd ZeroNet/`\n    `sudo rm -r data/`\n\n7.  After that, it is time to modify the config file. To do this run:\n\n    `sudo gedit zeronet.conf`\n\n    Remove anything, that is written in there and replace it with:\n\n    ```\n    [global]\n    open_browser = False\n    data_dir = /home/user/ZeronetData\n    tor = always\n    trackers_proxy = tor\n    force_encryption\n    disable_udp\n    ```\n\n    **Explanation**:\n\n    *   `open_browser = False`: Makes it so, that the main browser(Firefox) won't be opened each time Zeronet is started.\n\n    *   `data_dir = /home/user/ZeronetData`: This is the directory where all Zeronet data will be stored. You may change this to wherever you like.\n\n    *   `tor = always`: This forces Zeronet to make all connections through .onion addresses(the Tor network). If you want to enable connections to regular IP addresses replace `always` with `enable`, however if you do this you are **no longer anonymous**, meaning others can see your real IP-address in the network.\n\n    *   `trackers_proxy = tor`: This forces Zeronet to make all tracker connections through the Tor network.\n\n    *   `force_encryption`: This forces Zeronet only to connect to peers, that offer to encrypt the traffic.\n\n    *   `disable_udp`: Since Tor is set to `always` and all tracker connections are forced through Tor, allowing udp is pointless, since Tor only allows tcp connections.\n\n    You can also add other options in there, if you want. Once you're done you can save and close gedit.\n\n8.  Right now, the `ZeroBundle` folder is owned by root, so we need to change it's ownership.\n\n    `sudo chown -R user:user /usr/share/ZeroBundle/`\n\n## Make Zeronet and Tor automatically start\n\nNow we need to make Zeronet and Tor start together with the templateVM.\n**Note**: We'll use `init.d` instead of `/rw/config/rc.local`, because `/rw/config/rc.local` is not inherited by any appVM that uses the Zeronet-templateVM, therefore one would need to setup `rc.local` for each new Zeronet appVM, which is annoying and defeats the purpose of having an templateVM)\n\nTo have Zeronet and Tor automatically start that we:\n\n1.  Go to init.d:\n\n    `cd /etc/init.d/`\n\n2.  Create our auto start script:\n\n    `sudo gedit start-zeronet`\n\n    In the appearing window paste:\n\n    ```\n    #!/bin/bash\n    # chkconfig: 345 99 10\n    # description: A script to start Zeronet and Tor on boot time.\n\n    case \"$1\" in\n     'start')\n       ##Start Tor and save it's pid\n       runuser -u toranon tor &\n       tor_PID=$!\n       echo $tor_PID > /home/user/.tor.pid\n       ##Start Zeronet and save it's pid\n       runuser -u user /usr/share/ZeroBundle/ZeroNet.sh &\n       zeronet_PID=$!\n       echo $zeronet_PID > /home/user/.zeronet.pid\n       ;;\n     'stop')\n       ##Getting the pid for Zeronet, stoping it and removing it's pid file\n       if [ -f /home/user/.zeronet.pid ] ; then \n         zeronet_PID=$(</home/user/.zeronet.pid);\n         kill $zeronet_PID\n         rm /home/user/.zeronet.pid\n       fi\n       ##Getting the pid for Tor, stoping it and removing it's pid file\n       if [ -f /home/user/.tor.pid ] ; then \n         tor_PID=$(</home/user/.tor.pid);\n         kill $tor_PID\n         rm /home/user/.tor.pid\n       fi\n       ;;\n    esac\n    ```\n\n    **Explanation**:\n\n    The script starts Zeronet and Tor in an background process and stores their process ids(=PIDs) into hidden files in the `/home/user` directory, as `zeronet.pid` and `tor.pid`.\n    You can make modifications to this script as you see fit, once you're done you can save and exit gedit.\n\n3.  Make the script executable with:\n\n    `sudo chmod +x start-zeronet`\n\n4.  Check whether or not the script is valid:\n\n    `sudo chkconfig --list start-zeronet`\n\n    If the script doesn't show up: Redo step 2\\. It is likely that you had a typo somewhere.\n\n5.  Register the script with:\n\n    `sudo chkconfig --add start-zeronet`\n\n## Installing the Tor Browser\n\nNow we just need to install the Tor Browser and we are done.\nTo do this:\n\n1.  Go back to the downloads directory and unpack the Tor Browser bundle:\n\n    `cd /home/user/Downloads`\n    `tar -xvf tor-browser-linux64-{someversion}_en-US.tar.xz`\n\n2.  Move the Tor Browser to `/usr/local/share` and change the owner of the moved folder, to the default user:\n\n    `sudo mv tor-browser_en-US/ /usr/local/share/tor-browser_en-US/`\n    `sudo chown -R user:user /usr/local/share/tor-browser_en-US/`\n\n3.  Now go there and run the Tor Browser for the fist time(this will set the paths, in the inner workings of the Tor Browser, to the current location):\n\n    `cd /usr/local/share/tor-browser_en-US/`\n    `sudo runuser -u user ./start-tor-browser.desktop`\n\n    You might be asked how you want to connect to Tor. If your government or ISP restricts your internet, follow the instructions on screen, otherwise press `connect`.\n\n4.  You can now configure the Tor Browser however you want, but what you absolutely have to do in order for Zeronet to work is:\n\n    1.  Go into Preferences, under `General`, scroll down to `Network Proxy` and press the `Settings...` button. In the `No Proxy for` field add `127.0.0.1:43110` and than hit `OK`, to close the window.\n\n    2.  Click the green onion button in the top left(or sometimes top right), press `Security Settings...` and move the slider all the way up(to safest). While doing this is not required in order for Zeronet to work, I strongly suggest doing it, since in Tor Browser version 8 the slider setting 'Standard' does barely anything to preserve your anonymity!\n\nWhat I think is nice to have enabled(=you don't need to do this):\n\n1.  Go into Preferences and under `General` change the homepage to `127.0.0.1:43110`(this sets the homepage to the IP and port of the Zeronet ui-server)\n\n2.  Go into Preferences and under `General` check `Use autoscrolling`. This enables autoscrolling(= the scroll thingy that appears, if you middle-mouse-click on most browsers).\n\n3.  If you have an version of the Tor Browser, that is 8 or above, you are not able to do this part and can skip it. If not, you are using an older version of the Tor Browser. Please keep in mind, that it is strongly advised, that you always use the latest available version. Old Tor Browser versions are considered insecure! Select the NoScript icon, click `Options...`, than on `Whitelist`, put `http://127.0.0.1:43110` in the `Address of web site:` text field and press the `Allow` button. You can then hit `OK` to save and close the window.\n\nYou can now close the Tor Browser and return to the terminal.\n\nNow, that we have configured our Tor Browser we need to make it usable for appVMs and set up our templateVM for easy maintenance. To do this we need to copy our current(configured) Tor Browser to `/usr/local.orig/share`, since appVMs will, on their creation, copy all contents of their templateVMs `/home.orig/` and `/usr/local.orig` to their `/home/` and `/user/local/` directories. We need to have the normal user terminal for the next part. You can close the terminal and then reopen it or run `exit`, to get back to the user terminal. After that, we:\n\n1.  Make the directory\n    `sudo mkdir /usr/local.orig/share/tor-browser_en-US/`\n\n2.  Copy the Tor Browser files over there\n    `cp -R /usr/local/share/tor-browser_en-US/Browser/ /usr/local.orig/share/tor-browser_en-US/Browser/`\n    `cp /usr/local/share/tor-browser_en-US/start-tor-browser.desktop /usr/local.orig/share/tor-browser_en-US/start-tor-browser.desktop`\n\n3.  And change the ownership of the directory\n    `sudo chown -R user:user /usr/local.orig/share/tor-browser_en-US/`\n\nNow we need to tell Qubes, that we have installed the Tor Browser, so that we can select it in the `add/remove app shortcuts for this qube` section of the Qubes manager. To do that, we need to move the `start-tor-browser.desktop` file to an location, that can be found by Qubes. In our case, we'll choose `/usr/share/applications`:\n\n1.  We make a copy of `start-tor-browser.desktop` and place it into `/usr/share/applications` with:\n\n    `sudo cp /usr/local/share/tor-browser_en-US/start-tor-browser.desktop /usr/share/applications/start-tor-browser.desktop`\n\n2.  We then just need to adjust the permissions for the desktop file.\n\n    `sudo chmod 644 /usr/share/applications/start-tor-browser.desktop`\n\nAnd with that we are basically done with the templateVM, however there are a few things we can add, to make life easier for us later.\n\n## Making life easier\n\nWe do this by adding scripts that help in the templateVM, by:\n\n1.  Starting the Tor Browser in the templateVM(same as using the Qubes shortcut)\n\n2.  Making changes, made to the configuration to the Tor Browser in the templateVM, available to all appVMs that use that template.\n\n3.  Restoring the Tor Browser configuration, that is available to all appVMs inside the templateVM.\n\nIn addition to that: One script that will help in the appVMs, by applying the Tor Browser configuration, that was made available through the templateVM.\n\n**Note:** I will put all scripts in the `/home/`, as well as in the `/usr/local/bin` directory, so that you can quickly see what scripts there were and how they where called. You can run them as if they were a normal terminal command or by executing the script more explicitly with `./runSomething.sh`.\n\nIn this section, we need to have an terminal with user permissions. To achieve that, you can either close the terminal and open a new one or run `exit` in your current terminal.\n\nFor script 1 we:\n\n1.  Move to the `/home/` directory\n    `cd /home/user/`\n\n2.  Create and open the file that contains our script:\n    `gedit runTemplateTorBrowser.sh`\n\n3.  Paste this script in there:\n\n    ```\n    #!/bin/sh\n    cd /usr/local/share/tor-browser_en-US/\n    ./start-tor-browser.desktop\n    ```\n\n4.  Save and close the file.\n\n5.  Adjust permissions for the file\n    `sudo chmod 755 runTemplateTorBrowser.sh`\n\n6.  Copy it to `/usr/local/bin`, to have it available as an terminal command\n    `sudo cp runTemplateTorBrowser.sh /usr/local/bin/runTemplateTorBrowser`\n\nMoving on to script 2, we:\n\n1.  Create and open the file that contains our script:\n    `gedit applyTemplateTorBrowser.sh`\n2.  Paste this script in there:\n\n    ```\n    #!/bin/sh\n    rm -R /usr/local.orig/share/tor-browser_en-US/Browser/\n    rm /usr/local.orig/share/tor-browser_en-US/start-tor-browser.desktop\n    cp -R /usr/local/share/tor-browser_en-US/Browser/ /usr/local.orig/share/tor-browser_en-US/Browser/\n    cp /usr/local/share/tor-browser_en-US/start-tor-browser.desktop /usr/local.orig/share/tor-browser_en-US/start-tor-browser.desktop\n    ```\n\n3.  Save and close the file.\n\n4.  Adjust permissions for the file\n    `sudo chmod 755 applyTemplateTorBrowser.sh`\n\n5.  Copy it to `/usr/local/bin`, to have it available as an terminal command\n    `sudo cp applyTemplateTorBrowser.sh /usr/local/bin/applyTemplateTorBrowser`\n\nThen script 3:\n\n1.  Create and open the file that contains our script:\n    `gedit revertTemplateTorBrowser.sh`\n2.  Paste this script in there:\n\n    ```\n    #!/bin/sh\n    rm -R /usr/local/share/tor-browser_en-US/Browser\n    rm /usr/local/share/tor-browser_en-US/start-tor-browser.desktop\n    cp -R /usr/local.orig/share/tor-browser_en-US/Browser /usr/local/share/tor-browser_en-US/Browser\n    cp /usr/local.orig/share/tor-browser_en-US/start-tor-browser.desktop /usr/local/share/tor-browser_en-US/start-tor-browser.desktop\n    ```\n\n3.  Save and close the file.\n\n4.  Adjust permissions for the file\n    `sudo chmod 755 revertTemplateTorBrowser.sh`\n\n5.  Copy it to `/usr/local/bin`, to have it available as an terminal command\n    `sudo cp revertTemplateTorBrowser.sh /usr/local/bin/revertTemplateTorBrowser`\n    now close all open windows and shut the VM down.\n\nAnd finally for the appVM script, we:\n\n1.  Move to the `/home.orig/` directory\n    `cd /home.orig/user/`\n2.  Create and open the file that contains our script:\n    `gedit updateTorBrowser.sh`\n3.  Paste this script in there:\n\n    ```\n    #!/bin/sh\n    rm -R /usr/local/share/tor-browser_en-US/Browser\n    rm /usr/local/share/tor-browser_en-US/start-tor-browser.desktop\n    cp -R /usr/local.orig/share/tor-browser_en-US/Browser /usr/local/share/tor-browser_en-US/Browser\n    cp /usr/local.orig/share/tor-browser_en-US/start-tor-browser.desktop /usr/local/share/tor-browser_en-US/start-tor-browser.desktop\n    ```\n\n4.  Save and close the file.\n\n5.  Adjust permissions for the file\n    `sudo chmod 755 updateTorBrowser.sh`\n\n6.  Copy it to `/usr/local.orig/bin`, to have it available as an terminal command in that appVM\n    `sudo cp updateTorBrowser.sh /usr/local.orig/bin/updateTorBrowser`\n\n# Tasks\n\n## Creating an Zeronet appVM\n\nNow you'll just need to create an appVM, in which you'll actually use Zeronet.\nTo do that:\n\n1.  In Qubes select `Create a new qube`.\n\n2.  Choose what you want to name it.\n\n3.  Select `appVM` as the type.\n\n4.  Take the Zeronet templateVM(the one we just made) as template and use whichever netVM you want.\n    **Note**: Since we instructed Zeronet to make all connections through Tor, selecting `sys-whonix` would mean we go through Tor twice. The safest and fasted choice here would be to choose an VPN netVM, to catch any leaks or potential mistakes you make. Choosing `sys-firewall` as netVM is also alright, if you don't have to worry about leaks, mistakes on your end, that may reveal your real IP or your ISP knowing you use Tor.\n\n5.  Click finish to continue.\n\n6.  After the qube is created right click the VM and click `add/remove app shortcuts`.\n\n7.  Select the `Tor Browser` and add any application you also want to have. Keep in mind that you may have to refresh the applications before the Tor Browser shows up there.\n    **Note**: If you're only going to use this qube for Zeronet browsing, you don't need to select Firefox, since you're always going to use the Tor Browser to do that, anyway.\n\n## Updating Zeronet\n\nTo update Zeronet, you need to start the templateVM and the Tor Browser. You can do this by:\n\n*   Pressing the Tor Browser icon in the Qubes shortcuts for the templateVM\n*   Opening the terminal and running `./runTemplateTorBrowser.sh` in the `/home/user/` directory\n*   Opening the terminal and running `runTemplateTorBrowser`\n\nThis will start the Tor Browser.\nIf you do this the first time, you'll see that Zeronet is downloading `ZeroHello` again, which makes sense, because we deleted the `/usr/share/ZeroBundle/ZeroNet/data/` directory and specified a new data directory(inside the home folder) in the setup above.\nWait until Zeronet is finished downloading and then update Zeronet as you would always do:\n\n1.  Clicking the three dots.\n\n2.  Clicking `Version{version}({rev}):{status}`.\n\n3.  Confirm the dialogue, that pops up by pressing `Update ZeroNet{version}`.\n\n4.  Wait until the `Connection with UiServer Websocket recovered.` message appears.\n\nAfter the update is done, you can shut down Zeronet and after that the templateVM as well. The Zeronet update is automatically applied on every appVM that has this templateVM as template.\n**Note**: You also can visit and download `http://127.0.0.1:43110/1UPDatEDxnvHDo7TXvq6AEBARfNkyfxsp/`, before you update. This will cause all updates to be downloaded, using Zeronet itself.\n\n## Updating the Tor Browser in the templateVM\n\n**Before you do this**: Read the `Things to keep in mind` section below!\nTo update the Tor Browseror in the templateVM or change it's configuration, you need to start the templateVM and the Tor Browser. You can do this by:\n\n*   Pressing the Tor Browser icon in the Qubes shortcuts for the templateVM\n*   Opening the terminal and running `./runTemplateTorBrowser.sh` in the `/home/user/` directory\n*   Opening the terminal and running `runTemplateTorBrowser`\n\nThis will start the Tor Browser. Now you need to click the onion icon on the top left(sometimes top right) and select `Check for Tor Browser Update...`. The Tor Browser will now automatically update itself. If you also want to modify the Tor Browser configuration, you can do that now, too. After you are done, you can close the Tor Browser. Now, for your changes and the update to be available to the appVMs, you need to open the terminal and do one of these:\n\n*   `./applyTemplateTorBrowser.sh` in the `/home/user/` directory\n*   `applyTemplateTorBrowser`\n\nIf you made changes, that you changed your mind about, don't know how to reverse and haven't made them available yet(through the `applyTemplateTorBrowser` command), you can use one of these:\n\n*   `./revertTemplateTorBrowser.sh` in the `/home/user/` directory\n*   `revertTemplateTorBrowser`\n\nto revert the Tor Browser inside the templateVM back to the configuration it had before. Specifically `revertTemplateTorBrowser` will revert the Tor Browser to the state after the last time applyTemplateTorBrowser has been used.\n**Note:** This is not a full backup feature, just a nice thing that we can do, because our setup allows this. `revertTemplateTorBrowser` blindly replaces the Tor Browser in the templateVM with the contents of `/usr/local/share/tor-browser_en-US/`, this will not be an issue, if you only use the scripts above, but is something to keep in mind if you do/did some hands on stuff.\n\nYou can now shut the templateVM down. From this point on every newly created appVM will use the updated Tor Browser. For appVMs, that were created before the update was made, you need to open them and in their terminal and run one of these:\n\n*   `./updateTorBrowser.sh` in the `/home/user/` directory\n\n*   `updateTorBrowser`\n\nThis will apply the update on the Tor Browser in that appVM.\n**Note:** Using `updateTorBrowser` will erase anything, that wasn't already in the Tor Browser inside the templateVM, for example bookmarks and add-ons. Make a backup of those before using that command!\n\n## Updating the Tor Browser in an appVM\n\nStart the Tor Browser. Now click the green onion icon on the top left(sometimes top right) and select `Check for Tor Browser Update...`. The Tor browser will now automatically update itself. After it is done, you can restart the Tor Browser.\n\n## Updating the templateVM\n\nStart the `Qubes Manager`, select the templateVM and press the `Update qube system` button (the blue downward pointing arrow).\n\n# Things to keep in mind\n\n*   The Tor Browser is only inherited once, meaning that after you have created an appVM from the templateVM, the Tor Browser in that appVM **will not** be influenced by the templateVM, unless you run the `updateTorBrowser` script.\n    In other words: Changes, that you make in the templateVM Tor Browser, will **not** be automatically on all appVMs, that have been created from the templateVM! The changes **only** automatically appear in appVMs that are created **after** the changes to the templateVM Tor Browser were made! For all other appVMs call one of these:\n    *   `./updateTorBrowser.sh` in the `/home/user/` directory\n    *   `updateTorBrowser`"
		},
		{
			"post_id": 3,
			"title": "Hello World!",
			"date_published": 1535579009.1,
			"body": "Hi there,\nmy I'm pexo and welcome to my blog.\n\n## What will I find on here?\n\nOn here I will post about all kind of things, that I think are of interest, things I am working on or have worked on. I'll try to make my posts here as _'worthwhile'_ and _'quality'_ as possible. So you can (most likely) expect tutorials and somewhat more in depth explanations here.\n\n## Where else can I find you?\n\nMy ZeroID is: `pexo@zeroid.bit` and I have accounts at:\n\n*   [ZeroMe](../Me.ZeroNetwork.bit/?Profile/1oranGeS2xsKZ4jVsu9SVttzgkYXu4k9v/1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC/pexo@zeroid.bit).\n\n*   [ZeroMail](../Mail.ZeroNetwork.bit/?to=pexo).\n\nI have a [Tox](https://tox.chat/)(Clearnet) account, as well.\nID:`38B45630BEF5B3F1148AF7FBA19ED4CC29ECBB50756DF6CBC0B0B302D0DB19471A6F08E04C18`\n\nI am often on [Millchan](../1ADQAHsqsie5PBeQhQgjcKmUu3qdPFg6aA/), [ZeroTalk](../Talk.ZeroNetwork.bit/) and [ZeroMe](../Me.ZeroNetwork.bit/). If you want to talk to me you can use the comments on this blog, ZeroMe or ZeroMail(although I don't check ZeroMail terribly often, so it may take a while before I respond there)."
		}
	]
}