{
	"next_comment_id": 2,
	"next_question_id": 1,
	"next_answer_id": 2,
	"comments": [
		{
			"comment_id": 1,
			"reference_id": 2,
			"reference_type": "a",
			"reference_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"body": "Sounds awesome. I'm definitely excited to see how it goes.",
			"date_added": 1503387102415
		}
	],
	"questions": [],
	"answers": [
		{
			"answer_id": 1,
			"question_id": 1,
			"question_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"body": "As mentioned, you need to fetch the file using normal HTML5/JS methods. ZeroNet only handles the backend stuff (saving, making optional, etc.).\n\nYou can use [filewrite](https://zeronet.readthedocs.io/en/latest/site_development/zeroframe_api_reference/#filewrite-inner_path-content) and other file management queries to the API to handle the files on the backend.\n\nYou'll want to use the [optionalmanager](https://zeronet.readthedocs.io/en/latest/site_development/zeroframe_api_reference/#plugin-optionalmanager) features to handle the configuration of optional stuff. See the [optional field in content.json](https://zeronet.readthedocs.io/en/latest/site_development/content_json/#optional) files for how to determine which files are optional.\n\nAs for getting this all in JS.... unfortunately JS examples are lacking. But you can see [Kaffiene](/kaffiene.bit) and [Kaffie.bit's protocol test page](/kaffie.bit/test.html) for examples of how to use the ZeroFrame API alongside pure JS, rather than using classes and dealing with coffeescript.",
			"date_added": 1502971621022
		}
	],
	"answer_votes": [
		{
			"answer_id": 2,
			"answer_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"vote": 1
		}
	]
}