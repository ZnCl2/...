{
	"next_comment_id": 23,
	"next_question_id": 5,
	"next_answer_id": 5,
	"comments": [
		{
			"comment_id": 1,
			"reference_id": 2,
			"reference_type": "t",
			"reference_auth_address": null,
			"body": "binchan2@zeroid.bit: Thanks for all of your feedback! I believe I have fixed/added all of the things you mentioned!",
			"date_added": 1502612833321
		},
		{
			"comment_id": 2,
			"reference_id": 1,
			"reference_type": "a",
			"reference_auth_address": "19B89c2EedjWd7uXiHZAyo4yLhGrJjitpb",
			"body": "When updating the zite to support editing comments, I forgot to add a comment id to all of the existing comments before editing a comment (as a test to make sure it works), which means I lost two comments that I had on here. The first wasn't very important, but the second just said something like:\n> Editing Posts is at the top of my list. Hopefully I can get it done *very soon*.\n\nThis was posted after sayo's first comment about editing answers.",
			"date_added": 1502845778431
		},
		{
			"comment_id": 3,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"body": "This is a demo to show what a question page would look like.",
			"date_added": 1502846120224
		},
		{
			"comment_id": 4,
			"reference_id": 1,
			"reference_type": "a",
			"reference_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"body": "Yeah, that's what I thought. I can probably just type in the private key into the api call (*I think*, anyways), but is there a way to get the private key using an api call or something? I was wondering because doesn't ZeroBlog do something like this? Or does it just require you to paste in your private key?",
			"date_added": 1502919373629
		},
		{
			"comment_id": 5,
			"reference_id": 2,
			"reference_type": "a",
			"reference_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"body": "Thanks! The first link is *exactly* what I needed! I didn't know about the `stored` part in `[\"stored\", \"content.json\"]` or that `site_info.privatekey` was a thing.\n\nBTW, you can do links in this by using this format in markdown `[Link Title](link)`.",
			"date_added": 1502923399326
		},
		{
			"comment_id": 6,
			"reference_id": 1,
			"reference_type": "a",
			"reference_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"body": "Thanks! The first link is *exactly* what I needed! I didn't know about the `stored` part in `[\"stored\", \"content.json\"]` or that `site_info.privatekey` was a thing.\n\nBTW, you can do links in this by using this format in markdown `[Link Title](link)`.",
			"date_added": 1502952884267
		},
		{
			"comment_id": 7,
			"reference_id": 2,
			"reference_type": "a",
			"reference_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"body": "BTW, there is a bug when you delete a post, this is why I haven't created a button for deleting posts just yet. This is also why you are seeing my comment that I made on the answer that *I assume* you must have deleted, because this new answer is using the id of the answer that was deleted and my comment referenced that id. I am going to be fixing this eventually, just thought I'd let you know. The issue is already on [GitHub here](https://github.com/krixano/ZeroNet-Dev-Center/issues/16).",
			"date_added": 1502953579127
		},
		{
			"comment_id": 8,
			"reference_id": 2,
			"reference_type": "a",
			"reference_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"body": "I was just telling you there's a bug. Not really your fault, as I should have put a notice or something (or just fixed the issue). I have added a notice now.",
			"date_added": 1502955634065
		},
		{
			"comment_id": 9,
			"reference_id": 2,
			"reference_type": "a",
			"reference_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"body": "This bug has been fixed!!!",
			"date_added": 1503017240361
		},
		{
			"comment_id": 10,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "14UupgrdnT7Y8vMES7aqUFgD1fC5RYNrh8",
			"body": "Sorry about the bug! I am going to have it fixed hopefully very soon - I think I know what happened.",
			"date_added": 1503175285022
		},
		{
			"comment_id": 11,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "14UupgrdnT7Y8vMES7aqUFgD1fC5RYNrh8",
			"body": "*I believe* I have fixed the bug!",
			"date_added": 1503184098706
		},
		{
			"comment_id": 12,
			"reference_id": 3,
			"reference_type": "t",
			"reference_auth_address": null,
			"body": "eki@zeroid.bit That is a good question. Maybe someone can create such a zite? I'm already working on like 5 different zites so I don't know if I would want to create yet another zite for this, but someone else can. The only thing is I'm not sure how useful it would be considering I don't think there are that many plugins for ZeroNet currently (I could very well be wrong).",
			"date_added": 1508949253648
		},
		{
			"comment_id": 13,
			"reference_id": 4,
			"reference_type": "b",
			"reference_auth_address": null,
			"body": "I still do it this way, but I have recently changed which branch the stable version is on (to master) because I am now using the GitFlow branching model.",
			"date_added": 1512287109001
		},
		{
			"comment_id": 14,
			"reference_id": 4,
			"reference_type": "b",
			"reference_auth_address": null,
			"body": "I just noticed that the date the article was posted is correct on the Blog Posts page, but wrong on the actual article pages. On the article pages, it shows the current date.",
			"date_added": 1512287404582
		},
		{
			"comment_id": 15,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "1CaVUegZMXMjmRXtq5q3eZDqdtsoNvgep",
			"body": "I'm actually wondering the same thing.",
			"date_added": 1512386049898
		},
		{
			"comment_id": 16,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "1CaVUegZMXMjmRXtq5q3eZDqdtsoNvgep",
			"body": "",
			"date_added": 1512386054858
		},
		{
			"comment_id": 17,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "14tGkWydPLnPCVP5i9T4WSccnyAuLjEBnv",
			"body": "The problem with two people being able to sign and publish the same zite is that they will overwrite each others changes if they publish at the same time (or within the time it takes for all peers to get the changes). Instead, I would just manage everything in Git, and then pull in the changes and sign and publish that way. However, other people wouldn't be able to test out the zite before they commit. So instead, they could make their own zite to test stuff out on.\n\nBut, if you want to allow other people to sign the zite, you can give them the private key to the zite. This private key is in the `zeronet_root/data/users.json` file.",
			"date_added": 1512862704918
		},
		{
			"comment_id": 18,
			"reference_id": 3,
			"reference_type": "a",
			"reference_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"body": "It ignores any merged zite directories, the database file, .git directory along with .gitignore, map files, patches directory (if using patch-package from npm), user directory files, admin directory, node_modules and package.json file (if using npm), src directory if you're using something like gulp or webpack to create a bundled js out of these, gulpfile (if using gulp),, and typescript config (if using typescript).\n\nAlso, if you just wanted to add the .git directory to your regex, it'd be like this:\n```json\n{\n    \"ignore\": \"(data/users/.*|\\.git)\",\n}\n```",
			"date_added": 1512879165775
		},
		{
			"comment_id": 19,
			"reference_id": 3,
			"reference_type": "a",
			"reference_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"body": "Thanks. Just make sure that if you have a different setup where the `src` directory should *not* be ignored, that you remove it from the regex I provided (it and the `|` before it).",
			"date_added": 1512944792015
		},
		{
			"comment_id": 20,
			"reference_id": 5,
			"reference_type": "t",
			"reference_auth_address": null,
			"body": "I have replied to gitcenter@zeroid.bit's comments on [this ZeroMe post](/Me.ZeroNetwork.bit/?Post/12h51ug6CcntU2aiBjhP8Ns2e5VypbWWtv/12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu/1512858102).",
			"date_added": 1512969176204
		},
		{
			"comment_id": 21,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "1CfJnKoUQsNemk4UGDUUp55jtveeLUaWLG",
			"body": "I've never heard of the framework. But I'll take a look at it.\n\nAlso, it would be better if instead of this zite, you used [ZeroExchange](/ZeroExchange.bit) instead. It provides most of the same functionality (upvotes not being implemented *yet*) and that zite will be the one receiving updates in the future. I will be removing this questions section from this zite soon.",
			"date_added": 1519343968247
		},
		{
			"comment_id": 22,
			"reference_id": 1,
			"reference_type": "q",
			"reference_auth_address": "1CfJnKoUQsNemk4UGDUUp55jtveeLUaWLG",
			"body": "Can you provide a link to the website for this? I can't seem to find it.",
			"date_added": 1519344223683
		}
	],
	"questions": [
		{
			"question_id": 1,
			"title": "What Are Questions For?",
			"body": "What exactly are the questions for?",
			"date_added": 1501825235391,
			"tags": "1",
			"solution_id": 1,
			"solution_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu"
		},
		{
			"question_id": 2,
			"title": "Keyvalue Table?",
			"body": "Can someone tell me what the `to_keyvalue\" does exactly in this part from ZeroBlog's [dbschema file](https://github.com/HelloZeroNet/ZeroBlog/blob/master/dbschema.json#L16):\n```json\n\"data.json\": {\n    \"to_table\": [ \"post\" ],\n    \"to_keyvalue\": [ \"title\", \"description\", \"links\", \"next_post_id\", \"demo\", \"modified\", \"footer\" ]\n}\n```\n\n[EDIT] Hold on, I think I figured out kinda what it does. At first I thought the columns listed in `to_keyvalue` were for each post, but I looked at the `data.json` file and realized that they are not in the `posts` part. They are kinda like global variables where they don't belong to anything exactly, right? I'm guessing the information is stored in a table called `keyvalue` then?\n\nA couple more questions, Why, [in the ZeroBlog.coffee file](https://github.com/HelloZeroNet/ZeroBlog/blob/master/js/ZeroBlog.coffee#L84) from ZeroBlog, does it select `key, value` from `json` instead of `keyvalue`? Or does it not matter because you are left joining `keyvalue`? Would doing it like this produce the same result: `SELECT key, value FROM keyvalue LEFT JOIN json USING (json_id) WHERE ...`?",
			"date_added": 1502654314350,
			"solution_id": 1,
			"solution_auth_address": "19B89c2EedjWd7uXiHZAyo4yLhGrJjitpb",
			"tags": "7,8"
		},
		{
			"question_id": 3,
			"title": "Admin Page - Signing zite's content.json file?",
			"body": "Currently, I have an admin page for this ZeroNet Dev Center Zite that will write a blog post I typed into a textarea into the `blog.json` file. I am wondering how I can get it to where it will sign and publish the zite after it writes the blog post to the file. Currently, I have this code to do that, but it gives me an error saying it can't sign the content.json file. I suspect I have to use a different way of signing something that's not in a users directory. Any help would be appreciated!\n\n```javascript\nfunction postBlogPost() {\n\t// No account selected -> Display error\n\tif (!zeroframe.site_info.cert_user_id) {\n\t\tzeroframe.cmd(\"wrapperNotification\", [\"info\", \"Please, select your account.\"]);\n\t\tzeroframe.selectUser();\n\t\treturn;\n\t}\n\n\tvar data_inner_path = \"data/blog.json\";\n\tvar content_inner_path = \"content.json\";\n\n\tzeroframe.cmd(\"fileGet\", {\"inner_path\": data_inner_path, \"required\": false}, (data) => {\n\t\tif (data)\n\t\t\tdata = JSON.parse(data);\n\t\telse\n\t\t\tdata = { \"blogposts\": [] }\n\n\t\t// Get last post id and increment by 1\n\t\tvar id = 1;\n\t\tif (app.blogPosts.length > 0) {\n\t\t\tid += app.blogPosts[0].post_id;\n\t\t}\n\n\t\tdata.blogposts.push({\n\t\t\t\"post_id\": id,\n\t\t\t\"title\": document.getElementById('postTitle').value,\n\t\t\t\"slug\": document.getElementById('postSlug').value,\n\t\t\t\"body\": document.getElementById('postBody').value,\n\t\t\t\"tags\": \"\", // TODO\n\t\t\t\"date_added\": Date.now()\n\t\t});\n\n\t\t// Encode data array to utf8 json text\n\t\tvar json_raw = unescape(encodeURIComponent(JSON.stringify(data, undefined, '\\t')));\n\t\t// Write file to disk\n\t\tzeroframe.cmd(\"fileWrite\", [data_inner_path, btoa(json_raw)], (res) => {\n\t\t\tif (res == \"ok\") {\n\t\t\t\t// Reset the question input\n\t\t\t\tdocument.getElementById(\"postTitle\").value = \"\";\n\t\t\t\tdocument.getElementById(\"postSlug\").value = \"\";\n\t\t\t\tdocument.getElementById(\"postBody\").value = \"\";\n\n\t\t\t\t// Sign the changed file\n\t\t\t\tzeroframe.cmd(\"siteSign\", {\"inner_path\": content_inner_path}, (res) => {\n\t\t\t\t\t// Reload Blog Posts\n\t\t\t\t\tgetBlogPosts(true);\n\n\t\t\t\t\t// Publish to other users\n\t\t\t\t\tzeroframe.cmd(\"sitePublish\", {\"inner_path\": content_inner_path, \"sign\": false});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tzeroframe.cmd(\"wrapperNotification\", [\"error\", \"File write error: #{res}\"]);\n\t\t\t}\n\t\t});\n\t});\n}\n```",
			"tags": "7,2,8",
			"date_added": 1502917121889,
			"solution_id": 1,
			"solution_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL"
		},
		{
			"question_id": 4,
			"title": "NewsFeed: Difference Between Article and Post?",
			"body": "I was wondering what the differences between `article` and `post` are for the type of the feedFollow dbquery.",
			"tags": "7,8,6",
			"date_added": 1503090722542
		}
	],
	"answers": [
		{
			"answer_id": 1,
			"question_id": 1,
			"question_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"body": "The Questions section of this zite allows people to ask specific questions about ZeroNet Development. People can not only comment on a question, but also create an Answer for the question. Comments are also allowed on Answers. In order to create a question, click `Questions` in the navbar, then click `Create New Question`. Type the title, usually a brief question, and then the body where you expand on the title and go into more detail, including what specific questions you have and what you are looking for. After you have finished with that, click `Post`. Congrats, you have posted your first Question!",
			"date_added": 1501825448958
		},
		{
			"answer_id": 2,
			"question_id": 1,
			"question_auth_address": "14UupgrdnT7Y8vMES7aqUFgD1fC5RYNrh8",
			"body": "Yep, that is my plan actually. I am going to pull out the questions and turn it into a merger zite. Then, anyone can create a zite that uses the Questions data - *and* they can clone it for different topics (which means I will probably have to add a topic field in the database). I may also make another zite that will use all of these other merger zites and sort them by topic, etc.",
			"date_added": 1503175253028
		},
		{
			"answer_id": 3,
			"question_id": 2,
			"question_auth_address": "14tGkWydPLnPCVP5i9T4WSccnyAuLjEBnv",
			"body": "You can use the or operator for regex. Here's an example of the regex I pretty much use for every one of my zites:\n```json\n{\n     \"ignore\": \"(merged-.*|data/.*db|data/users/.*/.*|admin|node_modules|src|gulpfile.js|tsconfig\\.json|package(-lock)?\\.json|\\.gitignore|\\.git|.*map|patches)\",\n}\n```",
			"date_added": 1512878946739
		},
		{
			"answer_id": 4,
			"question_id": 3,
			"question_auth_address": "14tGkWydPLnPCVP5i9T4WSccnyAuLjEBnv",
			"body": "You can just add a favicon field to the `content.json` file, like this (directly from GitCenter source):\n```json\n{\n     \"favicon\": \"img/logo.png\",\n}\n```\n\n[Here's a link](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?18r929Hq8hE5Pi9Zf7ovMQVyn3WcGfxMgu/src/content.json@master) to Git Center's content.json file where you can see this.",
			"date_added": 1512879701689
		}
	],
	"answer_votes": [
		{
			"answer_id": 1,
			"answer_auth_address": "19B89c2EedjWd7uXiHZAyo4yLhGrJjitpb",
			"vote": 1
		},
		{
			"answer_id": 1,
			"answer_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"vote": 1
		},
		{
			"answer_id": 2,
			"answer_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"vote": 1
		},
		{
			"answer_id": 1,
			"answer_auth_address": "1FxRAgpsh5yqdeUZNNWymY6hnTqqhoaZyL",
			"vote": 1
		},
		{
			"answer_id": 1,
			"answer_auth_address": "1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh",
			"vote": 1
		},
		{
			"answer_id": 1,
			"answer_auth_address": "1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di",
			"vote": 1
		},
		{
			"answer_id": 3,
			"answer_auth_address": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu",
			"vote": 1
		},
		{
			"answer_id": 2,
			"answer_auth_address": "1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di",
			"vote": 1
		}
	]
}