{"next_paste_id":1,"next_comment_id":0,"paste":[{"paste_id":0,"description":"","body":"#[cfg(all(asm_available, target_arch=\"x86_64\"))]\nmacro_rules! uint_overflowing_mul {\n\t(U256, $n_words: expr, $self_expr: expr, $other: expr) => ({\n\t\tlet mut result: [u64; 4] = unsafe { mem::uninitialized() };\n\t\tlet self_t: &[u64; 4] = unsafe { &mem::transmute($self_expr) };\n\t\tlet other_t: &[u64; 4] = unsafe { &mem::transmute($other) };\n\n\t\tlet overflow: u64;\n\t\tunsafe {\n\t\t\tasm!(\"\n\t\t\t\tmov $5, %rax\n\t\t\t\tmulq $9\n\t\t\t\tmov %rax, $0\n\t\t\t\tmov %rdx, $1\n\n\t\t\t\tmov $5, %rax\n\t\t\t\tmulq $10\n\t\t\t\tadd %rax, $1\n\t\t\t\tadc $$0, %rdx\n\t\t\t\tmov %rdx, $2\n\n\t\t\t\tmov $5, %rax\n\t\t\t\tmulq $11\n\t\t\t\tadd %rax, $2\n\t\t\t\tadc $$0, %rdx\n\t\t\t\tmov %rdx, $3\n\n\t\t\t\tmov $5, %rax\n\t\t\t\tmulq $12\n\t\t\t\tadd %rax, $3\n\t\t\t\tadc $$0, %rdx\n\t\t\t\tmov %rdx, %rcx\n\n\t\t\t\tmov $6, %rax\n\t\t\t\tmulq $9\n\t\t\t\tadd %rax, $1\n\t\t\t\tadc %rdx, $2\n\t\t\t\tadc $$0, $3\n\t\t\t\tadc $$0, %rcx\n\n\t\t\t\tmov $6, %rax\n\t\t\t\tmulq $10\n\t\t\t\tadd %rax, $2\n\t\t\t\tadc %rdx, $3\n\t\t\t\tadc $$0, %rcx\n\t\t\t\tadc $$0, $3\n\t\t\t\tadc $$0, %rcx\n\n\t\t\t\tmov $6, %rax\n\t\t\t\tmulq $11\n\t\t\t\tadd %rax, $3\n\t\t\t\tadc $$0, %rdx\n\t\t\t\tor %rdx, %rcx\n\n\t\t\t\tmov $7, %rax\n\t\t\t\tmulq $9\n\t\t\t\tadd %rax, $2\n\t\t\t\tadc %rdx, $3\n\t\t\t\tadc $$0, %rcx\n\n\t\t\t\tmov $7, %rax\n\t\t\t\tmulq $10\n\t\t\t\tadd %rax, $3\n\t\t\t\tadc $$0, %rdx\n\t\t\t\tor %rdx, %rcx\n\n\t\t\t\tmov $8, %rax\n\t\t\t\tmulq $9\n\t\t\t\tadd %rax, $3\n\t\t\t\tor %rdx, %rcx\n\n\t\t\t\tcmpq $$0, %rcx\n\t\t\t\tjne 2f\n\n\t\t\t\tpopcnt $8, %rcx\n\t\t\t\tjrcxz 12f\n\n\t\t\t\tpopcnt $12, %rcx\n\t\t\t\tpopcnt $11, %rax\n\t\t\t\tadd %rax, %rcx\n\t\t\t\tpopcnt $10, %rax\n\t\t\t\tadd %rax, %rcx\n\t\t\t\tjmp 2f\n\n\t\t\t\t12:\n\t\t\t\tpopcnt $12, %rcx\n\t\t\t\tjrcxz 11f\n\n\t\t\t\tpopcnt $7, %rcx\n\t\t\t\tpopcnt $6, %rax\n\t\t\t\tadd %rax, %rcx\n\n\t\t\t\tcmpq $$0, %rcx\n\t\t\t\tjne 2f\n\n\t\t\t\t11:\n\t\t\t\tpopcnt $11, %rcx\n\t\t\t\tjrcxz 2f\n\t\t\t\tpopcnt $7, %rcx\n\n\t\t\t\t2:\n\t\t\t\t\"\n\t\t\t\t: /* $0 */ \"={r8}\"(result[0]), /* $1 */ \"={r9}\"(result[1]), /* $2 */ \"={r10}\"(result[2]),\n\t\t\t\t  /* $3 */ \"={r11}\"(result[3]), /* $4 */  \"={rcx}\"(overflow)\n\n\t\t\t\t: /* $5 */ \"m\"(self_t[0]), /* $6 */ \"m\"(self_t[1]), /* $7 */  \"m\"(self_t[2]),\n\t\t\t\t  /* $8 */ \"m\"(self_t[3]), /* $9 */ \"m\"(other_t[0]), /* $10 */ \"m\"(other_t[1]),\n\t\t\t\t  /* $11 */ \"m\"(other_t[2]), /* $12 */ \"m\"(other_t[3])\n           \t\t: \"rax\", \"rdx\"\n\t\t\t\t:\n\n\t\t\t);\n\t\t}\n\t\t(U256(result), overflow > 0)\n\t});\n\t($name:ident, $n_words:expr, $self_expr: expr, $other: expr) => (\n\t\tuint_overflowing_mul_reg!($name, $n_words, $self_expr, $other)\n\t)\n}","language":"text/x-rustsrc","encrypted":false,"added":1457977185}],"comment":[]}