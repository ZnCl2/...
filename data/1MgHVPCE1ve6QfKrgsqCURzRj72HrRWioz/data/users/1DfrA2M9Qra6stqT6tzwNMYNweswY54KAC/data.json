{"next_paste_id":4,"next_comment_id":0,"paste":[{"paste_id":1,"description":"","body":"#!/bin/bash\n# Bitcoin-Gen by BeneGu\n#\n# This is a small bash tool that generates a Bitcoin key pair\n# offline. It makes use of the random number generator that comes\n# with OpenSSL. Results do not rely on an online tool and are not\n# sent anywhere (for the paranoid: use a Linux Boot CD and detach\n# the network cable / disable WLAN).\n#\n# Please remember that you must never ever loose your private key,\n# so pipe the output to a file or copy/print the key.\n#\n# Requires desktop calculator and OpenSSl (usually installed,\n# otherwise install package bc)\n \ndeclare -a base58=(\n      1 2 3 4 5 6 7 8 9\n    A B C D E F G H J K L M N P Q R S T U V W X Y Z\n    a b c d e f g h i j k m n o p q r s t u v w x y z\n)\nunset dcr; for i in {0..57}; do dcr+=\"${i}s${base58[i]}\"; done\ndeclare ec_dc='\nI16i7sb0sa[[_1*lm1-*lm%q]Std0>tlm%Lts#]s%[Smddl%x-lm/rl%xLms#]s~\n483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\n79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\n2 100^d14551231950B75FC4402DA1732FC9BEBF-so1000003D1-ddspsm*+sGi\n[_1*l%x]s_[+l%x]s+[*l%x]s*[-l%x]s-[l%xsclmsd1su0sv0sr1st[q]SQ[lc\n0=Qldlcl~xlcsdscsqlrlqlu*-ltlqlv*-lulvstsrsvsulXx]dSXxLXs#LQs#lr\nl%x]sI[lpSm[+q]S0d0=0lpl~xsydsxd*3*lal+x2ly*lIx*l%xdsld*2lx*l-xd\nlxrl-xlll*xlyl-xrlp*+Lms#L0s#]sD[lpSm[+q]S0[2;AlDxq]Sdd0=0rd0=0d\n2:Alp~1:A0:Ad2:Blp~1:B0:B2;A2;B=d[0q]Sx2;A0;B1;Bl_xrlm*+=x0;A0;B\nl-xlIxdsi1;A1;Bl-xl*xdsld*0;Al-x0;Bl-xd0;Arl-xlll*x1;Al-xrlp*+L0\ns#Lds#Lxs#Lms#]sA[rs.0r[rl.lAxr]SP[q]sQ[d0!<Qd2%1=P2/l.lDxs.lLx]\ndSLxs#LPs#LQs#]sM[lpd1+4/r|]sR\n';\n \nencodeBase58() {\n   dc -e \"16i $(echo $1 | tr '[:lower:]' '[:upper:]') [3A ~r d0<x]dsxx +f\" |\n   while read -r n; do echo -n \"${base58[n]}\"; done\n}\n \nchecksum() {\n   perl -we \"print pack 'H*', '$1'\" |\n   openssl dgst -sha256 -binary |\n   openssl dgst -sha256 -binary |\n   perl -we \"print unpack 'H8', join '', <>\"\n}\n \nhashing() {\n   openssl dgst -sha256 -binary |\n   openssl dgst -rmd160 -binary |\n   perl -we \"print unpack 'H*', join '', <>\"\n}\n \nhex2Address() {\n   local version=${2:-00} x=\"$(printf \"%${3:-40}s\" $1 | sed 's/ /0/g')\"\n   printf \"%34s\\n\" \"$(encodeBase58 \"$version$x$(checksum \"$version$x\")\")\" |\n  {\n     if ((version == 0))\n     then sed 's/ */1/'\n     else cat\n     fi\n  }\n}\n \nexponent=\"$(openssl rand -rand <(date +%s%N; ps -ef) -hex 2 2>&-)\";for i in b2c 4 ea; do exponent=\"$exponent$i$exponent$i\"; done\nbtc_privkey=\"$(hex2Address \"$exponent\" 80 64)\"\ndc -e \"$ec_dc lG I16i$(echo $exponent | tr '[:lower:]' '[:upper:]')ri lMx 16olm~ n[ ]nn\" |\n{\n  read y x\n  X=\"$(printf \"%64s\" $x| sed 's/ /0/g')\"\n  Y=\"$(printf \"%64s\" $y| sed 's/ /0/g')\"\n  if [[ \"$y\" =~ [02468ACE]$ ]]\n  then y_parity=\"02\"\n  else y_parity=\"03\"\n  fi\n  btc_addr=\"$(hex2Address \"$(perl -e \"print pack q(H*), q(04$X$Y)\" | hashing)\")\"\n   echo ---\n   echo \"Attention! Do never ever disclose the following key and do not lose it.\"\n   echo ---\n   echo \"Private Key: $btc_privkey\"\n   echo \"Corresponding address: $btc_addr\"\n   echo ---\n}","language":"text/x-sh","encrypted":false,"added":1566327601},{"paste_id":3,"description":"A script that will turn a QubesOS fedora30 templateVM into an ZeroNet templateVM","body":"#!/bin/bash\n\nprefix='\\033[0;35m[ZeroNetInstall]\\033[0m' #Colored in purple\n\necho -e \"$prefix You are about to run an script that will turn the default fedora 29 templateVM into an ZeroNet templateVM.\"\necho -e \"$prefix If this script fails partway through the installation, please delete the current templateVM and clone a new one. This script assumes that it's run in a clean environment.\"\necho -e \"$prefix DO NOT RUN THIS SCRIPT IN YOUR ORIGINAL FEDORA29 TEMPLATEVM! ONLY IN CLONES OF IT!\"\necho -e \"$prefix You are encouraged to actually open this script and look at(=check) what it actually does.\"\necho -e \"$prefix #########################################\"\necho -e \"$prefix  NEVER BLINDLY TRUST SHELL/BASH SCRIPTS! \"\necho -e \"$prefix #########################################\"\nread -n1 -p \"Do you wish to continue(a=Do not ask me during the installation)[y/a/N]?\" isWantingToContinue\necho -e \"\"\nisNotAutoAccept=true\ncase $isWantingToContinue in  \n  y|Y) ;; #nothing\n  a|A) isNotAutoAccept=false;;\n  *) exit;;\nesac\n\n#check for root\nif [ \"$EUID\" -ne 0 ]\n  then echo -e \"$prefix This script must be run as root.\"\n  exit\nfi\necho -e \"$prefix Get Tor signing keys\"\nsudo -u user gpg --keyserver keys.gnupg.net --recv-keys 0x4E2C6E8793298290 0xEB774491D9FF06E2 0xD1483FA6C3C07136\necho -e \"$prefix Get ZeroNet signing keys\"\nsudo -u user gpg --keyserver keys.gnupg.net --recv-keys 0x5B63BAE6CB9613AE 0x4AEE18F83AFDEB23\necho -e \"$prefix Install core dependencies\"\nif $isNotAutoAccept\n#chkconfig is not installed by default since fedora30 TODO find an alternative way to make both autostart. (Maybe crontab?)\nthen\n  sudo dnf install python3 python3-pip git chkconfig\nelse\n  sudo dnf install python3 python3-pip git chkconfig -y\nfi\necho -e \"$prefix Clone ZeroNet\"\ncd /usr/share/\nsudo git clone https://github.com/HelloZeroNet/ZeroNet.git ZeroNet\ncd ZeroNet/\n#change branch\nsudo git checkout py3\nif $isNotAutoAccept\nthen\n  echo -e \"$prefix Please verify that nothing is red and all commits have a 'Good signature'.\"\n  echo -e -n \"$prefix Press any key to show the commits. (you can continue by pressing 'q')\"\n  read -n1\n  sudo -u user git log --show-signature\n  echo -e -n \"$prefix Are the signatures valid(good)[y/N]?\"\n  read -n1 gitCloneValid \n  echo -e \"\"\n  case $gitCloneValid in  \n    y|Y) ;; #nothing\n    *) echo -e \"$prefix Operation canceled. Apparently some(or all) commits of the cloned ZeroNet repo were invalid!\" && exit;;\n  esac\nfi\n\necho -e \"$prefix Create user 'zeronet'\"\nsudo adduser -M -r -s /sbin/nologin zeronet\necho -e \"$prefix Add ZeroNet data dir\"\nsudo mkdir /usr/local/etc/ZeroNetData\necho -e \"$prefix Set permissions\"\nsudo chown -R zeronet:zeronet /usr/local/etc/ZeroNetData\nsudo chown -R zeronet:zeronet /usr/share/ZeroNet/\n#only allow to read and write these folders and only for user zeronet\nsudo chmod 700 /usr/local/etc/ZeroNetData\nsudo chmod -R -077 /usr/share/ZeroNet/ #executable files are allowed only for owner(user 'zeronet')\necho -e \"$prefix Install Zeronet dependencies\"\nif $isNotAutoAccept\nthen\n  sudo dnf install redhat-rpm-config python3-devel\nelse\n  sudo dnf install redhat-rpm-config python3-devel -y\nfi\n#Needs to be gotten somewhere else:\n#base58 https://github.com/keis/base58\n#merkletools https://github.com/Tierion/pymerkletools\n#pyelliptic https://github.com/yann2192/pyelliptic\n#websocket_client https://github.com/websocket-client/websocket-client.git\n#gevent-websocket https://www.gitlab.com/noppo/gevent-websocket\n#bencode.py https://github.com/fuzeman/bencode.py\n#coincurve https://github.com/ofek/coincurve\n#python-bitcoinlib https://github.com/petertodd/python-bitcoinlib\n#Exists\n#python3-gevent\n#python3-msgpack\n#python3-rsa\n#python3-pysocks\n#python3-pyasn1\n#python3-maxminddb\nsudo python3 -m pip install -t /usr/lib/python3.7/ -r requirements.txt\n#set python lib path\nif [ \"$PYTHONPATH\" != \"/usr/lib/python3.7/\" ]\nthen \n  echo \"PYTHONPATH=/usr/lib/python3.7/\" >> /etc/environment\nfi\n\necho -e \"$prefix Add tor always config to ZeroNet\"\ncat > /usr/share/ZeroNet/zeronet.conf <<'EOL'\n[global]\nopen_browser = False\ndata_dir = /usr/local/etc/ZeroNetData\ntor = always\ntrackers_proxy = tor\nforce_encryption\ndisable_udp\nconnected_limit = 16\nlog_level = ERROR\nglobal_connected_limit = 1024\nworkers = 10\ntor_hs_limit = 20\nworking_shared_trackers_limit = 20\noptional_limit = 95%\nEOL\necho -e \"$prefix Install Tor\"\nif $isNotAutoAccept\nthen\n  sudo dnf install tor\nelse\n  sudo dnf install tor -y\nfi\necho -e \"$prefix Configure Tor for use with ZeroNet\"\nsudo cat >> /etc/tor/torrc <<'EOL'\n#ZeroNet access\nCookieAuthentication 1\nControlPort 9051\nEOL\n#add read permissions to zeronet user for tor auth cookie\nsudo usermod -a -G toranon zeronet\necho -e \"$prefix Make Tor and ZeroNet autostart\"\ncd /etc/init.d/\nsudo cat > start-zeronet <<'EOL'\n#!/bin/bash\n# chkconfig: 345 99 10\n# description: A script to start Zeronet and Tor on boot time.\n\ncase \"$1\" in\n 'start')\n   ##Start Tor and save it's pid\n   sudo -u toranon tor &\n   tor_PID=$!\n   echo -e $tor_PID > /var/run/ZeroNet/tor.pid\n   ##Start Zeronet and save it's pid\n   export PYTHONPATH=/usr/lib/python3.7/\n   sudo -u zeronet python3 /usr/share/ZeroNet/zeronet.py &\n   zeronet_PID=$!\n   echo -e $zeronet_PID > /var/run/ZeroNet/zeronet.pid\n   ;;\n 'stop')\n   ##Getting the pid for Zeronet, stoping it and removing it's pid file\n   if [ -f /var/run/ZeroNet/zeronet.pid ] ; then \n     zeronet_PID=$(</var/run/ZeroNet/zeronet.pid);\n     kill $zeronet_PID\n     rm /var/run/ZeroNet/zeronet.pid\n   fi\n   ##Getting the pid for Tor, stoping it and removing it's pid file\n   if [ -f /var/run/ZeroNet/tor.pid ] ; then \n     tor_PID=$(</var/run/ZeroNet/tor.pid);\n     kill $tor_PID\n     rm /var/run/ZeroNet/tor.pid\n   fi\n   ;;\nesac\nEOL\nsudo chmod +x start-zeronet\nif $isNotAutoAccept\nthen\n  sudo chkconfig --list start-zeronet\n  echo -e -n \"$prefix Does 'start-zeronet' show up here[y/N]?\"\n  read -n1 isShowingUp \n  echo -e \"\"\n  case $isShowingUp in  \n    y|Y) ;; #nothing\n    *)echo -e \"$prefix Operation canceled. Try installing ZeroNet manually!\" && exit;;\n  esac\nfi\nsudo chkconfig --add start-zeronet\necho -e \"$prefix Prepare home.orig\"\nsudo cp -R /usr/local/etc/ZeroNetData /usr/local.orig/etc/\nsudo chmod 700 /usr/local.orig/etc/ZeroNetData\nsudo chown -R zeronet:zeronet /usr/local.orig/etc/ZeroNetData\necho -e \"$prefix Download Tor browser\"\ncd /home/user/Downloads/\nwget https://www.torproject.org/dist/torbrowser/8.5.4/tor-browser-linux64-8.5.4_en-US.tar.xz\necho -e \"$prefix Download Tor browser signature\"\nwget https://www.torproject.org/dist/torbrowser/8.5.4/tor-browser-linux64-8.5.4_en-US.tar.xz.asc\nsudo -u user gpg --verify tor-browser-linux64-8.5.4_en-US.tar.xz.asc tor-browser-linux64-8.5.4_en-US.tar.xz\nif $isNotAutoAccept\nthen\n  echo -e -n \"$prefix Is the signature valid(good)[y/N]?\"\n  read -n1 isTBBValid \n  echo -e \"\"\n  case $isTBBValid in  \n    y|Y) ;; #nothing\n    *)echo -e \"$prefix Operation canceled. Apparently the Signature of the Tor Browser Bundle was invalid!\" && exit;;\n  esac\nfi\necho -e \"$prefix Extract Tor Browser Bundle\"\ntar xf tor-browser-linux64-8.5.4_en-US.tar.xz\necho -e \"$prefix Set paths and permissions\"\nsudo mv tor-browser_en-US/ /usr/share/tor-browser_en-US/\nsudo chown -R user:user /usr/share/tor-browser_en-US/\n\nwhile :\ndo\n\necho -e \"$prefix Please configure the Tor Browser Bundle\"\necho -e \"$prefix You must:\"\necho -e \"$prefix 1) Add '127.0.0.1:43110' to the 'No proxy for' field, in the proxy settings\"\necho -e \"$prefix You really should:\"\necho -e \"$prefix 1) Set the 'Security Level' to 'Safest' in the 'Security Settings' of the Tor\n Button\"\necho -e \"$prefix You could:\"\necho -e \"$prefix 1) Set ZeroHello as homepage, by going into 'preferences' and entering '127.0.0.1:43110' in the 'Home Page'- field\"\necho -e \"$prefix 2) In the 'preferences', enable autoscroll\"\ncd /usr/share/tor-browser_en-US/\nsudo runuser -u user ./start-tor-browser.desktop\necho -e -n \"$prefix Have you closed the Tor Browser and are done with configuring it[y/N]?\"\nread -n1 isTBBConfigured \necho -e \"\"\ncase $isTBBConfigured in  \n  y|Y) break;;\n  *) \n    echo -e -n \"$prefix Do you wish to cancel the installation[y/N]?\"\n    read -n1 isCancelWanted\n    echo -e \"\"\n    case $isCancelWanted in  \n      y|Y) echo -e \"$prefix Operation canceled. Some modifications have been made to the system. You need to clean up or delete this template and start over!\" && exit;;\n      *) ;; #nothing loop over\n    esac\n  ;;\nesac\ndone\necho -e \"$prefix Set Qubes shortcut for Tor Browser\"\nsudo cp /usr/share/tor-browser_en-US/start-tor-browser.desktop /usr/share/applications/start-tor-browser.desktop\nsudo chmod 644 /usr/share/applications/start-tor-browser.desktop\n\necho -e \"$prefix Automated installation done, everything should work now.\"\necho -e \"$prefix Only thing left to do is it make an AppVM from this template and start using ZeroNet!\"","language":"text/x-sh","encrypted":false,"added":1567356639}],"comment":[]}