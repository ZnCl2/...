{"next_paste_id":2,"next_comment_id":0,"paste":[{"paste_id":0,"description":"","body":"How to setup a ZeroNet proxy.\n\nWhy do you need it?\n1. You can browse ZeroNet via personal proxy from your smartphone or any other device as a regular site.\n2. It will be online 24/7 which is good for connectivity and peer discovery.\n3. You can share it with your friends (or all Internet users) who can't run ZeroNet on their devices.\n4. You can browse ZeroNet on networks with a censorship/firewall/NAT.\n\nFirst you need to obtain a domain name and a VPS. There are plenty of free domains on the Internet, VPS prices start from several dollars per month (1 Core, 512 MB RAM and 10 GB disk will be more than enough). Make an A-record of you domain (and www subdomain) pointing to the IP address of your VPS.\nInstructions below have been tested on Debian 9 Stretch but probably will work with other Linux-based distributions with slight alterations.\n\nConnect to the VPS via SSH as root and do the following:\n\n1. Update package list:\nroot@server# apt-get update\n\n2. Install necessary packages:\nroot@server# apt-get install nginx git python-msgpack python-gevent net-tools dirmngr\n\n3. Open http://YOUR-DOMAIN/ in a browser and you must see a \"Welcome to nginx!\" page.\n\n4. Clone Let's Encrypt repository:\nroot@server# cd /root\nroot@server# git clone https://github.com/letsencrypt/letsencrypt\n\n5. Obtain a SSL-sertificate (it will ask your e-mail in order to notify you in case, for example, if your certificate can't be renewed):\nroot@server# /root/letsencrypt/letsencrypt-auto certonly --webroot -w /var/www/html/ -d YOUR-DOMAIN -d www.YOUR-DOMAIN\n\n6. Open /etc/nginx/sites-enabled/default, and append this to the end (don't forget to replace YOUR-DOMAIN):\nserver {\n   listen 443 ssl http2;\n   listen [::]:443 ssl http2;\n   ssl_certificate /etc/letsencrypt/live/YOUR-DOMAIN/fullchain.pem;\n   ssl_certificate_key /etc/letsencrypt/live/YOUR-DOMAIN/privkey.pem;\n   root /var/www/html;\n   index index.html index.htm index.nginx-debian.html;\n   server_name _;\n   location / {\n       try_files $uri $uri/ =404;\n   }\n}\n\n7. Restart nginx:\nroot@server# /etc/init.d/nginx restart\n\n8. Open https://YOUR-DOMAIN/ in a browser and you must again see a \"Welcome to nginx!\" page.\n\n9. Open cron editor:\nroot@server# crontab -e\nAnd append the following line:\n\n0 0 5,15,25 * * /root/letsencrypt/letsencrypt-auto renew && /etc/init.d/nginx restart\n\nSave it. This command will renew certificate when it will be close to expiring.\n\n10. Create non-privileged user without shell for running ZeroNet:\nroot@server# useradd -m -d /home/zeronet --shell /usr/sbin/nologin zeronet\n\n11. Clone ZeroNet repository:\nroot@server# cd /home/zeronet\nroot@server# git clone https://github.com/HelloZeroNet/ZeroNet.git\nroot@server# chown -R zeronet: ZeroNet\n\n12. Install supervisor (to run ZeroNet forever):\nroot@server# apt-get install supervisor\n\n13. Create a new file /etc/supervisor/conf.d/zeronet.conf with the following content:\n[program:zeronet]\ncommand=/home/zeronet/ZeroNet/zeronet.py\nautostart=true\nautorestart=true\nredirect_stderr=true\nstdout_logfile=/var/log/supervisor/zeronet.log\nlogfile_maxbytes=50MB\nlogfile_backups=10\nloglevel=debug\nuser=zeronet\n\n14. Restart supervisor:\nroot@server# /etc/init.d/supervisor restart\n\n15. Check open ports with command:\nroot@server# netstat -tnlp\n\nYou must see something like this:\n\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      4567/nginx: master  \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      633/sshd            \ntcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      4567/nginx: master  \ntcp        0      0 0.0.0.0:18399           0.0.0.0:*               LISTEN      5726/python2.7      \ntcp        0      0 127.0.0.1:43110         0.0.0.0:*               LISTEN      5726/python2.7      \ntcp6       0      0 :::80                   :::*                    LISTEN      4567/nginx: master  \ntcp6       0      0 :::22                   :::*                    LISTEN      633/sshd            \ntcp6       0      0 :::443                  :::*                    LISTEN      4567/nginx: master\n\n16. Create strong Diffie-Hellman parameters for nginx:\nroot@server# mkdir /etc/nginx/ssl\nroot@server# openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048\n\n17. Remove all content from /etc/nginx/sites-enabled/default and replace it with this (don't forget to substitute YOUR-DOMAIN):\nserver {\n   listen         80;\n   listen    [::]:80;\n   server_name    YOUR-DOMAIN www.YOUR-DOMAIN;\n   location /.well-known {\n       alias /var/www/html/.well-known;\n   }\n   location / {\n       return 301 https://YOUR-DOMAIN$request_uri;\n   }\n}\nserver {\n   listen 443 ssl http2;\n   listen [::]:443 ssl http2;\n   ssl_certificate /etc/letsencrypt/live/YOUR-DOMAIN/fullchain.pem;\n   ssl_certificate_key /etc/letsencrypt/live/YOUR-DOMAIN/privkey.pem;\n   ssl_dhparam /etc/nginx/ssl/dhparam.pem;\n   add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains;\" always;\n   server_name www.YOUR-DOMAIN;\n   return 301 https://YOUR-DOMAIN$request_uri;\n}\nserver {\n   listen 443 ssl http2;\n   listen [::]:443 ssl http2;\n   ssl_certificate /etc/letsencrypt/live/YOUR-DOMAIN/fullchain.pem;\n   ssl_certificate_key /etc/letsencrypt/live/YOUR-DOMAIN/privkey.pem;\n   ssl_dhparam /etc/nginx/ssl/dhparam.pem;\n   server_name YOUR-DOMAIN;\n   add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains;\" always;\n   location / {\n       proxy_pass http://127.0.0.1:43110;\n   }\n   location /Websocket {\n       proxy_pass http://127.0.0.1:43110;\n       proxy_http_version 1.1;\n       proxy_read_timeout 1h;\n       proxy_set_header Upgrade $http_upgrade;\n       proxy_set_header Connection \"upgrade\";\n   }\n}\n\n18. Restart nginx:\nroot@server# /etc/init.d/nginx restart\n\n19. Open https://YOUR-DOMAIN/ in a browser, you must see a ZeroNet hello page.\n\n20. Now we are going to install Tor (follow this instructions):\nroot@server# echo 'deb http://deb.torproject.org/torproject.org stretch main' >> /etc/apt/sources.list.d/tor.list\nroot@server# echo 'deb-src https://deb.torproject.org/torproject.org stretch main' >> /etc/apt/sources.list.d/tor.list\nroot@server# gpg --keyserver keys.gnupg.net --recv A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89\nroot@server# gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -\nroot@server# apt update\nroot@server# apt install tor deb.torproject.org-keyring\n\n21. Append two strings to /etc/tor/torrc:\nroot@server# echo 'ControlPort 9051' >> /etc/tor/torrc\nroot@server# echo 'CookieAuthentication 1' >> /etc/tor/torrc\n\n22. Restart Tor:\nroot@server# /etc/init.d/tor restart\n\n23. Add permission to read the auth cookie by zeronet user:\nroot@server# usermod -a -G debian-tor zeronet\n\n24. Restart supervisor:\nroot@server# /etc/init.d/supervisor restart\n\n25. Open https://YOUR-DOMAIN/ in a browser, you must see that port is opened and Tor is available.\n\n26. Now you can enable multiuser plugin:\nroot@server# mv /home/zeronet/ZeroNet/plugins/disabled-Multiuser /home/zeronet/ZeroNet/plugins/Multiuser\nroot@server# /etc/init.d/supervisor restart\n\n27. If you want, you can protect user interface with a password (replace YOUR-PASSWORD):\nroot@server# mv /home/zeronet/ZeroNet/plugins/disabled-UiPassword /home/zeronet/ZeroNet/plugins/UiPassword\nroot@server# echo '[global]' > /home/zeronet/ZeroNet/zeronet.conf\nroot@server# echo 'ui_password = YOUR-PASSWORD' >> /home/zeronet/ZeroNet/zeronet.conf\nroot@server# chown zeronet: /home/zeronet/ZeroNet/zeronet.conf\nroot@server# /etc/init.d/supervisor restart\n\n28. Try to reboot your VPS, all services must start automatically. Also try to check certificate renewal with the following command:\nroot@server# /root/letsencrypt/letsencrypt-auto renew --dry-run\n\n29. If your proxy is public, please, share link on reddit, ZeroTalk, Millchan, ZeroWiki, etc. ^_^","language":"text/plain","encrypted":false,"added":1542579998},{"paste_id":1,"description":"","body":"Zeronet Trackers\n\nTracker is a computer (server) running special software that helps other computers (clients, peers) to connect each other.\n\nZeroNet is a peer to peer (P2P) network and by default is provided with the default list of trackers that helps user (peer) to interconnect with other peers. User can also add custom trackers via zeronet.conf or via /Config page. Adding new trackers is not necessary, because Zeronet application is made to automatically exchange trackers between zeronet users (peers).\n\n24/7 running computer with public IP & ZeroNet software can serve as a tracker when \"bootstrapper\" plugin is enabled by renaming zeronetdirectory/plugins/disabled-Bootstrapper to zeronetdirectory/plugins/Bootstrapper and restarting ZeroNet.\n\nAnother option to become tracker is to run https://github.com/ZeroNetJS/zeronet-tracker on a nonstop running server with public IP.\n","language":"text/plain","encrypted":false,"added":1561347797}],"comment":[]}