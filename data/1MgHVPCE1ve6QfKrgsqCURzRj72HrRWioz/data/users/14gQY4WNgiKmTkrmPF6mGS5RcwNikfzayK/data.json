{"next_paste_id":9,"next_comment_id":0,"paste":[{"paste_id":0,"description":"Fonction PHP pour rendre cliquables les liens dans un texte","body":"function cliquable($txt){\n$in=array( '`((?:https?|ftp)://\\S+[[:alnum:]]/?)`si', '`((?<!//)(www\\.\\S+[[:alnum:]]/?))`si');\n$out=array('<a href=\"$1\" >$1</a> ','<a href=\"http://$1\" >$1</a>');\nreturn preg_replace($in,$out,$txt);\n}\n","language":"application/x-httpd-php","encrypted":false,"added":1530427869},{"paste_id":6,"description":"","body":"#!/bin/bash\n\n### Vérification des documents inclus dans un blog de type \"poster\"\n\n### (vous devez avoir installé \"yad\" sur votre machine)\n\n# Placez ici le chemin de votre dossier data de zeronet\nzero_data=~/snap/zeronet/common/data\n\n# Et ici l'identité du blog à examiner\nid_blog=1DAfthE8kn5xn5cByFuxMiztxYxK8hb72u\n\n# options pour yad\nopt=\"--borders=30 --no-buttons\"\n\n# pour afficher les messages d'erreur\nfunction err\n{\nyad $opt  --title \"Erreur\"  --text \"$1\"\nexit\n}\nzero_blog=$zero_data/$id_blog\nif [ -d $zero_blog ]; then\n# extraction du titre\ntitre=`sed -n '/\\\"title/ {s/\\\"title\\\"://; p}' $zero_blog/content.json `\n# liste des fichiers chargés\nres1=`ls  $zero_blog/uploads `\nif [ -z $res1 ]; then\nerr \"Aucun document dans uploads\"\nfi\nsep1=\"Liste des fichiers dans uploads \\n\\n\"\nres2=`cat  $zero_blog/content.json | grep -e \"\\\"uploads/\" `\nsep2=\"\\n\\n et ceux réellement connus dans content.json \\n\\n\"\nyad $opt --title \"$titre\" --text \"$sep1$res1$sep2$res2\"\nelse\nerr \"$zero_blog \\n\\n chemin inconnu !\"\nfi\n","language":"text/plain","encrypted":false,"added":1538125742},{"paste_id":7,"description":"","body":"#!/bin/bash\n### Recherche de Zites\n\n# Chemin du dossier data de Zeronet (adapter à votre cas)\nzero_data=~/snap/zeronet/common/data\n\n# Définitions pour yad\ndim1=\" --borders=10\"\ndim2=\"--width=700 --height=700 --margins=10\"\ndim3=\"--width=600 --height=200 --margins=10\"\n\n# Les différentes fonctions\n# -------------------------\n\n# affichage d'un message, puis fin du script\nfunction info\n{\nyad --borders=30 --no-buttons --title \"Message\"  --text \"$1\"\nexit\n}\n\n# test existence d'un dossier\nfunction test_dir {\nif [ ! -d $1 ]; then  info \"$1  ???? \"\nfi\n}\n\n# extraction du nom d'un zite\nfunction lec_nom {\nnom=`sed -n '/\\\"title/ {s/\\\"title\\\"://; p}' $1/content.json | strings `\ndeclare -i nb=${#nom}\nif [ -z $nom ]; then\n nom=\"   ?  \"\nelif (( nb > 30 )); then\n  nom=\"${nom:0:30}...\"\nfi\nnx=${nom//\\\"/}\nnom=${nx//\\,/}\n}\n\n#############################################\n\n\ntest_dir $zero_data\ncd $zero_data\n\nwhile :\ndo\nmot=`yad $dim1 --entry --title=\"recherche de sites\" \\\n --text=\"Entrer le début de l'identifiant\" `\nif [ -z $mot ]; then exit \nfi\necho  > /tmp/zz\nls | grep -i \"^$mot\" | while read ident\ndo\n if [[ ${ident:0:1} = \"1\" ]]; then\n  lec_nom $ident\n  echo \"$ident --> $nom\" >> /tmp/zz\n fi\ndone\nyad $dim3 --text-info --wrap --title=\"Résultat\" < /tmp/zz \n\ndone\n","language":"text/x-sh","encrypted":false,"added":1538125969},{"paste_id":8,"description":"Examiner une base SQLITE 3","body":"# Pour examiner une base SQLITE3\n\n# Ce script nécessite la présence de yad\n\n\nwhile :\ndo\n# recuperer le nom de la base à examiner\nbd=`yad --borders=50 --title=\"Vérification de base SQLITE\" \\\n--text=\"Faire glisser ici\\n\\n la base à examiner.\\n\" \\\n --dnd --directory  | sed 's/^.......//'`\nif [ -z $bd ]; then\nexit\nfi\n\nident=`head -c15 $bd `\nif [[ $ident != 'SQLite format 3' ]]; then\nyad --borders=50 --title=\"Erreur\" --text=\"$bd \\n\\n n'est pas un fichier SQLITE 3\"\nexit\nfi\n\nwhile :\ndo\n# liste des tables et possibilite d'en choisir une à examiner\nsqlite3 $bd \"select sql from SQLITE_MASTER\" | \\\nyad --width=1000 --height=400 --list  --title \"structure de $bd\" --column=desc > /tmp/zz\n\n# on extrait uniquement le nom de la table\ntbl=`cat /tmp/zz | cut -d'(' -f1 |cut -c13-`\n\nif [ -z $tbl ]; then exit\nfi\n\n# visualiser les derniers enregistrements de la table choisie\n# (on limite à 5 lignes de 300 caract max)\nsqlite3 $bd \"select * from $tbl order by rowid desc limit 5\" | cut -c1-300 | \\\nyad --width=1000 --height=400 --text-info --title \"dernières lignes de table $tbl\" \n\ndone\ndone\n","language":"text/x-sh","encrypted":false,"added":1538126278}],"comment":[]}