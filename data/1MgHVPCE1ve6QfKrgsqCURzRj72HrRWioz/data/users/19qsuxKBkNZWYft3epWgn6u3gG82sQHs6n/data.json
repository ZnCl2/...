{"next_paste_id":2,"next_comment_id":0,"paste":[{"paste_id":0,"description":"Userscript to rewrite IPFS URLs","body":"// ==UserScript==\n// @name         Rewrite IPFS URLs\n// @namespace    http://tampermonkey.net/\n// @version      0.1\n// @description  UserScript to rewrite ipfs gateway URLs to point at your local gateway\n// @author       redacted@zeroverse.bit\n// @include      *\n// @grant        GM_log\n// @run-at       document-idle\n// ==/UserScript==\n\n(function() {\n    'use strict';\n    var p = /^https?:\\/\\/ipfs\\.pics\\/(ipfs\\/)?(.*)$/;\n    function rewriteUrl(url) {\n        var res = p.exec(url);\n        if (res != null) {\n            return 'http://localhost:8080/ipfs/' + res[2];\n        }\n    }\n\n    function scanNode(node) {\n        var url;\n        if (node.tagName === 'A') {\n            url = rewriteUrl(node.href);\n            if (url != null) {\n                node.href = url;\n            }\n        } else if (node.tagName === 'IMG') {\n            url = rewriteUrl(node.src);\n            if (url != null) {\n                node.src = url;\n            }\n        }\n        for (var i = 0; i < node.childNodes.length; i++) {\n            scanNode(node.childNodes[i]);\n        }\n    }\n\n    scanNode(document);\n    var observer = new MutationObserver(function(mutations) {\n        mutations.forEach(function(mutation) {\n            if (mutation.type != \"childList\") {\n                return;\n            }\n\n            for (var i = 0; i < mutation.addedNodes.length; i++) {\n                GM_log('scanning newly added node ' + mutation.addedNodes[i]);\n                scanNode(mutation.addedNodes[i]);\n            }\n        });\n    });\n\n    var config = { childList: true, subtree: true };\n    observer.observe(document, config);\n})();\n","language":"text/javascript","encrypted":false,"added":1461361676},{"paste_id":1,"description":"Version 0.2 of IPFS URL rewrite userscript","body":"// ==UserScript==\n// @name         Rewrite IPFS URLs\n// @namespace    http://tampermonkey.net/\n// @version      0.2\n// @description  UserScript to rewrite ipfs gateway URLs to point at your local gateway\n// @author       redacted@zeroverse.bit\n// @include      *\n// @grant        GM_log\n// @run-at       document-start\n// ==/UserScript==\n\n(function() {\n    'use strict';\n    var p = /\\/(ip[fn]s\\/)?(Qm[a-zA-Z0-9]{44})(\\/.*)?$/;\n    function rewriteUrl(url) {\n        var res = p.exec(url);\n        if (res != null) {\n            var prefix = res[1] ? res[1] : 'ipfs/';\n            var suffix = res[3] ? res[3] : '';\n            return 'http://localhost:8080/' + prefix + res[2] + suffix;\n        }\n    }\n\n    function scanNode(node) {\n        var url;\n        if (node.tagName === 'A') {\n            url = rewriteUrl(node.href);\n            if (url != null) {\n                node.href = url;\n            }\n        } else if (node.tagName === 'IMG') {\n            url = rewriteUrl(node.src);\n            if (url != null) {\n                node.src = url;\n            }\n        }\n        for (var i = 0; i < node.childNodes.length; i++) {\n            scanNode(node.childNodes[i]);\n        }\n    }\n\n    scanNode(document);\n    var observer = new MutationObserver(function(mutations) {\n        mutations.forEach(function(mutation) {\n            if (mutation.type != \"childList\") {\n                return;\n            }\n\n            for (var i = 0; i < mutation.addedNodes.length; i++) {\n                scanNode(mutation.addedNodes[i]);\n            }\n        });\n    });\n\n    var config = { childList: true, subtree: true };\n    observer.observe(document, config);\n})();\n","language":"text/javascript","encrypted":false,"added":1461700907}],"comment":[]}