{"next_paste_id":1,"next_comment_id":0,"paste":[{"paste_id":0,"description":"nanasi: in-browser ZeroNet account generation","body":"class Nanasi extends ZeroFrame\n    init: ->\n        @last_checked = 0\n        @site_info = null\n\n        @nanasi = bitcoin.ECPair.fromWIF \"L21fbJbceebx6B3bwMK2U46W1Un7peLqBtPjfyARZpxsME9rxWFz\"\n\n    onOpenWebsocket: (e) =>\n        @cmd \"siteInfo\", {}, (site_info) =>\n            @site_info = site_info\n            if @site_info.cert_user_id\n                document.getElementById(\"id_show\").textContent = @site_info.cert_user_id\n                document.getElementById(\"submit_button\").textContent = \"Post\"\n        @update_posts()\n\n    update_posts: =>\n        @cmd \"dbQuery\", [\"\"\"\n            select\n                hash,\n                name,\n                time,\n                body,\n                keyvalue.value as cert_user_id\n            from post\n            left join json as data on (data.json_id = post.json_id)\n            left join json as content on (content.directory = data.directory AND content.file_name = 'content.json')\n            left join keyvalue on (keyvalue.json_id = content.json_id AND keyvalue.key = 'cert_user_id')\n            where time > #{@last_checked} order by time asc\n            \"\"\"], (res) =>\n            if res.error\n                @cmd \"wrapperNotification\", [\"error\", \"Failed to query:#{res.error}\"]\n                return\n\n            @last_checked = new Date().getTime()\n            posts = document.getElementById(\"posts\")\n\n            for r in res\n                console.log JSON.stringify(r)\n\n                post = document.getElementById(\"post_base\").cloneNode(true)\n                post.id = \"\"\n                hash = post.getElementsByClassName(\"hash\")[0]\n                hash.textContent = r.hash[0..7]\n                hash.name = r.hash[0..7]\n                hash.href = \"#\" + r.hash[0..7]\n                post.getElementsByClassName(\"name\")[0].textContent = r.name\n                post.getElementsByClassName(\"time\")[0].textContent = new Date(r.time).toLocaleString()\n                body = post.getElementsByClassName(\"body\")[0]\n                body.textContent = r.body\n                body.innerHTML = body.innerHTML.replace(/&gt;&gt;([A-Za-z0-9+\\/]{8})/g, \"\"\"<a href=\"#$1\">$&</a>\"\"\")\n                post.getElementsByClassName(\"id\")[0].textContent = r.cert_user_id\n                if posts.firstChild\n                    posts.insertBefore post, posts.firstChild\n                else\n                    posts.appendChild post\n\n            console.log \"updated\"\n\n    route: (cmd, message) ->\n        if cmd == \"setSiteInfo\"\n            @site_info = message.params\n            btn = document.getElementById(\"submit_button\")\n            if @site_info.cert_user_id\n                btn.textContent = \"Post\"\n            else\n                btn.textContent = \"Create account\"\n            document.getElementById(\"id_show\").textContent = @site_info.cert_user_id\n            if @site_info.event\n                console.log @site_info.event\n                if @site_info.event[0] == \"file_done\" && @site_info.event[1].match /.*data\\.json$/\n                    @update_posts()\n\n    write: =>\n        unless @site_info.cert_user_id\n            @createCert()\n            return\n\n        submit_button = document.getElementById(\"submit_button\")\n        submit_button.disabled = true\n\n        inner_path = \"data/users/#{@site_info.auth_address}/data.json\"\n        @cmd \"fileGet\", {inner_path, required: false}, (data) =>\n            if data\n                data = JSON.parse(data)\n            else\n                data = {post: []}\n\n            name = document.getElementById(\"name_input\").value\n            name = \"No name\" if name == \"\"\n\n            k =\n                name: name\n                body: document.getElementById(\"body_input\").value\n                time: new Date().getTime()\n\n            sha = new jsSHA(\"SHA-256\", \"TEXT\")\n            sha.update(JSON.stringify([@site_info.auth_address, k.name, k.body, k.time]))\n            k.hash = sha.getHash(\"B64\")\n\n            data.post.push k\n\n            json_raw = unescape(encodeURIComponent(JSON.stringify(data, null, \"\\t\")))\n\n            @cmd \"fileWrite\", [inner_path, btoa(json_raw)], (res) =>\n                if res == \"ok\"\n                    @cmd \"sitePublish\", {inner_path: inner_path}, (res) =>\n                        if res == \"ok\"\n                            document.getElementById(\"name_input\").textContent = \"\"\n                            document.getElementById(\"body_input\").value = \"\"\n                            submit_button.disabled = false\n                            @update_posts()\n                        else\n                            @cmd \"wrapperNotification\", [\"error\", \"Failed to post: \" + res.error]\n                else\n                    @cmd \"wrapperNotification\", [\"error\", \"Failed to post: \" + res.error]\n\n    createCert: =>\n        cert = bitcoin.message.sign(@nanasi, \"#{@site_info.auth_address}#web/\" + @site_info.auth_address[0..12]).toString(\"base64\")\n\n        @cmd \"certAdd\", [\"nanasi\", \"web\", @site_info.auth_address[0..12], cert], (res) =>\n            if res.error && res.error.startsWith(\"You already\")\n                @cmd \"certSelect\", [[\"zeroid.bit\", \"nanasi\"]]\n            else if res.error\n                @cmd \"wrapperNotification\", [\"error\", \"Failed to create account: \" + res.error]\n            else\n                @cmd \"certSelect\", [[\"zeroid.bit\", \"nanasi\"]]\n\n    insertHash: (e)->\n        body = document.getElementById \"body_input\"\n        body.value = body.value[0...body.selectionStart] + \">>#{e.textContent}\\n\" + body.value[body.selectionStart..]\n        window.scrollTo(0, 0)\n        body.focus()\n\nwindow.Page = new Nanasi()\n","language":"text/x-coffeescript","encrypted":false,"added":1458174449}],"comment":[]}