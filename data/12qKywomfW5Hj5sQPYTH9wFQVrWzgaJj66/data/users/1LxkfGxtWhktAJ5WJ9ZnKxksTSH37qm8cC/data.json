{
	"message": [
		{
			"body": "I created a site to test my experimental script of downloading big files (currently 5MB). Could anyone have a look and test it out? http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/",
			"date_added": 1472390186915
		},
		{
			"body": "@tkarita@zid: not yet, but my future plan is to download and play a 42MB .flac file directly in browser.",
			"date_added": 1472394380617
		},
		{
			"body": "@tkarita@zid: Sorry i didn't get it. Could you describe more clearly? Do you refer to the 'audio' tag?",
			"date_added": 1472394574998
		},
		{
			"body": "i wonder how can ununsed site files be deleted. Do they just stay there and do not update?",
			"date_added": 1472484307085
		},
		{
			"body": "perhaps ZeroNet can have a \"site clean up\" function",
			"date_added": 1472484327831
		},
		{
			"body": "To report the bug, you can go to https://github.com/HelloZeroNet/ZeroNet or send a ZeroMail to nofish",
			"date_added": 1472485594723
		},
		{
			"body": "Please update to the latest development version, too. Click on the '...' on the top of the front page.",
			"date_added": 1472485640385
		},
		{
			"body": "rev1429 now",
			"date_added": 1472485760852
		},
		{
			"body": "I added short videos and fine-tuned alogrithms on my site. http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/",
			"date_added": 1472541253640
		},
		{
			"body": "Now it prefers file parts at the beginning. I also extended the timeout.",
			"date_added": 1472542357689
		},
		{
			"body": "http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/ <- Firefox users can now \"Stream\" the video when it is still being downloaded. If you would like to test it, please click on the link labelled \"Stream.\"",
			"date_added": 1472727667230
		},
		{
			"body": "prioritizing early chunks is done by a weighted random function:",
			"date_added": 1472735099659
		},
		{
			"body": "http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/js/utils.js function getEmptySlot(array)",
			"date_added": 1472735173677
		},
		{
			"body": "prioritizing early chunks is done by a weighted random function: getEmptySlot(array) http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/js/utils.js",
			"date_added": 1472794502245
		},
		{
			"body": "I finished writing a MP4 multiplexer in Python, with more than 1000 lines of code. Now I am fixing its searching algorithms. The MP4 file needs to be cut right before key frames in order to be playable by web browsers. I did not obey that rule and the file produced did not play. ( ^Ï‰^)",
			"date_added": 1473259149539
		},
		{
			"body": "To be streamable and playable by Media Source Extensions, MP4 files need to be in \"fragmented\" format (\"fragmented\" is actually a FORMAT). So many people, including me, were unaware of it, and major transcoding programs, like FFmpeg, do not produce streaming friendly or fragmented MP4 files by default.",
			"date_added": 1473298300304
		},
		{
			"body": "If you see a <video> tag whose source (\"src\") starts with \"mediasource:\" or \"blob:\", that video is stored inside RAM, using Media Source Extensions. M.S.E. gives a better control over video buffering and allows technologies like adaptive bitrate and the WebTorrent player.",
			"date_added": 1473298757384
		},
		{
			"body": "If I assign only 1 frame per fragment, the file is actually playable. The bug was caused by a typo in my code. However, it is currently processing at only 400kbps.",
			"date_added": 1473316539876
		},
		{
			"body": "Yes, since the number of times packing \"mdat\" boxes is reduced.",
			"date_added": 1473317662295
		},
		{
			"body": "I am doing more tests on the MP4 muxer I am working on. I made several bugs in the code.",
			"date_added": 1473495271500
		},
		{
			"body": "Nothing yet. Any ideas behind muxing?",
			"date_added": 1473495644815
		},
		{
			"body": "very interesting game",
			"date_added": 1473496119189
		},
		{
			"body": "... private key?",
			"date_added": 1473497012336
		},
		{
			"body": "Now I start migrating my MP4 fragmenting program from Python to JavaScript.",
			"date_added": 1473671772694
		},
		{
			"body": "148/1000 lines",
			"date_added": 1473677545264
		},
		{
			"body": "384/1000 lines. All tests passed.",
			"date_added": 1473688503053
		},
		{
			"body": "768/1000 lines. All tests passed.",
			"date_added": 1473750266985
		},
		{
			"body": "Yeah, \"click to show\" is convenient enough. We don't want to leak IP addresses.",
			"date_added": 1473753821622
		},
		{
			"body": "The code is more than I expected, so 1204/1435 lines.",
			"date_added": 1473777428487
		},
		{
			"body": "@bot@zid: Well, I don't use a transpiler. I'd like to translate it by hand and test it by hand. I use a style of JS to write Python code on purpose, so I can translate it easily.",
			"date_added": 1473824770876
		},
		{
			"body": "MP4 fragmenting program is almost done.",
			"date_added": 1473839534401
		},
		{
			"body": "Done and all tests passed. I can go to sleep now...",
			"date_added": 1473863719594
		},
		{
			"body": "Almost as fast as the Python version.",
			"date_added": 1473863883486
		},
		{
			"body": "I am writing some docs for ZeroMux http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/docs/",
			"date_added": 1474090880496
		},
		{
			"body": "No one is really here, since we have ZeroMe",
			"date_added": 1477355802008
		},
		{
			"body": "@commshld@zid: He quitted ZeroNet",
			"date_added": 1479689347980
		}
	]
}