{"cert_user_id": "iskradelta@github", "next_topic_id": 2, "topic": [{"topic_id": 1604065597, "title": "Exlain more about DoS and spam prevention in documentation", "body": "Hi,\r\n\r\nWhat does ZeroNet do to prevent bad peer actors, for example, a (modified) peer which only holds connection open and never sends any data thus increasing time for others who asked it for data which it doesnt send. Does zeronet have any mechanism to avoid such a peer in the future? What if I would join zeronet with 100s (meh even 1000) of such peers, the network would slow down to a halt. Or even worse, a peer which sends the pieces very slowly at 1-4kb/s range.\r\n\r\nOn the other side of the coin, what would prevent 1000s of (modified) peers all to request same site from the owner, but never share any pieces with the rest of the swarm? That would effectively suck the bandwidth of the site owner for no purpose other than to prevent others from getting the zite. How is a peer identified, is it local only to the zite/peer, or is there a public/global system of accounting of bad peers?\r\n\r\nDoes Zeronet prevent such attacks? Does zeronet keep any accounting on ratio of peers in the bittorrent swarm? If not is there plans to do that.\r\n\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1480493804, "modified": 1485653634, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/686", "source_type": "github"}], "next_comment_id": 7, "comment": {"1604065597_mirrored_iskradelta_github": [{"comment_id": 1, "body": "Thanks for quick response.\r\n\r\nYes, it is difficult attacks to defend from. Have any ideas on how to defend in the future?\r\n\r\nCan we add \"peer you already asked for that piece stop asking/Ill stopping serving you\".\r\n\r\nAnother issue: how difficult would it be for me to generate 1 million zeroIds and use them to spam advertisements across all the sites in all the comments? As the zeroid generation seems to be centralized that could work, and it seems to take a few seconds and not require any proof-of-work? Simpler attack, if I found a user spamming/harassing my zeroblog, can I block that zeroId in the future?\r\n\r\nAlso, is there a place where these questions can be asked and discussed on ZeroNet? The ZeroTalk ZeroBoard dont seem to be very active.", "added": 1480509916, "modified": 1480509916, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/686#issuecomment-263907214", "source_type": "github"}, {"comment_id": 2, "body": "> because the attacker could use highend-cpu/gpu to solve it and still generate 1000s users/hour.\r\n\r\nYes, but then that at least costs money, and together with banexample/blocking spammers, there is little incentive to actually do it then. Isnt there a very difficult proof-of-work which would take a normal computer 30min or so to generate, and still be not-worth-it when using a high-end gpu? To be memory-intensive?\r\n\r\n", "added": 1480528122, "modified": 1480528122, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/686#issuecomment-263990785", "source_type": "github"}, {"comment_id": 3, "body": "I see!\r\n\r\nOn the same topic, have you considered using Triblers \"multichain\" (not the multichain company with proprietary software), which is supposed to keep a tamper-proof swarm-level (not global) reputation/score for every peer? That would avoid some attacks and reward good nodes. Maybe not really needed as most content between peers is small. Tribler does have faster anon connections than Tor though, there has been experiments with 5mb/s downloads and acceptable CPU usage for 18 circuits. Something to pick up from there? The code is all in python too.\r\n\r\nOn another topic, in a another discussion, ZeroNet seems to be using TLS for peer-to-peer communication, which is MITMable because there is no Central Authority (of course). (Maybe wrong information?) Blockcerts and maybe storing certificates in namecoin would solve that problem, so p2p connections would be really TLS with mitm prevention? See https://wiki.namecoin.info/index.php?title=Domain_Name_Specification#TLS_support\r\n", "added": 1480533958, "modified": 1480533958, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/686#issuecomment-264016231", "source_type": "github"}, {"comment_id": 4, "body": "Right, just now read a review about Triblers onions, they are indeed very badly implemented, at least was in 2014. \r\n\r\nI should try the patch for zeronet-over-i2p which was in here somewhere. But that much anonymity is not really required for me, or shouldnt be for anyone, if we cant trust our ISPs, we should disconnect them and make our own new internet with mesh nets and blackjack. \r\n\r\nHave you considered FairTorrents algorithm?\r\n\r\n", "added": 1481048851, "modified": 1481048851, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/686#issuecomment-265277732", "source_type": "github"}], "1604065607_mirrored_mechnotech_github": [{"comment_id": 5, "body": "Emercoin has Proof-of-Stake, does it also have the centralized checkpointing component?", "added": 1481617068, "modified": 1481617068, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/695#issuecomment-266712860", "source_type": "github"}, {"comment_id": 6, "body": "@mechnotech How light-weight is the emercoin domain-name/identity client? Namecoin does suffer a bit from that, the full node is too fat, and the thin clients are not yet existent, or suffer from trusting a central server too much.\r\n\r\nI was looking more into byteball to build a namesystem on that, as it looks the light-weight client will be easier to build there and more secure/more-decentralized.", "added": 1482775129, "modified": 1482775129, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/695#issuecomment-269241439", "source_type": "github"}]}}