{"cert_user_id": "radfish@github", "next_comment_id": 51, "comment": {"1604065216_mirrored_WeirdCarrotMonster_github": [{"comment_id": 1, "body": "packaged for setuptools in this branch:\r\nhttps://github.com/radfish/ZeroNet/tree/setuptools\r\n\r\nI'm in the process of upstream it to here.", "added": 1554597031, "modified": 1554597031, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/382#issuecomment-480555912", "source_type": "github"}], "1604065388_mirrored_up4_github": [{"comment_id": 2, "body": "I think you's also need to change the ZeroAnnounce to request only onion peers from the Boostrapper.\n\nAs is, the CLI argument naming and semantics are a bit hard to understand for somebody who did not read the code. I would do something like this, instead:\n\n```\n--transports {tor,ipv4}\nSelect the set of transports over which the node will communicate with trackers and peers.\nDefault {tor,ipv4}.\n```\n\nThen it is all simple to understand and use, and straightforward to extend to other transports, like I2P. The only subtlety is that with --tor=always _and_ ipv4 in --transports, clearnet (ipv4) trackers will be accessed via Tor exit nodes. Intuitively, to prevent that, simply exclude ipv4 from --transports list, in which case only trackers with Tor addresses would be accessed (as of now, this only includes the zero://*.onion super-nodes that run the Bootstrapper plugin). As far as peers go, the behaviour is obvious.\n\nThe tracker _protocol_ (zero:// aka ZeroAnnounce) should not be mixed into this. Also, the peer _protocols_ (PEX) should not be mixed into this. Both, because the same protocol can return peer addresses in multiple transports. These are orthogonal concerns.\n", "added": 1469225288, "modified": 1469225288, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/517#issuecomment-234690116", "source_type": "github"}], "1604065391_mirrored_up4_github": [{"comment_id": 3, "body": "It makes sense to store the list of bootstrap nodes in namecoin chain, as long as namecoin mappings are easily and quickly updatable (in case a node gets compromized, for example).\n\nBut, how does ZeroNet access namecoin now? Does that itself not require bootstrapping of some sort? or it relies on some central API service?\n", "added": 1469225456, "modified": 1469225456, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/518#issuecomment-234690282", "source_type": "github"}], "1604065720_mirrored_HelloZeroNet_github": [{"comment_id": 4, "body": "Consider using Homebrew.\r\nYou write one recipe (which will be very similar to recipes for Linux distributions), and users gets to install and run with:\r\n\r\n    brew install zeronet\r\n    zeronet\r\n\r\nWhy bother with this whole DMG thing?", "added": 1554596088, "modified": 1554596088, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/734#issuecomment-480555244", "source_type": "github"}, {"comment_id": 5, "body": "On Sun, Apr 07, 2019 at 03:02:04AM -0700, ZeroNet wrote:\n> Because most of the users does not have brew/xcode installed\n\nAgreed, many don't, but installing brew is just one paste from the\nhomepage away and is well supported. It's a similar situation with PIP.\nMany users do not have PIP installed, but because installation of PIP is\ntrivial, the strategy ZeroNet already takes is not to avoid using PIP,\nbut to tell the users to install PIP in order to install ZeroNet.\nHomebrew would be no different.\n\nBtw, brew itself is independent of Xcode or other compilers. Brew can\ndistribute built binaries in addition to source. But ZeroNet is even\neasier since it's not compiled anyway, but mentioning in case this is\nrelevant to some of ZeroNet's dependencies with native components.\n\nMy only point is just that distribution via brew might be much easier.\nDMG installer is independent of recipe for brew; I would just skip the\ninstaller and only package for brew (to save effort), but obviously\nhaving both works too.\n\n\nBtw, once the setuptools packaging is merged, installation via pip\nshould work on all platforms too. That said, this is orthogonal to\ndistribution packaging recipes (brew, PKGBIULDs, Debian, etc), which\njust benefit by getting to use setuptools in implementing the recipe. I\ncould contribute by testing on a Mac once setuptools is merged to see\nwhat happens with PIP.\n\n", "added": 1554647007, "modified": 1554647007, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/734#issuecomment-480611965", "source_type": "github"}], "1604065919_mirrored_MuxZeroNet_github": [{"comment_id": 6, "body": "EDIT: I should say first that there appears to be no API for ECIES in pyca/cryptography, so the option of using Bitmessage's fork of pyelliptic is pursued here.\r\n\r\nI extracted the pyelliptic fork from Bitmessage source and called it  pyelliptic v2.0:\r\nhttps://github.com/radfish/pyelliptic\r\nSee section Version for details. In brief, bitmessage forked from v1.3, I extracted the commits ffrom Bitmessage repo and re-applied them, so history is preserved.\r\n\r\nTested ZeroMail with this pyelliptic 2.0.1: sending message works (I sent to myself and message appeared in Sent, but I did not receive it; not sure if self-sending is supposed to work or not).\r\n\r\nNo change to zeronet is necessary. Except updating requirements.txt to pyelliptic>=2.0.1. I asked Yann of pyelliptic to upload this v2.0.1 fork to PyPi. Once it's on PyPI, we can update requirements.txt. If this doesn't work then I will create a pyelliptic2 package on PyPI.\r\n\r\nEDIT: Also see my request to Bitmessage to factor out pyelliptic: https://gitter.im/Bitmessage/PyBitmessage?at=5ca11e447ecbdc29cad9f65a", "added": 1554051350, "modified": 1554052267, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/917#issuecomment-478375081", "source_type": "github"}, {"comment_id": 7, "body": "@HelloZeroNet PyBitmessage folks are themselves moving away from pyelliptic apparently:\r\n\r\nDmitri Bogomolov g1itch\r\n> I'm going to port pybitmessage to coincurve\r\n\r\nThey are saying that ECIES might be doable with eciespy package plus coincurve package -- are those sufficient for ZeroNet?\r\n\r\n\r\nPeter \u0160urda\r\n> I know that in the past, libsecp256k1 didn't contain encryption, but now it does. Are you sure you still can't do ECIES with it?\r\n\r\nDmitri Bogomolov g1itch\r\n> https://gist.github.com/dahlia/795b4bd95ddfe6329a723cd2869220ae\r\n> https://kigawas.me/eciespy/\r\n \r\nDiscusson here: https://gitter.im/Bitmessage/PyBitmessage?at=5ca11e447ecbdc29cad9f65a", "added": 1555164656, "modified": 1555164656, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/917#issuecomment-482842724", "source_type": "github"}], "1604066153_mirrored_theAkito_github": [{"comment_id": 8, "body": "It is unlikely to do with Raspberry Pi. I get the same error if I try to ping non-existant host. Do you have Kengy IP in your /etc/hosts? What does `telnet Kengy 15441` say? As far as I understand, peerPing command takes a normal IP address or a normal DNS name that resolves to an IP address or a hostname assigned an address in /etc/hosts.\r\n\r\nI run zeronet on an ARM board on Arch Linux ARM, all works.", "added": 1507464402, "modified": 1507464402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1130#issuecomment-335012828", "source_type": "github"}], "1604067049_mirrored_HelloZeroNet_github": [{"comment_id": 9, "body": "@imachug  try with PR #1982 ", "added": 1555175813, "modified": 1555175813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-482878470", "source_type": "github"}], "1604067052_mirrored_Serkan-devel_github": [{"comment_id": 10, "body": "Pipenv seems to be missing the fact that the top-level dependencies (without frozen version) are tracked inside setup.py. The package defined in setup.py is self-contained (installable using setuptools, without information about dependencies from any other files and without pip) and orthogonal to the frozen environment definition (optionally) kept in requirements.txt. Pipenv looked intriguing, but after looking into it, I don't see the value in adopting it. Setuptools (setup.py) and pip freeze is sufficient, imo.", "added": 1555248126, "modified": 1555248168, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1836#issuecomment-483009888", "source_type": "github"}], "1604067150_mirrored_blurHY_github": [{"comment_id": 11, "body": "Zeronet 0.6.5 just hangs on receiving SIGTERM from systemd.\r\nMaybe sys.exit(0) from signal handler is not good? Perhaps something needs to be stopped from the main loop? I'll look into it if I find the time.", "added": 1550624336, "modified": 1550624336, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1882#issuecomment-465412570", "source_type": "github"}], "1604067166_mirrored_yurivict_github": [{"comment_id": 12, "body": "Adding to /etc/zeronet.conf also works\r\n\r\n    ui_host = yourhostname:43110\r\n\r\nSomeone strange to have the port number be part of the hostname check, though.", "added": 1551578123, "modified": 1551578123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1904#issuecomment-468988919", "source_type": "github"}], "1604067169_mirrored_yurivict_github": [{"comment_id": 13, "body": "Same for me on Arch Linux ARM. The sys.exit(0) from the signal handler does not terminate the process. Are there multiple processes or threads?", "added": 1551577957, "modified": 1551577957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1905#issuecomment-468988782", "source_type": "github"}], "1604067183_mirrored_radfish_github": [{"comment_id": 14, "body": "Ok. Got it. Removed the version unfreeze commit from this PR.\r\n\r\nWhat's your plan for ECIES? Should we factor that code out of pyelliptic 1.5.6 into a new Python package and depend on that?\r\nEDIT: #917", "added": 1553944611, "modified": 1553946548, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1943#issuecomment-478249882", "source_type": "github"}], "1604067209_mirrored_radfish_github": [{"comment_id": 15, "body": "Thanks for merging. Added geoip2-database dep to Arch Linux zeronet-git pkg.", "added": 1554643120, "modified": 1554643120, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1962#issuecomment-480605915", "source_type": "github"}], "1604067212_mirrored_radfish_github": [{"comment_id": 16, "body": "Make the updater a separate process that is forked off?\r\nUnless you specifically want some kind of \"live\" updating.", "added": 1554642881, "modified": 1554642881, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1963#issuecomment-480605432", "source_type": "github"}, {"comment_id": 17, "body": "On Sun, Apr 07, 2019 at 10:23:27AM -0700, ZeroNet wrote:\n> Not sure if that would work on every platform.\n\nHm, dunno. Any obstacles in particular you're thinking of?\n\nIsn't the only support needed is to launch processes? ZeroNet already\nlaunches a process for ssl certificate generation. I mean, on update,\nfork an updater process (`run_shell_cmd(python update,py <parent_pid>)`)\nand shutdown, updater waits for `parent_pid` to exit, then overwrites\nwhatever files (within the ZeroNet distribution), then forks of another\nprocess to relaunch ZeroNet (`run_shell_cmd(python zeronet.py)`) and\nexits. Not a live update, of course, but any other problem with this?\n\nBut.. I shouldn't speak about this anyway, because I don't think I would\nbe the one to contribute to the updater, because I don't use it (I rely\non distribution packager instead).\n", "added": 1554647846, "modified": 1554647846, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1963#issuecomment-480613042", "source_type": "github"}], "1604067214_mirrored_radfish_github": [{"comment_id": 18, "body": "Removed the commit regarding adding Db free functions to Db package. Moving that commit to a different PR that actually depends on it.", "added": 1554643708, "modified": 1554643708, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1964#issuecomment-480607029", "source_type": "github"}, {"comment_id": 19, "body": "@HelloZeroNet good to go or any changes needed?", "added": 1554755264, "modified": 1554755264, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1964#issuecomment-481043901", "source_type": "github"}, {"comment_id": 20, "body": "Agreed. Logging doesn't belong there -- should find a better place for it up the stack.\r\nRemoved that commit and rebased.", "added": 1554850096, "modified": 1554850096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1964#issuecomment-481501729", "source_type": "github"}], "1604067221_mirrored_radfish_github": [{"comment_id": 21, "body": "Ok. I don't get an interactive prompt at /Console (just a dump), so I didn't realize this. Thanks.", "added": 1554663552, "modified": 1554663552, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1968#issuecomment-480633467", "source_type": "github"}, {"comment_id": 22, "body": "On Sun, Apr 07, 2019 at 03:02:37PM -0700, ZeroNet wrote:\n> It requires to install the pip package \"werkzeug\" to receive the interactive console\n\nThanks. Hm. installed Werkzeug==0.15.2 but same: just a dump at\n/Console. Perhaps worth investigating. Maybe some more packages needed?\n(This is on the current upstream py3 branch.)\n", "added": 1554753547, "modified": 1554753547, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1968#issuecomment-481038112", "source_type": "github"}], "1604067223_mirrored_radfish_github": [{"comment_id": 23, "body": "rebased (and fixed conflict)", "added": 1554853156, "modified": 1554853156, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1969#issuecomment-481510914", "source_type": "github"}, {"comment_id": 24, "body": "rebased (and fixed conflict) again.\r\nI will keep rebasing, but how is the review coming along? Thanks.", "added": 1554930214, "modified": 1554930214, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1969#issuecomment-481915880", "source_type": "github"}, {"comment_id": 25, "body": "Cool. Sounds better. Let me try this out.", "added": 1555020973, "modified": 1555020973, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1969#issuecomment-482398587", "source_type": "github"}, {"comment_id": 26, "body": "Updated with the removal of imports in __init__.py", "added": 1555194990, "modified": 1555194990, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1969#issuecomment-482910483", "source_type": "github"}], "1604067231_mirrored_radfish_github": [{"comment_id": 27, "body": "Rebased, just in case.\r\n(This PR is a prerequisite for next PR for setuptools.)", "added": 1555377351, "modified": 1555377351, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1973#issuecomment-483504718", "source_type": "github"}], "1604067268_mirrored_imachug_github": [{"comment_id": 28, "body": "Very nice!\r\n\r\npyelliptic used to be vendord in lib/ in the past already, but there was an effort to not vendor dependencies (with the eventual idealized goal of removing `lib/`), but this PR brings back vendoring again. What do you think about publishing your ECIES library to pypi?\r\n\r\nBtw, since your library is based on pyelliptic's source code with fixes for OpenSSL v1.1, roughly what are the differences from the pyelliptic fork from PyBittmessage (https://github.com/radfish/pyelliptic/), which is also based on pyelliptic's source code with fixes for OpenSSL v1.1?\r\n\r\nAlso, mentioning #917 ", "added": 1554931744, "modified": 1554931963, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1974#issuecomment-481920347", "source_type": "github"}, {"comment_id": 29, "body": "@imachug how does your library for ECIES compare to eciespy package? (see recent comment in #917)", "added": 1555252726, "modified": 1555252726, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1974#issuecomment-483025595", "source_type": "github"}], "1604067234_mirrored_krzotr_github": [{"comment_id": 30, "body": "Try with PR #1982", "added": 1555175787, "modified": 1555175787, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1980#issuecomment-482878399", "source_type": "github"}, {"comment_id": 31, "body": "@krzotr Looks like I missed one more place. Pushed again. Please re-merge and retry. Thanks. I tried with ZeroUp bigfiles and Files tab appears to work.", "added": 1555245790, "modified": 1555245802, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1980#issuecomment-483002141", "source_type": "github"}, {"comment_id": 32, "body": "#1982 merged. @krzotr please close if all good. Thanks.", "added": 1555445879, "modified": 1555445879, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1980#issuecomment-483878172", "source_type": "github"}], "1604067244_mirrored_radfish_github": [{"comment_id": 33, "body": "Changed to `\\x00`/`\\x01`, renamed, and rebased.", "added": 1555374417, "modified": 1555374417, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1982#issuecomment-483497036", "source_type": "github"}], "1604067261_mirrored_rllola_github": [{"comment_id": 34, "body": "Nice. Could you please add 'requests' to the requirements.txt?", "added": 1555246802, "modified": 1555246802, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1985#issuecomment-483005506", "source_type": "github"}, {"comment_id": 35, "body": "On Sun, Apr 14, 2019 at 10:21:29AM -0700, Lola Dam wrote:\n> I am wondering maybe I should just use `http.client` to avoid importing a library that will be used once?\n\nIt's a question for @HelloZeroNet but I wouldn't worry about depending\non 'requests' since it's well-maintained big project.\n", "added": 1555252540, "modified": 1555252540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1985#issuecomment-483024869", "source_type": "github"}, {"comment_id": 36, "body": "Here are my test results: it work, but two comments:\r\n1. When you enable the plugin but don't pass the `--namecoin_*` arguments, zeronet doesn't start with an exception:\r\n```\r\n  File \"/home/redfish/dev/ZeroNet-rn/plugins/ZeronameLocal/SiteManagerPlugin.py\", line 19, in load\r\n    self.c = HTTPConnection(url)\r\n  File \"/usr/lib64/python3.7/http/client.py\", line 841, in __init__\r\n    (self.host, self.port) = self._get_hostport(host, port)\r\n  File \"/usr/lib64/python3.7/http/client.py\", line 882, in _get_hostport\r\n    raise InvalidURL(\"nonnumeric port: '%s'\" % host[i+1:])\r\nhttp.client.InvalidURL: nonnumeric port: 'None'\r\n```\r\nI think you should either:\r\nA. mark the arguments as required, so that the user gets a nice usage message from argparser if he doesn't specify the required arguments\r\nB. check validity of arguments and log error but let zeronet start; also if connection to namecoind fails at any point, you should just log but continue.\r\n\r\nI think you still have to do B even if you also do A, because args might be invalid or there might be a momentary failure to connect.\r\n\r\n2. I did get this once, but could not reproduce again. I guess the try block didn't raise Exception anywhere despite json.loads() returning None. Maybe add a check for None after the catch block?\r\n```\r\n[20:34:54] - UiWSGIHandler error: BrokenPipeError: [Errno 32] Broken pipe in UiServer.py line 41 > pywsgi.py line 924 > pywsgi.py line 910 > pywsgi.py line 757 > pywsgi.py line 778 > pywsgi.py line 742 > pywsgi.py line 704 > _socket3.py line 458 > _socketcommon.py line 374 > _socketcommon.py line 303 > _socket3.py line 439\r\n[20:35:03] Ui.UiServer Error 500: Err: TypeError: 'NoneType' object is not subscriptable in UiServer.py line 104 > UiRequest.py line 153 > UiConfig/UiConfigPlugin.py line 22 > ContentFilter/ContentFilterPlugin.py line 185 > ZeronameLocal/SiteManagerPlugin.py line 40 > ZeronameLocal/SiteManagerPlugin.py line 112\r\n```\r\n3. Value names here should not have NAMECOIN_ in my opinion:\r\n```\r\n                  [--namecoin_host NAMECOIN_HOST]\r\n                  [--namecoin_rpcport NAMECOIN_RPCPORT]\r\n                  [--namecoin_rpcuskind ofer NAMECOIN_RPCUSER]\r\n                  [--namecoin_rpcpassword NAMECOIN_RPCPASSWORD]\r\n```\r\nI would do `--namecoin_host HOST`.\r\nAlso, `--namecoin_rpcport` probably should be `--namecoin_port` to be consistent with `--namecoin_host`.", "added": 1555710496, "modified": 1555710546, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1985#issuecomment-485045286", "source_type": "github"}, {"comment_id": 37, "body": "Thanks. Yeah, namecoind has two ports, of course, but imo it is implied that the one relevant here is the rpc port. Within namecoin you would refer to it as rpcport to not confuse with port, but for RPC users of namecoind, there's only one port to namecoin, which is the RPC port. But, whatever, it doesn't matter.", "added": 1555776245, "modified": 1555776245, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1985#issuecomment-485151621", "source_type": "github"}], "1604067254_mirrored_radfish_github": [{"comment_id": 38, "body": "@imachug Sorry, I didn't know % was deprecated. Let just convert all of them in a separate PR.\r\n\r\nFunny though:\r\n> Since str.format() is quite new, a lot of Python code still uses the % operator. However, because this old style of formatting will eventually be removed from the language, str.format() should generally be used.\r\n\r\nRemoved from the language? So.... brace for Py 4.0 incoming. Please have mercy not again. Lol. ", "added": 1555535868, "modified": 1555535868, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1989#issuecomment-484308355", "source_type": "github"}], "1604067258_mirrored_radfish_github": [{"comment_id": 39, "body": "I am using package_data -- that has to be used.\r\nThe purpose of this PR is about how the files are accessed when the package is installed to /usr/lib. It's best to access them via the import system as resources (clear and simple) as opposed to constructing paths somehow derived from `__file__` or some hack like that.", "added": 1555621240, "modified": 1555621282, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-484727087", "source_type": "github"}, {"comment_id": 40, "body": "@HelloZeroNet I rebased and retested to keep this PR fresh on top of latest py3 branch.\r\n\r\nCI for py 3.7 failed in CryptMessage for some reason -- I cannot reproduce on localhost. Do you know what is the problem with the test?\r\n\r\nAlso, any changes you want me to make, or is it good to go? Thanks.", "added": 1556138990, "modified": 1556138990, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-486468196", "source_type": "github"}, {"comment_id": 41, "body": "Ok, I certainly don't want to add anything that's unnecessary. I don't have a full understanding of resources, so maybe I am missing some other way. Here's the problem that can't get around:\r\n\r\n    mkdir -p pkg/media\r\n    touch pkg/media/file\r\n    touch pkg/__init__.py\r\n    python\r\n    >>> import importlib.resources as r\r\n    >>> import pkg.media as m\r\n    >>> r.read_text(m, 'file')\r\n    FileNotFoundError: Package has no location <module 'pkg.media' (namespace)>\r\nbut once you make media a package, it works:\r\n\r\n     touch pkg/media/__init__.py\r\n     >>> r.read_text(m, 'file')\r\n     ''\r\n\r\nCannot do by path either:\r\n\r\n    >>> r.read_text(pkg, 'media/file')\r\n    ValueError: 'media/file' must be only a file name\r\n\r\nI'm actually surprised that `import pkg.media` did not fail even though media was not a package. But in any case resource loading fails cause I'm asking it to load from something that is not a package. Are you saying that this should work under some special circumstance?\r\n\r\nBtw, I also read about running from zip file, and I agree that it's not top priority, but it would be nice to be compatible, if this support comes for free as a sideeffect of using resources. But, I only care about being able to load the resource after package is installed -- can we achieve that with importlib.resources but without packages?\r\n\r\nIf the importlib method causes performance issue, then we can do it without importlib at all, with `os.path.join(os.path.dirname(zeronet.__file__), 'path/to/resource')`, but going via the import system seems cleaner.\r\n\r\nBtw, I also run zeronet on ARM, so can test too.", "added": 1556145805, "modified": 1556146171, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-486487906", "source_type": "github"}, {"comment_id": 42, "body": "I roughly timed the startup on ARM with and without the patch: can't see a difference -- around 15s+/-3s. Not a precise test though.\r\n\r\nIn any case, would you rather do `os.path.join(os.path.dirname(zeronet.__file__), 'path/to/resource')` (to avoid the `__init__.py` files in each directory)? If so, I'll close this PR and submit another one.", "added": 1556228123, "modified": 1556228152, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-486884541", "source_type": "github"}, {"comment_id": 43, "body": "Hello @HelloZeroNet what's your verdict on this? Do you want to implement alternative via `__file__` instead (see prev comment)?", "added": 1556574075, "modified": 1556574075, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-487790801", "source_type": "github"}, {"comment_id": 44, "body": "Rebased. @HelloZeroNet ", "added": 1557872063, "modified": 1557872063, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-492466907", "source_type": "github"}, {"comment_id": 45, "body": "@HelloZeroNet  rebased and re-tested", "added": 1560007999, "modified": 1560007999, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-500149257", "source_type": "github"}, {"comment_id": 46, "body": "@HelloZeroNet any chance at merging this so that we can move on and finish up the packaging at last?", "added": 1560613986, "modified": 1560613986, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-502390825", "source_type": "github"}, {"comment_id": 47, "body": "@HelloZeroNet rebased and re-tested again. Anything I can do to make the merge happen? I just want to close this chapter on setuptools packaging finally.", "added": 1561207599, "modified": 1561207599, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-504676371", "source_type": "github"}, {"comment_id": 48, "body": "Ok. I'll put together a PR based on `__file__` approach.", "added": 1561290106, "modified": 1561290106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991#issuecomment-504758524", "source_type": "github"}], "1604067608_mirrored_ZeroNetTickBot_github": [{"comment_id": 49, "body": "I don't care", "added": 1576197964, "modified": 1576197964, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-565288636", "source_type": "github"}], "1604067841_mirrored_scpketer_github": [{"comment_id": 50, "body": "AUR maintainer here. This is an upstream issue. Please ask @HelloZeroNet to make a release (motivated by the fact that latest release no longer works on newest Python, according to commenters above).\r\n\r\n@ubone the tarball linked in the README is unreleased source code. See the Releases tab.", "added": 1590272031, "modified": 1590272031, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2472#issuecomment-633162402", "source_type": "github"}]}, "next_topic_id": 18, "topic": [{"topic_id": 1604066621, "title": "Fix issues with log messages related to Tor errors", "body": "This is a set of three commits. The first one (bottom) e6f0a86c5a is the most important, it fixes an issue where errors were not printed to the log at all! This wasted a lot of time trying to debug what is failing. The other two are smaller, more cosmetic fixes that I added while at it.\r\n\r\nPS. To  be precise, without these patches it was difficult to debug when I hit this bug in Tor: https://trac.torproject.org/projects/tor/ticket/26913\r\n\r\n```\r\ncommit 9bd10d5102d9bf1c778a74bf8d81e7ba4df336bb (HEAD -> PR--fix-log-warn, ghac/PR--fix-log-warn)\r\nAuthor: redfish <redfish@galactica.pw>\r\nDate:   Thu Aug 2 23:47:24 2018 +0000\r\n\r\n    TorManager: correct the Tor error log message\r\n    \r\n    On Linux, there is no self-bundled Tor, so the message was not correct\r\n    because it was stating that self-bundled Tor was being started.\r\n\r\ncommit 4c62840cefeb76eee4ef1a5ed3ad59c30820af14\r\nAuthor: redfish <redfish@galactica.pw>\r\nDate:   Thu Aug 2 23:42:50 2018 +0000\r\n\r\n    TorManager: escalate log error for Tor auth\r\n    \r\n    This errorr is fatal for Tor usage (on Linux). Let's make escalate\r\n    it. Also see the previous commit, without which, this error doesn't\r\n    even get printed at all.\r\n\r\ncommit e6f0a86c5a9c32e084c16e0b32f603354afd3007\r\nAuthor: redfish <redfish@galactica.pw>\r\nDate:   Thu Aug 2 23:40:44 2018 +0000\r\n\r\n    main: logging: do not override the warn level\r\n    \r\n    This fixes the very annoying problem where the log messages with\r\n    level WARNING are not printed, while log messages with lower\r\n    level INFO are printed. This is very confusing behavior and should\r\n    be avoided. This was due to this override. If there is too much\r\n    logging output in debug mode, then let's deescalate the level\r\n    of the frequently-printed log messages down to DEBUG level.\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1533243140, "modified": 1554644102, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1498", "source_type": "github"}, {"topic_id": 1604067183, "title": "requirements: pyelliptic any version, websocket_client", "body": "`pyelliptic` 1.5.8 works fine for me. Any particular reason it was frozen at 1.5.6?\r\n\r\n`websocket` is likely not the package you are looking for -- the canonical websocket package is  `websocket_client`. `websocket_client` installs `/usr/lib/python3.7/site-packages/websocket/`\r\n\r\nBtw, this looks like stale code:\r\n```\r\n$ grep -C2 -rnI 'from lib import websocket'\r\nsrc/main.py-338-\r\nsrc/main.py-339-    def getWebsocket(self, site):\r\nsrc/main.py:340:        from lib import websocket\r\nsrc/main.py-341-        ws = websocket.create_connection(\"ws://%s:%s/Websocket?wrapper_key=%s\" % (config.ui_ip, config.ui_port, site.settings[\"wrapper_key\"]))\r\nsrc/main.py-342-        return ws\r\n```\r\nUnrelated: I also added links to distribution packages to the README. Distro packages are always preferred when they exist. Also, added installation into virtualenv because it's preferred and does not require root.\r\n\r\nPS. I've updated zeronet-git Arch package on AUR to the Python 3 branch (it's supposed to be bleeding edge).\r\nPPS. If I have some time I will try to package zeronet itself with setuptools (setup.py). It should be installable into site-packages and runnable with sources owned by root (like any other python application).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1553898684, "modified": 1554644114, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1943", "source_type": "github"}, {"topic_id": 1604067189, "title": "CryptMessage: base64 arg type byte-array; File: set error message before use", "body": "```\r\ncommit 941571f71f6c75b1ebcb0c75c6987b76cc47df16 (HEAD -> PR-py3--cryptmsg-base64-type, rf/PR-py3--cryptmsg-base64-type)\r\nAuthor: redfish <redfish@galactica.pw>\r\nDate:   Sun Mar 31 16:25:26 2019 -0400\r\n\r\n    file: set error message before using it\r\n    \r\n    Fixes this exception:\r\n    \r\n    Unhandled exception: [(<class 'UnboundLocalError'>,\r\n    UnboundLocalError(\"local variable 'err' referenced before assignm>\r\n     Traceback (most recent call last):\r\n       File \"src/gevent/greenlet.py\", line 766, in gevent._greenlet.Greenlet.run\r\n       File \"/opt/zeronet/src/util/RateLimit.py\", line 57, in <lambda>\r\n         thread = gevent.spawn_later(time_left, lambda: callQueue(event))  # Call this function later\r\n       File \"/opt/zeronet/src/util/RateLimit.py\", line 42, in callQueue\r\n         return func(*args, **kwargs)\r\n       File \"/opt/zeronet/src/File/FileRequest.py\", line 185, in actionUpdate\r\n         self.response({\"error\": \"File invalid: %s\" % err})\r\n    UnboundLocalError: local variable 'err' referenced before assignment\r\n\r\ncommit 65be9f438bc11902c8357bbe86a9a86ac60f3f81\r\nAuthor: redfish <redfish@galactica.pw>\r\nDate:   Sun Mar 31 14:05:15 2019 -0400\r\n\r\n    CryptMessage: pass byte-array type to base64\r\n    \r\n    Fixes this error upon sending a message in ZeroMail:\r\n    WebSocket handleRequest error: TypeError: a bytes-like object is\r\n    required, not 'str' in UiWebsocket.py line 83 > UiWebsocket.py line 269\r\n    > CryptMessage/CryptMessagePlugin.py line 80 >\r\n    CryptMessage/CryptMessagePlugin.py line 80 > base64.py line 58\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554053398, "modified": 1554644069, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1947", "source_type": "github"}, {"topic_id": 1604067209, "title": "Sidebar: use geoip db from system if exists", "body": "Avoid downloading the GeoIP DB when it is already provided by the system.\r\nThe system one is kept up to date by the system package manager, while the downloaded one goes stale.\r\n\r\nFor example, on Arch Linux geoip2-database package already provides the Db.\r\nI will add the package dependency to Arch package once this is merged.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554575274, "modified": 1554644053, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1962", "source_type": "github"}, {"topic_id": 1604067212, "title": "[setuptools packaging] remove some  dead code related to openssl, pyelliptic", "body": "This PR is part of preparatory patches for setuptools (setup.py) packaging (which is ready, but I'm trying to minimize the size of that diff by splitting all independent changes into separate PRs).\r\n\r\n*  zeronet: no openssl.closeLibrary in pyelliptic\r\n    Not in pyelliptic  (neither in 1.6.7 nor 2.0.1)\r\n\r\ngrep closeLibrary shows nothing: do you know what else to check?\r\n\r\n * zeronet: remove ref to opensslVerify\r\n    This module is no longer used. Does not exist in lib/\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554591599, "modified": 1554647846, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1963", "source_type": "github"}, {"topic_id": 1604067214, "title": "[setuptools packaging] factor path to testdata, log error", "body": "This PR is part of preparatory patches for setuptools (setup.py) packaging (which is ready, but I'm trying to minimize the size of that diff by splitting all independent changes into separate PRs).\r\n\r\n* test: refer to test data path via variable (refactoring only, no change to functionality)\r\n\r\n* UiRequest: log error respones\r\n    \r\n    Useful during development. In some cases, things brake, but no error\r\n    shows up anywhere. Add logging for that case.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554592394, "modified": 1554877836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1964", "source_type": "github"}, {"topic_id": 1604067216, "title": "[setuptools packaging] config: path.expanduser returns py3 strings", "body": "path.expanduser returns py3 strings and this_file is a string, and strings have no decode method.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554592821, "modified": 1554644032, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1965", "source_type": "github"}, {"topic_id": 1604067218, "title": "[setuptools packaging] Ui: extend actionFile to accept pathlib.Path", "body": "This PR is part of preparatory patches for setuptools (setup.py) packaging (which is ready, but I'm trying to minimize the size of that diff by splitting all independent changes into separate PRs).\r\n\r\nLet actionFile also accept pathlib.Path object. It's a minor addition, no change to existing functionality. This helps with later packaging commits.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554593291, "modified": 1554644019, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1966", "source_type": "github"}, {"topic_id": 1604067221, "title": "Ui: actionConsole: remove unused main variable", "body": "Looks unused, but please correct me if there's something subtle here.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554660849, "modified": 1554753547, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1968", "source_type": "github"}, {"topic_id": 1604067223, "title": "[setuptools packaging] access modules via imports", "body": "This PR is part of preparatory patches for setuptools  (setup.py) packaging (which is ready, but I'm trying to minimize the  size of that diff by splitting all independent changes into separate  PRs).\r\n\r\nFor setuptools packaging we will need to change `import`s throughout the codebase. This PR replaces usages of `sys.modules[\"module_name\"]` with `import module_name`, which is better (one reason is that it enforces encapsulation) and it simplifies the setuptools diff to contain only modifcations to `import` statements.\r\n\r\nNote: it would be best to have all `import`s at the top of the files, but that is not currently possible due to some modules having side effects from importing. This is too large a patch to fix, so I'm leaving some imports on-demand.\r\n\r\nThis PR is purely refactoring. No change in functionality at all.\r\n\r\n*  imports: refer to modules via import objs\r\n    \r\n    Replace the access via sys.modules (which is prone to violate\r\n    encapsulation).\r\n    \r\n    For main, import strictly on demand (not at the top of each file),\r\n    because importing main has side-effects (unfortunately), and importing\r\n    it at time of loading the respective module breaks things (at the very\r\n    least, it breaks tests, due to argparser arguments getting created\r\n    twice -- once by test script and once by main).\r\n    \r\n    Unfortunately, not all usage of sys.modules can be replaced with imports\r\n    at this point in time. Namely, TorManager.py and Site.py are not only\r\n    accessing main via sys.modules but also check whether main is loaded or\r\n    not. To fix this, a significant change to main is required -- to factor\r\n    it such that the owner of the singletons can be imported without\r\n    sideeffects.\r\n\r\n *   Db: remove the imports from the pkg __init__.py\r\n *    Site: remove imports from pkg __init__.py\r\n    \r\n Have the importer import the modules and classes explicitly, to keep things simple.\r\n\r\nThank you for reviewing. Let's get this setuptools packaging merged.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554665304, "modified": 1555313494, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1969", "source_type": "github"}, {"topic_id": 1604067226, "title": "[setuptools packaging] PluginManager: get plugins path via import", "body": "This PR is part of preparatory patches for setuptools (setup.py) packaging (which is ready, but I'm trying to minimize the size of that diff by splitting all independent changes into separate PRs).\r\n\r\nThis is preparation for setuptools packaging, where plugin files will get installed into the `site-packages` location along with all the other source.\r\n\r\nPurely refactoring, no change to current behavior, with minor exception of: skip __pycache__ when loading.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554666861, "modified": 1554814266, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1970", "source_type": "github"}, {"topic_id": 1604067228, "title": "[setuptools packaging] zeronet: bump script interpreter to python3", "body": "This PR is part of preparatory patches for setuptools  (setup.py) packaging (which is ready, but I'm trying to minimize the  size of that diff by splitting all independent changes into separate  PRs).\r\n\r\nI assume it is ok to bump the python version in the script now regardless, but this is particularly necessary for setuptools package, because the script will be invoked standalone (not via `python  script`).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554668703, "modified": 1554758201, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1971", "source_type": "github"}, {"topic_id": 1604067231, "title": "[setuptools packaging] Sidebar: rename media-globe/ to media_globe/", "body": "This PR is part of preparatory patches for setuptools (setup.py) packaging (which is ready, but I'm trying to minimize the size of that diff by splitting all independent changes into separate PRs).\r\n\r\nRename folder so that it can be an importable package. This is not frivolous; this is necessary for loading data files as resources (coming up in a separate PR).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554853357, "modified": 1555396496, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1973", "source_type": "github"}, {"topic_id": 1604067244, "title": "Bigfile: fix piece field bitmask to be used as bytearray consistently", "body": "Should fix #1980 and  the error in #1773#issuecomment-482436819\r\n\r\n*    Bigfile: make Piecefield array a bytearray\r\n    \r\nWe want an array of characters. Py2 strings made sense to\r\nuse as an array of characters, but Py3 strings are different\r\nand no longer a good choice.\r\n\r\nNOTE: we could also store `\\x0` and `\\x1` instead of `b'0'` and `b'1'`. This has the advantage of returning bitfield boolean with `data[key]` instead of having to do `int(chr(data[key]))` (note: `chr()` was not needed with Py2 strings because `\"01\"[0]=='0'` but `b\"01\")[0]==48`). If you want this additional change, I can add it.\r\n\r\n*    Bigfile: remove encode call from piece bytearray\r\n\r\nThat value comes from hsahlib's digest return, which is a bytearray.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555175334, "modified": 1555409660, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1982", "source_type": "github"}, {"topic_id": 1604067254, "title": "Ui, Translate: fix bytearray format string for Py 3.4", "body": "Py 3.4 does not support bytearray format strings for % operator: b\"%s\" % s\r\n\r\nFixes on Python 3.4:\r\n```\r\nUiWSGIHandler error: TypeError: unsupported operand type(s) for %: 'bytes' and 'bytes' in UiServer.py line 41 > pywsgi.py line 924 > pywsgi.py line 908 > UiRequest.py line 302\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555451312, "modified": 1555568434, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1989", "source_type": "github"}, {"topic_id": 1604067256, "title": "Translation does not work with Python 3.4", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 7e57a8f7 (PR #1989)\r\n  * Operating system: Arch Linux / Zeronet in Ubuntu Trusty chroot\r\n  * Web browser:Firefox\r\n  * Tor status: not available/\r\n  * Opened port: no\r\n\r\n### Step 2: Describe the problem:\r\n\r\nClick on language buttons. Ui reloads but remains in english.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555452106, "modified": 1555452106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1990", "source_type": "github"}, {"topic_id": 1604067258, "title": "[setuptools packaging] load auxiliary files via resources", "body": "This PR is part of preparatory patches for setuptools (setup.py) packaging (which is ready, but I'm trying to minimize the size of that diff by splitting all independent changes into separate PRs).\r\n\r\nThis is THE LAST preparatory PR.\r\n\r\nLoad auxiliary files via Python importlib resource API. When the setuptools package is installed to `/usr/lib/python/site-packages` we should access files via the resource API to keep the path logic simple and avoid issues with paths.\r\n\r\nThe importlib resource API is builtin into Python >=3.7 as importlib.resources and for older pythons there is an official backport package importlib_resources (see Resources.py in this PR).\r\n\r\nThe importlib API requires the resource files to be part of packages, hence added the __init__.py files.\r\n\r\n *   Ui: load UI media and translations from resource\r\n    \r\n Merging *.css/*.js into all.css/all.js in debug mode still reads the input files as files from the file system, not as a resources.\r\n    \r\n * UiPassword: load login.html and icon as resource\r\n * Crypt: load openssl conf from resource\r\n * lib: pybitcointools: load worldlist as resource\r\n\r\nManually tested on Py 3.7 and Py 3.4.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555537634, "modified": 1561290106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1991", "source_type": "github"}]}