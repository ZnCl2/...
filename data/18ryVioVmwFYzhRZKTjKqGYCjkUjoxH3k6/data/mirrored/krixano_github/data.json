{"cert_user_id": "krixano@github", "next_comment_id": 334, "comment": {"1604064822_mirrored_HelloZeroNet_github": [{"comment_id": 1, "body": "Yeah, @anoadragon453 , not sure why people are making this more complicated than it needs to be... and if I hear one more freaking thing about IPFS I think I'm gonna freak out, lol.\r\n\r\n---\r\nEdit:\r\n\r\nZeroNet already does the majority of what IPFS does in a much simpler, easier to understand, and more versatile, way. Being more complicated does not make your system more functional or better.\r\n\r\nSome people on here want to move ZeroNet over to using IPFS, and this is completely nonsensical imo. ZeroNet is ZeroNet **because** it's not IPFS, **because** it's simpler. These people use the excuse of not reinventing the wheel, but in case these people haven't noticed, all the code to get ZeroNet functioning is ALREADY WRITTEN and Working. So they conveniently skip over the fact that we would be *throwing away* 4 years of work to move ZeroNet over to a system that's more complicated than it should be, imo.\r\n\r\nAnd that paragraph above is even if we even accept the notion of \"reinventing the wheel\" as being bad. Btw, Calculus was invented twice. The printing press was invented twice. As far as I'm concerned, the wheels we have today are nothing like the wheels when they were first invented. \"Reinventing the wheel\" is not bad.... it allows you a chance to start from scratch and choose a different route than what you already had chosen. What happens if we move over to IPFS and then we decide that we want to do something completely incompatible with IPFS? What happens if ZeroNet outlasts IPFS? You want to see a bad example of \"reinventing the wheel\"? Look at what browsers are doing!", "added": 1570530657, "modified": 1570531843, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-539514408", "source_type": "github"}, {"comment_id": 2, "body": "Well... there's no solution for preventing a person from *having* data they *already got* after they are removed from the allowed people. So... you'd just re-encrypt the data, or prevent the person from receiving deltas (btw, ZeroNet already does a *similar-ish* [but not really] thing - if a zite owner adds someone to the permissions for their zite to disallow them from doing stuff, they won't be able to store zite data anymore).", "added": 1570532142, "modified": 1570532192, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-539525584", "source_type": "github"}], "1604064865_mirrored_HelloZeroNet_github": [{"comment_id": 3, "body": "The main problem I have with `zero://` is that 1.) It's used for the trackers and 2.) When you visit a zite in ZeroNet, you are NOT using the ZeroNet protocol - you are using a **local HTTP server** that serves the files that are stored locally on your computer. The ZeroNet protocol is what handles storing those files locally. They're separate things.\r\nAdditionally, what if we wanted to add more servers to the ZeroNet client. Me and @imachug have created a Gopher plugin for ZeroNet that will serve these local files/zites to a gopher client. The gopher client uses `gopher://`. It's the same thing. The ZeroNet protocol handles storing the files locally, then we overlay a *local* server on top of that to actually serve the files based on the protocol we want to use, by default it's HTTP, but we can also use Gopher, FTP, etc.\r\n\r\nThe `zero` domain would just be `localhost`. And yes, there *is* a subdirectory containing the `site-address` - that's what the data folder is.\r\n\r\nI don't understand how `http://talk.zeronetwork.zero` isn't valid URL syntax... it looks valid to me.", "added": 1557070495, "modified": 1557070838, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-489451550", "source_type": "github"}, {"comment_id": 4, "body": "You're correct @imachug ! Your English isn't wrong.", "added": 1557851309, "modified": 1557851330, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-492376696", "source_type": "github"}], "1604064916_mirrored_kseistrup_github": [{"comment_id": 5, "body": "@noxarivis  Pestering him isn't gonna make the transfer go any faster. Also, you can't expect someone to know the future like that. Problems arise, etc. which is *precisely* the reason why pretty much no company gives ETA on things like this. How about you try helping instead?", "added": 1509849767, "modified": 1509849798, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149#issuecomment-341950642", "source_type": "github"}, {"comment_id": 6, "body": "https://github.com/HelloZeroNet/ZeroNet/issues/1773", "added": 1553038802, "modified": 1553038802, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149#issuecomment-474661445", "source_type": "github"}, {"comment_id": 7, "body": "He would have known that had he even **looked** at the issue I linked to.", "added": 1553688406, "modified": 1553688406, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149#issuecomment-477199041", "source_type": "github"}], "1604064989_mirrored_TheNain38_github": [{"comment_id": 8, "body": "@grez911 Muting users wont work because a person can just create a new user id. IP filtering will block their whole network regardless of the user id - unless they get a new IP. That's how I understand it.", "added": 1503775115, "modified": 1503775683, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/198#issuecomment-325164969", "source_type": "github"}], "1604065966_mirrored_imachug_github": [{"comment_id": 9, "body": "One way that would help this is if the content.json was in version control. Then, B could pull the latest commit made by A and sign and publish. Still a bit annoying I suppose.", "added": 1526401170, "modified": 1526401170, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/975#issuecomment-389282602", "source_type": "github"}], "1604066073_mirrored_krixano_github": [{"comment_id": 10, "body": "Yes, only Chrome mobile works with full support, but Firefox mobile and opera mobile have partial support. Currently the Add To Homescreen function works in firefox mobile, but it doesn't open in it's own window. According to MDN, Firefox Mobile (53+) supports `icons, name, short_name, and theme_color used for Add to home screen feature.` if you enable the flag `manifest.install.enabled` in `about:config` (this doesn't appear to exist in 54, so maybe it's now on by default?).  https://developer.mozilla.org/en-US/docs/Web/Manifest#Browser_compatibility\r\n![image](https://user-images.githubusercontent.com/4098042/28831181-848e6746-769e-11e7-8b05-c52043c3d223.png)\r\n", "added": 1501588292, "modified": 1501589287, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-319394122", "source_type": "github"}, {"comment_id": 11, "body": "I can confirm that with Opera Mobile for Android, it also has the functionality of bringing up PWA's (that were added to the home screen) in their own window with the splash screen and without the address bar - similar to Chrome. Firefox Mobile is working on supporting this stuff (https://bugzilla.mozilla.org/show_bug.cgi?id=997779).", "added": 1501589573, "modified": 1501671506, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-319400848", "source_type": "github"}, {"comment_id": 12, "body": "Firefox mobile has now implemented this in version 58!", "added": 1520058729, "modified": 1520058729, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-370134059", "source_type": "github"}, {"comment_id": 13, "body": ">  Even the smallest support or wisdom here would be great, because opening ZeroMe or KopyKate from home/desktop/taskbar shortcuts in full screen would be nice. A service worker isn't a requirement for that.\r\n\r\nActually, it is last time I checked. You need at the very least an *empty* service worker when I first posted this issue - if you want an app-like experience (which means no address bar).\r\n\r\nEdit:\r\nhttps://docs.pwabuilder.com/what/is/a/pwa/2018/02/03/pwa-min-requirements.html", "added": 1538616640, "modified": 1538617157, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-426881873", "source_type": "github"}], "1604066089_mirrored_AnimeAnimeAnimeAnimeAnime_github": [{"comment_id": 14, "body": "@Hypeouseaus Just to make sure you know, you are showing your private key for ZeroName.", "added": 1503208392, "modified": 1503208585, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1077#issuecomment-323572473", "source_type": "github"}], "1604066164_mirrored_zcyzcy88_github": [{"comment_id": 15, "body": "They would be able to get to it from ZeroHello though, wouldn't they? So the zite owner must be sure to remove the domain field from their content.json file when it expires.", "added": 1507309993, "modified": 1507309993, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1134#issuecomment-334858439", "source_type": "github"}], "1604066166_mirrored_Wieke_github": [{"comment_id": 16, "body": "You can use javascript client-side routing. I created a library that helps with this called [ZeroFrame Router](https://github.com/krixano/ZeroFrame-Router). Here's a basic [demo zite](http://127.0.0.1:43110/1K2myjtjoEVpRC2JMieRL73ES4V4iLP2Ev/?/). most of my zeronet projects use the ZeroFrame Router along with the new Vuejs plugin I made so you can more easily use the plugin with vuejs. The best project you can look at to see how I use all this in a real zite is probably [ZeroMedium](https://github.com/krixano/ZeroMedium).\r\n\r\nUnder the hood, all it does is run zeroframe's `wrapperPushState` and `wrapperPopState` commands and when you click a link to route to a page, it will run your controller function. This I believe is similar to how other zites are doing routing. If using the Vuejs plugin, it will switch a component you put into your root template to the component you defined for the route.", "added": 1507823065, "modified": 1507823182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1141#issuecomment-336229675", "source_type": "github"}, {"comment_id": 17, "body": "@Wieke  As a forewarning, my router is not really the best right now (there are things that need to be fixed, including with the vuejs plugin). However, it is fairly usable.", "added": 1507907110, "modified": 1507907125, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1141#issuecomment-336526422", "source_type": "github"}], "1604066185_mirrored_wzhb_github": [{"comment_id": 18, "body": "auth_privatekey is the private key for your authentication (your user) I belive. privatekey is your zite's private key.", "added": 1508198819, "modified": 1508198865, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1152#issuecomment-337104489", "source_type": "github"}], "1604066190_mirrored_JunerLee_github": [{"comment_id": 19, "body": "You can't publish because there are no peers to publish to. This is fine, you don't need to publish. The reason for this is because other people will just request the zite/content from your computer when they visit it. As long as your zite/content is signed, people will be able to fetch the files from your computer once they visit the zite.\r\n\r\nWhat publishing actually does is push new changes to at most 6 (I think) other computers. These computers then push to more computers. This way everyone's computers have the updated content without having to fetch from your computer. If there are no peers, new people are just going to have to fetch from your computer anyways, so no need to publish.\r\n\r\nOnce you have at least one peer and you make new changes, you must publish so the other computer(s) gets the new content (for the computer *and* for any people that are new to the zite that fetch from that computer).\r\n\r\nI hope I explained this well enough and correctly.", "added": 1508641044, "modified": 1508641392, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1159#issuecomment-338453922", "source_type": "github"}, {"comment_id": 20, "body": "Yes, the *first* peer will fetch from your computer. From then on, once you make changes you will have to publish because then new people won't necessarily fetch from your computer, but could fetch from someone else's (a peer).", "added": 1508668709, "modified": 1508668836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1159#issuecomment-338478108", "source_type": "github"}], "1604066207_mirrored_sergei-bondarenko_github": [{"comment_id": 21, "body": "Currently, you can make it look like what you want, just with an added `?`, so: `http://127.0.0.1:43110/example.bit/?/post/121`. This is how my ZeroFrame Router works. I don't really see a problem with using this method, and to me it's less complicated because everything is right there is javascript, no need to mess with regex's in the content.json file or some other file, etc.", "added": 1508771473, "modified": 1508771530, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1161#issuecomment-338748027", "source_type": "github"}], "1604066212_mirrored_harrisonturton_github": [{"comment_id": 22, "body": "zite's don't have the private key in their source code, therefore it isn't shared with anyone. The private key is stored in the users.json file in the zeronetroot/data directory. By signing your zite, the client is able to access this file to get the private key to sign with.\r\n\r\nAlso, in the source code you linked, at the very top, you can see that the private key is equal to \"xxxxxxx\". A private key can't be that, which means it was redacted. The file is also a php file, ZeroNet Zites don't use php files. My guess is that this php file is on another server that the ZeroBoard zite accesses. On that server, it would have the private key not redacted of course. However, not all zites access the internet in this way. The only ones that do (as far as I know) are ZeroId, ZeroBoard, and Kopy Kate.", "added": 1509844645, "modified": 1509844714, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1176#issuecomment-341948080", "source_type": "github"}, {"comment_id": 23, "body": "No. Remember when I said only ZeroId and ZeroBoard connect to the internet. The php file is on a server that only ZeroBoard is connected to. It's use I dont know about for ZeroBoard. But connecting to the clearnet for ZeroId is used for authentication and to ensure usernames are unique. **No other zite connects to the internet in this way** (except for KopyKate which connects to WebTorrent, and a few other zites like that). The databases in *all* zites are decentralized. There's tutorials on the ZeroNet Dev Center that may help you here: http://127.0.0.1:43110/14pM9huTYzJdyQyHRj6v2kfhMe8DrxwpGt/?/tutorials/the_basics (Note that this is a ZeroNet zite - you need ZeroNet downloaded, or use a proxy like www.bigcat.tk). However, I don't have tutorials on multi-user stuff yet.", "added": 1509848061, "modified": 1509850996, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1176#issuecomment-341949786", "source_type": "github"}, {"comment_id": 24, "body": "Furthermore, here's a little bit of how multi-user and database stuff works. The information in a zite's database is stored in a json file. When your client gets an updated json file, it reloads the information from the json file and and put's it's information in an sqlite database that isn't shared (only the json files are shared). These json files are signed by their respective owner. If the zite has database information stored in a json file, it's signed by the zite owner's private key. If a user posts something on a zite, they get their own json file that they sign with their user private key.", "added": 1509848262, "modified": 1509848297, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1176#issuecomment-341949905", "source_type": "github"}, {"comment_id": 25, "body": "To add more perspective on ZeroBoard: ZeroBoard is an older zite, which is why it still has to connect to a server on the clearnet (it was never updated). Here's a quote directly from Nofish regarding ZeroBoard:\r\n> ZeroBoard was the first site on ZeroNet when multi-user sites was not possible, so the messages are signed and distributed by contacting the site owner which was done by a simple http request.\r\n> \r\n> Possible solutions\r\n> \r\n> * Drop this site\r\n> * Re-create the site with self-signed id certificates\r\n> * Move the adder script to different domain and ip\r\n> * Add a whisper protocol to ZeroNet that allows messages to be distributed between peers just like updates. (Cons: spam solution?)\r\n> * Add a direct message option to ZeroNet API that allows direct messages to be sent to an ip address using ZeroNet protocol. Pro vs current http solution: it does not requires https since ZeroNet protocol supports self-signed cert with pinning.\r\n\r\nBecause we now have multi-user sites, we don't need to use the method that ZeroBoard uses - no need to connect to a server on the clearnet anymore.", "added": 1509849404, "modified": 1509849569, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1176#issuecomment-341950478", "source_type": "github"}], "1604066251_mirrored_DaniellMesquita_github": [{"comment_id": 26, "body": "@Plasmmer Firstly, you need to give substantial proof. You have not done so as far as I'm aware.\r\nSecondly, if there is an issue, propose a way to fix it *that actually works*.\r\nThirdly, stop being a jerk. Things aren't going to get fixed with the type of tone you have when speaking to people. Especially since you tend to *overexagerate* a lot.\r\nNext, don't jump to conclusions just because your \"being ignored\". This ties in with \"stop being a jerk\" from above. I'm talking about these assumptions you made: \"because the owners of the world are prohibiting it\" and \"Is intentional of some open-source project's maintainers to left security issues?!\". \r\n\r\nNo wonder your being ignored (if you actually are being ignored). No one wants to talk to someone who is overly suspicious *with nothing to back up their claims* who tends to overexagerate and is a jerk when talking to people.", "added": 1510582443, "modified": 1510582502, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1180#issuecomment-343989444", "source_type": "github"}, {"comment_id": 27, "body": "@imachug I've only ever had that problem when the file being transferred was big (1MB or more). And that is just because it needs to download the file before it can use it. After waiting till it's downloaded, then it updates. I had this problem with ZeroMedium because the whole zite is over 1MB and my network's upload speed is *extremely* slow.", "added": 1510589450, "modified": 1510589884, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1180#issuecomment-344024973", "source_type": "github"}], "1604066284_mirrored_slrslr_github": [{"comment_id": 28, "body": "I sometimes sign without publishing. One of the reasons for this is if I update my database schema, I can sign it to test it out. After testing, then I publish.\r\n\r\nAlso, it should be a given that you will have to know certain things to make ZeroNet zites. This is one of those things. You should know that you need to Sign changes before publishing. And anyways, imo it isn't that hard to remember considering if you know what these buttons do, it makes complete sense that you would have to sign before publishing.\r\n\r\nSo I propose that instead of dumbing things down, maybe people should learn how to make zites. I have a zite that provides tutorials for this: [ZeroNet Dev Center](http://127.0.0.1:43110/DevCenter.bit/)\r\n\r\nOtherwise, your idea of it telling you whether there is unsigned changes would be good. But I don't think it's necessary because whenever I want to publish something, I always hit the Sign button first regardless of if there were any changes.", "added": 1514583201, "modified": 1514583908, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354516936", "source_type": "github"}, {"comment_id": 29, "body": "> I am not sure, but that would be difficult to check. Example: you recieve update from another computer, then press Publish. We think nothing changed, but for ZeroNet it did.\r\n\r\nActually it's probably not that hard. Just check whether the hashes of the files match what's in the content.json file, if not then there were changes.\r\n\r\nIf ZeroNet received an update, then the content.json with the new hashes would also be updated, which would work correctly with what I said above. And anyways, most updates are going to be for user content.json files, which don't get signed if you are just signing the main content.json file.", "added": 1514622821, "modified": 1514622900, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354541412", "source_type": "github"}, {"comment_id": 30, "body": "get hashes of current files\r\nCheck if all hashes match the hashes in content.json\r\n   If they do there were no changes.", "added": 1514623057, "modified": 1514626779, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354541589", "source_type": "github"}, {"comment_id": 31, "body": "Obviously leaving out the ignored files in the ignore regex. It's literally the same as what Sign does. and it's only done when you click publish.\r\n\r\nYou said you didn't know how it would be done. I gave one way to do it. You said nothing about performance. Yes, perhaps the performance isn't the best.", "added": 1514623120, "modified": 1514630859, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354541643", "source_type": "github"}, {"comment_id": 32, "body": "Would looking at modified dates of the files work? That would certainly be faster.", "added": 1514623486, "modified": 1514623516, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354541903", "source_type": "github"}, {"comment_id": 33, "body": "What about something like this from @slrslr :\r\n> Other thing may be a drop-down menu called example \"Sign / Publish\", when you click it, you can choose all three options, while third one is \"Sign & Publish\".\r\n\r\nIt could be a button for sign and publish. Then on the right side, there could be a dropdown with the other two options \"only sign\" and \"only publish\". It's kinda like a button merged with a dropdown/select.", "added": 1514625800, "modified": 1514625957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543476", "source_type": "github"}, {"comment_id": 34, "body": "Yeah. Here's a better image that I found:\r\n\r\n![image](https://user-images.githubusercontent.com/4098042/34454167-1886ba7c-ed2b-11e7-9ec7-c3b0abfd667e.png)\r\n", "added": 1514626303, "modified": 1514626303, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543800", "source_type": "github"}, {"comment_id": 35, "body": "No, it was from google images.", "added": 1514626434, "modified": 1514626434, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543897", "source_type": "github"}, {"comment_id": 36, "body": "The image uses these type of buttons from the Foundation framework.\r\n\r\nThis is the code it suggests:\r\n```html\r\n<a class=\"button dropdown\" href=\"#\" data-dropdown=\"drop1\">Dropdown Button </a>\r\n \r\n</pre>\r\n<ul class=\"f-dropdown\" id=\"drop1\" data-dropdown-content=\"\">\r\n    <li><a href=\"#\">This is a link</a></li>\r\n    <li><a href=\"#\">This is another</a></li>\r\n    <li><a href=\"#\">Yet another</a></li>\r\n</ul>\r\n<pre>\r\n```", "added": 1514626502, "modified": 1514626667, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543953", "source_type": "github"}, {"comment_id": 37, "body": "@imachug I am going to delete everything that I've said that's not related to this topic if that's fine.", "added": 1514626703, "modified": 1514626718, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354544077", "source_type": "github"}, {"comment_id": 38, "body": "I don't think that code is correct though, I think they messed up with the article. Because the text next to it says there should be something with a `split` class or something.\r\n\r\n> The final layer of flexibility you have to play with is the option to add a split in your buttons. This can be used to indicate the availability of a dropdown, a download, whatever you want really. Add it onto your button using the \u2018split\u2019 class and a span element that should include the same \u2018data-dropdown\u2019 attribute we used earlier in our dropdown example.\r\n\r\nAlso the code from above just looks like a dropdown button, which is different.", "added": 1514627075, "modified": 1514627122, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354544320", "source_type": "github"}], "1604066313_mirrored_imachug_github": [{"comment_id": 39, "body": "What final result looks like:\r\n![image](https://user-images.githubusercontent.com/4098042/34455894-a9d8bc32-ed4e-11e7-91f8-26b337cbc41a.png)\r\n\r\n![image](https://user-images.githubusercontent.com/4098042/34455898-b1f38fbe-ed4e-11e7-8ee8-5d54187b3385.png)\r\n", "added": 1514641592, "modified": 1514641592, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354555695", "source_type": "github"}, {"comment_id": 40, "body": "Looks like the `src/Test/TestRateLimit.py::TestRateLimit::testCall FAILED                [ 49%]` test failed. Is this important?", "added": 1514649310, "modified": 1514649335, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354562352", "source_type": "github"}], "1604066289_mirrored_Rtnd_github": [{"comment_id": 41, "body": "Afaik, Vue by itself shouldn't have any problems as I use vue for all of my zites without having to change the library in any way.", "added": 1515059782, "modified": 1515059782, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1236#issuecomment-355275563", "source_type": "github"}, {"comment_id": 42, "body": "@imachug Yeah, it could definitely be a Vue plugin.\r\n  ", "added": 1515064141, "modified": 1515064150, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1236#issuecomment-355290887", "source_type": "github"}], "1604066296_mirrored_elliekeli_github": [{"comment_id": 43, "body": "@JazzMaster You just said some incorrect stuff, which is very annoying.\r\n\r\nFirstly, zeronet-win-dist *does* use an executable. Why can this be? Simple. You can compile python, you can run a python script from an executable, etc. etc. How do you think compiled programs are able to use plugins written in python? Because you can call python from an executable. I don't know exactly what zeronet.exe is doing, however I do know it is probably calling python to run zeronet's python scripts.\r\n\r\nNext, Unix uses `/`, and Windows *typically* uses `\\`. However, Windows *does* also support `/` (although, I'm not sure if unix supports `\\` - never tried it). Type `cd /Users` in the command prompt and you can clearly see that Windows supports `/`. You can of course also do this same command with `\\`. Although, I will say that this may be due to the fact that programs automatically correct it to `\\` whenever you use `/`, including cmd.exe. However, that doesn't matter much because pretty much everything supports it (now at least).\r\n\r\nFinally, they were staying on topic. And if they weren't, it doesn't matter because both the person who created the issue and the person who owns this repository dictate what's acceptable to be talked about in this issue and what's not. Notice that doesn't include you.", "added": 1518281324, "modified": 1518282189, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1241#issuecomment-364684499", "source_type": "github"}], "1604066327_mirrored_antilibrary_github": [{"comment_id": 44, "body": "I believe your zite has to ask for the permission to be added, then the user must accept that permission.\r\nI don't know the specific command to call to ask for the permission, but it's either in the ZeroFrame API Reference or will be.", "added": 1519275458, "modified": 1519275530, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-367596489", "source_type": "github"}], "1604066365_mirrored_slrslr_github": [{"comment_id": 45, "body": "I believe chrome uses C++ actually, but that doesn't negate the fact that it would be hard to rewrite everything in C++ - although I think it could be worth it to rewrite ZeroNet into a lower level language (not C++, but perhaps Rust - especially because of Rust's safety, zero abstraction costs, zero GC, etc). Although, this *could* reduce cross-platformness (Android and iOS), however, if you do it right, then you can call out from swift/java to the C++ or Rust program (of course how hard this is would depend on the libraries and tools available for C++ and Rust with each platform and that platform's primary language's ability to link out to each language).", "added": 1521523152, "modified": 1521525485, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-374511627", "source_type": "github"}, {"comment_id": 46, "body": "@didlie \r\n> is good, but too wordy,\r\n\r\nThat's because they are tutorials, not references. Also, I believe I've said before that these are for beginners and give overview. They do *not* say anything about the specific internals of ZeroNet.\r\n\r\nThere is no code in the tutorial you are linking to precisely because it is about the concepts, not the code. This tutorial was not made for just zite developers, it was made to get the concept accross for developers *and users*. It is also meant to be simple.\r\n\r\n>  Comment the code.\r\n\r\nAgain, there is no code in this tutorial, and this tutorial is *not* about the internals of ZeroNet, just the overall concept of how users and databases work.\r\n\r\nAll of this was stated at the beginning of the tutorial, if you actually bothered to read all of it: \r\n\r\n> ... provides a **basic overview** of how Databases and Users ...\r\n> ... so that **both users** and developers will understand them ...\r\n> ... the purpose of Databases and Users **in general** ...\r\n\r\nAs per @HelloZeroNet 's request, we should move this conversation elsewhere, perhaps on [Thunderwave](http://127.0.0.1:43110/ThunderWave.bit)?", "added": 1521735640, "modified": 1521736641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-375427290", "source_type": "github"}], "1604066364_mirrored_krixano_github": [{"comment_id": 47, "body": "Thanks so much! See:\r\n> I'm not 100% sure that this is due to an update, or even the latest update. I have only noticed this problem just after I have updated. It's possible that the problem could be due to something else completely different.\r\n\r\nTurns out I was right about that.\r\nHowever, I think there should be a better error message. Also, not sure if the disappearing sidebar is related, but it seems like that shouldn't happen even with an error like that.\r\n\r\nBtw, can't believe I made a simple mistake like that.\r\n\r\nEdit: Looking back at the error message, I can kinda see what it means by needing more than one value to unpack - it's just the choice of the word \"unpack\" that I think confused me in the first place.", "added": 1519214375, "modified": 1519217486, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1294#issuecomment-367353526", "source_type": "github"}], "1604066365_mirrored_rllola_github": [{"comment_id": 48, "body": "The problem I see with standardizing zero:// is how would proxies work. If local, addresses use zero://[address], would proxies have to use zero://[proxy url]/[address] or keep what they are currently doing? For both of those, urls are still going to be messed up for proxies. Unless there's a way to capture any url change from a website to detect whether they are going to a url prefixed with \"zero://\", and then convert it to the correct url for the proxy.", "added": 1520088901, "modified": 1520089582, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1295#issuecomment-370166771", "source_type": "github"}], "1604066369_mirrored_RedbHawk_github": [{"comment_id": 49, "body": "@imachug I believe ZeroBlog has a button in the bottom right corner that pops up when the owner of the zite creates a new post so that they can easily click it to sign their zite.", "added": 1519357813, "modified": 1519357813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1298#issuecomment-367925626", "source_type": "github"}], "1604066370_mirrored_AccountCreatr_github": [{"comment_id": 50, "body": "You need to \"**login**\" with the master seed, not change it. I would suspect changing the master seed is going to mess some stuff up (of course, never done it myself).\r\nOn ZeroHello, click the \"user: ...\", click Logout, a thing will popup on the right side, click \"Login to another user\".", "added": 1537915184, "modified": 1537915337, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1299#issuecomment-424555973", "source_type": "github"}, {"comment_id": 51, "body": "All of the private and public keys for each zite is generated using the master seed *I think*. @HelloZeroNet and @imachug can probably confirm or deny this.\r\n\r\n> Seems like a serious bug if you can't.\r\n\r\nI don't see why. You can't just change your private key and have it work, right? Why would this be any different.", "added": 1537918942, "modified": 1537918976, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1299#issuecomment-424565746", "source_type": "github"}, {"comment_id": 52, "body": "@BenMcLean Right, you can change your private key if you've changed your public key and they work with each other. But you can't just change one.\r\n\r\nAdditionally, you said nothing about starting over, and considering you were trying to delete a zite, I got the impression that you didn't start over.\r\n\r\nAll I'm saying is don't expect things to work like you were told they were supposed to work unless you've actually followed what the person's directions were. If you do something different, then you should expect different results.", "added": 1537932399, "modified": 1537932532, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1299#issuecomment-424599642", "source_type": "github"}], "1604066399_mirrored_slrslr_github": [{"comment_id": 53, "body": "#1258 ", "added": 1519933295, "modified": 1519933295, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1310#issuecomment-369756571", "source_type": "github"}], "1604066387_mirrored_tangdou1_github": [{"comment_id": 54, "body": "@tangdou1 You can just close this yourself by clicking the \"Close issue\" button right next to the comment button.", "added": 1520058507, "modified": 1520058890, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1312#issuecomment-370133843", "source_type": "github"}], "1604066404_mirrored_slrslr_github": [{"comment_id": 55, "body": "I'm having a similar problem. It's not related to wrapper_nonce being in the url - that's a different bug that plagues the back button (and reopening session when browser crashes). For example, I would click on a Git Center repo in it's repository index, and a blank page would show. I would have to refresh to see the page. This happens to at least one other site, I think it was ZeroNet Docs. However, it doesn't happen often.\r\n\r\nI'm on Firefox and Linux. No special configuration, no Tor, and rev3337.", "added": 1520088153, "modified": 1520209899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1313#issuecomment-370165864", "source_type": "github"}], "1604066391_mirrored_tangdou1_github": [{"comment_id": 56, "body": "You could put it under the \"This Is My Site\" part of the menu. As a developer, this functionality would be pretty useful.", "added": 1520461225, "modified": 1520479233, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1314#issuecomment-371344452", "source_type": "github"}], "1604066423_mirrored_didlie_github": [{"comment_id": 57, "body": "*Sigh* Of course you would automatically jump to `Microsoft is fighting this.`", "added": 1521385837, "modified": 1521385837, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1338#issuecomment-374025749", "source_type": "github"}], "1604066448_mirrored_didlie_github": [{"comment_id": 58, "body": "I actually completely agree with @didlie that dependencies should be in github repo. Also something to note, this *does not* mean that these deps cannot be updated or that you can't use pip (or some other package manager). It should be the responsibility of the programmer to update the dependencies in the repo to **make sure that the new versions actually work.** By storing your dependencies in the repo, this **allows people to still use the code** even **when** the **places where the dependencies are** usually **downloaded from are down or no longer exist** (*cough* **leftpad** *cough*).\r\n\r\nRegarding not being able to store binary files with source code, that wouldn't be as much of a problem if we would quit using Git and use a better system, although one needs to be created first I guess, and it could reduce visibility/discoverability of the project. However, there is LFS.", "added": 1521641793, "modified": 1521642918, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375024058", "source_type": "github"}, {"comment_id": 59, "body": "@imachug No, because those repos could be deleted/down and I don't think that git keeps the files you downloaded from the submodules in with your repo while still letting you update them, if it did that, then that would be better in my opinion.", "added": 1521646289, "modified": 1521646289, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375050242", "source_type": "github"}, {"comment_id": 60, "body": "@imachug I don't think forking the modules is that much different, but it's better. Imo, the dependencies should be directly in the same folder so that if you decide to move the repo someone else, you'll still have all of it.\r\n\r\nBasically, what I think would be the best is if there was a package manager (like npm) that stores the dependencies in a dependencies folder, and then you just track that folder in with your repo. The problem with doing this with web development (e.g. npm) is that the web has so many dependencies that it would definitely clutter up the directory and may take quite a lot of space. That's also why I think the whole climate of web development isn't very good (I mean come on, people are depending on libraries that literally have barely any lines of code - again *leftpad*).", "added": 1521648116, "modified": 1521648267, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375059793", "source_type": "github"}, {"comment_id": 61, "body": "Thinking about leftpad some more and looking at it's examples and it's source code - I find it even more stupid. Literally all it does is put spaces (or a character of choice) at beginning to make the size of the string the size that you want. The implementation looks even more stupid. They're doing some weird thing in a loop where they divide by two when all they have to do is take the length of the string minus the desired length and add that many spaces to the beginning. It makes no sense to me. It looks they are trying to do some optimization, but is that really needed for something like this?\r\n\r\nAnd this is a library that so many people were using - which is even more ridiculous imo.\r\n\r\nOkay, I'm done with that now.", "added": 1521649279, "modified": 1521649458, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375065360", "source_type": "github"}, {"comment_id": 62, "body": "> When I just installed Python, it gave me 3.7, that is not compatible with this repo\r\n\r\nLinux distros separate python2 and python3. Some of them have python default to python2 and some have python default to python3. But you can find both in each of their respective package managers. Not sure if you are on Linux or not though.", "added": 1521653842, "modified": 1521653875, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375087235", "source_type": "github"}, {"comment_id": 63, "body": "You can install python2 or python3 on windows. Right on the download page they have an option for python2. https://www.python.org/downloads/\r\n\r\nIf, however, you are talking about the \"python\" command defaulting to python3 when you have both installed - you can try using the command \"python2\", but I doubt that will work (that's how it's done on linux, not sure about Windows). But otherwise, I don't know about this.", "added": 1521654143, "modified": 1521655398, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375088673", "source_type": "github"}, {"comment_id": 64, "body": "@skwerlman Did you read everything I wrote? I'm saying storing working versions in requirements.txt is not enough because the main sources that you can get these from could go down or be deleted, like with the case of leftpad.\r\n\r\n@didlie \r\n**If you are talking about ZeroNet**\r\nWhat is there that isn't standardized or not documented? It's documented that it uses Python2 and it's documented how to run this code for many Linux distros, there's documentation on every API function for ZeroFrame (which takes care of `Python and Javascript both need to agree on a system of standardized functions`).\r\n\r\nPython dependencies are recorded in requirements.txt, which has been said a couple times now. JavaScript dependencies are dependent on what each zite does (aside from pretty much every single zite using ZeroFrame API). Zites are exactly the same as regular sites on the internet, they just replace their communication with a central server for communication with the ZeroNet server/client (by using the ZeroFrame API, some of which replaces browser api functions). That's essentially it.\r\n\r\nHere you go:\r\n* Running, Installing, Creating a zite using command line - https://github.com/HelloZeroNet/ZeroNet/blob/master/README.md\r\n* A little bit of how ZeroNet works - https://docs.google.com/presentation/d/1_2qK1IuOKJ51pgBvllZ9Yu7Au2l551t3XBgyTSvilew/pub?start=false&loop=false&delayms=3000#slide=id.g9a1cce9ee_0_4\r\n* ZeroNet documentation (including on ZeroFrame, content.json, and dbschema/databases) - https://docs.google.com/presentation/d/1_2qK1IuOKJ51pgBvllZ9Yu7Au2l551t3XBgyTSvilew/pub?start=false&loop=false&delayms=3000#slide=id.g9a1cce9ee_0_4 (This can also be found as a zite on ZeroNet, the zite being called ZeroNet Docs)\r\n* ZeroNet's python dependencies for the actual application - https://github.com/HelloZeroNet/ZeroNet/blob/master/requirements.txt\r\n* You can find a tutorial for creating a zite with a database on ZeroBlog.\r\n* I believe imachug has already mentioned his tutorials to you.\r\n* There is one tutorial on creating a ZeroNet Plugin on my [ZeroNet Dev Center](http://127.0.0.1:43110/DevCenter.bit)\r\n* I also have tutorials on how ZeroNet works overall and a little of why it works the way it does - all on ZeroNet Dev Center.\r\n\r\nThe documentation is there for the majority of stuff for ZeroNet, it just needs vastly improved.\r\n\r\n**If you are talking about Javascript and Python themselves:**\r\n* https://docs.python.org/3/\r\n* https://docs.python.org/2.7/\r\n* MDN (Mozilla Development Network) provides documentation on pretty much everything in Javascript, including which browsers implement what\r\n* The standard of Javascript is called ECMAScript: http://www.ecma-international.org/publications/standards/Ecma-262.htm\r\n* https://www.w3.org/standards/ and https://www.w3.org/standards/webdesign/script - define the browser APIs that have been developed by the W3C\r\n\r\nSaying that python and/or Javascript don't have a set of standardized functions and no documentation is wrong, clearly. Furthermore, if you are saying that they both need to have the same set of standardized functions, I completely disagree. If you are saying that they both each need to have standardized functions of their own, then I believe, as shown above, that they do.\r\n\r\nAlthough, I do agree that web developers need to learn how to write code themselves instead of just using libraries for every single thing. However, I think using stuff like Vue, is fine because it would take forever to create those things. The only other library that may be useful is an editor library because the standard for contentEditable is horrible and it's implementations are buggy and different with each browser.\r\n\r\nBtw, PHP is a horrible language. So is Javascript. Python I don't like much. The only decent programming languages that I've used/seen I would say are C, Rust, JAI (unreleased), and Odin.", "added": 1521680120, "modified": 1521682604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375171727", "source_type": "github"}, {"comment_id": 65, "body": "Is virtualenv like what Docker does? Sorry, I don't know much about that stuff. But if it is, it's kinda dumb because it solves a problem that wouldn't have been a problem if people would just quit using system libraries.", "added": 1521686375, "modified": 1521686375, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375186267", "source_type": "github"}, {"comment_id": 66, "body": "> I want a full blueprint / logic flow of the zeronet/zeronet - from the initial download, install and identification of peers and self-identification and creation of the welcome page... minimalist\r\n\r\nNot sure precisely what you are talking about here, but the powerpoint/slides I linked to gives some information on how a zite is downloaded (this includes the ZeroHello \"welcome\" page, it is just a zite that is downloaded), checked for authenticity (using signatures), etc. My tutorials include some of this as well. My tutorials also goes over databases and users and a little of how ZeroId and KaffieId work. I would say my tutorials aren't just for ZeroNet Zite development, but also to get a little bit of an understanding of how ZeroNet works overall. I would reccommend my first tutorial \"The Basics\", and my \"Users and Databases In ZeroNet\" tutorial. If you want to go further with actual zite development, then @imachug 's tutorials are good - even if you just want to learn a little of how merger zites and optional files work. The only other thing I can suggest is look at example websites - many of them are on GitHub (and GitCenter), including the \"official\" ones (ZeroBlog, ZeroId, ZeroMe, etc.). Otherwise, I don't know much about the actual internals of ZeroNet (besides what I've provided in my tutorials, which really just gives a simple overall view).\r\n\r\nThe documentation can be a little vague sometimes and some parts of it rely too much on examples (and not enough on descriptions/specifications) I would say. Although, I think the best documented part is the ZeroFrame API commands.", "added": 1521727999, "modified": 1521728245, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375385670", "source_type": "github"}], "1604066455_mirrored_didlie_github": [{"comment_id": 67, "body": "You can download python 2. Python 2 is still used by many applications.", "added": 1521836709, "modified": 1521836724, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1354#issuecomment-375823775", "source_type": "github"}], "1604066462_mirrored_slrslr_github": [{"comment_id": 68, "body": "This is dependent on the zite. Each zite must implement it themselves. Otherwise, there's ZeroHello (which you've already mentioned).", "added": 1522074839, "modified": 1522074887, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1355#issuecomment-376248147", "source_type": "github"}], "1604066471_mirrored_tangdou1_github": [{"comment_id": 69, "body": "Why did you close this if you want it accepted?", "added": 1522635385, "modified": 1522635385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1367#issuecomment-377856768", "source_type": "github"}], "1604066508_mirrored_slrslr_github": [{"comment_id": 70, "body": "This happened for a lot of zites, mostly when, for example, the browser crashed and reopening it reloads the page, but with the wrapper_nonce stuff on the end of the url.", "added": 1523976321, "modified": 1524066873, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1388#issuecomment-382081318", "source_type": "github"}], "1604066491_mirrored_thisguy43110_github": [{"comment_id": 71, "body": "You can close this issue.\r\n", "added": 1524418160, "modified": 1524418160, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1393#issuecomment-383409954", "source_type": "github"}], "1604066533_mirrored_ghost_github": [{"comment_id": 72, "body": "Well, the \"restrictions\" (which are more like checks) that are built in the zite's html & javascript code are obviously going to be able to be bypassed by changing the code on the user's side. However, you cannot change which files are seeded to other people because that is set only by the owner of the site using their signature in the `content.json` file at the root of the data/users directory.", "added": 1524310383, "modified": 1524310407, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1397#issuecomment-383301444", "source_type": "github"}, {"comment_id": 73, "body": "It depends on if ZeroUp has anything for the \"**allowed_optional_files**\" option in the content.json file I mentioned before. If it does and the file extention you've uploaded isn't in there, then the files are *not* seeded to anybody else as far as I'm aware. Although, **not sure if big files are included in that.**\r\n\r\n**However, it is probably being added to a database that shows all uploaded files but the file still isn't able to get seeded** (depending on if big files are included with the allowed_optional_files restriction).", "added": 1524328290, "modified": 1524328466, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1397#issuecomment-383323446", "source_type": "github"}], "1604066545_mirrored_didlie_github": [{"comment_id": 74, "body": "@didlie \r\nIf nobody hosts zites except their own, then a lot of the current benefits get thrown out the window. It's just like torrents. If there's only 1 peer ever for every torrent, then the benefits of torrents are completely diminished.\r\n\r\nI would say that your statement that people would only ever host their own stuff is likely to be false considering how many people are hosting ZeroNet zites currently, and the popularity of torrents, Freenet (I think it's called), ZeroNet, and IPFS.\r\n\r\nIf you think you have a better idea, then it makes more sense to start a new project than to try to completely change an existing one.", "added": 1529862727, "modified": 1529862933, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-399786779", "source_type": "github"}, {"comment_id": 75, "body": "Let me clarify a bit. My intention wasn't to run down the idea. However, when you come on a project that has a specific focus saying \"Talk to me. I have a better approach.\" and wanting the project to completely change itself based on your ideas when your ideas haven't even been proven yet is a little off-putting and, imo, a little rude and disrespectful to the project.", "added": 1529893244, "modified": 1529893244, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-399834770", "source_type": "github"}], "1604066530_mirrored_krixano_github": [{"comment_id": 76, "body": "I would like to see ZeroNet implemented in Rust. I believe Rust is good with interfacing with other languages, so you might be able to incrementally and gradually switch over to Rust.", "added": 1526451148, "modified": 1526452683, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1423#issuecomment-389451181", "source_type": "github"}, {"comment_id": 77, "body": "Thanks! Didn't realize the priority stuff wa already implemented.", "added": 1526973453, "modified": 1526973469, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1423#issuecomment-390939326", "source_type": "github"}], "1604066537_mirrored_krixano_github": [{"comment_id": 78, "body": "Redownloading it fixed it, kinda. When I created a Windows Installer for ZeroNet using AdvancedInstaller with the redownload, testing the installer I got this error *unless* I ran the program as administrator. So this issue has to deal with AdvancedInstaller.\r\n\r\n#1429 ", "added": 1526673559, "modified": 1526686348, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1428#issuecomment-390353538", "source_type": "github"}], "1604066539_mirrored_krixano_github": [{"comment_id": 79, "body": "I've also made the installer append the application/installation directory to the PATH environment variable so that the ZeroNet exe file can be accessed from the cmd prompt.\r\n\r\nThere is one problem. When uninstalling, it only removes the stuff that the installer added and since the data directory along with other stuff is downloaded on first startup of the ZeroNet exe, this stuff isn't removed during uninstallation. This may or may not be desired, not sure. I think it'd be better to provide a checkbox to remove data files during uninstallation, not sure how to do this yet though.\r\n\r\nHere's the new msi file with this change: \r\n[ZeroNet_MSI.zip](https://github.com/HelloZeroNet/ZeroNet/files/2018946/ZeroNet_MSI.zip)\r\n", "added": 1526677524, "modified": 1526678037, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390361862", "source_type": "github"}, {"comment_id": 80, "body": "**Update:** [Repo](https://github.com/krixano/ZeroNet-Windows-Exe-Installer)\r\n\r\n---\r\n\r\nI have created a new installer, which is now an Exe rather than an MSI, created with *Inno Setup 5*.\r\nIt now has the option to disable Adding to Start Menu and now includes a shortcut to the uninstaller within the Start Menu (as well as link to website).\r\n\r\nThis file is also smaller than the MSI one.\r\nUpdated: [ZeroNetInstaller.exe](https://github.com/krixano/ZeroNet-Windows-Exe-Installer/releases/download/1.1/ZeroNetInstaller.exe)\r\n", "added": 1526772539, "modified": 1526800576, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390453050", "source_type": "github"}, {"comment_id": 81, "body": "It should be starting up with administrative privileges for that, yes. I might have made that change after I uploaded this though. The last time I've tested it, it worked for me.\r\n\r\nI'm going to put the files for this up on GitHub right now.", "added": 1526786559, "modified": 1526786604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390460713", "source_type": "github"}, {"comment_id": 82, "body": "Because ZeroNet needs to modify the files in it's directory under Program Files (e.g. to download zites into data directory) and you have to have admin privileges for that in this particular case.\r\n\r\nI think there's a way to make it where ZeroNet doesn't have to do this as long as it's done by ZeroNet exe, but I think that might require modifying ZeroNet itself, and I don't know how to do this.", "added": 1526787312, "modified": 1526787468, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390461217", "source_type": "github"}, {"comment_id": 83, "body": "I believe there's a way to change the data directory of ZeroNet from the zeronet.conf file (I read some ZeroNet code, and it seems to suggest that you can). However, I tried (by putting `data_dir = \"newData\"` in the conf file), and I got an error saying \"Failed to execute script boot\"", "added": 1526787616, "modified": 1526787632, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390461389", "source_type": "github"}, {"comment_id": 84, "body": "I've made a GitHub repo for the installer here: https://github.com/krixano/ZeroNet-Windows-Exe-Installer\r\nI've also uploaded the exe as the first release.", "added": 1526788047, "modified": 1526788047, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390461650", "source_type": "github"}, {"comment_id": 85, "body": "Thanks!", "added": 1526800529, "modified": 1526800529, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390470843", "source_type": "github"}, {"comment_id": 86, "body": "@l5h5t7 Sure, but there are many other problems that you aren't considering that I have and will be dealing with in the future. Wait until this installer is more developed and it'll have the option between either with additional things that will hopefully help with these problems that I'm thinking of.", "added": 1528548702, "modified": 1528548702, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-395979236", "source_type": "github"}], "1604066574_mirrored_imachug_github": [{"comment_id": 87, "body": "@imachug I've just added it as an option to my installer! Download the new version [here](https://github.com/krixano/ZeroNet-Windows-Exe-Installer/releases/tag/1.1).", "added": 1526793545, "modified": 1526793840, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390465421", "source_type": "github"}, {"comment_id": 88, "body": "> Please also note that the currently requested user actions for installing a plugin are: downloading the plugin code / folder in any way and putting it in a specific folder inside of the ZeroNet one. This already requires very basic abilities and little time.\r\n\r\nSo what's different from this and having a one-click install function? You still have to trust the plugin and where it came from in both cases.\r\n\r\nWhile I agree that there should be a restricted API for plugins to ZeroNet, I *do not* agree that the users are incapable of identifying when a plugin is bad and that having a one-click install would be catastrophic. People can flag/comment/vote on plugins with a plugin store zite, we can have a 24/7 running client downloading all plugins from this plugin store and scanning them for malicious code, and users can trust or be wary of plugins by looking at who made them. There are many options to this, but I think the one's I have provided are the most basic and probably easiest, and will increase security quite a bit, imo.\r\n\r\nAlso, aside from having a restricted plugin API (and perhaps a plugin permission system), I think the security of plugins should be handled by the plugin store rather than the client itself.", "added": 1536678331, "modified": 1536678642, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420366373", "source_type": "github"}, {"comment_id": 89, "body": "It's funny how one of the most used languages for plugins doesn't have proper sandbox support.", "added": 1536771003, "modified": 1536771003, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420774976", "source_type": "github"}, {"comment_id": 90, "body": "@HelloZeroNet Some languages, like JS, don't necessarily need sandboxing because the APIs etc. are already so restricted. Java has sandboxing built-in, afaik. I believe Lua also has some sandboxing or sandbox-like system.\r\n\r\nAdditionally, let me expand on what I meant by \"restricted API\". I mean, **the ability for these plugins to access ZeroNet internals should be restricted**, not *necessarily* the OS (although this would be good too if python made this easy). The reason why I make this clear now is because I believe in python, you should be able to restrict access to ZeroNet internals (making things private/protected in classes, modules, etc. - I would think python has these concepts but I don't know much about the OOP side of python).\r\n\r\nI feel like I've had this whole conversation before with @imachug ", "added": 1536773147, "modified": 1536774843, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420785336", "source_type": "github"}, {"comment_id": 91, "body": "Let me also clear up one more thing about what I was saying before:\r\n* I do think that a restricted API and perhaps permission system, and perhaps (if achievable) sandboxing - would greatly increase security of plugins, as long as it's done right. (Although, whether any of this is actually needed I think is a whole different story.)\r\n* However, I don't think any of that is needed before allowing a one-click install of a plugin\r\n* This one-click install will be called by the zite, the zite giving a description and a zip file to the API command, where the ZeroNet client will *prompt* the user to install the plugin or not. If accepted, the ZeroNet *Client* will extract the folder in the zip, place it in the plugins directory, and refresh/reinitialize the plugins. There doesn't need to be any execution on the zite/plugin's side for the installation part (aside from calling the command and providing the zip).\r\n* Security of plugins can be handled by a voting system, plugin review system, plugin scanner, flagging, etc. - which I think should all be implemented for plugin store *zites*, not the client.\r\n\r\nOne more thing: I was thinking of sandboxing in the sense of restricting plugins from accessing the OS so that they *have* to go through a ZeroNet plugin API, but I think actual sandboxing may be different/more complex.", "added": 1536774211, "modified": 1536775266, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420790782", "source_type": "github"}, {"comment_id": 92, "body": "@HelloZeroNet I see what you are getting at, although I'm not 100% sure yet.\r\n\r\nAdditionally, I do think, as I was trying to get across above, that having code scanners, voting system, etc. would have a greater impact in a shorter amount of time.", "added": 1536776184, "modified": 1536776228, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420800692", "source_type": "github"}], "1604066542_mirrored_hoochanlon_github": [{"comment_id": 93, "body": "Besides, it's impossible because you'd need the private key which is only stored on one computer, the computer that had the account created. If you lose that private key, then you can't ever get it back. Which is why you should backup your `users.json` file.", "added": 1526794992, "modified": 1526795017, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390466560", "source_type": "github"}, {"comment_id": 94, "body": "When you register for an id, your local client registers it and puts it into your users.json file automatically. Everything is done locally, which is why kaffie.bit can't enforce username rules. I explain this just a bit more in [this tutorial on Users and Databases](http://127.0.0.1:43110/DevCenter.bit/?/tutorials/users_databases_in_zeronet) from my ZeroNet Dev Center zite.", "added": 1526882329, "modified": 1526882410, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390595535", "source_type": "github"}, {"comment_id": 95, "body": "No: `your local client registers it and puts it into your users.json file automatically. Everything is done locally,`", "added": 1526883164, "modified": 1526883243, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390598856", "source_type": "github"}, {"comment_id": 96, "body": "Kaffie.bit it not a proxy. It is a zite. There is no server that kaffie.bit is on, it's local. All zites are downloaded locally. Basically, what the kaffie.bit zite does during username registration is call out to your client to create a private and public key for your new user, and creates a signature (using a *publicly available* private key from kaffieId), and then adds all of that to your users.json file and associates it with kaffie.bit (basically by just putting the string \"kaffie.bit\").\r\n\r\nKaffieId's are fully decentralized, unlike ZeroId, which is centralized. By allowing the client to create the id, restrictions on the id's are not possible. People can use the same id name, id's can contain almost anything, etc.\r\n\r\n**I go over all of this in [the tutorial I linked previously](http://127.0.0.1:43110/DevCenter.bit/?/tutorials/users_databases_in_zeronet).**", "added": 1526884010, "modified": 1526884871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390602349", "source_type": "github"}, {"comment_id": 97, "body": "What do you mean zeronetID support? Everything just uses public and private keys, and signatures which is just the id information encrypted with the id zite's private key. Then, to verify an id, it matches the id's information with the signature, which is decrypted with the id zite's public key.\r\n\r\nThe only difference between ZeroId and KaffieId is that:\r\n* For ZeroId - the id information is sent to a server that creates the signature encrypted with the private key and sends that signature back to be put into your users.json file.\r\n* For KaffieId - the id information is used to create the signature *locally* using the *publicly available* private key. The signature is put into users.json file.\r\n\r\nBoth of them put the id information along with the signature in the users.json file. The difference is where the signature is created and encrypted.", "added": 1526885413, "modified": 1526885760, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390607640", "source_type": "github"}, {"comment_id": 98, "body": "That's because you created that user on the proxy server, not on your client. The users.json file isn't magically synced up between every machine. It's a local file that is never shared/synced. Whatever computer you created that account on, that's where the data for that id is stored. In this case, you created the user on the proxy, so only the proxy has the user.\r\n\r\nEverything is local to the computer you are using ZeroNet on. If you are using it on a proxy, then everything is local to that proxy. If you are using your own client, then everything is local to your computer.", "added": 1526887683, "modified": 1526888043, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390616325", "source_type": "github"}, {"comment_id": 99, "body": "Go to KaffieId zite here: [http://127.0.0.1:43110/id.kaffie.bit/](http://127.0.0.1:43110/id.kaffie.bit/)", "added": 1526888603, "modified": 1526888603, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390619449", "source_type": "github"}, {"comment_id": 100, "body": "> registering KaffieID locally will write it into the users.json file\r\n\r\nIf this is a question, then yes. That's what I've been saying.", "added": 1526889308, "modified": 1526889314, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390621775", "source_type": "github"}], "1604066548_mirrored_dotnetspec_github": [{"comment_id": 101, "body": "You could possibly be linking to a file that's not found from the zite. For example, if I link to a blah.css file from my zite, but blah.css doesn't exist, then I would get this error on the computer I created the zite (along with all other clients viewing the zite).\r\n\r\nTechnically, if the file that is failing isn't needed, then you don't need to worry about the update failed thing. You can see what file(s) are failing to update when, on your zite, you open the sidebar (by dragging the 0 button in top right corner to the right) and scrolling down until you see something along the lines of \"Files that Need Updated\".", "added": 1527292838, "modified": 1527293376, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1438#issuecomment-392231127", "source_type": "github"}], "1604066559_mirrored_krixano_github": [{"comment_id": 102, "body": "Doing the same as I have done with ZeroTalk with my Important Zites (New) zite, I only see the content.json file when opening the downloaded zip with 7zip, and I get the same error when opening the zip using Windows Explorer. I get the exact same thing when right clicking and clicking \"Save link as ...\"", "added": 1527962382, "modified": 1527962402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1443#issuecomment-394116731", "source_type": "github"}, {"comment_id": 103, "body": "It sadly did not fix the issue I'm talking about (but did fix the weird disconnection issue!). I get the same issue with Chrome.", "added": 1528043893, "modified": 1528043893, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1443#issuecomment-394185809", "source_type": "github"}], "1604066559_mirrored_dotnetspec_github": [{"comment_id": 104, "body": "How about give us the link? Screenshots? Console output? Something so that we can understand what's going on. We need more information.\r\n\r\nI have a feeling the *actual* problem is not being able to download the zite on your other device, as you have said. I don't know that this is necessarily related to the \"Needs to be Updated\" message you see, considering what @HelloZeroNet has said.", "added": 1528151300, "modified": 1528151604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1446#issuecomment-394550983", "source_type": "github"}, {"comment_id": 105, "body": "I was able to download *most of* the zite (just not the index.html file). Perhaps my peer will help your mobile connect. Usually, the more peers the better. That, then, just leaves the question of why ZeroNet sometimes has problems with downloading a zite with so few peers.\r\n\r\nCan you sign and publish one more time?", "added": 1528154684, "modified": 1528154684, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1446#issuecomment-394560111", "source_type": "github"}, {"comment_id": 106, "body": "No problem! Glad it worked for you!", "added": 1528157013, "modified": 1528157013, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1446#issuecomment-394566264", "source_type": "github"}], "1604066559_mirrored_trenta3_github": [{"comment_id": 107, "body": "> Gitcenter did have a plan for it\r\n\r\nGitcenter has actually already started work on it [here](https://github.com/HelloZeroNet/Plugin-BackgroundProcessing).", "added": 1528138390, "modified": 1528138390, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1447#issuecomment-394512378", "source_type": "github"}], "1604066569_mirrored_krixano_github": [{"comment_id": 108, "body": "I'm going to be testing this a little soon. Also, example code would be useful.\r\n\r\nI'm wondering a few things:\r\n* Does the plugin allow modifying the filesystem in *and* not in the zite's directory, or does it delete those codes so you can't try and escape the zite's directory?\r\n* How would you call ZeroFrame commands from it?", "added": 1535694480, "modified": 1535694480, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417597599", "source_type": "github"}], "1604066571_mirrored_trenta3_github": [{"comment_id": 109, "body": "I was recently talking with someone (I believe @imachug) about fts. I would like this feature along with Virtual tables and SQL Procedures.", "added": 1529408423, "modified": 1529408449, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1456#issuecomment-398423611", "source_type": "github"}], "1604066590_mirrored_anoadragon453_github": [{"comment_id": 110, "body": "I would actually propose something more drastic, which I will create an issue on soon.", "added": 1529408551, "modified": 1529408551, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1457#issuecomment-398424401", "source_type": "github"}, {"comment_id": 111, "body": "My website looks at the language field from serverInfo. I'm not sure how that would work with what you want to eventually do.", "added": 1529579389, "modified": 1529579389, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1457#issuecomment-399116878", "source_type": "github"}, {"comment_id": 112, "body": "Well, I was just thinking that the language field from serverInfo is gotten from the server, hence why it's in there. But if you change it to be based on user settings, then shouldn't it be moved elsewhere? Perhaps not, But if so, it would mean zites would have to change to accommodate that.", "added": 1529582938, "modified": 1529582943, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1457#issuecomment-399137790", "source_type": "github"}, {"comment_id": 113, "body": "I made an issue on the more drastic proposal I was talking about earlier: #1460 \r\nThis is a little related, but may not necessarily be involved with it.", "added": 1529583769, "modified": 1529583769, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1457#issuecomment-399142566", "source_type": "github"}], "1604066583_mirrored_vitorio_github": [{"comment_id": 114, "body": "Right, but some people don't want to have to import every current and new zite. They just want to use one address for donating for everything.", "added": 1530462653, "modified": 1530462668, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1467#issuecomment-401627713", "source_type": "github"}], "1604066626_mirrored_rllola_github": [{"comment_id": 115, "body": "I think it would be good to have a webpage where we can manage all of the permissions of all zites easily.", "added": 1532432664, "modified": 1532432690, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1493#issuecomment-407432663", "source_type": "github"}], "1604066628_mirrored_rllola_github": [{"comment_id": 116, "body": "If you prompt the user before doing anything, then I don't see why it wouldn't be safe... Also, not having this makes ZeroNet more unsafe - being able to remove permissions from sites is a good thing. If we don't want it in ZeroFrame then it should definitely be implemented elsewhere (like an additional built-in page to the zeronet client).", "added": 1569346335, "modified": 1569346348, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1494#issuecomment-534735662", "source_type": "github"}, {"comment_id": 117, "body": "@rllola  Uh... the ZeroFrame commands are called... *commands*, hence the `zeroframe.cmd()` function. I really don't understand what's not clear to you. `wrapperPermissionRemove` is **already** a *ZeroFrame* command, you just need to remove it from the ADMIN-only list. You don't need to create duplicate commands when they do the same thing.", "added": 1569859190, "modified": 1569859190, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1494#issuecomment-536703402", "source_type": "github"}, {"comment_id": 118, "body": "Or you can just add the prompt to the existing permissionRemove command...", "added": 1569892595, "modified": 1569892595, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1494#issuecomment-536855174", "source_type": "github"}], "1604066752_mirrored_DaniellMesquita_github": [{"comment_id": 119, "body": "I also have some tutorials on ZeroNet Dev Center.", "added": 1535839403, "modified": 1535839403, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1555#issuecomment-417897661", "source_type": "github"}], "1604066722_mirrored_trenta3_github": [{"comment_id": 120, "body": "@HelloZeroNet \r\nYou already have the possibility of running untrusted code by the client by allowing plugins and by allowing JavaScript (zites can easily contact clearnet servers, for example). As long as the *only* thing a python script used by BackgroundProcessing can do is call the ZeroFrame API and do things deemed safe (addition, store stuff in memory, etc.) then I think it's fine...\r\n\r\nFurthermore, the whole concept of permissions, in my mind, is supposed to prevent zites from doing whatever they wanted unless the user allows it, which is the same thing that happens with plugins (you allow the plugin by installing it). BackgroundProcessing uses a permission.\r\n\r\nAlso, Python is the most language-compatible out of everything else because a lot of programs, native and non-native, use Python as a plugin system.", "added": 1536284072, "modified": 1536285132, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1570#issuecomment-419319821", "source_type": "github"}], "1604066783_mirrored_DaniellMesquita_github": [{"comment_id": 121, "body": "Warning: this code isn't tested, and probably isn't 100% correct, but it should be *similar* to this.\r\n```javascript\r\nvar elements = document.querySelectorAll(\"a[target^='blank']\");\r\nfor (element in elements) {\r\n    element.target = \"_blank\";\r\n}\r\n```", "added": 1536343172, "modified": 1536343172, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1572#issuecomment-419564254", "source_type": "github"}], "1604066730_mirrored_BenMcLean_github": [{"comment_id": 122, "body": "Maybe a lot of programmers (most of them seem to be OOP or newer programmers) don't think so, but just as a sidenote - a *lot* of people think pip and npm are actually really bad for several reasons. Just because *you* think it's good, doesn't mean everyone agrees. Especially with the load of *crap* programmers come up with that programmers \"should\" do, which is then backtracked and thought of as a bad idea much later.\r\n\r\nIf you can make a python program that uses libraries and is very easy to install without pip - then it obviously doesn't \"need\" pip. Stop imposing stupid Coding Practices on other people when they don't provide any actual benefit.\r\n\r\nWith that said, I would agree that the recent move to pip with Python3 is a good one **only** because the way ZeroNet was handled previously was really bad.", "added": 1553031441, "modified": 1553032142, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474638039", "source_type": "github"}, {"comment_id": 123, "body": "> maintainability requires that we know exactly what version of all the dependencies we're building against so we know what changed when something breaks. \r\n\r\nAnd apparently a package management is required for this? And who says embedded libraries are modified directly?\r\n\r\n> Second, modularity.\r\n\r\nIf we are saying package management is good because of modularity, we also need to know why modularity is good.\r\n\r\n> Third, security.\r\n\r\nThis is one of the only good reasons for using a terrible package management system.\r\n\r\n> Fourth, leaving out package management has no benefits. \r\n\r\nActually it does, and they're \"obvious\".\r\n\r\n>Now, if these people's problem was with the specifics of a particular package management system \r\n\r\nThe problem is not package management in general. The problem is terrible package managers. The **other, more important** problem is that the whole system relies on centralization. If the server is down, nobody can install the packages required  for a project. \r\n\r\nRemember LeftPad?", "added": 1553044396, "modified": 1553044396, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474677796", "source_type": "github"}, {"comment_id": 124, "body": "It is controversial that it's taken *way* too far. People \"modularize\" practicaly everything now without even thinking on whether it has any real benefit. There's also the fact that function calls and classes and modules and all of this stuff has a cost. Of course, you'll probably counter that computers are fast enough now. Then I'll counter with Windows 10 on HDDs, Browsers and practically every website out there, and npm.\r\n\r\nI'm also going to add that there are languages that allow modifying libraries without modifying the code of the library directly. Called extensions or something like that. There's also metaprogramming.", "added": 1553044908, "modified": 1553044908, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474679219", "source_type": "github"}, {"comment_id": 125, "body": "@BenMcLean I don't know what programmers you follow, but maybe you should look at opposing views more often considering you seem to think that everything is so obvious and everyone believes the same things. Try Casey Muratori, Jonathan Blow, Abner Coimbre, and the like.", "added": 1553086662, "modified": 1553086687, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474900060", "source_type": "github"}, {"comment_id": 126, "body": "This has **nothing** to do with authority - and the fact you think this means you either are *deliberately misrepresenting* my argument because you have nothing better, or you didn't read everything I wrote. It has everything to do with the fact that you think:\r\n1.) \"obvious given the definition of modularity\"\r\n2.) \"is not a controversial proposition in computer science.\"\r\n3.) \"leaving out package management has no benefits\"\r\n4.) \"It needs to use pip like everybody else\"\r\n\r\nEvery single one of these is an *appeal to authority or majority (bandwagon)*, and every single one of these is false - Why? Because the programmers that **actually care about programming and performance and the Users** know that things are more complex than you make them out to be.\r\n\r\nThe names I have given above are **not authority**. They are an **example** of how wrong you are about things being so \"obvious\" that everyone knows this is like that, etc., etc.", "added": 1553088050, "modified": 1553088432, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474911164", "source_type": "github"}, {"comment_id": 127, "body": "Additionally, I've already evaluated your reasons and gave counters to almost all of them. You know this, and I think it's likely you know my counters are valid considering you didn't respond to them.", "added": 1553088216, "modified": 1553088216, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474912545", "source_type": "github"}, {"comment_id": 128, "body": "> Your name-dropping of Casey Muratori, Jonathan Blow and Abner Coimbre was a textbook appeal to authority.\r\n\r\nNo, it wasn't.\r\n\r\n> They're names. That makes them authority.\r\n\r\nNo, it doesn't. I'll \"drop\" my name: Christian Seibold is another example of how obviously wrong you are. I'm certainly no \"authority\", Right? Therefore, you statement that name dropping makes those names an appeal to authority is false.\r\n\r\nAdditionally, look at what I **said**:\r\n\r\n> **follow in the footsteps** of ....\r\n> They are an example\r\n> Try ... **and the like**", "added": 1553088609, "modified": 1553088641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474915690", "source_type": "github"}, {"comment_id": 129, "body": "> They're names. You're citing them as justification\r\n\r\nI did no such thing. I cite them as **examples** which I have clearly said *multiple times*. If you are going to argue, have the decency to not deliberately forget about or chop off part of someone's argument:\r\n> maybe you should look at opposing views more often considering you seem to think that everything is so obvious and everyone believes the same things\r\n\r\nWhat do I say in this quote? Tell me!", "added": 1553088755, "modified": 1553088766, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474917039", "source_type": "github"}, {"comment_id": 130, "body": "Also, you being quite illogical here. You say name dropping means it's an appeal to authority. Yet if I drop names of friends I know that disagree with you, all of which are not popular or known by many people, would you say that's an appeal to authority? Clearly an appeal to authority has to appeal to **authority**, right?", "added": 1553088875, "modified": 1553088875, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474918089", "source_type": "github"}, {"comment_id": 131, "body": "You don't know what strawman fallacy is, do you? Of course you don't, considering you are literally using it against me.\r\n\r\nExamples are not a form of justification. They are evidence to refute the point that something \"is not a controversial proposition in computer science\". You **seriously** didn't catch this?\r\n\r\nI was clearly giving examples to refute the point that something isn't controversial, as I have explicitly stated previously.\r\n\r\nNotice that I haven't once explicitly said that these people are **right**. Interesting, huh?", "added": 1553088996, "modified": 1553089141, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474919146", "source_type": "github"}, {"comment_id": 132, "body": "Let me summarize everything I've said thus far:\r\n\r\n1.) **It is controversial** that it's taken way too far.\r\n2.) maybe you should look at opposing views more often **considering you seem to think that everything is so obvious and everyone believes the same things.**\r\n3.) know that **things are more complex than you make them out to be.**\r\n4.) They are an example of **how wrong you are about things being so \"obvious\"** that everyone knows this is like that\r\n\r\nMy whole argument is refuting the fact that you think things are so \"obvious\".\r\n\r\n\r\n> Package management doesn't interfere with any of that AFAIK.\r\n\r\nI don't understand how you don't know that what you quoted was in response to saying that you don't **have** to modify code directly to change that code. Which means that there is a way to modify code without package management.", "added": 1553089670, "modified": 1553089670, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474925245", "source_type": "github"}, {"comment_id": 133, "body": ">I know Jonathan Blow for certain does not hold that modularity is universally bad. It's been a foundational concept of programming since at least the 1960s.\r\n\r\nThis is an **actual** strawman fallacy. Let me point you to this!:\r\n> **The problem is not package management in general.** The problem is terrible package managers. The other, more important problem is that the whole system relies on centralization. If the server is down, nobody can install the packages required for a project.\r\n\r\nCome on... Misrepresent my argument one more fucking time. Make yourself look like a fool.\r\n\r\n> Oh, it sure seemed that you were.\r\n\r\nReally? Every single point I have made was about your argument that things \"should\" be done this way because \"ZeroNet is no special snowflake\" and must \"do what everyone else does\" because package management is \"obviously\" good.\r\n\r\nI explicitly state that not everyone believes the same as you. And I give examples of the people who don't agree with you.\r\n\r\nMy whole argument is based on the fact that people don't agree with you, and I explicitly state this in my **very first** post:\r\n> Just because you think it's good, doesn't mean everyone agrees.\r\n\r\nAdditionally, I fully support ZeroNet's move to pip, which I also explicitly stated in my **very first** post on here: \r\n> With that said, I would agree that the recent move to pip with Python3 is a good one only because the way ZeroNet was handled previously was really bad.", "added": 1553090493, "modified": 1553090845, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474932106", "source_type": "github"}, {"comment_id": 134, "body": "And the whole reason why I started this argument in the first place is because of this:\r\n> If you can make a python program that uses libraries and is very easy to install without pip - then it obviously doesn't \"need\" pip. Stop imposing stupid Coding Practices on other people when they don't provide any actual benefit.\r\n\r\nLet me further clarify - Don't act like a fucking asshole to someone just because their project doesn't use the tools **you** want them to use (and yes, I'm talking about your \"snowflake\" and \"what the crap is this\" comments).", "added": 1553091085, "modified": 1553091085, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474936907", "source_type": "github"}, {"comment_id": 135, "body": "Why should a program that doesn't need security be forced to use pip when including the code directly can make it easier to install and ensure that the correct proper versions of the library are used and that they stay with the repo in case the library is no longer available.\r\n\r\nYou can version things without package management. You can modify a library without package management. You don't need package management for something to be modular.\r\n\r\nLet me clarify, again... My problem is not with package management. It is with both bad package managers, and that you think *everything* needs to use package management, when not everything does.", "added": 1553091583, "modified": 1553091798, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474940903", "source_type": "github"}, {"comment_id": 136, "body": "And other people would say that a \"clear history\" provides almost no benefit and trying to do something like that is actually a downside because you are putting more importance on keeping things pretty and clean than functionality. Putting libraries in repos is a good way to ensure that if there's no other way to get the libraries, as long as your own source code is up somewhere, people have everything they need. They don't have to search (and potentially fail) to find the required libraries.\r\n\r\nAnd this also goes along with trying to keep the source code of a project running in the future when the necessary libraries or servers might not be available.\r\n\r\n> but not into getting rid of package management altogether because that's stupid.\r\n\r\nTell me where I've explicitly stated we should get rid of package management? Or where I said that package management provides *no* benefits?", "added": 1553092115, "modified": 1553092714, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474945039", "source_type": "github"}, {"comment_id": 137, "body": "So apparently a server can't go down unless the whole internet goes down? LOL.\r\n\r\nOr maybe you're saying that every single library in the whole world will stay on the internet forever because it's the Internet and files and websites are *never* lost on the internet, right?\r\n\r\nOr how you conveniently forget that governments are starting to block whole areas of internet access, or that a portion of the internet can go down very easily because of one or two wires connecting the continents. Or how companies can delete files from their servers. Or any number of things.\r\n\r\nAnd let's not forget leftpad and ... was it the cloudflare outage that took down a bunch of websites? **Edit:** No, it was actually a DNS server (Dyn) that was DDoSed.", "added": 1553092798, "modified": 1553093299, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474950734", "source_type": "github"}, {"comment_id": 138, "body": "So... First you act like an asshole to @HelloZeroNet and the ZeroNet project.. then you make ludicrous claims like every single python project that uses libraries **must** use pip. Then you repeatedly misrepresent my argument multiple times with the exact same misrepresentation that I have already said multiple times (and given evidence) that I did not say, and in fact say quite the opposite. Then you conveniently change your argument by saying you didn't say \"everybody else\" to mean everybody else, but rather everyone else in the Python community (even though that doesn't change my argument).\r\n\r\nAnd your illogical statements that giving examples of names of people is *always* an appeal to authority - when that's actually contrary to what the definition of appeal to authority actually is - that the people must have authority and that they are given as justification *that what they believe is right* (which is *not* the same as giving them as justification that not everyone believes in something - what you are trying to justify or give example to is actually important because it tells you what the person is actually... trying to prove. Are they proving that these people are right? Or are they proving that not everyone believe in a specific thing that these people do/don't believe in).", "added": 1553094674, "modified": 1553094752, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474965326", "source_type": "github"}, {"comment_id": 139, "body": "@BenMcLean Just wondering something. Be honest - How much of what I wrote did you just skim (including my quotes)?", "added": 1553095378, "modified": 1553095600, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1584#issuecomment-474970271", "source_type": "github"}], "1604066772_mirrored_blurHY_github": [{"comment_id": 140, "body": "@DaniellMesquita That's not what he said. He said it'll not be introduced because **it's hard** with an open system, not because it's open. The stress is put on it being hard.\r\n\r\n@slrslr As far as I know, the blocking system isn't based on IP's, it's based on ID's. So having thousands of IP addresses provides absolutely no help. What does help, is being able to create thousands of IDs.\r\n\r\nI think the POW id creation system would help this, as it takes time to create an ID with that system.", "added": 1537735256, "modified": 1537735428, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1608#issuecomment-423856655", "source_type": "github"}], "1604066767_mirrored_BenMcLean_github": [{"comment_id": 141, "body": "It doesn't really matter what text editor you use...", "added": 1537897429, "modified": 1537897429, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1611#issuecomment-424494771", "source_type": "github"}, {"comment_id": 142, "body": "@DaniellMesquita You're wrong. Most text editors are default to UTF-8, even Notepad on Windows can default to UTF-8 (you actually have to change a setting though). And all text editors will detect which encoding the file is and continue to use that encoding. UTF-8 is essentially a standard now. However, some text editors may not let you *change* the format (but Notepad on Windows actually *does*). Sublime Text support changing the format also, and so does VSCode.\r\n\r\n> But ZeroTalk always says \"4 file update failed\" in the sidebar. What do I do about that?\r\n\r\nNothing, you're fine.", "added": 1537915586, "modified": 1537915956, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1611#issuecomment-424557044", "source_type": "github"}], "1604066864_mirrored_DaniellMesquita_github": [{"comment_id": 143, "body": "> @shortcutme assumes everyone understands the structure of zeronet and there is no newbie.\r\n\r\nOr he just hasn't thought about that feature/need before. Jesus, people.", "added": 1551749694, "modified": 1551749694, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1621#issuecomment-469534003", "source_type": "github"}], "1604066873_mirrored_DaniellMesquita_github": [{"comment_id": 144, "body": "I have an idea. 1Password has this thing called the Emergency Kit. It's a pdf where it gives your master password as well as the secret key as well as a QR code to quickly scan it in when connecting to 1password from a different device. ZeroNet could use something similar.\r\n\r\nAdditionally, once connected with the master key and/or main ZeroId account, we could have a zite that can sync up the rest by decrypting a user's id's, sites, etc. that's stored in an encrypted form on the zite using either that master key or the zeroid private key.", "added": 1537457209, "modified": 1537457303, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1626#issuecomment-423285840", "source_type": "github"}], "1604066875_mirrored_DaniellMesquita_github": [{"comment_id": 145, "body": "ZeroNet isn't that slow if you have enough peers and good trackers.", "added": 1537457484, "modified": 1537457484, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1627#issuecomment-423287260", "source_type": "github"}], "1604066831_mirrored_tangdou1_github": [{"comment_id": 146, "body": "I get this error when clicking \"Re-check open port\". Not sure if it's related to this, but it only happened after I downloaded this pr:\r\n\r\n> Internal error: TypeError: argument of type 'NoneType' is not iterable\r\nUiWebsocket.py line 81 > UiWebsocket.py line 267 > UiWebsocket.py line 987 > AnnounceSharePlugin.py line 173 > FileServer.py line 130\r\n", "added": 1538541152, "modified": 1538541152, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-426539249", "source_type": "github"}, {"comment_id": 147, "body": "Here's my IPv6 on CJDNS: fc36:b408:aecd:ecca:7c32:d6e1:f9dd:78b2", "added": 1538546191, "modified": 1538546191, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-426561145", "source_type": "github"}, {"comment_id": 148, "body": "> @tangdou1\r\n> http://ipv6.tracker.harry.lu:80/announce isn't working.\r\n> \r\n> @krixano\r\n> Your IPv6 tracker is also not working here.\r\n> \r\n> Please test if my tracker is working: `zero://fc81:4668:5a19:0c29:9dfe:ed94:d745:85c9`\r\n> \r\n> @styromaniac\r\n> https://github.com/cjdelisle/cjdns/tree/master/contrib/android\r\n\r\n...Because I was still on the old version of this... that didn't work...", "added": 1538575346, "modified": 1538575367, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-426716169", "source_type": "github"}, {"comment_id": 149, "body": "@April93 @styromaniac Because that tracker doesn't use cjdns, right? Cjdns cannot connect to non-cjdns ipv6 addresses. And non-cjdns clients cannot connect to cjdns ipv6 addresses.\r\n\r\nAlso, can you test my tracker if you have the time?", "added": 1538576863, "modified": 1538576880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-426725000", "source_type": "github"}, {"comment_id": 150, "body": "@styromaniac was wondering if you needed to add brackets with the ip inside, because that's how a lot of ipv6 addresses are typed in. Also, @tangdou1, doing this (adding the brackets) makes the tracker not show up in the trackers list anymore.", "added": 1538577432, "modified": 1538577455, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-426728236", "source_type": "github"}, {"comment_id": 151, "body": "> I can't connect to your tracker, even we both using CJDNS.\r\nAlso, now my tracker is showing error.\r\n\r\nI'm currently at school now, so my tracker won't work right now.\r\n\r\n@tangdou1 You should be able to mark this comment as off topic to hide it I think.", "added": 1538578583, "modified": 1538578593, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-426734633", "source_type": "github"}], "1604066913_mirrored_DaniellMesquita_github": [{"comment_id": 152, "body": "I did make a PR on ZeroTalk. One of the things that's really needed before very wide acceptance of KxoId is that I need a better computer because the one that I use right now freezes after a few days.", "added": 1537724334, "modified": 1537724334, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1646#issuecomment-423846142", "source_type": "github"}, {"comment_id": 153, "body": "I'll get to that, I think I just need to figure a few things out for that first. Like, do I trust other client's with my zite's private key (which is different from the private key used to give out signatures for users) in order to add to the index, or should I have some system where there may be a delay for a user to be added to the index (note that you don't need to be on the index to be able to use your new id, but it'll let people search for you), or I could have a thing where each trusted node/peer can add to the index using their own user, etc.\r\nAnd then there's slight problems where if two peers handle the registration for someone, their name may be added to the index twice. This isn't *too* big of a problem, but I would like to sort this out too.\r\n\r\nAs I'm currently a little busy with school work, I've been thinking about how to fix these issues. When I find the time, then I'll work on this.", "added": 1537727073, "modified": 1537727219, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1646#issuecomment-423849049", "source_type": "github"}], "1604066836_mirrored_blurHY_github": [{"comment_id": 154, "body": "The Windows version of ZeroNet already adds a Tray Icon to provide quick options to, for example, shutdown ZeroNet, etc. Are you suggesting another tray icon be put to provide notifications.\r\n\r\nI'd rather ZeroNet support the native OS's notification system instead of a tray icon approach.", "added": 1537735923, "modified": 1537735923, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1651#issuecomment-423857207", "source_type": "github"}], "1604066924_mirrored_DaniellMesquita_github": [{"comment_id": 155, "body": "@imachug While I do agree with PRs as the *standard* for GitHub, I wanted to mention that there are other ways of doing it, like for example branches which can be directly merged, the GitFlow method, etc. These are probably better for people who actually see each other and can more easily communicate.", "added": 1537723400, "modified": 1537723413, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1652#issuecomment-423845169", "source_type": "github"}], "1604066855_mirrored_blurHY_github": [{"comment_id": 156, "body": "Btw, the 1024 max sockets is a libev restriction on Windows.", "added": 1538536378, "modified": 1538536390, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1663#issuecomment-426522942", "source_type": "github"}, {"comment_id": 157, "body": "Here on [this page of Gevent docs](http://www.gevent.org/install.html#supported-platforms):\r\n\r\n> **Note:** On Windows using the libev backend, gevent is limited to a maximum of 1024 open sockets due to limitations in libev. This limitation should not exist with the default libuv backend. \r\n\r\nThat leads me to believe it's Windows-only.", "added": 1538540253, "modified": 1538540253, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1663#issuecomment-426535750", "source_type": "github"}], "1604066984_mirrored_DaniellMesquita_github": [{"comment_id": 158, "body": "That's why he wants separate PR's, because the Geolite part isn't done, which means he also can't merge the new 0 icon because of that.\r\n\r\nAnd the clarity is for the Commits and reading the code, not for the PR descriptions", "added": 1539789276, "modified": 1539789334, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1688#issuecomment-430733107", "source_type": "github"}], "1604066990_mirrored_DaniellMesquita_github": [{"comment_id": 159, "body": "Looks like he just increased the size by making it 256 x 256, but it's smoother than the default, so also likely increased the quality.", "added": 1538974234, "modified": 1538974234, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1691#issuecomment-427747195", "source_type": "github"}], "1604066879_mirrored_geekless_github": [{"comment_id": 160, "body": "> KxoID uses a different certificate registry format. We probably should ask Krixano to support the ZeroID-like one.\r\n\r\nI'm wondering what I'd need to change for KxoId. I already add usernames, auth addresses, and signed certificates to the db.", "added": 1539095075, "modified": 1539095075, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1696#issuecomment-428278667", "source_type": "github"}, {"comment_id": 161, "body": "Or these zites can create a config file (for example `dns.json`) that tells the plugin how to interpret the information.\r\n\r\nMy format is much less complicated than zeroid's, but zeroid's uses optional files. ZeroId's key is the username, and the value is the first part of the auth as well as the file in which the full certificate can be found for archived usernames. Recent ones are in one file with key as username and value as certificate.", "added": 1539096081, "modified": 1539096646, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1696#issuecomment-428284019", "source_type": "github"}, {"comment_id": 162, "body": "> It is because when registering a new id, the front-end doesn't need the full certificate database, it only checks if that id is already registered using the shortened list in users*.json.\r\n\r\nWell, my format would be much easier for new providers to support, and it's the simplest to think about when first writing a provider.\r\n\r\nBut, I suggest this:\r\n> Or these zites can create a config file (for example dns.json) that tells the plugin how to interpret the information.\r\n\r\nThat way providers can use whatever format they want and the plugin will just look at that dns.json file to see how to interpret the db.", "added": 1539097137, "modified": 1539097137, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1696#issuecomment-428289769", "source_type": "github"}], "1604066999_mirrored_DaniellMesquita_github": [{"comment_id": 163, "body": "One that I could think of is a zite that continually opens the folder every second, for example.", "added": 1539106304, "modified": 1539106304, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1697#issuecomment-428340523", "source_type": "github"}], "1604067002_mirrored_DaniellMesquita_github": [{"comment_id": 164, "body": "Yes, because CORS is currently read-only.", "added": 1539106338, "modified": 1539106338, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1698#issuecomment-428340720", "source_type": "github"}], "1604067023_mirrored_DaniellMesquita_github": [{"comment_id": 165, "body": "Yall are really talking about iframes, right?\r\n", "added": 1539106216, "modified": 1539106216, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1707#issuecomment-428340056", "source_type": "github"}], "1604066925_mirrored_krixano_github": [{"comment_id": 166, "body": "I just misspelled REFERENCES when I did the \"json_id\" field. It'd be really helpful if error messages were better, though.", "added": 1540007030, "modified": 1540007030, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1729#issuecomment-431554754", "source_type": "github"}], "1604067075_mirrored_DaniellMesquita_github": [{"comment_id": 167, "body": "There's the `wrapperOpenWindow` command which opens in new tab:\r\nhttps://zeronet.io/docs/site_development/zeroframe_api_reference/#wrapperopenwindow\r\nI use this in some of my zites, and it's always worked.\r\n\r\nWhat I do for my zites, since they are dynamic and use a js router, is route them with my router dynamically with an onclick on anchor link (making sure to put `event.preventDefault()` at the end), but also provide the herf, so that they can still middle click to open in a new tab.", "added": 1540146569, "modified": 1540146853, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1736#issuecomment-431705677", "source_type": "github"}], "1604066956_mirrored_anoadragon453_github": [{"comment_id": 168, "body": "In the `src/Ui/UiRequest.py` file, in the sendHeaders function/method, we can change the cache settings being sent to the browser (via the Cache-Control header) there.\r\n\r\n1. I don't see how the cache will help much regarding performance. When browsers cache, they store the files on the hard drive so they don't have to get it from the internet every time. However, zites are already downloaded to the hard drive. The only thing I can think of is if either the ZeroNet client or browsers also utilize RAM caching for a session or something.\r\n2. However, this will affect the performance of proxies. We could detect if the request is coming locally, and send different Cache-Control headers to enable caching for proxy users.\r\n3. Images and videos are less likely to be changed. Javascript files are the most likely to be changed. I think CSS is in the middle.\r\n4. So I propose, disable caching for js files and css files, but keep it for images and videos. And enable caching for js and css files if the request is coming from a proxy user.", "added": 1540534958, "modified": 1540534983, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1740#issuecomment-433345359", "source_type": "github"}, {"comment_id": 169, "body": "I was just about to edit my post suggesting that as an idea.", "added": 1540535198, "modified": 1540535198, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1740#issuecomment-433346483", "source_type": "github"}, {"comment_id": 170, "body": "The main problem I have with the cache situation is that zites sometimes don't update unless the user clears the cache. And this becomes more important when a dev wants to get out a very important bug fix as quick as possible. We could do the whole appending version number to file name, but I think there's a better way. I think what @styromaniac proposes would be good, if possible.", "added": 1540535750, "modified": 1540535835, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1740#issuecomment-433349167", "source_type": "github"}, {"comment_id": 171, "body": "I think, when a zite is updated, the client keeps track of that, and when a file is requested, it can check if it's in this array and send a no cache header", "added": 1540536288, "modified": 1540536288, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1740#issuecomment-433351797", "source_type": "github"}, {"comment_id": 172, "body": "Right.... blech", "added": 1540536387, "modified": 1540536455, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1740#issuecomment-433352326", "source_type": "github"}, {"comment_id": 173, "body": "> The resource cache is 10 minutes, so I dont think that it's really affects any, non developer user.\r\n\r\nI kinda disagree with this. If I have to get a *very* important fix out in under 10 minutes, I don't want my zite to be unusable for 10 minutes. Stuff like this has happened before.", "added": 1540536727, "modified": 1540536743, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1740#issuecomment-433353981", "source_type": "github"}], "1604067006_mirrored_imachug_github": [{"comment_id": 174, "body": "@imachug ", "added": 1544899271, "modified": 1544899271, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1766#issuecomment-447599761", "source_type": "github"}], "1604067049_mirrored_HelloZeroNet_github": [{"comment_id": 175, "body": "@DaniellMesquita That's.... not what that says.\r\n\r\nEdit: It says Python 3 is now usable with Kivy (including for android *because* of python-for-android supporting python 3 - hence the word \"also\"), but the **build tools** for iOS require Python 2.\r\n\r\nTL;DR: You don't need python 2 to run on iOS with python 3, you just need it for the *build tools*.", "added": 1541902692, "modified": 1542085867, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-437644685", "source_type": "github"}, {"comment_id": 176, "body": "Ok, so PeerMessage now supports Python 3 Version of ZeroNet - in the py3 branch.", "added": 1554625545, "modified": 1554635644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-480581538", "source_type": "github"}, {"comment_id": 177, "body": "@HelloZeroNet I'm getting this error when I startup ZeroNet. I have the Bootstrap plugin enabled. I'm not sure if you've finished making this plugin work with py3 (I didn't see it in TODO list, I don't think):\r\n\r\n> [23:00:25] PluginManager Plugin Bootstrapper load error: OperationalError: cannot VACUUM from within a transaction in PluginManager.py line 56 > Bootstrapper/__init__.py line 1 > Bootstrapper/BootstrapperPlugin.py line 11 > Bootstrapper/BootstrapperDb.py line 17 > Bootstrapper/BootstrapperDb.py line 36 > Bootstrapper/BootstrapperDb.py line 45 > Db.py line 106 > DbCursor.py line 101", "added": 1555190607, "modified": 1555190607, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-482905430", "source_type": "github"}], "1604066973_mirrored_skarmiglione_github": [{"comment_id": 178, "body": "I would like this a lot. I was able to get some of the libraries/packages installed (msgpack and I think a few others - there's a msgpack cpp package in HaikuDepot, and you can install it from pip for the python version), **except for gevent**, because it uses libev (or libuv) which also hasn't been ported to haiku yet. I believe HaikuPorts is working on porting one of these (I think libuv).\r\n\r\nSo we need to wait until gevent is ported over before doing anything. However, more people could help the process along.", "added": 1541790935, "modified": 1541791096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1775#issuecomment-437511861", "source_type": "github"}], "1604067021_mirrored_Thunder33345_github": [{"comment_id": 179, "body": "The **user** should have the choice of not using a username. This isn't currently possible, as it's the site/site owner's choice.\r\n\r\nHowever, this will break many zites unless each zite checks for a null cert_user_id and replaces it with auth_address in that case.\r\n\r\nAdditionally, there should be a way of more quickly creating new id's/certificates as well as a way for site owners to determine whether anonymous certs are accepted.\r\n\r\nThe problem with self-signing certificate authorities (kaffieid and any future ones) is that the site must accept *each one*. Instead, the site should be able to say whether anonymous certs are accepted or not, then *all* certs that are self-signed should be accepted.\r\n\r\nI also think sites should be able to restrict what these \"anonymous\" self-signed certs can do, which means we need a way of introducing this concept into the permissions stuff in content.json files.", "added": 1544542881, "modified": 1544544494, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1812#issuecomment-446313736", "source_type": "github"}, {"comment_id": 180, "body": "The size rules was *exactly* what I was talking about. I was meaning that we need a way to specify auth addresses that were self signed in the permissions of the content.json, whether that be by just using \"*\" for any address, etc. so that a site owner can restrict the size that anonymous ids are allowed to use.\r\n\r\n> I think this is more of a \"minor\" problem rather than a critical one\r\n\r\nI consider it a big problem because without this there's no reason why you don't just use kaffieid and continually make new ids. This is one of the distinguishers between kaffieid and an anonymous system. Sites shouldn't have to worry about what id provider someone is using to accept anonymous ids. Additionally, we want to be future proof. If the site owner isn't working on the zite anymore, we want to make sure other \"anonymous\" id providers are accepted. However, I imagine that we shouldn't need anonymous id providers, because a person should be able to make *just* an id without a username.\r\n\r\nI also think anonymous ids should be able to be *switched out very quickly* (with the click of a button), otherwise it's not very different from using an id provider.", "added": 1544560653, "modified": 1544561182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1812#issuecomment-446404524", "source_type": "github"}], "1604067024_mirrored_krzysztof113_github": [{"comment_id": 181, "body": "So now you're an outright liar? Huh...\r\n\r\n> Yeah, something like, by your friend Krixano (that is in favor of slavery)\r\n\r\nYou cannot quote *one* thing that shows I'm in favor of slavery.\r\n\r\n> WHAT?! He abandoned its sites because of me?!\r\n\r\nYep... it *was* because of you. Whether or not it wasn't isn't determined by you, it's determined by me. I say it was because of you, and therefore it was. Whether you choose to believe that or not is a separate issue.\r\n\r\n> Krixano and all other developers abandoned ZeroNet not because of me, but because of the same reason you @imachug forfeited about improving/developing GitCenter/Kiwipedia/Your plugins/Zerocoin/Qomments.\r\n> Cowards will say that is a conspiracy theory; typical.\r\n\r\nYou have no basis whatsoever that people who say things are conspiracy theories are cowards. Perhaps... they *actually* believe it's a conspiracy theory. Are you saying a coward is apparently someone who calls someone out?\r\nYou talk conspiracy theories, are you a coward?\r\n\r\n> The thing is not implementing what I want, but what is a need\r\n\r\nOh, you mean like how it's needed to create a system that puts control of new users in the hands of existing users? This is called a Dictatorship and is 100% against the goals of ZeroNet (afaik).\r\n\r\n>  ..but the existential crisis is to don't care about the planet, earn money above of people's feelings, and being retrograde. That explains why you'd changed your behavior on ZeroNet.\r\n\r\nSo, he earned money from any of his zites? Really? No, he didn't. Secondly, is he only retrograde (I'm assuming you mean moving backward in a negative way) because *you* say he is?\r\n\r\n\r\nBtw, your arguments aren't arguments. They're either full of lies, intentional misrepresentations, or ad hominem.", "added": 1553453282, "modified": 1553454941, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1816#issuecomment-476003667", "source_type": "github"}, {"comment_id": 182, "body": "Btw, I already have a thing that can do this *without* a new plugin, only using PeerMessage (and perhaps BackgroundProcessing).\r\n\r\n> Btw, PeerMessage is a base of it, but a plugin for distributed searches is needed for ZeroNet\r\n\r\n\r\nSecondly, how about less talk and more do? You can't expect everyone to be able to do what *you* want them to do, period. You don't like something and nobody will do it, then YOU do it - plain and simple. Unless, of course, you're not skilled enough to...", "added": 1553454783, "modified": 1553454848, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1816#issuecomment-476005911", "source_type": "github"}], "1604067206_mirrored_anoadragon453_github": [{"comment_id": 183, "body": "I'm getting another CORS issue in chrome and tor browser... not sure if this is related, but it shows that origin in 'null' in the error message:\r\n\r\n![image](https://user-images.githubusercontent.com/4098042/66683118-4d43e980-ec3c-11e9-9797-18b11e3eb154.png)\r\n\r\nAnd here's the headers:\r\n![image](https://user-images.githubusercontent.com/4098042/66683565-6731fc00-ec3d-11e9-801f-52aa7db3abce.png)\r\n\r\n\r\nHere's the zite: http://127.0.0.1:43110/12xozBV7dYskrNQ2G5srnzsTgStaX6Coph/\r\n(note, it uses PeerMessage for multiplayer - but single-player doesn't need that plugin)\r\n\r\nEdit: Ok, nvm. I needed to get the ajax key from \"wrapperGetAjaxKey\" ZeroFrame command, then add \"?ajax_key=\" to the end of the URL when I do \"new Image()\" in javascript.", "added": 1570815138, "modified": 1570819049, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1931#issuecomment-541213877", "source_type": "github"}, {"comment_id": 184, "body": "I just tested a zite in *Firefix* private mode... the bug is now there again even though it *was* fixed previously.", "added": 1572261130, "modified": 1572261478, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1931#issuecomment-546964486", "source_type": "github"}], "1604067247_mirrored_tangdou1_github": [{"comment_id": 185, "body": "Why was this closed? It looks like it's a bug with a **more up to date** version of python. Do we know that it's **just** a python problem, or a problem with ZeroNet not being updated with any changes that may have been introduced into newer python versions.", "added": 1553802774, "modified": 1553802840, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1940#issuecomment-477799997", "source_type": "github"}, {"comment_id": 186, "body": "I'm on python 3.7.2. Here's what I get for these:\r\n\r\n1.) `print(__import__('mimetypes').guess_type('MaterialIcons-Regular.woff'))`\r\n`(None, None)`\r\n\r\n2.) `print(__import__('mimetypes').guess_type('test.woff2'))`\r\n`(None, None)`\r\n\r\nAnyways, I guess you guys are getting a problem with `woff` and not `woff2`. I'm getting a problem with both, but on an older version of python.", "added": 1553989636, "modified": 1553989677, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1940#issuecomment-478306936", "source_type": "github"}, {"comment_id": 187, "body": "Wait... we're not supposed to be getting `(None, None)` right? Aren't we supposed to be getting `('application/font-woff', None)`?\r\n\r\nCan you stop freaking closing issues until we know *for sure* the problem is solved!\r\n\r\nAdditionally, @HelloZeroNet said there might be a problem with `close` vs. `keep-alive`.\r\n\r\nBtw, I think @HelloZeroNet did a fix for content-type on python3 version of ZeroNet on commit: https://github.com/HelloZeroNet/ZeroNet/commit/52e28eefcef28ffeda3b0b511fb58c470dfafbb5\r\n\r\nAnd finally, even if it is a python bug, **it still needs to be fixed/worked around**.", "added": 1554027711, "modified": 1554028104, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1940#issuecomment-478341416", "source_type": "github"}, {"comment_id": 188, "body": "> So it depends on the operating system configuration if its application/font-woff or None. In case of None we return \"application/octet-stream\" as content-type which works for browsers I tested.\r\n> \r\n> To make it more predictable we could write our own content-type resolver that does not depends on operating system configuration files.\r\n\r\n@HelloZeroNet If you are still planning on fixing this, this should be reopened.", "added": 1570814667, "modified": 1570814667, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1940#issuecomment-541211502", "source_type": "github"}, {"comment_id": 189, "body": "#2248 ", "added": 1572094195, "modified": 1572094195, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1940#issuecomment-546614464", "source_type": "github"}], "1604067282_mirrored_imachug_github": [{"comment_id": 190, "body": "This is very useful for an Id Provider - don't need to use bitcoinjs anymore. I'm already using it for KxoNetwork/KxoId, but can't publish until this is merged.", "added": 1555222429, "modified": 1555222742, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1984#issuecomment-482936736", "source_type": "github"}], "1604067261_mirrored_rllola_github": [{"comment_id": 191, "body": "I disagree. It's better to be explicit. For the people who already know it should be the rpc port - clearly they won't have a problem with it. For people who don't - this lets them easily find what they need, it's clearer.\r\n\r\nFrankly, I don't see why you wouldn't be more explicit as it doesn't negatively effect anything and is actually better for newcomers.", "added": 1556052931, "modified": 1556053037, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1985#issuecomment-486015949", "source_type": "github"}], "1604067239_mirrored_caryoscelus_github": [{"comment_id": 192, "body": "Problem: How do you know that the person who is saying the key is compromised was the actual owner of the key.", "added": 1555395907, "modified": 1555395907, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1988#issuecomment-483582543", "source_type": "github"}, {"comment_id": 193, "body": "Duh... sorry. I was thinking if the key was *lost* rather than compromised.", "added": 1555396782, "modified": 1555396782, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1988#issuecomment-483587744", "source_type": "github"}, {"comment_id": 194, "body": "For ids, we can also have a public blocklist where people can request their ids be added via ZeroMail or other means. Of course, you'd want to make sure the key actually belongs to them - which can be done with simple signature/encryption (*one* idea is to simply require the ZeroMail be sent from the id).", "added": 1556150797, "modified": 1556150797, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1988#issuecomment-486503122", "source_type": "github"}], "1604067254_mirrored_radfish_github": [{"comment_id": 195, "body": "You should switch to using f\"\" (format string literals) anyways because it's faster than both .format and % operator. (Although, I don't know about binary support of these)\r\n\r\nAfaik, % is the old style and was going to be removed, but people complained (of course), so they didn't.", "added": 1555568198, "modified": 1555568434, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1989#issuecomment-484421471", "source_type": "github"}], "1604067295_mirrored_slrslr_github": [{"comment_id": 196, "body": "I think we should **not** let zites *automatically* download other zites - especially since every zite you download is one you seed (you have to keep in mind illegal content is more likely on ZeroNet and even having this illegal content on your computer may get you in trouble from your ISP, country, or service provider in the case of servers - so we don't want zites to automatically download illegal content without us being aware). It should show a confirmation thing at the very least (which zites can already do I believe by using a ZeroFrame command, not sure though).", "added": 1555650653, "modified": 1555650744, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1992#issuecomment-484802325", "source_type": "github"}], "1604067319_mirrored_slrslr_github": [{"comment_id": 197, "body": "![image](https://user-images.githubusercontent.com/4098042/57040096-147efd80-6c24-11e9-9787-e1da5285d5df.png)\r\n\r\n@HelloZeroNet ", "added": 1556730993, "modified": 1556731024, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2007#issuecomment-488403053", "source_type": "github"}], "1604067497_mirrored_mindey_github": [{"comment_id": 198, "body": "I have an interesting idea for domain names... I'm going to make a separate issue for it.", "added": 1568971823, "modified": 1568971823, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2189#issuecomment-533533214", "source_type": "github"}], "1604067585_mirrored_HelloZeroNet_github": [{"comment_id": 199, "body": "@HelloZeroNet I want to mention something here that's somewhat related to this and deduplication - currently, if we have two separate zites that use the same merged zites type, both of these zites will have a database that contain the *exact* same information. I believe we should be able to fix this by having *one* database for a merged zite *type* handled by the core, and then these two zites would be able to query from this one database by using the standard dbQuery.\r\n\r\nBut there's a major problem with this, both of these zites could have different dbschema's.\r\n\r\nSo... just something to think about. This isn't a full proposal or anything, which is why it's not in a separate issue.", "added": 1569074173, "modified": 1569074173, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-533813309", "source_type": "github"}, {"comment_id": 200, "body": "> De-duplicating database is not possible, because the dbschema is defined by the merger site not by the merged one.\r\n\r\nYeah, I know about how merger sites work, hence... \"But there's a major problem with this, both of these zites could have different dbschema's.\" (I've also created many sites that are merger sites, but it seems you've forgotten about that... or you just don't pay attention to ZeroNet devs).\r\nI don't think it's as Impossible as you think, but I do think it's a bit hard to do.\r\n\r\n> You can share database between sites by using Cors permission and Page.cmd(\"as\", \"dbQuery\", [\"Anything\"])\r\n\r\nRight... but this doesn't have write permission, so you have to end up resorting to merged zites for that.", "added": 1569163594, "modified": 1569165243, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-533902283", "source_type": "github"}], "1604067531_mirrored_krixano_github": [{"comment_id": 201, "body": "Right, those are the two main problems. The first - where a list you have enabled has a conflicting domain with another list you have enabled - I think can be solved by going with a priority system or something - make one list a priority and always use mappings from that *first*. The other problem that you describe I'm not too sure on.\r\n\r\nHowever, I don't think that this system is an end-all-be-all... meaning that I think it helps out with some things, but shouldn't be the *only available option*.", "added": 1568993794, "modified": 1568993891, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-533665470", "source_type": "github"}, {"comment_id": 202, "body": "> Also please restrict this feature to unique, not registered domain zones.\r\n\r\nHm.... this just gave me another idea for another unrelated proposal for ZeroNet, so thanks! I'll write up this proposal soon.\r\n\r\n**Update:** I've now written up this proposal as issue #2205 ", "added": 1569019610, "modified": 1569096031, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-533757792", "source_type": "github"}, {"comment_id": 203, "body": "@krzysztof113 That's less simple, not more. It also relies on traditional DNS servers where you have to pay to register domains.\r\n\r\nMultiple solutions are better than one, *and* this (what *I* proposed) is an extremely simple (*too* simple, actually) solution.\r\n\r\nFinally, eventually we will want to have some form of decentralized DNS system, and currently we have *none* - ZeroNet currently relies on ZeroName, which is decentralized in information transportation, but *not* decentralized in ownership.", "added": 1571151653, "modified": 1571151717, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-542333864", "source_type": "github"}], "1604067534_mirrored_adrelanos_github": [{"comment_id": 204, "body": "I'm guessing he's talking about them being \"weak\" against the so-far unproven Quantum Computers that nobody has yet that we know of. Which is why he mentioned QRL - Quantum-Resistant Ledger? (just heard of this just now, lol). Not sure how we can prove things to be \"Quantum-Resistant\" if we don't even have quantum computers to, ya know... test on. Of course I barely understand the theory behind quantum computers let alone \"quantum-resistance\", so yeah...", "added": 1570385538, "modified": 1570385783, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2209#issuecomment-538788539", "source_type": "github"}], "1604067555_mirrored_filips123_github": [{"comment_id": 205, "body": "Exactly! Multiple centralized solutions provides more decentralization than one centralized solution (and I would even say multiple solutions is better than one *period*). Of course, the best would be multiple decentralized solutions, but we have more work to get to that point.", "added": 1570205615, "modified": 1570206035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538526212", "source_type": "github"}, {"comment_id": 206, "body": "You can require that dependencies be put into the plugins manifest or content.json or whatever the file is - the plugin settings file. Then when a person goes to install the plugin, the dependencies are listed and the user is prompted to install them from within the client, and the client installs them.", "added": 1572387063, "modified": 1572387063, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-547696135", "source_type": "github"}], "1604067718_mirrored_DaniellMesquita_github": [{"comment_id": 207, "body": "I believe he's talking about when a zite contains a video or picture and when you go to the page with this \"media\" it automatically downloads it so that it can display/play the media.\r\n\r\nOf course, the language he uses is a bit confusing, particularly \"sanitize\", but whatever...", "added": 1570205415, "modified": 1570205487, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2216#issuecomment-538525163", "source_type": "github"}, {"comment_id": 208, "body": "Yeah, the blurring effect means at least a portion of the file must have already been downloaded - or perhaps the ZeroNet client could store the blurred image data in the database with the rest of the metadata for optional files. Anyways.. this particular part basically *has* to be handled by the site - the **site** puts a placeholder for unloaded images/media. I'd rather not have ZeroNet touch my zite's images/videos and force me into a particular method (for example, my site might want to do something else for unloaded images instead of displaying a placeholder, then there's the dimensions of the image within the site, and a bunch of other things).\r\n\r\nBasically, it seems this is what you want:\r\n1.) All images and videos and other media become optional files by default.\r\n2.) When a zite goes to display an image, don't automatically download the media, but prompt the user in some way.\r\n\r\nOne problem, this could get annoying if you're being prompted for a hundred images on a page, etc.", "added": 1570306605, "modified": 1570307033, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2216#issuecomment-538697068", "source_type": "github"}], "1604067538_mirrored_d14na_github": [{"comment_id": 209, "body": "> yes, this is my point. this works fine, however, it doesn't work cross-zite (for the reason you stated in your first response).\r\n\r\nOk, wrong... for the reason he later stated, which is that public keys are the same for every zite if you use an id provider. The \"auth_address\" given by the \"No Certificate\" option is never used to sign user data for zites... for that you need to be logged into an id provider. **More importantly, you can very easily require a zite to only allow an id of an id provider that publicly stores public keys.**\r\n\r\nNext, what you want is **already** possible. Both KxoId and ZeroId saves user public addresses in a public database.\r\n\r\nFinally, the supposed \"hurdles\" haven't been explained yet, so *as far as I can tell*, there really aren't any big hurdles to what you want.", "added": 1570456647, "modified": 1570457132, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2217#issuecomment-539107242", "source_type": "github"}], "1604067568_mirrored_filips123_github": [{"comment_id": 210, "body": "So... I think the main thing with this is going to be security and how we make sure these zites aren't doing malicious things on your computer as well as restricting their access to your computer. I believe Python has very poor support for sandboxing-type stuff like this, unfortunately.\r\n\r\nBackgroundProcessing tries to achieve this, and to the best of ivanq's skillful ability. But.... it also hasn't been audited by anybody else or been heavily tested.", "added": 1571069258, "modified": 1571069439, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223#issuecomment-541863291", "source_type": "github"}, {"comment_id": 211, "body": "> Maybe we could implement a simple templating engine to list content from database and add limited set of commands to modify the json files. This way would be possible to create JS-less messaging boards or blogs.\r\n\r\nI was actually thinking about this!\r\n\r\nCan webassembly be ran in the background without a browser? I mean, we *could* technically integrate nodejs, but that's getting kinda blech-y, lol.", "added": 1571077115, "modified": 1571077226, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223#issuecomment-541927686", "source_type": "github"}], "1604067562_mirrored_icf20_github": [{"comment_id": 212, "body": "@filips123 Those zites that he showed in the image are there even when the user hasn't had them downloaded - that's why they say \"Activate\". I *also* think ZeroUpdate should be on this \"More sites\" list ( @HelloZeroNet )", "added": 1572271566, "modified": 1572271576, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2233#issuecomment-547047882", "source_type": "github"}], "1604067567_mirrored_d14na_github": [{"comment_id": 213, "body": "I haven't decided on anything concrete yet. All feedback about the security of installing plugins and how to verify plugin tustworthiness would be appreciated (although, is there a better issue to discuss this in?).\r\n\r\nOne idea... the **optional** ability for plugins to include a signature by an id so that we can at least link up a plugin with the person/id who created it. If someone trusts this id, they then can trust the plugin. Me and ivanq talked about this idea a bit previously. (@HelloZeroNet)", "added": 1572019596, "modified": 1572019622, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546475572", "source_type": "github"}, {"comment_id": 214, "body": ">  Best reference I can use would be something similar to the Android Permissions system. That would obviously take time to implement in the core codebase, but it could much more easily be presented at the time of installation. BUT IT HAS TO BE TRUSTED.\r\n\r\nOk... we don't have this yet because Python basically has no sandboxing capabilities. It's super annoying, but hopefully ivanq's backgroundprocessing stuff can work? idk, we need testers and auditors!!!", "added": 1572044448, "modified": 1572044474, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546558609", "source_type": "github"}, {"comment_id": 215, "body": "> another thought i had would be to verify the hash of the entire plugin folder against, say:\r\n> 1. a github commits metadata (idk)\r\n\r\nThis wouldn't help much honestly, you still have to trust the github commits. The problem isn't at all about verifying whether *any* outside source changed the files - because ZeroNet already does this. The problem is twofold - trusting the plugin itself, and ensuring that the owner of the zite uploading to doesn't change the plugin - for which a signature is enough. The first problem can be solved by some sandboxing system (BackgroundProcessing!) Let's not add complexity when it literally offers nothing that you can't get with the simpler solution. Github commits are useful for open source projects and for versioning, but that's a separate thing to what signatures provide.\r\n\r\nBtw, if you like IPFS use IPFS, don't use ZeroNet.", "added": 1572044657, "modified": 1572044847, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546558812", "source_type": "github"}, {"comment_id": 216, "body": "Me an ivanq talked a while ago about some things that can be done, some of them simple, other's not:\r\n\r\n1.) Python plugin sandboxing and permission system - hard\r\n2.) Signatures added to plugins - imo, this is *needed*, most plugin systems for other software (like browsers) have some way to do this. These plugin systems also make sure updates don't happen unless the signature matches. This doesn't need to be centralized like chrome and firefox stores though.\r\n3.) Software that will analyze plugins to make sure they aren't doing anything malicious - like an antivirus!", "added": 1572045146, "modified": 1572045146, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546559307", "source_type": "github"}, {"comment_id": 217, "body": "> yes, you mentioned the signature before, but how does that solve the problem of code changing UNKNOWINGLY? all you verify is that it came from a \"trusted\" source. i'd prefer to know that the code I want is immutable\r\n\r\nCode doesn't change unknowingly. Code changes by the person who uploaded the content or by the zite owner. The only thing ZeroNet allows is if the zite owner changes the plugin. if this happens, then the  plugin signature would be invalid (**the plugin signature is just the plugins hash encrypted by a key, to verify the signature, decrypt it with the public key then compare hashes**). This is literally the same way that zite signatures work to prevent tampering.\r\n\r\nAnd if you're talking about *just* preventing auto-updates, ZeroNet already does that. You have to manually update plugins I believe and doing this will tell zeronet to copy over the new plugin version. If this is not currently the case, then it's a very easy thing to change.\r\n\r\nOtherwise, what your talking about requires big changes to optional files to make them immutable-only (or maybe we can have the ability to make *some* files immutable). I'd rather have optional file immutability optional rather than forced. \"Immutability\" is just a fancy word for clients not accepting file changes for already-existing files, so yeah... (also, in this case, no potentially-centralized registered hash of files is really needed I'm pretty sure).", "added": 1572123891, "modified": 1572125390, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546649849", "source_type": "github"}, {"comment_id": 218, "body": "> i kinda get it, but where is it used, so I can see a practical example of its purpose, OR if u don't mind giving me a quick explanation of what its for\r\n\r\nKxoId Trusted Peers use it to sign user registration requests in the background without having to have the browser open. This is the only know use for it atm, but I'm working on another thing. BackgroundProcessing is very useful when paired with PeerMessage.", "added": 1572124348, "modified": 1572124392, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546650283", "source_type": "github"}, {"comment_id": 219, "body": "> i misunderstood your purpose for the signature, as i believed it was to validate the IDENTITY of the developer\r\n\r\nActually, I believe it does **both**, because it makes sure that the code uploaded *only* was done by that id - that nobody tampered with the code. This is basically useful if someone *reuploads* the plugin somewhere else.\r\n\r\n> so the signature solution, as I now understand your purpose WOULD solve that, now its just to implement it.\r\n\r\nNo, the signature solution doesn't do that.... because the hash of the code would be encrypted by the id of the creator. They can release a new version by reencrypting the new hash.\r\n\r\nBasically, what you want is that each new change is released *separately* so that people can download older versions. Or... versioning (not quite the same thing, but the same result).", "added": 1572244592, "modified": 1572246035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546866009", "source_type": "github"}, {"comment_id": 220, "body": "We can reinforce trust by just creating a zite where people can upvote a plugin (or separate plugin versions). We can even include a hash of the plugin to ensure what version of the plugin they upvoted if we need. I would also list out the *names/ids* of the people who upvoted a plugin (and perhaps be able to filter out the people you trust) so that we can see whether the people who upvoted it are themselves trustworthy.\r\n\r\nIt's good not to overthink things and overcomplicate them when not needed.", "added": 1572246970, "modified": 1572247047, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546880518", "source_type": "github"}, {"comment_id": 221, "body": "What you said was, imo, ambiguous, so I didn't know exactly what you meant. Because there's two ways to do this...\r\n\r\n1.) My idea relies on the plugin store and in no way involves ZeroNet core\r\n2.) The other idea was to **require** multiple people to *sign one signature* for a plugin and that this one siagnature signed by multiple people is stored in the plugin. I can't remember what this encryption is called.", "added": 1572386463, "modified": 1572386514, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-547694075", "source_type": "github"}], "1604067572_mirrored_mx5kevin_github": [{"comment_id": 222, "body": "Right... adding *only* the no-referer doesn't solve the problem. You need both that and noopener.", "added": 1572272798, "modified": 1572272798, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-547057654", "source_type": "github"}, {"comment_id": 223, "body": "Yeah, if you click \"create new zite\" on zeronet then the default index.html file in the newly cloned zite  already has this.", "added": 1572386650, "modified": 1572386670, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-547694754", "source_type": "github"}], "1604067573_mirrored_leycec_github": [{"comment_id": 224, "body": ">  Since ZeroNet already is in a sandbox doesn't make a difference if you running in Tor Browser or in Firefox.\r\n\r\nActually it does because the ZeroNet sandbox doesn't even protect against everything, LOL.", "added": 1572085937, "modified": 1572085937, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546602890", "source_type": "github"}, {"comment_id": 225, "body": "And who's had multiple PRs *accepted* by nofish, including **multiple vulnerability fixes**, who's created Git Center, which is used officially by nofish for ZeroNet code as well as various other projects, *and* PeerMessage which is a pretty useful addition to zeronet (KxoId is based on PeerMessage, 0Play Game Center's chat has instant communication because of PeerMessage), *and* backgroundprocessing, which is an experimental sandboxing solution for python code.\r\n\r\nAnd anyways... who *are* you? Are you new to ZeroNet?", "added": 1572086181, "modified": 1572086324, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546603224", "source_type": "github"}, {"comment_id": 226, "body": "> If you assume that ZeroNet is only secure in Tor Browser than you are wrong.\r\n\r\nBtw, looks like you can't read. imachug said Tor helps fix security issues, he didn't say ZeroNet was completely secure in Tor, just *more* secure.\r\n\r\n>  because I will going to oppose any of your pulls.\r\n\r\nHm... interesting. You care more about spite than the actual validity or usefulness of his pr's. Anyways... last time I checked, Nofish still has control over zeronet and what pr's are accepted. \r\n\r\nAlso, last time I checked not everything revolved around you - there are other users besides you who may want these features. Why should they be denied them just because *you* don't want them, especially considering most things are implemented in plugins and it's very easy to disable plugins now.\r\n\r\nBtw, to think that a person only thinks what is good for themselves must only be good for themselves and not necessarily other people is illogical thinking imo. I think most people would say that if they find something useful, then chances are other people will - hence the **whole basis of open source**.", "added": 1572086406, "modified": 1572087193, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546603493", "source_type": "github"}, {"comment_id": 227, "body": "> I don't support any change in ZeroNet source code using the justification that Tor Browser is \"broken\" ZeroNet. You could run tor locally and use let's say Firefox instead of the Tor Browser.\r\n\r\nYou're, just wow....\r\n\r\nThe reason for removing the sandbox has **nothing** to do with Tor Browser support... this issue didn't even exist before ivanq's issue about removing the sandbox. In fact, ivanq seems to have only mentioned the sandbox removal stuff because of the needed *tor proxy*.\r\n\r\nI'm wondering, perhaps you don't know... all this stuff can't be done with the current sandbox:\r\n\r\n1.) Use of client-side router libraries like VueRouter - aka. correct use of History API\r\n2.) ServiceWorkers - needed for Progressive Web Apps and all sorts of things\r\n3.) Every single new browser API that browsers also implement CORS restrictions for has to then be allowed by ZeroNet's sandbox. This clearly would require more management every single time something new is added to JS/browsers - we needed to do this to get Fullscreen working, to get Screen Mirroring, Apple's casting, miracast, and chromecasting working, and probably a few other things, and there's probably going to be more where that came from\r\n4.) Can't use in-browser database\r\n5.) Libraries that use the standard JS APIs won't work because you have to go through ZeroNet's API. We could try to patch every single API JS has by replacing JS functions with functions that call into the ZeroNet API (this was done for XMLHTTPRequest and ajax patching). As far as I'm concerned this is the biggest problem.\r\n\r\nBtw, a lot of Tor's features can be done in Firefox with the same or similar addons.\r\n\r\nFinally, stop acting like Tor Browser breaking ZeroNet isn't a problem - it clearly is. People other than you use Tor Browser... again, not everything revolves around you. Someone wants to use tor browser and ZeroNet together - and it doesn't matter for what reason - so to them, this is a problem. If this isn't a problem for you, then why the hell are you even talking in this issue, just saying!\r\n\r\nAlso, stop acting like ZeroNet is completely safe - because **your're obviously wrong**:\r\n\r\n> Am I? Try making a zite that accesses some clearnet service to get your IP. That will return correct results in Firefox but a fake (well, almost) IP in Tor Browser.", "added": 1572088626, "modified": 1572090538, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546606966", "source_type": "github"}, {"comment_id": 228, "body": "I believe this issue was created to let ZeroNet users know about the `about:config` workaround, hence:\r\n\r\n> Needless to say, we'll need to revise our FAQ instructions to note this.", "added": 1572090323, "modified": 1572090352, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546609216", "source_type": "github"}, {"comment_id": 229, "body": "I'm just gonna.... put these here:\r\n2 sandbox escape vulnerabilities, and one html injection vulnerability... in the sandbox wrapper.\r\n\r\n![Screenshot from 2019-10-26 09-53-52](https://user-images.githubusercontent.com/4098042/67621616-94061780-f7d6-11e9-853a-d4f71ea06d03.png)\r\n![Screenshot from 2019-10-26 09-53-23](https://user-images.githubusercontent.com/4098042/67621618-95cfdb00-f7d6-11e9-81d0-3f1a71ced442.png)\r\n![Screenshot from 2019-10-26 09-53-06](https://user-images.githubusercontent.com/4098042/67621619-98323500-f7d6-11e9-85d7-52bf78f301bc.png)\r\n\r\n-------------------------------------\r\n![Screenshot from 2019-10-26 09-57-59](https://user-images.githubusercontent.com/4098042/67621651-1db5e500-f7d7-11e9-86c1-c3c4b6c1949c.png)\r\n", "added": 1572090869, "modified": 1572091154, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546609966", "source_type": "github"}], "1604067572_mirrored_Wkalmar_github": [{"comment_id": 230, "body": "Yeah, the readme is outdated, but the docs (at zeronet.io/docs) is much more up to date", "added": 1572281413, "modified": 1572281413, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2245#issuecomment-547116563", "source_type": "github"}], "1604067623_mirrored_ghost_github": [{"comment_id": 231, "body": "This pr also belongs in the mimetypes repo - don't blame ZeroNet devs for things that aren't of their doing. In the meantime, a workaround is good, because this fonts issue has been a problem for a while I think.", "added": 1572093694, "modified": 1572093823, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546613761", "source_type": "github"}, {"comment_id": 232, "body": "Idk, I'm pretty sure there was a comment in one issue that mentioned this problem with the mime type. Maybe I can find it, idk.", "added": 1572093995, "modified": 1572093995, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546614167", "source_type": "github"}, {"comment_id": 233, "body": "@HelloZeroNet It's right here: #1940 \r\nTangdou closed it before it was even fixed. I made a comment on it recently.", "added": 1572094137, "modified": 1572094137, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546614384", "source_type": "github"}, {"comment_id": 234, "body": "Hold on a sec... Previously, I wasn't getting correct results when running this in python when that issue (#1940 ) originally occured:\r\n> print(__import__('mimetypes').guess_type('MaterialIcons-Regular.woff'))\r\n\r\nBut now I am getting \"font/woff\" in python. I suppose the mimetypes module was fixed for fonts but the zeronet workaround wasn't removed or something? idk...\r\n\r\nAso, @HelloZeroNet , some people were still getting font problems in Tor browser very recently... don't know if this pr fixes it though.", "added": 1572094423, "modified": 1572094671, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546614790", "source_type": "github"}, {"comment_id": 235, "body": "> As he stated in last comment: \"When enable the ui_password plugin , the problem will reproduce .\"\r\n> \r\n> So it was because of the sandbox.\r\n\r\nFirst of all, that last comment could be interpreted in two different ways... that the problem occurs with ui_password enabled or that it occurs with ui_password enabled **also**.\r\n\r\nSecondly, don't take things out of context and actually look at the issue and what I quoted for my last comment... previously in the issue I tested the mimetypes library and it didn't give the correct results for fonts **in the python REPL** which indicated a potential mimetypes library or OS config problem. Hence why **you** suggested this:\r\n\r\n> So it depends on the operating system configuration if its application/font-woff or None. In case of None we return \"application/octet-stream\" as content-type which works for browsers I tested.\r\n> \r\n> To make it more predictable we could write our own content-type resolver that does not depends on operating system configuration files.\r\n\r\nIf operating systems are inconsistent, then that's a problem that obviously needs to be worked around. Also notice that you said you'll return \"application/octet-sream\" if None was given back...", "added": 1572095845, "modified": 1572099586, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546616800", "source_type": "github"}, {"comment_id": 236, "body": "Ok, well your previous comments suggested you thought it shouldn't be added because of webmanifest's instability/non-standardization...", "added": 1572097062, "modified": 1572097083, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546618809", "source_type": "github"}, {"comment_id": 237, "body": "> Loading fonts with application/octet-sream content-type should work.\r\n> \r\n> Eg. Cloudflare/Firefox serve it this way:\r\n> \r\n> $ curl --head https://www.mozilla.org/media/fonts/Metropolis-Bold.6a80125e795a.woff2\r\nContent-Type: binary/octet-stream\r\n> \r\n> So I still think the problem was because of missing cookie header and not because of invalid content type, but including more content types in UiRequest.py should not hurt.\r\n\r\n@HelloZeroNet I don't think you get what I was saying at all. You were trying to say that that other issue wasn't about this at all, but you literally propose a \"fix\" for this exact problem in that other issue (and you never actually stated that it was fixed) - so it **was** about this.\r\n\r\n> So I still think the problem was because of missing cookie header and not because of invalid content type\r\n\r\nBecause apparently you can't have two problems at once right? I was having that content-type font problem also, and I wasn't using ui_password (and I probably have photo-evidence of this somewhere on ZeroMe)... so that goes to show.\r\nI mean, logically, the problem was *very clearly* **both** ui_password and a wrong content-type on fonts considering both YOU and I tested it and it wasn't giving back the correct content-type, but let's just forget about that why don't we!\r\n\r\nAnyways @HelloZeroNet , icon fonts don't currently work in Tor browser - fix your crap!\r\n\r\nNew Issue: #2249 ", "added": 1572122595, "modified": 1572123717, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546648819", "source_type": "github"}, {"comment_id": 238, "body": "Also posted on https://github.com/antifa/ZeroNet/issues/1\r\n\r\nHere's a 3 way diff. Center is the original before hacktivist/antifa's PR. Left is nofish's implementation. Right is hacktivist/antifa's implementation from the PR (https://github.com/HelloZeroNet/ZeroNet/pull/2248)\r\n\r\n![Screenshot from 2019-11-05 00-28-20](https://user-images.githubusercontent.com/4098042/68183936-600fbc80-ff63-11e9-9e9d-a738de560c57.png)\r\n![Screenshot from 2019-11-05 00-27-28](https://user-images.githubusercontent.com/4098042/68183943-643bda00-ff63-11e9-85ee-6a1d8495bf04.png)\r\n![Screenshot from 2019-11-05 00-27-47](https://user-images.githubusercontent.com/4098042/68183947-66059d80-ff63-11e9-88fe-49786fedd3e3.png)\r\n![Screenshot from 2019-11-05 00-28-03](https://user-images.githubusercontent.com/4098042/68183951-67cf6100-ff63-11e9-853d-33238396e591.png)\r\n\r\nHere's a video of me scrolling through the whole file:\r\nhttps://www.youtube.com/watch?v=YaxcDekczYo\r\n\r\nHere's another diff I did - a two way diff comparing ZeroNet current code with antifa/hacktivist's PR:\r\nhttps://www.diffchecker.com/NO4OAFuM\r\n(Note: because this is two way, it doesn't show which parts were in there originally before the PR or nofish's implementation).", "added": 1572924906, "modified": 1572928581, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-549682814", "source_type": "github"}, {"comment_id": 239, "body": "I'm posting here to update people on what's going on with the user @hacktivist / @antifa. After antifa was blocked, he created a new account called @LiberateZeroNet. He has deleted his account again and created a new account called @fukcyouintheass. This account has already been deleted, and 6 hours ago he has created *another* new account called AnonymousChronicler. I believe that he has an additional account that he has created an hour ago called bela-miklos. Both of these accounts have one repository that happens to be a copy of ZeroNet source code (but not shown as a fork, and under a different name).\r\n\r\nEvery single time I find out about an additional username this person created, I report it to GitHub Support where I have an issue open with them about the user hacktivist all the way back from when he still used that name - I created this report with GitHub Support on October 30th.\r\n\r\n![Screenshot from 2019-11-05 19-02-08](https://user-images.githubusercontent.com/4098042/68259251-fe049500-fffe-11e9-9ce8-4bd1577e256b.png)\r\n![Screenshot from 2019-11-05 19-02-25](https://user-images.githubusercontent.com/4098042/68259253-ffce5880-fffe-11e9-9607-256a7af36e6e.png)\r\n![Screenshot from 2019-11-05 19-02-40](https://user-images.githubusercontent.com/4098042/68259256-00ff8580-ffff-11e9-9f3c-ec375f9a4b27.png)\r\n![Screenshot from 2019-11-05 19-02-55](https://user-images.githubusercontent.com/4098042/68259259-02c94900-ffff-11e9-8f23-50aa781cc307.png)\r\n![Screenshot from 2019-11-05 19-03-13](https://user-images.githubusercontent.com/4098042/68259264-03fa7600-ffff-11e9-8130-821710bef488.png)\r\n", "added": 1572991441, "modified": 1572992448, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-550093707", "source_type": "github"}, {"comment_id": 240, "body": "Another update - Looks like another account by this person has been created: PICSANRUGLAK\r\nJoined an hour ago.", "added": 1573009103, "modified": 1573009120, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-550157694", "source_type": "github"}], "1604067592_mirrored_krixano_github": [{"comment_id": 241, "body": "@HelloZeroNet I thought you already fixed this referer thing. There was an issue a while ago talking about referers being changed by browsers.... I think @anoadragon453 created the issue for this.\r\n\r\nThe issue I'm talking about is #1931\r\n(sidenote, that last comment I made 17 days ago happened to be a bug in my own code and seemingly unrelated the the issue that *was fixed* because I was one of the people who tested it in Firefox Private mode)", "added": 1572260686, "modified": 1572261057, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2249#issuecomment-546961352", "source_type": "github"}, {"comment_id": 242, "body": "Thanks @HelloZeroNet !", "added": 1572267727, "modified": 1572267727, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2249#issuecomment-547017280", "source_type": "github"}], "1604067611_mirrored_filips123_github": [{"comment_id": 243, "body": "A proposal which you didn't want originally, might I add....\r\n\r\n![Screenshot from 2019-10-28 11-28-53](https://user-images.githubusercontent.com/4098042/67697178-25f85680-f976-11e9-9807-724eb7c69026.png)\r\n", "added": 1572269347, "modified": 1572269347, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2253#issuecomment-547030019", "source_type": "github"}, {"comment_id": 244, "body": "Stop acting like @HelloZeroNet doesn't have a mind of his own. He said it himself - he didn't like the caching that you were trying to sneak in. Period. End of discussion. Get Over It!\r\n\r\nBtw, @HelloZeroNet often writes his own code instead of accepting prs. Again, you're not special, so get over it.\r\n\r\n![Screenshot from 2019-10-28 11-48-42](https://user-images.githubusercontent.com/4098042/67698887-2e05c580-f979-11e9-8948-543dd879f418.png)\r\n![Screenshot from 2019-10-28 11-52-17](https://user-images.githubusercontent.com/4098042/67699024-6efdda00-f979-11e9-8f13-4f06994cac23.png)", "added": 1572269970, "modified": 1572270836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2253#issuecomment-547035215", "source_type": "github"}], "1604067633_mirrored_ghost_github": [{"comment_id": 245, "body": "For the downsides of this pr that have already been discussed, see #2248 ", "added": 1572265557, "modified": 1572265557, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2254#issuecomment-547000102", "source_type": "github"}, {"comment_id": 246, "body": "Not *if* you're trying to cover up criticism by creating a new PR", "added": 1572267171, "modified": 1572267171, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2254#issuecomment-547012755", "source_type": "github"}, {"comment_id": 247, "body": "Thanks @HelloZeroNet ! Just when I finished writing my own pr that's pretty much as simple as what you did, lol. The other PR at #2248 should also be closed.", "added": 1572267858, "modified": 1572267967, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2254#issuecomment-547018392", "source_type": "github"}], "1604067635_mirrored_ghost_github": [{"comment_id": 248, "body": "I'm gonna take a wild guess and say that he's talking about line 281 in his pr @HelloZeroNet ", "added": 1572268680, "modified": 1572268837, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2255#issuecomment-547024832", "source_type": "github"}, {"comment_id": 249, "body": "![Screenshot from 2019-10-28 11-43-09](https://user-images.githubusercontent.com/4098042/67698363-39a4bc80-f978-11e9-848b-b9fb1d43369c.png)\r\n", "added": 1572270239, "modified": 1572270239, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2255#issuecomment-547037409", "source_type": "github"}, {"comment_id": 250, "body": "@HelloZeroNet https://cheatsheetseries.owasp.org/cheatsheets/HTML5_Security_Cheat_Sheet.html#tabnabbing\r\n![Screenshot from 2019-10-28 11-56-58](https://user-images.githubusercontent.com/4098042/67699402-13801c00-f97a-11e9-917e-9ffc4599a19b.png)\r\n\r\nAlso, we have the `wrapperOpenWindow` zeroframe cmd that we need to do this for.", "added": 1572271073, "modified": 1572271099, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2255#issuecomment-547044009", "source_type": "github"}, {"comment_id": 251, "body": "Ok, I didn't know that. Good!", "added": 1572272721, "modified": 1572272721, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2255#issuecomment-547057021", "source_type": "github"}], "1604067637_mirrored_ghost_github": [{"comment_id": 252, "body": "#2248 ", "added": 1572271247, "modified": 1572271946, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547045412", "source_type": "github"}, {"comment_id": 253, "body": "@HelloZeroNet This isn't an issue regarding ZeroNet code and doesn't use one of the provided templates so it should be closed.", "added": 1572271289, "modified": 1572271289, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547045716", "source_type": "github"}, {"comment_id": 254, "body": "Of course you can... doesn't mean your issue is not irrelevant.", "added": 1572271649, "modified": 1572271649, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547048487", "source_type": "github"}, {"comment_id": 255, "body": "Looks like there was **plenty** discussion in #2248 to me. Stop lying, god damn...\r\nMe, @imachug , and @HelloZeroNet all disagreed with your caching. Get over it.", "added": 1572271934, "modified": 1572271966, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547050667", "source_type": "github"}, {"comment_id": 256, "body": "Uh, no... lol\r\n\r\nAs you can see, my commit was done within the same hour as nofish's commits. I didn't even get a chance to make the PR, lol. Secondly, I had no contact with nofish whatsoever aside from that issue where **multiple people told you the caching was the wrong thing to do**.\r\n\r\n![Screenshot from 2019-10-28 12-16-46](https://user-images.githubusercontent.com/4098042/67700997-1cbeb800-f97d-11e9-93e5-00c2e819021f.png)\r\n![Screenshot from 2019-10-28 12-16-38](https://user-images.githubusercontent.com/4098042/67701000-1fb9a880-f97d-11e9-8bf2-15bb3b6bfc05.png)\r\n\r\n\r\nAnd finally, you can see in my commit on my ZeroNet fork, I didn't even take your code, so stfu.", "added": 1572272371, "modified": 1572272371, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547054157", "source_type": "github"}, {"comment_id": 257, "body": "No it's not. It's very clearly saying I'll be implementing the same idea with my own code. Additionally, this is evidenced in the differences between my commit and your pr... if you bothered to look.", "added": 1572272565, "modified": 1572272601, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547055684", "source_type": "github"}, {"comment_id": 258, "body": "I didn't know that to just *make* a PR you had to copy code. Hm... interesting. Because I thought making a PR involved writing changes in a fork and clicking \"create pr\" on github.", "added": 1572272671, "modified": 1572272671, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547056584", "source_type": "github"}, {"comment_id": 259, "body": "I don't need to talk myself out of anything. You can literally *see* proof that I didn't copy your code on GitHub. So no, doesn't \"feels shit\" (you forgot the work \"like\" btw).", "added": 1572272891, "modified": 1572272891, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547058394", "source_type": "github"}, {"comment_id": 260, "body": "![Screenshot from 2019-10-28 12-30-09](https://user-images.githubusercontent.com/4098042/67701912-cfdbe100-f97e-11e9-9e8c-31794bb0fb2e.png)\r\n", "added": 1572273068, "modified": 1572273068, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547059741", "source_type": "github"}, {"comment_id": 261, "body": "> So don't fuck with me man or you will cry like a baby in the end!\r\n\r\nI'll be reporting this as a threat.", "added": 1572273092, "modified": 1572273092, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2256#issuecomment-547059930", "source_type": "github"}], "1604067642_mirrored_ghost_github": [{"comment_id": 262, "body": "Dude, none of your issues are being censored - everyone can view them here on GitHub in the closed issues. They're being closed because so far you haven't been able to convince anyone of a real issue.", "added": 1572351050, "modified": 1572351050, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547470140", "source_type": "github"}], "1604067674_mirrored_imachug_github": [{"comment_id": 263, "body": "But can't users just use the fileList zeroframe command on a public proxy to list out all the files?", "added": 1572436735, "modified": 1572436810, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-547948623", "source_type": "github"}, {"comment_id": 264, "body": "Ok, here's what I propose. A new thing called \"ziteSetSettings\" and \"ziteGetSettings\" that stores *zite* settings in a location inaccessible from the frontend. \r\n\r\nThe difference between this and userSettings would be that userSetSettings are *user-specific* while ziteSetSettings would *not* be. A good use for this is a proxy owner adding a setting that affects a zite *for all users of the proxy*, and technically sensitive data can also be stored here.", "added": 1572442948, "modified": 1572442948, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-548000779", "source_type": "github"}, {"comment_id": 265, "body": "Right.... I'm dumb, basically, lol\r\n\r\nAnyways, the idea is still cool imo - the ability to have site-settings that apply to all users of a proxy, but is changeable by the proxy-owner.\r\n\r\n----\r\n\r\nEdit: What we want this for is for KxoId creation - the ability to host a \"Trusted Peer\" on a proxy without proxy users getting the private key used to sign ids. Basically, we need the ability for the *plugin* (BackgroundProcessing in this case) to store a zite setting somewhere outside of any zite folders and this setting should be only accessible to the plugin/zeronet core (and *not* zeroframe). But it also has to be zite-specific too.\r\n\r\nI believe ivanq should probably just add this to his plugin.", "added": 1572444200, "modified": 1572445260, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-548010986", "source_type": "github"}, {"comment_id": 266, "body": "Well... the main idea would be that the proxy-owner has control over it, so an ignored json file would require they go into the zite directory to change that file.", "added": 1572447813, "modified": 1572447813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-548040380", "source_type": "github"}], "1604067617_mirrored_krixano_github": [{"comment_id": 267, "body": "Btw, I think if we go the GPLv3 route, we should *only* do GPLv3-only and not \"plus\".\r\n\r\nAlso, if we have the ability to replace pyelliptic (btw, the **original** repo for pyelliptic is BSD - the PyBitcoin version is GPLv3), then I would actually prefer that.\r\n\r\nIt might be better to switch out pyelliptic now since the official repo is deprecated. And it's the main stopping block for other licenses that we could switch to.", "added": 1572710797, "modified": 1572711211, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549071934", "source_type": "github"}, {"comment_id": 268, "body": "To add on to what imachug is saying, the C library, magpack-c, is Boost Software License which is a very permissive non-copyleft license that is compatible with most things.", "added": 1572717694, "modified": 1572717708, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549080901", "source_type": "github"}, {"comment_id": 269, "body": "@JeremyRand Ok... so in antifa's issue, I disagreed about the whole patenting thing for GPLv3. However, I did not know about this (I don't think he ever quoted this while I was still looking at the issue - perhaps someone has after my last comment, when I stopped looking at that issue):\r\n>  In addition to that, if any licensee tries to use a patent suit to stop another user from exercising those rights, their license will be terminated.\r\n\r\nMy main concern was about contributors patenting and suing other contributors or forks for their own contributions. In this case, it looks like this protects against that, so I think GPLv3 is fine, so I would be fine with a change to GPLv3 as long as @HelloZeroNet (and everyone else obviously) is fine with it.\r\n\r\nI just want to give an update on what @imachug is doing - he's currently rewriting one of the GPLv3 libraries (pyelliptic), just in case @HelloZeroNet might not want to go with GPLv3. Additionally, this library is outdated anyways, so it needs rewritten.", "added": 1572790058, "modified": 1572796470, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549158031", "source_type": "github"}, {"comment_id": 270, "body": "I personally think that copyleft is only good for *software* and not *libraries*. I was just talking with @filips123 about him thinking that parts of ZeroNet could be released as MIT. I agree with this if parts of ZeroNet could be libraries, in which case I mentioned to him that we could separate these out to other repos (like @imachug did with the bencode alternative he made).", "added": 1572792448, "modified": 1572792448, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549161342", "source_type": "github"}, {"comment_id": 271, "body": "@HelloZeroNet  @filips123 emailed FSF to see if that is true or not (whether Pypi packages' licenses need to be followed).", "added": 1572796156, "modified": 1572796184, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549166776", "source_type": "github"}, {"comment_id": 272, "body": "Ok, I've started the bot on issue #2271 so that we can track who would accept a license change and what license they would accept.", "added": 1572803945, "modified": 1572803945, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549177932", "source_type": "github"}, {"comment_id": 273, "body": "Ok, we had to redo the poll, so now everyone please vote on the new issue here: #2273 ", "added": 1572813222, "modified": 1572813222, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549191154", "source_type": "github"}, {"comment_id": 274, "body": "@d14na You can vote for a license on issue #2273 ", "added": 1572818399, "modified": 1572818399, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549198657", "source_type": "github"}, {"comment_id": 275, "body": "> Notice: \"Lax/Permissive license\" does not include Public Domain licenses. They do, however, include BSD 2/3, MIT, ISC, and Apache-2.0\r\n\r\nMIT, GPL, and Apache are the 3 most used licenses on github I believe. BSD is also probably up there.", "added": 1572819219, "modified": 1572819431, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549199965", "source_type": "github"}, {"comment_id": 276, "body": "@krzysztof113 \r\n\r\nSure.. ZeroNet is probably low on the list, but we should try to remain legal. Finally, **even with the incompatibility issues, there are other reasons for upgrading the license to GPLv3.** For example, some people might prefer GPLv3 because of the patent retaliation protections. Some people also might not even want GPL at all. The vote allows nofish and everyone else to say what they think is best and possibly reach a consensus on this. As far as I'm concerned, this is not \"unimportant\".", "added": 1572872445, "modified": 1572872570, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549421161", "source_type": "github"}, {"comment_id": 277, "body": "@namazso Have you simply read the original body post for this issue?\r\n\r\nIf we don't change the license we have to get rid of or replace 8 dependencies.\r\n\r\nNow, I don't know if pypi packages count or not with this whole licensing stuff, so it'd be nice to get clarification on that aspect.\r\n\r\nFinally:\r\n> even with the incompatibility issues, there are other reasons for upgrading the license to GPLv3.", "added": 1572887474, "modified": 1572887618, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549526523", "source_type": "github"}, {"comment_id": 278, "body": "What about this though:\r\n>  But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. \r\n\r\nWhat does \"work based on the program\" mean. ZeroNet can't really function without the libraries it uses, especially msgpack which is one of the violations I believe.", "added": 1572887852, "modified": 1572887974, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549528712", "source_type": "github"}, {"comment_id": 279, "body": "> but considering the hassle, I'm not sure if it's worth it.\r\n\r\nCommenting on a post to see if we have a consensus isn't really a hassle. It takes like 5 seconds to comment your vote.", "added": 1572887885, "modified": 1572887885, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549528918", "source_type": "github"}, {"comment_id": 280, "body": "> The only problem arising is that obviously at some point you want to link them together, and distribute the result, which would indeed be a violation. To solve this, you can provide tools for users to build ZeroNet themselves on their own machine. I'm wondering if you have simply read my previous post.\r\n\r\nOf course I read this, it's just stupid, sorry (but not really sorry).", "added": 1572888025, "modified": 1572888041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549529690", "source_type": "github"}, {"comment_id": 281, "body": "> The point is, you can distribute independently non-functioning code, then the user can make it functioning on their own machine. \r\n\r\nIf we're requiring users to do this, then this is a dumb idea. Why would we sacrifice user experience just because developers don't want to put in the work to make their product actually good. Typical Unix mindset if you ask me....", "added": 1572888375, "modified": 1572888375, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549531699", "source_type": "github"}, {"comment_id": 282, "body": "The *only* thing we need to switch to GPLv3 and fix all the violations is to get consensus from all contributors. That's it. We have around 107 contributors and quite a lot have responded so far.", "added": 1572888689, "modified": 1572888689, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549533614", "source_type": "github"}, {"comment_id": 283, "body": "Btw, we don't need 100% of contributors to agree. Other projects like Firefox went through software re-licensing and they only got 95% consensus.\r\n\r\nYou can see this is the Wikipedia page for Software Re-licensing.", "added": 1572889890, "modified": 1572889909, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549541217", "source_type": "github"}, {"comment_id": 284, "body": "This is a bit unrelated, but I'm putting this up here because I already know that the post is going to be deleted:\r\n\r\n![Screenshot from 2019-11-08 20-01-50](https://user-images.githubusercontent.com/4098042/68521057-c138d800-0262-11ea-9165-b89754321300.png)\r\n", "added": 1573254180, "modified": 1573254193, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-552054895", "source_type": "github"}], "1604067605_mirrored_ZeroNetTickBot_github": [{"comment_id": 285, "body": "GPLv3-only and Apache", "added": 1572803880, "modified": 1572803880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549177845", "source_type": "github"}, {"comment_id": 286, "body": "For people who want to know more about these licenses... I find http://tldrlegal.com to be a pretty decent resource.", "added": 1572804933, "modified": 1572804944, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549179371", "source_type": "github"}, {"comment_id": 287, "body": "**Polite** discussion about different licenses is also welcome here, just *make sure it's in a separate comment from one that you are voting in.*\r\n\r\nYou can also change your mind about your vote by posting a new vote which will overwrite your previous vote. Do **not** edit your original post (the bot cannot detect this)", "added": 1572805308, "modified": 1572805682, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549179946", "source_type": "github"}, {"comment_id": 288, "body": "The reason we did that is because we are using Apache-licensed dependencies. This is why we can only use \"Apache-**compatible**\" licenses. GPLv3 is *also* Apache-compatible (GPLv2 is not)", "added": 1572806527, "modified": 1572806624, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549181884", "source_type": "github"}, {"comment_id": 289, "body": "@caryoscelus Ok, I edited the main post to clarify what you were talking about a little.\r\n\r\nBut, I'm gonna guess you probably want the ability for people to be able to specify which Apache-compatible license they want? We can add that option once @imachug is back on.\r\n\r\nThe thing is, are Apache, MIT, BSD, and ISC really that different to warrant this change?", "added": 1572807839, "modified": 1572808175, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549183758", "source_type": "github"}, {"comment_id": 290, "body": "That's a good point @filips123 .\r\n\r\nThe difference is \"any license\" would include things incompatible with our current dependencies, while \"GPLv3 and Apache\" is saying you don't care as long as it's compatible with current ZeroNet deps that use Apache-2 license.", "added": 1572808510, "modified": 1572808697, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549184669", "source_type": "github"}, {"comment_id": 291, "body": "@caryoscelus Is CC0 Apache-compatible? Can you *use* an apache dependency inside of a CC0 work? I wouldn't have thought that you can\r\n\r\nAnyways, If this is the case, then maybe we should fix this stuff and redo the poll? I can try to quickly fix this.", "added": 1572809392, "modified": 1572809908, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549185908", "source_type": "github"}, {"comment_id": 292, "body": "Ok, everyone who voted here, please vote again in the new issue #2273 ", "added": 1572812862, "modified": 1572812862, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549190636", "source_type": "github"}], "1604067608_mirrored_ZeroNetTickBot_github": [{"comment_id": 293, "body": "GPLv3-only and Lax", "added": 1572812717, "modified": 1572812717, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549190437", "source_type": "github"}, {"comment_id": 294, "body": "Making sure the second-half of the list of contributors get properly mentioned:\r\n\r\n@xfq @6543 @ajmeese7 @AceLewis @megfault @zasei @artemmolotov @Nephos @Austin-Williams @bencevans @valkheim @d14na @thesoftwarejedi @Derson5 @dldx @EdenSG @camponez @Erkan-Yilmaz @Fil @gyulaweber @shakna-israel @flibustier @justinwiley @kseistrup @MRoci @sexybiggetje @BoboTiG @medimatrix @Nodeswitch @Ornataweaver @adrelanos @quasiyoke @Radtoo @RedbHawk @rcmorano @rubo77 @SuperSandro2000 @Thunder33345 @anonym @beigexperience @blurHY @dqwyy @eduaddad @goofy-mdn @krikmo @leycec @mnlg @mymage @probonopd @saber28", "added": 1572813590, "modified": 1572813648, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549191647", "source_type": "github"}, {"comment_id": 295, "body": "@rwv @sinkuu @zwgshr", "added": 1572813612, "modified": 1572813612, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549191687", "source_type": "github"}, {"comment_id": 296, "body": "Just some useful information for people:\r\n\r\n> Sometimes open-source software projects get stuck in a license incompatibility situation. Often the only feasible way to resolve this situation is re-licensing of all participating software parts. For successful relicensing the agreement of all involved copyright holders, typically the developers, to a changed license is required. While in the free and open-source domain achieving 100% coverage of all authors is often impossible due to the many contributors involved, often it is assumed that a great majority is sufficient. For instance, Mozilla assumed an author coverage of 95% to be sufficient.[4] Others in the FOSS domain, as Eric S. Raymond, came to different conclusions regarding the requirements for relicensing of a whole code base.\r\n\r\nhttps://en.wikipedia.org/wiki/Software_relicensing", "added": 1572818608, "modified": 1572818699, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549199037", "source_type": "github"}, {"comment_id": 297, "body": "Additionally, if you want to find out more about different licenses, http://tldrlegal.com seems to be a decent resource.", "added": 1572818732, "modified": 1572818732, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549199216", "source_type": "github"}, {"comment_id": 298, "body": "Maybe.. but we shouldn't be dictating completely what people can choose from, because they have to choose it for themselves (legally). Also, I didn't really add that many more choices.\r\n\r\nBasically, what I'm saying is if people naturally fall into a consensus regarding what they actutally want, then more choices doesn't matter. But if we are getting a consensus with less options but not a consensus with more options, then that just means we're kinda shoehorning people into a consensus when that's not what they really want.\r\n\r\nThe more important change in this update though was to clarify any ambiguity (this is important for legal reasons, along with understandability reasons), so I replaced \"Apache\" and \"Apache-compatible\" with \"Lax\" and was explicit about \"Lax\" not including the Public Domain.", "added": 1572827183, "modified": 1572831303, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549214936", "source_type": "github"}, {"comment_id": 299, "body": "Btw, **polite** discussion on licenses are welcome and you can change your vote at any time by posting another comment.", "added": 1572831403, "modified": 1572831403, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549222721", "source_type": "github"}, {"comment_id": 300, "body": "> We'll cross that bridge when we get to it.\r\n\r\nGPLv3+ allows for auto-upgrade to later versions. Honestly, I don't see why anyone would **ever** want that. If someone could explain this, that'd be useful.", "added": 1572872233, "modified": 1572872288, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549419523", "source_type": "github"}, {"comment_id": 301, "body": "> Of course not. GPLv3+ means that anyone is free to choose any of licenses that fall under \"version 3 or later..\" definition. You can take it and limit version you redistribute to GPLv3, GPLv4, GPLv4+ or even something weird like \"GPLv3 or GPLv5\".\r\n\r\nHm.... that means that forks can choose to upgrade, but contributors can't force the original repo to upgrade? If so, then that's much better than what I originally thought\r\n\r\n> Btw, for some reason the bot displays my vote under \"passing\" and my name in the main list appears as if unvoted.\r\n\r\nThanks we'll look into this.", "added": 1572872953, "modified": 1572872953, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549425048", "source_type": "github"}, {"comment_id": 302, "body": "GPLv3 and Lax", "added": 1572875789, "modified": 1572875789, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549447388", "source_type": "github"}, {"comment_id": 303, "body": "> but it may influence the \"Passing people\" list, most probably included in the statistics of community approval/disapproval.\r\n\r\nWe've decided not to include \"passing people\" in the stats, but if anyone wants to tell us why we should change this, we can change it.", "added": 1572879692, "modified": 1572879775, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549474679", "source_type": "github"}, {"comment_id": 304, "body": "Actually, this isn't based on majority vote I don't think. We have to have a full consensus, or near-full consensus of all contributors (Mozilla got away with 95% consensus with Firefox's license change)", "added": 1573054091, "modified": 1573054115, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550440159", "source_type": "github"}, {"comment_id": 305, "body": "@zeronettimemachine I mean, afaik, **legally**, we can't force people into changing the license their contributions are under, even if by majority.", "added": 1573055052, "modified": 1573055065, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550446301", "source_type": "github"}, {"comment_id": 306, "body": "Yep, looks like zeronettimemachine is the *next* user created by hacktivist / antifa / LiberateZeroNet / etc.\r\n\r\n![Screenshot from 2019-11-06 12-46-36](https://user-images.githubusercontent.com/4098042/68327939-eb886b00-0093-11ea-87e3-a5f63183d360.png)\r\n", "added": 1573055311, "modified": 1573055391, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550448032", "source_type": "github"}, {"comment_id": 307, "body": "*sigh* classic strawman. Anyways, this should tell you very clearly:\r\n\r\n![Screenshot from 2019-11-06 12-54-26](https://user-images.githubusercontent.com/4098042/68328314-a7e23100-0094-11ea-93ef-ea405ad871b8.png)\r\n", "added": 1573055725, "modified": 1573055725, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550450802", "source_type": "github"}, {"comment_id": 308, "body": "> Both of these are legally equivalent, because any software that is licensed under GPLv3+ (3 or later) can be re-licensed under GPLv3 (3 only) without any further authorization from the copyright holder\r\n\r\nHow about give people the benefit of the doubt? Whether GPLv3+ is equivalent to GPLv3 is irrelevant. We wanted to make sure there was as many options as possible because we shouldn't be shoehorning people's votes - **are you suggesting that we be dishonest by limiting peoples choices?** That's illegal, btw.", "added": 1573058595, "modified": 1573058925, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550469796", "source_type": "github"}, {"comment_id": 309, "body": "> Are you intending to overload this poll by simultaneously asking what licenses the authors' work is under, and asking what licenses the author politely recommends that the ZeroNet maintainers relicense it under? Because that seems like a bad combination of things to put into a single poll.\r\n\r\nAre you saying that a person who wants an open source project to relicence to a specific license won't allow their contributions to match that license? Does that even make *any* sense?\r\n\r\nThe poll is about you relicensing your contributions so that ZeroNet can be relicensed as a whole. If a person suggests a different license for ZeroNet but then doesn't release their contributions under that same license, then isn't that precisely equivalent to not wanting ZeroNet to relicense?", "added": 1573059305, "modified": 1573059305, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550474617", "source_type": "github"}, {"comment_id": 310, "body": "Because I misunderstood what you were saying.", "added": 1573059333, "modified": 1573059333, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550474790", "source_type": "github"}, {"comment_id": 311, "body": "I think it's become clear to me now that you think my intentions are bad for some reason... If that's so, then maybe I should withdraw from ZeroNet completely, because I'm just about fed up with hostile people (especially the whole thing concerning antifa aka. hacktivist, LiberateZeroNet, and whatever other username he's breaking GitHub's TOS and the law in multiple countries with).\r\n\r\n#2248 ", "added": 1573059522, "modified": 1573059608, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550475999", "source_type": "github"}, {"comment_id": 312, "body": "I'm telling you it's dishonest to limit people's choices. Secondly, you're trying to claim that having duplicate options is \"overloading\" a poll and it seems to me you are alluding to bad intentions.", "added": 1573059718, "modified": 1573059718, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550477277", "source_type": "github"}, {"comment_id": 313, "body": "And other people have already clarified what the differences are.", "added": 1573059801, "modified": 1573059801, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550477817", "source_type": "github"}, {"comment_id": 314, "body": "> I'm telling you it's dishonest to limit people's choices. \r\n\r\nLet me clarify. Previously I said to give people the benefit of the doubt. I next said it's illegal and dishonest to limit people's choices.\r\n\r\nHere's what I'm trying to get at.... If there are duplicate options, it's because I wanted to make sure that everything was covered, not because I'm trying to confuse people.", "added": 1573059879, "modified": 1573059879, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550478338", "source_type": "github"}, {"comment_id": 315, "body": "You said \"**intending** to overload the poll\". As far as I'm aware, \"intending\" implies the person wanted to overload the poll on purpose. It's called a *loaded question*.", "added": 1573059968, "modified": 1573060018, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550478854", "source_type": "github"}, {"comment_id": 316, "body": "Ok, fine. But you questioning me deleting part of my comment felt like an attack.\r\n\r\nAnyways, as I said previously, I think both questions *are the same*:\r\n> Are you saying that a person who wants an open source project to relicence to a specific license won't allow their contributions to match that license? Does that even make any sense?\r\n> \r\n> The poll is about you relicensing your contributions so that ZeroNet can be relicensed as a whole. If a person suggests a different license for ZeroNet but then doesn't release their contributions under that same license, then isn't that precisely equivalent to not wanting ZeroNet to relicense?", "added": 1573060346, "modified": 1573060346, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550481029", "source_type": "github"}, {"comment_id": 317, "body": "Ok... so it's just a duplicate option then... so it doesn't matter which one a person chooses does it?", "added": 1573062051, "modified": 1573062051, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550491220", "source_type": "github"}, {"comment_id": 318, "body": "caryoscelus saw a problem in the other poll, but he did it early enough that I was able to restart the poll, but it's kinda hard to restart the poll now, isn't it?", "added": 1573062149, "modified": 1573062149, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550491847", "source_type": "github"}, {"comment_id": 319, "body": "I'm gonna be honest here... this is just *way* too complicated imo, so it's kinda making me *never* want to use GPL ever again and just use simple permissive licenses, lol", "added": 1573062368, "modified": 1573062368, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550493151", "source_type": "github"}, {"comment_id": 320, "body": "@JeremyRand The problem that I'm seeing now is that the way we wrote the issue suggests that we are talking about what a person would like ZeroNet maintainers to do, but the intention should really be that you are relicensing your contributions. Idk....", "added": 1573062521, "modified": 1573062521, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550494057", "source_type": "github"}, {"comment_id": 321, "body": "The reason I thought it was the same question was because I was assuming that what a person wanted the ZeroNet maintainers to pick was the same as what they are relicensing their contributions to. But you seem to suggest that these can actually be different things?", "added": 1573062705, "modified": 1573062705, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550495096", "source_type": "github"}, {"comment_id": 322, "body": "Ok... I just worry that when people voted they might have misunderstood what the poll was about and I don't want to count the votes for people who didn't answer the *intended* question but answered the question they interpreted.", "added": 1573063224, "modified": 1573063322, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550498168", "source_type": "github"}, {"comment_id": 323, "body": "Ok, thanks.\r\n\r\n(p.s. I love how thumbs ups suddenly switched to thumbs downs, lol)", "added": 1573063683, "modified": 1573063683, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550500876", "source_type": "github"}, {"comment_id": 324, "body": "Just so people are aware, this referenced issue (https://github.com/HeIIoZeroNet/ZeroNet/issues/1) is NOT nofish (as you can see on the profile - this user joined an hour ago). The user tried making it look official, but it isn't.", "added": 1573152085, "modified": 1573152393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-551278235", "source_type": "github"}, {"comment_id": 325, "body": "Ok, so antifa keeps on talking about the copyright of all collaborators being terminated because of the GPLv2 violation (maybe I misinterpreted him, idk...). Did a quick search, and here's the site that uses the *exact* line he keeps saying:\r\n> Community-oriented compliance processes should extend the benefit of GPLv3-like termination, even for GPLv2-only works. **GPLv2 terminates all copyright permissions at the moment of violation, and that termination is permanent.** GPLv3's termination provision allows first-time violators automatic restoration of distribution rights when they correct the violation promptly, and gives the violator a precise list of copyright holders whose forgiveness it needs. GPLv3's collaborative spirit regarding termination reflects a commitment to and hope for future cooperation and collaboration. It's a good idea to follow this approach in compliance situations stemming from honest mistakes, even when the violations are on works under GPLv2.\r\n\r\nhttps://sfconservancy.org/copyleft-compliance/principles.html\r\n\r\nNow, to me this sounds like it could actually be meaning the copyright *permission* to **use** the libraries that are being violated, and NOT the copyrighted code belonging to the violating project. Some clarification and fact-checking would be nice if anybody knows anything about this.", "added": 1573231596, "modified": 1573233167, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-551965693", "source_type": "github"}, {"comment_id": 326, "body": "Ok, so I just read the whole GPLv2 license. Here's the section that my previous quote is talking about, in section 4 of the license:\r\n\r\n> You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically **terminate your *rights* under this License.** However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. \r\n\r\n1.) Your \"rights under this license\" are terminated if you don't follow the terms and conditions. What are the rights this license provides? The ability to modify, distribute, and copy the program.\r\n2.) People you have distributed to retain their rights so long as such parties remain in full compliance.\r\n\r\nNow... here's where it gets tricky, in section 2:\r\n> These requirements apply to the modified work as a whole. If **identifiable sections of that work are not derived from the Program**, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections **when you distribute them as separate works.** But when you distribute **the same sections** as part of a whole which is a work based on the Program, the distribution of **the whole** must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. \r\n> \r\n> Thus, **it is not the intent of this section to claim rights or contest your rights to work written entirely by you;** rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. \r\n\r\nI think this means that the entire work as a whole must follow the license, but you still own the copyright to the \"identifiable sections\" of \"work written entirely by you\" (depending on copyright law of your country, hence the \"claim rights **or** contest your rights\")? I don't even know, lol. This part is just confusing.", "added": 1573240854, "modified": 1573252534, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552012656", "source_type": "github"}, {"comment_id": 327, "body": "> 2.) People you have distributed to retain their rights so long as such parties remain in full compliance.\r\n\r\nNow, what I wonder about this is if contributions are GPLv2 licensed but the libraries being used are GPLv3.... how can one remain in full compliance of both licenses. Does having a license violation mean that the GPLv2 license of the \"identifiable sections\" of \"work written entirely by you\" is terminated? And **if so,** doesn't this mean that this license is in fact contesting your rights \"to work written entirely by you\"? But yet it states that it isn't contesting that... so how can people who have been distributed ZeroNet remain in full compliance of both licenses (ZeroNet is GPLv2-only atm)?", "added": 1573241365, "modified": 1573241419, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552015366", "source_type": "github"}, {"comment_id": 328, "body": "What do you mean? There's license incompatibilities and we are legally required to do something about this in order to continue to use the libraries in question and distribute ZeroNet\r\n\r\n> ZeroNet project has recently been informed of some license incompatibilities. Namely, we are using some Apache 2.0 and GPLv3 dependencies, whilst the current ZeroNet license is GPLv2. Thus, I would now ask the contributors to support GPLv3 switch.\r\n\r\nAs *also* explained in issue #2269 ", "added": 1573255184, "modified": 1573255586, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552056342", "source_type": "github"}, {"comment_id": 329, "body": "I mean... I'd rather ZeroNet remain up/usable and legal than be taken down or sued from licensing issues.", "added": 1573255286, "modified": 1573255286, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552056502", "source_type": "github"}], "1604067630_mirrored_krzysztof113_github": [{"comment_id": 330, "body": "Technically they both work, but 127.0.0.1:43110 is the most commonly used and what's opened by default by the client. I agree that that tutorial should be more consistent by using 127.0.0.1:43110.", "added": 1573064406, "modified": 1573064406, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2288#issuecomment-550505187", "source_type": "github"}], "1604067632_mirrored_Miserlou_github": [{"comment_id": 331, "body": "Also, ZeroNet uses SQLite btw.", "added": 1573064112, "modified": 1573064112, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-550503401", "source_type": "github"}], "1604067693_mirrored_ghost_github": [{"comment_id": 332, "body": "It the vote favors GPLv3-only, then why does the vote text say that the option that allows for GPLv3+ is recommended?", "added": 1573060829, "modified": 1573060829, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2293#issuecomment-550483773", "source_type": "github"}, {"comment_id": 333, "body": "Btw, a person can change their mind. I've since changed my mind on GPLv3+, so now that's what I've voted for.", "added": 1573060853, "modified": 1573060853, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2293#issuecomment-550483920", "source_type": "github"}]}, "next_topic_id": 18, "topic": [{"topic_id": 1604066073, "title": "PWA to get Add To Homescreen functionality on phones and make zites look more like Apps", "body": "Just an idea, not sure how possible it is:\r\n![image](https://user-images.githubusercontent.com/4098042/28804270-b8f7fb5e-7627-11e7-9066-81463d2074cb.png)\r\n![image](https://user-images.githubusercontent.com/4098042/28804276-c9530dfe-7627-11e7-82c3-21125b1901bf.png)\r\n\r\nAlso, I know that you can already add sites to your homescreen. But making it a PWA will remove the address bar, put them into seperate windows, and add a splash screen. I also think I read somewhere that they will also be put into the App Drawer in the future.\r\n\r\nThis would require Service Worker support also, I believe.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1501537149, "modified": 1558884019, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065", "source_type": "github"}, {"topic_id": 1604066364, "title": "Problems with New Zite and Database", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 1.6.2 Rev 3329 and Rev 3335\r\n  * Operating system: Linux (Solus OS)\r\n  * Web browser: Firefox and Chrome (Google)\r\n  * Tor status: Error (Connection Refused - not available?)\r\n  * Opened port: yes\r\n  * Special configuration:\r\n\r\n### Step 2: Describe the problem:\r\nI have created a new zite. Ever since updating to latest version of ZeroNet and creating this new zite, I am not able to get the database to work - it says no database found even though I have the dbschema file. However: Zites that were on my computer prior to updating ZeroNet still work (still show the database file in the database field).\r\n\r\nWhen clicking the Reload button, this error message appears:\r\n![image](https://user-images.githubusercontent.com/4098042/36464400-3901d00a-1695-11e8-817d-4defd5fa2865.png)\r\n\r\nAlso, for this new zite, sometimes when opening the sidebar, it is completely blank and the problem persists among refreshes. I am only able to get it to appear after I have restarted ZeroNet. However, with other zites, none of this happens.\r\n\r\nSomething to Note: I'm not 100% sure that this is due to an update, or even the latest update. I have only noticed this problem just after I have updated. It's possible that the problem could be due to something else completely different.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Update ZeroNet to Latest version\r\n  2. Create New Zite\r\n  3. Add dbschema file\r\n\r\n#### Observed Results:\r\nDescribed above\r\n\r\n#### Expected Results:\r\n\r\n  * What did you expect to happen?\r\nSidebar shows up, database recognized.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1519180099, "modified": 1519217486, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1294", "source_type": "github"}, {"topic_id": 1604066530, "title": "Ideas on How Zeronet Could Improve", "body": "Note: Many of these have been mentioned by other people.\r\n\r\n* Performance\r\n  - Starting up ZeroNet after being off of it for months is very painful! Not only does it take a long time to download stuff (which may not be able to be improved, not sure on that), but you can't visit any zite that accesses a database because the loading of all the other databases blocks it.\r\n  - ZeroNet needs multi-threading and parallelization\r\n  - ZeroNet needs to prioritize the downloading of files of the zite you are *currently looking at*, not sure how possible this is.\r\n  - Ability for dev to set the files that should be prioritized to download as early as possible before other files. I would like the index html file and the main js file to be downloaded before images, etc. - not sure how possible or realistic this is.\r\n* Backing up the files you're seeding and your zites easily.\r\n  - The Download Zite as Zip File feature helps quite a bit with this, but it still needs to be improved\r\n  - A zite where you can select all of the zites you want to download zips of that way you don't have to manually go to each and every zite\r\n  - Move user's files (aside from data files) to one location so that you can actually use them outside of ZeroNet, reduce duplications, etc.\r\n* ID's\r\n  - It might be good to provide a way to backup or somehow sync your users.json file between multiple clients. However, not sure how this would be done *securely*\r\n  - Allow multiple id's from same provider so that all of them are listed when selecting a user.\r\n* Documentation, Tutorials, Tour of ZeroNet\r\n* Better Android client\r\n\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1526449901, "modified": 1534804984, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1423", "source_type": "github"}, {"topic_id": 1604066537, "title": "ZeroNet Bundle (from zeronet.io website) Fatal Error", "body": "After downloading the zip file and extracting it, clicking on the ZeroNet.exe file for the first time will show a dialog that says \"Failed to execute script boot\", with the title \"Fatal Error!\".", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1526671909, "modified": 1526763502, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1428", "source_type": "github"}, {"topic_id": 1604066539, "title": "ZeroNet Exe Installer for Windows", "body": "**Update:** [Download New Installer](https://github.com/krixano/ZeroNet-Windows-Exe-Installer/releases) and [Repo](https://github.com/krixano/ZeroNet-Windows-Exe-Installer)\r\n\r\n---\r\n\r\nI have created a very simple msi installer that will put the ZeroNet files (from ZeroNet Windows Bundle on zeronet.io website) into a ZeroNet folder in Program Files (you can specify a different directory also) and create start menu shortcut for the main ZeroNet.exe file, the data directory, and the other executables (openssl, tor, meed-client, etc). It will also put a ZeroNet shortcut on desktop, and allow uninstallation from Control Panel.\r\n\r\nAs stated in issue #1428, I had to make the exe and shortcuts only run as Administrator, otherwise I get a Fatal Error message box saying \"Failed to execute script boot\"\r\n\r\nThe MSI file is in the linked zip file (GitHub doesn't support uploading msi files to issue apparently).\r\n[ZeroNet_MSI.zip](https://github.com/HelloZeroNet/ZeroNet/files/2018890/ZeroNet_MSI.zip)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1526676206, "modified": 1561301154, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429", "source_type": "github"}, {"topic_id": 1604066559, "title": "Download as Zip Not Working Correctly (rev3470, Windows 10, Firefox)", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.6.2 rev3470\r\n  * Operating system: Windows 10 Insider build 17672\r\n  * Web browser: Firefox\r\n  * Tor status: Error (actively refused)\r\n  * Opened port: yes\r\n  * Special configuration: None\r\n\r\n### Step 2: Describe the problem:\r\n\r\nClicking Download as Zip in sidebar of a zite (I only tested this with ZeroTalk at the time) will download the zip. However, opening the zip with Windows Explorer will give the error \"Windows cannot open the folder. The compressed (zipped) folder [name of file here] is invalid.\". Furthermore, opening it in 7zip will only show the content.json file (even though the size of the zip file is shown to be 15MB).\r\n\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1527820925, "modified": 1528043893, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1443", "source_type": "github"}, {"topic_id": 1604066569, "title": "[Ready to be Merged] BackgroundProcessing", "body": "Since Git Center is away from ZeroNet at the moment, I believe he wanted someone to create a pull request for this BackgroundProcessing plugin, since he says it is now finished.\r\n\r\nI haven't tested this yet, but I assume @imachug has.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1528554288, "modified": 1575391029, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451", "source_type": "github"}, {"topic_id": 1604066582, "title": "Feature: Splitting User files from Zite files/Data directory", "body": "I originally thought about this idea because of my ZeroNet Windows Installer. I wanted to be able to install ZeroNet globally (for all users). But the problem is that all users on Windows would share the same user files (and only being able to have one of each id provider makes this more problematic). The other options are to use the multiuser plugin, which I personally don't think is very good, or installing per user, which would mean many zites would be duplicated per user on the computer.\r\n\r\nSo, I propose that we move the user files (users.json and the other one, is it sites.json?) out of the data directory and allow specifying a directory where ZeroNet can find them in the zeroconf file. This would allow multiple users to specify their own user files. Note that I'm not sure if this is already possible.\r\n\r\nKinda-Problems:\r\n* mutes.json would probably have to be global.\r\n* Downloaded and pinned (optional) files would be global and not user-specific, but I don't think this is really much of a problem.\r\n* Not sure how this would involve the multiuser plugin (if you'd have to change it, etc.)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1529583388, "modified": 1529583688, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1460", "source_type": "github"}, {"topic_id": 1604066877, "title": "Add \"allow-presentation\" to iframe", "body": "Allows zites to use the Presentation API", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1538949710, "modified": 1538977736, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1693", "source_type": "github"}, {"topic_id": 1604066925, "title": "Rebuilding Database in 0.6.4", "body": "### Environment\r\n\r\n  * ZeroNet version: 0.6.4 rev3670\r\n  * Operating system: Linux (Solus OS)\r\n  * Web browser: Chrome\r\n  * Tor status: not available\r\n  * Opened port: yes\r\n  * Special configuration: PeerMessage and BackgroundProcessing plugins\r\n\r\n### The Problem:\r\nAfter editing dbschema.json for KxoVid, pressing the \"Rebuild\" button for the db in the sidebar results in the following error. I have check that the json is valid using jsonlint.com.\r\n\r\n> Internal error: NameError: global name 'Debug' is not defined\r\nUiWebsocket.py line 81 > UiWebsocket.py line 267 > SidebarPlugin.py line 750 > SiteStorage.py line 82 > Db.py line 219", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1540006213, "modified": 1540030851, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1729", "source_type": "github"}, {"topic_id": 1604066927, "title": "Import Debug in Db/Db.py", "body": "Previously, when I made a mistake in my dbschema.json file, rebuilding resulted in this error:\r\n> Internal error: NameError: global name 'Debug' is not defined\r\nUiWebsocket.py line 81 > UiWebsocket.py line 267 > SidebarPlugin.py line 750 > SiteStorage.py line 82 > Db.py line 219\r\n\r\nThis is the proposed fix by @imachug ", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1540008003, "modified": 1540031907, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1730", "source_type": "github"}, {"topic_id": 1604067528, "title": "English Grammar Fix: Change \"Forgot\" to \"Forget\" in Sidebar", "body": "In the sidebar, the correct English grammar is \"Forget\" - It's a command in Present tense telling the user that when they click on that link, the site will *Forget* the private key.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1568813345, "modified": 1568818194, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2202", "source_type": "github"}, {"topic_id": 1604067531, "title": "Feature Proposal: Domainlists (DNS Systems Topic)", "body": "Ok, so there's been quite a bit of talk on how Domain Names should be handled by ZeroNet. Some people say to stick with Namecoin blockchain. Some people don't like Namecoin. Some people think we shouldn't be using domains in the first place and that we should stick to addresses only. Some want HTTP(S) DNS systems (and other dns systems) to work and be enabled by default, some don't. And some want to create a new blockchain.\r\n\r\nNow... blockchains usually require money to pay for the domain. Then there's the issue of whether you own the domain forever (which could result in lots of domains pointing to expired/outdated sites) or for a limited amount of time (which could result in someone stealing your domain). Then there's the problem of how people access this blockchain... does someone replicate the database of domains to a zite (e.g. ZeroName)? Do we require all users to have the blockchain downloaded? etc.... Personally, I don't like the blockchain system.\r\n\r\nThen... there's traditional decentralized (it's really more like federated) DNS. This greatly increases centralization and there's the problem of determining which DNS servers are trustworthy, etc...\r\n\r\nThere's also ivanq's new Name.Yo which is a centralized solution maintained by ivanq/imachug/gitcenter and is optional by default. Imo, this is the closest to the idea that I have... because anyone can create their own centralized dns \"service\" and anybody can opt into any one. One problem... people who want to register domains for the maximum amount of users now have to register at a lot of different \"services\".\r\n\r\nThe solution that I thought of is not perfect, and it has been thought about before. It is a very simple solution. It relies around the idea that **your own computer is the most trustworthy of clients to yourself.**\r\nBy taking this central idea, we already have something that meets this... the relatively new Blocklists feature.\r\n\r\nSo, I propose a new **Domainlists** feature that will act like blocklists, but instead of blocking zites or users, it will be a list of domain mappings. A person can create their own domainlist for themselves, they can share this domainlist with others, or they can enable somebody else's domainlist (or they can do all three!).\r\n\r\nAnd a zite that would make it easier to handle all of this would be relatively easy to create... it's about 75% the same as what my KxoBlock zite does right now.\r\n\r\n#2189 #2049 #2087 #1696 #104 ", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1568982497, "modified": 1571470217, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204", "source_type": "github"}, {"topic_id": 1604067533, "title": "Feature Proposal: Data Validation", "body": "Currently validation of data usually happens in the browser to validate additions to the db before it's added to the appropriate data files - for example, ensuring that a title is not blank. But, a person can very easily get around this by directly modifying the files.\r\n\r\nSo... what if we moved the validation from before the data-file modification to *after* the updates to the data files are received to the other peers? Currently, ZeroNet already does something like this for filenames and ids via the content.json file (permissions).\r\n\r\nSo, I propose that we add a new data validation system where all updates to data files are checked on all clients to ensure the data is validated, and if it is not, then the update is not accepted.\r\n\r\nAnd example of how this could be implemented for the data files that would go into the database is something like this, in the dbschema file:\r\n\r\n```json\r\n{\r\n    \"db_name\": \"KxoBlock\",\r\n    \"db_file\": \"data/KxoBlock.db\",\r\n    \"version\": 2,\r\n    \"maps\": {\r\n        \"users/.+/data.json\": {\r\n            \"to_table\": [\"blocklists\"]\r\n        },\r\n        \"users/.+/content.json\": {\r\n            \"to_json_table\": [\"cert_user_id\"],\r\n            \"file_name\": \"data.json\"\r\n        }\r\n    },\r\n    \"tables\": {\r\n        \"json\": {\r\n\t\t    \"cols\": [\r\n\t\t        [\"json_id\", \"INTEGER PRIMARY KEY AUTOINCREMENT\"],\r\n\t\t        [\"directory\", \"TEXT\", \"directory\"],\r\n\t\t        [\"file_name\", \"TEXT\", \"file\"],\r\n\t\t        [\"cert_user_id\", \"TEXT\"]\r\n\t\t    ],\r\n\t\t    \"indexes\": [\"CREATE UNIQUE INDEX path ON json(directory, file_name)\"],\r\n\t\t    \"schema_changed\": 6\r\n        },\r\n        \"blocklists\": {\r\n            \"cols\": [\r\n                [\"blocklist_id\", \"INTEGER\"],\r\n                [\"title\", \"TEXT\", \"required|max:255\"],\r\n                [\"description\", \"TEXT\", \"required\"],\r\n                [\"type\", \"TEXT\", \"in:zites,users,both\"],\r\n                [\"file\", \"TEXT\", \"ends_with:json|file\"],\r\n                [\"tags\", \"TEXT\"],\r\n\t\t[\"zite\", \"TEXT\", \"url\"],\r\n\t\t[\"logo\", \"TEXT\", \"image\"],\r\n                [\"date_updated\", \"INTEGER\"],\r\n                [\"date_added\", \"INTEGER\"],\r\n                [\"json_id\", \"INTEGER REFERENCES json (json_id)\"]\r\n            ],\r\n            \"indexes\": [\"CREATE UNIQUE INDEX blocklists_index ON blocklists(json_id, blocklist_id)\", \"CREATE INDEX blocklist_id_title ON blocklists(blocklist_id, title)\", \"CREATE INDEX blocklist_id_file ON blocklists(blocklist_id, file)\", \"CREATE INDEX blocklist_tags ON blocklists(blocklist_id, tags)\"],\r\n            \"schema_changed\": 6\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAs you can see, each column array accepts a third argument which is a string of all validation rules delimited by `|`. I based this on how Laravel's system works: https://laravel.com/docs/6.x/validation\r\n\r\nYou can see a list of all the rules of validation that Laravel supports: https://laravel.com/docs/6.x/validation#available-validation-rules\r\nI've used some rules that laravel doesn't have, like \"file\" and \"directory\". Obviously we don't need to *completely* follow everything that Laravel has, but it offers a pretty good set to base our system off of.\r\n\r\nThe other problem is if we only implement this in the dbschema file... then we can only validate data files that are connected to the db... but we might want to validate other json files or other files in general.\r\n\r\nI got this idea from a person who commented on issue #2204 and from PeerMessage which actually has something exactly like this - it can filter messages based on the content of the message.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1569095969, "modified": 1569136682, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2205", "source_type": "github"}, {"topic_id": 1604067592, "title": "Fonts don't work in Tor Browser", "body": "Gettings CORS error because Tor thinks the font is from a different origin. If you look at the request headers, you'll see that origin is null.\r\n\r\n![Screenshot from 2019-10-26 18-56-41](https://user-images.githubusercontent.com/4098042/67627485-f2f17e00-f822-11e9-8274-2752ac7c453d.png)\r\n-----\r\n![Screenshot from 2019-10-26 18-59-40](https://user-images.githubusercontent.com/4098042/67627486-f422ab00-f822-11e9-8171-8203df71f4d4.png)\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1572123664, "modified": 1572267727, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2249", "source_type": "github"}, {"topic_id": 1604067617, "title": "Fixing Licensing Issues", "body": "Ok, so first we have our license violations. All of these have a license that's currently incompatible with ZeroNet's GPLv2 License:\r\n* Sidebar/media_globe/globe.js - Apache 2\r\n* pyelliptic - GPLv3\r\n* msgpack - Apache 2\r\n* rsa - Apache 2\r\n* gevent websocket - Apache 2\r\n* bencode.py - BitTorrent License\r\n* Coincurve - Apache 2\r\n* python-bitcoinlib\r\n\r\nNow... I propose 2 steps that will solve all of this:\r\n1. Switch to GPLv3 license. This will allow for pyelliptic, python-bitcoinlib, and all Apache 2 licensed-libraries being used (Apache 2 is not compatible with GPLv2, but *is* compatible with GPLv3)\r\n2. Switch out bencode.py for an alternative that @imachug  has *just* published to PyPi - https://pypi.org/project/bencode-open/\r\n\r\nIf you don't wish to change to GPLv3, then we need to find a way to replace all of the 8 libraries above, **or** we can switch out pyelliptic and python-bitcoinlib for an alternative and find a new license that is compatible with Apache 2.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1572709766, "modified": 1584442281, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269", "source_type": "github"}, {"topic_id": 1604067639, "title": "Block Antifa - He's a Spammer", "body": "Antifa/Hacktivist (his previous 4 accounts had the name \"Hacktivist\") has called multiple people \"Polish\". Someone else in #2269 also noted that he's able to respond 24/7, which is interesting.\r\n\r\nAdditionally, he is harassing everyone here and spamming issues and posts. I know I'd appreciate it if you just blocked him from the repo, because he's been doing this for over a week now and I'm just about fed up with it.\r\n\r\n#2273 #2276 ", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1572874089, "modified": 1572875011, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2283", "source_type": "github"}]}