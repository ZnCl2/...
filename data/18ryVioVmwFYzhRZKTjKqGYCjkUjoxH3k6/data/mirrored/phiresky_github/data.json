{"cert_user_id": "phiresky@github", "next_comment_id": 5, "comment": {"1604065299_mirrored_Tomas-M_github": [{"comment_id": 1, "body": "I think this should be reconsidered because it would further reduce the entry barrier for accessing decentralized websites from \"download, extract, execute\" to \"click on this link\".\n\n> Not possible to create sandboxed iframe enviroment (cross-origin scripting problems)\n> You private key would need to be stored by the browser, so any site you visit would able to access it\n> File storage problems (max storage size per site origin)\n\nAs far as I can tell you could do the following: Create two subdomains: `gate.zeronet.io` and `webrtcclient.zeronet.io`\n\nSites can be accessed using e.g. `gate.zeronet.io/#/ZeroNetwork.bit`.\n\nOn `gate.zeronet.io`, create an iframe containing `webrtcclient.zeronet.io`, which contains a port of the python client, stores the database (locally), has the secret keys and communicates with other clients using WebRTC. WebRTC support would then need to be added to the python client as well so they can interoperate. [Webtorrent](https://webtorrent.io/) is a good example of this already working.\n\nThen replicate the API currently accessed via WebSocket through the iframe via [cross-document communication (window.postMessage)](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage).\n\n> No SQL support\n\nMost browser support [IndexedDB](https://developer.mozilla.org/de/docs/IndexedDB) which can be used to store multiple gigabytes of data (up to some % of the available disk storage in chrome AFAIR) \n\nThe data files could also be stored using IndexedDB or using the [Filesystem API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_API) / [a polyfill](https://github.com/ebidel/idb.filesystem.js?files=1) for that.\nThere is also a [sqlite \"port\" to Javascript](https://github.com/kripken/sql.js/) which [should be possible to persist](https://github.com/kripken/sql.js/issues/78) also using IndexedDB. \n\n> No support for non-web content (eg. github repository)\n\nI think the priority here should be web content, but it should also be possible to implement download of arbitrary data (e.g. as a zip)\n\n> You would need to keep an open browser tab for every site you seeding\n\nYou would probably need to keep at least one tab open containing `webrtcclient.zeronet.io` yes, though Browsers have been starting to add functionality to do stuff as a website _without actually having the website open_, see [Service Workers](http://www.html5rocks.com/en/tutorials/service-worker/introduction/), [Push API](https://developer.mozilla.org/en-US/docs/Web/API/Push_API)\n\n> WebRTC is created for small number of clients videochat system, not suitable to handling 100s of connections\n\nNot sure about scalability, I couldn't find anything about WebRTC max connections right now. A fairly large problem might be not being able to use UPNP port mapping, but WebRTC has NAT traversal integrated.\n\nAnother is sending of large data cross domain.. not sure if thats possible without passing blobs via `postMessage` which might be too slow. An alternative would be to use a wildcard subdomain and access pages using `zeronetwork.bit.gate.zeronet.io`, then every site can have its own database.\n\n> Tor connection not possible (Around 50% of ZeroNet clients using Tor)\n\nProbably, I don't have any ideas about that.\n\nI just found ZeroNet, so I'm sorry if I misunderstood something about how it works.\n", "added": 1469164164, "modified": 1469164164, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/449#issuecomment-234481107", "source_type": "github"}, {"comment_id": 2, "body": "Maybe this issue should be reopened?\r\n\r\nI don't think targeting a Chrome extension would be the right approach here. That immediately binds to it to some extension API and thus to one browser. And every user would still need to install a Chrome extension. I wouldn't press install if someone sends me a random link, and that would be my goal for this; to be able to send links to websites that are viewable to almost everyone, instantly, and while still 95% decentralized.\r\n\r\nYou don't need to be an extension to get sandboxing for storing private keys or for storing data on disk. The only weak point I can think of is the https CA system. \r\n\r\nYou could still publish a thin extension for parsing .bit domains and similar; and to verify the integrity of ZeroNet links to prevent the domain/CA system from compromising decentralization.\r\n\r\nNot sure why every one here seems to be of the opinion that WebRTC sucks? The only problem I can see is that it does not support UPNP Port forwarding; but it has NAT port punching integrated. https://webtorrent.io/ opens >10 real peer to peer connections in less than 3 seconds for me and downloads 100MB from those in 30 seconds.\r\n", "added": 1480513145, "modified": 1480513145, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/449#issuecomment-263923757", "source_type": "github"}, {"comment_id": 3, "body": "> it downloads the video from https://webtorrent.io/torrents/sintel-1024-surround.mp4 and the webtorrent.io tab currently using 250MB of ram\r\n\r\nOkay, I guess I never tested it on a slower machine. But I don't think 250MB is bad, considering it has to keep at least 130MB of video in RAM.\r\n\r\nYeah, thats because that URL is a webseed. It did download 2MB (in 60KB chunks) from that URL for me too, but the remaining 128 MB were downloaded from peers. (not shown in Chrome Dev tools)\r\n\r\n> Also webrtc connections not fully p2p, you need to contact to google (or someone) before create connection to anyone\r\n\r\nWell yes, but thats just bootstrapping right? You need that with every other method too, you can't just port scan the entire internet.\r\n\r\nI'm not sure about this (have not tried it), but at least from how I understand it, you can get the peer description JSON via any channel. So you *can* connect to peers you get from other peers without ever going through a central server, once you have the initial connection to some peer.", "added": 1480525252, "modified": 1480525252, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/449#issuecomment-263978817", "source_type": "github"}, {"comment_id": 4, "body": "> I have i5 6600k (skylake) CPU, so it's not so slow. The GPU is running in separate process, so it's not includes that (if I open https://webtorrent.io/torrents/sintel-1024-surround.mp4 in a tab its displays 15MB)\r\n\r\nTrue, but it still needs to keep it in JS memory to be able to seed it or receive bits that it doesn't have yet.\r\n\r\n> No, it's not for bootstrapping (getting peer ips), but the both party need to connect to the STUN server every time before they want create new connection with eachother.\r\n\r\nAccording to this: https://github.com/cjb/serverless-webrtc/ (warning: shitty demo, barely works)\r\nIt should work without a central server if you are able to send your peer a 4KB JSON and receive one in return through a different channel. The only thing you need is a STUN server connection once to get your own public IP and NAT configuration\r\n\r\nI might look into doing some experiments but don't hold your breath.", "added": 1480527175, "modified": 1480527175, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/449#issuecomment-263986903", "source_type": "github"}]}}