{"cert_user_id": "April93@github", "next_comment_id": 54, "comment": {"1604064913_mirrored_kseistrup_github": [{"comment_id": 1, "body": "I'm also interested in IPV6 support, to let ZeroNet run on cjdns/hyperboria. I might take a crack at it a bit later, but I honestly have no idea how involved it'd be. I'd personally be up for no trackers and just having bootstrap nodes/peer exchange if the issue is that trackers aren't ipv6. IIRC, as it stands zeronet can work even if you remove the trackers from the code, because it stores peer info. So it shouldn't be too difficult to migrate.", "added": 1493773547, "modified": 1493773547, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-298819000", "source_type": "github"}, {"comment_id": 2, "body": "Is this ready yet? How soon can we run it over cjdns? What all needs to be done?", "added": 1513839219, "modified": 1513839219, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-353308155", "source_type": "github"}, {"comment_id": 3, "body": "@DaniellMesquita well ZeroNet can already run over IPv4 mesh networks. To run over IPv6, last I checked it just needed to support the address format, and add in some IPv6 trackers (which some people listed above).\r\n\r\nShouldn't take long, but it's a matter of actually doing it.", "added": 1535152540, "modified": 1535152540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-415924707", "source_type": "github"}, {"comment_id": 4, "body": "@DaniellMesquita ZeroNet works on anything with IPv4 support. Just follow the bootstrapping instructions to set up a ZN-based tracker on your mesh. That's it. As for what mesh networks are ipv4.... I don't really know, sorry. I've been waiting on ipv6 support so I can use it with cjdns and hyperboria.\r\n\r\n>With IPv6, ZeroNet can support CJDNS/Hyperboria mesh networks.\r\n\r\nIndeed. That's why I'm eager for it.", "added": 1535467713, "modified": 1535467713, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-416679159", "source_type": "github"}, {"comment_id": 5, "body": "Any progress on this yet?\r\n\r\n@DaniellMesquita I'm able to connect to cjdns, but I don't have anyone routing through me.", "added": 1535946265, "modified": 1535946265, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-418016064", "source_type": "github"}, {"comment_id": 6, "body": "Anyone get cjdns ipv6 working? Still seems to be giving me problems.", "added": 1548020901, "modified": 1548020901, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-455918638", "source_type": "github"}, {"comment_id": 7, "body": "Yeah I noticed that it wasn't adding in my ipv6 trackers. I changed the setting in the configuration page and they popped up, but still don't connect. I feel like part of it is that I feel like I'm doing the bootstrapping thing wrong. I don't have regular ipv6 so I can't test the clearnet stuff. Which is what I assume it was added for.\r\n\r\nHaving cjdns working would be awesome.", "added": 1548021470, "modified": 1548021470, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-455919493", "source_type": "github"}, {"comment_id": 8, "body": "I believe that just enables ipv6 support so it does both ipv4 and ipv6. As opposed to just ipv4 which is the default.", "added": 1548053821, "modified": 1548053821, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-456013988", "source_type": "github"}, {"comment_id": 9, "body": "Just checked on my mac. Port is open for ipv4 as usual, says \"unsupported\" for ipv6. Switching the config page to ipv4 removes the ipv6 entries for the trackers, while ipv6 puts them there but fails to connect. The stats page lists `IP Network: ['ipv4'] | Opened: {'ipv4': True, 'ipv6': None}`.\r\n\r\nI **don't** have native ipv6, but I **do** have cjdns which runs as a native ipv6 interface (pointing my browser to an ipv6 address navigates there properly, for instance).\r\n\r\nI tried changing the hardcoded ipv6 test IP to a known cjdns hosted site that is up and put a log message for if ipv6 was indeed detected. Turns out that yes, the cjdns address worked fine for that hardcoded test (first line in isIpv6Supported function). However, even with this it still reported the port as closed, and I was unable to connect to myself as a tracker/bootstrapped node. So it's clear the connection method is proper (it detects that it can connect to the cjdns ip) but something is going wrong elsewhere. Perhaps I didn't set up my bootstrapper correctly? or a general incompatibility or messup somewhere else?\r\n\r\nEdit: If I use a cjdns address as the test address, and then set my tracker IP to be the ipv6 local host rather than my cjdns address, the tracker reporting screen says 50% with 2 requests and 0 errors. Working?", "added": 1548230615, "modified": 1548232196, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-456760919", "source_type": "github"}, {"comment_id": 10, "body": "cjdns ips will _only_ work if you're running cjdns. Likewise native ipv6 will _only_ work if you have native ipv6. What cjdns does is route it's own ips and connect using inbuilt ipv6 support.\r\n\r\nTL;DR:\r\nIf you only have cjdns you can only connect to cjdns ips.\r\nIf you only have native ipv6 you can only connect to native ipv6 ips.\r\nIf you have both then you can connect to both.\r\n\r\nAs for the port check, yeah it needs some alternative way to check. As for tracker, shouldn't bootstrapping work?", "added": 1548240050, "modified": 1548240100, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-456804823", "source_type": "github"}, {"comment_id": 11, "body": ">I did (I have no native ipv6 support from my isp), but still getting timeout error.\r\n\r\nYou need to add a peer that's on hyperboria. I can give you info for that but I'm not at my pc right now. Just look up public cjdns peers and you should find some. The IP you used works for me. \r\n\r\n>It would, but right now the client only share the running tracker with other users if it has opened port. So if the port open check fails, then it won't share it by default.\r\n\r\nAh. Yeah that's an issue then. ", "added": 1548240685, "modified": 1548240685, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-456808223", "source_type": "github"}, {"comment_id": 12, "body": "Here's a public cjdns peer:\r\n```\r\n\"198.58.100.240:22237\": {\r\n                       \"login\": \"default-login\",\r\n                       \"password\":\"pqr5brz16vzzu6vhjuj7tv3n078kr5f\",\r\n                       \"publicKey\":\"ubbtkp0txwjh44v8kkznvhjqqwr1hd2jzv5ms9zlkfk25svxvtg0.k\",\r\n                       \"peerName\":\"trnsz\"\r\n                    },\r\n```", "added": 1548266295, "modified": 1548266295, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-456963441", "source_type": "github"}, {"comment_id": 13, "body": ">Note: Why I need to provide an fixed IP address? That makes it centralized\r\n\r\nYou need an ip address to peer in cjdns just as you need an ip address to peer in zeronet. The method used to label your peer in cjdns doesn't need to be centralized. Ideally you'd have many peers, not just one.\r\n\r\n>To notice, I'm moving to Yggdrasil, so I'll report how it is working through ZeroNet.\r\n@April93 how could I support both mesh networks?\r\n\r\nI'm not sure how you'd run both on your machine at once. Perhaps just run them? I don't know. For ZN once generic ipv6 support is in, then afaik yggdrasil should work fine as well.", "added": 1548294330, "modified": 1548294330, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-457065470", "source_type": "github"}, {"comment_id": 14, "body": "ZN seems to be accepting the cjdns ip fine now (setting the config option). Trying to connect to my own machine as a tracker still isn't working. With the cjdns ip it stays at 0%, while with the default 0:0:0etc one it fluctuates but ultimately fails.\r\n\r\nNot sure if I'm doing something wrong with the bootstrapping or i just need to connect to someone else.", "added": 1548461952, "modified": 1548461952, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-457796865", "source_type": "github"}, {"comment_id": 15, "body": "If your node querying is cjdns-only and can't find peers, then the problem is that others aren't using cjdns, yeah? If you share your tracker others can help test :)", "added": 1548462627, "modified": 1548462627, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-457797549", "source_type": "github"}, {"comment_id": 16, "body": "It looks like the ipv6 you provided isn't a cjdns ip, so cjdns peers can't connect to it. I don't know about yggdrasil or native ipv6 as I don't have either of those.\r\n\r\nThe zerohello page definitely cuts off the text of the ipv6 addresses, but it clearly still functions (being detected elsewhere fine). I don't think that impairs anything other than visuals.", "added": 1548464097, "modified": 1548464097, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-457799098", "source_type": "github"}, {"comment_id": 17, "body": "Great. Looks like it's connecting fine!\r\n\r\n![screen shot 2019-01-25 at 8 08 58 pm](https://user-images.githubusercontent.com/27911816/51782449-52c4c800-20dd-11e9-95a7-a4b3aef6d423.png)\r\n\r\nEdit: There doesn't seem to be any peers besides me haha.", "added": 1548465100, "modified": 1548465605, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-457800047", "source_type": "github"}, {"comment_id": 18, "body": "Yeah it's working great. This can be closed now.", "added": 1548912003, "modified": 1548912003, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-459256155", "source_type": "github"}], "1604065913_mirrored_ysc3839_github": [{"comment_id": 19, "body": "Just point `one.bit` to the same site that `two.bit` points to. I do this for kaffiene. `search.kaffie.bit`, `kaffiene.bit`, `zerosearch.bit` and `0search.bit` all work and point to the same address.", "added": 1496372929, "modified": 1496372929, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/926#issuecomment-305698491", "source_type": "github"}], "1604066025_mirrored_ImagicTheCat_github": [{"comment_id": 20, "body": ">Add a command set similar to merger site command, but only for read access and instead of get access to site types you requesting access to specific address.\r\n\r\nThis works. Just have a command to add a permission to read files from a particular site. So the flow would be something like: request permission to read site 1whatever -> remotefileget 1whatever inner_dir and read whatever file you need. Then repeat for other sites if you need to access them. The user would be notified of the cross-site access, and they could allow or deny particular requests.\r\n\r\n>Add an option to site's content.json that allow cross-site file access.\r\n\r\nI don't like this one. Having the site itself determine whether the files can be accessed does nothing to prevent malicious usage. For example, if many sites enable it (for whatever reason), then a malicious site could just fetch from all of them with no need for permissions. Defeating the entire point.\r\n\r\nUnless you meant the other way: the requesting site puts it in it's content.json. That'd work, but malicious sites could then just include it and continue on their way, and users would still be vulnerable.\r\n\r\nJust a permission to access X site, and then a command to be able to fetch *raw* (not formatted) files. I can see the need to fetch things like images, music, json/txt files, .db files, etc. Forcing a format limits functionality. ", "added": 1500269106, "modified": 1500269106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-315693939", "source_type": "github"}, {"comment_id": 21, "body": ">I agree that allowing all cross-site access with a single option is not the way, but instead you could have a list of accepted origins able to request the content. \r\n\r\nEh, I feel that's worse. It solves the problem of malicious sites, but then once again restricts things and removes user control. And given how few people would actually whitelist sites, it'd basically be what we have now. I like the permissions idea. It's literally already implemented. Just quickly write a command that takes such a permission. IMO, when in doubt, give control to the users.", "added": 1500286411, "modified": 1500286411, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-315751670", "source_type": "github"}, {"comment_id": 22, "body": "So basically:\r\n\r\n* Nothing whitelisted + no perms given = no access\r\n\r\n* Nothing whitelisted + perms given = access\r\n\r\n* Something whitelisted + no perms given = access\r\n\r\nLike that? I'm not sure I can imagine a case where whitelisting is needed or preferable, if the requesting site can just ask for permission. But I think it'd be welcome nonetheless. The more options the better.", "added": 1500287813, "modified": 1500287813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-315757595", "source_type": "github"}, {"comment_id": 23, "body": "Needing things whitelisted returns to the problem of uncooperative or dead websites. Unless the user has the option to override that?", "added": 1500449038, "modified": 1500449038, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-316341642", "source_type": "github"}, {"comment_id": 24, "body": "```\r\npage.cmd(\"corsPermission\", \"138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP\")\r\nvar db = null\r\nvar xhr = new XMLHttpRequest();\r\n  xhr.open('GET', '/kaffiene.bit/cors-138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/data/ZeroWiki.db', true);\r\n  xhr.responseType = 'arraybuffer';\r\n  xhr.onload = function(e) {\r\n    var uInt8Array = new Uint8Array(this.response);\r\n    db = new SQL.Database(uInt8Array);\r\n  };\r\n  xhr.send();\r\n```\r\n\r\nThis snippet still results in: \r\n\r\n```\r\nCross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://127.0.0.1:43110/kaffiene.bit/cors-138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/data/ZeroWiki.db. (Reason: CORS header \u2018Access-Control-Allow-Origin\u2019 missing).  (unknown)\r\n```\r\n\r\nEven when permission has been granted. Testing with fileget, I was able to grab a text-based file (README.md for instance). However, I'm unsure how I'd go about fetching the .db or any non-text file for my own parsing purposes. Upon further testing, I *cannot* fetch the readme file through XMLHttpRequest, due to CORS, even though I'm fetching from within the virtual directory after given permission.\r\n\r\nDoes fileget have an option to just fetch the raw file?\r\n\r\nEdit: Nevermind. Got it. Just change the parameters to be a dictionary and then use inner_path for the directory, and set format to base64. From there you can convert it to a uInt8Array using [this script.](https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js) Works great :D \r\n\r\n```\r\npage.cmd(\"corsPermission\", \"138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP\")\r\npage.cmd(\"fileGet\",\r\n     {\r\n        \"inner_path\": 'cors-138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/data/ZeroWiki.db',\r\n        \"format\": 'base64'\r\n      }, function(data) {\r\n    var uInt8Array = new Uint8Array(Base64Binary.decodeArrayBuffer(data));\r\n}\r\n```", "added": 1500496044, "modified": 1500499474, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-316549806", "source_type": "github"}], "1604066310_mirrored_April93_github": [{"comment_id": 25, "body": "I'm not sure what the fix was for the config thing, but that went away eventually. The other error had an issue with this line in /src/ui/uirequest.py\r\n\r\n```\r\n exec(init, globals(), locals())\r\n```\r\n\r\nI changed it to:\r\n\r\n```\r\nexec init in globals(), locals()\r\n```\r\n\r\nAnd it worked fine. Is it due to an older python version? I'll have to look into updating.", "added": 1516416703, "modified": 1516416703, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1252#issuecomment-359148065", "source_type": "github"}, {"comment_id": 26, "body": "[Here's the stackoverflow page](https://stackoverflow.com/questions/4484872/why-doesnt-exec-work-in-a-function-with-a-subfunction) I read on how to 'fix' the problem. No idea what's going on tbh.", "added": 1516423402, "modified": 1516423402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1252#issuecomment-359153271", "source_type": "github"}, {"comment_id": 27, "body": "I tried updating to python 2.7.14 and it works fine without the fix.", "added": 1516424156, "modified": 1516424156, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1252#issuecomment-359153947", "source_type": "github"}, {"comment_id": 28, "body": "Unfortunately as I mentioned, I already updated my python version. I'm unsure of how to downgrade.", "added": 1516439581, "modified": 1516439581, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1252#issuecomment-359167107", "source_type": "github"}], "1604066365_mirrored_rllola_github": [{"comment_id": 29, "body": "It'd be nice to have urls finally standardized. I tried making some tools for the variety of methods people use: zero://, http://zero/, etc. Having something built in would be perfect.", "added": 1519975115, "modified": 1519975115, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1295#issuecomment-369882086", "source_type": "github"}, {"comment_id": 30, "body": "AFAIK replacing links doesn't really work that well, especially on dynamic sites and such that generate URLs through javascript. A few sites already do the adjustment, but it isn't clear what it adjusts and detects, making it even more of a pain.", "added": 1520066543, "modified": 1520066543, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1295#issuecomment-370141239", "source_type": "github"}, {"comment_id": 31, "body": "Well if it's built into zeronet itself it should be able to be selected to open with. That's how stuff is usually done. Kind of like how steam links open the page within steam itself.", "added": 1520504866, "modified": 1520504866, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1295#issuecomment-371486158", "source_type": "github"}], "1604066813_mirrored_DaniellMesquita_github": [{"comment_id": 32, "body": "No need to wait on IPv6 trackers anymore, since we have bootstrapping. Should be fairly quick to implement (just add in a third address type).", "added": 1536621491, "modified": 1536621491, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1589#issuecomment-420123618", "source_type": "github"}, {"comment_id": 33, "body": "@satoshisfriendz it's not implemented yet. So it's still an issue. Especially for Chinese users.", "added": 1536744866, "modified": 1536744866, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1589#issuecomment-420631456", "source_type": "github"}], "1604066739_mirrored_haschimoto_github": [{"comment_id": 34, "body": "AFAIK this was done intentionally. I think there's an option to enable it.", "added": 1536744962, "modified": 1536744962, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1590#issuecomment-420631898", "source_type": "github"}], "1604066768_mirrored_tangdou1_github": [{"comment_id": 35, "body": "I just added the changes to my build. I don't have native ipv6 support on my ISP/internet, but instead it should be running through cjdns. I'd really love to see this working. Anyone want to help test?", "added": 1536809166, "modified": 1536809166, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-420897704", "source_type": "github"}, {"comment_id": 36, "body": "@DaniellMesquita You need to connect to some peers. So you'll need to have some public peers to connect to. Here are some of the public nodes I have:\r\n\r\n```\r\n\"185.87.193.205:18842\": {\r\n                      \"publicKey\": \"7h898y2xdhtm9xgng7f97umx9wfjhkxfx2wkxw89mrq2y6k954d0.k\", \r\n                      \"password\": \"public-180613\", \r\n                      \"peerName\": \"h.ihc.cupivan.ru\"\r\n                    },\r\n                    \"50.31.112.231:5249\": { \"publicKey\": \"tghwsb26dvczp983358ssvyvyjnsb2jkrvl2j5u1p56066nl64f0.k\", \"password\": \"8l8hm1rzvn772bxl0d2gdrx1v6c5n4m\", \"peerName\": \"Jon Lane\", }, \r\n                    \"107.170.57.34:63472\":{\r\n                            \"contact\":\"code@ventricle.us\",\r\n                            \"gpg\":\"7FE895160E3314027CD3B5D37392CF088BB4345C\",\r\n                            \"location\":\"digitalocean nyc2\",\r\n                            \"login\":\"public-peer\",\r\n                            \"password\":\"ppm6j89mgvss7uvtntcd9scy6166mwb\",\r\n                            \"peerName\":\"cord.ventricle.us\",\r\n                            \"publicKey\":\"1xkf13m9r9h502yuffsq1cg13s5648bpxrtf2c3xcq1mlj893s90.k\"\r\n                    }\r\n```\r\n\r\nSo you can connect to the cjdns network. Once you can connect to http://[fc53:dcc5:e89d:9082:4097:6622:5e82:c654] you're good to go.\r\n\r\nI've hopefully got ZN running over cjdns, so all you'll need is to enable bootstrapping and provide the cjdns ipv6 for your machine, and add me as a peer (or perhaps we may be able to exchange our ipv6 through the ipv4 trackers)\r\n\r\nEither way, if you wanna give it a shot, this is my ipv6: `fcfc:34ca:f762:779f:9600:23d3:2ef9:c571` So what you'd want to use as a tracker is `zero://fcfc:34ca:f762:779f:9600:23d3:2ef9:c571`\r\n\r\nLet's give it a shot :). My laptop isn't running all day though, so if you can get a dedicated server running for it, that'd be much better.", "added": 1536880362, "modified": 1536880362, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-421208603", "source_type": "github"}, {"comment_id": 37, "body": "I have no idea how bootstrapping on ZN works. From a glance it looked like that to connect to such you'd just do `zero://[ipaddress]` which is what I did. I didn't mess with any ports or anything, my ZN stuff is all default, and my cjdns is default.\r\n\r\nPerhaps it'd be best if you tried to set up a boostrapper node/tracker?", "added": 1536881930, "modified": 1536881930, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-421212603", "source_type": "github"}, {"comment_id": 38, "body": "@tangdou1 would it be possible to add support?", "added": 1536919733, "modified": 1536919733, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-421352954", "source_type": "github"}, {"comment_id": 39, "body": "Certainly the bootstrapper plugin needs to be modified? I see references to ip4 and onion in there, but from the changes here I don't see any to it.", "added": 1536965589, "modified": 1536965589, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-421522348", "source_type": "github"}, {"comment_id": 40, "body": "Makes sense. Now I just need someone else running cjdns and this code to help me test.", "added": 1536999329, "modified": 1536999329, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-421553646", "source_type": "github"}, {"comment_id": 41, "body": "CJDNS generates a localhost ipv6 for your machine, and then routes ipv6 traffic through cjdns. This is why it's different from a native/regular ipv6 connection (which would use the full spectrum of IPs). And to answer @DaniellMesquita, the only way to have a normal ipv6 (rather than going through cjdns) is to set up your router and contact your ISP properly so that you may be assigned one. That's part of the reason why cjdns is such a big deal, as it allows people to have an ipv6 address without needing to go through an authority.", "added": 1537067035, "modified": 1537067035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-421705568", "source_type": "github"}, {"comment_id": 42, "body": "@andrewheadricke If you're referring to the one I explicitly said was my laptop's ipv6, the reason you failed to connect was because my laptop was off all day since I was doing a movie marathon with my family. The other ipv6 I provided isn't a zeronet node whatsoever, but instead just a random site on cjdns/hyperboria so you can ensure you're connected to the network. I should be online now for a few hours maybe, so feel free to try.\r\n\r\nAs for the ip4/onion thing in the bootstrapper plugin, I already asked about that, read the earlier conversation. What I've been doing is enabling the bootstrapper plugin, using `--external_ip` and set it to my ipv6. And then adding the relevant zero://[ipv6] info to the /Config page.\r\n\r\nI haven't changed any of my ports or whatever, so it should indeed be 15441 for mine.", "added": 1537156032, "modified": 1537156032, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-421905847", "source_type": "github"}, {"comment_id": 43, "body": "You can't connect to meshes that cjdns if you don't use cjdns. You also can't route traffic properly without it. Regular ipv6 will not work, and cannot replicate the features of cjdns we're after. It's not about accessing ipv6 peers. It's about going through the cjdns overlay network. Replicating cjdns features in zn would be very difficult and way out of scope. Similar to why zn doesn't replicate tor features and instead routes through tor. ", "added": 1538681743, "modified": 1538681829, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1592#issuecomment-427191545", "source_type": "github"}], "1604066831_mirrored_tangdou1_github": [{"comment_id": 44, "body": ">http://ipv6.tracker.harry.lu:80/announce isn't working.\r\n\r\nThat's because you don't have ipv6. Cjdns alone won't connect you to that tracker.\r\n\r\n>but as for CJDNS, I've looked around and hadn't found prebuilt APKs.\r\n\r\nAFAIK there's no apk. ", "added": 1538576097, "modified": 1538576097, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-426720588", "source_type": "github"}], "1604066946_mirrored_DaniellMesquita_github": [{"comment_id": 45, "body": "Would be exciting, but ultimately the first step is getting it to actually run. And so far I haven't seen that yet.", "added": 1538090937, "modified": 1538090937, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1666#issuecomment-425300955", "source_type": "github"}], "1604067458_mirrored_DaniellMesquita_github": [{"comment_id": 46, "body": "> it should change the links automatically based on the host you are using to access the client.\r\n\r\nDoes this apply in all cases? Or only when users write 127.0.0.1:43110? For example my navbar usually shows something like: http://domainname.bit/ or http://zero/domainnameoraddress. Will it autochange these links for people or do I have to keep editing it by hand?", "added": 1565422165, "modified": 1565422165, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2017#issuecomment-520138028", "source_type": "github"}], "1604067303_mirrored_mx5kevin_github": [{"comment_id": 47, "body": "\\>change the entire structure of zeronet to add in cryptocurrency and forcefully putting files on peoples' computer without their consent\r\n\r\nlolno", "added": 1565416184, "modified": 1565416184, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2039#issuecomment-520131653", "source_type": "github"}], "1604067422_mirrored_Guedez_github": [{"comment_id": 48, "body": ">If a troll starts spamming a chat, that enables images, with child pornography, your computer will download and host those images, no?\r\n\r\nYes and no. Yes if the site includes images that are included as a regular post or if you are viewing the site and it doesn't have a \"click to view\" type system. But if the site is structured like zerome, where images are optional files, and you don't auto-view them without clicking on them, your computer will not automatically download them unless you click on them. It's a per-site thing, so basically you just want to be careful what you click on.\r\n\r\n>Could it be possible to enable some fractional image mode? Where your computer never saves a whole image, so no matter what's posted, you never host a whole image, so you are never \"hosting child porn\".\r\n\r\nAFAIK this isn't possible with the zeronet framework. When you post something you're the only one originally hosting it. And then others fetch it from you when they view it. When you view an image, it downloads the entire image, just as other forms of the web do. As you can't actually display something on your computer without downloading it. Normally this is done in the background and is called a \"cache\". What you're talking about is something other p2p webs do, where they divide up a file between multiple \"always online\" users, and then reconstruct it in the cache upon viewing, and then removing it when stopped looking at it. ZeroNet isn't built to handle files in this way, and doing that would remove the ability for zeronet to work seamlessly offline+online+meshes.\r\n\r\nSimply running zeronet itself *will not* download anything you do not wish to see. ZeroNet does not automatically download anything. If you visit a site, it will download the site, regardless of what's on it. Sites can have \"optional files\" which aren't downloaded until you request the file (by visiting the url or having a page fetch that file/url). You can delete and/or stop seeding both sites and their optional files.\r\n\r\nSo some examples of sites with images:\r\n\r\nZeroMe: Has image uploading features. When you visit zerome you will not have any content on it. You then download hubs. Hubs will have text posts and usually have optional image files. The optional files are only loaded when you directly visit the link, or click on a blurred image on the site. It will then download the image.\r\n\r\n0chan: I'm not sure if 0chan uses optional files, but from my experience the chans don't have the same \"click to view\" feature that zeronet does. Meaning that if you load one of the pages with an image, it downloads the image automatically. If they aren't using optional files, if you have the site downloaded, it will automatically fetch new images uploaded to the site.\r\n\r\nSo you have:\r\n\r\nSite with no base images, but click-to-view optional files: No problem with these. You can browse the site freely and just avoid clicking on unknown or known pedophilic images. If you do click on one, you can delete it and move on.\r\n\r\nSites with no base images, but optional files that load as you see them: Slight problem as you auto-download the images you end up seeing. So you know if you downloaded something not so good like cp. You can delete the optional files and move on.\r\n\r\nSites with base images that are not optional: These are usually blogs. Simply having the site downloaded will auto-fetch any new content posted on it, including the images. Even if you didn't yet look at the content. Deleting the site will delete the content. IIRC the chans may fall into this category. or the one above?", "added": 1565401968, "modified": 1565401968, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2133#issuecomment-520117998", "source_type": "github"}, {"comment_id": 49, "body": "> On 08chan and Millchan, before opening any boards, you can click on \"options\" on the upper left, and set \"images preview: 0\"\r\n> On this way, if you open a board, still images will not be pre-loaded.\r\n\r\nI know on millchan thumbnails are optional files. But is the same true for 08chan? Last time I checked this wasn't true.\r\n\r\n> So without opening/clicking any boards that may contain cp images, I've looked to the data folder of the website, and the folder board that may contain those images.\r\n> \r\n> The folder had only the \"content.json\" and \"data.json\", no images. ( as I didn't open it)\r\n> \r\n> I saw instead images on other boards that I had open before.\r\n\r\nAFAIK 08chan has thumbnails that are *not* optional files, but has the full images which *are* optional files. Thus it'd download the thumbnails even when you don't look at them. This is why I avoid using the site. There's another site, the [millchan merger site](http://127.0.0.1:43110/17gCoQDCAAoQkzKRiajFNUAhnVD2gSNmuC/), which resolves this problem.", "added": 1566334113, "modified": 1566334113, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2133#issuecomment-523238260", "source_type": "github"}], "1604067423_mirrored_alphapeg_github": [{"comment_id": 50, "body": "You can see that you *are* connecting to the trackers, but don't have 100% connection to them. IE some packets are properly sending, others are failing. AFAIK that means it should still be working?", "added": 1565412740, "modified": 1565412740, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2134#issuecomment-520127949", "source_type": "github"}], "1604067545_mirrored_imachug_github": [{"comment_id": 51, "body": "I don't have any particular comments to make other than: ideally the resolution to the problem should get everyone on the same page, and allow for \"clean\" urls (no 127.0.0.1:port business in the nav bar).\r\n\r\nAs it stands I and others use a .pac file to redirect http://zero/address/, http://domainname.bit/, and http://name.zeroid/ addresses to their proper counterparts. I've attached the .pac file I use below (renamed to add a .txt extension to allow upload). something like: http://address.zeronet/ would work fine IMO, and if it works for direct addresses (not just domains) as well then that'd solve a lot of the linking problems. But if there's an extra step in setup, I'm not sure everyone would do it? That seems to be the problem right now.\r\n\r\nIE advanced users have no problem setting up the .pac and whatever else to allow links to work, but I always have to be careful to change it back to the native solution to ensure everyone can use the link. Any \"optional\" steps would still have that problem.\r\n\r\n[zeronet.pac](https://github.com/HelloZeroNet/ZeroNet/files/3536504/zeronet.pac.txt)\r\n", "added": 1566591088, "modified": 1566591088, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524489216", "source_type": "github"}], "1604067478_mirrored_April93_github": [{"comment_id": 52, "body": "This is the commit that caused it to break: \r\n\r\nhttps://github.com/HelloZeroNet/ZeroNet/commit/b871849df45cc5da9eff0ca780c0c8afe0e8a0cd#diff-7fa31802ec08bb55f5128c3e841b5f34\r\n\r\nThere doesn't appear to be a way to add regex for accepted hosts (namely http://zero/ and http://.\\*\\\\.bit but also http://.\\*\\\\.zeroid)", "added": 1566446558, "modified": 1566446558, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2172#issuecomment-523777229", "source_type": "github"}, {"comment_id": 53, "body": "I must have forgotten. This is a recent bug. The problem is that it's catching anything that isn't an IP address in the URL bar and throwing an error. Meaning *any* solution would break. What do you suggest as an alternative?", "added": 1566460041, "modified": 1566460041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2172#issuecomment-523852123", "source_type": "github"}]}, "next_topic_id": 3, "topic": [{"topic_id": 1604066310, "title": "Latest update fails to run on Mac", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: Latest (Version: 0.6.1 r3221 I think)\r\n  * Operating system: MacOS Sierra 10.12.6 (16G29)\r\n  * Web browser: Irrelevant. Though I normally use Firefox Nightly\r\n  * Tor status: Default setting\r\n  * Opened port: Either way, both fail.\r\n  * Special configuration: Nothing\r\n\r\n### Step 2: Describe the problem:\r\n\r\nZeroNet fails to start.\r\n```\r\nSyntaxError: unqualified exec is not allowed in function 'bench' it is a nested function (UiRequest.py, line 645)\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1516407113, "modified": 1516518061, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1252", "source_type": "github"}, {"topic_id": 1604067478, "title": "Ui.UiServer Error 403: Invalid origin", "body": "Origins other than localhost:43110 break the latest version of zeronet. Constant popups in the topright corner that says it disconnects/reconnects over and over. namely for http://domainname.bit and http://zero/address style urls. I'm using a .pac to redirect the urls which you can find here: http://127.0.0.1:43110/kaffie.bit/zeronet.pac\r\n\r\n```\r\n[23:40:34] Ui.UiServer Added 127.0.0.1:43110 as allowed host\r\n[23:40:34] Ui.UiServer Error 403: Invalid origin: http://talk.zeronetwork.bit\r\n[23:40:34] Ui.UiServer Error 403: Invalid origin: http://zero\r\n[23:40:34] Ui.UiServer Error 403: Invalid origin: http://zero\r\n```\r\n\r\nVersion: 0.7.0 r4188 w/ Python 3.7.3", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566445633, "modified": 1566533134, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2172", "source_type": "github"}]}