{"cert_user_id": "imachug@github", "next_comment_id": 1488, "comment": {"1604064808_mirrored_HelloZeroNet_github": [{"comment_id": 1, "body": "@HelloZeroNet Wondering if this can be closed.", "added": 1583248290, "modified": 1583248290, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/56#issuecomment-594090418", "source_type": "github"}], "1604064865_mirrored_HelloZeroNet_github": [{"comment_id": 2, "body": "@DaniellMesquita Did you just link from this issue to this very issue? ", "added": 1557739269, "modified": 1557739269, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-491799766", "source_type": "github"}, {"comment_id": 3, "body": "You parsed it wrong, not me. \"Just\" is used here as \"right now\", and \"this very\" means \"this issue, not anything else\" (google the meaning of \"very\" as an adjective). So, I said that you linked this issue to itself. ", "added": 1557824053, "modified": 1557824053, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-492205917", "source_type": "github"}], "1604064856_mirrored_n3r0-ch_github": [{"comment_id": 4, "body": "@ValdikSS Wait, would that mean that we could add A record pointing to 127.43.11.0 (for example) and visiting example.com would be smoothly handled by ZeroNet? Yayyyy! ", "added": 1569201283, "modified": 1569201283, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-533954683", "source_type": "github"}, {"comment_id": 5, "body": "@filips123 The idea is to switch from 127.0.0.1:43110 to 127.43.11.0:80.", "added": 1569237999, "modified": 1569237999, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534123311", "source_type": "github"}, {"comment_id": 6, "body": "I'm afraid DNSPython might not support that. I'd recommend just forking it.", "added": 1569334587, "modified": 1569334587, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534658270", "source_type": "github"}, {"comment_id": 7, "body": "Most likely. It'd be better if we could just override socket.socket with a Tor-compatible wrapper, though.", "added": 1569334743, "modified": 1569334749, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534659323", "source_type": "github"}, {"comment_id": 8, "body": "No, it's not AFAIK.\r\n\r\n```python\r\nself.sock = self.server.tor_manager.createSocket(self.ip, self.port)\r\n```", "added": 1569335127, "modified": 1569335161, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534662032", "source_type": "github"}, {"comment_id": 9, "body": "It's in `Config.config.tor`.", "added": 1569336406, "modified": 1569336406, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534671030", "source_type": "github"}, {"comment_id": 10, "body": "Wait... actually, I *think* it might work already -- just make sure to import dnspython after initialization, i.e. on demand.", "added": 1569336916, "modified": 1569336916, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534674685", "source_type": "github"}, {"comment_id": 11, "body": "Right, it's monkey-patched. Sorry for confusion.", "added": 1569337083, "modified": 1569337083, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534675915", "source_type": "github"}, {"comment_id": 12, "body": "Disabling DNS in some cases should *not* be considered at all. I can't check the code right now unfortunately but I'll try to fix it within a few hours.", "added": 1569418136, "modified": 1569418799, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535103505", "source_type": "github"}, {"comment_id": 13, "body": "Looks so (I actually had a similar problem with ICMP requests on Windows recently: you can't capture ICMP packets unless you are `NT AUTHORITY\\SYSTEM`).", "added": 1569421309, "modified": 1569421321, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535124857", "source_type": "github"}], "1604064916_mirrored_kseistrup_github": [{"comment_id": 14, "body": "Can we close this issue as we have #1773 already?", "added": 1561614642, "modified": 1561614642, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149#issuecomment-506255830", "source_type": "github"}], "1604064927_mirrored_ghost_github": [{"comment_id": 15, "body": "For those who are still searching for ZeroPaste: [NullPaste](http://127.0.0.1:43110/1MgHVPCE1ve6QfKrgsqCURzRj72HrRWioz/). And my alternative to JSFiddle/CodePen: [CodeR](http://127.0.0.1:43110/1CodEr7T9xNXSPcwbsvf5fHTqsixDMwDzL/)", "added": 1509023567, "modified": 1509023567, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/158#issuecomment-339718170", "source_type": "github"}, {"comment_id": 16, "body": "@HelloZeroNet Can we close this?", "added": 1515048041, "modified": 1515048041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/158#issuecomment-355238700", "source_type": "github"}, {"comment_id": 17, "body": "@HelloZeroNet Thanks!", "added": 1515053290, "modified": 1515053290, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/158#issuecomment-355256182", "source_type": "github"}], "1604064948_mirrored_deavmi_github": [{"comment_id": 18, "body": "@HelloZeroNet This issue is connected to ZeroTalk, not ZeroNet core, and is actually outdated because we have better error messages -- can we close it?", "added": 1561614764, "modified": 1561614764, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/172#issuecomment-506256625", "source_type": "github"}], "1604065021_mirrored_ghost_github": [{"comment_id": 19, "body": "@HelloZeroNet This issue is resolved -- can we close it?", "added": 1561614848, "modified": 1561614848, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/228#issuecomment-506257173", "source_type": "github"}], "1604065041_mirrored_splix_github": [{"comment_id": 20, "body": "@HelloZeroNet AFAIK this is not a problem anymore, can this issue be closed?", "added": 1583249275, "modified": 1583249275, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/249#issuecomment-594098094", "source_type": "github"}], "1604065045_mirrored_azcoppen_github": [{"comment_id": 21, "body": "@HelloZeroNet Not sure if this issue is resolved?", "added": 1583249438, "modified": 1583249438, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/252#issuecomment-594099260", "source_type": "github"}], "1604065080_mirrored_TheNain38_github": [{"comment_id": 22, "body": "@HelloZeroNet This is now implemented. Can we close this?", "added": 1583249123, "modified": 1583249129, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/255#issuecomment-594096862", "source_type": "github"}], "1604065074_mirrored_adrelanos_github": [{"comment_id": 23, "body": "@HelloZeroNet As there are no IP leaks (most likely) and the availability problem can't be solved, can we close the issue?", "added": 1583249533, "modified": 1583249533, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/274#issuecomment-594099940", "source_type": "github"}, {"comment_id": 24, "body": "I did. We don't send IPs AFAIK. ", "added": 1583306081, "modified": 1583306081, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/274#issuecomment-594435479", "source_type": "github"}], "1604065076_mirrored_wrewolf_github": [{"comment_id": 25, "body": "@HelloZeroNet This issue is outdated and has been resolved -- can we close it?", "added": 1561615013, "modified": 1561615013, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/276#issuecomment-506258219", "source_type": "github"}], "1604065080_mirrored_dtxl_github": [{"comment_id": 26, "body": "@trcyprkr `/Android/data/net.mkg20001.zeronet/files/zero/data/users.json` or something like that.", "added": 1536460209, "modified": 1536460209, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/279#issuecomment-419692127", "source_type": "github"}], "1604065152_mirrored_mama21mama_github": [{"comment_id": 27, "body": "@HelloZeroNet Not sure if we can close this issue because of inactivity? Also, deleting the whole site is not a good idea and I guess we can't fix the problem because site owner shouldn't delete users' content.", "added": 1583252243, "modified": 1583252243, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/332#issuecomment-594120502", "source_type": "github"}], "1604065167_mirrored_mama21mama_github": [{"comment_id": 28, "body": "After 3 years? I don't think so.", "added": 1563531341, "modified": 1563531341, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/343#issuecomment-513224189", "source_type": "github"}], "1604065179_mirrored_kseistrup_github": [{"comment_id": 29, "body": "Blocked by [pypy#3182](https://foss.heptapod.net/pypy/pypy/issues/3182) if we can't remove `interrupt()` call (I think we can't).", "added": 1583308891, "modified": 1583308891, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-594456752", "source_type": "github"}, {"comment_id": 30, "body": "Another problem is `PRAGMA journal_mode = WAL` which we use for... what? (@HelloZeroNet). The following issue tracks the problem: [pypy#3183](https://foss.heptapod.net/pypy/pypy/issues/3183). A hotfix is to disable `PRAGMA journal_mode = WAL` on PyPy.", "added": 1583312928, "modified": 1583312928, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-594483883", "source_type": "github"}, {"comment_id": 31, "body": "Nice. That's gonna make porting easier.", "added": 1583325059, "modified": 1583325059, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-594603034", "source_type": "github"}, {"comment_id": 32, "body": "Blocked by https://github.com/ionelmc/python-tblib/issues/56 and https://github.com/ionelmc/python-tblib/issues/41.", "added": 1583397654, "modified": 1583397654, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-595186733", "source_type": "github"}, {"comment_id": 33, "body": "https://github.com/ionelmc/python-tblib/pull/57 will fix https://github.com/ionelmc/python-tblib/issues/56 but we need to get it merged to gevent. I don't want to make a PR to gevent yet because of https://github.com/ionelmc/python-tblib/issues/41.", "added": 1583418589, "modified": 1583418589, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-595351436", "source_type": "github"}, {"comment_id": 34, "body": "Getting https://github.com/ionelmc/python-tblib/pull/58 merged and then making a PR for https://github.com/imachug/pytest/commit/aa27407513801639422be8aeeb4cb77b55ef281f should work.", "added": 1583425693, "modified": 1583684466, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-595404602", "source_type": "github"}, {"comment_id": 35, "body": "Pytest PR is not required, yay!", "added": 1583727195, "modified": 1583727195, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-596364678", "source_type": "github"}, {"comment_id": 36, "body": "Waiting for https://github.com/gevent/gevent/pull/1541 to get merged.", "added": 1583746970, "modified": 1583746970, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-596502540", "source_type": "github"}, {"comment_id": 37, "body": "@HelloZeroNet Gevent guys don't seem active, do you think we can use a fork? ", "added": 1584407767, "modified": 1584407767, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-599869099", "source_type": "github"}, {"comment_id": 38, "body": "Yay, https://github.com/gevent/gevent/pull/1541 got merged. I'm not sure if gevent's test failure is caused by it, so I'd wait a bit before it's resolved and then update the required gevent version in requirements.txt.", "added": 1584975598, "modified": 1584975598, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-602763041", "source_type": "github"}, {"comment_id": 39, "body": "I wasn't sure if there's something like `implementation_name`, I've only tried `implementation`. Thanks!\r\n\r\nZeroNet tests pass indeed. ", "added": 1585015337, "modified": 1585015337, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-603016806", "source_type": "github"}], "1604065249_mirrored_mirrorwish_github": [{"comment_id": 40, "body": "Heads up: you can now use `--merge_media` option instead of `--debug`.", "added": 1566313850, "modified": 1566313850, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/409#issuecomment-523132242", "source_type": "github"}], "1604065254_mirrored_mirrorwish_github": [{"comment_id": 41, "body": "Is this still a problem? @mirrorwish @HelloZeroNet", "added": 1561971330, "modified": 1561971330, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/412#issuecomment-507233653", "source_type": "github"}, {"comment_id": 42, "body": "@HelloZeroNet Has this issue been solved yet?", "added": 1575390896, "modified": 1575390896, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/412#issuecomment-561322414", "source_type": "github"}], "1604065259_mirrored_jesseray_github": [{"comment_id": 43, "body": "Given that the problem is resolved, can we close the issue? @HelloZeroNet ", "added": 1583250088, "modified": 1583250088, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/416#issuecomment-594103923", "source_type": "github"}], "1604065265_mirrored_ShenXuGongZi_github": [{"comment_id": 44, "body": "@HelloZeroNet Can we close this?", "added": 1515048860, "modified": 1515048860, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/422#issuecomment-355241494", "source_type": "github"}], "1604065275_mirrored_Codes4Fun_github": [{"comment_id": 45, "body": "> This issue can probably be closed, unless you want to keep it open for some reason.\r\n\r\n@HelloZeroNet Not sure if this can be closed?", "added": 1583249933, "modified": 1583249933, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/429#issuecomment-594102733", "source_type": "github"}], "1604065281_mirrored_xuanyuan1hao_github": [{"comment_id": 46, "body": "@xialvjun Yes you can, just proxify the port ZeroNet uses.\r\n\r\n@HelloZeroNet Can the issue be closed? I think the FAQ is straightforward enough.", "added": 1583249775, "modified": 1583249775, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/434#issuecomment-594101638", "source_type": "github"}], "1604065295_mirrored_leoxxx_github": [{"comment_id": 47, "body": "@HelloZeroNet Given the inactivity and the almost zero relationship with ZeroNet, can we close the issue?", "added": 1583249708, "modified": 1583249708, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/445#issuecomment-594101146", "source_type": "github"}, {"comment_id": 48, "body": "I guess you can close the issue yourself? Also, we've changed quite a lot in ZeroNet code so it might be useful to try again.", "added": 1583307989, "modified": 1583307989, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/445#issuecomment-594449479", "source_type": "github"}], "1604065363_mirrored_yurivict_github": [{"comment_id": 49, "body": "@HelloZeroNet Not sure if this can be closed because of inactivity? And this was most likely solved anyway.", "added": 1583254202, "modified": 1583254202, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/488#issuecomment-594135784", "source_type": "github"}], "1604065358_mirrored_unsystemizer_github": [{"comment_id": 50, "body": "@HelloZeroNet Can this be closed?", "added": 1583254177, "modified": 1583254177, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/491#issuecomment-594135584", "source_type": "github"}], "1604065366_mirrored_molykim_github": [{"comment_id": 51, "body": "This means that you both don't have open ports, or your trackers are not working. Upload your site to some proxy like z.hex3.cf or 0net.io. I have an open port right now too so if you want me to seed a site, I can do that.", "added": 1567429320, "modified": 1567429320, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/502#issuecomment-527193835", "source_type": "github"}], "1604065382_mirrored_dnelband_github": [{"comment_id": 52, "body": "@HelloZeroNet Can we close this? ", "added": 1561971443, "modified": 1561971443, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/513#issuecomment-507234253", "source_type": "github"}], "1604065396_mirrored_up4_github": [{"comment_id": 53, "body": "@HelloZeroNet Does it still make sense now when we have inbuilt big file support? ", "added": 1561970733, "modified": 1561970733, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-507230859", "source_type": "github"}], "1604065456_mirrored_DaniellMesquita_github": [{"comment_id": 54, "body": "@HelloZeroNet Can this be closed then? ", "added": 1561970662, "modified": 1561970662, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/560#issuecomment-507230509", "source_type": "github"}], "1604065445_mirrored_forteller_github": [{"comment_id": 55, "body": "@HelloZeroNet 0list is now outdated, can we close this? ", "added": 1561971489, "modified": 1561971489, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/563#issuecomment-507234517", "source_type": "github"}], "1604065446_mirrored_obv-mikhail_github": [{"comment_id": 56, "body": "@HelloZeroNet I guess this can now be closed in favor of #2192.", "added": 1583727430, "modified": 1583727505, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/564#issuecomment-596365827", "source_type": "github"}], "1604065449_mirrored_rot256_github": [{"comment_id": 57, "body": "@HelloZeroNet Can we close this? ", "added": 1561971524, "modified": 1561971524, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/566#issuecomment-507234716", "source_type": "github"}], "1604065466_mirrored_xerz-one_github": [{"comment_id": 58, "body": "@HelloZeroNet Looks like you've solved it already? ", "added": 1561971572, "modified": 1561971572, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/580#issuecomment-507234959", "source_type": "github"}], "1604065492_mirrored_deavmi_github": [{"comment_id": 59, "body": "@HelloZeroNet This is outdated and isn't actually related to ZeroNet development, and we have other issues about docs too. Can you close this please? ", "added": 1561971643, "modified": 1561971643, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/592#issuecomment-507235304", "source_type": "github"}], "1604065484_mirrored_jaredlt_github": [{"comment_id": 60, "body": "@HelloZeroNet Can this be closed?", "added": 1583727574, "modified": 1583727574, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/594#issuecomment-596366561", "source_type": "github"}], "1604065509_mirrored_fujita-nozomi_github": [{"comment_id": 61, "body": "@HelloZeroNet Can the issue be closed?", "added": 1583254453, "modified": 1583254453, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/613#issuecomment-594137762", "source_type": "github"}], "1604065549_mirrored_robinvd_github": [{"comment_id": 62, "body": "@MarwaDF You have to use Python 2, not Python 3.", "added": 1522649957, "modified": 1522649957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/645#issuecomment-377892238", "source_type": "github"}, {"comment_id": 63, "body": "@MarwaDF I'm sorry, but I don't understand what you mean. Do you want to add tensorflow to ZeroNet or just use ZeroNet and TensorFlow simultaneously? In the latter case, you might want to check out `py launcher` for Windows.", "added": 1522668485, "modified": 1522668485, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/645#issuecomment-377941213", "source_type": "github"}, {"comment_id": 64, "body": "@MarwaDF You should install both Python 2 and python 3 then. You can use [py launcher](https://docs.python.org/3/using/windows.html), which will install both Python 2 (for ZeroNet) and Python 3 (for TensorFlow). Then you will be able to run ZeroNet via `py -2 zeronet.py` and some script using TensorFlow via `py -3 tensorflow.py`.", "added": 1522678234, "modified": 1522678234, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/645#issuecomment-377981526", "source_type": "github"}, {"comment_id": 65, "body": "@MarwaDF How are you running ZeroNet? Via command line? What command or script are you using?", "added": 1522682182, "modified": 1522682182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/645#issuecomment-377999421", "source_type": "github"}, {"comment_id": 66, "body": "@MarwaDF Oh, I see. You are using IDE.\r\n\r\nCould you please open Command Line (via WindowsKey+R, then `cmd` <kbd>Enter</kbd>), and try to execute some of the following commands;\r\n\r\n```\r\npython\r\npython2\r\npy -2\r\n```\r\n\r\nIf you receive a Python prompt after running one of them (the prompt is `>>>`), type `exit()`; if you don't, try the next one. One of the commands should say `...Python 2...`.\r\n\r\nNow, if e.g. `py -2` worked, you should create a script in `ZeroNet/start.bat` and type the following:\r\n\r\n```batch\r\npy -2 start.py\r\n```\r\n\r\nSo you won't have to run ZeroNet via IDE (it won't help you at all, because ZeroNet is a server, and it is infinite, and ...well, will you ever need to debug it?..).\r\n\r\nHope that helps.", "added": 1522720235, "modified": 1522720309, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/645#issuecomment-378127496", "source_type": "github"}, {"comment_id": 67, "body": "@MarwaDF Oh man, in fact I don't use TensorFlow, I've just heard something about it, and I've never heard anything about Keras... I'm sorry I can't help.\r\n\r\nSome googling brings this page: https://github.com/keras-team/keras/issues/5325, maybe it can help.", "added": 1523083319, "modified": 1523083361, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/645#issuecomment-379457148", "source_type": "github"}], "1604065588_mirrored_ghost_github": [{"comment_id": 68, "body": "@HelloZeroNet Not sure if this is resolved?", "added": 1583254496, "modified": 1583254496, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/658#issuecomment-594138079", "source_type": "github"}], "1604065636_mirrored_siyuandong_github": [{"comment_id": 69, "body": "@HelloZeroNet Probably closing because of inactivity?", "added": 1583727375, "modified": 1583727375, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/714#issuecomment-596365544", "source_type": "github"}], "1604065669_mirrored_MuxZeroNet_github": [{"comment_id": 70, "body": "@HelloZeroNet Doesn't look like a problem anymore, can we close this please? ", "added": 1561971760, "modified": 1561971760, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/741#issuecomment-507235895", "source_type": "github"}], "1604065692_mirrored_HulaHoopWhonix_github": [{"comment_id": 71, "body": "I think the possibility has been proved by StreamZ. Can this be closed? @HelloZeroNet ", "added": 1583254564, "modified": 1583254564, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/760#issuecomment-594138623", "source_type": "github"}, {"comment_id": 72, "body": "> but it's requires different kind of p2p protocol, so it's out of the scope.\r\n\r\nPeerMessage does support livestreaming though. ", "added": 1583330331, "modified": 1583330331, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/760#issuecomment-594660522", "source_type": "github"}], "1604065723_mirrored_MuxZeroNet_github": [{"comment_id": 73, "body": "@HelloZeroNet We've now implemented blocklists, do you think this issue can be closed?", "added": 1583727765, "modified": 1583727765, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/776#issuecomment-596367549", "source_type": "github"}], "1604065734_mirrored_cxgreat2014_github": [{"comment_id": 74, "body": "Maybe post to ZeroTalk?", "added": 1497284142, "modified": 1497284142, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/783#issuecomment-307891410", "source_type": "github"}], "1604065730_mirrored_JazzMaster_github": [{"comment_id": 75, "body": "@HelloZeroNet We've closed a \"couple\" (huh) vulnerabilities recently, and this issue is from 2 years ago, and we're switching to py3... I think this isn't related anymore. Can we close this? ", "added": 1561971928, "modified": 1561971939, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/789#issuecomment-507236773", "source_type": "github"}], "1604065747_mirrored_MuxZeroNet_github": [{"comment_id": 76, "body": "@HelloZeroNet Not sure if this is already implemented?", "added": 1583254597, "modified": 1583254597, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/792#issuecomment-594138835", "source_type": "github"}], "1604065760_mirrored_japzone1_github": [{"comment_id": 77, "body": "@HelloZeroNet Can this be closed? ", "added": 1561972026, "modified": 1561972026, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/815#issuecomment-507237247", "source_type": "github"}], "1604065808_mirrored_undo2000_github": [{"comment_id": 78, "body": "@HelloZeroNet We have `as` ZeroFrame command now, can this be marked as resolved and closed? ", "added": 1561972097, "modified": 1561972097, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/855#issuecomment-507237594", "source_type": "github"}], "1604065824_mirrored_MRoci_github": [{"comment_id": 79, "body": "@shortcutme Any news on this?", "added": 1497335175, "modified": 1497335175, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/869#issuecomment-308059489", "source_type": "github"}, {"comment_id": 80, "body": "@HelloZeroNet So could you commit this?", "added": 1497342113, "modified": 1497342113, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/869#issuecomment-308085724", "source_type": "github"}], "1604065851_mirrored_dnelband_github": [{"comment_id": 81, "body": "@HelloZeroNet Can this be closed?", "added": 1583729023, "modified": 1583729023, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/883#issuecomment-596375841", "source_type": "github"}], "1604065848_mirrored_MersadBuilder_github": [{"comment_id": 82, "body": "@HelloZeroNet Was this resolved? ", "added": 1561972246, "modified": 1561972246, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/887#issuecomment-507238323", "source_type": "github"}], "1604065853_mirrored_virl_github": [{"comment_id": 83, "body": "@BenMcLean Doesn't ZeroNet-Kiwy work?", "added": 1518243743, "modified": 1518243743, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/891#issuecomment-364638361", "source_type": "github"}, {"comment_id": 84, "body": "It isn't bugged, it is not supported at all.", "added": 1518264041, "modified": 1518264041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/891#issuecomment-364660844", "source_type": "github"}], "1604065861_mirrored_suzumiyasmith_github": [{"comment_id": 85, "body": "@HelloZeroNet Closing because of inactivity? The file itself looks correct.", "added": 1583729469, "modified": 1583729469, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/895#issuecomment-596378717", "source_type": "github"}], "1604065872_mirrored_Forbo_github": [{"comment_id": 86, "body": "@HelloZeroNet Can this be closed? ", "added": 1561972408, "modified": 1561972408, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-507239190", "source_type": "github"}, {"comment_id": 87, "body": "You're right. We should freeze this until the py3 bundle goes live and check whether it's still a problem. ", "added": 1561989192, "modified": 1561989192, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-507344168", "source_type": "github"}, {"comment_id": 88, "body": "I think that's not the reason. The real reason is that ZeroBundle doesn't include ZeroNet actually, it downloads ZeroNet code on startup.", "added": 1562056512, "modified": 1562056512, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-507638009", "source_type": "github"}, {"comment_id": 89, "body": "@HelloZeroNet Can this be closed? There are only 2 detections from some unknown engines.", "added": 1583729436, "modified": 1583729436, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-596378509", "source_type": "github"}], "1604065884_mirrored_imachug_github": [{"comment_id": 90, "body": "I solved the problem. For anybody who will read this later: **call:**\r\n```javascript\r\nzeroFrame.cmd(\"wrapperInnerLoaded\", []\r\n```\r\n**when you are ready to catch hashchange**", "added": 1493025369, "modified": 1493025426, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/914#issuecomment-296643304", "source_type": "github"}], "1604065886_mirrored_imachug_github": [{"comment_id": 91, "body": "@HelloZeroNet: @mishfit:\r\nBTW, sometimes the inner iframe reloades on hashchange. What about changing:\r\n```javascript\r\nsrc = $(\"#inner-iframe\").attr(\"src\").replace(/#.*/, \"\")+window.location.hash\r\n$(\"#inner-iframe\").attr(\"src\", src)\r\n```\r\nto:\r\n```javascript\r\n$(\"#inner-iframe\").attr(\"src\", window.location.hash)\r\n```\r\n\r\nIs there any reason why ```src``` is changed instead of hash?", "added": 1493024249, "modified": 1493024279, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/915#issuecomment-296637682", "source_type": "github"}, {"comment_id": 92, "body": "Well, I think, that's my fault. I didn't know that `wrapperInnerLoaded` is a valid command itself. For me, [ZeroFrame API Reference on readthedocs.io](https://zeronet.readthedocs.io/en/latest/site_development/zeroframe_api_reference/) was the best reference, but `wrapperInnerLoaded` section appeared *after* I found this issue.", "added": 1493025256, "modified": 1493025256, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/915#issuecomment-296642697", "source_type": "github"}], "1604065891_mirrored_beardog108_github": [{"comment_id": 93, "body": "@HelloZeroNet If there is no good solution, could this issue be closed? ", "added": 1566306528, "modified": 1566306528, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/919#issuecomment-523084363", "source_type": "github"}], "1604065908_mirrored_zcke290_github": [{"comment_id": 94, "body": "@zcke290 @HelloZeroNet Is this obsolete? ", "added": 1561972513, "modified": 1561972513, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/933#issuecomment-507239730", "source_type": "github"}], "1604065921_mirrored_kavamaken_github": [{"comment_id": 95, "body": "@shortcutme, Could you test #974 which fixes this issue?", "added": 1497272885, "modified": 1497272885, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/941#issuecomment-307836948", "source_type": "github"}], "1604065966_mirrored_jerry-wolf_github": [{"comment_id": 96, "body": "@HelloZeroNet I think this is currently implemented. Can we close this issue? ", "added": 1561972549, "modified": 1561972549, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/955#issuecomment-507239924", "source_type": "github"}], "1604065947_mirrored_imachug_github": [{"comment_id": 97, "body": "@MuxZeroNet, [I know Regular Expressions](https://xkcd.com/208/). But even with regex `optional/.*` `optional_files` is empty.", "added": 1499175408, "modified": 1499175408, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/961#issuecomment-312916603", "source_type": "github"}, {"comment_id": 98, "body": "@HelloZeroNet, That's the problem itself. I meant that:\r\n\r\n> even with regex optional/.* optional_files is empty\r\n\r\n...when the only file name in `optional/` contains whitespace.\r\n\r\nThis issue is connected to file-containing-whitespace caching, not file caching in general.", "added": 1500216583, "modified": 1500216593, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/961#issuecomment-315625081", "source_type": "github"}], "1604065950_mirrored_jeddah-liu_github": [{"comment_id": 99, "body": "@HelloZeroNet This issue is unrelated anymore: we query the ip via several clearnet sites and via ZeroNet protocol itself too. Can this be closed? ", "added": 1561972680, "modified": 1561972680, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/967#issuecomment-507240519", "source_type": "github"}], "1604065964_mirrored_imachug_github": [{"comment_id": 100, "body": "Fixes #941", "added": 1497272811, "modified": 1497272811, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/974#issuecomment-307836595", "source_type": "github"}, {"comment_id": 101, "body": "@HelloZeroNet It works. Thanks!", "added": 1497358336, "modified": 1497358336, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/974#issuecomment-308162453", "source_type": "github"}], "1604065966_mirrored_imachug_github": [{"comment_id": 102, "body": "By the way, @HelloZeroNet.\r\n\r\nSay, we have the following `content.json`:\r\n```json\r\n{\r\n    ...\r\n    \"signers\": [\r\n        \"A\",\r\n        \"B\"\r\n    ],\r\n    \"signs\": {\r\n        \"A\": \"Sign-for-version-1\",\r\n        \"B\": \"Sign-for-version-1\"\r\n    },\r\n    \"signers_required\": 2\r\n    ...\r\n}\r\n```\r\n\r\nThen, `A` adds new post:\r\n```json\r\n{\r\n    ...\r\n    \"signers\": [\r\n        \"A\",\r\n        \"B\"\r\n    ],\r\n    \"signs\": {\r\n        \"A\": \"Sign-for-version-2\",\r\n        \"B\": \"Sign-for-version-1\"\r\n    },\r\n    \"signers_required\": 2\r\n    ...\r\n}\r\n```\r\n...and tries to publish it. But he can't! All peers reject this `content.json` because only 1 sign (`A`) is valid. How can `B` get this `content.json` and sign it with his `B` key?", "added": 1497281573, "modified": 1497281573, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/975#issuecomment-307878677", "source_type": "github"}, {"comment_id": 103, "body": "I guess I'll close this PR because it doesn't address many problems and doesn't add any features. ", "added": 1571916427, "modified": 1571916427, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/975#issuecomment-545944097", "source_type": "github"}], "1604065968_mirrored_kuipumu_github": [{"comment_id": 104, "body": "@Pupiloho, Please don't make four branches (`patch-1`, `patch-2`, `patch-3`, `patch-4`), add commits to one branch (`patch-sp-translation` or whatever) instead. This way, you won't make 4 different pull requests.", "added": 1497327927, "modified": 1497327947, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/978#issuecomment-308030706", "source_type": "github"}], "1604065978_mirrored_imachug_github": [{"comment_id": 105, "body": "1. Press `Create new, empty site` in ZeroHello\r\n2. Create `data/users/content.json` with the following content:\r\n```javascript\r\n{\r\n  \"files\": {},\r\n  \"ignore\": \".*\",\r\n  \"modified\": 0.0,\r\n  \"signs\": {},\r\n  \"user_contents\": {\r\n    \"cert_signers\": {\r\n      \"zeroid.bit\": [ \"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\" ]\r\n    },\r\n    \"permission_rules\": {\r\n      \".*\": {\r\n        \"files_allowed\": \"data.json\",\r\n        \"max_size\": 0\r\n      }\r\n    },\r\n    \"permissions\": {\r\n      \"nofish@zeroid.bit\": { \"max_size\": 100000 }\r\n    }\r\n  }\r\n}\r\n```\r\n3. Add `include` and `ignore` to root `content.json`:\r\n```javascript\r\n...\r\n    \"ignore\": \"data/.*\",\r\n    \"includes\": {\r\n        \"data/users/content.json\": {\r\n            \"signers\": [],\r\n            \"signers_required\": 1\r\n        }\r\n    },\r\n...\r\n```\r\n4. Sign `content.json` and then `data/users/content.json`\r\n5. Login to ZeroID using sidebar (`Unique address` -> `Change` -> `nofish@zeroid.bit`)\r\n6. Try to sign `data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json` using sidebar\r\n\r\nSigning fails because there is no `content.json`, and `n-a/n-a@n-a` is used as `cert_user_id` instead", "added": 1497624205, "modified": 1497624205, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/983#issuecomment-309089581", "source_type": "github"}, {"comment_id": 106, "body": "Thanks!", "added": 1497776281, "modified": 1497776281, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/983#issuecomment-309273252", "source_type": "github"}], "1604066087_mirrored_HelloZeroNet_github": [{"comment_id": 107, "body": "@HelloZeroNet I think this feature was added, could you close this issue? ", "added": 1566306440, "modified": 1566306440, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1021#issuecomment-523083803", "source_type": "github"}], "1604066047_mirrored_dnelband_github": [{"comment_id": 108, "body": "@dnelband @HelloZeroNet I think this is outdated. Could you close this issue please? ", "added": 1561976039, "modified": 1561976039, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1035#issuecomment-507259136", "source_type": "github"}], "1604066042_mirrored_grinapo_github": [{"comment_id": 109, "body": "@HelloZeroNet Was this resolved? Can this issue be closed? ", "added": 1561976094, "modified": 1561976094, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1040#issuecomment-507259434", "source_type": "github"}], "1604066045_mirrored_VikilQ_github": [{"comment_id": 110, "body": "@HelloZeroNet Close for inactivity? ", "added": 1561976118, "modified": 1561976118, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1042#issuecomment-507259565", "source_type": "github"}], "1604066048_mirrored_hellocc_github": [{"comment_id": 111, "body": "@LoteLin Try to open `http://127.0.0.1:43110/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F` first and wait for ZeroName to download.", "added": 1517828818, "modified": 1517828818, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1044#issuecomment-363094125", "source_type": "github"}, {"comment_id": 112, "body": "@HelloZeroNet Close for inactivity? Also it was just a network issue probably ", "added": 1561976168, "modified": 1561976168, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1044#issuecomment-507259869", "source_type": "github"}], "1604066058_mirrored_631068264_github": [{"comment_id": 113, "body": "@Plasmmer, @631068264 asks \"Why can't delete owned site via ZeroHello?\"", "added": 1504937324, "modified": 1504937397, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1052#issuecomment-328264965", "source_type": "github"}, {"comment_id": 114, "body": "@HelloZeroNet Can we close this as it's intentional? ", "added": 1561976215, "modified": 1561976215, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1052#issuecomment-507260155", "source_type": "github"}], "1604066083_mirrored_yurivict_github": [{"comment_id": 115, "body": "@HelloZeroNet This is py3-related and is fixed on py3 branch. Can this issue be closed? ", "added": 1561976260, "modified": 1561976260, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1056#issuecomment-507260451", "source_type": "github"}], "1604066073_mirrored_krixano_github": [{"comment_id": 116, "body": "Whitelist is better than blacklist. I'd recommend to have a specific list of settings to allow. ", "added": 1557537203, "modified": 1557537203, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-491477778", "source_type": "github"}], "1604066079_mirrored_theAkito_github": [{"comment_id": 117, "body": "@Akito13 Are you still having this problem?", "added": 1516097016, "modified": 1516097016, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1069#issuecomment-357952895", "source_type": "github"}], "1604066081_mirrored_python273_github": [{"comment_id": 118, "body": "There is a limit on file size, so flooding is not possible.", "added": 1504937052, "modified": 1504937052, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1071#issuecomment-328264783", "source_type": "github"}], "1604066113_mirrored_ghost_github": [{"comment_id": 119, "body": "@HelloZeroNet What about closing this? ", "added": 1566306399, "modified": 1566306399, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1073#issuecomment-523083487", "source_type": "github"}], "1604066115_mirrored_yurivict_github": [{"comment_id": 120, "body": "Rename `sites.json-tmpnew` to `sites.json`. This probably happened because ZeroNet didn't shutdown gracefully.\r\n\r\nAFAIK ZeroNet uses a feature called atomicWrite, so I'm not sure why sites.json is empty. (@HelloZeroNet correct me if I'm wrong)", "added": 1527491177, "modified": 1527491224, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1080#issuecomment-392482757", "source_type": "github"}], "1604066100_mirrored_Naia-love_github": [{"comment_id": 121, "body": "@HelloZeroNet This is most likely outdated... can we close this?", "added": 1561979998, "modified": 1561979998, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1087#issuecomment-507285105", "source_type": "github"}], "1604066132_mirrored_ghost_github": [{"comment_id": 122, "body": "@HelloZeroNet Closing?", "added": 1583735449, "modified": 1583735449, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1088#issuecomment-596421410", "source_type": "github"}], "1604066116_mirrored_Denneisk_github": [{"comment_id": 123, "body": "@HelloZeroNet This is probably resolved, can we close the issue?", "added": 1561979646, "modified": 1561979646, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1100#issuecomment-507282566", "source_type": "github"}], "1604066130_mirrored_imachug_github": [{"comment_id": 124, "body": "'Course I can:\r\n\r\n    {\r\n        \"address\": \"1Demofj5ntgDJxagDfAqQeH3FZua4zVBFA\",\r\n    ....\r\n\r\nDoes it help? No, of course. I tried to add and remove signers, and only `0`, `1` and `2` worked. Another interesting thing (hardly ever connected, but just in case):\r\n\r\n    ...\r\n    \"includes\": {\r\n        \"data/content.json\": {\r\n            \"signers\": [\"1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD\", \"1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw\"],\r\n            \"signers_required\": 1\r\n        },\r\n        \"data/users/content.json\": {\r\n            \"signers\": [\"1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD\", \"1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw\"],\r\n            \"signers_required\": 1\r\n        }\r\n    }\r\n    ...\r\n\r\nSo, there are two more `signers` fields, in `includes`. When I add 1 more signer to *them*, signing works. When I add 1 more signer to root `signers`, signing fails.", "added": 1504167923, "modified": 1504167960, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1103#issuecomment-326267134", "source_type": "github"}, {"comment_id": 125, "body": "Some more news:\r\n\r\n    [14:34:29] Site:1Demof..VBFA Signing: content.json\r\n    [14:34:29] Site:1Demof..VBFA Opening site data directory: data/1Demofj5ntgDJxagDfAqQeH3FZua4zVBFA/...\r\n    [14:34:29] Site:1Demof..VBFA - [SKIPPED] content.json\r\n    [14:34:29] Site:1Demof..VBFA - dbschema.json\r\n    [14:34:29] Site:1Demof..VBFA - index.html\r\n    [14:34:29] Site:1Demof..VBFA - css/cover.css\r\n    ...200 more lines...\r\n    [14:34:30] Site:1Demof..VBFA - js/ZeroPage.js\r\n    [14:34:30] Site:1Demof..VBFA Changed files: [u'content.json']\r\n    [14:34:30] Site:1Demof..VBFA Adding timestamp and sha512sums to new content.json...\r\n    [14:34:30] Site:1Demof..VBFA Verifying private key...\r\n    [14:34:30] Site:1Demof..VBFA Correct 1Demofj5ntgDJxagDfAqQeH3FZua4zVBFA in valid signers: [u'1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD', u'1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw', u'1CvyxRucf7BbDvGtFe5LayTS2qX88VN7Er', u'1Demofj5ntgDJxagDfAqQeH3FZua4zVBFA']\r\n    [14:34:30] Site:1Demof..VBFA Site sign failed: content.json: UnicodeDecodeError: 'ascii' codec can't decode byte 0x8d in position 25: ordinal not in range(128) in UiWebsocket.py line 381 > ContentManager.py line 626 > CryptBitcoin.py line 49 > main.py line 520 > main.py line 404\r\n\r\n---\r\n\r\nProblem in pybitcointools? Yes. Let's first look at `ContentManager.py`::\r\n\r\n    625     new_content[\"signers_sign\"] = CryptBitcoin.sign(\r\n    626         \"%s:%s\" % (new_content[\"signs_required\"], \",\".join(valid_signers)), privatekey\r\n    627     )\r\n\r\nHere, we sign `1:signer1,signer2,signer3,siteaddress`. For 2 signers, that's `1:1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD,1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw,1Demofj5ntgDJxagDfAqQeH3FZua4zVBFA` - 106 bytes. Remeber this number. For 3 signers, that's `1:1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD,1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw,1CvyxRucf7BbDvGtFe5LayTS2qX88VN7Er,1Demofj5ntgDJxagDfAqQeH3FZua4zVBFA` - 141 bytes. Remember this number, too.\r\n\r\n---\r\n\r\nCryptBitcoin uses `ecdsa_sign` of pybitcointools for signing. `ecdsa_sign` uses `electrum_sig_hash` for hash calculating:\r\n\r\n    # WTF, Electrum?\r\n    def electrum_sig_hash(message):\r\n        padded = b\"\\x18Bitcoin Signed Message:\\n\" + num_to_var_int(len(message)) + from_string_to_bytes(message)\r\n        return bin_dbl_sha256(padded)\r\n\r\nThat's the last place in stacktrace. But let's look at `num_to_var_int`:\r\n\r\n    def num_to_var_int(x):\r\n        x = int(x)\r\n        if x < 253: return from_int_to_byte(x)\r\n        elif x < 65536: return from_int_to_byte(253)+encode(x, 256, 2)[::-1]\r\n        elif x < 4294967296: return from_int_to_byte(254) + encode(x, 256, 4)[::-1]\r\n        else: return from_int_to_byte(255) + encode(x, 256, 8)[::-1]\r\n\r\n`from_int_to_byte(x)` is used here, and the error says about *128*. *106 < 128*, and signing *196* bytes works. *141 > 128*, and it doesn't work. Maybe the problem is here?", "added": 1504170797, "modified": 1504170797, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1103#issuecomment-326276996", "source_type": "github"}, {"comment_id": 126, "body": "`from_int_to_byte(141)` returns `0x8d`. And the error message says about `0x8d`, BTW.\r\n\r\nWait a bit. I found this:\r\n\r\n    def test_error_from_string(self):\r\n        # See http://bugs.python.org/issue6289\r\n        input = u\"# coding: ascii\\n\\N{SNOWMAN}\".encode('utf-8')\r\n        with self.assertRaises(SyntaxError) as c:\r\n            compile(input, \"<string>\", \"exec\")\r\n        expected = \"'ascii' codec can't decode byte 0xe2 in position 16: \" \\\r\n                   \"ordinal not in range(128)\"\r\n        self.assertTrue(c.exception.args[0].startswith(expected))\r\n\r\n...in Python 2.7 libraries. Look at http://bugs.python.org/issue6289. Ascii codec refuses to decode bytes >= 128.", "added": 1504172302, "modified": 1504172313, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1103#issuecomment-326282567", "source_type": "github"}, {"comment_id": 127, "body": "/cc @shortcutme \r\n\r\n    ContentManager.py\r\n    625     new_content[\"signers_sign\"] = CryptBitcoin.sign(\r\n    626         \"%s:%s\" % (new_content[\"signs_required\"], \",\".join(valid_signers)), privatekey\r\n    627     )\r\n\r\nThese lines throw exception in runtime, but they work if I run them with a simple `import` - `print` script.", "added": 1504173014, "modified": 1504173014, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1103#issuecomment-326285422", "source_type": "github"}, {"comment_id": 128, "body": "I just made a new site and there is still an issue. Here is sample `content.json`:\r\n\r\n    {\r\n     \"address\": \"197GZbac8xsfb7tzyM1Nehsp7U7SW1xXyX\",\r\n     \"address_index\": 38134640,\r\n     \"background-color\": \"#FFF\",\r\n     \"clone_root\": \"template-new\",\r\n     \"cloned_from\": \"1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D\",\r\n     \"description\": \"\",\r\n     \"files\": {\r\n      \"index.html\": {\r\n       \"sha512\": \"b47188737048fb958728dd1eb429f4f786e061db1e1f6529b4db58b60150f261\",\r\n       \"size\": 1112\r\n      },\r\n      \"js/ZeroFrame.js\": {\r\n       \"sha512\": \"8bc18006f7bb457cca2338239ea345bc1db54a664b4bc9b8a34f4e4133d1776b\",\r\n       \"size\": 3816\r\n      }\r\n     },\r\n     \"ignore\": \"\",\r\n     \"inner_path\": \"content.json\",\r\n     \"modified\": 1504200781,\r\n     \"postmessage_nonce_security\": true,\r\n     \"signers\": [\"197GZbac8xsfb7tzyM1Nehsp7U7SW1xXyX\", \"197GZbac8xsfb7tzyM1Nehsp7U7SW1xXyY\", \"197GZbac8xsfb7tzyM1Nehsp7U7SW1xXyZ\", \"197GZbac8xsfb7tzyM1Nehsp7U7SW1xXyAFDS\"],\r\n     \"signers_sign\": \"G1E/p9KgKUSvMqVYlXc+ZcmjWhLUxAUAuwMJOJBvvEipGHYWo3qI/qXccgUQpREoqW21+l+fnkjyucXm9uNNHfA=\",\r\n     \"signs\": {\r\n      \"197GZbac8xsfb7tzyM1Nehsp7U7SW1xXyX\": \"HLphMqK6iYu9a3LRUQgqDiOnM8Q7z/5yv+SCwJxoefzCaOL/0pyGsMpq8tmupdLrKGBVPO4ta3qDMRm5eWUsaMM=\"\r\n     },\r\n     \"signs_required\": 1,\r\n     \"title\": \"my new site\",\r\n     \"translate\": [\"js/all.js\"],\r\n     \"zeronet_version\": \"0.5.7\"\r\n    }\r\n\r\nAs I said before, nothing interesting except 4 signers.", "added": 1504190068, "modified": 1504190068, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1103#issuecomment-326367986", "source_type": "github"}], "1604066141_mirrored_imachug_github": [{"comment_id": 129, "body": "/cc @HelloZeroNet @shortcutme ", "added": 1504934745, "modified": 1504934745, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1111#issuecomment-328263005", "source_type": "github"}, {"comment_id": 130, "body": "up @shortcutme ", "added": 1505892440, "modified": 1505892440, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1111#issuecomment-330811649", "source_type": "github"}, {"comment_id": 131, "body": "#1122 ", "added": 1506048738, "modified": 1506048738, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1111#issuecomment-331356684", "source_type": "github"}], "1604066151_mirrored_imachug_github": [{"comment_id": 132, "body": "/cc @HelloZeroNet @shortcutme ", "added": 1505577736, "modified": 1505577736, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1117#issuecomment-329988379", "source_type": "github"}], "1604066155_mirrored_imachug_github": [{"comment_id": 133, "body": "> Internal error: Exception: No merger (MY_MERGED_SITE) permission to load: merged-SomeID/MY_MERGED_SITE/content.json (SomeID not in []) in UiWebsocket.py line 211 > MergerSitePlugin.py line 151 > MergerSitePlugin.py line 127 > MergerSitePlugin.py line 43\r\n\r\nBut Merger:SomeID appears in sites.json for MY_MERGER_SITE. And MY_MERGED_SITE has merged_type: \"SomeID\" in its content.json.\r\n\r\nInteresting fact:\r\n\r\n```javascript\r\nzeroFrame.cmd(\"fileGet\", [\"merged-SomeID/MY_MERGED_SITE/content.json\"]); // works\r\n```\r\n\r\n...but\r\n\r\n```javascript\r\nzeroFrame.cmd(\"fileGet\", [\"merged-SomeID/MY_MERGED_SITE/conten.json\"]); // note a typo; hangs\r\nzeroFrame.cmd(\"fileGet\", [\"merged-SomeID/MY_MERGED_SITE/content.json\"]); // shows error\r\n```\r\n\r\n**UPD**\r\nWhen running fileGet for merged-... paths, MergerSite plugin changes self.site address to merged, then executes query, then returns address back. I could reproduce this:\r\n\r\n```javascript\r\nzeroFrame.cmd(\"fileGet\", [\"merged-SomeID/MY_MERGED_SITE/conten.json\"]); // note a typo; hangs\r\nzeroFrame.cmd(\"fileGet\", [\"content.json\"]); // returns MY_MERGED_SITE content.json\r\n```\r\n\r\nThat means while first fileGet command is searching for conten.json, second fileGet has MY_MERGED_SITE address in self.site property and tries to read content.json from MY_MERGED_SITE.\r\n\r\nA good solution is to create a new Site object for each fileGet, fileWrite, etc. commands.\r\n\r\n**UPD URGENT**\r\n\r\nCors plugin is not really read-only. Using timing attack I can write data to CORS site if I already have Cors permission!\r\n\r\n```javascript\r\nzeroFrame.cmd(\"fileGet\", [\"cors-1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz/a/content.json\", true, \"text\", 20000]); // Change address to ZeroID for ~300 hours\r\nzeroFrame.cmd(\"fileWrite\", [\"content.json\", ...]); // Write file\r\n```", "added": 1505924137, "modified": 1505924137, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1119#issuecomment-330952802", "source_type": "github"}], "1604066157_mirrored_imachug_github": [{"comment_id": 134, "body": "/cc @HelloZeroNet @shortcutme ", "added": 1506008746, "modified": 1506008746, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1120#issuecomment-331246727", "source_type": "github"}, {"comment_id": 135, "body": "@HelloZeroNet Then take a look at #1123, please.", "added": 1506074381, "modified": 1506074381, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1120#issuecomment-331439727", "source_type": "github"}], "1604066159_mirrored_imachug_github": [{"comment_id": 136, "body": "@HelloZeroNet Yes, looks like that. Thanks!", "added": 1505976980, "modified": 1505976980, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1121#issuecomment-331110176", "source_type": "github"}], "1604066164_mirrored_imachug_github": [{"comment_id": 137, "body": "This is not yet finished, don't merge please.", "added": 1506332168, "modified": 1506332168, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1123#issuecomment-331867392", "source_type": "github"}, {"comment_id": 138, "body": "@HelloZeroNet, I've just understood it and marked this PR as [WIP].", "added": 1506342977, "modified": 1506342977, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1123#issuecomment-331920557", "source_type": "github"}], "1604066166_mirrored_Wieke_github": [{"comment_id": 139, "body": "@HelloZeroNet Can this be closed in favor of #1548?", "added": 1583735476, "modified": 1583735476, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1141#issuecomment-596421679", "source_type": "github"}], "1604066168_mirrored_tomachinz_github": [{"comment_id": 140, "body": "@ndimario Can you post the part after `Valid signers: ` please?", "added": 1519897350, "modified": 1519897350, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1142#issuecomment-369579837", "source_type": "github"}, {"comment_id": 141, "body": "@ndimario Okay, it should also say `Private key address: ... (maybe None)` or something like that. Does it?", "added": 1519966709, "modified": 1519966709, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1142#issuecomment-369849255", "source_type": "github"}, {"comment_id": 142, "body": "@ndimario Is `1KugrB6oSZNHN96PM7CRNze7iL8Qs58QkL` or `1J6csQA9K9NZaYUiCG5C2XQRF85yB5PGaJ` the address of your site? If one of them is, make sure you add `includes` to root `content.json`, create the correct `data/users/content.json` (like in the example), and sign them all in the sidebar.", "added": 1520000794, "modified": 1520000794, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1142#issuecomment-369991081", "source_type": "github"}, {"comment_id": 143, "body": "@HelloZeroNet Can this issue be closed?", "added": 1583735540, "modified": 1583735540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1142#issuecomment-596422194", "source_type": "github"}], "1604066176_mirrored_HostFat_github": [{"comment_id": 144, "body": "Quite a few online testers confirm this. That's unfortunate.", "added": 1586331355, "modified": 1586331355, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1145#issuecomment-610882683", "source_type": "github"}], "1604066200_mirrored_imachug_github": [{"comment_id": 145, "body": "UPD The same is true for Windows now.", "added": 1508147139, "modified": 1508147139, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1149#issuecomment-336875626", "source_type": "github"}, {"comment_id": 146, "body": "@HelloZeroNet About 50.", "added": 1508231500, "modified": 1508231500, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1149#issuecomment-337211252", "source_type": "github"}], "1604066185_mirrored_wzhb_github": [{"comment_id": 147, "body": "@wzhb Is this still an issue to you? @HelloZeroNet Can this be closed for inactivity? We won't be able to help here anymore I think", "added": 1561980113, "modified": 1561980113, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1152#issuecomment-507285875", "source_type": "github"}], "1604066212_mirrored_imachug_github": [{"comment_id": 148, "body": "Well, I understand the reason behind this. But flags `rw` are secure, only `x` isn't. Anyway, how could an attacker launch a program? I mean, ZeroFrame API doesn't allow that via `wrapper_key`.", "added": 1509012040, "modified": 1509012040, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1158#issuecomment-339658081", "source_type": "github"}, {"comment_id": 149, "body": "@HelloZeroNet Sorry, I'm not @MuxZeroNet, but I think that this flag should rely on file content and obviously not on file name. I have already said that I want this feature for Git repositories, and its hooks have no extension.", "added": 1509015991, "modified": 1509015991, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1158#issuecomment-339677410", "source_type": "github"}, {"comment_id": 150, "body": "@HelloZeroNet That's okay. Another question: should ZeroNet automatically detect if file has `executable` flag or should owner set it? If first, will it work on Windows where there is no explict `executable` flag? (or maybe there is?)", "added": 1509017532, "modified": 1509017532, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1158#issuecomment-339685627", "source_type": "github"}, {"comment_id": 151, "body": "OK.", "added": 1509457141, "modified": 1509457141, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1158#issuecomment-340823114", "source_type": "github"}], "1604066207_mirrored_sergei-bondarenko_github": [{"comment_id": 152, "body": "@HelloZeroNet @grez911 Can this issue be closed? We have #1548 now that basically replaces this issue.", "added": 1561980146, "modified": 1561980146, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1161#issuecomment-507286113", "source_type": "github"}], "1604066224_mirrored_imachug_github": [{"comment_id": 153, "body": "@HelloZeroNet Please?", "added": 1512131871, "modified": 1512131871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1166#issuecomment-348526463", "source_type": "github"}], "1604066201_mirrored_chezsick_github": [{"comment_id": 154, "body": "Translation:\r\n> You can show country of peer who hosts a site on the map. By default only continents, not countries are shows on the map in the sidebar. So we don't know what's peer's country.\r\n>\r\n> Thanks,\r\n> Sick", "added": 1509162389, "modified": 1509162389, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1167#issuecomment-340148506", "source_type": "github"}, {"comment_id": 155, "body": "But the goal of ZeroNet is decentralization and anonymity. Many people use Tor, so we don't really know where peer lives.", "added": 1509162797, "modified": 1509162797, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1167#issuecomment-340149609", "source_type": "github"}, {"comment_id": 156, "body": "@chezsick I undestand your idea and I agree. But if a person uses Tor, getting country is not possible. For example, you live in Japan and use Tor, and ZeroNet would show that you live in England.", "added": 1509170697, "modified": 1509170697, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1167#issuecomment-340162696", "source_type": "github"}, {"comment_id": 157, "body": "@chezsick That's a good idea and it will work. But if many people use Tor, statistic will not work.", "added": 1509178267, "modified": 1509178267, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1167#issuecomment-340183435", "source_type": "github"}], "1604066203_mirrored_kkkkketsu_github": [{"comment_id": 158, "body": "@kkkkketsu Are you from China? If you are, zeronet.io was blocked a few days ago, and ZeroNet uses that host to update. Though I thought that @HelloZeroNet changed address.\r\n\r\nBTW, @HelloZeroNet, actionServerUpdate sets `update_after_shutdown` to true, but I cannot find this variable used anywhere else. What does it mean then?", "added": 1509447887, "modified": 1509453333, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1169#issuecomment-340772195", "source_type": "github"}], "1604066251_mirrored_DaniellMesquita_github": [{"comment_id": 159, "body": "I understand this problem as well. On the other hand, I have no ideas how to solve this and don't break anything. Maybe you can try to fix this for yourself and then merge it to upstream?", "added": 1510502043, "modified": 1510502043, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1180#issuecomment-343758470", "source_type": "github"}, {"comment_id": 160, "body": "https://github.com/imachug/ZeroNet/commit/3ae2cd53986be2724a334754aa06f47cf7a5b2af", "added": 1510506595, "modified": 1510506595, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1180#issuecomment-343763592", "source_type": "github"}, {"comment_id": 161, "body": "Right now I understand my problem. I lower by 10, right? Before I switched back to `master` branch, sites weren't loaded. So there are too many 404.", "added": 1510566796, "modified": 1510566796, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1180#issuecomment-343910057", "source_type": "github"}, {"comment_id": 162, "body": "@krixano Strange, but I have something to argue now. I can't give you an example, but it the problem exists. I often create a site, then publish it to proxy and give a link to somebody. You know what's happening? After I publish, nothing changes: neither on proxy, neither on new peer's computer. That doesn't happen for ALL sites, but it does happen for SOME sites.\r\n\r\nThough I agree that @Plasmmer should at least propose a *working* way to fix it. I've tried to add what he wanted (I even didn't lower by 20, I changed by 10), but from there I didn't receive any updates - there are too many errors peers send, so my change just blocked everybody.", "added": 1510583999, "modified": 1510583999, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1180#issuecomment-343997815", "source_type": "github"}, {"comment_id": 163, "body": "@HelloZeroNet That was quite long ago, so I think you've already fixed this.", "added": 1510645926, "modified": 1510645926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1180#issuecomment-344220779", "source_type": "github"}], "1604066221_mirrored_jarodlee_github": [{"comment_id": 164, "body": "@HelloZeroNet This is fixed by #1183", "added": 1510836642, "modified": 1510836642, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1182#issuecomment-344965298", "source_type": "github"}, {"comment_id": 165, "body": "What browser/OS are you using?", "added": 1510903125, "modified": 1510903125, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1182#issuecomment-345203273", "source_type": "github"}], "1604066249_mirrored_imachug_github": [{"comment_id": 166, "body": "@HelloZeroNet ! And what about fixing #1182 then?!", "added": 1510895784, "modified": 1510895784, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1183#issuecomment-345175213", "source_type": "github"}, {"comment_id": 167, "body": "@HelloZeroNet This makes sense. I asked @jarodlee about their OS/browser.", "added": 1510903172, "modified": 1510903172, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1183#issuecomment-345203474", "source_type": "github"}, {"comment_id": 168, "body": "@MuxZeroNet said that this happens even on Internet Explorer - [An old post about this](https://blogs.msdn.microsoft.com/ieinternals/2009/07/01/ie-and-the-accept-header/) - so maybe we need another way to detect if this is `img` or a link.", "added": 1510977441, "modified": 1510977441, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1183#issuecomment-345423337", "source_type": "github"}], "1604066245_mirrored_ubaidsworld_github": [{"comment_id": 169, "body": "Does it make sense? It is already stated that Python 2 is required: `* Start with python2 zeronet.py`. And versions like 2.3 are outdated much, so nobody would really use them.", "added": 1512634641, "modified": 1512634641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1201#issuecomment-349938230", "source_type": "github"}, {"comment_id": 170, "body": "@HelloZeroNet Can we close this as ZeroNet is going to switch to py3? ", "added": 1561969904, "modified": 1561969904, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1201#issuecomment-507226911", "source_type": "github"}], "1604066248_mirrored_ivanhjc_github": [{"comment_id": 171, "body": "AFAIK `Message submit failed! Parsing parameters... Please try again later` means `you post too much`", "added": 1515042631, "modified": 1515042631, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1203#issuecomment-355221912", "source_type": "github"}], "1604066287_mirrored_DaniellMesquita_github": [{"comment_id": 172, "body": "Duplicate?", "added": 1515042540, "modified": 1515042540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1207#issuecomment-355221671", "source_type": "github"}], "1604066263_mirrored_anoadragon453_github": [{"comment_id": 173, "body": "@anoadragon453 Change line `47` of file `plugins/Multiuser/MultiuserPlugin.py`.\r\n\r\n`Adding new sites disabled on this proxy` is text that gets printed. Replace it with whatever you want (no HTML).", "added": 1513606418, "modified": 1513606418, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1209#issuecomment-352492223", "source_type": "github"}], "1604066257_mirrored_littleguyy_github": [{"comment_id": 174, "body": "Why are you trying to merge HeroNet to ZeroNet?", "added": 1513601854, "modified": 1513601854, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1210#issuecomment-352469330", "source_type": "github"}, {"comment_id": 175, "body": "@HelloZeroNet please close this", "added": 1514548565, "modified": 1514548565, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1210#issuecomment-354455887", "source_type": "github"}], "1604066267_mirrored_benjin12345678_github": [{"comment_id": 176, "body": "@HelloZeroNet Can this be closed for inactivity?", "added": 1561980227, "modified": 1561980227, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1219#issuecomment-507286647", "source_type": "github"}], "1604066271_mirrored_slrslr_github": [{"comment_id": 177, "body": "`pinned` files (you can only pin big and optional files) aren't deleted by automatical garbage collector. When you download a file, you automatically pin it. If you unpin it, it will be removed soon, but that's all.", "added": 1514267339, "modified": 1514267339, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1221#issuecomment-353940512", "source_type": "github"}], "1604066302_mirrored_yurivict_github": [{"comment_id": 178, "body": "Looks like a bug. Such problem shouldn't exist; maybe there is some async bug with several threads writing to one file.", "added": 1514267270, "modified": 1514267270, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1223#issuecomment-353940359", "source_type": "github"}], "1604066276_mirrored_slrslr_github": [{"comment_id": 179, "body": "Please post this to [ZeroTalk](https://github.com/HelloZeroNet/ZeroTalk) and [ZeroBlog](https://github.com/HelloZeroNet/ZeroBlog) repositories. This repository is for ZeroNet core.", "added": 1514267197, "modified": 1514267197, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1224#issuecomment-353940214", "source_type": "github"}], "1604066276_mirrored_tianlichunhong_github": [{"comment_id": 180, "body": "Maybe you should instead post this to [ZeroMe](https://github.com/HelloZeroNet/ZeroMe) or [ZeroBlog](https://github.com/HelloZeroNet/ZeroBlog) repositories?", "added": 1514267140, "modified": 1514267140, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1225#issuecomment-353940080", "source_type": "github"}], "1604066279_mirrored_slrslr_github": [{"comment_id": 181, "body": "@slrslr Based on nofish's edits, you should have uploaded ZeroHello only.", "added": 1517494164, "modified": 1517494164, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1226#issuecomment-362335135", "source_type": "github"}, {"comment_id": 182, "body": "@slrslr Please send the results of http://127.0.0.1:43110/Benchmark", "added": 1517913903, "modified": 1517913903, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1226#issuecomment-363426145", "source_type": "github"}, {"comment_id": 183, "body": "I thought that DB queries may be slow, but it doesn't look like that. How many hubs are you seeding?", "added": 1517916831, "modified": 1517916831, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1226#issuecomment-363440011", "source_type": "github"}], "1604066278_mirrored_btripoloni_github": [{"comment_id": 184, "body": "@HelloZeroNet can this be closed?", "added": 1515042512, "modified": 1515042512, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1227#issuecomment-355221609", "source_type": "github"}], "1604066284_mirrored_slrslr_github": [{"comment_id": 185, "body": "@krixano:\r\n\r\n> I sometimes sign without publishing. One of the reasons for this is if I update my database schema, I can sign it to test it out. After testing, then I publish.\r\n\r\nTechnically your changes can be downloaded by other peers without publishing. In your case, you can press `Reload database`.\r\n\r\n> Otherwise, your idea of it telling you whether there is unsigned changes would be good.\r\n\r\nI am not sure, but that would be difficult to check. Example: you recieve update from another computer, then press `Publish`. We think nothing changed, but for ZeroNet it did.\r\n\r\n> But I don't think it's necessary because whenever I want to publish something, I always hit the Sign button first regardless of if there were any changes.\r\n\r\nThere are cases when you want to only `sign`, only `publish` or both `sign & publish`. Adding all will take much space.", "added": 1514617563, "modified": 1514617563, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354537919", "source_type": "github"}, {"comment_id": 186, "body": "E.g. you are offline, you sign & publish, notice you are offline, connect to WiFi. Now you should publish - why sign again then?", "added": 1514621946, "modified": 1514621967, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354540885", "source_type": "github"}, {"comment_id": 187, "body": "> If ZeroNet received an update, then the content.json with the new hashes would also be updated, which would work correctly with what I said above.\r\n\r\nThen write some pseudocode which will check if it is necessary to sign. Maybe there is such possibility which I didn't find yet.", "added": 1514622977, "modified": 1514622977, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354541533", "source_type": "github"}, {"comment_id": 188, "body": "@slrslr: `Content published to 5/5 peers` means that `content.json` was really published to those peers. They *did* recieve them. But they noticed that they have the same `content.json` and reject them.", "added": 1514623129, "modified": 1514623129, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354541656", "source_type": "github"}, {"comment_id": 189, "body": "@krixano: Then maybe we should add a `noob` option to `zeronet.conf` (wait, if someone finds `zeronet.conf` they aren't noobs) which will be not-so-good-performance-but-easier-to-use.", "added": 1514623397, "modified": 1514635156, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354541840", "source_type": "github"}, {"comment_id": 190, "body": "> Would looking at modified dates of the files work?\r\n\r\nMaybe that would be faster. Yeah, a good idea. @HelloZeroNet ", "added": 1514623650, "modified": 1514623663, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354542014", "source_type": "github"}, {"comment_id": 191, "body": "So if that would be as slow as signing, we don't need `publish only`. Also, you may notice that `sitePublish` API command signs automatically, and the button on sidebar sends a special argument to publish w/o signing.", "added": 1514625110, "modified": 1514625110, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354542980", "source_type": "github"}, {"comment_id": 192, "body": "So maybe this is OK?\r\n\r\n```\r\n+---------------------+------+---------+\r\n| content.json        | Sign | Publish |\r\n+---------------------+------+---------+\r\n|            Sign & Publish            |\r\n+--------------------------------------+\r\n```", "added": 1514625633, "modified": 1514625633, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543358", "source_type": "github"}, {"comment_id": 193, "body": "Like this?\r\n\r\n```\r\n+---------------------+------------------+\r\n| content.json        | Sign & Publish v |\r\n+---------------------+------------------+\r\n                      | Sign only        |\r\n                      +------------------+\r\n                      | Publish only     |\r\n                      +------------------+\r\n```", "added": 1514626281, "modified": 1514626281, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543789", "source_type": "github"}, {"comment_id": 194, "body": "Was it from some post with CSS/JS or just an image?", "added": 1514626380, "modified": 1514626426, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543865", "source_type": "github"}, {"comment_id": 195, "body": "I'll try to implement this then.", "added": 1514626460, "modified": 1514626460, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354543922", "source_type": "github"}, {"comment_id": 196, "body": "> This is the code it suggests:\r\n\r\nYeah, something like this.", "added": 1514626947, "modified": 1514626947, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354544254", "source_type": "github"}, {"comment_id": 197, "body": "Not classes, but at least HTML is correct.", "added": 1514627117, "modified": 1514627117, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354544355", "source_type": "github"}, {"comment_id": 198, "body": "WIP https://github.com/imachug/ZeroNet/tree/issue-1229", "added": 1514635520, "modified": 1514635520, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1229#issuecomment-354550743", "source_type": "github"}], "1604066313_mirrored_imachug_github": [{"comment_id": 199, "body": "@krixano lemme check.", "added": 1514649994, "modified": 1514649994, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354562884", "source_type": "github"}, {"comment_id": 200, "body": "That check is about how much time some op takes. So that's not important in this case as I didn't edit that part of code.", "added": 1514650060, "modified": 1514650060, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354562947", "source_type": "github"}, {"comment_id": 201, "body": "@anoadragon453 I tried to find other buttons which look the same way, but didn't manage to do that. So maybe a dropdown would be better, right.", "added": 1514695427, "modified": 1514695427, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354590154", "source_type": "github"}, {"comment_id": 202, "body": "Though I am not sure what would be better. @HelloZeroNet, do you allow me to bring yet-another-library to Sidebar plugin?", "added": 1514695627, "modified": 1514695627, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354590258", "source_type": "github"}, {"comment_id": 203, "body": "@HelloZeroNet Did you get a letter from `saketjoshiiit [at] gmail [dot] com`? Kinda spam?", "added": 1514713370, "modified": 1514713370, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354601777", "source_type": "github"}, {"comment_id": 204, "body": "@HelloZeroNet I'll use that library then.", "added": 1514713446, "modified": 1514713446, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354601827", "source_type": "github"}, {"comment_id": 205, "body": "@HelloZeroNet \r\n\r\n> Hello,\r\n> \r\n> I am a university researcher working on an empirical study of software\r\n> projects. A part of my study concerns projects with high release\r\n> rates.I noticed that the software repository HelloZeroNet/ZeroNet on\r\n> Github has a very fast release cycle. If you couple quickly answer a\r\n> couple of questions below and reply to me at the earliest, that would\r\n> be very helpful.\r\n> \r\n> Q1. Would you say the repository development is in a sense 'agile',\r\n> i.e. is rapid development being done?\r\n> Q2. What kind of a project is this? e.g (Web application, driver, e.t.c)\r\n> Q3. Is there any reason for rapid releases? i.e. do you have\r\n> auto-release set, are changes done in between releases, e.t.c\r\n> \r\n> Both, a brief reply to the questions, and if you wish any other\r\n> comments are welcome.\r\n> Also, it would be helpful if you could mention the repository name in\r\n> your reply for my convenience.\r\n> \r\n> Thank you,\r\n> Saket Joshi", "added": 1514714162, "modified": 1514714162, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354602313", "source_type": "github"}, {"comment_id": 206, "body": "@HelloZeroNet Updated\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/34463151-1db02df0-ee64-11e7-9370-bca652e81918.png)", "added": 1514728370, "modified": 1514728370, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-354614046", "source_type": "github"}, {"comment_id": 207, "body": "@HelloZeroNet Sorry, can we merge this?", "added": 1516006285, "modified": 1516006285, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231#issuecomment-357661558", "source_type": "github"}], "1604066315_mirrored_imachug_github": [{"comment_id": 208, "body": "@HelloZeroNet I could create a PR for this, but I don't understand why this happens at all.", "added": 1516006222, "modified": 1516006222, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1232#issuecomment-357661330", "source_type": "github"}], "1604066289_mirrored_Rtnd_github": [{"comment_id": 209, "body": "ZeroNet opens all your HTML files in `<iframe>`, so some things don't work because of SecurityError's. For example, `top.isRemotePresenter` throws an error. I'll try look what makes that error in Vue, but that may result in changing built code.", "added": 1515042075, "modified": 1515042075, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1236#issuecomment-355220428", "source_type": "github"}, {"comment_id": 210, "body": "Can you show your `index.html`?", "added": 1515044334, "modified": 1515044334, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1236#issuecomment-355226667", "source_type": "github"}, {"comment_id": 211, "body": "@krixano Not Vue, but maybe some plugin is generating incorrect code.", "added": 1515061030, "modified": 1515061030, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1236#issuecomment-355279556", "source_type": "github"}], "1604066290_mirrored_tangdou1_github": [{"comment_id": 212, "body": "@tangdou1 Did you sign that? Also, if I could not download that site you could just send a ZIP here.", "added": 1515772063, "modified": 1515772063, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1237#issuecomment-357321642", "source_type": "github"}, {"comment_id": 213, "body": "Okay I can reproduce the problem.", "added": 1515901784, "modified": 1515901784, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1237#issuecomment-357492420", "source_type": "github"}, {"comment_id": 214, "body": "Fixed: [1FevQJGEw5XadC1Hmkc6fL3WJcqyUmkXay.zip](https://github.com/HelloZeroNet/ZeroNet/files/1629117/1FevQJGEw5XadC1Hmkc6fL3WJcqyUmkXay.zip)\r\n\r\nWhen you are transfering ClearNet site to ZeroNet, you can't just copy files. For example:\r\n1. In ZeroNet you must use localStorage via ZeroFrame API only.\r\n2. You can't simply use XHR or `fetch`.\r\n3. You must add `<base>` and a script to `<head>`.\r\n4. And many more. You can find some of them in [my tutorial](https://github.com/krixano/ZeroNet-Dev-Center/issues/28).\r\n\r\nSo I've added a monkey-patch to make XHR work and included ZeroFrame to your site.", "added": 1515904320, "modified": 1515904320, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1237#issuecomment-357493851", "source_type": "github"}, {"comment_id": 215, "body": "@tangdou1 @HelloZeroNet I assume this can be closed now?", "added": 1515936645, "modified": 1515936645, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1237#issuecomment-357523573", "source_type": "github"}, {"comment_id": 216, "body": "@tangdou1 What @HelloZeroNet should work, but if you use Unity's own `SetFullscreen` method, it probably won't work in ZeroNet, you need to use ZeroFrame API. If you encounter this error, you should send me a new ZIP, so I could implement fullscreen.", "added": 1523698232, "modified": 1523698232, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1237#issuecomment-381325877", "source_type": "github"}], "1604066296_mirrored_shirishag75_github": [{"comment_id": 217, "body": "ZeroNet uses portchecker.co to test if port is open. Looks like it is down.\r\n\r\n@HelloZeroNet We should check for errors before searching for `open`, and fallback to P2P check. ", "added": 1515900577, "modified": 1515900577, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1239#issuecomment-357491765", "source_type": "github"}, {"comment_id": 218, "body": "@HelloZeroNet I'll make a PR.", "added": 1515900923, "modified": 1515900923, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1239#issuecomment-357491950", "source_type": "github"}, {"comment_id": 219, "body": "@HelloZeroNet I've made a PR #1240.", "added": 1515901560, "modified": 1515901560, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1239#issuecomment-357492295", "source_type": "github"}], "1604066296_mirrored_elliekeli_github": [{"comment_id": 220, "body": "That's incorrect use of `ZeroNet-win-dist`. Instead of:\r\n\r\n```\r\ncd C:\\Users\\NAME\\Desktop\\ZeroNet-win-dist\\core\r\n\"C:\\Python27\\python.exe\" zeronet.py siteCreate\r\n```\r\n\r\n...use:\r\n\r\n```\r\ncd C:\\Users\\NAME\\Desktop\\ZeroNet-win-dist\r\nzeronet.exe siteCreate\r\n```\r\n\r\nAlso, I don't recommend you to use `siteCreate`. Instead, use ZeroHello.", "added": 1515925385, "modified": 1515925385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1241#issuecomment-357511615", "source_type": "github"}, {"comment_id": 221, "body": "> If I'm not wrong, there's a bug in the \"/\"\r\n> \"../Python/python.exe\" zeronet.py siteCreate\r\n> \r\n> (That's right)\r\n> \"..\\Python\\python.exe\" zeronet.py siteCreate\r\n\r\nIn Windows both `/` and `\\` are correct.", "added": 1515925413, "modified": 1515925413, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1241#issuecomment-357511641", "source_type": "github"}, {"comment_id": 222, "body": "@HelloZeroNet\r\n\r\n> actually it's lib/zeronet.cmd siteCreate as the zeronet.exe is gui-only application and you won't see any output to command line from it.\r\n\r\nWell, you are not quite right. I use hooks in Git Center, and for signing call either `zeronet.py siteSign` or `core/zeronet.py siteSign` or `zeronet.exe siteSign`. All work, including `zeronet.exe`.\r\n\r\n@elliekeli \r\n\r\n> I would like to ask how exactly \"Identity address\" works...\r\n\r\nIn clearnet you have a login, a password and sometimes a nick. In ZeroNet, your nick would be `elliekeli`, your login would be `1AoDYdMxwA55FTp2FNBrMaMv9r1ZzC6jSu`, and password would be a private key (which is stored in `core/data/users.json`). ZeroNet shows that login in sidebar.\r\n\r\nZeroNet is decentralized, so there can be options when nickname isn't unique (e.g. KaffieID). But login is auto-generated and guaranteed to be unique. Password is also auto-generated, so there is no chance you would be hacked (if someone doesn't steal your `users.json`, of course).\r\n\r\nThat identity address was given to you when you registered on ZeroID.\r\n\r\nHope I could answer your question.", "added": 1515990084, "modified": 1515990084, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1241#issuecomment-357600899", "source_type": "github"}, {"comment_id": 223, "body": "@HelloZeroNet Okay, that makes sense. I did that `>/dev/null` stuff to supress output, so I didn't notice.\r\n\r\n@elliekeli \r\n\r\n> if I understand it correctly \"Identity address\" is the unique account (for each zeronet page separately) everyone PC has \"random generated\" on the same page?\r\n\r\nWhen you log in some site, you see options like `Unique to this site` and `zeroid.bit`. If `Unique to this site` is chosen then identity address is really unique. When `zeroid.bit` is chosen, then that identity address would be in fact your ZeroID login.\r\n\r\n> I still want to ask what it is \"(limit used: 0.00kB / 0.00kB)\" thx.\r\n\r\nSite owners can set limits for users, so users could't use a lot of space. On ZeroTalk, that limit is 50KB. If you open that sidebar on ZeroTalk, you'll see `?KB/50KB` which means you have `(50 - ?) KB` storage left for your posts.\r\n\r\nOf course `0KB/0KB` doesn't make sense, that means that you didn't log in yet.", "added": 1515999599, "modified": 1515999599, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1241#issuecomment-357635197", "source_type": "github"}, {"comment_id": 224, "body": "@JazzMaster YOU are wrong. Look at [zeronet-win-dist](https://github.com/HelloZeroNet/ZeroNet-win).", "added": 1518243579, "modified": 1518243652, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1241#issuecomment-364638243", "source_type": "github"}], "1604066297_mirrored_tomas06_github": [{"comment_id": 225, "body": "Did you sign that page? How did you sign/publish it?", "added": 1515995310, "modified": 1515995310, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357617626", "source_type": "github"}, {"comment_id": 226, "body": "Did you `sign` it? Does it say `content.json signed successfully` or what?", "added": 1515999918, "modified": 1515999918, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357636605", "source_type": "github"}, {"comment_id": 227, "body": "Next time when you publish a video, delete private key. But, anyways, you can't do anything right now because I've already copied it. Let this be a warning next time.\r\n\r\nDo you have a port opened on any of those machines?", "added": 1516001966, "modified": 1516001966, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357645334", "source_type": "github"}, {"comment_id": 228, "body": "There are sometimes problems with that content publish failed. Usually just reloading page on one computer and publishing at the same time on another fixes this.", "added": 1516002050, "modified": 1516002050, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357645715", "source_type": "github"}, {"comment_id": 229, "body": "> \"Your port 15441 is closed, but your Tor gateway is running well.\"\r\n> That is the problem?\r\n\r\nWait, are you running Tor? There can be problems when publishing via Tor sometimes. With initial publishing, I mean. Sending publishes to peers having your site already usually works. So try to publish with tor disabled first.", "added": 1516002760, "modified": 1516002760, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357648588", "source_type": "github"}, {"comment_id": 230, "body": "And it isn't checked on ZeroHello, right?", "added": 1516004359, "modified": 1516004359, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357654759", "source_type": "github"}, {"comment_id": 231, "body": "Weird. That `content.json` can be missing, but only for clients, but you are site owner. Try to sign again and upload to a proxy then.", "added": 1516004908, "modified": 1516005277, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357656706", "source_type": "github"}, {"comment_id": 232, "body": "> So the \"content.json\" file itself does not use its own site (only use-clients)?\r\n\r\nPressing `Sign` button creates that `content.json` . `content.json` holds all info about files. Pressing `publish` sends `content.json` to peers.\r\n\r\nWhen peers receive a new `content.json` of a site they have, they look through `content.json`. It holds hashes of all files, so they can compare if some files were changed. If they were, they ask other peers for updated file.\r\n\r\nSo `content.json` is read-only for clients and read-write for owner.", "added": 1516005605, "modified": 1516005605, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357659191", "source_type": "github"}, {"comment_id": 233, "body": "> I don't understand how, but now everything works immediately..\r\n\r\nWell, I told you that *sometimes* publishing doesn't work, so maybe that's the case.\r\n\r\nI assume we can close this now?", "added": 1516006173, "modified": 1516006173, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-357661140", "source_type": "github"}, {"comment_id": 234, "body": "@HelloZeroNet Can we close this issue please?", "added": 1561980822, "modified": 1561980822, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1242#issuecomment-507290677", "source_type": "github"}], "1604066329_mirrored_yurivict_github": [{"comment_id": 235, "body": "@tienanh2007 You might want to look at #1223 or #1233 or #1247.", "added": 1516420002, "modified": 1516420002, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1243#issuecomment-359150552", "source_type": "github"}], "1604066301_mirrored_elliekeli_github": [{"comment_id": 236, "body": "Unfortunately, there isn't a CMS ready for ZeroNet yet. But you could take a look at ZeroBlog.", "added": 1516007029, "modified": 1516007029, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1244#issuecomment-357664205", "source_type": "github"}, {"comment_id": 237, "body": "Everyone creates their own CMS. But there isn't anything simple like WordPress.", "added": 1516027754, "modified": 1516027754, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1244#issuecomment-357750183", "source_type": "github"}, {"comment_id": 238, "body": "@HelloZeroNet This issue looks like a duplicate (there's a couple of other CMS issues), and it isn't directly related to ZeroNet core. Could you close it please?", "added": 1561980902, "modified": 1561980925, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1244#issuecomment-507291223", "source_type": "github"}], "1604066306_mirrored_slrslr_github": [{"comment_id": 239, "body": "Try with MutePlugin disabled. Rename `plugins/Mute` directory to `plugins/disabled-Mute`.", "added": 1516089333, "modified": 1516089333, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1245#issuecomment-357924639", "source_type": "github"}, {"comment_id": 240, "body": "Looks like you are trying to visit some muted site, you get redirected to ZeroHello but that doesn't work somewhy. Is it possible that you muted ZeroHello? :D", "added": 1516096613, "modified": 1516096613, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1245#issuecomment-357951332", "source_type": "github"}], "1604066302_mirrored_rKsanu2MMYvypWePtQWM_github": [{"comment_id": 241, "body": "> Zeromail: No reply from echo bot\r\n\r\nEchobot is often offline.", "added": 1516028250, "modified": 1516028250, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1246#issuecomment-357751940", "source_type": "github"}], "1604066305_mirrored_TaibiaoGuo_github": [{"comment_id": 242, "body": "@HelloZeroNet Looks like this issue was resolved?", "added": 1561980999, "modified": 1561980999, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1248#issuecomment-507291916", "source_type": "github"}], "1604066310_mirrored_April93_github": [{"comment_id": 243, "body": "@April93 Weird, that `exec init in globals(), locals()` is Python3-style.", "added": 1516420128, "modified": 1516420128, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1252#issuecomment-359150639", "source_type": "github"}, {"comment_id": 244, "body": "PR: #1253.", "added": 1516423485, "modified": 1516423485, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1252#issuecomment-359153346", "source_type": "github"}], "1604066343_mirrored_imachug_github": [{"comment_id": 245, "body": "Looks like that is a Python 2.7.8 bug which was fixed in 2.7.9.", "added": 1516424569, "modified": 1516424569, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1253#issuecomment-359154380", "source_type": "github"}], "1604066389_mirrored_HelloZeroNet_github": [{"comment_id": 246, "body": "Hm... The idea itself look interesting, but ~2-3 days... Not sure if that is acceptable for users who join the network.", "added": 1516807149, "modified": 1516807149, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1258#issuecomment-360225879", "source_type": "github"}, {"comment_id": 247, "body": "Okay, looks reasonable.", "added": 1516811926, "modified": 1516811926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1258#issuecomment-360249251", "source_type": "github"}], "1604066321_mirrored_tangdou1_github": [{"comment_id": 248, "body": "@HelloZeroNet Run fileRules locally?", "added": 1517189255, "modified": 1517189255, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1260#issuecomment-361137356", "source_type": "github"}], "1604066355_mirrored_imachug_github": [{"comment_id": 249, "body": "@HelloZeroNet Any news?", "added": 1517140221, "modified": 1517140221, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261#issuecomment-361068564", "source_type": "github"}, {"comment_id": 250, "body": "I know, but there is no way to query data from ZeroWiki when I add it as CORS.\r\n\r\nKaffiene does use ZeroWiki's database, but it uses JavaScript SQLite.\r\n\r\nAlso you said we shouldn't encourage that, and I completely agree - that must be the last resort - but sometimes there is no way to avoid using it.", "added": 1517140950, "modified": 1517141005, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261#issuecomment-361069375", "source_type": "github"}, {"comment_id": 251, "body": "@HelloZeroNet I can PR that - should it be support for `dbschema.json`:\r\n\r\n```\r\nmaps: {\r\n    \"cors-.*/...\": ...\r\n}\r\n```\r\n\r\nor should it be a command `corsDbQuery(\"address\", \"query\", params)`?", "added": 1517141672, "modified": 1517141672, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261#issuecomment-361070190", "source_type": "github"}, {"comment_id": 252, "body": "Thank you!", "added": 1517142734, "modified": 1517142734, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261#issuecomment-361071388", "source_type": "github"}, {"comment_id": 253, "body": "@HelloZeroNet Let me check.", "added": 1517143714, "modified": 1517143714, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261#issuecomment-361072552", "source_type": "github"}, {"comment_id": 254, "body": "Wait - this doesn't work:\r\n\r\n```\r\npage.cmd(\"as\", [\"138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP\", \"dbQuery\", \"SELECT * FROM json WHERE json_id = :param\", {param: param}])\r\n```", "added": 1517144098, "modified": 1517144098, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261#issuecomment-361072976", "source_type": "github"}, {"comment_id": 255, "body": "Yeah, it works - thank you for implementing this. Though I think that should be documented somewhere.", "added": 1517144326, "modified": 1517144326, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261#issuecomment-361073261", "source_type": "github"}], "1604066327_mirrored_antilibrary_github": [{"comment_id": 256, "body": "`delete localStorage` will only delete `window.localStorage`. It is possible that `localStorage` object can be accessed another way, so `delete localStorage` won't help.", "added": 1518609753, "modified": 1518609753, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-365634050", "source_type": "github"}, {"comment_id": 257, "body": "Do you know if `localStorage.set/getItem` is read-only? If it isn't, it would be more secure to use `localStorage.set/getItem = ...` instead.", "added": 1518611676, "modified": 1518611676, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-365644285", "source_type": "github"}, {"comment_id": 258, "body": "Looks interesting. Though I think some other ops like `clear` should be allowed, but otherwise it's ready.", "added": 1518615046, "modified": 1518615046, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-365663640", "source_type": "github"}, {"comment_id": 259, "body": "> Can you list the security concerns for NOSANDBOX, and why each visitor to the site has to Grant the permission after being prompted with a message suggesting it is \"Dangerous!\"? If you produce sample code for testing, can you please share that as well to help us test?\r\n\r\nPoC:\r\n\r\n```\r\n// Get NOSANDBOX permission, then:\r\n\r\nwindow.parent.zeroframe.cmd(\"configSet\", [\"open_browser\", \"cmd && rem %s\"]);\r\nwindow.parent.zeroframe.cmd(\"serverShutdown\", [true]);\r\n```\r\n\r\nWow, you now have a shell in ZeroNet console, which means that an attacker can possibly run any code on your computer, e.g. still keys or setup a cryptolocker.", "added": 1566187307, "modified": 1566187307, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-522440090", "source_type": "github"}, {"comment_id": 260, "body": "I do have some ideas. Instead of embedding site content into an iframe, you can insert an iframe into your site. @HelloZeroNet I can implement this (I have done that for my Alt-ZeroNet implementation already), but I wanted to check whether you're fine with it.", "added": 1566218321, "modified": 1566218321, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-522632902", "source_type": "github"}, {"comment_id": 261, "body": "> Do you have the latest py3 in Alt-ZeroNet? I'd like to test it.\r\n\r\nNo of course. Alt-ZeroNet is a completely different implementation. It uses NodeJS, not Python. It's also Work-In-Progress. I'm planning on speeding up development in September. There's no alpha/beta version yet.\r\n\r\nWhat I was talking about is that I have implemented *a part* of ZeroNet already; more specifically, the ZeroFrame gate, and I'm currently porting it to the official implementation.", "added": 1566234872, "modified": 1566234872, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-522735722", "source_type": "github"}, {"comment_id": 262, "body": "@github-zeronet\r\n\r\nUh... so there are commands that can be executed by the site and commands that can be executed by the *wrapper*. Everything that can be used by the site can also be used by the wrapper, but not vice versa. Take a look at ZeroTalk. It can read files, write files, sign & publish content, choose certificate provider, and... that's it. The wrapper (more specifically, the sidebar) need to do more stuff: change site size limit, list peer location, reload & rebuild database, pause, update and delete the site, and a few more things. Enabling `NOSANDBOX` means allowing the site execute those commands, so the site could set its size limit to 1 TB and fill up your drive.\r\n\r\nA lot better idea would be to make it such that there's *no* reason to use `NOSANDBOX` at all -- i.e. moving the content out of iframe. My idea is to make a so-called iframe gate. Here's a small overview on it:\r\n\r\n- The browser requests `/Talk.ZeroNetwork.bit/`;\r\n- ZeroNet replies with a small prefix (read below) and with `index.html` contents;\r\n- That small prefix sets up an iframe with `/ZeroNet-Internal/WebsocketGate` URL;\r\n- The browser requests `/ZeroNet-Internal/WebsocketGate`;\r\n- ZeroNet prepares the result:\r\n  - ZeroNet uses the referrer to check what site is accessing the gate;\r\n  - ZeroNet generates a nonce for that site (`wrapper_nonce`);\r\n  - ZeroNet replies with `Content-Security-Policy: sandbox allow-scripts` header;\r\n  - ZeroNet replies with `<script>wrapper_nonce = \"{wrapper_nonce}\"; var socket = new Websocket(\"...?wrapper_nonce=\" + wrapper_nonce);</script>` content;\r\n- The browser connects to the websocket with `wrapper_nonce` nonce;\r\n- ZeroNet checks what site that nonce is for and sets up permissions accordingly;\r\n- *Iframe gate is now ready*\r\n- Whenever the site wants to use UiWebsocket API:\r\n  - The site uses classic ZeroFrame API and calls `.cmd`/`.cmdp`;\r\n  - ZeroFrame does `window.parent.sendMessage(..., \"*\")`;\r\n  - The prefix has started intercepting those messages by the time being, so it catches the message;\r\n  - The prefix sends the message to iframe gate with `sendMessage`;\r\n  - The iframe gate sends the message to websocket;\r\n  - The result is sent in the same way, but in opposite direction.\r\n\r\nNotice that `Referer` [sic] is used here to check what site is using the websocket. However, `Referer` header is not set for websockets, that's why we're using iframe.", "added": 1566270146, "modified": 1566270146, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-522866751", "source_type": "github"}, {"comment_id": 263, "body": "@HelloZeroNet \r\n\r\n> but not sure if this way it's possible to do permission requests\r\n\r\nSure it is; I have little time to explain the details right now, but here's an overview: you can create an iframe with a gate document, set `Content-Security-Policy: sandbox allow-scripts` for that document, and use shadow dom to position that iframe.\r\n\r\n> the sidebar\r\n\r\nSame as above\r\n\r\n> you won't be able to do cookie\r\n\r\nWe can use `path=/address` to limit cookies to a specific site.\r\n\r\n> localstorage limiting\r\n\r\nThis is a bit more difficult, but we can use the following trick: we'd store the local storage content in `users.json` as we do with `siteSettings` already; if we *really* want some consistency with `localStorage` behaviour (i.e. unique to browser), we could fingerprint the browser with `User-Agent` or something. Then, we'd first put localStorage to the prefix and then use that data to *read* localStorage, and then we'd use UiWebsocket to *modify* localStorage.\r\n\r\nThis means that compromising `localStorage` (e.g. with an iframe) makes no sense because it's empty.", "added": 1566297701, "modified": 1566297743, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-523020440", "source_type": "github"}, {"comment_id": 264, "body": "@github-zeronet No ETA yet, mostly because I can't predict it, but I'll tell you when I'll finish a PoC.", "added": 1566297793, "modified": 1566297793, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-523021087", "source_type": "github"}, {"comment_id": 265, "body": "Please see my proposal at #2169. @github-zeronet", "added": 1566322090, "modified": 1566322090, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1262#issuecomment-523181346", "source_type": "github"}], "1604066398_mirrored_HelloZeroNet_github": [{"comment_id": 266, "body": "> Don't do anything, let other clients try and fail for unknown sites\r\n\r\nA bad idea (at least without any changes) - currently ZeroNet downvotes peers that request unknown sites.", "added": 1517109694, "modified": 1517109694, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1264#issuecomment-361041419", "source_type": "github"}], "1604066341_mirrored_shirishag75_github": [{"comment_id": 267, "body": "Try not to set `~/log` - instead, set `/home/whatever/log`. AFAIK ZeroNet doesn't do alias expansion.", "added": 1517397223, "modified": 1517397223, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1271#issuecomment-361943974", "source_type": "github"}, {"comment_id": 268, "body": "Wait what? Please replace that with `/home/whatever/log` and post the error again please - it should change.", "added": 1517404651, "modified": 1517404664, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1271#issuecomment-361984077", "source_type": "github"}, {"comment_id": 269, "body": "Try to delete `/` from the end.", "added": 1517406589, "modified": 1517406589, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1271#issuecomment-361995028", "source_type": "github"}, {"comment_id": 270, "body": "Yeah, weird. You mentioned headless Linux. What if ZeroNet is running under some other user or whatever?", "added": 1517408851, "modified": 1517408851, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1271#issuecomment-362007312", "source_type": "github"}, {"comment_id": 271, "body": "@shirishag75 Seriously? Looks like I should to sleep more.", "added": 1517409327, "modified": 1517409327, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1271#issuecomment-362009713", "source_type": "github"}], "1604066346_mirrored_slrslr_github": [{"comment_id": 272, "body": "What about another idea? Pass dict to certSelect:\r\n\r\n```\r\n{\r\n    \"nanasi\": \"nanasi.bit\",\r\n    \"kaffie.bit\": \"id.kaffie.bit\"\r\n}\r\n```\r\n\r\nwhere key is auth cert provider and value is `register >` link.", "added": 1517502503, "modified": 1517502503, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1272#issuecomment-362375252", "source_type": "github"}], "1604066388_mirrored_MuxZeroNet_github": [{"comment_id": 273, "body": "What is the problem we are trying to solve using this?", "added": 1518429532, "modified": 1518429532, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1284#issuecomment-364915485", "source_type": "github"}, {"comment_id": 274, "body": "I see, looks interesting!", "added": 1518486201, "modified": 1518486201, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1284#issuecomment-365149439", "source_type": "github"}, {"comment_id": 275, "body": "> Not recommended .... complicates the structure and makes it less accessible to new developers\r\n\r\nDoesn't git compilcate it all? Doesn't chromium complicate it all, can't we use just curl? Doesn't Windows/Linux complicate it all, oh, I see, it does, let's switch to DOS!!\r\n\r\nI'm sorry if that was rude, but this is a very interesting feature, and if we make it optional, it can be used without problems (for new developers and structure).\r\n\r\n> Always put clear step-by-step instructions to compile code for all operating systems\r\n\r\nI think @HelloZeroNet has already answered, but anyway: ZeroNet is using Python which is an interpreter. So you usually don't need to compile code, but if you need, you can use https://github.com/HelloZeroNet/ZeroNet-win/tree/dist https://github.com/HelloZeroNet/ZeroNet-kivy https://github.com/HelloZeroNet/ZeroNet-mac/tree/dist https://github.com/HelloZeroNet/ZeroBundle", "added": 1521464207, "modified": 1521464207, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1284#issuecomment-374263568", "source_type": "github"}, {"comment_id": 276, "body": "Right now I cannot understand what exact features you need, so I can't tell you what parts of code you need to change/remove, but if you tell me a bit about your project, I could help you. imachug [at] gmail [dot] com", "added": 1521685700, "modified": 1521685700, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1284#issuecomment-375184560", "source_type": "github"}, {"comment_id": 277, "body": "> create a zite with a fully referenced code-base for zeronet and give me the link please\r\n\r\n:laughing: Okay, I'll try to create it.", "added": 1521707669, "modified": 1521707669, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1284#issuecomment-375273135", "source_type": "github"}], "1604066365_mirrored_slrslr_github": [{"comment_id": 278, "body": "When you sign and publish a site, it is published to its peers only. If you want to get peers, ask other users to download the site.", "added": 1518516006, "modified": 1518516006, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-365259751", "source_type": "github"}, {"comment_id": 279, "body": "Do you have any Unicode characters in site name/whatever?", "added": 1518518836, "modified": 1518518836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-365271104", "source_type": "github"}, {"comment_id": 280, "body": "What happens when you remove title and description from `content.json`, open sidebar, sign `content.json` and try to change title/description via sidebar again?", "added": 1518521965, "modified": 1518521965, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-365285698", "source_type": "github"}, {"comment_id": 281, "body": "> when i do that, then saving start working and the title i used (\u011b\u0161\u010d\u0159\u017e\u00fd\u00e1\u00ed\u00e9 1 a) is added into content.json and looks like this:\r\n\"title\": \"\\u011b\\u0161\\u010d\\u0159\\u017e\\u00fd\\u00e1\\u00ed\\u00e9 1 a\",\r\n\r\nThat's because Unicode characters are not allowed in JSON and cause parse error.", "added": 1518523063, "modified": 1518523063, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-365291385", "source_type": "github"}, {"comment_id": 282, "body": "> Chrome\r\n\r\nAre you kidding? Chrome isn't open-source. *Chromium* is, but after they added telemetry there... I don't believe Google anymore.\r\n\r\nMoreover, using one browser for ZeroNet means:\r\n1. Create that open-source multi-platform browser.\r\n2. If we decide to use Chrome, use C for all the code, and that means `use C instead of Python`, but the code cant be easy to be rewritten in pure C.\r\n3. Browsers for Android and iOS.\r\n4. Loose cross-platform feature.", "added": 1521463649, "modified": 1521463649, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-374260157", "source_type": "github"}, {"comment_id": 283, "body": "*offtop* @didlie Google is evil.", "added": 1521685770, "modified": 1521685770, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1286#issuecomment-375184736", "source_type": "github"}], "1604066357_mirrored_MarBlen79_github": [{"comment_id": 284, "body": "There is ZeroNetJS by @mkg20001, @HelloZeroNet", "added": 1518778903, "modified": 1518778903, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1289#issuecomment-366242876", "source_type": "github"}], "1604066369_mirrored_RedbHawk_github": [{"comment_id": 285, "body": "Where did you find `Sign & Publish new content`?", "added": 1519353756, "modified": 1519353756, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1298#issuecomment-367915768", "source_type": "github"}], "1604066370_mirrored_AccountCreatr_github": [{"comment_id": 286, "body": "After reading ZeroNet's code, that's what I got:\r\n\r\n1. In case `master_seed` is not set, it's generated randomly each time you make/clone a site.\r\n2. When you make/clone a site, a random `address_index` value is generated and saved to `content.json`. Then it's joined with `master_seed` and used to generate a private key. Pseudocode: `integerToPrivatekey(master_seed + address_index)`.\r\n3. The private key is converted to public address and can be used as site address now.\r\n\r\nSo, in case you loose all the private keys but you still have `master_seed`, you can:\r\n\r\n1. Download all the sites you've lost the keys to.\r\n2. For each site: take `address_index` from `content.json`, take `master_seed` from `users.json` and generate the private key with `integerToPrivatekey(master_seed + address_index)`.\r\n\r\nThough ZeroNet doesn't do this by default, it's possible to make it do it.", "added": 1537925123, "modified": 1537925123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1299#issuecomment-424580477", "source_type": "github"}], "1604066395_mirrored_slrslr_github": [{"comment_id": 287, "body": "Find `master_seed` in `users.json`. That is your login. Then press `Sign out` on ZeroHello and then relogin with `master_seed`.", "added": 1519808769, "modified": 1519808769, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1308#issuecomment-369219598", "source_type": "github"}, {"comment_id": 288, "body": "@slrslr You must copy `users.json` from one computer to another. Without it `master_seed` doesn't mean anything.", "added": 1520075942, "modified": 1520075942, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1308#issuecomment-370150678", "source_type": "github"}, {"comment_id": 289, "body": "@HelloZeroNet Never knew about this, thanks!", "added": 1520164465, "modified": 1520164465, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1308#issuecomment-370235291", "source_type": "github"}], "1604066391_mirrored_tangdou1_github": [{"comment_id": 290, "body": "Working on PR.", "added": 1520477097, "modified": 1520477097, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1314#issuecomment-371386091", "source_type": "github"}], "1604066396_mirrored_sxueck_github": [{"comment_id": 291, "body": "Use `zeronet.py siteSign address_of_site private_key`. This will sign & publish automatically.", "added": 1520741644, "modified": 1520741644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1321#issuecomment-372094754", "source_type": "github"}], "1604066403_mirrored_tangdou1_github": [{"comment_id": 292, "body": "I don't think so. `Backend` means server-side, which means `has server`. However, ZeroNet was created especially to remove servers.\r\n\r\nIn practice, (practically) everything that is possible to be done on backend is also possible in ZeroNet's frontend. You can manage files here, you have permissions, etc.\r\n\r\nIf you have any reasons to use backend, it is possible that the same can be easily done with backend, so you can ask for help here, at Gitter, at ThunderWave, at ZeroExchange, etc.", "added": 1520741056, "modified": 1520741056, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1323#issuecomment-372094359", "source_type": "github"}], "1604066413_mirrored_icf20_github": [{"comment_id": 293, "body": "Hey @didlie are you going to pack Chromium, Tor, I2P and ZeroNet in one package??", "added": 1521463686, "modified": 1521463690, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1331#issuecomment-374260385", "source_type": "github"}], "1604066418_mirrored_tangdou1_github": [{"comment_id": 294, "body": "> I found that it is difficult to access a zite created by me from PC A in PC B sometimes. So I wanted to copy the file of zite from PC A to PC B. But it went wrong when I access the zite from PC B, although the file of this zite had been copied to PC B indeed. It just show nothing. Weird.\r\n\r\nWhat does it show? Did you visit the link like `http://127.0.0.1:43110/address` or ZeroHello?", "added": 1521723909, "modified": 1521723909, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1332#issuecomment-375361510", "source_type": "github"}], "1604066416_mirrored_funny110_github": [{"comment_id": 295, "body": "Not really until we add WebRTC ICE server support to ZeroNet, but I think it will be difficult (or impossible) to implement.", "added": 1521464343, "modified": 1521464343, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1333#issuecomment-374264416", "source_type": "github"}], "1604066415_mirrored_didlie_github": [{"comment_id": 296, "body": "@didlie You need to use the `Delete` option on ZeroHello.", "added": 1521464249, "modified": 1521464249, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1335#issuecomment-374263817", "source_type": "github"}], "1604066430_mirrored_ValdikSS_github": [{"comment_id": 297, "body": "Well, @ValdikSS, this check was added to protect from `<img src=\"/fdgkjdhgjfd\">` attack. Normal HTTP requests send `text/html` as `Accept`, while `img` tags don't.", "added": 1521463203, "modified": 1521463203, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1346#issuecomment-374257447", "source_type": "github"}, {"comment_id": 298, "body": "@ValdikSS\r\nYes, for example, other sites could trigger site download by adding `<img src=\"/Talk.ZeroNetwork.bit/\">` tag that will download ZeroTalk.", "added": 1521471416, "modified": 1521471416, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1346#issuecomment-374307182", "source_type": "github"}], "1604066445_mirrored_didlie_github": [{"comment_id": 299, "body": "There isn't any, but the code is well documented, so if you just start from `src/Ui/UiWebsocket.py`, `src/Site/Site.py` and `src/Peer/Peer.py` and look through their dependencies, you'll understand the internals like I do.", "added": 1521622940, "modified": 1521622945, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1349#issuecomment-374914244", "source_type": "github"}, {"comment_id": 300, "body": "> Why did you name those specific files: src/Ui/UiWebsocket.py, src/Site/Site.py and src/Peer/Peer.py?\r\n\r\nThat's the core functionality of ZeroNet/zites.\r\n\r\n> disable updating of the base code (via github diabled)\r\n> users cannot create their own websites on my (desired) application. They must download zeronet and use zeronet - I will provide a link in my app.\r\n> only 1 website available on the app... a website that I will build (already built reprogrammed in python and javascript)\r\n\r\nYou can enable `MultiUser` plugin especially for this.\r\n\r\n> enable only a single predefined website, with user directories defined by their public (bitcoin) addresses, or a sqlite db with a row for each user hash (bitcoin hash), and another sqlite db with a blockchain, and another with additional details,\r\n> users can only update one sqlitedb using their private key and add to the blockchain db with \"transactions\"\r\n> users interact with my site/app by editing a short list of key-value pairs associated with their bitcoin address\r\n> all records of user activity is saved in a sqlite db that is updated accross the network and can only be edited at the points of \"ownership\" by the owners of the private keys associated with the bitcoin addresses related to their personal content (key-value pairs)\r\n\r\nThis is usually achieved by creating a `data.json` file for each user and merging them up to a SQLite database. You can check out my tutorials here: https://github.com/krixano/ZeroNet-Dev-Center/issues/28\r\n\r\n> Anyone who wants to participate in my website, the one I will build using my fork of zeronet, must download my app, and participate according to the limitations available through my app.\r\n\r\nJust include ZeroNet code to your app and create a special startup script, ZeroNet will handle these limitations itself.\r\n\r\n> only 1 website available on the app... a website that I will build (already built reprogrammed in python and javascript)\r\n\r\nIf you have Python scripts that can be rewritten to JavaScript, do that. It will also be helpful to ZeroNet users, so they would be able to use your app without a wrapper.\r\n\r\nIf the scripts cannot be rewritten, you can handle all UI in browser and send ZeroFrame requests to your ZeroNet fork. Then you could write a plugin that will add those commands to ZeroFrame handler. (tutorial: http://127.0.0.1:43110/14pM9huTYzJdyQyHRj6v2kfhMe8DrxwpGt/?/tutorials/write_a_plugin)\r\n\r\n> blockchain db can only be appended and never edited\r\n\r\nThis is rather difficult with ZeroNet. If you know how to change the algorithms to allow appending only, you can do this, but otherwise you should use another tool, like Etherium.", "added": 1521643988, "modified": 1521643988, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1349#issuecomment-375037406", "source_type": "github"}, {"comment_id": 301, "body": "@didlie You can connect me at ZeroMail if you need help: gitcenter@zeromail.bit", "added": 1521647832, "modified": 1521647832, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1349#issuecomment-375058307", "source_type": "github"}, {"comment_id": 302, "body": "Do you mean data sharing (e.g. github) or realtime p2p connections (e.g. bitcoin)?", "added": 1521685513, "modified": 1521685539, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1349#issuecomment-375184063", "source_type": "github"}, {"comment_id": 303, "body": "> can I ask you if you have a script to discover all websites across the network? How is this done? where in the code is this done?\r\n\r\nThere is no way to discover **all** sites because anyone can create a site and don't send a link to someone. So only the owner knows about the site.\r\n\r\nBut there is Zirch, a search engine that grabs the addresses from HTML, data files, etc. recursively.", "added": 1521723750, "modified": 1521723750, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1349#issuecomment-375360567", "source_type": "github"}, {"comment_id": 304, "body": "> a ZeroNet blockchain\r\n\r\nSounds interesting.", "added": 1521723786, "modified": 1521723786, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1349#issuecomment-375360792", "source_type": "github"}, {"comment_id": 305, "body": "You mean, make blockchain?", "added": 1521732549, "modified": 1521732549, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1349#issuecomment-375411924", "source_type": "github"}], "1604066448_mirrored_didlie_github": [{"comment_id": 306, "body": "@krixano That could be some repository with submodules, right? I.e. add all the modules as links to GitHub.", "added": 1521644026, "modified": 1521644026, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375037630", "source_type": "github"}, {"comment_id": 307, "body": "But at least we shouldn't clutter the main repo, so maybe we can fork the modules?", "added": 1521647901, "modified": 1521647901, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375058646", "source_type": "github"}, {"comment_id": 308, "body": "@krixano If you used Wine, `virtualenv` is something like prefixes in Wine.", "added": 1521686712, "modified": 1521686712, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1350#issuecomment-375187089", "source_type": "github"}], "1604066445_mirrored_tangdou1_github": [{"comment_id": 309, "body": "There is site size limit, so maybe it is set to ~10MB, and your 18MB file is just running out of limit.", "added": 1521723602, "modified": 1521723602, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1352#issuecomment-375359655", "source_type": "github"}, {"comment_id": 310, "body": "@tangdou1 AFAIK Tor mode allows you not to keep the port open. ", "added": 1521799548, "modified": 1521799548, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1352#issuecomment-375658733", "source_type": "github"}], "1604066495_mirrored_tangdou1_github": [{"comment_id": 311, "body": "@tangdou1 It could be possible to compress the game to ZIP and use ZeroNet auto-unpack feature.", "added": 1523154129, "modified": 1523154129, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1381#issuecomment-379521426", "source_type": "github"}], "1604066485_mirrored_wzhb_github": [{"comment_id": 312, "body": "Of course you can use Chinese but if you speak English or use Google Translate other people will understand you.\r\n\r\n@wzhb \u7576\u7136\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e2d\u6587\uff0c\u4f46\u5982\u679c\u4f60\u8aaa\u82f1\u8a9e\u6216\u4f7f\u7528\u8c37\u6b4c\u7ffb\u8b6f (Google Translate) \uff0c\u5176\u4ed6\u4eba\u6703\u7406\u89e3\u4f60", "added": 1523698399, "modified": 1523698399, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1385#issuecomment-381326044", "source_type": "github"}, {"comment_id": 313, "body": "*Saving your time for translation.*\r\n\r\n# Recommendation to add proxy settings to ZeroNet\r\n\r\nCan you add settings to let users set up Tor via ZeroNet? Please edit the file [probably README.md or Wiki], the current way is not very user-friendly.", "added": 1523698725, "modified": 1523698737, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1385#issuecomment-381326342", "source_type": "github"}], "1604066487_mirrored_wzhb_github": [{"comment_id": 314, "body": "It shows `cannot update` because noone has the site except yourself, so there is noone who can give you a newer version because your own version is the only one.\r\n\r\nSo, this is not an error.", "added": 1523698025, "modified": 1523698036, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1386#issuecomment-381325682", "source_type": "github"}], "1604066505_mirrored_anoadragon453_github": [{"comment_id": 315, "body": "What is the name of the file? If it contains `|` it can be a problem.", "added": 1524199389, "modified": 1524199400, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1394#issuecomment-383011566", "source_type": "github"}], "1604066492_mirrored_ugvf2009_github": [{"comment_id": 316, "body": "Translated:\r\n\r\n# Cannot connect to any node.", "added": 1524279739, "modified": 1524279739, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1395#issuecomment-383270511", "source_type": "github"}], "1604066533_mirrored_ghost_github": [{"comment_id": 317, "body": "Adding to what @krixano said, these changes are only visible for you", "added": 1524313085, "modified": 1524313085, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1397#issuecomment-383304521", "source_type": "github"}, {"comment_id": 318, "body": "@krixano\r\n\r\n> Although, not sure if big files are included in that.\r\n\r\nThey are included.\r\n\r\n> it is probably being added to the database\r\n\r\nGood point, I haven't thought about this!", "added": 1524328466, "modified": 1524328466, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1397#issuecomment-383323755", "source_type": "github"}, {"comment_id": 319, "body": "@HelloZeroNet Close because of inactivity?", "added": 1526784521, "modified": 1526784521, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1397#issuecomment-390459645", "source_type": "github"}], "1604066536_mirrored_ghost_github": [{"comment_id": 320, "body": "@DATSEC Yup, it's necessary.", "added": 1524378591, "modified": 1524378591, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383367876", "source_type": "github"}, {"comment_id": 321, "body": "@DATSEC That code is compiled from CoffeeScript; you'd better copy `ZeroFrame.js` from https://github.com/HelloZeroNet/ZeroHello/blob/master/template-new/js/ZeroFrame.js and include it to `index.html`. Then:\r\n\r\n```javascript\r\nvar zeroFrame = new ZeroFrame();\r\n\r\nvar local_storage = {};\r\nZeroFrame.cmd(\"wrapperGetLocalStorage\", [], function (res) {\r\n    var key;\r\n    for(key in local_storage) {\r\n        if(!res.hasOwnProperty(key)) {\r\n            delete local_storage[key] ;\r\n        }\r\n    }\r\n    for(key in res) {\r\n        local_storage[key] = res[key];\r\n    }\r\n\r\n    // put code which uses localstorage here\r\n    // when you want to get from localstorage, use local_storage[key]\r\n    // when you want to save to localstorage, use local_storage[key] = value; zeroFrame.cmd(\"wrapperSetLocalStorage\", local_storage);\r\n});\r\n```", "added": 1524380381, "modified": 1524380381, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383369291", "source_type": "github"}, {"comment_id": 322, "body": "It is unsafe. *allow-same-origin* allows you to escape iframe and do some bad things like shutdown ZeroNet/edit any zite/open ~infinity explorer.exe windows", "added": 1524386136, "modified": 1524386136, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383375097", "source_type": "github"}, {"comment_id": 323, "body": "@DATSEC Use `Page` instead of `ZeroFrame`.", "added": 1524393143, "modified": 1524393143, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383381922", "source_type": "github"}, {"comment_id": 324, "body": "Then you don't need `ZeroFrame = (function(superClass) {`:\r\n\r\n```javascript\r\n'use strict';\r\n// create\r\nlet head = document.head,\r\n  link = document.createElement('link');\r\nlink.rel = 'stylesheet';\r\n\r\nPage.cmd(\"wrapperGetLocalStorage\", [], function (local_storage) {\r\n\r\n  // put code which uses localstorage here\r\nif (local_storage['themeStyle'] === 'dark') {\r\nlink.href = 'css/dark.css'; // link to a dark style\r\ndocument.getElementById('switch-1').setAttribute('checked', true); // switch the checkbox to the \"dark theme\"\r\n}\r\n// default light theme\r\nelse {\r\nlink.href = 'css/light.css'; // link to light style\r\n}\r\nhead.appendChild(link); // insert the  into the header of the page between the head\r\n\r\n// event when switching checkbox\r\ndocument.getElementById('switch-1').addEventListener('change', ev => {\r\nlet btn = ev.target;\r\n// if the checkbox is enabled\r\nif (btn.checked) {\r\n  link.href = 'css/dark.css'; // turn off the dark theme\r\n  local_storage['themeStyle'] = 'dark'; // write the value in localStorage\r\n}\r\nelse {\r\n  link.href = 'css/light.css'; // turn on the light theme\r\n  local_storage['themeStyle'] = 'light'; // write the value in localStorage\r\n}\r\n\r\n  // when you want to save to localstorage, use local_storage[key] = value;\r\nPage.cmd(\"wrapperSetLocalStorage\", local_storage);\r\n});\r\n});\r\n```", "added": 1524404699, "modified": 1524404699, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383395060", "source_type": "github"}, {"comment_id": 325, "body": "@DATSEC Do you put this file under `<script src=\"all.js\">`?", "added": 1524405175, "modified": 1524405175, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383395640", "source_type": "github"}, {"comment_id": 326, "body": "@jaros1 A bad idea! ZeroFrame MUST be a singleton, but it isn't in this case (1. your `new ZeroFrame` 2. ZeroUp's code)", "added": 1524406643, "modified": 1524406643, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383397284", "source_type": "github"}, {"comment_id": 327, "body": "@DATSEC How do you run the code? :confused: ", "added": 1524407111, "modified": 1524407111, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383397766", "source_type": "github"}, {"comment_id": 328, "body": "@DATSEC Do you run this from console?", "added": 1524407326, "modified": 1524407332, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383398040", "source_type": "github"}, {"comment_id": 329, "body": "@DATSEC Do you run JavaScript from DevTools or do you edit `index.html` or do you edit `all.js`?", "added": 1524407593, "modified": 1524407593, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383398309", "source_type": "github"}, {"comment_id": 330, "body": "@DATSEC Include `<script type=\"text/javascript\" src=\"js/script.js?=version=1.0\" charset=\"UTF-8\"></script>` below `all.js`.", "added": 1524408295, "modified": 1524408295, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383399097", "source_type": "github"}, {"comment_id": 331, "body": "That `js/script.js` couldn't be there from the very beginning! `all.js` could, but not `script.js`!", "added": 1524410052, "modified": 1524410052, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383401107", "source_type": "github"}, {"comment_id": 332, "body": "Can you give me your `index.html` please?", "added": 1524410076, "modified": 1524410076, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383401140", "source_type": "github"}, {"comment_id": 333, "body": "Okay, that's better. Have you tried this code: https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383395060 ?", "added": 1524410476, "modified": 1524410476, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383401586", "source_type": "github"}, {"comment_id": 334, "body": "@DATSEC I remember, ZeroNet has some caching. You should disable it in DevTools->Settings->Preferences->Disable HTTP cache (while DevTools is open).", "added": 1524411136, "modified": 1524411136, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383402352", "source_type": "github"}, {"comment_id": 335, "body": "@DATSEC Interestingly, cleaning cache didn't work for me.", "added": 1524411255, "modified": 1524411255, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1399#issuecomment-383402481", "source_type": "github"}], "1604066502_mirrored_nicolas161_github": [{"comment_id": 336, "body": "@skwerlman\r\n\r\n> 2.7.2\r\n\r\nAncient python?", "added": 1526051260, "modified": 1526051260, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1402#issuecomment-388441815", "source_type": "github"}], "1604066517_mirrored_byaeger_github": [{"comment_id": 337, "body": "What errors do you get and where do you get them?", "added": 1525573657, "modified": 1525573657, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1414#issuecomment-386855074", "source_type": "github"}, {"comment_id": 338, "body": "Oh, that's normal. When you have no internet connection, it can't connect anywhere - including other peers. You must have your connection on for ZeroNet to work. ZeroNet won't access any Internet sites except trackers. The error is shown because it can't connect to trackers (because Internet is offline).\r\n\r\nProbably what you are looking for is called meshnet. In meshnet routers communicate without internet connection. (though the network wire must be plugged in)", "added": 1525577393, "modified": 1525577393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1414#issuecomment-386857549", "source_type": "github"}, {"comment_id": 339, "body": "If it was loaded before, ZeroNet can open it.", "added": 1525616291, "modified": 1525616291, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1414#issuecomment-386895082", "source_type": "github"}], "1604066525_mirrored_rllola_github": [{"comment_id": 340, "body": "@EibrielInv That is `(new Date).toString()`", "added": 1525862654, "modified": 1525862654, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1415#issuecomment-387743099", "source_type": "github"}], "1604066520_mirrored_kzoacn_github": [{"comment_id": 341, "body": "**ZeroBoard is outdated.** It is unsecure and uses clearnet. It is possible to make a board without clearnet, and probably @HelloZeroNet doesn't have much time to do it. But I think we should at least add a warning.\r\n\r\nBy the way, you should have posted this issue here: http://github.com/HelloZeroNet/ZeroBoard", "added": 1525834525, "modified": 1525834525, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1416#issuecomment-387628361", "source_type": "github"}], "1604066522_mirrored_lothendriel_github": [{"comment_id": 342, "body": "What happens in log when you start 0net?", "added": 1525954951, "modified": 1525954951, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1418#issuecomment-388087117", "source_type": "github"}, {"comment_id": 343, "body": "Open ZeroNet directory, `log` directory inside, `debug.log` will be there.", "added": 1525957822, "modified": 1525957822, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1418#issuecomment-388102018", "source_type": "github"}, {"comment_id": 344, "body": "You can post it to `imachug [at] gmail [dot] com`.", "added": 1525958952, "modified": 1525958952, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1418#issuecomment-388107426", "source_type": "github"}, {"comment_id": 345, "body": "Your log looks very weird:\r\n\r\n```\r\n...\r\n[2018-05-10 13:03:40,755] ERROR    - Unhandled exception\r\nNone\r\n...\r\n```\r\n\r\nand many other such lines. Looks like `raise None` is somewhere, but I can't find where. Probably it's @HelloZeroNet who can help you, because I can't even get a stacktrace as `None` is raised.", "added": 1525966816, "modified": 1525966883, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1418#issuecomment-388146100", "source_type": "github"}], "1604066545_mirrored_didlie_github": [{"comment_id": 346, "body": "> referring URLs\r\n\r\nCan you please explain that?", "added": 1526132163, "modified": 1526132163, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-388567067", "source_type": "github"}, {"comment_id": 347, "body": "Latest release: https://github.com/HelloZeroNet/ZeroNet/releases/tag/v0.6.2", "added": 1526132205, "modified": 1526132205, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-388567128", "source_type": "github"}, {"comment_id": 348, "body": "You should better ask @HelloZeroNet maybe at hello@zeronet.io. AFAIK that code isn't opensource.", "added": 1526200398, "modified": 1526200398, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-388620202", "source_type": "github"}, {"comment_id": 349, "body": "@HelloZeroNet Probably he is talking about two kinds of trackers: zero:// and regular.", "added": 1526973494, "modified": 1526973494, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-390939509", "source_type": "github"}, {"comment_id": 350, "body": "Zeronet relies on site architecture, so you should either make your app a site or make your app from scratch. ", "added": 1529750569, "modified": 1529750569, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-399679387", "source_type": "github"}, {"comment_id": 351, "body": "Though I agree with @krixano, I'd like to heard the approach you have - I don't want to run down everyone's idea - maybe we could make it a plugin for 0net or sth. ", "added": 1529891557, "modified": 1529891677, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-399830350", "source_type": "github"}, {"comment_id": 352, "body": "I'm sorry I misunderstood you, @krixano ", "added": 1529893430, "modified": 1529893442, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1422#issuecomment-399835304", "source_type": "github"}], "1604066567_mirrored_imachug_github": [{"comment_id": 353, "body": "I'll probably make it a plugin.", "added": 1526550851, "modified": 1526550851, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-389856049", "source_type": "github"}, {"comment_id": 354, "body": "As for passive protection, we should probably make it Etherium-like, i.e. allow crypto-functions, conditionals, etc. ", "added": 1526565621, "modified": 1526565621, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-389937695", "source_type": "github"}, {"comment_id": 355, "body": "Renamed `message_filter` to `p2p_filter`.", "added": 1526570095, "modified": 1526570095, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-389960050", "source_type": "github"}, {"comment_id": 356, "body": "> if i am sure my application will never send out more then 1 packet per second i can put it there to limit and stop people spamming,\r\n\r\nDone.", "added": 1526570566, "modified": 1526570566, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-389962360", "source_type": "github"}, {"comment_id": 357, "body": "Added size limit. Will update docs soon.", "added": 1526570675, "modified": 1526570675, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-389962914", "source_type": "github"}, {"comment_id": 358, "body": "Implemented signature. (not encryption or \"disable no-signature\")", "added": 1526608860, "modified": 1526608880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-390094996", "source_type": "github"}, {"comment_id": 359, "body": "Added `p2p_signed_only`.", "added": 1526640207, "modified": 1526640207, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-390211302", "source_type": "github"}, {"comment_id": 360, "body": "> do you think encryption via preshare keys are a good idea?\r\n\r\nIt definitely is.", "added": 1526640537, "modified": 1526794170, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-390213022", "source_type": "github"}, {"comment_id": 361, "body": "@Thunder33345 It's still a question how encrypted messages should be decrypted when they are received - by P2P-messages plugin or by JavaScript?", "added": 1526641731, "modified": 1526641731, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-390219096", "source_type": "github"}, {"comment_id": 362, "body": "Maybe just use aesEncrypt/aesDecrypt instead?", "added": 1526661545, "modified": 1526661545, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-390311463", "source_type": "github"}, {"comment_id": 363, "body": "**Problem: If the port is closed, no one can send you a message.**", "added": 1526696680, "modified": 1526794421, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-390380618", "source_type": "github"}, {"comment_id": 364, "body": "> hm so you need an open port to work?\r\n> any workarounds that can be applied in an lower level/core itself to \"fix\" it?\r\n\r\n@krixano and I just checked it with only @krixano having port open, and it works. So if a peer has a closed port, but is connected to someone, this will work.", "added": 1526704480, "modified": 1526704480, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425#issuecomment-390386603", "source_type": "github"}], "1604066539_mirrored_krixano_github": [{"comment_id": 365, "body": "TODO: Add `Add to Start Menu`.", "added": 1526696248, "modified": 1526696248, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390380336", "source_type": "github"}, {"comment_id": 366, "body": "@krixano It works on my machine. Just one question: should the app start in administrator mode when `Open ZeroNet` is chosen in setup?", "added": 1526784477, "modified": 1526784477, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390459620", "source_type": "github"}, {"comment_id": 367, "body": "It definitely works, but why are admin privileges required?", "added": 1526787077, "modified": 1526794174, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390461043", "source_type": "github"}, {"comment_id": 368, "body": "Yeah, that was quite a silly question then.", "added": 1526787442, "modified": 1526787442, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390461301", "source_type": "github"}, {"comment_id": 369, "body": "To be even more specific, this is the latest release: https://github.com/krixano/ZeroNet-Windows-Exe-Installer/releases/latest", "added": 1526814750, "modified": 1526814750, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1429#issuecomment-390485864", "source_type": "github"}], "1604066574_mirrored_imachug_github": [{"comment_id": 370, "body": "IRC test: [1FEL2HhvS48m8SsAPcuyo7irf7J9Ebx449.zip](https://github.com/HelloZeroNet/ZeroNet/files/2019238/1FEL2HhvS48m8SsAPcuyo7irf7J9Ebx449.zip)\r\n\r\nCreate a new site, upload those files, sign&publish and call others to open the site on their computers. Chat without limitations :)\r\n", "added": 1526704606, "modified": 1526704606, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390386698", "source_type": "github"}, {"comment_id": 371, "body": "@HelloZeroNet Need your advice.\r\n\r\nCurrently messages are broadcasted to any ~5 peers (or whatever the developer chooses). But those 5 peers may not have `P2P-messages` plugin, and they won't be able to broadcast the message. So we need to send the message only to those peers who have a specific plugin.\r\n\r\nAnd here is the question: is it secure enough to add `getPluginList` FileRequest command? Or is it better to return *hashes* of plugin names? Or is it better to add `hasPlugin`? Or anything else?", "added": 1526706590, "modified": 1526706590, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390388350", "source_type": "github"}, {"comment_id": 372, "body": "Some things not done yet:\r\n\r\n- [x] peerBroadcast\r\n- [x] peerSend\r\n- [x] reply to peerSend", "added": 1526788351, "modified": 1526913485, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390461833", "source_type": "github"}, {"comment_id": 373, "body": "Updated [IRC](https://github.com/HelloZeroNet/ZeroNet/files/2020104/1FEL2HhvS48m8SsAPcuyo7irf7J9Ebx449.zip)\r\n", "added": 1526789190, "modified": 1526789190, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390462386", "source_type": "github"}, {"comment_id": 374, "body": "I hope this plugin will be embedded to ZeroNet via this PR, so soon you won't need `git clone`.", "added": 1526793502, "modified": 1526793502, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390465392", "source_type": "github"}, {"comment_id": 375, "body": "@krixano Thank you!", "added": 1526794206, "modified": 1526794206, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390465972", "source_type": "github"}, {"comment_id": 376, "body": "A better IRC site for tests: \r\n[1DdBX7wzwEaAEuEVQgYpMDhGCmXMXy9W6t.zip](https://github.com/HelloZeroNet/ZeroNet/files/2023567/1DdBX7wzwEaAEuEVQgYpMDhGCmXMXy9W6t.zip)\r\n", "added": 1526914494, "modified": 1526914494, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390731826", "source_type": "github"}, {"comment_id": 377, "body": "@HelloZeroNet If you are by any chance reading this, please reply to https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-390388350", "added": 1527486466, "modified": 1527486481, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392462996", "source_type": "github"}, {"comment_id": 378, "body": "Sounds like a good solution without any need to change ZeroNet core. Thank you.\r\n\r\nBy the way, currently active protection (i.e. validation via JS) is done only if browser is open. However, this may not be the case. We (@Thunder33345, @krixano, @AnthyG and me) decided that we can make a new language, or a JavaScript interpreter which would run some file, e.g. `p2p.js` from site root when a new message is received. What do you think about this solution?\r\n\r\nIf you accept it, I would like to separate the plugin to another repository, because with the interpreter it's going to be large. You would either use submodules or subtrees or manually copy content from this another repository. You could either create it under @HelloZeroNet user and make me a collaborator (even if I make some security bug, it won't be added to this repo automatically, because submodules/subtrees aren't updated to the latest version by git automatically) or I can create a repo under @imachug and I'll add you as collaborator -- whatever you choose.", "added": 1527492739, "modified": 1527492739, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392488197", "source_type": "github"}, {"comment_id": 379, "body": "Will you create a repo for me under @HelloZeroNet and make a collaborator or do you let me create a repo under @imachug ?", "added": 1527498809, "modified": 1527498809, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392511033", "source_type": "github"}, {"comment_id": 380, "body": "I'm working on hub stuff. (i.e. read permissions)", "added": 1527500867, "modified": 1527500867, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392518276", "source_type": "github"}, {"comment_id": 381, "body": "Well, if we create our own language, like Solidity, it will be secure. I've created *a bunch* of languages (and they even worked *sigh*), so it might be a good idea.", "added": 1527500927, "modified": 1527500927, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392518449", "source_type": "github"}, {"comment_id": 382, "body": "@HelloZeroNet ", "added": 1527513694, "modified": 1527513694, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392565007", "source_type": "github"}, {"comment_id": 383, "body": "PeerMessage sounds good -- renaming.", "added": 1527563917, "modified": 1527563917, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392664434", "source_type": "github"}, {"comment_id": 384, "body": "Renamed", "added": 1527565884, "modified": 1527565884, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392670817", "source_type": "github"}, {"comment_id": 385, "body": "By the way, that stuff running in background should be probably separated to another plugin. I've created repo for it: https://github.com/imachug/ZeroNet-Background", "added": 1527565966, "modified": 1527565966, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392671098", "source_type": "github"}, {"comment_id": 386, "body": "> I have added the repo for PeerMessage plugin: https://github.com/HelloZeroNet/Plugin-PeerMessage\r\n\r\nThank you for creating a repo! I'll push the stuff there and you can use `git submodule add` or something.\r\n\r\n> As for the Background plugin name we should find a more exact name maybe BackgroundProcessing or DataProcessing?\r\n\r\nPersonally I'd use BackgroundProcessing.", "added": 1527579187, "modified": 1527579187, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392730570", "source_type": "github"}, {"comment_id": 387, "body": "I think I'll create some docs for this plugin (PeerMessage) - probably in GitHub Wiki.\r\n\r\nAnd then I'll start implementing BackgroundProcessing - could you please create a repository for it as well, because I think it'll support several languages - and I think I even know how. And it'll include Wiki as well - so it's going to be too large to be included to ZeroNet main repository.\r\n\r\nLet's make ZeroNet great.", "added": 1527580739, "modified": 1527580762, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392736586", "source_type": "github"}, {"comment_id": 388, "body": "Just finished docs: https://github.com/HelloZeroNet/Plugin-PeerMessage -- please check if it's readable someone.", "added": 1527606348, "modified": 1527606348, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392878256", "source_type": "github"}, {"comment_id": 389, "body": "Not WIP anymore. Can be merged.\r\n\r\n@HelloZeroNet If you're using git to download ZeroNet somewhere, you should check if it works for submodules - because that's how I merged the plugin into core repository.", "added": 1527607263, "modified": 1527607263, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392883211", "source_type": "github"}, {"comment_id": 390, "body": "@HelloZeroNet I tried to transfer https://github.com/imachug/Plugin-BackgroundProcessing to you - you should probably receive a notification or something. We could discuss implementation details in that new repository.", "added": 1527607529, "modified": 1527607529, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-392885026", "source_type": "github"}, {"comment_id": 391, "body": "Most of the features of this plugin depend on BackgroundProcessing which I think I'll finish soon. So I think we shouldn't release PeerMessage yet.", "added": 1527659915, "modified": 1527659933, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-393085095", "source_type": "github"}, {"comment_id": 392, "body": "@imachug I think you should ask @shortcutme, because he's the owner of ZeroNet.", "added": 1535715287, "modified": 1535715287, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-417683396", "source_type": "github"}, {"comment_id": 393, "body": "Well, my plugins support plain-text now (and JSON), not binary data, but that should be enough for now.", "added": 1535716132, "modified": 1535716132, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-417687634", "source_type": "github"}, {"comment_id": 394, "body": "@shortcutme @HelloZeroNet Finally, this plugin is ready to be merged!", "added": 1535721218, "modified": 1535721218, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-417713931", "source_type": "github"}, {"comment_id": 395, "body": "@HelloZeroNet @shortcutme Any news on this? The plugin has been tested on various sites like [0Play Game Center](http://127.0.0.1:43110/1Ag6xidDHiPgWoDKhfSx4xFQr6WC3NqxZg) (games & chat), [/z/place](http://127.0.0.1:43110/1D6f2CvDRhPeEeBAcmqGt3X9z2CkLpmv2V/) and [KxoID](http://127.0.0.1:43110/1GTVetvjTEriCMzKzWSP9FahYoMPy6BG1P/?/), and it's not easy for most users to install plugins. This makes users angry, and they see that using ZeroNet isn't easy, so they stop using ZeroNet and tell everybody that it's some sh\\*t no one should try to use, ZeroNet doesn't receive any donations and you don't have any money. \ud83e\udd23 ", "added": 1536574670, "modified": 1536574670, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-419908498", "source_type": "github"}, {"comment_id": 396, "body": "@HelloZeroNet, @krixano is developing a plugin store (as a part of his KxoNetwork site). Downloading the plugins work, but if I add some UiWebsocket method to install a plugin & import it (with confirmation), will you accept the PR to add such API command?", "added": 1536592932, "modified": 1536592932, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420011648", "source_type": "github"}, {"comment_id": 397, "body": "@HelloZeroNet Please don't think I'm rude. I appreciate your work and understand that it takes a lot of time and you have to do a lot outside the web. I just wanted to get a reply whether you're going to merge this later or whether I should keep it as a separate project, like I think we'll do with BackgroundProcessing.", "added": 1536598070, "modified": 1536598070, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420037114", "source_type": "github"}, {"comment_id": 398, "body": "There is an idea. Not sure whether it works, but if it does, it could simplify installing plugins.\r\n\r\nThe idea is to have permissions for plugins. I mean, we can have `UiWebsocket` permission for changing UiWebsocket class, and `NOSANDBOX` permission for running without sandbox. Users can choose some plugins as safe (@HelloZeroNet's plugins well be marked as safe by default), which is the same as granting `NOSANDBOX` permission. \r\n\r\nThe sandbox can be created from my BackgroundProcessing plugin. It turned out to work well for sites (as IP exchange service, backend for KxoID on @krixano's side, etc.) It is not an interpreter of Python, it only makes code that looks dangerous... not dangerous. So it's practically as fast as Vanilla Python.\r\n\r\nMoreover, it means that @HelloZeroNet will only have to verify BackgroundProcessing, and other plugins will be executed via it. ", "added": 1536744783, "modified": 1536744783, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-420631066", "source_type": "github"}, {"comment_id": 399, "body": "@HelloZeroNet What are your plans on this PR?", "added": 1544795713, "modified": 1544795713, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-447385171", "source_type": "github"}, {"comment_id": 400, "body": "BTW the PeerMessage plugin repo has been updated, so this PR is outdated a bit. Let me update the submodule real fast", "added": 1558258070, "modified": 1558258070, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-493752766", "source_type": "github"}, {"comment_id": 401, "body": "There, done.", "added": 1558258616, "modified": 1558258616, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-493753384", "source_type": "github"}, {"comment_id": 402, "body": "I'm closing this PR as new changes should be only made on py3 branch, and there is a py3 version of this PR already. ", "added": 1561969835, "modified": 1561969835, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-507226559", "source_type": "github"}], "1604066542_mirrored_hoochanlon_github": [{"comment_id": 403, "body": "Just visit [id.kaffie.bit](http://127.0.0.1:43110/id.kaffie.bit) and register there on your local machine.", "added": 1526888515, "modified": 1526888515, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-390619177", "source_type": "github"}, {"comment_id": 404, "body": "You can logout via sidebar. Many sites let you logout too. ", "added": 1565765604, "modified": 1565765604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1434#issuecomment-521181293", "source_type": "github"}], "1604066545_mirrored_dotnetspec_github": [{"comment_id": 405, "body": "Wait for ZeroMail to sync completely (see that green line on top of the window)", "added": 1527052526, "modified": 1527052526, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1436#issuecomment-391260952", "source_type": "github"}, {"comment_id": 406, "body": "I'd like to say that those 298 left may be just some invalid files, which were malformed by users. Anyways, after most files are synced you will be able to create mailbox.", "added": 1527134490, "modified": 1527134490, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1436#issuecomment-391610527", "source_type": "github"}, {"comment_id": 407, "body": "TBH when I have this error I usually delete ZeroMail (open sidebar by dragging 0 in right-top corner, scroll a bit and press <kbd>Delete</kbd> button) and redownload it. This \"solution\" usually works.", "added": 1527218805, "modified": 1527218805, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1436#issuecomment-391954796", "source_type": "github"}], "1604066587_mirrored_imachug_github": [{"comment_id": 408, "body": "Thank you.", "added": 1527486560, "modified": 1527486560, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1437#issuecomment-392463390", "source_type": "github"}], "1604066591_mirrored_imachug_github": [{"comment_id": 409, "body": "Thank you.", "added": 1527486400, "modified": 1527486400, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1439#issuecomment-392462715", "source_type": "github"}], "1604066550_mirrored_ilovelinux_github": [{"comment_id": 410, "body": "> chmod 777 /var/run/tor/control.authcookie\r\n\r\nDon't do this! It allows all programs to control Tor settings. Instead, create a separate user for ZeroNet, do chown for control.authcookie and ZeroNet files, then chmod 700 for control.authcookie and optionally chmod +s for ZeroNet executable if you want to. ", "added": 1573203351, "modified": 1573203351, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1440#issuecomment-551662544", "source_type": "github"}], "1604066552_mirrored_Adrianzo_github": [{"comment_id": 411, "body": "yeah", "added": 1527511443, "modified": 1527511443, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1441#issuecomment-392558321", "source_type": "github"}], "1604066572_mirrored_didlie_github": [{"comment_id": 412, "body": "Practically none. One of the change, though, is the addition of PeerMessage plugin which will allow sites communicate with other peers, which will let you build a blockchain and other stuff. See more info here: #1425, #1430, https://github.com/HelloZeroNet/Plugin-PeerMessage", "added": 1527593059, "modified": 1527593059, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1442#issuecomment-392795629", "source_type": "github"}, {"comment_id": 413, "body": "Yes, it can.", "added": 1527596974, "modified": 1527596974, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1442#issuecomment-392820634", "source_type": "github"}, {"comment_id": 414, "body": "If you want to use it, you can check [wiki](https://github.com/HelloZeroNet/Plugin-PeerMessage/wiki).", "added": 1527607170, "modified": 1527607170, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1442#issuecomment-392882612", "source_type": "github"}, {"comment_id": 415, "body": "@HelloZeroNet Closing? ", "added": 1566305896, "modified": 1566305896, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1442#issuecomment-523080100", "source_type": "github"}], "1604066559_mirrored_trenta3_github": [{"comment_id": 416, "body": "The plugin is practically finished, but not tested for security - though I've made it as much secure as I think it's possible, I'd like someone else to check it. The required steps to use the plugin are mentioned in my PR. ", "added": 1535550457, "modified": 1535550457, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1447#issuecomment-417023399", "source_type": "github"}], "1604066561_mirrored_Shydoo_github": [{"comment_id": 417, "body": "@HelloZeroNet I think most (if not all) questions were answered, could you close this please? ", "added": 1566305861, "modified": 1566305861, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1449#issuecomment-523079846", "source_type": "github"}], "1604066569_mirrored_krixano_github": [{"comment_id": 418, "body": "`BackgroundProcessing` is practically finished. However, I'd like you to test its security before. To do this, replace:\r\n\r\n```python\r\n    def backgroundOutput(self, *args):\r\n        raise NotImplementedError\r\n```\r\n\r\nwith:\r\n\r\n```python\r\n    def backgroundOutput(self, *args):\r\n        print args\r\n```\r\n\r\n\r\nNow add `0background.py` (`print 1`) to your site root and request `BACKGROUND` permission. You'll probably see `[1]` in ZeroNet console (`args` is a list).\r\n\r\nNow try to do something (e.g. `print eval(\"1\")`), *restart* ZeroNet to apply changes (to be fixed) and open console. You should see `NameError: eval` or something like that. Now try to escape the sandbox by using `dir`, etc. I hope you won't be able to hack the sandbox.\r\n\r\nIf you don't, I'll probably add update-without-restart feature and this PR can be merged.", "added": 1528558814, "modified": 1528558814, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-395990204", "source_type": "github"}, {"comment_id": 419, "body": "Does anyone want to test this?", "added": 1530961507, "modified": 1530961507, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-403217956", "source_type": "github"}, {"comment_id": 420, "body": "This plugin allows sites to do some work in background, while the site is closed. For example, one could rebuild indexes (if you are using your own database, not SQLite), or, if your site uses my PeerMessage plugin, you could react to pings. If you need some example code, tell me, I'll post it.", "added": 1535690148, "modified": 1535690148, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417579521", "source_type": "github"}, {"comment_id": 421, "body": "Thank you for testing, @krixano! I'll post the example code and the answers to your question as updates to this comment right now.", "added": 1535694688, "modified": 1535694688, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417598535", "source_type": "github"}, {"comment_id": 422, "body": "You can use most of the default functions:\r\n\r\n- `help`, `copyright`, `credits` and `license` doing nothing\r\n- `__package__` and `__name__` equal to `0background`\r\n- `__doc__` = \"\", `__debug__` = `False`\r\n- `globals` and `locals` functions\r\n- `reload` raising an exception\r\n- `print`, `input` and `raw_input` as a ways to interact with the plugin, not implemented yet -- i.e. they throw NotImplementedError\r\n- `getattr`, which allows getting all attributes, except: `__subclasses__` returning everything except `function` and other classes that can be used to escape the sandbox, `__globals__` and `func_globals` simulating `globals()`, `__code__` and `func_code` raising TypeError\r\n- `setattr`, disallowing `__subclasses__`, `__globals__` and `__code__`", "added": 1535695227, "modified": 1570015312, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417600945", "source_type": "github"}, {"comment_id": 423, "body": "Using ZeroFrame commands is supported:\r\n\r\n```\r\nimport ZeroFrame\r\nprint ZeroFrame.cmd(\"siteInfo\")\r\n```\r\n\r\nOr to receive commands, like `setSiteInfo`:\r\n\r\n```\r\nimport ZeroFrame\r\ndef func(site_info):\r\n    print site_info\r\nZeroFrame.on(\"setSiteInfo\", func)\r\n```", "added": 1535709062, "modified": 1535709062, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417653985", "source_type": "github"}, {"comment_id": 424, "body": "I don't think so -- that site is outdated.", "added": 1535713325, "modified": 1535713325, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417673897", "source_type": "github"}, {"comment_id": 425, "body": "@DaniellMesquita What's your ID on ZeroNet?", "added": 1535713953, "modified": 1535713953, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417676890", "source_type": "github"}, {"comment_id": 426, "body": "Thank you!", "added": 1535715305, "modified": 1535715305, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417683483", "source_type": "github"}, {"comment_id": 427, "body": "@shortcutme @HelloZeroNet Finally, this PR is ready to be merged!", "added": 1535721315, "modified": 1535721315, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-417714333", "source_type": "github"}, {"comment_id": 428, "body": "The only issue I can think of is a sandbox escape possibility - but I promise I've checked it several times. I'd like others to do it as well, though. ", "added": 1558261926, "modified": 1558261926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-493757793", "source_type": "github"}, {"comment_id": 429, "body": "`py3` branch of the plugin repo contains the code for Python 3.", "added": 1558401899, "modified": 1558401899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-494234296", "source_type": "github"}], "1604066584_mirrored_anoadragon453_github": [{"comment_id": 430, "body": "@HelloZeroNet Looks simple & promising. Can you merge this please?", "added": 1561716271, "modified": 1561716271, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1453#issuecomment-506726281", "source_type": "github"}], "1604066571_mirrored_trenta3_github": [{"comment_id": 431, "body": "ZeroNet is for Windows as well. ", "added": 1529321166, "modified": 1529321166, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1456#issuecomment-398072574", "source_type": "github"}], "1604066600_mirrored_vitorio_github": [{"comment_id": 432, "body": "What about showing both `Site address` and `Donate` if `donate` is present? I mean, I usually check site's address by opening sidebar.", "added": 1530961258, "modified": 1530961258, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1479#issuecomment-403217756", "source_type": "github"}, {"comment_id": 433, "body": "Thank you for your changes! It looks much better now.", "added": 1530968851, "modified": 1530968851, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1479#issuecomment-403225741", "source_type": "github"}], "1604066633_mirrored_slrslr_github": [{"comment_id": 434, "body": "This message means that there is a new version of your content.json somewhere - logs say the same, so if you choose \"Write content anyway\", you will lose those new posts. Usually you just wait or press \"Update\" button in sidebar. ", "added": 1531099542, "modified": 1531099542, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1482#issuecomment-403356137", "source_type": "github"}, {"comment_id": 435, "body": "Well maybe those peers went offline. ", "added": 1531112630, "modified": 1531112630, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1482#issuecomment-403394580", "source_type": "github"}], "1604066636_mirrored_slrslr_github": [{"comment_id": 436, "body": "Aah are you actually reading what was said?! @HelloZeroNet said that currently the file is filled with zeroes, and it *can* be possible not to do this. ", "added": 1531284040, "modified": 1531284040, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1484#issuecomment-404075245", "source_type": "github"}], "1604066628_mirrored_rllola_github": [{"comment_id": 437, "body": "You're editing *JavaScript* code, not Python code -- they are not connected directly. TBH I think that we shouldn't add a new `wrapperPermissionRemove` command, it's enough to make `permissionRemove` non-admin. What do you think?", "added": 1569768929, "modified": 1569768929, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1494#issuecomment-536325044", "source_type": "github"}, {"comment_id": 438, "body": "We already have `permissionRemove` command which is not actually used and is an ADMIN-only command. I see no point in adding another action, and I think that it'd be better if we used `permissionRemove` instead. We should make it not ADMIN-only, and maybe add some notification like \"You successfully ~~unsubscribed from our emails~~ removed HelloWorld permission\".", "added": 1569776855, "modified": 1569776855, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1494#issuecomment-536336389", "source_type": "github"}, {"comment_id": 439, "body": "@rllola Nope. See, we have `siteInfo` command, and we don't need to define an additional `wrapperSiteInfo` command. Also, we had an ADMIN `siteClone` command before but then we made it non-admin (because of Git Center). Same here: instead of adding `wrapperPermissionRemove` we can just make `permissionRemove` non-ADMIN. ", "added": 1569841592, "modified": 1569841592, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1494#issuecomment-536577447", "source_type": "github"}], "1604066653_mirrored_tangdou1_github": [{"comment_id": 440, "body": "Why was this closed?", "added": 1536747386, "modified": 1536747386, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1503#issuecomment-420644090", "source_type": "github"}], "1604066691_mirrored_trenta3_github": [{"comment_id": 441, "body": "Not sure, maybe we should make it a plugin to separate main core from additional features? ", "added": 1536313050, "modified": 1536313050, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1549#issuecomment-419426086", "source_type": "github"}, {"comment_id": 442, "body": "You may find the information you're looking for at [DevCenter.bit](http://127.0.0.1:43110/DevCenter.bit), and you can have a look at my [BackgroundProcessing plugin](https://github.com/HelloZeroNet/Plugin-BackgroundProcessing) which adds new functionality.", "added": 1536326879, "modified": 1536326879, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1549#issuecomment-419493837", "source_type": "github"}, {"comment_id": 443, "body": "@trenta3 Can you show me the code where you use Zeroname?", "added": 1536510937, "modified": 1536510937, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1549#issuecomment-419739357", "source_type": "github"}, {"comment_id": 444, "body": "@trenta3 You can use:\r\n\r\n```python\r\ntry:\r\n    import Zeroname\r\nexcept ImportError:\r\n    # ZeroName plugin is disabled\r\n```", "added": 1536510965, "modified": 1536510965, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1549#issuecomment-419739391", "source_type": "github"}], "1604066752_mirrored_DaniellMesquita_github": [{"comment_id": 445, "body": "I'm sure you know how to use ZeroFrame api, so here goes the code:\r\n\r\n```javascript\r\nZeroFrame.cmd(\"siteInfo\", [], function(siteInfo) {\r\n    console.log(\"You are\", siteInfo.cert_user_id); // e.g. gitcenter@zeroid.bit\r\n    console.log(\"Your ID is\", siteInfo.auth_address);\r\n```\r\n\r\nBy the way, you can probably find the anseers to your questions in my tutorials: https://github.com/krixano/ZeroNet-Dev-Center/issues/28", "added": 1535681669, "modified": 1535681669, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1555#issuecomment-417553973", "source_type": "github"}, {"comment_id": 446, "body": "Unfortunately, that's not possible, as far as I know.  :(", "added": 1535715046, "modified": 1535715046, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1555#issuecomment-417682250", "source_type": "github"}, {"comment_id": 447, "body": "Yeah, I just don't really have much time to work on Kiwipedia, but I'll try to implement that when I have time.", "added": 1535716087, "modified": 1535716087, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1555#issuecomment-417687411", "source_type": "github"}, {"comment_id": 448, "body": "I tried, but can't make ZeroMe switch to your hub -- do you know a solution?", "added": 1535717377, "modified": 1535717377, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1555#issuecomment-417694571", "source_type": "github"}, {"comment_id": 449, "body": "I think it's not a bug, I'm just not sure how to correctly switch hubs on ZeroMe. It would be great if someone told me how to do this.", "added": 1535721149, "modified": 1535721165, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1555#issuecomment-417713621", "source_type": "github"}, {"comment_id": 450, "body": "Hey @d14na, I'm `@gitcenter` on ZeroNet, I'm seldom checking `@ivanq`. Can you resend your message to `@gitcenter` please?", "added": 1535850561, "modified": 1535856574, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1555#issuecomment-417903698", "source_type": "github"}], "1604066754_mirrored_DaniellMesquita_github": [{"comment_id": 451, "body": "By the way, you could copy your data files from your old hub to the new hub, then delete your profile by deleting data/users/.../data.json, then posting whatever you want (before you post anything, you may see your old posts), and then replacing 1Sun... with your hub in data/users/.../content.json of UserDB - this site has 1UDB... address.\r\n\r\nHope this helps. ", "added": 1535682423, "modified": 1535682423, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1556#issuecomment-417555638", "source_type": "github"}, {"comment_id": 452, "body": "Offtopic: @DaniellMesquita What's your ID on ZeroNet?", "added": 1535714482, "modified": 1535714482, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1556#issuecomment-417679469", "source_type": "github"}, {"comment_id": 453, "body": "Daniell, can you please register on ZeroMail? I want to send you a message.", "added": 1535716530, "modified": 1535716530, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1556#issuecomment-417689726", "source_type": "github"}, {"comment_id": 454, "body": "I've sent.", "added": 1535768108, "modified": 1535768108, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1556#issuecomment-417833946", "source_type": "github"}], "1604066760_mirrored_DaniellMesquita_github": [{"comment_id": 455, "body": "That was a bug with my plugin, it's not related to ZeroNet core, so this issue can be closed.", "added": 1535767622, "modified": 1535768181, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1560#issuecomment-417833615", "source_type": "github"}, {"comment_id": 456, "body": "It's already fixed.", "added": 1535818309, "modified": 1535818309, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1560#issuecomment-417880907", "source_type": "github"}, {"comment_id": 457, "body": "Aah, that's it:\r\n\r\nhttps://github.com/HelloZeroNet/Plugin-PeerMessage\r\nhttps://github.com/HelloZeroNet/Plugin-BackgroundProcessing", "added": 1535850096, "modified": 1535850096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1560#issuecomment-417903413", "source_type": "github"}], "1604066722_mirrored_trenta3_github": [{"comment_id": 458, "body": "@HelloZeroNet, Wait a bit, what about integrating this to BackgroundProcessing?!", "added": 1536247002, "modified": 1536247018, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1570#issuecomment-419192111", "source_type": "github"}, {"comment_id": 459, "body": "> Just a question: if we resolve to adding that to BackgroundProcessing, will each site execute its own thread? Can it be set up as to have a single execution thread that dedicates a small amount of time to each site? (I'm obviously more in favour of the second solution)\r\n\r\nZeroNet uses gevent library, which simulates multithreading (real mutlithreading is slower because of GIL). So it in fact does what you've just said.", "added": 1536252427, "modified": 1536252427, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1570#issuecomment-419218608", "source_type": "github"}, {"comment_id": 460, "body": "In case we really need security, we could use Selenium and execute JS code in browser.", "added": 1536283080, "modified": 1536283080, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1570#issuecomment-419317775", "source_type": "github"}], "1604066723_mirrored_blurHY_github": [{"comment_id": 461, "body": "@anoadragon453 He asked to load first 100 sites on ZeroHello and add `More...` button. When you click, it 100 more sites are loaded, etc.", "added": 1536497946, "modified": 1536497946, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1575#issuecomment-419725634", "source_type": "github"}], "1604066750_mirrored_anoadragon453_github": [{"comment_id": 462, "body": "Why exactly was old-style signing incorrect?", "added": 1584978285, "modified": 1584978285, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1585#issuecomment-602786785", "source_type": "github"}, {"comment_id": 463, "body": "Lol, this error is awesome. The lib uses `\"\\80\"` instead of `\"\\x80\"` for private key encoding. That's the only thing that makes the private key incorrect. (I still wouldn't recommend it though because it doesn't even check the checksum).", "added": 1585016562, "modified": 1585016681, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1585#issuecomment-603022769", "source_type": "github"}], "1604066807_mirrored_DaniellMesquita_github": [{"comment_id": 464, "body": "Try changing `data.json` of your user directory -- it should contain the old filename. After you change it, sign&publish your `content.json` and try pressing Seed again.", "added": 1536543107, "modified": 1536543107, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1586#issuecomment-419784362", "source_type": "github"}], "1604066858_mirrored_DaniellMesquita_github": [{"comment_id": 465, "body": "I think you should move this issue to https://github.com/misses-robot/kopy-kate-big/", "added": 1537068080, "modified": 1537068080, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1617#issuecomment-421707633", "source_type": "github"}], "1604066788_mirrored_blurHY_github": [{"comment_id": 466, "body": "BTW, I get this error too, but couldn't debug it. ", "added": 1537101539, "modified": 1537101539, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1618#issuecomment-421784298", "source_type": "github"}], "1604066873_mirrored_DaniellMesquita_github": [{"comment_id": 467, "body": "Hm... I use both. It's just that some sites sign and publish the content before downloading it, so when I switch computers the newer data gets overwritten by the old data. So I use 2 identities. ", "added": 1537446629, "modified": 1537446629, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1626#issuecomment-423227747", "source_type": "github"}], "1604066877_mirrored_DaniellMesquita_github": [{"comment_id": 468, "body": "@DaniellMesquita You can reopen it yourself.", "added": 1537622358, "modified": 1537622358, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1628#issuecomment-423755369", "source_type": "github"}, {"comment_id": 469, "body": "Aah. I didn't know that.", "added": 1537624659, "modified": 1537624659, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1628#issuecomment-423757915", "source_type": "github"}], "1604066889_mirrored_DaniellMesquita_github": [{"comment_id": 470, "body": "@HelloZeroNet He probably means that we should make up translations for these sites. Though idk what translations we could make for `ZeroBlog`. Maybe the standard post (the one from `data-default`) and buttons?", "added": 1538485991, "modified": 1538485991, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1633#issuecomment-426334830", "source_type": "github"}], "1604066831_mirrored_tangdou1_github": [{"comment_id": 471, "body": "@DaniellMesquita No, he was in the airport when he answered to our mail.", "added": 1538395884, "modified": 1538395884, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1636#issuecomment-425944124", "source_type": "github"}], "1604066902_mirrored_DaniellMesquita_github": [{"comment_id": 472, "body": "BTW, this really happens. Idk why and how it works, but it looks like if I press `Add saved private key` in the sidebar, for some reason it forgets the key after some time (maybe after restart?).", "added": 1538486155, "modified": 1538486155, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1641#issuecomment-426335757", "source_type": "github"}], "1604066904_mirrored_DaniellMesquita_github": [{"comment_id": 473, "body": "Err... sidebar?", "added": 1538486012, "modified": 1538486012, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1642#issuecomment-426334949", "source_type": "github"}], "1604066924_mirrored_DaniellMesquita_github": [{"comment_id": 474, "body": "Even if some of us becomes a maintainer, we should use Pull Requests, so we *can* directly commit to the repository, but only if that's *very* important -- e.g. if there's a security vulnerability. Otherwise, we should use PRs, so we and @HelloZeroNet could check each other's code.", "added": 1537704554, "modified": 1537704554, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1652#issuecomment-423823314", "source_type": "github"}, {"comment_id": 475, "body": "Currently @HelloZeroNet is a user not an organization. AFAIK GitHub and GitLab have free organizations. On GitHub, you have to set your billing email, however, AFAIK they don't send anything if your plan is `Free`. However, **the owners of the organization can change the plan, so make sure you don't give the owner role to people you don't know well** (er... maybe including me).", "added": 1537704756, "modified": 1537704756, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1652#issuecomment-423823527", "source_type": "github"}], "1604066926_mirrored_DaniellMesquita_github": [{"comment_id": 476, "body": "It can if you set different data folders and port (via CLI arguments).", "added": 1537707783, "modified": 1537707783, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423826929", "source_type": "github"}, {"comment_id": 477, "body": "`--uiserver_port=1234`", "added": 1537708871, "modified": 1537708871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423828345", "source_type": "github"}, {"comment_id": 478, "body": "No, it's `fileserver`.", "added": 1537709395, "modified": 1537709395, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423828908", "source_type": "github"}, {"comment_id": 479, "body": "`7832`.", "added": 1537709868, "modified": 1537709868, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423829433", "source_type": "github"}], "1604066929_mirrored_DaniellMesquita_github": [{"comment_id": 480, "body": "> is this because one of your plugins?\r\n\r\nNo.", "added": 1537708840, "modified": 1537708840, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1654#issuecomment-423828298", "source_type": "github"}], "1604066870_mirrored_imachug_github": [{"comment_id": 481, "body": "After deleting `tools/tor` and restarting ZeroNet, the problem was fixed.", "added": 1537773821, "modified": 1537773821, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1659#issuecomment-423931431", "source_type": "github"}, {"comment_id": 482, "body": "Well, I was making some experiments with changing ZeroNet code (though it shouldn't have broken it), so maybe that was the reason.", "added": 1537858820, "modified": 1537858820, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1659#issuecomment-424281491", "source_type": "github"}], "1604066855_mirrored_blurHY_github": [{"comment_id": 483, "body": "Bad idea. ", "added": 1538635711, "modified": 1538635711, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1663#issuecomment-426955413", "source_type": "github"}], "1604066881_mirrored_tangdou1_github": [{"comment_id": 484, "body": "Browser, OS?", "added": 1538439302, "modified": 1538439302, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1670#issuecomment-426134625", "source_type": "github"}], "1604066846_mirrored_nagiept_github": [{"comment_id": 485, "body": "Please run ZeroNet and send `logs/debug.log` file. (here, or [to my email](mailto:imachug@gmail.com) and [@nofish's email](mailto:hello@zeronet.io)).", "added": 1538566835, "modified": 1538566854, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1675#issuecomment-426662781", "source_type": "github"}, {"comment_id": 486, "body": "You said that when you move data, it doesn't work. So, please move it, start ZeroNet and send the resulting log.\r\n\r\nAccording to the logs you sent, everything is correct, it's just that there are 4 sites only. ", "added": 1538628647, "modified": 1538628647, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1675#issuecomment-426919624", "source_type": "github"}, {"comment_id": 487, "body": "Ok, it looks like your users.json is malformed. Please stop ZeroNet, copy the old users.json and sites.json files, and start ZeroNet. \r\n\r\nIf it still shows no sites, send sites.json to me, please, so I could check whether it's correct. Btw, don't send it via github, because it contains sensitive information. ", "added": 1538635566, "modified": 1538635566, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1675#issuecomment-426954681", "source_type": "github"}, {"comment_id": 488, "body": "Unfortunately, if you don't have users.json backup, this is impossible.\r\n\r\nHowever, it's possible that your users.json is not malformed, but contains your ZeroID and site list in another place. Maybe I could try to recover it if you sent me the users.json you are using now to my email. Though, it contains sensitive information, so if you don't trust me, send it to hello@zeronet.io instead. ", "added": 1538644872, "modified": 1538644872, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1675#issuecomment-426997723", "source_type": "github"}, {"comment_id": 489, "body": "Aah, yeah, if your ZeroNet data directory contains users.json-old file, you can try to rename it to users.json (overriding the old one), just make sure that ZeroNet is stopped and you have a backup. ", "added": 1538644949, "modified": 1538644949, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1675#issuecomment-426998087", "source_type": "github"}], "1604066965_mirrored_DaniellMesquita_github": [{"comment_id": 490, "body": "Oof, only if someone else, not me implements it.", "added": 1538738909, "modified": 1538738909, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1677#issuecomment-427385035", "source_type": "github"}], "1604066851_mirrored_geekless_github": [{"comment_id": 491, "body": "Additionally, @HelloZeroNet, I'd recommend allowing # and @ and = and some other special characters.", "added": 1538731004, "modified": 1538731004, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1678#issuecomment-427345314", "source_type": "github"}, {"comment_id": 492, "body": "@HelloZeroNet Yeah, I see the problem. In my case, I was only going to use `fileGet`, as it would simplify it, but I see that it would bring some difficulties in URL, so I've already came up with a solution: `#` -> `charCodeAt(\"#\")`", "added": 1538735324, "modified": 1538735324, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1678#issuecomment-427366070", "source_type": "github"}], "1604066859_mirrored_geekless_github": [{"comment_id": 493, "body": "Though, it will probably be `kaffie@zeroid.bit`, not `kaffie.zeroid.bit` because it'll be a subdomain, and not `kaffie.zeroid` because `zeroid` is not a valid cert provider. ", "added": 1538998530, "modified": 1538998530, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1683#issuecomment-427859537", "source_type": "github"}, {"comment_id": 494, "body": "Let me bring another example. `gitcenter.kaffie`. 1st, `kaffie.bit` is auth provider but not the site of auth provider. So somehow (how?) ZeroNet should guess it's `id.kaffie.bit`. 2nd, there isn't one database on KaffieID. So does it mean that NameID won't work with KaffieID?", "added": 1539009364, "modified": 1539009364, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1683#issuecomment-427918813", "source_type": "github"}], "1604066984_mirrored_DaniellMesquita_github": [{"comment_id": 495, "body": "Though it's probably unrelated to this PR, I *think* that ww should make the 0 icon a bit smaller. :shrug: Just UI. ", "added": 1539084548, "modified": 1539084548, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1688#issuecomment-428214505", "source_type": "github"}, {"comment_id": 496, "body": "@DaniellMesquita Yeah, you can. ", "added": 1539866383, "modified": 1539866383, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1688#issuecomment-431058053", "source_type": "github"}], "1604066879_mirrored_geekless_github": [{"comment_id": 497, "body": "I'm sorry to say that, but sounds like the only way is to make ICANN. I mean, if we don't expire the domains, one could easily squat them. Seems like manually validating all auth providers would solve this problem, though, given that `.id.gitcenter` doesn't look nice. (and won't work at all if Namecoin will stop being the only domain service). ", "added": 1539692200, "modified": 1539692200, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1696#issuecomment-430278451", "source_type": "github"}], "1604067002_mirrored_DaniellMesquita_github": [{"comment_id": 498, "body": "Let me ask, where did you hear that? ", "added": 1539137816, "modified": 1539137816, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1698#issuecomment-428440839", "source_type": "github"}], "1604067016_mirrored_DaniellMesquita_github": [{"comment_id": 499, "body": "BTW, I haven't found any working Git implementation in JavaScript that really works. Basically, that's the reason I made Git Center that uses my own library. ", "added": 1539137454, "modified": 1539137454, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1704#issuecomment-428439967", "source_type": "github"}], "1604066923_mirrored_blurHY_github": [{"comment_id": 500, "body": "Does this happen during signing of the site (or user file) or not? ", "added": 1539484955, "modified": 1539484955, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1712#issuecomment-429598465", "source_type": "github"}, {"comment_id": 501, "body": "Looks like the `content.json` contains neither old-style sign nor new-style sign. However, it contains other properties like `modified`. I'm wondering whether official ZeroNet implementation can even generate such invalid files. ", "added": 1539485063, "modified": 1539485063, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1712#issuecomment-429598547", "source_type": "github"}], "1604066914_mirrored_rllola_github": [{"comment_id": 502, "body": "Instead of `getcwd`, we should probably use `__file__`. ", "added": 1539665130, "modified": 1539665130, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1717#issuecomment-430135463", "source_type": "github"}, {"comment_id": 503, "body": "@rllola `os.getcwd()` is the current *working* directory, while `os.path.join(os.path.dirname(os.path.basename(__file__)), \"..\", \"..\")` will be the ZeroNet directory. I'll explain it.\r\n\r\n*cwd* aka *current working directory* is the path from which the script was run. Usually it matches the directory where the script is.\r\n\r\nPretend `~/ZeroNet/zeronet.py` outputs the *cwd*. Then, here are some examples:\r\n\r\n```\r\n~$ cd ZeroNet\r\n~/ZeroNet$ python zeronet.py\r\n/home/ivanq/ZeroNet\r\n~/ZeroNet$ cd ..\r\n~$ python ZeroNet/zeronet.py\r\n/home/ivanq\r\n~/ZeroNet$ cd /\r\n/$ python ~/ZeroNet/zeronet.py\r\n/\r\n```\r\n\r\nSo, the *cwd* matches the directory you are currently in. It usually matches the correct directory if you're executing the script via UI, though.\r\n\r\nAnd for `os.path.join(os.path.dirname(os.path.basename(__file__)), \"..\", \"..\")`, it'll always work, since `__file__` is the current script that's being executed. Since we use it inside `src/Plugin/PluginManager.py`, `__file__` will be `something/src/Plugin/PluginManager.py`, so we need to go two levels up to reach `src`.", "added": 1539693659, "modified": 1539693659, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1717#issuecomment-430287680", "source_type": "github"}, {"comment_id": 504, "body": "I think we are fine with `os.getcwd` then, since a lot of other code probably depends on this.", "added": 1539738543, "modified": 1539738543, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1717#issuecomment-430482883", "source_type": "github"}], "1604067047_mirrored_DaniellMesquita_github": [{"comment_id": 505, "body": "@HelloZeroNet Looks like this PR fixes some stuff that isn't directly related to Klingon language (e.g. fixing spaces) -- I'd recommend you to merge some parts.", "added": 1561715681, "modified": 1561715681, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1720#issuecomment-506723353", "source_type": "github"}, {"comment_id": 506, "body": "I'm not sure how that's related to @rllola.", "added": 1586272479, "modified": 1586272479, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1720#issuecomment-610542226", "source_type": "github"}], "1604067006_mirrored_HelloZeroNet_github": [{"comment_id": 507, "body": "Please, make it optional, by allowing the user to set the limit (1 day/2 days/10 days/1 month can be useful) and disable it at all.", "added": 1540471360, "modified": 1540471360, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1739#issuecomment-433102108", "source_type": "github"}], "1604067094_mirrored_DaniellMesquita_github": [{"comment_id": 508, "body": "How could they be better *for mobile*? ", "added": 1541212077, "modified": 1541212077, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1749#issuecomment-435562033", "source_type": "github"}], "1604067119_mirrored_DaniellMesquita_github": [{"comment_id": 509, "body": "Sounds interesting. I think it's `nice-to-have`, as well as another page to disable/enable plugins.", "added": 1541425726, "modified": 1541425726, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1761#issuecomment-435947123", "source_type": "github"}], "1604067124_mirrored_DaniellMesquita_github": [{"comment_id": 510, "body": "Done? @HelloZeroNet ", "added": 1566305376, "modified": 1566305376, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1763#issuecomment-523076451", "source_type": "github"}], "1604067049_mirrored_HelloZeroNet_github": [{"comment_id": 511, "body": "@HelloZeroNet Uploading big files doesn't seem to work.\r\n\r\nIf you upload a file to [KxoNetwork](http://127.0.0.1:43110/1GTVetvjTEriCMzKzWSP9FahYoMPy6BG1P) (I just uploaded a plugin), I get this error:\r\n\r\n```\r\n[08:20:11] - UiWSGIHandler error: TypeError: 'NoneType' object is not subscriptable in UiServer.py line 41 > pywsgi.py line 924 > pywsgi.py line 908 > helper.py line 304 > Bigfile/BigfilePlugin.py line 101 > PeerHashfield.py line 56\r\n```\r\n\r\nSounds like the hash is None.\r\n\r\nIf I upload a file to ZeroUp, I get this:\r\n\r\n```\r\n[08:34:44] - UiWSGIHandler error: UnicodeDecodeError: 'charmap' codec can't decode byte 0x98 in position 813: character maps to <undefined> in UiServer.py line 41 > pywsgi.py line 924 > pywsgi.py line 908 > helper.py line 304 > Bigfile/BigfilePlugin.py line 102 > OptionalManager/OptionalManagerPlugin.py line 72 > Bigfile/BigfilePlugin.py line 370 > Bigfile/BigfilePlugin.py line 458 > cp1251.py line 23\r\n```\r\n\r\nIn case you need the files, here they are:\r\n\r\n[For KxoNetwork](https://github.com/HelloZeroNet/ZeroNet/files/3052756/Plugin-PeerMessage-py3.zip)\r\n[For ZeroUp](https://github.com/HelloZeroNet/ZeroNet/files/3052755/sublime_merge_build_1107_x64_setup.zip)", "added": 1554691202, "modified": 1554691202, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-480690752", "source_type": "github"}, {"comment_id": 512, "body": "It's actually half-fixed, I get this error:\r\n\r\n```\r\n[07:47:18] - UiWSGIHandler error: AttributeError: 'bytes' object has no attribute 'encode' in UiServer.py line 41 > pywsgi.py line 924 > pywsgi.py line 908 > helper.py line 304 > Bigfile/BigfilePlugin.py line 72\r\n```\r\n\r\nHowever, the file is uploaded correctly.", "added": 1555034063, "modified": 1555034063, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-482436819", "source_type": "github"}, {"comment_id": 513, "body": "I think I've seen an issue about Bootstrapper but I can't find it now. ", "added": 1555206226, "modified": 1555206226, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-482919496", "source_type": "github"}, {"comment_id": 514, "body": "@HelloZeroNet Can we close this now?", "added": 1582978767, "modified": 1582978767, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-592955714", "source_type": "github"}], "1604067186_mirrored_DaniellMesquita_github": [{"comment_id": 515, "body": "You forgot MacOS and Windows. /s", "added": 1544407913, "modified": 1544408103, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1808#issuecomment-445688669", "source_type": "github"}], "1604067019_mirrored_Thunder33345_github": [{"comment_id": 516, "body": "Just a small fix, it's CORS not CROS", "added": 1544428519, "modified": 1544428519, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1811#issuecomment-445774441", "source_type": "github"}], "1604067028_mirrored_Thunder33345_github": [{"comment_id": 517, "body": "@grez911 Just. Awesome. I will try to make proof of concept with your concept if you allow it. ", "added": 1544895309, "modified": 1544895309, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1815#issuecomment-447596111", "source_type": "github"}, {"comment_id": 518, "body": "Let's assume that we don't calculate `current_post_id - 1 - random_number`, but we take the whole hash and take the remainder of dividing the hash by `current_post_id`. This means that the probability of choosing each a post is equal.\r\n\r\nSay, if there are 65536 captchas (the least possible count), and the attacker wants to post the first message, he will have to solve a captcha.\r\n\r\nThen, when he wants to post the second message, he can either get a random captcha (and he will have to solve it), or he will do **heavy PoW** just to make sure that random captcha number points to the 1st spam message (because he knows the origin of its hash). When he makes more messages, it will be easier to post the next one, though.\r\n\r\nLet's calculate the probability. If the attacker has made *n* messages, and he wants to make another one. There is a total of *65536 + n* messages. He will get other's message with probability of *65536 / (65536 + n)*. Now, let's pretend that he chooses *m* different hashes (i.e. *m* different captchas). The probablity that he won't have his own captcha is *(65536 / (65536 + n)) ^ m*, where ^ stands for exponentiation. We want this probability to be small (because we want to make the process automated) -- let's take, say, *0.1% = 0.001*. Now solve the equation *(65536 / (65536 + n)) ^ m = 0.001* <=> *m = log(65536 / (65536 + n))(0.001)* (where *log(a)(b)* means logarithm of base *a*) <=> *m = ln(0.001)/ln(65536 / (65536 + n)) = -7/ln(65536 / (65536 + n))*.\r\n\r\nNow, let's calculate how much PoW you would have to do to generate, say, 100 spam messages. After integrating this function from 1 to 100 (I tried summing up m(1..100) with Python and got similar results -- so I'll use integrating as a faster function) we get about 2 million PoW operations.\r\n\r\nTo make hashing slower, let's run 1000 iterations of SHA512 instead of one iteration of SHA256, as recommended by the document.\r\n\r\n[According to StackOverflow](https://security.stackexchange.com/a/18193), you can calculate about 100 million SHA-512 hashes per second. Since we're running 1000 iterations, this is 100 000 PoW operations per second. This means that posting 100 spam messages will take you 20 seconds (WolframAlpha: `(integrate -7/ln(65536 / (65536 + x)) from 1 to 100) / 100000`).\r\n\r\nThis may sounds like good result, but it isn't. If we want to generate 1000 spam messages, that becomes 32 seconds, not 200 seconds! (FYI: 1 000 000 messages = 88 seconds).\r\n\r\nUh-oh.\r\n\r\nLet's run 100 000 iterations maybe? This means you get 1000 PoW ops/sec. This leads to half an hour to generate 100 messages, and 2.5 hours for 1 million messages.\r\n\r\nThe \"1 million messages\" case was calculated assuming that you can take captcha from, say, the very first post (i.e. there's no \"hash from last 65536 posts\" condition). If we assume that we have that condition, things get worse. `(integrate -7/ln(1 - min(1, x / 65536)) from 1 to 1000000) / 1000` gives us 1.3 hours to make 1 million spam posts.\r\n\r\n**Er... What about 100 000 000 iterations? That gives us 1 PoW operation per second. So 23 days to post 100 messages... And 1 second to post with captcha! Seems like a good solution to me.**\r\n\r\n---\r\n\r\nSo, what I recommend is:\r\n\r\nRun 100 000 000 iterations of SHA-512 instead of one iteration of SHA-256 and you'll be fine.", "added": 1544932744, "modified": 1544932744, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1815#issuecomment-447622052", "source_type": "github"}, {"comment_id": 519, "body": "Actually... I just found a bug in my calculations. It becomes 30 seconds to post with captcha on my computer (and it's rather fast). So maybe it would be a better solution to run **10 000 000 iterations of SHA-512**. So this makes it 3 seconds to post on my machine, and about 2 days for attacker. Still good, though.", "added": 1544958263, "modified": 1544958263, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1815#issuecomment-447645888", "source_type": "github"}, {"comment_id": 520, "body": "Here's zkSNARKs implementation for JavaScript: https://github.com/iden3/snarkjs.", "added": 1544960128, "modified": 1544960128, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1815#issuecomment-447647994", "source_type": "github"}], "1604067024_mirrored_krzysztof113_github": [{"comment_id": 521, "body": "Sounds like a task for PeerMessage, doesn't it? @DaniellMesquita ", "added": 1544490740, "modified": 1544490740, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1816#issuecomment-446066178", "source_type": "github"}, {"comment_id": 522, "body": "@DaniellMesquita The fact that I reply to 1% messages just means that I fucking have no time. But you have time to make stupid statements and ask stupid questions. Though, asking stupid questions is better than not asking them at all: the fact that you say \"PeerMessage doesn't handle spam\" means that you didn't even want to read the manual. And there *is* a manual, and it's linked to in the readme. You said \"as I heard\": why not ask me and hear the opposite?\r\n\r\nZeroNet has great community. But a good community means that everyone listens to everyone. You don't even try to listen to others when they tell you that you're not right. Stop repeating that nofish is an asshole. You are an asshole yourself.\r\n\r\nKrixano left ZeroNet. He was a great ZeroNet developer. Half of the sites that most people use were his sites. But he abandoned them. Guess why? Because you don't give a shit about his real life. You can't stop asking for features. You can't stop complaining that nobody implements what you want. If you continue behaving like this, nobody will ever listen to you.\r\n\r\n---\r\n\r\nSorry for posting this. Someone should have said this before, but well... I am the first one to say it like this, but... believe or not, I am not the only one that doesn't like how you speak. \r\n\r\n---\r\n\r\nWe *do* need a CoC. Not the one Linus took, we don't need such a hugging CoC. Just make a CoC yourself.\r\n\r\nFeel free to redact this message, nofish. But remember: something needs to be done about this. ", "added": 1544534739, "modified": 1544535428, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1816#issuecomment-446265893", "source_type": "github"}], "1604067201_mirrored_DaniellMesquita_github": [{"comment_id": 523, "body": "Please add a link to KxoID: https://github.com/krixano/KxoNetwork", "added": 1544589642, "modified": 1544589642, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1818#issuecomment-446491814", "source_type": "github"}, {"comment_id": 524, "body": "Disqus collects just a lot of data, yeah... However, just a simple embeddable page would useful, I think. ", "added": 1544606095, "modified": 1544606095, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1818#issuecomment-446567322", "source_type": "github"}], "1604067030_mirrored_klueq_github": [{"comment_id": 525, "body": "Actually, you can use BackgroundProcessing plugin which allows site to run some python code, including *anything* you may want to use. Maybe you will find it useful. ", "added": 1544857831, "modified": 1544857831, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1820#issuecomment-447556452", "source_type": "github"}], "1604067040_mirrored_YSHZdive_github": [{"comment_id": 526, "body": "What is your Python version? Are you using bundled ZeroNet? ", "added": 1545186956, "modified": 1545186977, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1828#issuecomment-448475302", "source_type": "github"}], "1604067058_mirrored_sterling-archermedes_github": [{"comment_id": 527, "body": "@HelloZeroNet Is there a way to distinguish network issues (e.g. site creation requests) from platform issues (e.g. PoW providers discussion)? ", "added": 1560564711, "modified": 1560564711, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1842#issuecomment-502335629", "source_type": "github"}], "1604067238_mirrored_DaniellMesquita_github": [{"comment_id": 528, "body": "Hm, I usually use symlinks when I develop zites.\r\n\r\nHere's my file structure for a project:\r\n\r\n```\r\nMyAwesomeProject/\r\n+- .git\r\n   +- ...\r\n+- main\r\n   +- src\r\n      +- index.html\r\n      +- index.js\r\n      +- and so on...\r\n   +- dist\r\n      +- index.html\r\n      +- index.js\r\n      +- etc.\r\n+- (optional) hub\r\n   +- src\r\n      +- index.html\r\n   +- dist\r\n      +- index.html\r\n+- webpack.config.json\r\n+- package.json\r\n```\r\n\r\nThis allows your to manage all the project in one single repository. Then you use `npm run watch` or something to build the project to `dist` directory. Then you'd symlink `dist`s to different zite folders in `data`.", "added": 1548500329, "modified": 1548500329, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1844#issuecomment-457833358", "source_type": "github"}], "1604067062_mirrored_Leinariys_github": [{"comment_id": 529, "body": "Once again. `data-static/data.json` is relative to DB directory, yielding `data-static/data-static/data.json` which doesn't exist.", "added": 1546677989, "modified": 1546677989, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1845#issuecomment-451648638", "source_type": "github"}, {"comment_id": 530, "body": "Just a quick question, you did sign content.json after changing dbschema.json, didn't you? ", "added": 1547457810, "modified": 1547457810, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1845#issuecomment-453987395", "source_type": "github"}], "1604067068_mirrored_BoboTiG_github": [{"comment_id": 531, "body": "In *Python* -- yes, it may work like this. However, if you open a file via Python and try to delete it via Explorer, it won't let you do this. This has caused some problems before for me, I couldn't delete a site I recently created. Not sure if you can reproduce it, but this should be fixed.", "added": 1547049199, "modified": 1547049199, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1848#issuecomment-452813312", "source_type": "github"}, {"comment_id": 532, "body": "I think it was a database that caused this. ", "added": 1547084502, "modified": 1547084502, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1848#issuecomment-452968776", "source_type": "github"}], "1604067170_mirrored_tangdou1_github": [{"comment_id": 533, "body": "This is *not* a python version problem. First, issue #1940 is about Content-type while this issue is about CORS. Second, if this hasn't been fixed yet, it's an important problem -- CORS should work correctly, or ZeroNet might get vulnerable. (though, tbh, missing Access-Control-Allow-Origin is better than accidental Access-Control-Allow-Origin)", "added": 1554863885, "modified": 1554863885, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1881#issuecomment-481540819", "source_type": "github"}], "1604067166_mirrored_slrslr_github": [{"comment_id": 534, "body": "Actually that's exactly what happens when you create a new repo on Git Center. You press `Clone`, wait a few seconds and you have a page where you can set repo title or description. What I do is just call `siteClone` method and put auto-redirect to `index.html`.", "added": 1549502113, "modified": 1549502113, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1891#issuecomment-461282612", "source_type": "github"}, {"comment_id": 535, "body": "I'm afraid that would break backward compatibility, but we could add it as an option, e.g. `siteClone(address, redirect=False)`. In this case, siteClone should return the cloned site address. ", "added": 1558714092, "modified": 1558714092, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1891#issuecomment-495757778", "source_type": "github"}], "1604067137_mirrored_styromaniac_github": [{"comment_id": 536, "body": "Why was this closed? @styromaniac ", "added": 1561530635, "modified": 1561530635, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1897#issuecomment-505797857", "source_type": "github"}], "1604067166_mirrored_yurivict_github": [{"comment_id": 537, "body": "@HelloZeroNet Can this be closed?", "added": 1570670326, "modified": 1570670326, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1904#issuecomment-540345507", "source_type": "github"}], "1604067141_mirrored_kiridu1988_github": [{"comment_id": 538, "body": "1. Don't expect us to answer soon -- I think most ZeroNet developers seldom check GitHub.\r\n2. We *do* know our program. Prove the opposite if you tell us we don't.\r\n3. The source code of the exe file for Windows is in this very repository.\r\n4. The exe file for Mac doesn't exist \u00af\\\\_(\u30c4)_/\u00af. Use \"app\" instead please.\r\n5. It's not disorganized, it just makes more sense to have different repos for different builds if you have platform-dependent binaries (binaries, not source code).\r\n\r\nNow to your question:\r\n\r\nEither use `--open_browser chrome` (for example) CLI option, or use add `open_browser=chrome` line to `zeronet.conf`, like this:\r\n\r\n```\r\n[global]\r\nopen_browser=chrome\r\n```\r\n\r\nThe full list of supported browsers can be found [here](https://docs.python.org/2/library/webbrowser.html).\r\n\r\nIf this answers your question, please close this issue.", "added": 1550664376, "modified": 1550670646, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1909#issuecomment-465615783", "source_type": "github"}, {"comment_id": 539, "body": "Here is the source code: https://github.com/HelloZeroNet/ZeroNet. Seriously, that exe is just a bundled python version.\r\n\r\nAs for the relative path, you can use the path inside `open_browser`, just make sure you add `%s` placeholder (it will be replaced by the URL), like this:\r\n\r\n```\r\n[global]\r\nopen_browser=C:\\path\\to\\browser \"%s\"\r\n```", "added": 1550669913, "modified": 1550670622, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1909#issuecomment-465656416", "source_type": "github"}, {"comment_id": 540, "body": "> \r\n> \r\n> Custom browser not supported currently, but if you know the exact path to the executable you can create a .bat file to start it.\r\n\r\nThis is weird, because AFAIK `webbrowser` module supports browsers defined by their path in case the string includes `%s`. So, using `path/to/browser \"%s\"` should work, not sure what went wrong.", "added": 1550935340, "modified": 1550935340, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1909#issuecomment-466675610", "source_type": "github"}], "1604067195_mirrored_blurHY_github": [{"comment_id": 541, "body": "@HelloZeroNet Given that this issue has been inactive for a long while and has some difficulties (even in theory), could we close it?", "added": 1570670372, "modified": 1570670372, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1915#issuecomment-540345803", "source_type": "github"}], "1604067196_mirrored_ValdikSS_github": [{"comment_id": 542, "body": "@HelloZeroNet Any progress on this? ", "added": 1561969646, "modified": 1561969646, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1950#issuecomment-507225633", "source_type": "github"}], "1604067249_mirrored_blurHY_github": [{"comment_id": 543, "body": "Then it probably makes sense to test this on py3 version. ", "added": 1554541447, "modified": 1554541447, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1958#issuecomment-480498816", "source_type": "github"}, {"comment_id": 544, "body": "Why was this closed?", "added": 1555489098, "modified": 1555489098, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1958#issuecomment-484041967", "source_type": "github"}], "1604067277_mirrored_tangdou1_github": [{"comment_id": 545, "body": "@HelloZeroNet Can we *please* merge this PR that adds a single character? ", "added": 1561969604, "modified": 1561969604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1959#issuecomment-507225432", "source_type": "github"}], "1604067251_mirrored_imachug_github": [{"comment_id": 546, "body": "Oh, sorry, didn't notice that Sublime guessed indentation wrong. ", "added": 1554541219, "modified": 1554541219, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1960#issuecomment-480498487", "source_type": "github"}, {"comment_id": 547, "body": "Updated. By the way, you should cherry-pick this onto master as well. ", "added": 1554541402, "modified": 1554541402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1960#issuecomment-480498762", "source_type": "github"}, {"comment_id": 548, "body": "Have you cherry-picked this onto master?", "added": 1554606821, "modified": 1554606821, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1960#issuecomment-480562575", "source_type": "github"}], "1604067268_mirrored_imachug_github": [{"comment_id": 549, "body": "My library is based on *one* 50-line file from pyelliptic, not the whole package. As for publishing to pypi, ok, I'll publish the package soon.", "added": 1554945414, "modified": 1554945414, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1974#issuecomment-481958729", "source_type": "github"}, {"comment_id": 550, "body": "However, it makes sense not to use a deprecated package, even if it was forked. So I would vote against using a fork, it would be better to make our own small lib using OpenSSL docs. ", "added": 1554981151, "modified": 1554981151, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1974#issuecomment-482131297", "source_type": "github"}, {"comment_id": 551, "body": "eciespy forces the usage of sha256 which would break backward compatibility.", "added": 1555253521, "modified": 1555253521, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1974#issuecomment-483028447", "source_type": "github"}], "1604067230_mirrored_bitcoren_github": [{"comment_id": 552, "body": "Why did you close this? A big is still a bug even if you have found the reason. ", "added": 1555083584, "modified": 1555083584, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1979#issuecomment-482680609", "source_type": "github"}], "1604067229_mirrored_franc3_github": [{"comment_id": 553, "body": "As this issue is unrelated to ZeroNet and is already tracked by Mozilla, can we close this? @HelloZeroNet ", "added": 1559213891, "modified": 1559213891, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1981#issuecomment-497338953", "source_type": "github"}], "1604067282_mirrored_imachug_github": [{"comment_id": 554, "body": "It is. Signing/verifying is an extensive operation, a really extensive one. So it makes sense to make data smaller. That's how everyone does it.", "added": 1555320143, "modified": 1555320143, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1984#issuecomment-483229502", "source_type": "github"}, {"comment_id": 555, "body": "Okay, will fix\r\n", "added": 1555332981, "modified": 1555332981, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1984#issuecomment-483311863", "source_type": "github"}], "1604067287_mirrored_imachug_github": [{"comment_id": 556, "body": "@HelloZeroNet I've made another fix, please check it. Also, you should probably squash this PR.", "added": 1555683010, "modified": 1555683010, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1987#issuecomment-484959570", "source_type": "github"}], "1604067254_mirrored_radfish_github": [{"comment_id": 557, "body": "Shouldn't we use .format? % is deprecated. ", "added": 1555466620, "modified": 1555466620, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1989#issuecomment-483938139", "source_type": "github"}], "1604067295_mirrored_slrslr_github": [{"comment_id": 558, "body": "This might actually become a problem - if a malicious site links to hundreds of different zites, all with 10MB images, you have to download several gigabytes. ", "added": 1559214912, "modified": 1559214912, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1992#issuecomment-497344847", "source_type": "github"}], "1604067296_mirrored_imachug_github": [{"comment_id": 559, "body": "I am sure this is required. If you allow notifications for 127.0.0.1, then all the zites would be able to send notifications. It's better to have explict confirmation. Compare it to Clearnet: you have to allow noifications for each site.", "added": 1556242913, "modified": 1556242913, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1993#issuecomment-486923371", "source_type": "github"}, {"comment_id": 560, "body": "Okay, done.", "added": 1556261742, "modified": 1556261742, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1993#issuecomment-487001235", "source_type": "github"}], "1604067298_mirrored_imachug_github": [{"comment_id": 561, "body": "@HelloZeroNet This is important, please merge this ASAP.", "added": 1555747551, "modified": 1555747551, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1994#issuecomment-485093385", "source_type": "github"}, {"comment_id": 562, "body": "Thank you.", "added": 1555748594, "modified": 1555748594, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1994#issuecomment-485096522", "source_type": "github"}, {"comment_id": 563, "body": "xD GitHub is freaking me out, it sometimes shows that the fix is there and sometimes that it's not there", "added": 1555750421, "modified": 1555750421, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1994#issuecomment-485102536", "source_type": "github"}], "1604067328_mirrored_tangdou1_github": [{"comment_id": 564, "body": "This hasn't been implemented yet. The idea looks promising though, I have some implementation ideas too. @HelloZeroNet I think I can implement this, are you okay with the idea itself? ", "added": 1559214758, "modified": 1559214767, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1998#issuecomment-497343915", "source_type": "github"}], "1604067308_mirrored_slrslr_github": [{"comment_id": 565, "body": "@slrslr What is the state of this issue? Have you resolved it? Looks like you've upvoted the latest @HelloZeroNet's comment, but that was the only way you've reacted. ", "added": 1559214649, "modified": 1559214649, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2002#issuecomment-497343325", "source_type": "github"}], "1604067311_mirrored_slrslr_github": [{"comment_id": 566, "body": "Can this be considered a Firefox bug if it was fixed after Firefox restart? The child window message is most likely because of Firefox handling iframes weirdly, and I'd assume that isn't fixable on ZeroNet side.\r\n\r\n@HelloZeroNet Can this be closed? ", "added": 1559214562, "modified": 1559214562, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2003#issuecomment-497342810", "source_type": "github"}], "1604067267_mirrored_filips123_github": [{"comment_id": 567, "body": "Regarding the idea itself, will this site be just something like a simulator with user-uploadable images?", "added": 1556639936, "modified": 1556639936, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005#issuecomment-488073869", "source_type": "github"}], "1604067318_mirrored_imachug_github": [{"comment_id": 568, "body": "Sorry, no idea why I missed your comment. Fixed now", "added": 1558259574, "modified": 1558259574, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2006#issuecomment-493754470", "source_type": "github"}], "1604067314_mirrored_ghost_github": [{"comment_id": 569, "body": "Nothing is required for this. You can set the port (fileserver_port iirc) in zeronet.conf. A range of ports can be specified if you want to use a random one. ", "added": 1557147026, "modified": 1557147026, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2011#issuecomment-489671131", "source_type": "github"}], "1604067271_mirrored_neighborBoy0_github": [{"comment_id": 570, "body": "Did you install the required libraries? The following commands should fix it:\r\n\r\n```shell\r\npython2 -m pip install requests\r\npython2 -m pip install gevent\r\n```\r\n\r\nIf you have any more problems, I'm ready to help.", "added": 1557500206, "modified": 1557500206, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2013#issuecomment-491377824", "source_type": "github"}, {"comment_id": 571, "body": "@neighborBoy0 Have you resolved the issue? I can't reproduce the bug on my Mac as well, so it would be great if you told us about the progress on this.\r\n\r\n@HelloZeroNet Can this be closed for inactivity? ", "added": 1559214353, "modified": 1559214353, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2013#issuecomment-497341603", "source_type": "github"}], "1604067458_mirrored_DaniellMesquita_github": [{"comment_id": 572, "body": "@DaniellMesquita I've told others to follow this rule, but I'll repeat it here again, as this is now really important:\r\n\r\nNever hardcode 127.0.0.1:43110. People might use other ports, proxies, IPv6, etc. If you want to link to ZeroTalk, use `/Talk.ZeroNetwork.bit/` address (the first slash is required, the last one can be omitted but is a tradition).", "added": 1559214231, "modified": 1559214248, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2017#issuecomment-497340878", "source_type": "github"}], "1604067279_mirrored_sdtqwe4ty_github": [{"comment_id": 573, "body": "Can you check whether you have ZeroUpdate downloaded? It would also help if you sent the logs.", "added": 1559214057, "modified": 1559214057, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2019#issuecomment-497339925", "source_type": "github"}], "1604067340_mirrored_imachug_github": [{"comment_id": 574, "body": "@HelloZeroNet I'm sorry for interrupting you again, but could you check this plugin please? I don't want to be aggressive, but it's been more than a year.\r\n\r\nIf you don't like the plugin idea for some reason, tell me, please. If you think it can be implemented better -- no problem, I'll understand you. If you think this plugin is not important enough to be included to the official repo -- ok, but why are StemPort and Dnschain plugins included then?\r\n\r\nNevertheless, can we stop just keeping silent? This plugin is used by many zites (including, but not limited to 0Play Game Center, z/place, KxoNetwork, StreamZ), and can be used to build more sites (I'm working on several right now).\r\n\r\nThere is an issue about including the plugin to the official repo (https://github.com/HelloZeroNet/Plugin-PeerMessage/issues/4), 8 positive reactions on the original PR (#1430), 7 positive reactions on the original issue (#1425), 3 \"Why is this not merged\" comments from different people (https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-419928955, https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-419947019, https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-493740783). A total of 13 people (including me) support this plugin. I can even list them here: @AnthyG, @krixano, @filips123, @stbinan, @anoadragon453, @blurHY, @tangdou1, @HughIsaacs2, @DaniellMesquita, @imachug, @Thunder33345, @MisterX2000, @Zero-1729.\r\n\r\nLooking forward to get the PR merged.", "added": 1561536950, "modified": 1561536950, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2024#issuecomment-505831559", "source_type": "github"}, {"comment_id": 575, "body": "While this is great news of course, I'm still sure that this plugin is important enough to be included to the default distribution. ", "added": 1562256041, "modified": 1562256041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2024#issuecomment-508558209", "source_type": "github"}], "1604067298_mirrored_JazzMaster_github": [{"comment_id": 576, "body": "> line 231: config.py should NOT assume that sites without a content.json(which may being updated by owner- and need a re-scan) should be of a certain size- namely 10mb.\r\n\r\n...What?\r\n\r\nWhile `content.json` is being updated, it doesn't simply disappear from a site. Also, no one asks the site to be *exactly* 10 MB. It should be *at most* 10 MB, and this value can be changed in the sidebar.\r\n\r\n> This may apply for new sites, but not existing ones. You cant change site data within the browser(cant point to webzite-not in owned list) if the content.json is being updated. Its as if zite doesnt exist, which is wrong.\r\n\r\nZeroNet is assumed to be run not in the browser -- it's written in Python, after all, so it must have some environment to run in -- and if you have that environment already, I think you have a file browser.\r\n\r\n> 10mb may not even be sane at this point- I need 65mb for my updated content. I took me a good min to track the setting down- which should be in the master config file, not across 5 python files.\r\n\r\nIf a site requires 65 MB, this site has a problem. Big files should be optional to download, which aren't included in the limit.\r\n\r\n---\r\n\r\nI don't really understand everything else you said. I'm sick a bit, so it might be the reason, but could you please elaborate on the following:\r\n\r\n> most users will push updates and sync over and over- but in event of removal of data by owner- the content.json MUST be updated--and this is the only way to do it.\r\n\r\nWhat users will push updates and sync? ZeroNet users, or site owners, or site users (like on ZeroTalk I mean). Then you mention data removal -- who's the owner? Computer owner, deleting the files manually, or site owner?\r\n\r\n> Hack in the \"changes for .bit domains and optional content\" by yourself AFTER the json is recreated for the \"loss of content\".\r\n\r\nDot-bit domains aren't related to content loss at all, what do you mean here?\r\n\r\n> 1-save space\r\n\r\nI don't really see how *removing* a limit would *decrease* space usage.\r\n\r\n> 2-(my case) host content elsewhere\r\n\r\nWhere \"elsewhere\"? ZeroNet is a decentralized network, the content is assumed to be hosted by all site visitors.", "added": 1558523714, "modified": 1558523714, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2028#issuecomment-494821661", "source_type": "github"}, {"comment_id": 577, "body": "@JazzMaster Can you answer my questions or at least ping here to make sure we understand the problem and can solve it? ", "added": 1559213985, "modified": 1559213985, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2028#issuecomment-497339509", "source_type": "github"}], "1604067349_mirrored_imachug_github": [{"comment_id": 578, "body": "Ok, I wasn't sure whether the functions between these lines access logging somehow, will move initLogging then", "added": 1558687301, "modified": 1558687301, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2029#issuecomment-495587836", "source_type": "github"}, {"comment_id": 579, "body": "There we go.", "added": 1558687380, "modified": 1558687380, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2029#issuecomment-495588292", "source_type": "github"}], "1604067291_mirrored_anoduck_github": [{"comment_id": 580, "body": "Open sidebar in UI, increase site size limit, profit.\r\n\r\nThe terminal way of creating sites is outdated and should not be used.", "added": 1566129934, "modified": 1566129976, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2030#issuecomment-522329569", "source_type": "github"}, {"comment_id": 581, "body": "@HelloZeroNet Could you close this issue please?", "added": 1566131790, "modified": 1566131790, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2030#issuecomment-522331865", "source_type": "github"}], "1604067323_mirrored_rllola_github": [{"comment_id": 582, "body": "This is not enough. In case the redirect does *not* happen, we should also return the cloned site address -- otherwise, there's no way to get it.", "added": 1558889074, "modified": 1558889074, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2032#issuecomment-496026139", "source_type": "github"}, {"comment_id": 583, "body": "Cool, thanks for merging.", "added": 1559052110, "modified": 1559052110, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2032#issuecomment-496602731", "source_type": "github"}], "1604067326_mirrored_rllola_github": [{"comment_id": 584, "body": "1. Shouldn't the error handler be under `if not privatekey`?\r\n2. It isn't that easy. Both `siteSign(\"content.json\", \"stored\")` and `siteSign(\"data/users/authaddress/content.json\", \"stored\")` should work, so showing the notification from UiWebsocket is a bad idea -- it should be the sidebar JS code that shows it.", "added": 1558889022, "modified": 1558889022, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2033#issuecomment-496026092", "source_type": "github"}, {"comment_id": 585, "body": "It looks like the sidebar code was heavily rewritten since the moment when signing user files was implemented. So, this issue isn't actually related. We can report the `privatekey=\"stored\", not actually stored` case as an error then.\r\n\r\nHowever, I've actually noticed a small bug in the new `Sign` button implementation. If you're signing a user file, you should first try your user privatekey and *then* site privatekey, not in the opposite order. @HelloZeroNet ", "added": 1558923378, "modified": 1558923378, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2033#issuecomment-496080251", "source_type": "github"}, {"comment_id": 586, "body": "Not really. We've simplified the sign/verify buttons by merging them, and now you want to complicate it?\r\n\r\nI think it is clear enough: I can't find any case when signing with user privatekey is worse than signing by site privatekey. ", "added": 1558960604, "modified": 1558960604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2033#issuecomment-496249502", "source_type": "github"}, {"comment_id": 587, "body": "> But then we have the same problem in the other order?\r\n\r\nNot really, I can't make an example when signing with site key is better than signing with user key.\r\n\r\n> I just think the idea of trying another key as a fallback is not a good practice.\r\n\r\nThis makes the UI universal, though -- you sign both your and site's files the same way.\r\n\r\n---\r\n\r\n@HelloZeroNet Can you stop merging everything please? We haven't finished the conversation, we've just broken something, discussed that it's broken and now you just merge it!\r\n\r\nWould you also merge one of my PRs if I added malicious code with a `Fix typo` commit? I think you wouldn't -- then why did you merge this!?", "added": 1559052280, "modified": 1559052280, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2033#issuecomment-496603798", "source_type": "github"}, {"comment_id": 588, "body": "Yay, a lot better now. Thanks!", "added": 1559129680, "modified": 1559129680, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2033#issuecomment-496963519", "source_type": "github"}], "1604067303_mirrored_mx5kevin_github": [{"comment_id": 589, "body": "I don't really like the idea. First, most people will disable this feature because they most likely don't want to seed illegal content. Second, why should this feature be in the ZeroNet core? A simple site would work. And, third, we have this site already - it's ZeroUp. You can make ZeroNet download all the files (via sidebar), and then it's no different from your idea. ", "added": 1559549005, "modified": 1559549005, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2039#issuecomment-498212269", "source_type": "github"}, {"comment_id": 590, "body": "We can store the files *where*? On users' computers? Then how is it different from making the computer download all optional files which is supported already? ", "added": 1559701873, "modified": 1559701873, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2039#issuecomment-498944259", "source_type": "github"}, {"comment_id": 591, "body": "> And this can only be solved with extra seeders.\r\n\r\nOkay. Then, are you recommending to add more seeders? Where would you find them? I really don't see the point.", "added": 1559784943, "modified": 1559784943, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2039#issuecomment-499344797", "source_type": "github"}, {"comment_id": 592, "body": "Well it doesn't work well on other networks as well, look at Freenet. I don't want to host illegal content that might accidentally be downloaded.", "added": 1568682983, "modified": 1568682983, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2039#issuecomment-532051395", "source_type": "github"}], "1604067307_mirrored_yanxiatingyu_github": [{"comment_id": 593, "body": "ZeroNet uses its own protocol for p2p.\r\n\r\nAs for trackers, you have to define what trackers you're taking about. There are zero:// trackers, which are actually other ZeroNet peers, which use ZeroNet's own protocol. For other trackers, the classic way (that all torrent trackers use) is used (check the code [here](https://github.com/HelloZeroNet/ZeroNet/blob/116347ef669d8cadf92f6698171fa5d439ae6cb3/src/Site/SiteAnnouncer.py#L325)). ", "added": 1559550759, "modified": 1559550759, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2042#issuecomment-498220301", "source_type": "github"}], "1604067311_mirrored_Corsairs_github": [{"comment_id": 594, "body": "There's a load of full installers already... The official one, Krixano's, and mine. ", "added": 1560564617, "modified": 1560564617, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2046#issuecomment-502335546", "source_type": "github"}], "1604067379_mirrored_imachug_github": [{"comment_id": 595, "body": "CI has failed because of network errors, triggering rebuild... ", "added": 1561655403, "modified": 1561655403, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2052#issuecomment-506492298", "source_type": "github"}, {"comment_id": 596, "body": "There, CI succeeds now. ", "added": 1561655858, "modified": 1561655858, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2052#issuecomment-506494760", "source_type": "github"}, {"comment_id": 597, "body": "Thanks! ", "added": 1561690878, "modified": 1561690878, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2052#issuecomment-506612580", "source_type": "github"}], "1604067381_mirrored_imachug_github": [{"comment_id": 598, "body": "Yeah, I'll add FAQ right now.", "added": 1561538740, "modified": 1561538740, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-505839997", "source_type": "github"}, {"comment_id": 599, "body": "Added simple FAQ, working on docs right now.", "added": 1561538912, "modified": 1561538912, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-505840793", "source_type": "github"}, {"comment_id": 600, "body": "> Will system detect which cryptography is used and automatically switch to it?\r\n\r\nYes, take a look at the tutorial I've just added.\r\n\r\n> Also, I think that you should now also create an Ethereum plugin because it is very widely used.\r\n\r\nWill do.", "added": 1561539462, "modified": 1561539462, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-505843531", "source_type": "github"}, {"comment_id": 601, "body": "The docs have been updated & finished.", "added": 1561543513, "modified": 1561543513, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-505866007", "source_type": "github"}, {"comment_id": 602, "body": "CI is failing on old Python versions because of f string literals, which were added in Python 3.6. I will replace them with .format calls soon. ", "added": 1561608836, "modified": 1561608836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-506223174", "source_type": "github"}, {"comment_id": 603, "body": "> Does the actionChangeCrypto necessary? I think it should generate and use the same cryptography as the site does otherwise we will run into sync issues. (eg posting content signed with crypto that is not supported by every client)\r\n\r\nWhile `actionChangeCrypto` might not be necessary if we assume \"default crypto = site crypto\", I disagree with using a single cryptography per site. For example, a forum should support different cryptographies.\r\n\r\nSo, my proporsal is: get rid of `changeCrypto`, assume the default crypto (when no certificate is used) matches the cryptography of the site.", "added": 1561645393, "modified": 1561645393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-506436924", "source_type": "github"}, {"comment_id": 604, "body": "I also vote against `CryptEcc` because we should support classic cryptographies (i.e. non-elliptic) as well. We should come up with a better name. However, I can't really make up something better than \"cryptography\" -- and `CryptCryptography` sounds... weird :)", "added": 1561645562, "modified": 1561645562, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-506437833", "source_type": "github"}, {"comment_id": 605, "body": "Yeah, sounds great, will do that. ", "added": 1561690914, "modified": 1561690914, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-506612701", "source_type": "github"}, {"comment_id": 606, "body": "Changelog:\r\n\r\n1. `changeCrypto` was removed\r\n2. A new `isAddress` method added to cryptography implementations\r\n3. `Cryptography` renamed to `Crypt`\r\n4. `WrongCryptoError` renamed to `CryptError`\r\n\r\nWorking on better error messages & docs right now.", "added": 1561694019, "modified": 1561694019, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-506624829", "source_type": "github"}, {"comment_id": 607, "body": "The docs have been updated.", "added": 1561696200, "modified": 1561696200, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-506634035", "source_type": "github"}, {"comment_id": 608, "body": "Hello, @Thunder33345! Great to see you here again.\r\n\r\n> what's the differences of ark vs bitcoin crypto?\r\n\r\nThey both use the same elliptic curves, so there isn't much difference between them -- they work in a similar way and are equally secure. The reason why I used Ark was just because someone asked me to help him to replace Bitcoin with Ark, and I decided to support both. The purpose of this PR is to allow *other* cryptographies to be added too.\r\n\r\n> and why should i as site owner consider using one or the other?\r\n\r\nHow the site private key is mapped to the public key and to the address depends on what cryptography to use. Thus, it's impossible to support many cryptographies at once, just because they would yield different addresses. Because of this, a site must use a single cryptography for content signing. However, users may use other cryptographies. For example, you can use ZeroID at some Ark forum.", "added": 1561911795, "modified": 1561911795, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-507060555", "source_type": "github"}, {"comment_id": 609, "body": "> ah so this purpose is just basically a move to diversify of algos begin used instead of relying only on bitcoin\r\n\r\nExactly.\r\n\r\n> so there wont be much differences but just more options, might be confusing for newer users though...\r\n\r\nRight. However, we can add some explanation to the \"clone\" window. Or, as the cryptographies are only added by plugins, we can make the plugin authors explain it :) ", "added": 1561945809, "modified": 1561945809, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-507114643", "source_type": "github"}, {"comment_id": 610, "body": "> how about client backward compatibility?\r\n> say i have an outdated node on zerotalk, would the arkid users just be basically \"invisible\" to me right?\r\n\r\nRight. You see people who use any cryptography among the ones you have installed.", "added": 1561952103, "modified": 1561952103, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-507134598", "source_type": "github"}, {"comment_id": 611, "body": "AFAIK segwit isn't supported now, but it would be easy to support it. ", "added": 1561975957, "modified": 1561975957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-507258678", "source_type": "github"}], "1604067384_mirrored_imachug_github": [{"comment_id": 612, "body": "I would vote against 2. - this means that we would have to force-push master, thus people who prefer to use `git pull` will make a merge commit, and PRs would become a mess than (they have a merge commit, you don't, etc.). So I vote for 1.", "added": 1561690842, "modified": 1561690842, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2054#issuecomment-506612441", "source_type": "github"}, {"comment_id": 613, "body": "Closing as fixed ", "added": 1566305163, "modified": 1566305163, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2054#issuecomment-523074954", "source_type": "github"}], "1604067325_mirrored_nullptr2_github": [{"comment_id": 614, "body": "What \"YouTube\" are you talking about? The ZeroNet site? In this case, you should know that YouTube is actually a clone of KopyKate, which is a lot better and is still developed -- here it is: http://127.0.0.1:43110/big.kopykate.bit/.", "added": 1561791128, "modified": 1561791128, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2056#issuecomment-506944688", "source_type": "github"}, {"comment_id": 615, "body": "> YouTube\r\n\r\nWhich YouTube?\r\n\r\nDid you just ignore what I said?", "added": 1561796477, "modified": 1561796477, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2056#issuecomment-506949733", "source_type": "github"}, {"comment_id": 616, "body": "Sorry if that sounded rude, but:\r\n\r\n1. KopyKate & \"YouTube\" are sites practically everyone knows on ZeroNet, so there's no advertising there;\r\n2. We can't reproduce the problem if we don't know what site causes it;\r\n3. It *does* work for me.\r\n\r\n> Error, YouTube does not allow you to go to the main page of ZeroNet HeLLo\r\n\r\nDo you mean, like, going to the main page by pressing the `0` button? Or pressing \"back\" button of your browser? Or something else?\r\n\r\n> This is clearly a bug and can be exploited on other sites.\r\n\r\nWhat do you mean by \"can be exploited\"? Can you reproduce it on other sites, or do you just mean that it's possible? The former would help.\r\n\r\n---\r\n\r\nIn case I understood what you mean correctly:\r\n\r\nCould you please open YouTube, try to navigate to ZeroNet home page, and check the browser logs via DevTools? To do this, press F12 and whether there are any errors in the console. If there are, send them here please.", "added": 1561816369, "modified": 1561816369, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2056#issuecomment-506971521", "source_type": "github"}, {"comment_id": 617, "body": "> That's right when I press `0`\r\n> \r\n> Sorry forgot to show the error I thought you wouldn't need it.\r\n\r\nThank you, that helps.\r\n\r\nDoes the error happen o\u0442 YouTube's homepage, or is some specific subpage causing it?", "added": 1561822203, "modified": 1561822203, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2056#issuecomment-506977779", "source_type": "github"}, {"comment_id": 618, "body": "What browser & OS are you using? Can't reproduce it on latest Firefox & Windows 7, also on latest Firefox & Windows 10. Probably on Chrome & Windows 10 too but I haven't tried yet.", "added": 1561822696, "modified": 1561822696, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2056#issuecomment-506978380", "source_type": "github"}], "1604067336_mirrored_filips123_github": [{"comment_id": 619, "body": "Looks like adding `allow-pointer-lock` to iframe sandbox is enough. I'll make a PR right now", "added": 1561867334, "modified": 1561867334, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507013145", "source_type": "github"}, {"comment_id": 620, "body": "There, done. @filips123 could you please make that change yourself and check whether it works for you?", "added": 1561867522, "modified": 1561867543, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507013283", "source_type": "github"}, {"comment_id": 621, "body": "@filips123 The change to py3 branch has been merged. Is this enough to mark this issue as closed?", "added": 1561896920, "modified": 1561896920, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507044355", "source_type": "github"}, {"comment_id": 622, "body": "Python 2 isn't actively maintained, and Python 3 supports a lot more features already, and ZeroBundle and such will switch to Python 3 soon -- so, personally, I think we can close this. @HelloZeroNet, please reopen this if I'm wrong.", "added": 1561901660, "modified": 1561909273, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507049857", "source_type": "github"}], "1604067392_mirrored_imachug_github": [{"comment_id": 623, "body": "Offtopic: CI is failing because of incorrect pytest configuration on Python 3.8, not sure what's going on.", "added": 1561879104, "modified": 1561879104, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2059#issuecomment-507024594", "source_type": "github"}, {"comment_id": 624, "body": "What's interesting is that there weren't any commits to `py3` recently, and the CI on my other recent PRs *did* succeed...", "added": 1561884427, "modified": 1561884427, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2059#issuecomment-507029630", "source_type": "github"}, {"comment_id": 625, "body": "Yay, thanks!", "added": 1561896874, "modified": 1561896874, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2059#issuecomment-507044304", "source_type": "github"}, {"comment_id": 626, "body": "I've been thinking about this as well, and this is what I came up with:\r\n\r\n1. Browsers don't allow sites to lock pointer without any user interaction\r\n2. Locking pointer results in a big alert shown\r\n\r\nNotice that no permission is asked. However, the user would notice that something is wrong, and leave the site.\r\n\r\nSo, I think that doing the same in ZeroNet won't bring any problems.", "added": 1561912138, "modified": 1561912138, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2059#issuecomment-507061018", "source_type": "github"}], "1604067346_mirrored_filips123_github": [{"comment_id": 627, "body": "Just warning you that it might take a while. These parts are very integrated into each other. ", "added": 1562116977, "modified": 1562116977, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063#issuecomment-507932335", "source_type": "github"}, {"comment_id": 628, "body": "> WebSocket as RPC (not HTTP)\r\n\r\nWhat would you use instead? HTTP pooling? It's a lot slower.", "added": 1562484250, "modified": 1562484250, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063#issuecomment-508988187", "source_type": "github"}, {"comment_id": 629, "body": "> Half truth. WebSocket is not popular as normal HTTP. HTTP are included in almost every standard library, but WebSocket not.\r\n\r\nOnce again. HTTP pooling is a lot slower than WebSocket's.", "added": 1562485847, "modified": 1562485847, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063#issuecomment-508989756", "source_type": "github"}, {"comment_id": 630, "body": "This. Websockets are instant, that's the reason why they were invented. The client & the server need to communicate *instantly*, the messages need to be sent in both directions. HTTP supports neither of this.", "added": 1562489364, "modified": 1562489364, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063#issuecomment-508993270", "source_type": "github"}], "1604067337_mirrored_beardog108_github": [{"comment_id": 631, "body": "Wouldn't it be better to replace assert with if in critical places? ", "added": 1562116881, "modified": 1562116881, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2064#issuecomment-507932065", "source_type": "github"}], "1604067349_mirrored_Merith-TK_github": [{"comment_id": 632, "body": "In most cases, it's next to impossible to recover JSON, as it may be corrupted in several ways. So I don't think that making a \"make everything work\" button is possible. ", "added": 1562405261, "modified": 1562405261, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2076#issuecomment-508922874", "source_type": "github"}], "1604067372_mirrored_geekless_github": [{"comment_id": 633, "body": "They don't say that they're going to block interactive content in iframes; they say that they're going to block interactive content in *ad* iframes. However, I have no idea how they are going to distinguish between normal content (e.g.: Facebook comments) and ads. If they're going to have a blacklist (or detect ads in a similar way), this change is not required.", "added": 1562641847, "modified": 1562641847, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2086#issuecomment-509503272", "source_type": "github"}, {"comment_id": 634, "body": "> By the way, there was a prrof-of-concept SOCK5 proxy implementation for Zeronet somewhere, wasn't it? Or am I confusing something?\r\n\r\nMaybe there was, but I think that I've first heard about it from you... so maybe there was some confusion", "added": 1562643424, "modified": 1562643424, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2086#issuecomment-509509880", "source_type": "github"}], "1604067374_mirrored_geekless_github": [{"comment_id": 635, "body": "> I hope there is some solution for turning URL into lowercase. If there's not, we would need to use some other solution.\r\n\r\nSimple & silly solution: Just ignore the address case. The probability of two addresses matching case-insensitive but not totally equal is small enough to ignore it.", "added": 1562729490, "modified": 1562729490, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509928228", "source_type": "github"}, {"comment_id": 636, "body": "> I don't know if support for this is actually needed. Onion domains are random, so there's probably no benefit from using it instead of a regular Bitcoin address.\r\n\r\nThough I have no idea how onion domains could be used in ZeroNet (waiting for @geekless'es proposal), there's a thing like vanitygen there. facebookcorewwwi.onion would like to have a word with you.", "added": 1562729639, "modified": 1562729639, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509928898", "source_type": "github"}, {"comment_id": 637, "body": "Not really. Just send the lower-cased address to trackers.", "added": 1562736915, "modified": 1562736922, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509966880", "source_type": "github"}, {"comment_id": 638, "body": "offtopic: BTW, your idea about making a tracker to collect site list won't work, because ZeroNet uses the SHA1 of the address for announcing, not the address itself.", "added": 1562736971, "modified": 1562736971, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509967235", "source_type": "github"}, {"comment_id": 639, "body": "SHA1 is used for clearnet, SHA256 for zero://.", "added": 1562737193, "modified": 1562737193, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509968615", "source_type": "github"}, {"comment_id": 640, "body": "> So, looks like we should send sha sums of the both case-sesitive and lowercased addresses.\r\n\r\nFor backward compatibility?", "added": 1562737263, "modified": 1562737263, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509969006", "source_type": "github"}, {"comment_id": 641, "body": "One problem that arises when we make addresses case-insensitive is Bitcoin compatibility -- someone can accidentally transfer money to 1hello4uzjaletfx6nh3pmwfp3qbrbtf3d instead of 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D.", "added": 1562737644, "modified": 1562737644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509971459", "source_type": "github"}, {"comment_id": 642, "body": "> @imachug Are that lowercase addresses actually valid Bitcoin addresses (because of invalid chars and checksum)? Won't wallets prevent people to send Bitcoin to invalid address?\r\n\r\nYou're a genious, that's right.\r\n\r\nHowever, we still have a small problem that you can't donate directly to site address anymore (though, that's somewhat a feature)", "added": 1562738070, "modified": 1562738070, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509973969", "source_type": "github"}, {"comment_id": 643, "body": "> Could real site address still be displayed in UI, sidebar and ZeroFrame commands?\r\n\r\nHeck, you can actually recover the full address (case-sensitive) from the content.json signature! So it's possible.", "added": 1562738268, "modified": 1562738268, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509975291", "source_type": "github"}, {"comment_id": 644, "body": "Can we use `@` to separate user ID from the provider? In this case, we don't even need the `.user`/`.cert`/etc. part. That might look a bit better. E.g.: `subdomain.geekless@zeroid.bit`.", "added": 1562741839, "modified": 1562741839, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509996233", "source_type": "github"}, {"comment_id": 645, "body": "Ok, that's a problem. We have `-` however, which is (probably?) disallowed in ZeroNet hostnames. So, `subdomain.geekless-zeroid.bit` may work?", "added": 1562742838, "modified": 1562742838, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510001661", "source_type": "github"}, {"comment_id": 646, "body": "Or `subdomain-geekless.zeroid.bit`, which looks a bit better (and doesn't suffer from that \"zeroid.bit\" vs \"geekless.zeroid.bit\" provider problem).", "added": 1562742899, "modified": 1562742899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510001965", "source_type": "github"}, {"comment_id": 647, "body": "Oh, my bad, I looked through ZeroName and didn't find a site with a dash. Here's another idea then: your question was about how to distinguish `subdomain by geekless@zeroid.bit` vs. `subdomain@geekless.zeroid.bit`. My point is that it makes little sense to make both `A` and `x.A` certificate providers (and `x.A` and `A` are owned by a single person), so we can just take the certificate provider with the smallest length (i.e.: is `bit` a certificate provider? no. is `zeroid.bit` a certificate provider? yes, stop here.)", "added": 1562744270, "modified": 1562744270, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510008671", "source_type": "github"}, {"comment_id": 648, "body": "My idea was not to scan users.json or something. As we have a domain list already (ZeroName), we can use it to check whether `bit`, `zeroid.bit`, `geekless.zeroid.bit` are registered.", "added": 1562745498, "modified": 1562745498, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510014277", "source_type": "github"}, {"comment_id": 649, "body": "Ok. So, what's the best solution then? Crawl all user content.json's to gather a cert_user_id <-> address mapping?", "added": 1562746509, "modified": 1562746509, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510018847", "source_type": "github"}, {"comment_id": 650, "body": "There's a gopher plugin we've made together with krixano, and it worked rather well, so I'm sure that more protocols for *consuming* content will be added in the future.", "added": 1562755421, "modified": 1562755421, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510066723", "source_type": "github"}, {"comment_id": 651, "body": "> Nice! Do you have the link to repo? Have you rebuild ZeroNet in it?\r\n\r\nHere's a repo for Python 2 version: https://github.com/imachug/Plugin-Gopher", "added": 1562758628, "modified": 1562758628, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510088792", "source_type": "github"}, {"comment_id": 652, "body": "@filips123 That project was somewhat a PoC, and we (krixano and me) have some more projects to do now, so I think that plugin isn't going to receive any updates. If someone likes the idea though, I'm ready for PRs.", "added": 1562762604, "modified": 1562762604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510116647", "source_type": "github"}, {"comment_id": 653, "body": "> The current system is fine. This idea is rather ridiculous and pointless.\r\n\r\nSo, you *don't* think Namecoin centralization is a problem?", "added": 1564237432, "modified": 1564237432, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-515700416", "source_type": "github"}], "1604067382_mirrored_6543_github": [{"comment_id": 654, "body": "A small con to proxy-based solution: the proxy has to be always online which is not always possible. Same with DNS, though modern OSes usually have fallbacks. Still, configuring global DNSes might get troublesome if you are using dnsmasq or such already or if you want ZeroNet installation to be easy.", "added": 1571676374, "modified": 1571676374, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544676758", "source_type": "github"}, {"comment_id": 655, "body": "> A bit harder for users.\r\n\r\nThere's a small problem with this. Unfortunately, it looks like it's *a lot* harded for users.\r\n\r\nBefore: you download a ZIP, extract it and run ZeroNet.exe. Hooray, you can now browse ZeroNet.\r\n\r\nAfter: you download a ZIP, extract it and run ZeroNet.exe. ZeroNet asks you to install some random extension. You click the link and press \"Install\" button. You wait for the extension to get installed, open its settings, notice \"PAC file\", press \"Choose\" button. You then notice that you have no idea what PAC you're looking for. You press Esc, go back to ZeroNet homepage, look at the path and decide to take it down. You return to the settings page, type in the path and press OK. Hooray, ZeroNet now works.", "added": 1571676582, "modified": 1571676582, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544678147", "source_type": "github"}, {"comment_id": 656, "body": "Welp, that means that we'll have to make our own extension. Whilst Firefox allows side-loading extensions, Chrome and Edge don't, Safari doesn't support WebExtensions, and mobile Chrome doesn't support extensions at all. Oopsie.", "added": 1571678442, "modified": 1571678442, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544690459", "source_type": "github"}, {"comment_id": 657, "body": "Right, but that's really difficult for an average user if we want a big user base. ", "added": 1571706959, "modified": 1571706959, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544798622", "source_type": "github"}, {"comment_id": 658, "body": "Sideloading an extension requires a Google developer account and uploading the extension to store. It also means that Google can revoke the extension whenever they want.", "added": 1571747194, "modified": 1571747194, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545017881", "source_type": "github"}, {"comment_id": 659, "body": "> But for local ZeroNet instances, only .zeronet should be used.\r\n\r\nAnyone with a google developer account here? Anyways, Google centralization doesn't look like a good idea to me. Look at what they did to AdNauseam. ", "added": 1571749583, "modified": 1571749583, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545035925", "source_type": "github"}, {"comment_id": 660, "body": "That would yield a \"This extension is installed in developer mode\" notification every time. ", "added": 1571752196, "modified": 1571752196, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545053958", "source_type": "github"}, {"comment_id": 661, "body": "Right. That's why I think it should only be thought of as the worst solution. We should try to avoid that as much as we can.", "added": 1571754100, "modified": 1571754100, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545066535", "source_type": "github"}, {"comment_id": 662, "body": "A brief overview on what we could do on different browsers:\r\n\r\n- Chrome desktop: extension (blocked cause we need a developer), PAC file (global, Windows-only)\r\n- Firefox desktop: extension, PAC file, local proxy\r\n- Edge desktop: extension (blocked cause we need a developer)\r\n- Safari desktop: extension\r\n- Chrome mobile: none?\r\n- Firefox mobile: extension\r\n- Safari mobile: none?\r\n\r\nSo, extensions are supported by most browsers but Chrome and Edge will make them a pain if we don't use a developer acccount. As for mobile browsers, we could make a dedicated app for them. ", "added": 1572002208, "modified": 1572002298, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546372566", "source_type": "github"}, {"comment_id": 663, "body": "> does the SOURCE CODE for a Zeronet extension (or similar -- thinking TOR) already exist?\r\n\r\nThere's an outdated version but we'll have to modify that for the new sandbox.\r\n\r\n> I wouldn't have a problem publishing the extension under our d14nauth[at]gmail account\r\n\r\nIt'd be cool. I'd use that account for some compatibility tests, I guess I'll need it soon.\r\n\r\n> I actually think google themselves took it down...\r\n\r\nLet's ping @goldenratio.", "added": 1572052903, "modified": 1572052903, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546567251", "source_type": "github"}, {"comment_id": 664, "body": "> In my opinion, these two extensions should be merged with each other to provide the best things of both.\r\n\r\nI think we should rewrite the extensions. They're really simple but we'll need to modify them when we change the way sandbox works. I also have some proxy-related ideas. ", "added": 1572078062, "modified": 1572078062, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546593937", "source_type": "github"}, {"comment_id": 665, "body": "A small update: PAC file won't work because websocket connections aren't affected. Extensions are required.", "added": 1572095619, "modified": 1572095619, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546616474", "source_type": "github"}, {"comment_id": 666, "body": "Nope, the APIs are different. PAC files just define a few functions, whilst extensions have access to `proxy` API.", "added": 1572096672, "modified": 1572096672, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546618175", "source_type": "github"}, {"comment_id": 667, "body": "My test extension shows that it can do that.", "added": 1572098134, "modified": 1572098142, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546620434", "source_type": "github"}, {"comment_id": 668, "body": "\u00af\\\\\\_(\u30c4)\\_/\u00af By definition. PAC files were intended to only proxy a few requests, then websockets were invented but no one wanted to modify PAC behavior. Anyways, I don't think that using webextensions instead of PAC files is a problem.", "added": 1572098449, "modified": 1572106682, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546621010", "source_type": "github"}, {"comment_id": 669, "body": "@d14na Can you please take a look at the extension I published [here](https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546830889)?", "added": 1572329978, "modified": 1572329978, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-547328066", "source_type": "github"}], "1604067397_mirrored_Merith-TK_github": [{"comment_id": 670, "body": "@HelloZeroNet Closing?", "added": 1566303763, "modified": 1566303763, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2110#issuecomment-523065018", "source_type": "github"}], "1604067438_mirrored_rllola_github": [{"comment_id": 671, "body": "What if the site owner (or, in case of multiuser sites, any user) distributes a 1 TB content.json?", "added": 1564556648, "modified": 1564556648, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2114#issuecomment-516785000", "source_type": "github"}], "1604067433_mirrored_filips123_github": [{"comment_id": 672, "body": "> Update: Do you mean that I should add the same change as your in my own plugin?\r\n\r\nI bet that's what they meant.", "added": 1565514817, "modified": 1565514817, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-520223313", "source_type": "github"}], "1604067422_mirrored_Guedez_github": [{"comment_id": 673, "body": "This sounds like a user-controlled optional file list, as opposed to site-owner-controlled list. Am I understanding the proposal right?", "added": 1565589649, "modified": 1565589649, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2133#issuecomment-520347398", "source_type": "github"}], "1604067446_mirrored_mkg20001_github": [{"comment_id": 674, "body": "@mkg20001 Will a quick'n'dirty solution of adding a CLI option work, like what we have now with `dist_type`?", "added": 1565589863, "modified": 1565589863, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2139#issuecomment-520348398", "source_type": "github"}, {"comment_id": 675, "body": "Will the following work:\r\n\r\n```python\r\nimport logging\r\nconfig.initLogging(console_logging=len(logging.root.manager.loggerDict) == 0)\r\n```\r\n\r\n?", "added": 1565590829, "modified": 1565590829, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2139#issuecomment-520353194", "source_type": "github"}, {"comment_id": 676, "body": "@mkg20001 BTW, please set `dist_type` to `kiwi` or `mobile` or something. That'll make it easier to develop cross-platform sites (namely, administrating pages). You can set it either with CLI or with zeronet.conf (under [global] section)", "added": 1565590899, "modified": 1565590899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2139#issuecomment-520353595", "source_type": "github"}, {"comment_id": 677, "body": "`dist_type` is `source` for raw Git repository (read: built from source) and `bundle_x64` for ZeroNet bundle (not sure about underscore though, and whether it's `x86` on 32-bit platforms). I've recommended people who make their own launchers to use `bundle`. I think using `kivy` makes most sense, and you'd use `android` as `platform` in `serverInfo`.", "added": 1565591338, "modified": 1565591338, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2139#issuecomment-520355862", "source_type": "github"}, {"comment_id": 678, "body": "Actually, I'd leave `bundle*` to the official zeronet.io bundle, so I'd use `kivy` instead.", "added": 1565591669, "modified": 1565591669, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2139#issuecomment-520357422", "source_type": "github"}, {"comment_id": 679, "body": "Ok, using `kivy_android` makes sense now, I think. Also thanks for the commit, I believe this issue can be closed now.\r\n\r\n*Offtopic: could you check your ZeroMail please?*", "added": 1565616869, "modified": 1565616869, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2139#issuecomment-520499171", "source_type": "github"}, {"comment_id": 680, "body": "@mkg20001 Uh, that off-topic was for nofish actually...", "added": 1565690242, "modified": 1565690284, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2139#issuecomment-520823409", "source_type": "github"}], "1604067449_mirrored_mkg20001_github": [{"comment_id": 681, "body": "Works fine for me on laptop (Win7). Can you reproduce the bug on a desktop or on mobile only?", "added": 1565591088, "modified": 1565591088, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2140#issuecomment-520354642", "source_type": "github"}, {"comment_id": 682, "body": "`debug_socket`", "added": 1565591469, "modified": 1565591469, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2140#issuecomment-520356486", "source_type": "github"}, {"comment_id": 683, "body": "@mkg20001 Have you tried it yet? :D", "added": 1566303675, "modified": 1566303675, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2140#issuecomment-523064382", "source_type": "github"}], "1604067437_mirrored_joshiemoore_github": [{"comment_id": 684, "body": "I think using several `assert`s instead of `parametrize` is the way we write multitests. Please use the following test instead:\r\n\r\n```python\r\n    def testPathValidation(self, site):\r\n        assert site.content_manager.isValidRelativePath(\"test.txt\")\r\n        assert site.content_manager.isValidRelativePath(\"test/!@#$%^&*().txt\")\r\n        assert site.content_manager.isValidRelativePath(\"\u00dc\u00f8\u00df\u00c2\u0152\u0182\u00c6\u00c7.txt\")\r\n        assert site.content_manager.isValidRelativePath(\"\u0442\u0435\u0441\u0442.\u0442\u0435\u043a\u0441\u0442\")\r\n        assert site.content_manager.isValidRelativePath(\"\ud835\udc2e\ud835\udc27\ud835\udc22\ud835\udc1c\ud835\udc28\ud835\udc1d\ud835\udc1e\ud835\udc56\ud835\udc60\ud835\udc82\ud835\udc98\ud835\udc86\ud835\udc94\ud835\udc90\ud835\udc8e\ud835\udc86\")\r\n```\r\n\r\nI've added a few more testcases, BTW. @HelloZeroNet I'm not sure if the last one should be allowed or not.", "added": 1565667239, "modified": 1565667239, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2141#issuecomment-520707732", "source_type": "github"}, {"comment_id": 685, "body": "> Everything else can be solved by aliasing the sha256 value of the file name as real name.\r\n\r\nSorry, but I say strong **no**. ZeroNet is more of a transport protocol than a web browser. It should not decide how files are stored in the file system: for example, using sha256 instead of file names will break Git repositories hostings on ZeroNet.", "added": 1566139233, "modified": 1566139233, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2141#issuecomment-522340950", "source_type": "github"}, {"comment_id": 686, "body": "@AyrA What I was talking about is a *bare* git repository, like how GitHub hosts content. In other words, the content of your `.git` directory, not the code itself.\r\n\r\nBTW, `.*` works for me.", "added": 1566144820, "modified": 1566144820, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2141#issuecomment-522347364", "source_type": "github"}, {"comment_id": 687, "body": "We *do* know what path traversal is. But we also know how ZeroNet works. Using `/../` in `content.json` (that's what that ContentManager method does) is *incorrect*, because that would mean that `a.txt` and `dir/../a.txt` are the same file, and you can create two conflicting entries for a single file, which is kinda bad. I agree that the check is not awesome, however -- I'll make a PR right now.\r\n\r\nAs for the `.*` files, I believe there wasn't such a check before, @HelloZeroNet please check whether it's absolutely required (updating `ignore` in content.json sounds like a better solution).", "added": 1566187654, "modified": 1566187654, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2141#issuecomment-522441777", "source_type": "github"}, {"comment_id": 688, "body": "See #2160.", "added": 1566187787, "modified": 1566187787, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2141#issuecomment-522442381", "source_type": "github"}], "1604067439_mirrored_User-Hrsat_github": [{"comment_id": 689, "body": "Have you installed ZeroNet correctly? It looks like if you're using ZeroNet from source, but you haven't installed the dependencies. Running `python -m pip install -r requirements.txt` from ZeroNet directory should work. ", "added": 1565693178, "modified": 1565693178, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2142#issuecomment-520841244", "source_type": "github"}, {"comment_id": 690, "body": "It's impossible to recover the account unless you have at least a part of users.json.", "added": 1565765678, "modified": 1565765678, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2142#issuecomment-521181675", "source_type": "github"}, {"comment_id": 691, "body": "@HelloZeroNet This issue can be closed.", "added": 1570670011, "modified": 1570670011, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2142#issuecomment-540343290", "source_type": "github"}], "1604067445_mirrored_ghbjklhv1_github": [{"comment_id": 692, "body": "@github-zeronet Could you please mention you are not the ZeroNet creator/maintainer in your profile bio? \"github-zeronet\" could be easily cofused with \"HelloZeroNet\".\r\n\r\nThanks.", "added": 1566052088, "modified": 1566052088, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2147#issuecomment-522255998", "source_type": "github"}], "1604067453_mirrored_github-zeronet_github": [{"comment_id": 693, "body": "@github-zeronet Could you please mention that you are not the ZeroNet creator (or maintainer) in your profile bio? You can easily get confused with @HelloZeroNet.\r\n\r\n*offtopic: @HelloZeroNet could you check your ZeroMail please?*", "added": 1566052298, "modified": 1566052298, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2154#issuecomment-522256382", "source_type": "github"}, {"comment_id": 694, "body": "*offtopic: @HelloZeroNet please check the reply*", "added": 1566058038, "modified": 1566058038, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2154#issuecomment-522262934", "source_type": "github"}, {"comment_id": 695, "body": "@github-zeronet No it's not a solution.\r\n\r\n**NOSANDBOX is all-caps for a reason. If you give a site NOSANDBOX permission, that site can do anything on your computer: run any apps, set up a locker and what not.**\r\n\r\n**Keep safe, people!**\r\n\r\nThe real solution is to call `(new ZeroFrame()).monkeyPatchAjax()` and then load your app.", "added": 1566119729, "modified": 1566119729, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2154#issuecomment-522316548", "source_type": "github"}], "1604067475_mirrored_styromaniac_github": [{"comment_id": 696, "body": "Hotfix: `pluginAdd` -> `pluginAddRequest` in MultiuserPlugin.py.", "added": 1566057264, "modified": 1566057264, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2155#issuecomment-522262037", "source_type": "github"}], "1604067456_mirrored_mouncg_github": [{"comment_id": 697, "body": "Sounds like if you have connection issues. Pressing `Update` in sidebar and then refreshing (or even *just* refreshing) should help.", "added": 1566289081, "modified": 1566289081, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2157#issuecomment-522968245", "source_type": "github"}, {"comment_id": 698, "body": "Out of curiosity, have you tried increasing site limit in sidebar (10 MB -> 20MB) and then \"update\"ing the site?", "added": 1566310035, "modified": 1566310035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2157#issuecomment-523107177", "source_type": "github"}, {"comment_id": 699, "body": "No idea. What ZeroNet version do you have? Did you disable any plugins?", "added": 1566375179, "modified": 1566375179, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2157#issuecomment-523411363", "source_type": "github"}], "1604067460_mirrored_coreyharden_github": [{"comment_id": 700, "body": "`ZeroNet-win-dist` does not support console operations. Please use ZeroHello to create a site.", "added": 1566187359, "modified": 1566187359, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2159#issuecomment-522440350", "source_type": "github"}, {"comment_id": 701, "body": "Still, I wouldn't recommend using `siteCreate`: it generates the private key as a random key, not as a masterseed child, which means that you won't be able to recover it.", "added": 1566204185, "modified": 1566204185, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2159#issuecomment-522533829", "source_type": "github"}, {"comment_id": 702, "body": "> Just curious @imachug, do you know of a better way to get a private key for publishing your site?\r\n\r\nI usually use ZeroHello to create a site. Open [ZeroHello](http://127.0.0.1:43110/), click menu icon (`:`) next to \"Hello ZeroNet_\", choose \"Create new, empty site\". A new site will be created for you immediately. You'll see the site address either in the address bar on in the sidebar. The private key is seldom required, but it's in your `users.json`.", "added": 1566269324, "modified": 1566269324, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2159#issuecomment-522863537", "source_type": "github"}], "1604067528_mirrored_imachug_github": [{"comment_id": 703, "body": "@HelloZeroNet Any ideas why py3.8 can't be downloaded from time to time?", "added": 1566188647, "modified": 1566188647, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2160#issuecomment-522446602", "source_type": "github"}, {"comment_id": 704, "body": "Sounds like a travis issue to me too. Switching to another CI (e.g. GitLab CI/CD) might work better (see my mail).", "added": 1566203869, "modified": 1566203869, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2160#issuecomment-522531952", "source_type": "github"}], "1604067526_mirrored_slrslr_github": [{"comment_id": 705, "body": "@HelloZeroNet What's the best way to load a lot of images then? Should I:\r\n\r\n- Check that an image is downloaded\r\n- If it is, show it immediately\r\n- Otherwise, call `fileNeed` and then show the image\r\n\r\n?", "added": 1566202897, "modified": 1566202943, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2161#issuecomment-522527097", "source_type": "github"}], "1604067534_mirrored_imachug_github": [{"comment_id": 706, "body": "**This PR is WIP:** I'm adding Python 3.5-3.8 support rn.", "added": 1566213015, "modified": 1566213217, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2163#issuecomment-522592517", "source_type": "github"}, {"comment_id": 707, "body": "I've found an unrelated problem: ZeroNet crashes on OpenSSL 1.1.1. Working on the fix.", "added": 1566214570, "modified": 1566214570, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2163#issuecomment-522603577", "source_type": "github"}, {"comment_id": 708, "body": "Done. Here are targets which are used:\r\n\r\n- Python 3.4, OpenSSL 1.1.0\r\n- Python 3.5, OpenSSL 1.1.0\r\n- Python 3.6, OpenSSL 1.1.0\r\n- Python 3.7, OpenSSL 1.1.0\r\n- Python 3.7, OpenSSL 1.1.0\r\n- Python 3.7, OpenSSL 1.1.1\r\n- Python 3.8.0b3, OpenSSL 1.1.0\r\n\r\nI've also updated ZeroNet not to crash with OpenSSL 1.1.1.", "added": 1566216526, "modified": 1566216526, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2163#issuecomment-522619519", "source_type": "github"}, {"comment_id": 709, "body": "![image](https://user-images.githubusercontent.com/16370781/63277576-1b925000-c295-11e9-8d58-c64906846f2c.png)\r\n\r\n^_^", "added": 1566217335, "modified": 1566217335, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2163#issuecomment-522626008", "source_type": "github"}, {"comment_id": 710, "body": "Thanks! You can check the PoC in the repository I sent you in ZeroMail.", "added": 1566218201, "modified": 1566218201, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2163#issuecomment-522632040", "source_type": "github"}], "1604067485_mirrored_filips123_github": [{"comment_id": 711, "body": "Please add `web3` to root `requirements.txt`.\r\n\r\n@HelloZeroNet I'm not sure what's ZeroNet's policy on plugin requirements. I'd recommend either making such plugins disabled by default (adding a runtime check for requirement existence) or adding the requirements to root requirements.txt.", "added": 1566230178, "modified": 1566230178, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-522709469", "source_type": "github"}, {"comment_id": 712, "body": "> Solution for this could be to store plugins in different repositories (except for low-level networking and other strictly required plugins) and automatically install them on the first startup. This could also be integrated with the new plugin management system. This would still support all features, but keep repository small.\r\n\r\n:100: This sounds like implementing PyPI in ZeroNet!", "added": 1566403737, "modified": 1566403737, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-523607483", "source_type": "github"}, {"comment_id": 713, "body": "> Until then, this and other important plugins (PeerMessage, BackgroundProcessing) should probably be merged into the repository.\r\n\r\nAdding PeerMessage might be a good idea (check how many threads saying \"Why KxoID doesn't work\" are there on ZeroTalk), but BackgroundProcessing is something I'm still worried about -- it might be better to avoid it for now as we have plugins.\r\n\r\n> Happy to see new stuff!\r\n\r\nNow, PeerMessage is the only way to send messages between peers faster than one per 30 seconds. That's it. Whatever you want to make --a chat, a blockchain (ehh), a federated client-server architecture (I don't know whether it has a name; basically, it's when a client connects to several servers instead of a single one, or to a random server, something liek that), etc.", "added": 1566443456, "modified": 1566443456, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-523763466", "source_type": "github"}, {"comment_id": 714, "body": "@filips123 is that the only blocking problem? ", "added": 1575449643, "modified": 1575449643, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-561611601", "source_type": "github"}], "1604067474_mirrored_ValdikSS_github": [{"comment_id": 715, "body": "@ValdikSS Could you please check whether my PR solves your issue?", "added": 1566235182, "modified": 1566235182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2165#issuecomment-522737469", "source_type": "github"}, {"comment_id": 716, "body": "There, fixed.", "added": 1566269219, "modified": 1566269219, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2165#issuecomment-522863096", "source_type": "github"}], "1604067539_mirrored_imachug_github": [{"comment_id": 717, "body": "Fixed quotes.\r\n\r\nAs for me, I don't see any possible security issues here: it's `blob` after all.", "added": 1566269208, "modified": 1566269208, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2166#issuecomment-522863047", "source_type": "github"}], "1604067473_mirrored_tianlichunhong_github": [{"comment_id": 718, "body": "Try adding the following to zeronet.conf to `[global]` section:\r\n\r\n```\r\nui_host =\r\n www.xxx.com\r\n```", "added": 1566303615, "modified": 1566303615, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2168#issuecomment-523063962", "source_type": "github"}], "1604067545_mirrored_imachug_github": [{"comment_id": 719, "body": "@HelloZeroNet @geekless @rllola @DATSEC @ValdikSS @filips123 @anthyg @anoadragon453 @github-zeronet\r\n\r\nWaiting for review!", "added": 1566321941, "modified": 1566321941, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523180503", "source_type": "github"}, {"comment_id": 720, "body": "I've first predicted compatiblity issues, but, surprisingly, latest Firefox and Chrome in both Incognito and classic mode work well.", "added": 1566322236, "modified": 1566322236, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523182220", "source_type": "github"}, {"comment_id": 721, "body": "I've found a minor issue with `pushState`/`replaceState`: sites could pretend as other sites because `http://127.0.0.1:43110/talk.zeronetwork.bit` and `http://127.0.0.1:43110/me.zeronetwork.bit` are same-origin. This can, however, be fixed by overriding `history.pushState`.", "added": 1566325239, "modified": 1566325239, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523199621", "source_type": "github"}, {"comment_id": 722, "body": "> What's the minimal you can do (time wise) to be able to have a branch where we can test the highest risk portions of the design, such as the new PREFIX (shadow DOM)?\r\n\r\nIf you're asking for a high-risk PoC (meaning unsafe, i.e. can be abused by sites), it'll probably be finished today (it's 9am for me). By now, ZeroTalk, static sites, ZeroSites and ZeroHello all *mostly* work (except localStorage stuff and such).", "added": 1566356602, "modified": 1566356602, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523310153", "source_type": "github"}, {"comment_id": 723, "body": "Ok, so, are there any sites using `wrapperWebNotification` / wrapperCloseWebNotification` at all yet? I have only one, but it's not released yet, and I don't know other people using these commands, so I don't think it makes sense to support them.", "added": 1566357734, "modified": 1566357734, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523314865", "source_type": "github"}, {"comment_id": 724, "body": "> That commands should probably be available, but marked as deprecated and removed on next major version.\r\n\r\nSure, but `innerLoaded`, `wrapperPushState` and `wrapperReplaceState` are still useful, so we can probably leave them (or remove in two major versions or something)\r\n\r\n@HelloZeroNet \r\n\r\n> Also, how would you prevent CORS? Because all sites would be on same origin, any site would be able to access all data from other sites even without permission.\r\n\r\nWe'd compare `Origin`/`Referer` to the request URL, and if it doesn't match, we'd use `X-Frame-Options` and `Content-Security-Policy` for iframes and just `403 Forbidden` for data.\r\n\r\n> Can you share your unsafe PoC when it is available? I would like to test it.\r\n\r\nSure, ping me tomorrow if I forget to send you a link.", "added": 1566366769, "modified": 1566366769, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523363387", "source_type": "github"}, {"comment_id": 725, "body": "I'm currently a bit stuck with site-in-site (aka picture-in-picture) mode implementation. [Good old 3 years old StackOverflow thread without an answer](https://stackoverflow.com/questions/41251993/referrer-header-not-included-in-stylesheet-request-inside-iframe). Please tell me if you know how to fix that issue.", "added": 1566366864, "modified": 1566366871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523363960", "source_type": "github"}, {"comment_id": 726, "body": "Unfortunately I couldn't find a way to fix that issue, so I'm switching to another architecture:\r\n\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 HTML PAGE                                           \u2502\r\n\u2502 Secret (wrapper key [site])                         \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 PREFIX (shadow DOM)                             \u2502 \u2502\r\n\u2502 \u2502 Practically invisible to site content           \u2502 \u2502\r\n\u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502\r\n\u2502 \u2502 \u2502 SITE NOTIFICATIONS (<div>)                  \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2502 Unsafe content (possible XSS)               \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502\r\n\u2502 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2502\r\n\u2502 \u2502 \u2551 WRAPPER NOTIFICATIONS (<iframe>)            \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 Safe content (no leaking or spoofing)       \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502 \u2502\r\n\u2502 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2502\r\n\u2502 \u2502 \u2551 SIDEBAR (iframe)                            \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 Site and key management                     \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 Secret (wrapper key [ADMIN])                \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2502 WS UPLINK                               \u2502 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2502 UiWebsocket API (ADMIN)                 \u2502 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502 \u2502\r\n\u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502\r\n\u2502 \u2502 \u2502 WS UPLINK                                   \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2502 UiWebsocket API (site)                      \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 SITE DATA                                       \u2502 \u2502\r\n\u2502 \u2502 Unsafe content (managed by site code)           \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nBasically, we're getting rid of iframe gate and using wrapper key instead. This architecture is still secure, but is more error-prone, so I should be careful enough.", "added": 1566370696, "modified": 1566370696, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523387921", "source_type": "github"}, {"comment_id": 727, "body": "Site notifications are possibly insecure and don't store sensitive information; wrapper notifications are always secure and may store sensitive information. For example, `Database was rebuilt` notification is a site notification, while `Enter private key: [...]` (you get it when you press `Sign & publish`) is a wrapper notification.\r\n\r\nIt's unsafe to use `div` for wrapper notifications. But it's possible to use `iframe` for site notifications, though that's overcomplicated and slow.", "added": 1566371754, "modified": 1566371754, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523393937", "source_type": "github"}, {"comment_id": 728, "body": "@filips123 Forgot to ping you", "added": 1566372341, "modified": 1566372341, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523397125", "source_type": "github"}, {"comment_id": 729, "body": "I've noticed that a lot of wrapper code uses jQuery. We probably don't want to pollute sites' environment, so I'm trying to port as much code as possible to Vanilla JS.", "added": 1566379711, "modified": 1566379711, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523434361", "source_type": "github"}, {"comment_id": 730, "body": "Making sidebar work turned out to be a bit more difficult than expected, so you'll have to wait a bit.", "added": 1566407953, "modified": 1566407953, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523632228", "source_type": "github"}, {"comment_id": 731, "body": "Sure; but *what* would you do after getting `pushState`? `pushState \"\", \"\", \"http://facebook.com\"` because `http://facebook.com` and `about:blank` are not same-origin.", "added": 1566491889, "modified": 1566491889, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524046812", "source_type": "github"}, {"comment_id": 732, "body": "@filips123 Eh, that's why we're replacing `pushState`. If you're referring to nofish'es iframe PoC, it won't work because `http://127.0.0.1:43110` and `about:blank` aren't same-origin.", "added": 1566492142, "modified": 1566492142, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524048387", "source_type": "github"}, {"comment_id": 733, "body": "> Ok, this makes sense. And you probably can't open http://127.0.0.1:43110 in iframe, right?\r\n\r\nWell, it's possible (site-in-site case), but it's restricted, so you can't call `pushState` anyhow.\r\n\r\n> Also, would it be possible to differentiate between legitimate and malicious iframes? Because site can use iframe to just display other content on it (embedded game, sidebar... hosted on it) or to attack different site.\r\n\r\nIt's impossible to attack a site with an iframe because there's a sandbox. The only way of communication is `postMessage`. I'm still thinking about issues, but I don't see any yet.", "added": 1566492669, "modified": 1566492669, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524051622", "source_type": "github"}, {"comment_id": 734, "body": "What browser are you using? That sounds like a major issue", "added": 1566495104, "modified": 1566495104, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524065705", "source_type": "github"}, {"comment_id": 735, "body": "Do you have any ideas how to solve this? Switching to `site_address.zero` or a similar way would help here (and solve other problems too), but that won't work well with proxies and is also a major change.", "added": 1566495653, "modified": 1566495653, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524068870", "source_type": "github"}, {"comment_id": 736, "body": "@filips123 The prefix code is run before site code, so we can save setInterval beforehand.", "added": 1566496260, "modified": 1566496260, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524072279", "source_type": "github"}, {"comment_id": 737, "body": "@github-zeronet I'm about to finish sidebar, I'll give you a PoC soon.", "added": 1566533164, "modified": 1566533164, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524199603", "source_type": "github"}, {"comment_id": 738, "body": "> Can site code access prefix's intervals? If so, the site could maybe guess (or brute-force) all interval IDs and clear (clearInterval) them which would disable security check.\r\n\r\nDue to how browsers implement setInterval (notice: browsers, not spec), site code *can* disable our intervals, and I don't think there's a good solution. I could have fun handling `iframe` creation and replacing `pushState` *there*, but it looks too fragile. Maybe we should just say that changing URL to another site isn't a trouble (and you can use the sidebar if you want to make sure you're browsing the correct site).", "added": 1566533482, "modified": 1566533482, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524201011", "source_type": "github"}, {"comment_id": 739, "body": "Uh, that's why I said \"and you can use the sidebar if you want to make sure you're browsing the correct site\". I agree that it's not the best solution, but that's the best thing we can do without big changes to ZeroNet.\r\n\r\nIf we allow big changes, however... The best thing to do would be to utilize browsers' same-origin policy, so each site would have it's own origin. This is possible to do with a local DNS server -- we'd proxy `*.bit` and `*.zero` to `127.0.0.1` and delegate all other requests to the default DNS server. This would solve, uh, *all* problems we're having. The only issue here is that we'll have to make the user change proxy settings.", "added": 1566539942, "modified": 1566539942, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524234755", "source_type": "github"}, {"comment_id": 740, "body": "@HelloZeroNet If we're having problems with such a simple thing as History API, we'll probably have more problems in the future. Thus, I see no reason to continue developing this issue without switching to better domain names like `http://talk.zeronetwork.bit` and `http://1talkfrmwvbnsoof4iokay9euxtbtjipt.zero` instead of `http;//127.0.0.1:43110/talk.zeronetwork.bit` and `http;//127.0.0.1:43110/1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT`. Please notice that this change won't break proxies -- we'd use `https://talk.zeronetwork.bit.zn.amorgan.xyz` and `https://1talkfrmwvbnsoof4iokay9euxtbtjipt.zn.amorgan.xyz`.\r\n\r\nPinging people from related issues:\r\n\r\n- #2172 @April93;\r\n- #2100 @6543 @Merith-TK;\r\n- #2087 @geekless @rllola @styromaniac @KilowattJunkie;\r\n- #1696 @geekless @Thunder33345 @DaniellMesquita @anoadragon453;\r\n- #104 @n3r0-ch @koalalorenzo;\r\n- #83 @goldenratio @thesoftwarejedi @gjedeer @espectalll @dmp1ce @cxgreat2014 @ysc3839 @haschimoto @DaniellMesquita @matso167.\r\n\r\nChoosing what hostname format to use has become more important than before. We should switch as soon as possible.", "added": 1566541244, "modified": 1566541244, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524241946", "source_type": "github"}, {"comment_id": 741, "body": "For now, we have to deal with case-insensitive hostnames -- that breaks Bitcoin addresses. Possible solutions:\r\n\r\n## Convert Bitcoin addresses to lowercase\r\n\r\nWhen announcing sites, we'd announce lowercase addresses instead. When checking signatures, we'd compare `recovered_address.lower()` to real (lowercase) site address.\r\n\r\nPros:\r\n\r\n- Somewhat compatible to old versions if we announce both real address and lowercase address;\r\n- Vanity address remain nice.\r\n\r\nCons:\r\n\r\n- Kinda hacky, Bitcoin addresses were made to be case-sensitive;\r\n- Defeats the purpose of base58: `1` and `L` are different, while their lowercase counterparts `1` and `l` look similar;\r\n- The address can no longer be used for donations.\r\n\r\n## Use bech32 format\r\n\r\nPros:\r\n\r\n- Adopted by Bitcoin community, can be used for donations;\r\n- Doesn't require hacks;\r\n- Compatible with old versions: bech32 could be converted to base58 before announcing.\r\n\r\nCons:\r\n\r\n- Vanity addresses are changed;\r\n- Old links are broken.\r\n\r\n---\r\n\r\nI'd choose the first solution, but I'm open to other ideas.", "added": 1566543768, "modified": 1566543768, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524255979", "source_type": "github"}, {"comment_id": 742, "body": "Ok, are you fine with me making a PR for this?", "added": 1566544957, "modified": 1566544957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524261741", "source_type": "github"}, {"comment_id": 743, "body": "> but still allow access via 127.0.0.1\r\n\r\nDo you understand that it breaks the goal of same-origin policy? That's the reason why I asked to speed up domain naming scheme standartization.", "added": 1566546444, "modified": 1566546444, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524268406", "source_type": "github"}, {"comment_id": 744, "body": "> My main problem is with this solution is I (and probably many others) would not trust any application to modify the proxy settings of the browser.\r\n\r\nSeriously, ZeroNet core can do more harm than changing proxy, so there's no reason to worry about proxy settings.\r\n\r\n> Other problem is it would make the deployment of the client harder especially if the remote machine does not have domain names configured (eg. on LAN network)\r\n\r\nWe could set `192.168.12.34:53` as DNS server then. Another solution is to use ports for this (`ip:43110` for site 1, `ip:43111` for site 2, `ip:43112` for site 3, etc.). But yeah, using IPs is troublesome with this solution.\r\n\r\nDo you know a better solution?", "added": 1566547072, "modified": 1566547072, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524271394", "source_type": "github"}, {"comment_id": 745, "body": "I think this unnecessarily increases code size, and also makes site support troublesome -- you'd have to make sure that your sites work in both (rather different) cases.", "added": 1566547290, "modified": 1566547290, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524272621", "source_type": "github"}, {"comment_id": 746, "body": "> imachug, how could you change DNS server just for ZN without impacting other tabs, sites, browsers, app, OS? I'd at least try to limit scope of this to the current running browser.\r\n\r\n> Yes, configuring DNS and rewriting at OS lever could be a difficult problem. \r\n\r\nUh, what? We could just set up a local DNS server that'd delegate clearnet requests to a real DNS, e.g. 8.8.8.8 or whatever the user chooses.\r\n\r\n> How do subdomains play a role in all this? Because it would be easier to minimize DNS issues if <site_address>.zeronet.xyz solved all your problems, because then you would wildcard that to 127.0.0.1. \r\n\r\nUsing subdomains was the first thing I considered, but Linux & MacOS (not sure about Windows though) don't understand wildcards in /etc/hosts.\r\n\r\n>  The challenge here is that it needs to happen in browser, so rules out URL rewriting like what Apache does, unless you get into redirects.\r\n\r\nBut why? Configuring a DNS server (which will be automatic) is easier than setting up extensions or something.\r\n\r\n> Some of us use very complex DNS setups, and doing at OS level, among other things, prevents a user from running their own DNS or doing special configurations (e.g., other software that also extends DNS).\r\n\r\nUsing several DNS servers and delegating requests is used rather often, and I don't see how that would be a problem here.\r\n\r\n> Are you using a new wrapper template and tying that to a new site permission to provide backward comparability?\r\n\r\nNope, the new prefix way must be the default one and should be the only one.", "added": 1566567639, "modified": 1566567639, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524382909", "source_type": "github"}, {"comment_id": 747, "body": "What we have now is not ideal as well, but I think I'm convinced that it's better than what I'm proposing. Nevertheless, we need to move somehow. I think that this proposal introduces many security issues until we switch from `127.0.0.1:43110` to domains or something. Thus, I'm closing this issue. We'll reopen it when the switch occurs. Please continue working on the solution however.", "added": 1566567786, "modified": 1566567786, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524383648", "source_type": "github"}, {"comment_id": 748, "body": "The task is to make different sites use different origin. An origin is a protocol, hostname and port combination. We can't change the protocol because it's always `http` or `https`. So we're left with the hostname and the port:\r\n\r\n## Hostname\r\n\r\nWe can change hostname to e.g. `talk.zeronetwork.bit`.\r\n\r\nPros:\r\n\r\n- Straightforward.\r\n\r\nCons:\r\n\r\n- Doesn't work well with proxies. They will have to use wildcard certificates for TLS/SSL too.\r\n\r\n## Port\r\n\r\nUse `:43110` for site 1, `:43111` for site 2, etc.\r\n\r\nPros:\r\n\r\n- Requires few modifications.\r\n\r\nCons:\r\n\r\n- There aren't many (free) ports;\r\n- `:43110` may mean ZeroHello, ZeroTalk or whatever, depending on the device.\r\n\r\n## Proxy\r\n\r\nThere's, however, another solution: we could handle `talk.zeronetwork.bit` in a browser extension, in a local DNS or somewhere else.\r\n\r\nPros:\r\n\r\n- Human-readable addresses.\r\n\r\nCons:\r\n\r\n- Still works bad with proxies due to wildcard usage.\r\n\r\n---\r\n\r\nI don't see any solution so far. Anyone with a fresh idea?", "added": 1566568160, "modified": 1566568160, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524385582", "source_type": "github"}, {"comment_id": 749, "body": "Ok, if DNS over HTTPS works well enough and we can easily integrate it into existing browsers (it should be as difficult as \"open settings, enter this string and press OK\"), we could use it. @HelloZeroNet Do you see any problems here?\r\n\r\n> Setting aside IP resolution, does it solve the problems in the browser, such as local storage?\r\n\r\nIt does, because we're now using same-origin policy for our good instead of avoiding it.\r\n\r\n> :github-zeronet hands @imachug a frosty beer: :)\r\n\r\nI don't drink beer.", "added": 1566571634, "modified": 1566571634, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524403576", "source_type": "github"}, {"comment_id": 750, "body": "So we're going to use an extension/PAC. Ok. That will probably work and won't be difficult to implement. `curl` will stop working, but that should still be easily fixable with `curl -H\"Host: talk.zeronetwork.bit\" 127.0.0.1:43110` or whatever. Now, what do we do with proxies? Will the proxies have to ask the user to install the plugin? How will the plugin know what proxy to use? Will there be a configuration setting (if so, what if I need to use both proxy and localhost at once to deploy a site)? If it'll be configurable with an URL (i.e. `talk.zeronetwork.bit.zn.amorgan.xyz`), how will we learn what part is a ZeroNet domain and which part is Clearnet one? Should we split by `.bit.` and thus disallow such names as `bitco.no` (or similar)?", "added": 1566577784, "modified": 1566577784, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524435282", "source_type": "github"}, {"comment_id": 751, "body": "So looks like we have two equivalent solutions here:\r\n\r\n## Proxy\r\n\r\nIt looks like a special `.pac` file is not required, we can set `localhost:43110` as the proxy address. This requires a minor modification in ZeroNet core, but it's simple.\r\n\r\n## DNS\r\n\r\nWe'd set `localhost:53` (or an equivalent DoH port) as DNS server.\r\n\r\n---\r\n\r\nThey are basically the same *with the feature set we currently have*. There might be some good usecases for DNS in the future, but I don't see any features now, @github-zeronet:\r\n\r\n> site configuration\r\n\r\nHow exactly would we utilize DNS? AFAIK the same is possible with proxy.\r\n\r\n> domain issuance\r\n\r\nDomain resolving is done by ZeroNet in both cases, so it's not a difference.\r\n\r\n> DNS like functionality like CNAME\r\n\r\n...but why?\r\n\r\n> and MX if we can ever introduce ZN SMTP, etc...\r\n\r\nThis is possible without DNS, see [ZeroMailProxy](https://github.com/imachug/ZeroMailProxy).\r\n\r\n---\r\n\r\nIf the solutions are about the same, I'd use proxy: it looks like it's easier to install and can be easily set per-browser (instead of at OS level).", "added": 1566623060, "modified": 1566623060, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524530587", "source_type": "github"}, {"comment_id": 752, "body": "@HelloZeroNet I have managed to make a browser extension to access ZeroNet via e.g. `talk.zeronetwork.bit.zeronet` / `0talkfrmwvbnsoof4iokay9euxtbtjiptsg699gc.zeronet`. Everything works well but this new address syntax (i.e. `.zeronet` TLD instead of `zero/` / `zero://` prefix and `.bit.zeronet` instead of `.bit`) make it incompatible with existing sites. Do you accept this syntax and do you think we'll be able to modify existing (official) sites to support this syntax?", "added": 1576170198, "modified": 1576170198, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565163656", "source_type": "github"}, {"comment_id": 753, "body": "It *is* possible but I think both `zero/` and `.bit` will result in incompatibilities. For example, `zero` local host can be used by web developers (or just as a LAN domain in a big corporation) and `.bit` domains are available not for ZeroNet only.", "added": 1576171883, "modified": 1576171883, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565174156", "source_type": "github"}, {"comment_id": 754, "body": "I could support `.bit` and `zero/` as well but I still hope we'll get rid of them soon. Is that ok?", "added": 1576172283, "modified": 1576172283, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565176627", "source_type": "github"}, {"comment_id": 755, "body": "The problem is backward compatibility (oh well). Even if we get ZeroHello, ZeroTalk and such working correctly, it might be a pain to make other sites apply fixes.", "added": 1576172492, "modified": 1576172492, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565177838", "source_type": "github"}, {"comment_id": 756, "body": "I can support `zero/` and `.bit` but such links would have to be redirected twice (`http://zero/1anysite` -> `http://0anysite.zeronet` -> `http://127.0.0.1:43110`) so this would be kind of inefficent so I'd *still* ask you to use `.zeronet` by default (say, in case the plugin is installed).", "added": 1576172655, "modified": 1576172655, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565178805", "source_type": "github"}, {"comment_id": 757, "body": "> So you would have to redirect once and not for every request.\r\n\r\nOh, that makes sense. I'll implement that soon (around tomorrow).\r\n\r\n> But sure, I'm up to turn the links to .zeronet TLD ones if someone visits the site on that url.\r\n\r\nGreat!", "added": 1576173092, "modified": 1576173092, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565181358", "source_type": "github"}], "1604067474_mirrored_RonaldBolado_github": [{"comment_id": 758, "body": "First, only 2 antiviruses detect something, and they aren't well-known; second, ZeroNet code doesn't have a virus. So I'd assume this is a false positive.", "added": 1566355173, "modified": 1566355173, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2170#issuecomment-523304461", "source_type": "github"}], "1604067479_mirrored_tianlichunhong_github": [{"comment_id": 759, "body": "Sure. Just setup a public ZeroNet proxy and enable UiPassword plugin.", "added": 1566366927, "modified": 1566366927, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2171#issuecomment-523364423", "source_type": "github"}, {"comment_id": 760, "body": "@HelloZeroNet Can this be closed?", "added": 1571641429, "modified": 1571641429, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2171#issuecomment-544444262", "source_type": "github"}], "1604067478_mirrored_April93_github": [{"comment_id": 761, "body": "@HelloZeroNet You *do* remember I proposed a better solution, don't you?\r\n\r\nSure, people are sometimes dumb, but I gave you a fix that worked better than this workaround. And now we're learning that the workaround led to even more problems than expected.\r\n\r\n*Please*, can people please start listening to me?", "added": 1566456405, "modified": 1566456683, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2172#issuecomment-523832779", "source_type": "github"}, {"comment_id": 762, "body": "@April93 Please check your ZeroMail.", "added": 1566460520, "modified": 1566461146, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2172#issuecomment-523854495", "source_type": "github"}, {"comment_id": 763, "body": "I don't think it helps. It stops working well once you find a way to create an iframe (*escaping* to the wrapper is not required). I don't have a PoC right now, but I think that `data:` protocol will work here.", "added": 1566486290, "modified": 1566486290, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2172#issuecomment-524014594", "source_type": "github"}, {"comment_id": 764, "body": "Finally, lol.", "added": 1566533134, "modified": 1566533134, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2172#issuecomment-524199501", "source_type": "github"}], "1604067478_mirrored_dssecret_github": [{"comment_id": 765, "body": "> A desktop client would provide a better environment than a browser-based client due to restrictions in browsers.\r\n\r\nA desktop client will force us to choose a single rendering engine, which leads to unnecessary centralization. It also defeats some ZeroNet features, such as proxy support and easy integration with existing software (e.g. `curl`, lol).\r\n\r\n> Additionally, a desktop client that autostarts the python script which handles p2p decentralization would provide a better p2p environment.\r\n\r\nYou can make ZeroNet run at startup.", "added": 1566623293, "modified": 1566623293, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2173#issuecomment-524530799", "source_type": "github"}, {"comment_id": 766, "body": "> I do not believe that is the case. I believe it would just require additional work. However, in most operating systems, there are some rendering engines that are always used (i.e. WebKit and its fork, Blink).\r\n\r\nEh, wat? I'm free to choose between Blink and Gecko on Windows, (most) Linuxes and Mac OS.", "added": 1566828969, "modified": 1566828969, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2173#issuecomment-524946458", "source_type": "github"}], "1604067483_mirrored_dssecret_github": [{"comment_id": 767, "body": "Hover a site and you'll get the menu back.\r\n\r\nTL;DR: that's a feature.", "added": 1566829056, "modified": 1566829056, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2176#issuecomment-524947001", "source_type": "github"}, {"comment_id": 768, "body": "Hm, now that's weird. I see that the search types (article/post/comment/etc.) don't show too. It might look like a browser problem. What happens if you try to click to where the menus should be? They might be hidden but still interactable.", "added": 1566835983, "modified": 1566835983, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2176#issuecomment-524991268", "source_type": "github"}], "1604067483_mirrored_thomastesla-acdc_github": [{"comment_id": 769, "body": "Yeah, put the following to zeronet.conf:\r\n\r\n```\r\n[global]\r\ndefault_browser = path/to/tor/browser \"%s\"\r\n```", "added": 1566876619, "modified": 1566876619, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2177#issuecomment-525158917", "source_type": "github"}], "1604067485_mirrored_payalord_github": [{"comment_id": 770, "body": "@HelloZeroNet What about showing a confirmation instead?\r\n\r\n@payalord A hack for now: you can open your site, open the sidebar and press \"Delete\" there.", "added": 1567003502, "modified": 1567003502, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2178#issuecomment-525849779", "source_type": "github"}, {"comment_id": 771, "body": "> was it intended \"safeguard\"?\r\n\r\nThis\r\n\r\n>  or some sort of thing that caused bugs\r\n\r\nDeleting the site from ZeroHello is the same as deleting it from sidebar. I've never had any problems with deleting a site from sidebar, so I don't think it'll introduce any bugs.\r\n\r\n>  also will this remove site private keys?\r\n\r\nIt will", "added": 1567097480, "modified": 1567097480, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2178#issuecomment-526335371", "source_type": "github"}], "1604067487_mirrored_bufgix_github": [{"comment_id": 772, "body": "It looks like something is wrong with OpenSSL. Please run ZeroNet in debug mode (`python zeronet.py --debug`) and check whether the error persists. If it does, post a few lines above it.", "added": 1567419859, "modified": 1567419859, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2180#issuecomment-527147243", "source_type": "github"}, {"comment_id": 773, "body": "Additionally, please run `openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 -config src/lib/openssl/openssl.cnf -subj \"/C=US/O=Amazon/OU=Server CA 1B/CN=Amazon\" -keyout data/cakey-rsa.pem -out data/cacert-rsa.pem -batch` in ZeroNet directory and post the result please.", "added": 1567419968, "modified": 1567419968, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2180#issuecomment-527147804", "source_type": "github"}, {"comment_id": 774, "body": "Ok, that's interesting... let's try the following: replace line 140 in src/Crypt/CryptConnection.py with `stdout = proc.stdout.read(); print(stdout); back = stdout.read().strip().decode().replace(\"\\r\", \"\")` please and post the result (it should print some text above the error message). I believe no one has had an issue with OpenSSL before, that might be a localization issue or something.", "added": 1567422284, "modified": 1567422284, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2180#issuecomment-527160065", "source_type": "github"}, {"comment_id": 775, "body": "Ok, so we need to handle errors better. We should probably handle OpenSSL errors better, I'll make a PR in a few minutes.", "added": 1567423661, "modified": 1567423661, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2180#issuecomment-527167152", "source_type": "github"}, {"comment_id": 776, "body": "I added a PR, please check if it fixes your issue.", "added": 1567425352, "modified": 1567425352, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2180#issuecomment-527175778", "source_type": "github"}], "1604067562_mirrored_imachug_github": [{"comment_id": 777, "body": "Ok, that makes sense. It's still worth merging this PR until we come up with a better solution.", "added": 1567429417, "modified": 1567429417, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2181#issuecomment-527194218", "source_type": "github"}, {"comment_id": 778, "body": "For the record: this is now replaced with a better fix ", "added": 1567503056, "modified": 1567503056, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2181#issuecomment-527437399", "source_type": "github"}], "1604067490_mirrored_maikelmclauflin_github": [{"comment_id": 779, "body": "Use `--name=value` syntax, not `--name value`. ", "added": 1567434095, "modified": 1567434095, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2182#issuecomment-527209558", "source_type": "github"}], "1604067497_mirrored_mindey_github": [{"comment_id": 780, "body": "> in a similar way that users register their usernames\r\n\r\nZeroID is the official service for that, which is centralized.\r\n\r\n> perhaps with expiry due to non-seeding\r\n\r\nThat's a bit difficult to implement because you can never be sure that there are no seeds anymore.\r\n\r\n---\r\n\r\nA minute of advertisement: there's [Name.YO](http://127.0.0.1:43110/1NAMEz7stUPZErkV1d3yLkVWQFa4PTqDNv/) that you can use to register a domain for free. Not everyone will be able to use it, only those who have Name.YO plugin, but I believe many people have it (and your service would be another reason to promote it).", "added": 1568032070, "modified": 1568032070, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2189#issuecomment-529532430", "source_type": "github"}, {"comment_id": 781, "body": "Define \"reasonable\". Balancer's domain are still hosted by lots of people even though he passed away. (RIP)", "added": 1568043585, "modified": 1568043585, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2189#issuecomment-529611920", "source_type": "github"}], "1604067565_mirrored_slrslr_github": [{"comment_id": 782, "body": "Based on `...dmQc` suffix, it's the official one.", "added": 1568078362, "modified": 1568078362, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2190#issuecomment-529762404", "source_type": "github"}], "1604067585_mirrored_HelloZeroNet_github": [{"comment_id": 783, "body": "While modularity is important, using IPFS as the main backend doesn't look good to me. One of the reasons is depending on an external tool (that's what nofish said). We can never be sure there are no radical changes that might make ZeroNet stop working. Also, we'll have to spend much time switching to IPFS *and* making it compatible to classic ZeroNet than what we'd have to do if we just tuned the classic protocol a bit. ", "added": 1568193153, "modified": 1568193153, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530352575", "source_type": "github"}, {"comment_id": 784, "body": "I might want to reword that better: I'm not against an IPFS-based system, but that shouldn't be connected to ZeroNet. ", "added": 1568193204, "modified": 1568193204, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530352832", "source_type": "github"}, {"comment_id": 785, "body": "> Anyways, a bit is not enough, or IPFS won't have such much code.\r\n\r\nIt is.\r\n\r\n> Yeah, but I will be connected to IPZN\r\n\r\nSure, you can develop a decentralized system yourself, but don't call it ZeroNet. If it turns out to be better, we'll switch. \r\n\r\n> Basically, impossible.\r\n\r\nPOSIX is going to be alive for quite a long while. Same with Python 3.7.", "added": 1568193636, "modified": 1568193636, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530355098", "source_type": "github"}, {"comment_id": 786, "body": "Additionally, I'm not quite sure but I believe that IPFS + IPZN is slower than classic ZeroNet. ", "added": 1568193679, "modified": 1568193679, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530355375", "source_type": "github"}, {"comment_id": 787, "body": "> It isn't.\r\n\r\nIt is. We have a rather big base for new features.\r\n\r\n> I don't want to call it ZeroNet\r\n\r\nOk, then don't say that IPZN is better than ZeroNet. It *might be* better than ZeroNet in the future if you finish it. @krixano and me worked on another decentralized system that could possibly better (though somewhat non-classical), but we didn't end up implementing it. We didn't advertise it here and there.\r\n\r\n> It depends on IPFS. Do you know that DHT is not the only option for routing in IPFS ?\r\n\r\nQuite probably, but adding DHT (and others) to ZeroNet should be easier than switching to a completely different architecture.", "added": 1568195574, "modified": 1568195574, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530366269", "source_type": "github"}, {"comment_id": 788, "body": "> Is the code unneceasry ? No.\r\n\r\nIt unneceasry (sic) for ZeroNet's usecases.\r\n\r\n> What ?\r\n\r\nA typo, sorry; it should be \"possible *be* better\".\r\n\r\n> As a result, I know nothing about your project.\r\n\r\nYes, that's what I'm talking about! Don't announce before an alpha version, we don't want another BolgenOS.\r\n\r\n> Maybe, but as I said, are the tons of code of IPFS unnecessary ?\r\n\r\nSome of them are unnecessary for ZeroNet usecases.\r\n\r\n> It implies there're a lot features need to be done.\r\n\r\nSee above.\r\n\r\n> That's easier\r\n\r\nThat's how it works today: add 10 levels of abstraction and let it figure itself out! We should think about being better, not being easy to build. ", "added": 1568196784, "modified": 1568196784, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530374031", "source_type": "github"}, {"comment_id": 789, "body": "> Do you want more awesome features ?\r\n\r\nList them. I believe that most of them can be easily implemented in classic ZeroNet and even more easily after adding content-addressed files.\r\n\r\n> We need ideas and improvements on paperwork to achieve a better design\r\n\r\nIt looks like you learned a new buzzword \"IPFS\" and now you're saying \"IPFS supports more features, go use IPFS!\" First, say what you're missing and how rewriting all ZeroNet code to support IPFS will be faster or easier (that's what you're apealling to) than adding them as classic ZeroNet plugins.\r\n\r\n> Modularity is better as well as easy to build\r\n\r\nWe don't want to depend on an external service. We could separate ZeroNet to backend and frontend later when we grow bigger, but we can't just take someone else's project and use it, mostly because we can't add features/fix bugs if IPFS guys won't like that.\r\n\r\n> What's that project\r\n\r\nThis is not related to ZeroNet mostly, so I'll keep short. Think of it as a decentralized gopher-like system.", "added": 1568200300, "modified": 1568200300, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530398802", "source_type": "github"}, {"comment_id": 790, "body": "> For example, FileCoin\r\n\r\nAnother non-buzzword one plaase. And even then, FileCoin can be implemented as a plugin.\r\n\r\n> Why don't you add more features to tcp/ip/http/https ?\r\n\r\nIs this sarcasm?\r\n\r\n- There's no room for improvements in TCP anymore;\r\n- IPv6 is improved IPv4, but I doubt I can think of an IP improvement;\r\n- HTTP is being improved, look at HTTP 2.0, look at how keep-alive connections were added, look at CORS, etc.;\r\n- HTTPS can't be improved by definition because it's just a thin layer on SSL/TLS. SSL and TLS *are* being improved AFAIK. But, again, I doubt I can think of an SSL/TLS improvement.\r\n\r\n> I doubt if you have ever read about IPFS ?\r\n\r\nSure I did. Please don't ignore my questions and answer: what IPFS features can't be added to ZeroNet?", "added": 1568200856, "modified": 1568200856, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530402903", "source_type": "github"}, {"comment_id": 791, "body": "> Huh, do you think you guys have enough effort ?\r\n\r\nDon't make us do what you want to. Do it yourself: either write your own network or bring features to ours.\r\n\r\n> I mean your concern is nonsense and will never happen, because it's infrastructure like http.\r\n\r\nWhat the heck, merger sites were added, optional files were added, big files were added!...\r\n\r\n> Nonsense\r\n\r\nIt looks like a classic \"no u\".", "added": 1568201443, "modified": 1568201443, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530407463", "source_type": "github"}, {"comment_id": 792, "body": "@mkg20001 Your arguments look better. While I wouldn't use IPFS, libp2p might be a better solution because it's at least used by many projects, so it's unlikely that breaking changes are added. So, is the plan to switch to libp2p?", "added": 1568201623, "modified": 1568201623, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530408828", "source_type": "github"}, {"comment_id": 793, "body": "> Of course, opensource voluntary\r\n\r\nRight. nofish can't be forced to do something unless he or ZeroNet community finds it important (in the latter case, we'll either end up with forking or with convincing nofish). Go find those who like your idea and start development.\r\n\r\n> You think these are features ? It's just workarounds for bad design\r\n\r\nUh, what? Sure, big files might be a hotfix but how is optional/required file separation bad design?", "added": 1568201762, "modified": 1568201762, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530409848", "source_type": "github"}, {"comment_id": 794, "body": "We can even start at IPFS homepage:\r\n\r\n> Take a look at what happens when you add a file to IPFS.\r\n\r\nSee? *Add a file*. ZeroNet is not just about files: PeerMessage works without files and should never be.", "added": 1568201832, "modified": 1568201832, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530410414", "source_type": "github"}, {"comment_id": 795, "body": "> Huh, you definitely not knowing about pubsub and IPFS's plan of dynamic web\r\n\r\nQuite probable. Now show me a working implementation of pubsub and the IPFS-like dynamic web in Python.", "added": 1568201926, "modified": 1568201926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530411172", "source_type": "github"}, {"comment_id": 796, "body": "You were saying \"well pubsub is not ready yet\" and \"IPFS development is slow\", and now you're asking us to switch to something that's not ready!", "added": 1568201999, "modified": 1568201999, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530411743", "source_type": "github"}, {"comment_id": 797, "body": "> So what ? Just wait.\r\n\r\nYes. You can't implement something before its dependencies are ready!", "added": 1568202108, "modified": 1568202108, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530412559", "source_type": "github"}, {"comment_id": 798, "body": "> Because of ZeroNet's default behaviour: keeping all files and never delete them.\r\n\r\nThat's because it used to be a correct solution back then, when ZeroNet was small. You can't just make a project and say \"it's finished\", you have to adopt it endlessly.\r\n\r\n> How is optional file feature hard to implement ?\r\n\r\nIt's not hard, nofish implemented it when it started being important.", "added": 1568202241, "modified": 1568202241, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530413588", "source_type": "github"}, {"comment_id": 799, "body": "Let's start tracing your point:\r\n\r\n- You want to use IPFS as backend;\r\n- Adding IPFS is better because of modular architecture;\r\n- Modular architecture allows adding features separately.\r\n\r\nRight?", "added": 1568202398, "modified": 1568202398, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530414829", "source_type": "github"}, {"comment_id": 800, "body": "Great. So the only reason to switch to IPFS is because of more features. Now list them for us -- dumb people who are too silly to understand it.", "added": 1568202518, "modified": 1568202518, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530415790", "source_type": "github"}, {"comment_id": 801, "body": "> Wait. It takes about two months to get a overview of IPFS for me. So make you know that how great IPFS is is not possible in a few words.\r\n\r\nSeriously? libp2p feature is \"a small layer for building huge decentralized apps\", ZeroNet is \"we have sites, sites are stored by everyone who wants to store them, you can download a site and even post comments\". What's IPFS feature?\r\n\r\n> You basically don't want to admit that ZeroNet is not the best one nowadays\r\n\r\nI understand that ZeroNet might not be going in the correct direction, but I'm pretty sure that using IPFS is not the correct way.\r\n\r\n> No, IPFS has pubsub now\r\n\r\nSee, IPFS created pubsub and it's not compatible with other protocols! Wow!\r\n\r\n> I think more introductions/docs are needed for IPZN.\r\n\r\nThat's right.", "added": 1568202978, "modified": 1568202978, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530419261", "source_type": "github"}, {"comment_id": 802, "body": "Hm. A big part of the world-wide community switched to libp2p, so using it might make sense (one of the reasons is making government blocks harder). But I think that most (if not all) IPFS features are available (or will be soon) in ZeroNet.", "added": 1568203623, "modified": 1568203623, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530424073", "source_type": "github"}, {"comment_id": 803, "body": "> Why do you want to copy their features ?\r\n\r\nReread my comment please. See, I said that most features are available right now, and switching to IPFS will take a lot more time than just adding one or two features. BTW, you didn't say how IPFS is better than all other distributed file systems (e.g. ZeroNet).", "added": 1568203766, "modified": 1568203766, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530425149", "source_type": "github"}, {"comment_id": 804, "body": "> More time ? Do you think the application layer is harder than infrastructure ?\r\n\r\nYay, some sensible discussion finally! Application layer is less difficult than infrastructure layer, *but* ZeroNet depends on its internals rather much, so changing the application-infrastructure bridge will take much time, *and* we could spend that time porting features from IPFS. We'll also stay separate from IPFS which is a feature. (i.e.: having a compatible interface is good, using the same implementation is bad. That's how competition works)", "added": 1568204081, "modified": 1568204081, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530427453", "source_type": "github"}, {"comment_id": 805, "body": "Adding IPFS is troublesome, whilst using libp2p should be a lot easier (after all, that's just a very low-level protocol), and if it gives a lot more features than what we currently have, I'd go for it.", "added": 1568204167, "modified": 1568204167, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530428072", "source_type": "github"}, {"comment_id": 806, "body": "@blurHY @mkg20001 You're working on a single project and working as a marketer and a developer (respectively), but it looks the opposite way round from my point of view :)", "added": 1568204292, "modified": 1568204292, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530428974", "source_type": "github"}, {"comment_id": 807, "body": "> I've already written about it, uh, you didn't see them.\r\n\r\nI'm sorry in this case, but I guess I just ignored it as it was surrounded by flood.\r\n\r\n> blockchain portion\r\n\r\nI'd think of it as a bug actually -- using blockchain where it's not required is a bad idea.\r\n\r\n> We can use both high-level stuff and access low-level stuff\r\n\r\nBut that'll take a lot of effort and I don't see what we'll get in the end clearly yet.", "added": 1568204477, "modified": 1568204477, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530430384", "source_type": "github"}, {"comment_id": 808, "body": "> Nice to hear! What about the other releated parts, though? Like re-using IPLD + BitSwap for the exchange of objects across libp2p? It would make sense to use those as well, since they already integrate pretty well with libp2p and all custom parts of ZeroNet could be added as extensions to libp2p.\r\n\r\nWe'd better start with something obvious like a low-level protocol and add more stuff in the future. Also, that's the first time I've ever heard of BitSwap so I'll have to spend some time reading on that...", "added": 1568204542, "modified": 1568204542, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530430904", "source_type": "github"}, {"comment_id": 809, "body": "> Uh, if your project can be compatible to zeronet using libp2p, we can add this to IPFS as a ipfs-plugin.\r\n\r\nI believe it makes a lot more sense to make IPFS a plugin, not the other way round...", "added": 1568204676, "modified": 1568204676, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530431961", "source_type": "github"}, {"comment_id": 810, "body": "> Haha, you don't know that\r\n\r\nHaha, you don't know what abjasdgljkhgjklhsdfljkgh is.", "added": 1568204699, "modified": 1568204699, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530432168", "source_type": "github"}, {"comment_id": 811, "body": "> Anyways ZeroNet is not well designed.\r\n\r\nProve that. Adding features to ZeroNet is easy, you can't call that bad design.", "added": 1568204836, "modified": 1568204836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530433280", "source_type": "github"}, {"comment_id": 812, "body": "> IPLD's design is much better\r\n\r\n\"No u\".", "added": 1568204923, "modified": 1568204923, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530433935", "source_type": "github"}, {"comment_id": 813, "body": "> Because there's a known better solution/design than ZeroNet\r\n\r\nWhich. One? After you find it, prove that it's better.", "added": 1568205169, "modified": 1568205169, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530435753", "source_type": "github"}, {"comment_id": 814, "body": "> It's basically impossible to explain in a few sentences, you should learn yourselves\r\n\r\nIn this case, go write your own ZeroNet-like network on top of IPFS. And don't argue with \"I can't do that myself\", nofish made ZeroNet without anyone's help.", "added": 1568205460, "modified": 1568205460, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530437836", "source_type": "github"}, {"comment_id": 815, "body": "Do you understand how nonsense it is to tell Facebook guys that React is awful and they should switch to Vue? That's about the same. These are just two different things, and, while they're designed for about the same, they're different; sometimes React is better, sometimes Vue is.", "added": 1568205545, "modified": 1568205545, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530438453", "source_type": "github"}, {"comment_id": 816, "body": "> Here that's not the same\r\n\r\n\"IPFS is better! Go learn why yourself! I'm not going to spend my time discussing that!\" Ok, we're not going to spend our time supporting your project. Bye.", "added": 1568205825, "modified": 1568205825, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530440402", "source_type": "github"}, {"comment_id": 817, "body": "> ZeroNet is a toy project\r\n\r\nRemember how Apple started.", "added": 1568206023, "modified": 1568206023, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530441779", "source_type": "github"}, {"comment_id": 818, "body": "Ok, so it looks like content-addressed data is what's better in IPFS (or, at least, that's what you think).\r\n\r\nQuestion 1: how to serve dynamic sites? IPNS sounds like the only option. Same with user-content.\r\n\r\nQuestion 2: this proposal looks rather neat and should fix centralization problems caused by site-based architecture. It looks like we could do the following:\r\n\r\n- Allow content-addressed files;\r\n- Allow content-addressed directories (with a merkle tree);\r\n- *(this proposal references the above only)*\r\n- Allow content.json's (or similar) for content-addressed directories to control who can post user content;\r\n- IPNS alternative for directory addresses.\r\n\r\nBy this time, we basically just rebuilt ZeroNet and returned to hub-based architecture. Now, if that's not what you're looking for, where did I miss your point? ", "added": 1568283695, "modified": 1568283695, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530822743", "source_type": "github"}, {"comment_id": 819, "body": "> and not directories\r\n\r\nI'd recommend that one though. It's rather common to group related files to a single directory (or even to nested directories). I'd really love that feature.", "added": 1568286119, "modified": 1568286119, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530840596", "source_type": "github"}, {"comment_id": 820, "body": "@blurHY Right, but that doesn't answer my question: if we have files, and file trees are signed by user/site/hub/whatever keys, how's that different from ZeroNet?", "added": 1568286208, "modified": 1568286214, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530841266", "source_type": "github"}, {"comment_id": 821, "body": "Ok, so, basically, do you just want user data to be independent of site owner? In this case, this change should be rather easy. ", "added": 1568289283, "modified": 1568289283, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-530864126", "source_type": "github"}, {"comment_id": 822, "body": "> I have added my idea for directories\r\n\r\nGreat. This proposal looks promising.", "added": 1568385366, "modified": 1568385366, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-531326395", "source_type": "github"}], "1604067507_mirrored_chenxuuu_github": [{"comment_id": 823, "body": "Looks like you have a too old version of glibc. Try running the following:\r\n\r\n```bash\r\nsudo apt-get update && sudo apt-get install libc6\r\n```", "added": 1568522143, "modified": 1568522143, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2195#issuecomment-531542420", "source_type": "github"}], "1604067508_mirrored_TheresaQWQ_github": [{"comment_id": 824, "body": "That doesn't sound well .It looks like your users.json was corrupted. It should look like this:\r\n\r\n```json\r\n{\r\n \"1Maukn6........................BLP\": {\r\n  ... something goes here ...\r\n  \"master_seed\": \"...\"\r\n  ... something goes here ...\r\n }\r\n}\r\n```\r\n\r\n(except that the address and master_seed should be different). Can you please check that the master_seed is not missing? (Don't post it here though, it should be kept secret)", "added": 1568522402, "modified": 1568522402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2196#issuecomment-531542689", "source_type": "github"}], "1604067525_mirrored_mkg20001_github": [{"comment_id": 825, "body": "> We need radical change, and because it's easier to use IPFS directly.\r\n\r\nIt might be easier to make a new IPFS-based project (like what IPZN seems to be about), but we're looking for a way to persist compatibility with classic ZeroNet sites.\r\n\r\n> 14/15, not 16\r\n\r\nAge doesn't matter.\r\n\r\n---\r\n\r\nSeriously, you're shouting \"I know, I know!\" but don't even try to code it yourself... We can't just believe everyone when they say \"this will work, I promise... maybe\", we don't have enough time and contributors for that. We should instead start with simple and obvious stuff and switch to something complex later.", "added": 1568634973, "modified": 1568634973, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2198#issuecomment-531815015", "source_type": "github"}, {"comment_id": 826, "body": "Waiting for *what*? Many people here told you to go away until you have something to show, whom are you waiting for?", "added": 1568643886, "modified": 1568643886, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2198#issuecomment-531875266", "source_type": "github"}], "1604067526_mirrored_krzotr_github": [{"comment_id": 827, "body": "Why do you think that it's a problem? The current behavior sounds perfectly correct to me.", "added": 1568720809, "modified": 1568720828, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2200#issuecomment-532254430", "source_type": "github"}], "1604067515_mirrored_libingChina_github": [{"comment_id": 828, "body": "I didn't quite get some of the translation. Please post the original text (in Chinese I guess) so that we could use different translate services or even manually translate the text. ", "added": 1568797708, "modified": 1568797708, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2201#issuecomment-532654919", "source_type": "github"}, {"comment_id": 829, "body": "As for the issue you're talking about, I don't really get your point. The goal of ZeroNet is to provide a way to communicate without restrictions. ZeroNet isn't a project for developers or sole techy people - it's for everybody. People come to ZeroNet because they want real free speech, and politics is one of the topics that's literally impossible to discuss on clearnet, so no wonder there's more politics here. ", "added": 1568797918, "modified": 1568797918, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2201#issuecomment-532656015", "source_type": "github"}, {"comment_id": 830, "body": "It might be a translation problem but just in case, blurHY, you haven't implemented IPZN yet. ", "added": 1568887753, "modified": 1568887753, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2201#issuecomment-533122847", "source_type": "github"}, {"comment_id": 831, "body": "Okay, that was a translation issue then. Sorry. ", "added": 1568887969, "modified": 1568887969, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2201#issuecomment-533124180", "source_type": "github"}], "1604067518_mirrored_yooinn_github": [{"comment_id": 832, "body": "@HelloZeroNet Closing for inactivity?..", "added": 1570669898, "modified": 1570669898, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2203#issuecomment-540342530", "source_type": "github"}], "1604067531_mirrored_krixano_github": [{"comment_id": 833, "body": "/cc @filips123 @geekless", "added": 1568982678, "modified": 1568982678, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-533602123", "source_type": "github"}], "1604067525_mirrored_TheresaQWQ_github": [{"comment_id": 834, "body": "Have you added `https://domain.com` or `domain.com` to `ui_host` configuration key? ", "added": 1569578194, "modified": 1569578194, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2208#issuecomment-535927538", "source_type": "github"}, {"comment_id": 835, "body": "@TheresaQWQ Did that help?", "added": 1570669840, "modified": 1570669840, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2208#issuecomment-540342172", "source_type": "github"}, {"comment_id": 836, "body": "Why would you need two servers? Can't you just make the ZeroNet instance listen on port 80 publically? ", "added": 1571053472, "modified": 1571053472, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2208#issuecomment-541721600", "source_type": "github"}, {"comment_id": 837, "body": "@HelloZeroNet Can this be closed?", "added": 1571794606, "modified": 1571794606, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2208#issuecomment-545262161", "source_type": "github"}, {"comment_id": 838, "body": "Is \"Is it possible to install ZeroNet to a remote machine?\" section the right place to update? ", "added": 1571821805, "modified": 1571821805, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2208#issuecomment-545412620", "source_type": "github"}], "1604067534_mirrored_adrelanos_github": [{"comment_id": 839, "body": "Perhaps the issue can be closed then?", "added": 1585102243, "modified": 1585102243, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2209#issuecomment-603644066", "source_type": "github"}], "1604067528_mirrored_yiyabei_github": [{"comment_id": 840, "body": "Please check whether there are any logs in `log` directory.", "added": 1569657967, "modified": 1569657967, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2211#issuecomment-536177350", "source_type": "github"}], "1604067530_mirrored_chk141_github": [{"comment_id": 841, "body": "1. There are tutorials on ZeroBlog as well as [my tutorials](https://github.com/krixano/ZeroNet-Dev-Center/issues/28). I believe these two things can help.\r\n2. Whilst there's little information online, you can find a lot on zites and https://zeronet.io/docs.\r\n3. You are coming to a decentralized project and asking for PHP and MySQL, seriously? Btw, we support SQLite.\r\n4. ZeroNet was created for people who can't speak up in the World Wide Web, no wonder there are morr strange views on ZeroNet.\r\n5. If you can't load jQuery you have probably never *ever* used jQuery, did you? Come on, it's a single file and a single tag.", "added": 1569935836, "modified": 1569935836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2212#issuecomment-537112654", "source_type": "github"}, {"comment_id": 842, "body": "@HelloZeroNet Can this issue be closed?", "added": 1570669803, "modified": 1570669803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2212#issuecomment-540341813", "source_type": "github"}], "1604067555_mirrored_filips123_github": [{"comment_id": 843, "body": "Congrats, the tests are passing now.", "added": 1569948646, "modified": 1569948646, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-537200257", "source_type": "github"}, {"comment_id": 844, "body": "@filips123 Should this PR be merged if it doesn't work without Zeroname plugin?", "added": 1569949644, "modified": 1569949644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-537206778", "source_type": "github"}, {"comment_id": 845, "body": "A private key can only be recovered if you sign something twice using the same random number, which is next to impossible", "added": 1571102110, "modified": 1571102110, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-542028320", "source_type": "github"}, {"comment_id": 846, "body": "@BugsAllOverMe There is no such thing as frontend and backend servers in decentralized networks. If you think we misunderstood you, please give us an example. ", "added": 1571187843, "modified": 1571187843, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-542502736", "source_type": "github"}, {"comment_id": 847, "body": "> Certainly somehow need to forward traffic from clearnet to ZeroNet and the only way you can do it is to have a bunch of back-end server (cluster) with ZeroNet running on them than over firewall from the front-end (where you host example.org) you can proxy all requests to ZeroNet.\r\n\r\nGot it. In your case, ZeroNet is backend and nginx is frontend, right? Actually, this works well if you host ZeroNet *as well as* other sites, but if you only want to host a ZeroNet proxy, you don't need nginx. Actually, you probably don't want nginx to modify ZeroNet traffic though.\r\n\r\n> If you assume people will download ZeroNet just to access websites hosted on it than you are wrong!\r\n\r\nWell, uh, they do. And that's not GitHub where they find it.\r\n\r\n> but than stupid headers and frame will pretty much lock developers into a sandbox\r\n\r\nThey are **not** stupid. That's for sandboxing and making users safe. Escaping the sandbox might result in *big* problems. Please don't try to remove additional security layers if you don't replace them somehow.", "added": 1571188548, "modified": 1571188548, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-542505068", "source_type": "github"}, {"comment_id": 848, "body": "@filips123 Whilst `zeronet` was recommended by @HelloZeroNet, there was later some argument on what protocol to use, namely it was brought up in #2169 and then moved to #2087. We were thinking about several ways:\r\n\r\n- Using `zhttp`/`zhttps` protocol;\r\n- Using `zero`/`zeronet` protocol;\r\n- Using `.zero`/`.zeronet` TLD.\r\n\r\nPersonally, I think that the first solution makes most sense from the size of the protocol itself -- ZeroNet does not actually support HTTP or websockets or whatever; it just *simulates* some features. But then we had some problems with implementing that so the issue is now stale.\r\n\r\nThus, I guess we'll have to admit that the ENS protocol name has no connection to how end users communicate with ZeroNet: think of it as a codec or a type or something like that.", "added": 1571320616, "modified": 1571320616, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-543267273", "source_type": "github"}, {"comment_id": 849, "body": "What if we put the dependencies to src/lib/ for now and switch to a decetralized PyPI afterwards? ", "added": 1572403337, "modified": 1572403337, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-547746880", "source_type": "github"}, {"comment_id": 850, "body": "> Do you think it would be possible to send that cookie to WebSocket connection even if it is in a different origin than the website?\r\n\r\nAFAIK there's no way to add a cookie to another site. The only solution I've managed to come up with is sending the cookie via the websocket, say, in the first message. @HelloZeroNet Do you think that might work? ", "added": 1582600409, "modified": 1582600409, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590702159", "source_type": "github"}, {"comment_id": 851, "body": "> Also, zero button links to zero/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D but this can probably be fixed easily with some condition..\r\n\r\nWhere do you want it to redirect to? Probably the root of the site? ", "added": 1582600467, "modified": 1582600467, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590702427", "source_type": "github"}, {"comment_id": 852, "body": "> Also, can you check if there can be any possible security problems with accessing WebSocket from a different origin and such?\r\n\r\nI think that's safe. We're using wrapper_key as a security measure so there's no problem as long as the key verification is in action. ", "added": 1582600540, "modified": 1582600540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590702761", "source_type": "github"}, {"comment_id": 853, "body": "> In non-web-based WebSocket clients (in Node.js and Python) you can set cookies. However, I'm not sure if browsers also allow this.\r\n\r\nYou can set cookies in browsers too but only if they are same-origin. ", "added": 1582605444, "modified": 1582605444, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590726458", "source_type": "github"}, {"comment_id": 854, "body": "I think there was a reason but I can't remember now. @HelloZeroNet? ", "added": 1582620716, "modified": 1582620716, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590829455", "source_type": "github"}, {"comment_id": 855, "body": "What is the state of this PR?", "added": 1584413192, "modified": 1584413192, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-599889223", "source_type": "github"}, {"comment_id": 856, "body": "> Wrapper/client listens for that message, and if it receives it, it sends user address as response. Then it can start sending commands normally.\r\n\r\nA small fix: user masterseed, not address.", "added": 1586263451, "modified": 1586263451, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-610463544", "source_type": "github"}, {"comment_id": 857, "body": "Daaaaaamn, and that's what we're calling \"secure\"... /cc @HelloZeroNet ", "added": 1586273079, "modified": 1586273079, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-610546955", "source_type": "github"}], "1604067575_mirrored_rllola_github": [{"comment_id": 858, "body": "I'm afraid the current implementation can give a false sense of security. A zite can draw a box similar to the real permission remove box, and the user would think that they removed the permission so they're now safe. This looks like a huge problem. ", "added": 1570015206, "modified": 1570015252, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2215#issuecomment-537515036", "source_type": "github"}, {"comment_id": 859, "body": "I think there's no point in the site removing its own permission. It makes more sense to make a single configuration page for all sites. ", "added": 1570107556, "modified": 1570107556, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2215#issuecomment-538008996", "source_type": "github"}], "1604067718_mirrored_DaniellMesquita_github": [{"comment_id": 860, "body": "First, define \"media\". Second, how would it improve ZeroNet safety? If someone wants to distribute illegal stuff, they have a lot more ways than just publishing a file with `xxxunsafe.mp4` name. ", "added": 1570155376, "modified": 1570155376, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2216#issuecomment-538238441", "source_type": "github"}, {"comment_id": 861, "body": "> You already could guess it.\r\n\r\nNope. Is a 1 GiB `myawesomevideo.txt` file media?", "added": 1570194199, "modified": 1570194199, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2216#issuecomment-538459899", "source_type": "github"}, {"comment_id": 862, "body": "> It can be recognized as multimedia if it haves more than 5MB size. \r\n\r\nOk, this makes a bit more sense but has many false positives. There can be (and there are) 5MB scripts, repositories, databases and such. ", "added": 1570290955, "modified": 1570290993, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2216#issuecomment-538678934", "source_type": "github"}, {"comment_id": 863, "body": "> If a file uses a known multimedia file extension, shows it blurred also for user accept.\r\n\r\nDoesn't this mean the file has to be downloaded first? ", "added": 1570291035, "modified": 1570291035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2216#issuecomment-538679035", "source_type": "github"}], "1604067538_mirrored_d14na_github": [{"comment_id": 864, "body": "> What is the purpose of making a user's public key UNIQUE on every zite\r\n\r\nThat's not to allow sites to deanonymize you if you don't want that.\r\n\r\n> but the auth_address (aka Bitcoin address) the SAME on every zite?\r\n\r\nauth_address is *not* the same on every zite. The only way to make it the same is to switch your identity from \"No certificate\" (which used to be \"Unique to this site\" before, by the way) to some ID (i.e. ZeroID or KxoID, etc.). Thus, sites can't deanonymize you, but you can choose to use a single ID (*or* different IDs, which is not supported now but should be; you can make it work right now by using several domains though) for centralization.\r\n\r\n> But what if you're NOT using Zeronet's sqlite data storage\r\n\r\nHow is SQLite even connected to what you're talking about? I guess you're just talking about file-based storage.\r\n\r\n> since you have to rely on \"legacy\" authorization techniques for the user\r\n\r\nPlease explain what's legacy. If you're talking about the auth provider stuff, I doubt it's legacy.\r\n\r\n> Rather, a Zeronet-enhanced APP SERVER \"should\" be able to retrieve a user's public key from a registry (based on their cert id) and then send a challenge that can ONLY be solved by the private key holder.\r\n\r\nOk, so are we talking about user verification? In this case:\r\n\r\n1. Automatically signing everything *must not* be even considered. Signing lots of data is insecure, eats CPU resources and so on. Instead, an app should decide what (and whether) to sign data, which is currently possible with PeerMessage (you can add BackgroundProcessing for performance and reliability).\r\n2. There's a (fairly obvious) way to get current user public key which you can then share or save or do whatever you want. There's also API to sign and verify data. Can't you use that?\r\n\r\n> making user authorization BUILT-IN for ALL developers.\r\n\r\nWhat *is* built-in user authorization? We can't just allow *all* data to be saved. The site owner has to control this. Now, you can either use built-in file share mechanisms or use PeerMessage to simulate whatever you want.\r\n\r\n> It should appeal to developers wanting to bridge an existing Clearnet application over to Zeronet\r\n\r\nLike what?\r\n\r\n> In which case, it would be ideal to utilize current backend systems while making the migration to a fully decentralized solution.\r\n\r\nHow can this even be possible? Are you talking about bridging as in \"make all decentralized data decentralized and leave all centralized data centralized, but also use a central service to bridge these two storages\"? If that's the case, you can already do that in an obvious way.\r\n\r\n> Could utilize the deprecated auth_key. (btw, why was this deprecated?)\r\n\r\nI guess that's because it was centralized and allowed fingerprinting. Also, it wasn't really secure because all sites could use it to sign (possibly dangerous) commands.\r\n\r\n> Create a NEW plugin to derive a STATIC public key from the master key.\r\n\r\nAgain, what for? Do you *really* want a static public key? You can make a static *address* currently (either use existing solutions like ZeroID or generate the IDs you need on the fly ~~like in my upcoming project~~). If you only need to sign or verify data, you don't need public keys -- addresses are enough. If you want to encrypt or decrypt data, that's a bit more of a problem, but you can simply use different encryption keys for different sites, which should be better for security, by the way.", "added": 1570379738, "modified": 1570379738, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2217#issuecomment-538780162", "source_type": "github"}, {"comment_id": 865, "body": "As far as I see what you're proposing, the only thing ZeroNet doesn't support is global public keys. Instead, we have global *addresses* which are smaller and can be used for signing and verification as well. Can you use those? I.e.:\r\n\r\n- A user comes to your ID provider \r\n- ZeroNet generates a unique-to-site key pair for them automatically\r\n- The user presses the big register button\r\n- Your server signs the user *address* with ID provider private key\r\n- Your server adds the *address* to the database\r\n- The user saves the signature and then can use it\r\n\r\nThe only problem I can think of is encryption (you can't encrypt with an address, a public key is required). However, you can just make the frontend generate that key and then sign its public counterpart with your auth address, or something like that. ", "added": 1570458470, "modified": 1570458470, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2217#issuecomment-539119314", "source_type": "github"}], "1604067539_mirrored_realabbas_github": [{"comment_id": 866, "body": "+1 for privacy, -1 for security though. If you're talking about security as in \"the CDN hosts exactly what I want\", you can use `integrity` attribute to avoid that problem.", "added": 1570545068, "modified": 1570545068, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2219#issuecomment-539620045", "source_type": "github"}, {"comment_id": 867, "body": "Hm. Known images loaded from clearnet IP with a known referrer... If zeronet.io used CDN, those who value privacy would have to start Tor just to download a single ZIP. I doubt those difficulties can be ignored.", "added": 1570548070, "modified": 1570549806, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2219#issuecomment-539639724", "source_type": "github"}], "1604067541_mirrored_SilentSeir_github": [{"comment_id": 868, "body": "Care to elaborate? ", "added": 1570583936, "modified": 1570583936, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2220#issuecomment-539820239", "source_type": "github"}], "1604067542_mirrored_atmost_github": [{"comment_id": 869, "body": "I doubt that's possible. ZeroNet architecture is rather different from the classic client-server architecture.\r\n\r\nIn case of ZeroNet, all peers download the site; the site owner can say who can change what and then the users broadcast their changes to each other. For example, in case of ZeroTalk all peers store UI code and all comments; the site owner has allowed the users to modify stuff in their own data folder (it's similar to home directory `~username`), and people add comments to their directories as files.\r\n\r\nIn case of classic client-server architecture, there would be a single peer that has all the code and all the data. People who want to access it would ask the server to give it to them. People who want to post a comment would have to ask the server to add it.\r\n\r\n---\r\n\r\nI guess you're referring to a docker container with a classic server inside (Apache/nginx/whatever). Due to how ZeroNet works, all peers would have to run that container. Even if we allowed that (heavy) task, how would your comment/whatever be spread to other peers? You can't just send the whole database (or even only the modified part) to other peers because they won't be able to verify whether you didn't change anyone's comment or did any other malicious action.\r\n\r\nSo, the servers have to somehow talk to each other to broadcast changes. This would require lots of changes to your server code, and I guess it would be easier to rewrite the server-side code to run on client-side and use ZeroNet ZeroFrame API.", "added": 1570937042, "modified": 1570937042, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2221#issuecomment-541390849", "source_type": "github"}], "1604067585_mirrored_anoadragon453_github": [{"comment_id": 870, "body": "Let me burst in and also mention that this issue sometimes happens to other notifications as well. Btw, notifications don't automatically resize when you change their content. ", "added": 1570936292, "modified": 1570936292, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2222#issuecomment-541389824", "source_type": "github"}], "1604067568_mirrored_filips123_github": [{"comment_id": 871, "body": "I have worked on BackgroundProcessing for a while but nobody really tested it. I'd appreciate if someone with good testing skills tried escaping the sandbox. If you find some important issues, feel free to send a message to imachug@gmail.com.", "added": 1571072065, "modified": 1571072065, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223#issuecomment-541886183", "source_type": "github"}, {"comment_id": 872, "body": "@filips123 I'll try to make some experiments soon. ", "added": 1571102033, "modified": 1571102033, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223#issuecomment-542028100", "source_type": "github"}], "1604067592_mirrored_ghost_github": [{"comment_id": 873, "body": "@HelloZeroNet TBH this looks nonsense. Headers are required to forbid sites to access other sites. Can this be closed?", "added": 1571794667, "modified": 1571794667, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2224#issuecomment-545262389", "source_type": "github"}], "1604067551_mirrored_JazyJayz_github": [{"comment_id": 874, "body": "Have you installed dependencies via `pip3 install -r requirements.txt`? ", "added": 1571623217, "modified": 1571623217, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2228#issuecomment-544349459", "source_type": "github"}, {"comment_id": 875, "body": "That doesn't look like the whole error contents. Is there anything else around those lines?", "added": 1571657814, "modified": 1571657814, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2228#issuecomment-544544573", "source_type": "github"}], "1604067630_mirrored_imachug_github": [{"comment_id": 876, "body": "Right, that's why it's a series of PRs instead of a single PR. But I still need this PR to get merged and people to get using it because we should drop full addresses soon.", "added": 1571669826, "modified": 1571669826, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-544633045", "source_type": "github"}, {"comment_id": 877, "body": "By the way, I've been recently exploring possible solutions for that multi-domain thing.\r\n\r\n## Extensions\r\n\r\nLooks great at first but:\r\n\r\n- You have to pay for Google Developer account (for Chrome);\r\n- You have to pay for Microsoft Developer account (for Edge);\r\n- You have to create an MacOS app;\r\n- You have to create your own browser instead of mobile Chrome.\r\n\r\n## PAC file\r\n\r\nUnsupported by Chrome. Supported globally by Windows, but that's a global setting (huh). Unsupported on Linux & Chrome without dnsmasq.\r\n\r\n## Local proxy / local DNS\r\n\r\nLooks like the best solution for now but possible insecure if *all* traffic passes through ZeroNet.", "added": 1571670586, "modified": 1571670586, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-544637956", "source_type": "github"}, {"comment_id": 878, "body": "@filips123 Done.", "added": 1571670604, "modified": 1571670604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-544638080", "source_type": "github"}, {"comment_id": 879, "body": "@HelloZeroNet Any thoughts on this? ", "added": 1571916123, "modified": 1571916123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-545941750", "source_type": "github"}, {"comment_id": 880, "body": "> It's possible to change the protocol to make it insensitive, but it will result in lots of failed requests, because of clients that has not updated yet.\r\n\r\nI've *already* made the protocol case-insensitive. ", "added": 1572008724, "modified": 1572008724, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546413932", "source_type": "github"}, {"comment_id": 881, "body": "> Another problem is the multiple tracker request, that is not really ideal.\r\n\r\nThat will only apply for a few months. We'll remove case-sensitive address announcing when enough peers update. ", "added": 1572008779, "modified": 1572008779, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546414291", "source_type": "github"}, {"comment_id": 882, "body": "> But the first step would be implement and use bech32 for the new sites.\r\n\r\nNope! That just adds unnecessary complication and breaks even more compatibility! And it doesn't help the problem at all because we can't just stop supporting old sites. ", "added": 1572008831, "modified": 1572008831, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546414585", "source_type": "github"}, {"comment_id": 883, "body": "@HelloZeroNet", "added": 1572078157, "modified": 1572078157, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546594038", "source_type": "github"}, {"comment_id": 884, "body": "@HelloZeroNet It's okay for now. This PR is from a PR series. It doesn't modify the way peers access sites or communicate. The only change is to announce lower-case addresses which will be required for next PRs.", "added": 1572083531, "modified": 1572083531, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546600084", "source_type": "github"}, {"comment_id": 885, "body": "@HelloZeroNet I have some great news, webextensions work really well. I'd like this PR to be merged ASAP to make sure I can share results as soon as possible.", "added": 1572098527, "modified": 1572098527, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546621127", "source_type": "github"}, {"comment_id": 886, "body": "> what's wrong with this approach? at first glance, this PR looks pretty hack'ish\r\n\r\nThe next step would be to switch from `127.0.0.1:43110/address` to `address.zeronet`. Hostnames can't contain uppercase letters so we have to make addresses case-insensitive. One way to do this is to use bech32. However, this will break all existing vanity addresses and also make the format unfamilar to users. An easier way is to just make existing addresses lowercase.", "added": 1572142418, "modified": 1572142418, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546662800", "source_type": "github"}, {"comment_id": 887, "body": "There are lots of links to existing sites on ZeroNet. They would stop working if you switched to bech32. ", "added": 1572142476, "modified": 1572142476, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546662838", "source_type": "github"}, {"comment_id": 888, "body": "@HelloZeroNet I really need this PR to be merged ASAP. The third PR is almost ready, and I have an extension for Firefox already.", "added": 1572181564, "modified": 1572181564, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546708661", "source_type": "github"}, {"comment_id": 889, "body": "Good news: I got the extension working in Chrome!", "added": 1572199239, "modified": 1572199239, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546733766", "source_type": "github"}, {"comment_id": 890, "body": "It does work in Firefox. I haven't checked Edge though, I'm working on Tor Browser support now.\r\n\r\nI'll check your DNS stuff right now.", "added": 1572199441, "modified": 1572199441, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546734009", "source_type": "github"}, {"comment_id": 891, "body": "@d14na I got the extension working on Chrome and I think all features I've thought of are ready. Could you please upload [webext.zip](https://github.com/HelloZeroNet/ZeroNet/files/3783710/webext.zip) to Chrome Web Store?", "added": 1572238363, "modified": 1572344918, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546830889", "source_type": "github"}, {"comment_id": 892, "body": "> then you won't be able to download the site from peers that has not updated to latest version\r\n\r\nHm? See, this PR only *announces* sites, so the trackers get both full and lower-case addresses. It doesn't change the way sites are *downloaded*. Users won't see any changes at all.\r\n\r\n> and it's also creates twice as many request to trackers.\r\n\r\nThat's right. However, most trackers on ZeroNet are zero://-based so it should still be fast; also, this code is only going to run for a few weeks until we get most users updated.", "added": 1572274317, "modified": 1572274317, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547068959", "source_type": "github"}, {"comment_id": 893, "body": "Hm, there are special-use domains. AFAIK we can register them by issuing an RFC. We could make a proof of concept (i.e. this PR series) and when we get enough people used to it, we'd make an RFC.", "added": 1572357362, "modified": 1572357362, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547524208", "source_type": "github"}, {"comment_id": 894, "body": "Hm, it might make sense to make zero:// trackers support case-insensitive announce. Do you think it'll work?", "added": 1572361332, "modified": 1572361332, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547554799", "source_type": "github"}, {"comment_id": 895, "body": "@HelloZeroNet ", "added": 1572362478, "modified": 1572362478, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547563024", "source_type": "github"}, {"comment_id": 896, "body": "What about the following (dumb) idea: we'd take a full address, transform it to lowercase but remember which characters were uppercase; we'd then encode that mask with base58 and append it to the address. This will support old vanity addresses. What do you think?", "added": 1572363651, "modified": 1572363651, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547571406", "source_type": "github"}, {"comment_id": 897, "body": "> Well base58 is also case-sensitive\r\n\r\n\ud83e\udd26\u200d\u2642 A typo, sorry.\r\n\r\n> but I think marking uppercase characters with - is easier to do\r\n\r\nIt *is* easier to do but it'll break vanity addresses. As a usecase: I often type `http://127.0.0.1:43110/1hell` and wait for my browser to remember the suffix (`o...`) and the correct case from the history. However, if we add `-` I'll also have to remember where to put dashes.", "added": 1572364271, "modified": 1572364271, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547575940", "source_type": "github"}, {"comment_id": 898, "body": "@HelloZeroNet Do you think that using my solution is acceptable?", "added": 1572364918, "modified": 1572364918, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547580462", "source_type": "github"}, {"comment_id": 899, "body": "Ok, we're now getting licensing issues fixed (sslcrypto & bencode-open should fix almost all backend compatibility issues) so I'm returning to this PR series. I've just made lowercase addresses recoverable. The following algorithm is used:\r\n\r\n## Making lowercase\r\n\r\n- If the address starts with `0`, return it.\r\n- Otherwise, make a binary integer with `i`th bit set iff `i`th letter/digit is uppercase.\r\n- Encode that binary integer in little-endian format with 36-character alphabet (abc...xyz01..89) in 7 octets.\r\n- Append the encoded integer to the original address.\r\n- Replace the first address character with `0`.\r\n\r\n## Recovering\r\n\r\n- If the address starts with `1`, return it.\r\n- Otherwise, parse the last 7 octets as a binary integer in little-endian format with 36-character alphabet (abc...xyz01..89).\r\n- Capitalize `i`th character iff `i`th bit of the binary integer is set.\r\n- Replace the first address character with `1`.\r\n\r\nExample: 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D -> 0hello4uzjaletfx6nh3pmwfp3qbrbtf3dlqf5lug.", "added": 1575392970, "modified": 1587028968, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-561335823", "source_type": "github"}, {"comment_id": 900, "body": "You'd use 0hello....zeronet to access ZeroHello. The backend would convert it to full address. I'm kinda not sure whether announcing is required at all in this case though... We could just reconvert the addresses on announce. ", "added": 1575421998, "modified": 1575421998, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-561468635", "source_type": "github"}, {"comment_id": 901, "body": "Yeah these changes are not required. I'm gonna work on the next PR. ", "added": 1575449560, "modified": 1575449560, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-561611130", "source_type": "github"}], "1604067559_mirrored_Logusrei_github": [{"comment_id": 902, "body": "@HelloZeroNet Can you please renew zeroid.qc.to certificate? ", "added": 1571707194, "modified": 1571707194, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2235#issuecomment-544799178", "source_type": "github"}], "1604067563_mirrored_krzysztof113_github": [{"comment_id": 903, "body": "@HelloZeroNet @filips123 For the record: we can use `.zeronet.link` as the default suffix when we switch to better site handling. IPFS guys were going to use `.ipfs.dweb.link` or similar. ", "added": 1571742282, "modified": 1571742282, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2236#issuecomment-544979065", "source_type": "github"}, {"comment_id": 904, "body": "> But for local ZeroNet instances, only .zeronet should be used.\r\n\r\nWhy though? `.zeronet.link` or similar look great to me, whilst to `.zeronet` TLD is not registered globally and thus won't be allowed by many filters and people who don't have ZeroNet installed will have no idea how to install it. ", "added": 1571744813, "modified": 1571744813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2236#issuecomment-544998878", "source_type": "github"}], "1604067604_mirrored_rllola_github": [{"comment_id": 905, "body": "Actually, is restarting ZeroNet a problem? ", "added": 1571883726, "modified": 1571883726, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2237#issuecomment-545749311", "source_type": "github"}], "1604067567_mirrored_d14na_github": [{"comment_id": 906, "body": "-1 for plugin store idea, at least on the current state of ZeroNet features. Leaked privatekey can result in a diseaster if the plugin store becomes popular. A single plugin per site architecture will most likely work better. ", "added": 1571916058, "modified": 1571916058, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-545941197", "source_type": "github"}, {"comment_id": 907, "body": "> Isn't this something that @krixano will do in new KxoNetwork version?\r\n\r\nWe're discussing implementation details now.", "added": 1572009367, "modified": 1572009367, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546417674", "source_type": "github"}, {"comment_id": 908, "body": "> the last point i made was it would be nice to have those same CODE signatures, also \"signed\" by respected community members to reinforce the TRUST\r\n\r\nSomething like AMO would help here, wouldn't it? ", "added": 1572141874, "modified": 1572141874, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546662449", "source_type": "github"}], "1604067572_mirrored_mx5kevin_github": [{"comment_id": 909, "body": "> Opening new site in a new tab using the target=\"_blank command are not loading the page.\r\n\r\nUse ZeroFrame `wrapperOpen` method instead. \r\n\r\n> Not possible to automatic way easy download all optional large files in a single user zite when the user download the site.So large files are not seeded.\r\n\r\nIs pressing a single button in sidebar difficult?\r\n\r\n.SWF game or another files are not working\r\n\r\nFlash is seldom supported by browsers nowadays. It's also not suppoted by ZeroNet for user security. \r\n\r\nAll files only sows correctly with UTF-8 format.\r\n\r\nWell, I'd recommend you to switch to utf8. A lot of software depends on it nowadays. It might be worth adding `<meta charset=\"...\">` though if you have HTML files.\r\n\r\n> User can not go back using the browser back button if he open another zite to the previous zite.\r\n\r\nThis means that the original site created an invalid link (i.e. without _blank) ", "added": 1571915903, "modified": 1571915903, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-545939968", "source_type": "github"}, {"comment_id": 910, "body": "> The wrapperOpen command does not work too.The same thing happens.\r\n\r\nWhat is that \"same thing\"? You said that the page didn't open. Did you mean that no tab was opened at all, you got an error like \"escaping iframe\" or something else?\r\n\r\n> Tell users this.Users download the files and not the website owners.\r\n\r\nHm, I think many sites that use big files feature tell users how to do that. For example, my xkcd mirror does so. Also, there isn't actually a better way to enable automatic file download except using a button, lol.\r\n\r\n> No,a simple another zite link does not work this.The browser give the option but it's not working.Users are simply redirected this way to a different page.And they can't go back to the original page which indexes the outside page.The _blank issue it exacerbate the problem\r\n\r\nSorry, that was a typo. I mean `_top` instead of `_blank`. Could you please try `<a href=\"...\" target=\"_top\">`? I think it worked for me before.\r\n\r\n> Files must be converted.Minor problem,but it would be beneficial to support another formats.Bigger problem in large zites large quantities must rename some files.Which contain not supported characters.\r\n\r\nRight, I think ZeroNet depends on some files being utf-8. But I think that the utf-8 mimetype is only set for HTML pages, and I guess a simple `meta charset` would fix that.\r\n\r\n> And it still doesn't help the .mp4 playing issues.\r\n\r\nRight, I didn't answer that because I couldn't test mp4 files back then. I'm making some tests now.", "added": 1571934573, "modified": 1571934573, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546067842", "source_type": "github"}, {"comment_id": 911, "body": "> The browser open the zite in a new tab with the address,but the zite does not load tourgh the 0Net program.\r\n\r\n\"Does not load\" can mean a lot of things, from \"browser hangs\" to \"I forgot to plug in the computer\". What exactly happens? Do you get a white screen? Do you get a white screen with \"Escaping iframe\" text? Do you get the `0` icon in the top-right corner? A screenshot would help.\r\n\r\n> The _top command redirect the pages,seems now i can go back the another original zite. But still i can not open the another page in a new tab.\r\n\r\nRight, some additional hacks have to be added (i.e. wrapperOpen that we're currently discussing). We are currently working on a better sandbox which should render most of these hacks unnecessary.\r\n\r\n> If i use a normal link i can not go back the original page. And the user is redirected to another page,which many website administrators are not happy with.\r\n\r\nWelp, same here. Bringing an existing site to ZeroNet might be a bit difficult but it's usually fairly easy when you know what to do.", "added": 1571936763, "modified": 1571936763, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546080880", "source_type": "github"}, {"comment_id": 912, "body": "> I get a white screen.0 icon in the top-right corner are shows.\r\n\r\nO_o I've never had such problem. I'm wondering what could cause such an issue. Can you please get to this white screen again, press F12 and open Console tab and make a screenshot again? ", "added": 1571966374, "modified": 1571966374, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546194383", "source_type": "github"}, {"comment_id": 913, "body": "> The video problem.\r\n\r\nHm, it looks like we're detecting mimetypes incorrectly. #1950 might help but it's for Python 2. I'll try to port it to Python 3 for tests. It'd also help if you run `assoc` in console and posted output here. ", "added": 1571966659, "modified": 1571966659, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546195188", "source_type": "github"}, {"comment_id": 914, "body": "> It happens because if you open link with target=\"_blank\" the opened tab/window will act the same as the html opened in a sandboxed iframe.\r\n\r\nBut why? I can't think of a reason why it was implemented this way. ", "added": 1572009690, "modified": 1572009690, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546419383", "source_type": "github"}, {"comment_id": 915, "body": "Even if that happens, I have no idea why a sandboxed wrapper can't load site iframe. ", "added": 1572011707, "modified": 1572011707, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546430560", "source_type": "github"}, {"comment_id": 916, "body": "> is there a STANDARD method for detecting Zeronet (or sandbox in general)?\r\n\r\nAFAIK most sites are looking for `wrapper_nonce` in URL. But that's going to be broken when we switch to a new sandbox so I'd just build two variants of the site (that's gonna be easy if you're using bundlers/builders). ", "added": 1572053311, "modified": 1572053311, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546567610", "source_type": "github"}, {"comment_id": 917, "body": "The reason why I don't like wrapper_nonce check is that it'll become invalid with another sandbox. What bundler are you using? I might help. ", "added": 1572142217, "modified": 1572142217, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546662676", "source_type": "github"}, {"comment_id": 918, "body": "That can happen when you haven't downloaded the whole file and no one has the missing parts. Can that be the reason? @HelloZeroNet ", "added": 1572170871, "modified": 1572170871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-546693010", "source_type": "github"}, {"comment_id": 919, "body": "Can you link me to an example file that doesn't work?", "added": 1573370311, "modified": 1573370311, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2241#issuecomment-552181422", "source_type": "github"}], "1604067577_mirrored_mx5kevin_github": [{"comment_id": 920, "body": "> In torrent files extreme large 10-20-60GB or larger single files are working,in 0Net are not.\r\n\r\nDo you mean that sites don't allow you to upload such big files or that file downloading stops after a certain amount of data is downloaded or downloading doesn't even start? ", "added": 1571966250, "modified": 1571966250, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2243#issuecomment-546194052", "source_type": "github"}], "1604067573_mirrored_leycec_github": [{"comment_id": 921, "body": "What the heck?\r\n\r\n---\r\n\r\nAs for a serious reply: I'm currently working on a better sandbox for ZeroNet. I guess we should add automatic Tor proxy to it. @filips123 @krixano Do you see any issues? ", "added": 1571998361, "modified": 1571998361, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546348146", "source_type": "github"}, {"comment_id": 922, "body": "> While ZeroNet in \"always tor mode\" gives you a warning about that you don't use the Tor Browser and may be your browser is unsafe, I have no doubt that it is perfectly safe.\r\n\r\nIt is **not** perfectly safe. Whilst \"Tor: Always\" blocks outgoing connections on ZeroNet sites, it doesn't block connections made by *sites*. Using Tor Browser helps fix this.\r\n\r\n> Do not freak out just because there was an update in Tor Browser.\r\n\r\nUh, seriously? They broke backward compatibility with many decentralized projects (I2P was already mentioned here).\r\n\r\n> ZeroNet is safe how it is currently\r\n\r\nIt is *not* safe. I'm tired of fixing lots of vulnerabilities in ZeroNet code. I'm the one who found several RCEs and private key leak vulnerabilities so you can't just ignore what I say.\r\n\r\nAnyways, the main reason to replace the sandbox is *not* its safety. It's just that it's really difficult to move Clearnet sites to ZeroNet because of some incompatibilities.\r\n\r\n> you would also probably need to change the target attribute from _top to something else what I also oppose very strongly\r\n\r\nUh, what?.. What target attribute are you talking about?", "added": 1572084444, "modified": 1572084452, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546601103", "source_type": "github"}, {"comment_id": 923, "body": "> If you assume that ZeroNet is only secure in Tor Browser than you are wrong\r\n\r\nAm I? Try making a zite that accesses some clearnet service to get your IP. That will return correct results in Firefox but a fake (well, almost) IP in Tor Browser.", "added": 1572085919, "modified": 1572085919, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546602857", "source_type": "github"}, {"comment_id": 924, "body": "> I see that you have no clue about security or for that matter the sandbox of ZeroNet.\r\n\r\nLmao. You're talking to the guy who found three important vulnerabilities in ZeroNet.", "added": 1572086011, "modified": 1572086011, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546603004", "source_type": "github"}, {"comment_id": 925, "body": "> I feel you trying to push changes in ZeroNet because you are selfish and only think about what is good for you\r\n\r\nOh, really? Are you *really* sure no one needs PeerMessage? (spoiler: look at some PeerMessage-based sites like KxoID or ZeroNetia) Are you *really* sure no one needs a better sandbox? (spoiler: there were many connected issues recently)", "added": 1572086137, "modified": 1572086448, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546603163", "source_type": "github"}, {"comment_id": 926, "body": "> Are you sure that there is no other simple way to use ZeroNet in Tor Browser?\r\n\r\nAn extension might help. Will making an extension real quick and publishing it to AMO help?", "added": 1572089768, "modified": 1572089768, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546608496", "source_type": "github"}], "1604067572_mirrored_Wkalmar_github": [{"comment_id": 927, "body": "By the way, it's *not* recommended to use command line to create sites. Please use \"Create new, empty site\" button on ZeroHello instead.", "added": 1572021173, "modified": 1572021173, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2245#issuecomment-546484082", "source_type": "github"}, {"comment_id": 928, "body": "GitHub issue ads is something new... ", "added": 1579523106, "modified": 1579523106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2245#issuecomment-576321708", "source_type": "github"}], "1604067581_mirrored_Merith-TK_github": [{"comment_id": 929, "body": "@HelloZeroNet That error message mentions ContentDb, doesn't it? In cade rebuilding doesn't help, you can stop ZeroNet, delete data/content.db file and start ZeroNet again. It might take a while to restore the database. ", "added": 1572053493, "modified": 1572053493, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2247#issuecomment-546567788", "source_type": "github"}], "1604067623_mirrored_ghost_github": [{"comment_id": 930, "body": "Why are the `.png` (and similar) changes required? `mimetypes` module sets correct mimetypes for (most) images already.", "added": 1572087783, "modified": 1572087783, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546605568", "source_type": "github"}, {"comment_id": 931, "body": "It's not *guessing*. The `mimetypes` module detects mimetype based on the extension, and `.png` is hardcoded. You can take a look at its source code if you're not sure.", "added": 1572088424, "modified": 1572088424, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546606564", "source_type": "github"}, {"comment_id": 932, "body": "> since some types are incorrect\r\n\r\nWhich ones?\r\n\r\nI see no reason in adding unneeded code when it works correctly. To be honest, I think that it's mimetypes module that should be patched, not ZeroNet code, but that's unlikely.", "added": 1572088931, "modified": 1572088931, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546607394", "source_type": "github"}, {"comment_id": 933, "body": "I'd leave `.js`, `.webp`, fonts and gpg stuff only. I'm also not sure whether `.js` is required (`application/javascript` is a correct mimetype as well but old browsers might not support it). Everything else is correct.", "added": 1572089071, "modified": 1572089071, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546607581", "source_type": "github"}, {"comment_id": 934, "body": "@HelloZeroNet [Take a look at this RFC](https://tools.ietf.org/html/rfc8081).", "added": 1572091593, "modified": 1572091593, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546610920", "source_type": "github"}, {"comment_id": 935, "body": "@HelloZeroNet @filips123 @krixano Do you see any problems in using `application/javascript` instead of `text/javascript`? I'd leave `text/javascript` but we could remove it (and thus simplify code) if `application/javascript` works as well.", "added": 1572091674, "modified": 1572091674, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546611029", "source_type": "github"}, {"comment_id": 936, "body": "`.txt`, `.html` and `.css` are handled by mimetypes module as well. BTW, I'd recommend not to use `.html` extension to detect mimetype because ZeroNet uses `text/html` mimetype to detect when to add sandbox. Mentioning `.html` might make it look like if `mimetypes` module could be removed, but there are other (strange) extensions like `.htm` and `.xht`, so removing might have serious consequences for ZeroNet security.", "added": 1572091873, "modified": 1572091873, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546611296", "source_type": "github"}, {"comment_id": 937, "body": "@filips123 @krixano `mimetypes` library has a small built-in list of common extensions, but other mimetypes are loaded from registry (in Windows) and configuration files (in Linux).", "added": 1572095391, "modified": 1572095391, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546616172", "source_type": "github"}, {"comment_id": 938, "body": "@hacktivist It looks like the comment you're referring too agrees with @filips123, doesn't it?", "added": 1572095739, "modified": 1572095739, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546616654", "source_type": "github"}, {"comment_id": 939, "body": "Right, but we *do* have access to server configurations, don't we?\r\n\r\n> The official file extension for the manifest is .webmanifest. Some web servers recognize this extension and transfer the file using the standardized media type for a manifest (application/manifest+json). Developers can also choose a different extension (e.g. .json) or none at all (e.g. /api/GetManifest), but are strongly encouraged to transfer the manifest using the application/manifest+json media type.", "added": 1572096526, "modified": 1572096526, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546617936", "source_type": "github"}, {"comment_id": 940, "body": "Sorry, my browser lagged so I didn't see you were referring to the warning. Anyways, mimetypes are usually rather stable so I doubt they'll change it.", "added": 1572096867, "modified": 1572096867, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546618493", "source_type": "github"}, {"comment_id": 941, "body": "@hacktivist Why use hacks when a small fix is enough?", "added": 1572097083, "modified": 1572097083, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546618837", "source_type": "github"}, {"comment_id": 942, "body": "> If we add application/manifest+json than I think application/json also needs to be added.\r\n\r\nWhy though? I think that adding application/manifest+json is enough.", "added": 1572097403, "modified": 1572097403, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546619364", "source_type": "github"}, {"comment_id": 943, "body": "Do you mean that application/manifest+json is already reported correctly by mimetypes module? This only works on *some* devices because it's not built-in.", "added": 1572097580, "modified": 1572097580, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546619667", "source_type": "github"}, {"comment_id": 944, "body": "> I adding both.\r\n\r\nBut why? Why would you duplicate mimetypes's work?\r\n\r\n> Do we need also application/javascript? If html, css etc stated than we should add this one too.\r\n\r\nWe should *remove* html and css.\r\n\r\n> What about encoding? .webmanifest also should be utf8 right?\r\n\r\nI think so.", "added": 1572098386, "modified": 1572098386, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546620906", "source_type": "github"}, {"comment_id": 945, "body": "< I adding application/javascript for .js, application/json for .json\r\n\r\nBut why? .js and .json are already handled by mimetypes.\r\n\r\n> I will not remove text/simple\r\n\r\nDoes that make sense? I mean, these two parts are unrelated...\r\n\r\n> text/html and text/css because from line 303 these MIME types are explicitly stated with utf8 encoding.\r\n\r\nOk, feel free to ignore these because the diff would be smaller.", "added": 1572099677, "modified": 1572099677, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546622793", "source_type": "github"}, {"comment_id": 946, "body": "@hacktivist \r\n\r\n> 3.8\r\n\r\n> at least in Python3", "added": 1572104042, "modified": 1572104042, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546628331", "source_type": "github"}], "1604067592_mirrored_krixano_github": [{"comment_id": 947, "body": "This should only be closed when your PR is merged.", "added": 1572170723, "modified": 1572170723, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2249#issuecomment-546692800", "source_type": "github"}], "1604067580_mirrored_dhueys_github": [{"comment_id": 948, "body": "You can try using \"check files\" from site menu. Also, small updates happen from time to time, especially on multiuser sites. Have you waited for it to disappear for a while already? ", "added": 1572141700, "modified": 1572141700, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2250#issuecomment-546662356", "source_type": "github"}], "1604067583_mirrored_helzy4077_github": [{"comment_id": 949, "body": "Zero?..", "added": 1572242054, "modified": 1572242054, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2252#issuecomment-546850590", "source_type": "github"}], "1604067640_mirrored_ghost_github": [{"comment_id": 950, "body": "> This Hungarian guy who don't speak English\r\n\r\n> people who caching applications\r\n\r\n> decide what ... ZeroNet works\r\n\r\n### \ud83e\udd26\u200d\u2642 ", "added": 1572347241, "modified": 1572347275, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547437311", "source_type": "github"}, {"comment_id": 951, "body": "Ok... Can you please explain what the vulnerability is and how your PR fixed it?", "added": 1572347588, "modified": 1572347588, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547440100", "source_type": "github"}, {"comment_id": 952, "body": "Ok... now how does that help if it's *iframe* that opens links, not wrapper?", "added": 1572348142, "modified": 1572348142, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547444567", "source_type": "github"}, {"comment_id": 953, "body": "> BUT IS NOT THE SAME\r\n\r\nBut... why? [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) says that it's the same.", "added": 1572348469, "modified": 1572348469, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547447393", "source_type": "github"}, {"comment_id": 954, "body": "By the way, you forgot \"r\".", "added": 1572348504, "modified": 1572348504, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547447698", "source_type": "github"}, {"comment_id": 955, "body": "Ok, can we assume it was just a typo? I mean, you'd still google the correct pronounciation before using it and I *think* browsers would tell you if you used an invalid rel value.", "added": 1572348676, "modified": 1572348676, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547449166", "source_type": "github"}, {"comment_id": 956, "body": "@HelloZeroNet I guess that's because we use `sandbox`, right?", "added": 1572348865, "modified": 1572348865, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547450825", "source_type": "github"}, {"comment_id": 957, "body": "\ud83e\udd26\u200d\u2642 That sandbox is not the sandbox we're using. You could only have access to the wrapper if you were the wrapper... And that's literally impossible.", "added": 1572349398, "modified": 1572349408, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2257#issuecomment-547455211", "source_type": "github"}], "1604067642_mirrored_ghost_github": [{"comment_id": 958, "body": "Ok... now what's the problem? Come on, make a PoC. I can't think of one.", "added": 1572350582, "modified": 1572350582, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547465901", "source_type": "github"}, {"comment_id": 959, "body": "*Why* is that a security hole? A security hole is, by definition, a way to bypass a security layer. I don't see a way to bypass it; please show us.", "added": 1572350777, "modified": 1572350777, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547467710", "source_type": "github"}, {"comment_id": 960, "body": "Any real input?", "added": 1572350973, "modified": 1572350973, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547469402", "source_type": "github"}, {"comment_id": 961, "body": "Ok, not working RDFa links might be something to investigate. I'll take a look right now. However, unsupported feature is *not* a security hole.", "added": 1572351477, "modified": 1572351477, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547474064", "source_type": "github"}, {"comment_id": 962, "body": "Ok... what are we discussing? Are we discussing the case when we have `target=\"_blink\"` and the page replaces its opener?", "added": 1572352960, "modified": 1572352960, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547486990", "source_type": "github"}, {"comment_id": 963, "body": "Ok, so can you please make an example zite that exploits our current code?", "added": 1572353134, "modified": 1572353134, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547488605", "source_type": "github"}, {"comment_id": 964, "body": "Investigating", "added": 1572353587, "modified": 1572353587, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547492686", "source_type": "github"}, {"comment_id": 965, "body": "@hacktivist That's because we currently don't send any headers on HTML files...", "added": 1572353634, "modified": 1572353634, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547493095", "source_type": "github"}, {"comment_id": 966, "body": "![image](https://user-images.githubusercontent.com/16370781/67784997-a9e93600-fa7d-11e9-8f0f-ac4a6f8dff28.png)\r\n\r\nThere. There's no issue.", "added": 1572353731, "modified": 1572353731, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547493919", "source_type": "github"}, {"comment_id": 967, "body": "@hacktivist \r\n\r\n> Unless you have a good reason to allow otherwise, you should add the \u2018noopener\u2019 and \u2018noreferrer\u2019 options to the rel attribute of an anchor tag, and explicitly clear the window.opener when using JavaScript.\r\n\r\nAre you sure you are linking to the correct site?", "added": 1572353895, "modified": 1572353895, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547495350", "source_type": "github"}, {"comment_id": 968, "body": "Ok, now why do we need that fix at all?? See my comment above, I couldn't reproduce reverse tabnabbing.", "added": 1572353977, "modified": 1572353977, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547496041", "source_type": "github"}, {"comment_id": 969, "body": "What?? A proxy should *never* strip headers. There was an issue about that recently, and we all said \"no\"!", "added": 1572354430, "modified": 1572354430, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547500137", "source_type": "github"}, {"comment_id": 970, "body": "Wait a second, did you remove security headers we added and are now saying that we introduced an intentional security hole?", "added": 1572354502, "modified": 1572354502, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547500738", "source_type": "github"}, {"comment_id": 971, "body": "These headers aren't unsafe. Removing them is.\r\n\r\nBy the way, we're not limiting developers. Most stuff can easily be done utilizing ZeroFrame API (accessing wrapper, actually). I'm also working on a better sandbox now.", "added": 1572354622, "modified": 1572354622, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547501733", "source_type": "github"}, {"comment_id": 972, "body": "Uh... they do. Sandbox helps us make sure sites don't access unsafe ZeroNet APIs that allow updating it, restarting and changing (a few) settings.", "added": 1572354781, "modified": 1572354781, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547503028", "source_type": "github"}, {"comment_id": 973, "body": "Actually, we'd need something like `noopener` to completely remove opener, but AFAIK that can only be set with `rel`.", "added": 1572354989, "modified": 1572354989, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547504903", "source_type": "github"}, {"comment_id": 974, "body": "Ok, so you're proxying ZeroNet to Clearnet. And you're using Apache to remove some headers you don't like, right? Why don't you use Apache to *add* the headers you need then? BTW, it doesn't look like they help but that's another story.", "added": 1572355254, "modified": 1572355254, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547507131", "source_type": "github"}, {"comment_id": 975, "body": "Are you sure? https://httpd.apache.org/docs/current/mod/mod_headers.html It says that `set` replaces the existing header.", "added": 1572355509, "modified": 1572355509, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547509349", "source_type": "github"}, {"comment_id": 976, "body": "Sorry, I don't have an Apache instance nearby.", "added": 1572355603, "modified": 1572355603, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547510074", "source_type": "github"}, {"comment_id": 977, "body": "That \"Referrer Policy\" in \"General\" shows what policy is used to download that very page, not its children.", "added": 1572355767, "modified": 1572355767, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547511379", "source_type": "github"}, {"comment_id": 978, "body": "Any real input?", "added": 1572356539, "modified": 1572356539, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547517645", "source_type": "github"}, {"comment_id": 979, "body": "We don't really need this header, can you add it yourself?", "added": 1572356658, "modified": 1572356658, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547518589", "source_type": "github"}, {"comment_id": 980, "body": "Uh, that will not make ZeroNet *less* secure as well. And I hope that we'll get rid of that part of code soon anyways... By the way, @HelloZeroNet can you please take a look at my PR? It's just a temporary solution to make peers announce lowercase address variants, it doesn't really affect site discovery or something.", "added": 1572356809, "modified": 1572356809, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547519812", "source_type": "github"}, {"comment_id": 981, "body": "Great, you're deleting old comments and issues. What for?", "added": 1572359254, "modified": 1572359254, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2258#issuecomment-547539052", "source_type": "github"}], "1604067645_mirrored_ghost_github": [{"comment_id": 982, "body": "Here's what I get when I add an iframe:\r\n\r\n> Refused to display 'http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D' in a frame because an ancestor violates the following Content Security Policy directive: \"frame-ancestors 'self'\".\r\n\r\nWas that intended or do you know how to fix that?", "added": 1572365547, "modified": 1572365552, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2259#issuecomment-547584785", "source_type": "github"}, {"comment_id": 983, "body": "Ok, something to investigate then: can we use `none` instead? It looks like SAMEORIGIN (instead of DENY) has been in the code from the beginning, but I think it makes more sense to use DENY. The change was introduced by @MuxZeroNet but he left the project. @HelloZeroNet Do you know why \r\n(potentionally unsafe) SAMEORIGIN was used?", "added": 1572366123, "modified": 1572366123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2259#issuecomment-547588528", "source_type": "github"}, {"comment_id": 984, "body": "@hacktivist Could you update the PR then?", "added": 1572367269, "modified": 1572367269, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2259#issuecomment-547595944", "source_type": "github"}], "1604067674_mirrored_imachug_github": [{"comment_id": 985, "body": "> as you have to read/parse content.json on every file request.\r\n\r\nNot really. ContentManager caches content.json, doesn't it? ", "added": 1572421610, "modified": 1572421610, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-547841219", "source_type": "github"}, {"comment_id": 986, "body": "> If we introduce this probably we need to add the same for http requests and API commands as well.\r\n\r\nHere's a usecase: I run a script in background in browser which reads privatekey from an ignored file. I want the script to access it by I don't want to allow accessing it from outside. ", "added": 1572421696, "modified": 1572421696, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-547841769", "source_type": "github"}, {"comment_id": 987, "body": "> btw: you need to add site_temp.storage.write(\"js/ignored.json\", b\"test\") to the test or it will fail anyway as the file does not exists\r\n\r\nI added `js/ignored.js` file, didn't I?", "added": 1572422309, "modified": 1572422309, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-547845773", "source_type": "github"}, {"comment_id": 988, "body": "> I would recommend to give it a random file name and store it in the settings\r\n\r\nIsn't that a hack? This solution looks better to me...", "added": 1572422343, "modified": 1572422343, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-547845992", "source_type": "github"}, {"comment_id": 989, "body": "Closing this PR then.", "added": 1572445540, "modified": 1572445540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263#issuecomment-548021522", "source_type": "github"}], "1604067626_mirrored_filips123_github": [{"comment_id": 990, "body": "/cc @geekless ", "added": 1572540145, "modified": 1572540145, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-548537813", "source_type": "github"}, {"comment_id": 991, "body": "> you can't write to application's directory (eg. on macOS)\r\n\r\nCan we copy code to `~/Library/Application Support/ZeroNet` on first run and update it there next time?\r\n\r\n> if someone installed it manually\r\n\r\nAs in cloning Git repository? We can use `dist_type` to detect that, can't we?\r\n\r\n> or from a package\r\n\r\nCould we make package managers add scripts for autoupdate? Say, `gksudo apt-get install zeronet` would work for Ubuntu.", "added": 1572575371, "modified": 1572575371, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-548671576", "source_type": "github"}], "1604067617_mirrored_krixano_github": [{"comment_id": 992, "body": "Unfortunately, cryptography dropped support for some common OpenSSL versions.", "added": 1572712103, "modified": 1572712103, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549073611", "source_type": "github"}, {"comment_id": 993, "body": "Let me collect all the issues we have found so far.\r\n\r\n1. **bencode.py**. It uses BitTorrent Open Source License which is incompatible with GPL but I've made my own package that does the same. \r\n2. **msgpack-python**. Apache 2.0.\r\n3. **gevent-websocket**. Apache 2.0.\r\n4. **maxminddb**. Apache 2.0.\r\n5. **globe**. Apache 2.0.\r\n6. **rsa**. Apache 2.0.\r\n7. **pyelliptic**. This is GPLv3 only but it's a *fork*. The original library is MIT. This means that it should be fairly easy to fork the original library and make it compatible with the current pyelliptic version whilst still using MIT license.\r\n8. **python-bitcoinlib**. This is GPLv3+. That's not a big problem but we might want to change this if we retain GPLv2.\r\n\r\nWe have to get rid of bencode.py for sure.\r\n\r\n---\r\n\r\nThen, if we switch to GPLv3, we'll automatically resolve all the problems. However, asking all contributors for permission might take a lot of time. Here's a list of all contributors (except @shortcutme/@HelloZeroNet):\r\n\r\n1. imachug (63 commits)\r\n2. tangdou1 (24 commits)\r\n3. TheNain38 (23 commits)\r\n4. cclauss (23 commits)\r\n5. rllola (29 commits)\r\n6. MuxZeroNet (18 commits)\r\n7. lmath (17 commits)\r\n8. redfish (15 commits)\r\n9. Matthew Bell (12 commits)\r\n10. sirMackk (10 commits)\r\n11. Idealcoder (8 commits)\r\n12. 0polar (6 commits)\r\n13. daniell (6 commits)\r\n14. filips123 (6 commits)\r\n15. grez911 (6 commits)\r\n16. anoadragon453 (6 commits)\r\n17. Ashley Perpetual (5 commits)\r\n18. Barrabin Fc. \u2691 (5 commits)\r\n19. Felix Imobersteg (5 commits)\r\n20. OliverCole (5 commits)\r\n21. Sergei Bondarenko (5 commits)\r\n22. ysc3839 (5 commits)\r\n23. K\u00fbipumu (4 commits)\r\n24. Th3B3st (4 commits)\r\n25. Thibaut Broggi (4 commits)\r\n26. Vadim Ushakov (4 commits)\r\n27. cxgreat2014 (4 commits)\r\n28. erqan (4 commits)\r\n29. iShift (4 commits)\r\n30. radfish (4 commits)\r\n31. Arthur Poulet (3 commits)\r\n32. krixano (3 commits)\r\n33. Maciej Kr\u00fcger (3 commits)\r\n34. Nathan Tym (3 commits)\r\n35. Richard Yu (3 commits)\r\n36. frerepoulet (3 commits)\r\n37. krzotr (3 commits)\r\n38. l5h5t7 (3 commits)\r\n39. aitorpazos (2 commits, #587)\r\n40. TigerND (2 commits, #96)\r\n41. barrabinfc (2 commits, #278)\r\n42. yowmamasita (2 commits, #292)\r\n43. Biosias (2 commits, #1469 and #1179)\r\n44. reezer (2 commits, #867 and #868)\r\n45. danielquinn (2 commits, #50)\r\n46. xfq (2 commits, #1155 and #863)\r\n47. gyulaweber (2 commits, #371 and 607)\r\n48. HostFat (2 commits, #664 and #665)\r\n49. JeremyRand (2 commits, #1444 and #1445)\r\n50. volker48 (2 commits, #36)\r\n51. Mathieu Tortuyaux / AwesomeTurtle (2 commits, #890) **Dead account**\r\n52. rarbg (2 commits, #121)\r\n53. ppsfassa (2 commits, #1421)\r\n54. brunogarciavaz (2 commits, #856)\r\n55. caryoscelus (2 commits, #2218 and #1800)\r\n56. mishfit (2 commits, #912 and #842)\r\n57. vitorio (2 commits, #1479)\r\n\r\nand 56 more contributors with 1 commit. If we really want to switch the license, we'll probably need to ask all these people.\r\n\r\n*Sidenote: I've looked through a few accounts with 2 commits and marked them with related PRs. We might want to spend some time removing their code from ZeroNet, especially from dead accounts. I also didn't use @ not to ping all of them before it's the right time*.\r\n\r\n---\r\n\r\nOn the other hand, we can replace our incompatible dependencies:\r\n\r\n1. **msgpack-python**. There's u-msgpack-python which I haven't looked at yet but it's MIT.\r\n2. **gevent-websocket**. No idea yet, probably rewriting it from scratch is the way to go.\r\n3. **maxminddb**. We only use that for IPs so it shouldn't be difficult to change the format to something else.\r\n4. **globe**. No idea yet.\r\n5. **rsa**. We use OpenSSL already so it shouldn't be difficult to use OpenSSL's RSA.\r\n6. **pyelliptic**. This is a thin wrapper on top of OpenSSL. It shouldn't be difficult to make our own wrappers (I've worked on a similar task before, check one of my pyelliptic-related PRs)\r\n7. **python-bitcoinlib**. This is a big wrapper on top of OpenSSL. It will probably take a while to make it work but it's only time-consuming and should be easy to do.\r\n\r\nI'd recommend to start with replacing msgpack-python, gevent-websocket and maxminddb. After that, we'd replace pyelliptic and rsa. (@HelloZeroNet: Can we assume that all users have OpenSSL or do we need a pure-Python fallback?) After that, we'd replace python-bitcoinlib and globe. It will probably take some time to fix the last part (i.e. globe), so we can side-load the globe (say, via ZeroHello) and show a \"would you like to\" message to user before downloading it.", "added": 1572715970, "modified": 1573283555, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549078685", "source_type": "github"}, {"comment_id": 994, "body": "It looks like u-msgpack-python is pure-python which means that it's rather slow. We should try to make a wrapper on top of the C library.", "added": 1572717613, "modified": 1572717613, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549080809", "source_type": "github"}, {"comment_id": 995, "body": "Does that count displaced/replaced code or something like that?", "added": 1572797403, "modified": 1572797533, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549168522", "source_type": "github"}, {"comment_id": 996, "body": "@shortcutme @HelloZeroNet I've made a simple license change utility. You can check it on test data [here](https://github.com/imachug/test/issues/1). Do you think we could use that for this repository?", "added": 1572800818, "modified": 1572800857, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549173366", "source_type": "github"}, {"comment_id": 997, "body": "@HelloZeroNet Can you close the locked issues (#2265 #2268 #2270)? The issue tracker is polluted with license issues now.", "added": 1572833823, "modified": 1572833854, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549226937", "source_type": "github"}, {"comment_id": 998, "body": "@HelloZeroNet As we have replaced bencode.py with bencode_open and all the cryptography libraries with sslcrypto, I believe all the libraries are GPLv3-compatible now. I guess this issue can be closed now and the only thing left is to make sure we don't have any contributions which weren't (re-)licensed under GPLv3 in #2273.", "added": 1583548991, "modified": 1583548991, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-596050165", "source_type": "github"}, {"comment_id": 999, "body": "@HelloZeroNet Do you think this issue can be closed?", "added": 1584413539, "modified": 1584413539, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-599890576", "source_type": "github"}], "1604067608_mirrored_ZeroNetTickBot_github": [{"comment_id": 1000, "body": "GPLv3 and Lax", "added": 1572832368, "modified": 1572832368, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549224368", "source_type": "github"}, {"comment_id": 1001, "body": "@sirMackk @ysc3839 @mkg20001 @xfq @6543 @d14na @camponez @kseistrup @eduaddad @probonopd @skwerlman\r\n\r\nI have just noticed that you voted for GPLv3+ . I want to make sure that the GPL options were clear enough, so let me explain it again:\r\n\r\n- GPLv3-only allows us to license the project under the standard GPLv3 license\r\n- GPLv3+ allows us to license the project under \"GPLv3 or later\" but not the standard GPLv3 license\r\n- GPLv3 allows us to use either \"GPLv3 or later\" or the standard GPLv3 license, whatever we find better or more compatible", "added": 1572832791, "modified": 1572832916, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549225087", "source_type": "github"}, {"comment_id": 1002, "body": "GPLv3-only and Lax", "added": 1572837786, "modified": 1572837786, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549235195", "source_type": "github"}, {"comment_id": 1003, "body": "@goofy-mdn Just to make sure: choosing Lax means that we'll have to rewrite all libraries and make others support Lax as well, or remove your contributions. Are you fine with that? ", "added": 1572839409, "modified": 1572839409, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549239128", "source_type": "github"}, {"comment_id": 1004, "body": "Are you all sure guys? ", "added": 1572839944, "modified": 1572839944, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549240697", "source_type": "github"}, {"comment_id": 1005, "body": "@caryoscelus That's now fixed. There was a problem with a space next to your username which the bot didn't recognize.", "added": 1572875201, "modified": 1572875201, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549442828", "source_type": "github"}, {"comment_id": 1006, "body": "I don't want to feed the troll but still.\r\n\r\n> I see that antifa is now blocked and his issues, reports about the license was closed, his pull request also was closed.\r\n\r\nTake a look at @LiberateZeroNet's registration time: a few minutes ago. @HelloZeroNet Can we block this clone please?", "added": 1572876085, "modified": 1572876085, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549449671", "source_type": "github"}, {"comment_id": 1007, "body": "@Fil @rcmorano @BoboTiG @AceLewis @MRoci @anoadragon453 @artemmolotov I have just added the \"I don't care\" option. I want to keep this as legal as possible so I would kindly ask you all to comment \"I don't care\" to make sure you are recorded. Additionally, using comments will help us do some statistics.", "added": 1572876434, "modified": 1572876434, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549452207", "source_type": "github"}, {"comment_id": 1008, "body": "GPLv3 and Lax", "added": 1572876705, "modified": 1572876705, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549454387", "source_type": "github"}, {"comment_id": 1009, "body": "@cclauss I have just noticed that you suggested using Apache License 2.0. Whilst being permissive is important, this means that we'll have some problems with other contributors who have voted for GPL only. I'm not sure whether you would allow us to use your work under GPLv3 and Lax or something similar, but it'd be cool if you did -- we'd have to do a lot less work.", "added": 1572880420, "modified": 1572880420, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549479692", "source_type": "github"}, {"comment_id": 1010, "body": "There is no \"GPLv3 and Apache2\" option currently but I think that \"GPLv3 and Lax\" will satisfy you. I don't see how Apache 2.0 is radically different from MIT or 2/3-clause BSD, so I think I am fine with using Apache 2.0 (if @HelloZeroNet doesn't disagree).", "added": 1572884259, "modified": 1572884259, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549505439", "source_type": "github"}, {"comment_id": 1011, "body": "@brunogarciavaz Please post a single \"I don't care\" comment to make the bot recognize your vote.", "added": 1572884298, "modified": 1572884298, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549505682", "source_type": "github"}, {"comment_id": 1012, "body": "Huge thanks.", "added": 1572885063, "modified": 1572885063, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549510808", "source_type": "github"}, {"comment_id": 1013, "body": "@rarbg I saw that you showed up on antifa's repository. Can you make a vote here please? ", "added": 1572919272, "modified": 1572919272, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549663540", "source_type": "github"}, {"comment_id": 1014, "body": "@artemmolotov Please post your option as a single-line comment.", "added": 1572963356, "modified": 1572963356, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549920125", "source_type": "github"}, {"comment_id": 1015, "body": "Just in case someone didn't receive a notification or ignored it, I'm pinging again:\r\n\r\n@rllola @tangdou1 @TheNain38 @jerry-wolf @radfish @MuxZeroNet @matthewrobertbell @grez911 @rainlime @barrabinfc @0polar @DaniellMesquita @anoadragon453 @n3r0-ch @Th3B3st @geekless @cxgreat2014 @erqan @krzotr @nathantym @Emeraude @frerepoulet @aitorpazos @jTeego @yowmamasita @HostFat @JeremyRand @volker48 @tormath1 @rarbg @ppsfassa @hugbubby @mishfit @ajmeese7 @Austin-Williams @bencevans @thesoftwarejedi @Derson5 @dldx @EdenSG @Erkan-Yilmaz @gyulaweber @shakna-israel @justinwiley @MRoci @medimatrix @Nodeswitch @Ornataweaver @adrelanos @RedbHawk", "added": 1573029482, "modified": 1573029482, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550271930", "source_type": "github"}, {"comment_id": 1016, "body": "@rcmorano @dqwyy @krikmo @leycec @mnlg @saber28 @zwgshr", "added": 1573029489, "modified": 1573029489, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550271967", "source_type": "github"}, {"comment_id": 1017, "body": "If someone chooses GPLv3 and we decide to license ZeroNet under GPLv3-only, you won't be able to distribute ZeroNet under GPLv4.\r\n\r\nIf someone chooses GPLv3+, we won't be able to license ZeroNet under GPLv3-only. Instead, we'd have to license the project under GPLv3+, and *then* **maybe** *if it's legal* fork ZeroNet under GPLv3; but you'll sitll be able to distribute ZeroNet under GPLv4.", "added": 1573058905, "modified": 1573058905, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550471914", "source_type": "github"}, {"comment_id": 1018, "body": "Actually, I'm not sure whether the GPLv3+ option allows us to license contributions under GPLv3-only. I thought that ZeroNet is not a work derived from contributions, *but* contributions are a part of ZeroNet. So if contributors force us to use GPLv3+, we'll have to license ZeroNet under GPLv3+ as well so people would be able to distribute/use ZeroNet under e.g. GPLv4.", "added": 1573061200, "modified": 1573061200, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-550486013", "source_type": "github"}, {"comment_id": 1019, "body": "Oh god, @CyberSecurityEngineer we know you are antifa.", "added": 1573289499, "modified": 1573289499, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552092796", "source_type": "github"}, {"comment_id": 1020, "body": "Thanks for telling me about the bot failure though! I've just restarted it.\r\n\r\n**UPD** There, it works now.", "added": 1573289556, "modified": 1573289617, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552092852", "source_type": "github"}, {"comment_id": 1021, "body": "Please remain on-topic and use chats for long conversations. I would recommend using IRC (#zeronet:freenode.net).", "added": 1573290321, "modified": 1573290321, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552093654", "source_type": "github"}, {"comment_id": 1022, "body": "Please use IRC and remain on-topic here.", "added": 1573291721, "modified": 1573291721, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552095226", "source_type": "github"}, {"comment_id": 1023, "body": "There are still some users who haven't replied. @rllola @tangdou1 @TheNain38 @radfish @MuxZeroNet @grez911 @rainlime @barrabinfc @0polar @DaniellMesquita @anoadragon453 @Th3B3st @geekless @cxgreat2014 @erqan @krzotr @nathantym @Emeraude @frerepoulet @aitorpazos @jTeego @yowmamasita @HostFat @tormath1 @rarbg @ppsfassa @hugbubby @mishfit @ajmeese7 @Austin-Williams @bencevans @thesoftwarejedi @Derson5 @dldx @EdenSG @Erkan-Yilmaz @gyulaweber @shakna-israel @justinwiley @medimatrix @Nodeswitch @Ornataweaver @RedbHawk @rcmorano @dqwyy @krikmo @leycec @mnlg @saber28 @zwgshr Pinging you again just in case.", "added": 1573401205, "modified": 1573401205, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552222420", "source_type": "github"}, {"comment_id": 1024, "body": "I have just pinged everyone except @MuxZeroNet, @frerepoulet, @jTeego and @mnlg via email. If you know how to contact these 4 people (*especially* @MuxZeroNet) please tell me.", "added": 1573403687, "modified": 1573403687, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552226037", "source_type": "github"}, {"comment_id": 1025, "body": "Actually, we've probably incorrectly identified @TigerND as jTeego. @TigerND can you please vote here?", "added": 1573406531, "modified": 1573406531, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552230073", "source_type": "github"}, {"comment_id": 1026, "body": "@dqwyy Can you please post a single-line comment for the bot, exactly as specified in the issue? \"I don't care\" would work.\r\n\r\nBtw, AFAIK translations *are* contributions - not to code, but to data. ", "added": 1573435693, "modified": 1573435693, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552288731", "source_type": "github"}, {"comment_id": 1027, "body": "@rllola I've seen you online recently, can you vote please? ", "added": 1573811155, "modified": 1573811155, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554346233", "source_type": "github"}, {"comment_id": 1028, "body": "Damn, @HelloZeroNet can you hide the messages as offtopic?\r\n\r\nBtw, I could do that quicker if I were a collaborator ;) ", "added": 1573895014, "modified": 1573895978, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554630900", "source_type": "github"}, {"comment_id": 1029, "body": "@thesoftwarejedi You could have noticed that we are working on this problem without any input from nofish. We are solving licensing issues whilst nofish is actually working. But actually several technical problems arised after hacktivist's rant. For example, we'd have to replace quite a few dependencies so I am now working on a faster ECDSA/ECIES/AES implementation. I got it working yesterday and am now embedding it into ZeroNet. ", "added": 1573960913, "modified": 1573960913, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554717016", "source_type": "github"}, {"comment_id": 1030, "body": "Ok lol, how would switching *our* license help? And could we switch our license back to GPLv2 afterwards?", "added": 1574009957, "modified": 1574009957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554780368", "source_type": "github"}, {"comment_id": 1031, "body": "Where did you find that information? GPLv2 termination is indefinite in case you are violating it, e.g. in case you're using GPLv2 in a MIT project.", "added": 1574010206, "modified": 1574010206, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554780743", "source_type": "github"}, {"comment_id": 1032, "body": "No, it's not inevitable. Even in your world there are two cases:\r\n\r\n- Either we use GPLv3 if all/most developers agree;\r\n- Or we stop distributing ZeroNet.\r\n\r\nSee, even if the law forces us to use GPLv3 (though I doubt but whatever) it might not allow us to do that.", "added": 1574012066, "modified": 1574012066, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554783747", "source_type": "github"}, {"comment_id": 1033, "body": "@binarypunk People want a fast solution. They don't want to search for INSTALL to install an app, so INSTALL should be merged with readme for sure.", "added": 1574125952, "modified": 1574125952, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555324617", "source_type": "github"}, {"comment_id": 1034, "body": "How would you prove that no changes were made during the fork? I mean, you can modify old commits even without forking so it looks impossible (and probably makes little sense because we can just review the code and/or compare it with the old repository content) ", "added": 1574223129, "modified": 1574223129, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555870916", "source_type": "github"}, {"comment_id": 1035, "body": "First, that's not thanks to the OS, that's because of your desktop and file manager. Anyways, many other OSes don't support that (read: Ubuntu/Debian + nautilus, Windows + explorer, etc.). Now what? ", "added": 1574223979, "modified": 1574223979, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555874845", "source_type": "github"}, {"comment_id": 1036, "body": "Ok so can we avoid the standards legally? ", "added": 1574224878, "modified": 1574224878, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555879305", "source_type": "github"}, {"comment_id": 1037, "body": "That is cool, but unfortunately there are few file managers that support these files. So I think it's not better than GitHub UI / git repository contents. ", "added": 1574225682, "modified": 1574225682, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555883595", "source_type": "github"}, {"comment_id": 1038, "body": "It's not for GitHub, it's for Git. ", "added": 1574227868, "modified": 1574227868, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555896533", "source_type": "github"}, {"comment_id": 1039, "body": "@binarypunk We could automatically add the changelog to ZeroNet releases. ", "added": 1574230770, "modified": 1574230770, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555914871", "source_type": "github"}, {"comment_id": 1040, "body": "You *can't* do that without contributor agreement, go read FSF's reply. ", "added": 1574232723, "modified": 1574232723, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555927504", "source_type": "github"}, {"comment_id": 1041, "body": "The only way to fix it is to ask all the contributors and *then* change the license to something we agree on. ", "added": 1574234409, "modified": 1574234409, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555938293", "source_type": "github"}, {"comment_id": 1042, "body": "We are violating licenses. This issue is to make surebwe are legally allowed to fix the violation. ", "added": 1574247795, "modified": 1574247795, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-556016272", "source_type": "github"}, {"comment_id": 1043, "body": "We can distribute the software until some dependency author asks us to stop that. Before that, we can't be sued in most countries. So we have some time to fix the problems and distribute the (illegal) copies at the same time (as long as the authors don't tell us to stop, of course).\r\n\r\nBTW, I am not 23 years old so you can stop telling everyone that...", "added": 1574265263, "modified": 1574265263, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-556242953", "source_type": "github"}, {"comment_id": 1044, "body": "I am afraid that 56% looks like a too small percentage in case we have legal issues in the future. It's probably worth checking what contributions are actually included in *current* ZeroNet core and check whether we can remove some (inactive) people from the list whose contributions weren't used.", "added": 1574867045, "modified": 1574867058, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559194989", "source_type": "github"}, {"comment_id": 1045, "body": "@adrelanos A readme PR *is* a contribution even if you don't think so. That's kinda a problem because quite a lot of inactive people contributed translations.", "added": 1574868327, "modified": 1574868327, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559202272", "source_type": "github"}, {"comment_id": 1046, "body": "Alright I guess this percentage is good enough. @shakna-israel will you change your mind?", "added": 1574874948, "modified": 1574874948, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559236846", "source_type": "github"}, {"comment_id": 1047, "body": "Ok @shakna-israel I think you're right. Anyways, it looks like I didn't quite get the 95%+ rule correctly. So I guess we'll have to get all contributors vote or remove their contributions. That's... disgusting. ", "added": 1574936088, "modified": 1574936088, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559490406", "source_type": "github"}, {"comment_id": 1048, "body": "@filips123 Not really, we can't assume they *agree*, we still have to dual-license the code.", "added": 1574938584, "modified": 1574938584, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559503769", "source_type": "github"}, {"comment_id": 1049, "body": "@filips123 Unfortunately we can't dual-license, at least with lax licenses, and GPLv2 is incompatible.", "added": 1574939500, "modified": 1574939500, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559508954", "source_type": "github"}, {"comment_id": 1050, "body": "I am still not quite sure whether we can use code that is now licensed under GPLv3+ as a part of a GPLv3-only project. @filips123 Do you think it's fine?", "added": 1574940025, "modified": 1574940025, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559511792", "source_type": "github"}, {"comment_id": 1051, "body": "Hm, I wasn't sure whether \"using as a part of the project\" is different from \"using as a dependency\" or something. In this case, let me update the bot to calculate just plain GPLv3 stats too.", "added": 1574941928, "modified": 1574941928, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559522485", "source_type": "github"}, {"comment_id": 1052, "body": "Oh, BTW, I think that git's stats are probably a little bit wrong because they also include lines that were removed. I think we should only count lines/parts that are currently used.", "added": 1574941987, "modified": 1574941987, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559522864", "source_type": "github"}, {"comment_id": 1053, "body": "Ok I guess we can use GPLv3-only in case we remove the contributions by the three people who voted for \"Lax\". We can also use GPLv3+ but I guess we have to ask @TheNain38's permission.\r\n\r\nAnyway, it's be still useful to look through the code made by @rllola, @radfish, @MuxZeroNet (something I'm afraid of), @grez911 and @lainlime. We have to make sure we have as few lines commited by inactive people as possible.\r\n\r\nNow, we have to take a look at the dependencies. Quite a lot of them are GPLv3-incompatible.", "added": 1574943105, "modified": 1574943105, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559528994", "source_type": "github"}, {"comment_id": 1054, "body": "Hm. I guess it's still the dependency/part-of problem. If we assume this code counts as a dependency, we can use Lax-licensed code I guess. So we only have two problems instead of three, lol.", "added": 1574943292, "modified": 1574943292, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559530056", "source_type": "github"}, {"comment_id": 1055, "body": "> Have you made any progress on that?\r\n\r\n:laughing: I still have a segmentation fault on a single OpenSSL version with sslcrypto, and it can only be reproduced on GitHub Actions backend but not on any device I have access to... I'm debugging that but it's really difficult.\r\n\r\n> Contributors voted for GPLv3+!\r\n\r\nWe can... They licensed their work under GPLv3+ for us which means that we can use it under any GPL license, including GPLv3-only.\r\n\r\n> All license is compatible with GPLv3+\r\n\r\nSorry but BitTorrent Open Source License is incompatible. That's just a single example.", "added": 1574943574, "modified": 1574943574, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559531530", "source_type": "github"}, {"comment_id": 1056, "body": "> BitTorrent Open Source License \r\n\r\n.", "added": 1574943645, "modified": 1574943645, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559531899", "source_type": "github"}, {"comment_id": 1057, "body": "That's because you can't even scan that... Dumbass.\r\n\r\nSorry.", "added": 1574943899, "modified": 1574943899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559533227", "source_type": "github"}, {"comment_id": 1058, "body": ":man_facepalming: There are also package managers such as PIP, do you know that? Take a look at requirements.txt file.", "added": 1574943934, "modified": 1574943934, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559533425", "source_type": "github"}, {"comment_id": 1059, "body": "Oh damn... you do know what package managers are, don't you?", "added": 1574944130, "modified": 1574944130, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559534427", "source_type": "github"}, {"comment_id": 1060, "body": "> What is installed using PIP is not shipped in the source code you retard!\r\n\r\nOk... go read FSF's reply.", "added": 1574944167, "modified": 1574944167, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559534599", "source_type": "github"}, {"comment_id": 1061, "body": "@SwissConfederation Go read FSF's reply. They say it counts.", "added": 1574944431, "modified": 1574944431, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559536097", "source_type": "github"}, {"comment_id": 1062, "body": "> I can run the program without installing anything using pip\r\n\r\nNo you can't, it's gonna raise error and exit. Try it.", "added": 1574944856, "modified": 1574944856, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559538475", "source_type": "github"}, {"comment_id": 1063, "body": "Ok would you like to discuss anything with me?", "added": 1574947449, "modified": 1574947449, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559552019", "source_type": "github"}, {"comment_id": 1064, "body": "Can we switch to IRC now please.", "added": 1574947464, "modified": 1574947464, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559552087", "source_type": "github"}, {"comment_id": 1065, "body": "So you are not looking for any technical discussion and don't listen to our explanations. I am now blocking you from @ZeroNetTickBot account, feel free to chat on #zeronet:freenode.net.", "added": 1574947557, "modified": 1574947557, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559552507", "source_type": "github"}, {"comment_id": 1066, "body": "I wasn't threating, I just think that this issue shouldn't be for discussions... we kinda got everyone reply though so I guess it's ok. Feel free to chat more unless HelloZeroNet wants to stop that.", "added": 1574947802, "modified": 1574947802, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559553609", "source_type": "github"}, {"comment_id": 1067, "body": "@SwissConfederation I've mentioned that half an hour before but oh well... I also made GPLv3-only include GPLv3+.", "added": 1574948079, "modified": 1574948079, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559554829", "source_type": "github"}, {"comment_id": 1068, "body": "@SwissConfederation There's a single person for GPLv3-only. That's why I said that we can use either GPLv3+ or GPLv3-only, but we can only use GPLv3+ if we remove that person's contributions...", "added": 1574948225, "modified": 1574948225, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559555474", "source_type": "github"}, {"comment_id": 1069, "body": "What for? From my point of view (@filips123's and @JeremyRand's as well) we're now counting the votes right. I guess I should add Lax licenses as well though...", "added": 1574948281, "modified": 1574948281, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559555756", "source_type": "github"}, {"comment_id": 1070, "body": "What for? You can use GPLv3+ in GPLv3-only.", "added": 1574948322, "modified": 1574948332, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559555938", "source_type": "github"}, {"comment_id": 1071, "body": "> You manipulated this voting today without asking anyone about it! This is illegal!\r\n\r\n1. These are stats, the actual voting results weren't changed at all.\r\n2. I did ask, @JeremyRand and @filips123 told me you can use GPLv3+ code in GPLv3-only project so I added GPLv3+ voters to GPLv3-only stats entry.", "added": 1574948610, "modified": 1574948610, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559557159", "source_type": "github"}, {"comment_id": 1072, "body": "I am *not* going against the voting... The stats just show what we can *legally* do. Think of the numbers as the probability that we aren't going to be sued or something like that.", "added": 1574948711, "modified": 1574948711, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559557582", "source_type": "github"}, {"comment_id": 1073, "body": "At least I don't delete edit history as you do, the bot source code is open-source, you can check people votes yourself and no one can delete votes except the votes themselves.\r\n\r\nAnyways, it's not about popularity: see, if people voted for GPLv3+ this means that they released their code for GPLv3+ officially which means that we can use their code as long as ZeroNet is licensed under GPLv3 (-or-later or -only), GPLv4 (-or-later or -only), etc.", "added": 1574949062, "modified": 1574949062, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559558996", "source_type": "github"}, {"comment_id": 1074, "body": "Can you please tell me *what* I manipulated? I have only change stats. These stats show what percentage of people allow us to use the code under GPLv3+, GPLv3-only, etc. These results are right, the previous results were a bit off.", "added": 1574949290, "modified": 1574949290, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559559962", "source_type": "github"}, {"comment_id": 1075, "body": "Ok so FSF is wrong right?", "added": 1574949591, "modified": 1574949591, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559561189", "source_type": "github"}, {"comment_id": 1076, "body": "> *fixed stats calculating*\r\n\r\n> changed the results\r\n\r\n:man_facepalming: ", "added": 1574950325, "modified": 1574950325, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559564369", "source_type": "github"}, {"comment_id": 1077, "body": "@HelloZeroNet Can you please get rid of the spam?\r\n\r\nGuys we have IRC for that.", "added": 1574950434, "modified": 1574950434, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559564800", "source_type": "github"}, {"comment_id": 1078, "body": ">  So should I change it to GPL3+ or what's next?\r\n\r\n> clearly said \r\n\r\n:man_facepalming: ", "added": 1574950876, "modified": 1574950876, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559566588", "source_type": "github"}, {"comment_id": 1079, "body": "@SuperSandro2000 please post \"I don't care\" as a a single comment. ", "added": 1574956019, "modified": 1574956019, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559582487", "source_type": "github"}, {"comment_id": 1080, "body": "@HelloZeroNet BTW (actually not), do you think it makes sense to allow passing IV to eciesEncrypt instead of generating it randomly? It looks like it's almost useless, do you think we can get rid of it? ", "added": 1574956141, "modified": 1574956141, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559582819", "source_type": "github"}, {"comment_id": 1081, "body": "@SwissConfederation Sorry but I don't want to publish my full name and especially address. ", "added": 1574957588, "modified": 1574957588, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559586878", "source_type": "github"}, {"comment_id": 1082, "body": "@SwissConfederation \"publically\" includes you. ", "added": 1574957688, "modified": 1574957688, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559587146", "source_type": "github"}, {"comment_id": 1083, "body": "@DaniellMesquita Just to make sure: this will license your code under BSD3 but we will be able to use it in a GPLv3 project. ", "added": 1575080575, "modified": 1575080575, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559913968", "source_type": "github"}, {"comment_id": 1084, "body": "@SwissConfederation Everyone just got tired of you already. You say that your code was stolen all the time but you don't listen to us. You say we need to switch to GPLv3+ but you don't give us time to collect agreements from the contributors. Please just calm down. ", "added": 1575108838, "modified": 1575108838, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559965790", "source_type": "github"}, {"comment_id": 1085, "body": "@TheNain38 You are the only person who voted for GPLv3-only. Do you think GPLv3+ would be okay?", "added": 1575564610, "modified": 1575564610, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562288682", "source_type": "github"}, {"comment_id": 1086, "body": "Damn @ExtremelyMassiveStar if he works in a bank it doesn't mean he has any malicious intentions..", "added": 1575614880, "modified": 1575614880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562506123", "source_type": "github"}, {"comment_id": 1087, "body": "Most != everyone, @TheNain38 voted for GPLv3-only so you can't license ZeroNet under GPLv3+. ", "added": 1575629951, "modified": 1575629951, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562581691", "source_type": "github"}, {"comment_id": 1088, "body": "You can relicense **your own code**, not other's code.", "added": 1575630385, "modified": 1575630385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562584298", "source_type": "github"}, {"comment_id": 1089, "body": "Can you please stop upvoting your own comments", "added": 1575631060, "modified": 1575631060, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562588344", "source_type": "github"}, {"comment_id": 1090, "body": "You MUST but it doesn't mean you MAY.", "added": 1575631074, "modified": 1575631074, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562588411", "source_type": "github"}, {"comment_id": 1091, "body": "Distributing ZeroNet might be illegal but the only person who can sue us is some library author. That is most likely not going to happen anytime soon.", "added": 1575631504, "modified": 1575631504, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562591033", "source_type": "github"}, {"comment_id": 1092, "body": "*I think that #2269 would be a better place but it's locked so I have to post here*\r\n\r\nSome \"good\" news: it's unlikely that gevent-websocket's author will *ever* reply (https://gitlab.com/noppo/gevent-websocket/issues/19) so we'll have to make our own library.", "added": 1575906197, "modified": 1575906197, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-563374641", "source_type": "github"}, {"comment_id": 1093, "body": "Contributors allowed us to distribute their work under GPLv2, not GPL. ", "added": 1575983412, "modified": 1575983423, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564106488", "source_type": "github"}, {"comment_id": 1094, "body": "> address@hidden\r\n\r\nI'd like to send a mail as well, please reveal the address. ", "added": 1576492148, "modified": 1576492148, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-566061035", "source_type": "github"}, {"comment_id": 1095, "body": "> Not in ZeroNet's case! It is licensed under GPL and no version is specified (yet) because GPLv2 is terminated!\r\n\r\nIt's either licensed under GPLv2 or under no license.", "added": 1576586762, "modified": 1576586762, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-566598776", "source_type": "github"}, {"comment_id": 1096, "body": "It looks like we're going to switch to GPLv3 (as it got most upvotes and is also similar to the old license) so I've made a list of contributors whose contributions definitely have to be removed (regardless of whether it's GPLv3+ or GPLv3-only):\r\n\r\n- @MuxZeroNet (#938, #752, #884, #834, #848, #810, #764, #753, #749, #743)\r\n- @grez911 (#1096, #1091, #1082, #1076, #949, #942)\r\n- @rainlime (#618, #617)\r\n- @barrabinfc (#305, #278)\r\n- @0polar (#1926, #1925, #1922, #1923)\r\n- @anoadragon453 (#1819, #1901, #1900, #1146, #1070, #1023)\r\n- @Th3B3st (#826, #825, #821, #819)\r\n- @krzotr (#2449, #2453, #2187, #2179, #1983, #1975)\r\n- @ymsky / nathantym (#38, #37)\r\n- @frerepoulet (#680, #671, #663)\r\n- @aitorpazos (#587)\r\n- @TigerND / jTeego (#96)\r\n- @yowmamasita (#292)\r\n- @AwesomeTurtle / tormath1 (#890)\r\n- @rarbg (#121)\r\n- @hugbubby (#1781, #1741)\r\n- @mishfit (#912, #842)\r\n- @Austin-Williams (#155)\r\n- @EdenSG (#113)\r\n- @Erkan-Yilmaz (#387)\r\n- @shakna-israel (#26)\r\n- @justinwiley (#705)\r\n- @medimatrix (#14)\r\n- @Nodeswitch (#13)\r\n- @Ornataweaver (#2232)\r\n- @RedbHawk (#1281)\r\n- @rcmorano (#687)\r\n- @krikmo (#247)\r\n- @leycec (#952)\r\n- @Derson5 (#708)", "added": 1584288210, "modified": 1584448966, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-599250757", "source_type": "github"}, {"comment_id": 1097, "body": "True, this is something I wasn't completely sure about so I've decided to be more safe. Will fix. ", "added": 1584322570, "modified": 1584322570, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-599340873", "source_type": "github"}, {"comment_id": 1098, "body": "They aren't code but they are still contributions. ", "added": 1584330786, "modified": 1584330786, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-599372785", "source_type": "github"}, {"comment_id": 1099, "body": "They could be treated differently if it was specified before... ", "added": 1584354211, "modified": 1584354211, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-599533698", "source_type": "github"}, {"comment_id": 1100, "body": "In fact, the license itself doesn't vary, it's the Standard License Header which does:\r\n\r\nGPLv3-only:\r\n\r\n```\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, version 3.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\r\n```\r\n\r\nGPLv3+:\r\n\r\n```\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n```", "added": 1584407608, "modified": 1584407608, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-599868565", "source_type": "github"}, {"comment_id": 1101, "body": "True, I wasn't showing the license but the Standard License Header.", "added": 1584435521, "modified": 1584435521, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-600031693", "source_type": "github"}, {"comment_id": 1102, "body": "Great, I wouldn't close this issue yet though, we should get rid of [these](https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-599250757) contributions before.", "added": 1584442448, "modified": 1584442448, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-600084191", "source_type": "github"}, {"comment_id": 1103, "body": "@HostFat We'll sure replace it soon I guess, unless you are ready to license it under GPLv3.", "added": 1584444186, "modified": 1584444186, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-600098892", "source_type": "github"}, {"comment_id": 1104, "body": "Just post a comment \"GPLv3\" under this issue.", "added": 1584445138, "modified": 1584445138, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-600107147", "source_type": "github"}, {"comment_id": 1105, "body": "Thanks, I've updated the list.", "added": 1584448974, "modified": 1584448974, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-600141926", "source_type": "github"}, {"comment_id": 1106, "body": "Yes, please.", "added": 1584453881, "modified": 1584453881, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-600187743", "source_type": "github"}], "1604067633_mirrored_Merith-TK_github": [{"comment_id": 1107, "body": "Add `zero.example.com` to config to `ui_host`, like this:\r\n\r\n```\r\n[global] \r\n... \r\nui_host =\r\n zero.example.com\r\n```", "added": 1572919152, "modified": 1572919152, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2287#issuecomment-549663199", "source_type": "github"}, {"comment_id": 1108, "body": "My best guess is that ZeroNet doesn't like port change, hostname change and (possibly) protocol change happening at the same time. I would make CaddyServer set `Host` and `Origin` headers to `http://127.0.0.1:43110`.", "added": 1572970704, "modified": 1572970704, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2287#issuecomment-549977050", "source_type": "github"}, {"comment_id": 1109, "body": "They say `proxy_header Origin \"127.0.0.1:43110\"` (and the same for Host as well) would work.", "added": 1572974628, "modified": 1572974628, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2287#issuecomment-550003849", "source_type": "github"}, {"comment_id": 1110, "body": "Can you show me your config please? I haven't worked with caddyserver before but I can help you to google, lol. ", "added": 1573008841, "modified": 1573008854, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2287#issuecomment-550156619", "source_type": "github"}, {"comment_id": 1111, "body": "> i think we have a reaction spammer\r\n\r\nWe know... at least he doesn't spam with comments.\r\n\r\n> B)\r\n\r\nHave you tried adding `proxy_header Origin \"127.0.0.1:43110\"` after `proxy` line? Also add the same with Host instead of Origin.", "added": 1573047241, "modified": 1573047241, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2287#issuecomment-550391669", "source_type": "github"}], "1604067628_mirrored_HarpyX_github": [{"comment_id": 1112, "body": "All your private keys are stored in `data/users.json` file. If you want to backup your ZeroID, site private keys and encryption keys, that's everything you need. You might also want to backup `data/sites.json` (downloaded site list), `data/filter.json` (if you use blocklists) or the whole `data` directory if you don't want to redownload everything.", "added": 1573041270, "modified": 1573041270, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2289#issuecomment-550345710", "source_type": "github"}, {"comment_id": 1113, "body": "@HarpyX Did that answer your question? ", "added": 1573121744, "modified": 1573121744, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2289#issuecomment-551074210", "source_type": "github"}, {"comment_id": 1114, "body": "@HarpyX @HelloZeroNet can someone close the issue please? ", "added": 1573262116, "modified": 1573262116, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2289#issuecomment-552064471", "source_type": "github"}], "1604067687_mirrored_ghost_github": [{"comment_id": 1115, "body": "Is there any reason for using `modified` for your value instead of another name? Based on your username, `_last_update` should work well (notice that I used `_` because that name might collide with some site-specific settings).", "added": 1573054269, "modified": 1573054269, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550441334", "source_type": "github"}, {"comment_id": 1116, "body": "> where are those site specific settings?\r\n\r\nI mean, some sites (e.g. ZeroTalk and Git Center) use content.json to store their settings there.", "added": 1573055605, "modified": 1573055605, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550450029", "source_type": "github"}, {"comment_id": 1117, "body": "> I'm using other timestamps along with the basic POSIX of what is shipped with ZeroNet\r\n\r\nHm, if you're using POSIX timestamp already, can you maintain *both* `modified` and `_my_fancy_modified`? This will allow your modification to be ZeroNet-compatible. I also don't see any problems with this.\r\n\r\n> I also get rid of the zeronet_version from content.json for a very good reason.\r\n\r\nCan you elaborate please? AFAIK we don't use it but it might be a good way to monitor how people update.", "added": 1573055726, "modified": 1573055726, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550450809", "source_type": "github"}, {"comment_id": 1118, "body": "Also, `modified` is used directly for p2p communication to spread user file updates. Replacing it will most likely render ZeroNet unusable.", "added": 1573055806, "modified": 1573055806, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550451354", "source_type": "github"}, {"comment_id": 1119, "body": "> That's is fine @imachug since I don't use any of those...\r\n\r\nSo are you going to make a private-use ZeroNet fork? I guess it's fine then.\r\n\r\n> If you send the version number may someone will come up with a ZeroDay or just come to GitHub check the issues and will attack people who has a specific version...\r\n\r\nNot really. Trial-and-error would work as well even if we didn't send version.", "added": 1573056170, "modified": 1573056170, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550453913", "source_type": "github"}, {"comment_id": 1120, "body": "> and again is unethical to monitor those numbers by you or anyone else!\r\n\r\nBut why? It's quite useful for development, isn't it? We send the version in p2p protocol but I don't know why it's used in content.json actually. @HelloZeroNet Is there a reason?", "added": 1573056211, "modified": 1573056211, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550454186", "source_type": "github"}, {"comment_id": 1121, "body": "> I found no problem until now.\r\n\r\nYou're probably going to notice it later, lol. Currently `listModified` p2p command accesses ContentDb to get `modified` property, and that one is filled from content.json. Thinking more about that, you might be able to use either of these solutions:\r\n\r\n- Either leave `modified` as-is and add your own property;\r\n- If you want to change the way files are checked / downloaded, replace `modified` with something like version number (i.e. something that increases every time a change is made) and possible also use another property for version metadata or something;\r\n- Another way is to replace `modified` with your own object and modify half of ZeroNet code to parse that value correctly.\r\n\r\nI don't understand what your usecase is. I think that option 2 will work for you but if it doesn't, I would need some more information to help you. You can publish it here or to imachug@gmail.com if you want to keep it secret.", "added": 1573056928, "modified": 1573056928, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550458894", "source_type": "github"}, {"comment_id": 1122, "body": "Actually, it *is* UTC time [as per this SO answer](https://stackoverflow.com/a/16554944). I am not sure why json.dumps provides incorrect results, let me take a look.", "added": 1573059039, "modified": 1573059039, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550472815", "source_type": "github"}, {"comment_id": 1123, "body": "That SO answer was just to explain that `time.time()` returns UTC time (at least on common OSes).", "added": 1573059474, "modified": 1573059474, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550475721", "source_type": "github"}, {"comment_id": 1124, "body": "Actually you haven't replaced all \"modified\" instances, e.g. here:\r\n\r\n```python\r\n                    sign_content = sign_content.replace(\r\n                        '\"modified\": %s' % repr(modified),\r\n                        '\"modified\": %s' % modified_fixed\r\n                    )\r\n```\r\n\r\nMake sure to fix those as well.", "added": 1573059537, "modified": 1573059537, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550476074", "source_type": "github"}, {"comment_id": 1125, "body": "`modified_fixed` stands for \"recovered\" or something like that here. Some Python implementations might give slightly incorrect results so ZeroNet fixes them.", "added": 1573060903, "modified": 1573060903, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550484205", "source_type": "github"}, {"comment_id": 1126, "body": "TBH I don't see any reason for any additional quotes", "added": 1573060980, "modified": 1573060980, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550484670", "source_type": "github"}, {"comment_id": 1127, "body": "> You mean incorrect timestamp?\r\n\r\nThe timestamp was *mostly* correct, but it could be off by one or two digits because that's how floating arithmetic works.", "added": 1573061261, "modified": 1573061261, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550486344", "source_type": "github"}, {"comment_id": 1128, "body": "Why's that? How is this new format better than POSIX timestamp?", "added": 1573061474, "modified": 1573061474, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2290#issuecomment-550487649", "source_type": "github"}], "1604067689_mirrored_ghost_github": [{"comment_id": 1129, "body": "Eh, we aren't as big as Mozilla but before you came here, we were quite a good community.", "added": 1573055572, "modified": 1573055572, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2291#issuecomment-550449820", "source_type": "github"}, {"comment_id": 1130, "body": "Add filips123, anoadragon453, geekless, glightstar and quite a few other active users.", "added": 1573055949, "modified": 1573055949, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2291#issuecomment-550452365", "source_type": "github"}], "1604067632_mirrored_Miserlou_github": [{"comment_id": 1131, "body": "Actually, ZeroNet doesn't distribute the whole database. Instead, it distributes *data files* which are usually JSON files, optionally compressed. For example, your ZeroTalk posts are stored in `data/users/youraddress/data.json` file which gets distributed via p2p.\r\n\r\nThe database is created locally and is not shared. It is only used to speed up queries and can be in theory removed. Notice that this database is read-only; so sites modify data files to make a comment, then ZeroNet distributes this file update via p2p and updates the local database. When other peers receive data file update, they also reload this file to update their local database. As most files are small enough, database updates are usually very fast.", "added": 1573059358, "modified": 1573059358, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-550474948", "source_type": "github"}, {"comment_id": 1132, "body": "ZeroNet doesn't use database for blobs, they are just stored as files. It's however rather common to store metadata in data files and big data in separate files; for example, ZeroUp does exactly this.\r\n\r\nNow, if we're talking about separate files, ZeroNet distributes files *diff* instead of files themselves whenever possible. If that's impossible (e.g. the peer doesn't have any previous file version), so-called *big* files (more than 10MB IIRC) are split into 0.5MB (again, the value might be slightly off here but it doesn't matter much) chunks that can be fetched from several peers in parallel, like Torrent.", "added": 1573060811, "modified": 1573060811, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-550483676", "source_type": "github"}, {"comment_id": 1133, "body": "Almost. You can check the format at `src/util/Diff.py`.", "added": 1573061352, "modified": 1573061352, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-550486923", "source_type": "github"}, {"comment_id": 1134, "body": "Do you think this issue is resolved or do you have any other questions? If you don't, would you close this issue please? ", "added": 1573121702, "modified": 1573121702, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-551073962", "source_type": "github"}, {"comment_id": 1135, "body": "/cc @HelloZeroNet ", "added": 1573126311, "modified": 1573126311, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-551103900", "source_type": "github"}], "1604067693_mirrored_ghost_github": [{"comment_id": 1136, "body": "What the heck! @HelloZeroNet Can we make a cooldown already or at least block users faster? ZeroNet issue tracker is being needlessly spammed. @zeronettimemachine Please don't create any issues anymore, use the ones you've created already.", "added": 1573060548, "modified": 1573060548, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2293#issuecomment-550482144", "source_type": "github"}], "1604067645_mirrored_Merith-TK_github": [{"comment_id": 1137, "body": "On what sites does that happen? ", "added": 1573262074, "modified": 1573262074, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552064431", "source_type": "github"}, {"comment_id": 1138, "body": "Ok, so it looks like CloudFlare uses a script loader to load our scripts. ZeroNet uses CSP for security and adds nonce to all scripts; the logs you sent show that cloudflare didn't add the nonce to its script loader. I would recommend you to disable Rocket Loader. [Here's a link](https://documentation.deadlinefunnel.com/article/511-how-to-disable-cloudflare-rocket-loader) that shows how to do that. ", "added": 1573265768, "modified": 1573265878, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552067717", "source_type": "github"}, {"comment_id": 1139, "body": "CloudFlare refers to Rocker Loader as to an unsafe speed up, so I guess it'd be better just to disable it.", "added": 1573293007, "modified": 1573293007, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552097279", "source_type": "github"}, {"comment_id": 1140, "body": "Eh, removing nonces doesn't look like a good idea to me. That's kinda unsafe, isn't it?", "added": 1573310673, "modified": 1573310673, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552121640", "source_type": "github"}], "1604067699_mirrored_ghost_github": [{"comment_id": 1141, "body": "Sure, let them stay this way in your repository. But please don't affect ours.", "added": 1573314861, "modified": 1573314861, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552127101", "source_type": "github"}, {"comment_id": 1142, "body": "Words don't count as contribution, code does! Go RTFM.", "added": 1573316678, "modified": 1573316678, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552129487", "source_type": "github"}, {"comment_id": 1143, "body": "Telling people about problems is **not** a contribution from legal side. ", "added": 1573318338, "modified": 1573318338, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552131587", "source_type": "github"}, {"comment_id": 1144, "body": "@CyberSecurityEngineer Sure! Feel free to report me if you want to.", "added": 1573319237, "modified": 1573319237, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552132846", "source_type": "github"}, {"comment_id": 1145, "body": "We are not shameful for reporting users who are attacking us as a project and personally instead of making a discussion.", "added": 1573319279, "modified": 1573319279, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552132904", "source_type": "github"}, {"comment_id": 1146, "body": "That's the best answer I could find for you, given that you didn't react to my \"words are not contributions\" phrase. Please elaborate on your views.", "added": 1573319402, "modified": 1573319402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552133065", "source_type": "github"}, {"comment_id": 1147, "body": "I am working on MIT-licensed library alternatives right now. And what have you done to fix license problems?", "added": 1573319534, "modified": 1573319534, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552133204", "source_type": "github"}, {"comment_id": 1148, "body": "ZeroNet does not support a better solution now. KxoID hasn't existed back then.", "added": 1573319634, "modified": 1573319634, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552133341", "source_type": "github"}, {"comment_id": 1149, "body": "I'd like to but I'm afraid I don't have some of Git Center keys anymore. I'll try to find them soon though.", "added": 1573319708, "modified": 1573319708, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552133442", "source_type": "github"}, {"comment_id": 1150, "body": "That's *not* simple. First, that's not supported by ZeroNet. Second, that doesn't solve spam problems.", "added": 1573319960, "modified": 1573319960, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552133802", "source_type": "github"}, {"comment_id": 1151, "body": "That's even more centralization, lol.", "added": 1573320199, "modified": 1573320199, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552134116", "source_type": "github"}, {"comment_id": 1152, "body": "Ok, so thinking more about it: spammers can easily abuse this by making a single commit every day.", "added": 1573320334, "modified": 1573320334, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552134275", "source_type": "github"}], "1604067702_mirrored_ghost_github": [{"comment_id": 1153, "body": "Can you link me to an example file that doesn't work?", "added": 1573370309, "modified": 1573370309, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2297#issuecomment-552181419", "source_type": "github"}, {"comment_id": 1154, "body": "Eh, I remember what I wrote and re-read the thread before answering just in case. They said that it doesn't work on *some* videos so I wanted to check whether those videos are somewhat special that breaks mimetype detection, or whether it's a completely different problem.", "added": 1573388163, "modified": 1573388163, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2297#issuecomment-552203636", "source_type": "github"}], "1604067710_mirrored_ghost_github": [{"comment_id": 1155, "body": "To add to what nofish said: now what? It would matter if private keys were generated unrandomly but these are just addresses. ", "added": 1573636878, "modified": 1573636878, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2302#issuecomment-553380670", "source_type": "github"}, {"comment_id": 1156, "body": "> keep on generating the addresses.\r\n\r\nLol, of course you'll get a nice sequence if you try searching it for a long while...\r\n\r\n> @imachug if you publish more than 100 site on ZeroNet than an observer can tell that you used master_seed to generate the addresses. This by itself is a problem.\r\n\r\nEh... no it's not.\r\n\r\n> Most addresses generated using master_seed have 2 or more common characters and following the 1+123456789ABCDEFGHJKLMNPQ pattern over and over. After a time there is no address left which begins with the 12 characters and the loop continues as 121 122, 123, 12A, 12B etc.\r\n\r\nCool! We've just broken SHA-256 as well as elliptic curve-based cryptography! Or you're just pretending which is most likely, judging by your username and registration date.", "added": 1573660022, "modified": 1573660022, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2302#issuecomment-553545325", "source_type": "github"}, {"comment_id": 1157, "body": "> I doubt you even know what is elliptic curve-based cryptography.\r\n\r\nI wrote my own cryptography libs but ok, I've just learned something new about myself.", "added": 1573665029, "modified": 1573665029, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2302#issuecomment-553580700", "source_type": "github"}], "1604067712_mirrored_ghost_github": [{"comment_id": 1158, "body": "Great! Just do it then.", "added": 1573664972, "modified": 1573664972, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2303#issuecomment-553580339", "source_type": "github"}], "1604067660_mirrored_Merith-TK_github": [{"comment_id": 1159, "body": "Hm, tbh I have no idea how it'd work with ZeroNet. ZeroNet is decentralized while Tor onion sites are centralized, so it'd be difficult to merge them. ", "added": 1573693834, "modified": 1573693834, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2305#issuecomment-553716006", "source_type": "github"}, {"comment_id": 1160, "body": "Hm, I don't really see the point in using ZeroNet instead of Tor Browser in this case. Tor Browser has always provided better sandboxing than ZeroNet. This doesn't mean that ZeroNet is unsafe, but it means that ZeroNet is not truly anonymous. ", "added": 1573698526, "modified": 1573698526, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2305#issuecomment-553731060", "source_type": "github"}], "1604067653_mirrored_tayyabali785_github": [{"comment_id": 1161, "body": "Hey @HelloZeroNet, can this be closed because of no reply?", "added": 1575906112, "modified": 1575906112, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2308#issuecomment-563374080", "source_type": "github"}], "1604067730_mirrored_slrslr_github": [{"comment_id": 1162, "body": "@AryA Some unexpected problems arise like backward compatibility, proxies support, non-loopbacked addresses (hello OS X), etc.", "added": 1575455123, "modified": 1575455123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2312#issuecomment-561644628", "source_type": "github"}, {"comment_id": 1163, "body": "@AyrA You want to use all the 127.0.0.0/16 for ZeroNet, right? First, on OS X only 127.0.0.1 is allowed, other addresses don't loopback.", "added": 1575457952, "modified": 1575457952, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2312#issuecomment-561662715", "source_type": "github"}, {"comment_id": 1164, "body": "@AyrA Ports shouldn't be used because some \"browsers\" (hello IE/Edge) treat different ports as same-origin. Also, opening many ports might be troublesome if you're hosting ZeroNet on some hosting provider. And not everyone uses domain names...", "added": 1575465341, "modified": 1575465341, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2312#issuecomment-561716666", "source_type": "github"}, {"comment_id": 1165, "body": "> site that figures out how to break out of the sandbox and run in the 127.0.0.1:43110 origin essentially has full control over the ZeroNet instance at that point.\r\n\r\nNot really. This used to be correct but it looks like almost all API calls are safe enough (i.e. there's no RCE possible and the best thing an attacker can get is private keys, but this can't be mitigated with any other sandbox).", "added": 1575469540, "modified": 1575469540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2312#issuecomment-561752823", "source_type": "github"}, {"comment_id": 1166, "body": "> It's 5.4 GB now\r\n\r\nO_o That's wrong for sure. What OS and ZeroNet version are you using? What sites do you seed?", "added": 1575470500, "modified": 1575470500, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2312#issuecomment-561759944", "source_type": "github"}, {"comment_id": 1167, "body": "> I will not believe you on that one, especially since you said yourself that only \"almost all\" calls are \"safe enough\".\r\n\r\nMy point was that it's not that bad as it was before. You know, there were some RCEs but everything I could find was fixed so I think it's a lot safer than before. As for private keys being stolen, that most likely won't happen because private keys aren't available via API and are only available during file signing.", "added": 1575470604, "modified": 1575470604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2312#issuecomment-561760602", "source_type": "github"}, {"comment_id": 1168, "body": "> your update gets through after 30 seconds\r\n\r\n...to a single peer that will shut down soon. Now what?", "added": 1575477527, "modified": 1575477527, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2312#issuecomment-561806416", "source_type": "github"}], "1604067664_mirrored_omaidb_github": [{"comment_id": 1169, "body": "It is `/Users/yourusername/Library/Application Support/ZeroNet/data/users.json` (not user.json).\r\n\r\n*I will refresh before commenting next time*", "added": 1573969590, "modified": 1573969617, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2316#issuecomment-554725275", "source_type": "github"}], "1604067668_mirrored_gjedeer_github": [{"comment_id": 1170, "body": "Can you attach the logs please? ", "added": 1574171050, "modified": 1574171050, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2319#issuecomment-555597131", "source_type": "github"}], "1604067671_mirrored_ahmadly_github": [{"comment_id": 1171, "body": "I'm afraid it's impossible. AFAIK (I might be wrong though) Iran cuts all outgoing/incoming connections which means that there is no way to connect any computers to build a network.", "added": 1574276195, "modified": 1574276195, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2322#issuecomment-556451529", "source_type": "github"}], "1604067685_mirrored_adrelanos_github": [{"comment_id": 1172, "body": "> I was personally attacked and discredited\r\n\r\n> these people are fascists criminals\r\n\r\n# :man_facepalming:", "added": 1574774712, "modified": 1574774727, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2326#issuecomment-558707675", "source_type": "github"}], "1604067680_mirrored_dhueys_github": [{"comment_id": 1173, "body": "What sites don't work?", "added": 1574686554, "modified": 1574686554, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2328#issuecomment-558218579", "source_type": "github"}], "1604067680_mirrored_omaidb_github": [{"comment_id": 1174, "body": "This means that the site you're posting the content on does not allow you to use so much space. You should either delete your old messages or ask the site owner to increase your space limit.", "added": 1574774594, "modified": 1574774594, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2329#issuecomment-558706767", "source_type": "github"}, {"comment_id": 1175, "body": "Oh, were you the owner of the site?", "added": 1574782875, "modified": 1574782875, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2329#issuecomment-558764611", "source_type": "github"}, {"comment_id": 1176, "body": "> If it's not your site than why you care?\r\n\r\nProbably because it's his data. It looks like you're running out of space on ZeroMe. I'll take a look at your account rn. ", "added": 1575335675, "modified": 1575335675, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2329#issuecomment-560990420", "source_type": "github"}], "1604067689_mirrored_Noruka_github": [{"comment_id": 1177, "body": "It looks like it's a Name.YO bug actually. @HelloZeroNet can we please maintain backward compatibility?? ", "added": 1575281673, "modified": 1575281673, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2336#issuecomment-560391254", "source_type": "github"}, {"comment_id": 1178, "body": "@HelloZeroNet Thanks for a quick response, at least I won't have to fix Name.YO... thanks.", "added": 1575286364, "modified": 1575286364, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2336#issuecomment-560421170", "source_type": "github"}], "1604067761_mirrored_ghost_github": [{"comment_id": 1179, "body": "Just in case... *Never* allow anyone to sign root content.json, only other content.json's. That's because clients wouldn't know whether site owner added them or they added themselves so ZeroNet *always* rejects content.json's that aren't signed with site private key.\r\n\r\n@HelloZeroNet Can we remove `signers` field support for root `content.json` please?", "added": 1575293030, "modified": 1575293043, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2337#issuecomment-560469188", "source_type": "github"}, {"comment_id": 1180, "body": "> Sub-folders doesn't have a content.json far as I see.\r\n\r\nThey do, take a look at ZeroTalk. There's data/users/content.json.\r\n\r\n> Imagine a news website like news.example.org where each category can have different signers like news.example.org/united-states/index.html and different signers for news.example.org/russia/index.html\r\n\r\nI'd do the following:\r\n\r\n- Root `content.json` would be used for site code;\r\n- Include `data/content.json` to `content.json`, this one would just be a common root for all data;\r\n- Include `data/united-states/content.json` to `data/content.json` *with the correct signing keys*;\r\n- Include `data/russia/content.json` to `data/content.json`, same here.\r\n\r\nYou (as a developer) would then sign root `content.json` and authors would sign `data/whatever/content.json`.", "added": 1575296912, "modified": 1575296912, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2337#issuecomment-560496225", "source_type": "github"}, {"comment_id": 1181, "body": "> I see your example and you should note that the data folder doesn't have content.json!\r\n\r\nOh? It does. I think I forgot some more (obvious to me) details though: exclude `data/.*` from `content.json`. Also exclude `russia/.*` and `united-states/.*` from `data/content.json`, as always.", "added": 1575305179, "modified": 1575305179, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2337#issuecomment-560551645", "source_type": "github"}, {"comment_id": 1182, "body": "@SwissConfederation I was referring to site's data folder. ", "added": 1575335716, "modified": 1575335716, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2337#issuecomment-560990541", "source_type": "github"}, {"comment_id": 1183, "body": "> Excluding everything like russia/.* and united-states/.* also excluding content.json in those folders.\r\n\r\nNo it doesn't as long as you add child content.json's to their parent content.json to `include` section. ", "added": 1575335765, "modified": 1575335765, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2337#issuecomment-560990675", "source_type": "github"}, {"comment_id": 1184, "body": "No you don't. That child content.json is ignored by root content.json so it doesn't have to be modified. You might wonder how the child file gets broadcasted but that's another story...\r\n\r\n@HelloZeroNet Can you close this orphaned issue please? ", "added": 1575367927, "modified": 1575367927, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2337#issuecomment-561160555", "source_type": "github"}], "1604067770_mirrored_imachug_github": [{"comment_id": 1185, "body": "Ignore the failing checks, it's just a coincidence (@HelloZeroNet I guess you'll have to increase some constants)", "added": 1575293318, "modified": 1575293318, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560471325", "source_type": "github"}, {"comment_id": 1186, "body": "> Replacing the library in order to avoid changing the license will not replace the library in my copy and other 1,900 forks!\r\n\r\nOther forks would be illegal but at least the official one would be fine. ", "added": 1575336074, "modified": 1575336092, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560991693", "source_type": "github"}, {"comment_id": 1187, "body": "> You can't re-license part of ZeroNet\r\n\r\nI can't, but nofish can relicense some of his code. Not as if it's related to this PR... \r\n\r\n> Theymos will be happy to hear it!\r\n\r\nWho's that guy? AFAIK all/most pybitcointools forks are abandoned.", "added": 1575336323, "modified": 1575336323, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560992481", "source_type": "github"}, {"comment_id": 1188, "body": "Cool! Please share benchmark results later. As for the libraries, can we somewhat simulate pip by downloading new packages to, say, src/lib/_pip and using them if pip is not available? ", "added": 1575368110, "modified": 1575368110, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561161598", "source_type": "github"}, {"comment_id": 1189, "body": "Hey @HelloZeroNet, I've moved sslcrypto to src/lib. Please take a look at it now.", "added": 1575383517, "modified": 1575383517, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561274139", "source_type": "github"}, {"comment_id": 1190, "body": "I think I will update sslcrypto soon (refactoring, you know) so I'd better not have two possible versions (one from PyPI and one from the bundle). I'd remove sslcrypto from requirements.txt for now and add it when we get better packaging working.", "added": 1575384096, "modified": 1575384096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561277839", "source_type": "github"}, {"comment_id": 1191, "body": "I've just uploaded a refactored sslcrypto version and also added pyaes to as a dependency.", "added": 1575390218, "modified": 1575390218, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561318071", "source_type": "github"}, {"comment_id": 1192, "body": "@HelloZeroNet Can you merge this now? ", "added": 1575978253, "modified": 1575978253, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-564064776", "source_type": "github"}, {"comment_id": 1193, "body": "O_o I'll check that, thanks. ", "added": 1576026800, "modified": 1576026800, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-564372004", "source_type": "github"}, {"comment_id": 1194, "body": "@HelloZeroNet I've added OpenSSL path to `get_backend` and also made sslcrypto thread-safe. Please check it again.", "added": 1576069598, "modified": 1576069598, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-564613873", "source_type": "github"}, {"comment_id": 1195, "body": "O_o It still segfaults on Python 3.4, wtf.", "added": 1576072053, "modified": 1576072053, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-564632433", "source_type": "github"}, {"comment_id": 1196, "body": "The tests were restarted for some reason so they might pass, but please don't merge the PR before I figure out the problem!", "added": 1576072698, "modified": 1576072709, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-564637205", "source_type": "github"}, {"comment_id": 1197, "body": "Hm, I'm not sure whether it was a Python 3.4 bug or it was a global highly-unlikely-to-reproduce bug. I'd better stress-test this a bit more.", "added": 1576073886, "modified": 1576073886, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-564645303", "source_type": "github"}, {"comment_id": 1198, "body": "> Thanks, looks like the segfault got fixed!\r\n\r\nNot really, I haven't touched anything. I'd run it under valgrind but I don't have a linux machine right now.", "added": 1576113803, "modified": 1576113803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-564843642", "source_type": "github"}, {"comment_id": 1199, "body": "> For some reason on Python 3.4 sslcurve.private_to_address(priv, is_compressed=False) returns string instead of bin\r\n\r\nHm, are you sure? I've run sslcrypto and ZeroNet tests under Python 3.4.10 and I also tried to run the code under 3.4.0 but it always returns bytes. Do you have reproduction steps or something?", "added": 1576149798, "modified": 1576149798, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565027009", "source_type": "github"}, {"comment_id": 1200, "body": "> I think that segfault was not connected with the library as (if i remember right) it happened in one of the site downloading tests where openssl library is not used at all\r\n\r\nI hope so.", "added": 1576149872, "modified": 1576149872, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565027461", "source_type": "github"}, {"comment_id": 1201, "body": "@HelloZeroNet Ready to be merged.", "added": 1576150154, "modified": 1576150154, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565029317", "source_type": "github"}, {"comment_id": 1202, "body": "I've just received [the old log](https://gist.github.com/ssabrii/495e4ff94b0cf39e16a831bc0805a498) from Travis CI support. It looks like Crypt *is* used in that test.", "added": 1576161426, "modified": 1576161426, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565108547", "source_type": "github"}, {"comment_id": 1203, "body": "> What changed in the signature method that makes it generates different signs?\r\n\r\nFixed, thanks for reporting!\r\n\r\n> Previously I have not tested the verification speed, as libsecp256k1 is the main lib we use there, but looks like it got affected in negative way:\r\n\r\nThe main reason for that is some legacy code I forgot to remove which made verification run twice. It's fixed now (and I've added a few more optimizations just in case).\r\n\r\nHere are my results:\r\n\r\nWith sslcrypto:\r\n\r\n```\r\n$ py -3 zeronet.py test benchmark --filter testVerify\r\n* Running testVerify ({'lib_verify': 'sslcrypto_fallback'}) x 20 .......... Done in 0.172s = Fast (2.21x)\r\n* Running testVerify ({'lib_verify': 'sslcrypto'}) x 200 .......... Done in 1.295s = Sloooow (0.23x)\r\n* Running testVerify ({'lib_verify': 'libsecp256k1'}) x 200 .......... Done in 0.328s = Ehh (0.31x)\r\n```\r\n\r\nWithout sslcrypto:\r\n\r\n```\r\n$ py -3 zeronet.py test benchmark --filter testVerify\r\n* Running testVerify ({'lib_verify': 'btctools'}) x 20 .......... Done in 1.342s = Sloooow (0.28x)\r\n* Running testVerify ({'lib_verify': 'openssl'}) x 200 .......... Done in 1.248s = Sloooow (0.24x)\r\n* Running testVerify ({'lib_verify': 'libsecp256k1'}) x 200 .......... Done in 0.328s = Ehh (0.31x)\r\n```\r\n\r\nSo libsecp256k1 and OpenSSL are about as fast -- sometimes sslcrypto is faster than openssl, sometimes it's not but I think such slight differences don't matter much. The fallback implementation is several times faster.", "added": 1576258278, "modified": 1576258609, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565598140", "source_type": "github"}, {"comment_id": 1204, "body": "> So for me libsecp256k1 still significantly faster\r\n\r\nThis is actually correct. libsecp256k1 is a secp256k1-specific library which has lots of optimizations for this curve. On the other hand, OpenSSL supports all kinds of curves and doesn't have any curve-specific optimizations. ", "added": 1576285833, "modified": 1576285833, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565680478", "source_type": "github"}, {"comment_id": 1205, "body": "> but for some reason the sslcrypto_fallback seems almost as fast as the non-fallback, so I suspect it's also using openssl is some form\r\n\r\nDamn, I'm really sorry for so many mistakes. It should be fixed now.", "added": 1576286306, "modified": 1576286306, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565681015", "source_type": "github"}, {"comment_id": 1206, "body": "> It would be great to try reproduce the environment and see if we can trigger the segfault there.\r\n\r\nI don't have a Linux machine rn so I can't run valgrind. Can someone do that for me?", "added": 1576336475, "modified": 1576336475, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565739708", "source_type": "github"}, {"comment_id": 1207, "body": "Yay thanks! ", "added": 1576400892, "modified": 1576400892, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565803734", "source_type": "github"}, {"comment_id": 1208, "body": "Hey @HelloZeroNet I managed to reproduce segfault on GitHub actions. Please revert this PR until I get rid of the problem.", "added": 1576417578, "modified": 1576417578, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565826046", "source_type": "github"}, {"comment_id": 1209, "body": "Here are the logs in case someone wants to debug that:\r\n\r\n```\r\n2019-12-15T16:42:34.8799674Z Fatal Python error: Segmentation fault\r\n2019-12-15T16:42:34.8800244Z \r\n2019-12-15T16:42:34.8801375Z Current thread 0x00007fcb537fe700 (most recent call first):\r\n2019-12-15T16:42:34.8806417Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 280 in new_private_key\r\n2019-12-15T16:42:34.8811412Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 147 in new_private_key\r\n2019-12-15T16:42:34.8827943Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 201 in encrypt\r\n2019-12-15T16:42:34.8828534Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 105 in run\r\n2019-12-15T16:42:34.8828966Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.8829457Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.8829887Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.8830315Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.8830591Z \r\n2019-12-15T16:42:34.8830890Z Thread 0x00007fcb53fff700 (most recent call first):\r\n2019-12-15T16:42:34.8831286Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 53 in __init__\r\n2019-12-15T16:42:34.8831701Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 252 in _point_to_affine\r\n2019-12-15T16:42:34.8832117Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 296 in private_to_public\r\n2019-12-15T16:42:34.8832529Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 151 in private_to_public\r\n2019-12-15T16:42:34.8832936Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 213 in encrypt\r\n2019-12-15T16:42:34.8833360Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 105 in run\r\n2019-12-15T16:42:34.8835783Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.8840172Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.8845015Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.8849679Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.8850701Z \r\n2019-12-15T16:42:34.8852200Z Thread 0x00007fcb69a1c700 (most recent call first):\r\n2019-12-15T16:42:34.8856400Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 313 in ecdh\r\n2019-12-15T16:42:34.8915229Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 180 in derive\r\n2019-12-15T16:42:34.8920763Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 294 in decrypt\r\n2019-12-15T16:42:34.8981934Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 105 in run\r\n2019-12-15T16:42:34.8984726Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.8988112Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.8993806Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.8998247Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.8998392Z \r\n2019-12-15T16:42:34.9000252Z Thread 0x00007fcb6b21f700 (most recent call first):\r\n2019-12-15T16:42:34.9005176Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 294 in private_to_public\r\n2019-12-15T16:42:34.9056521Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 151 in private_to_public\r\n2019-12-15T16:42:34.9061130Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 204 in encrypt\r\n2019-12-15T16:42:34.9065434Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 105 in run\r\n2019-12-15T16:42:34.9069859Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.9074372Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.9083878Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.9141401Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.9142445Z \r\n2019-12-15T16:42:34.9143381Z Thread 0x00007fcb6921b700 (most recent call first):\r\n2019-12-15T16:42:34.9144412Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 278 in new_private_key\r\n2019-12-15T16:42:34.9145468Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 147 in new_private_key\r\n2019-12-15T16:42:34.9146509Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 201 in encrypt\r\n2019-12-15T16:42:34.9147534Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 105 in run\r\n2019-12-15T16:42:34.9148557Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.9149855Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.9150932Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.9152003Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.9152907Z \r\n2019-12-15T16:42:34.9153814Z Thread 0x00007fcb6a21d700 (most recent call first):\r\n2019-12-15T16:42:34.9154844Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 313 in ecdh\r\n2019-12-15T16:42:34.9155869Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 180 in derive\r\n2019-12-15T16:42:34.9156920Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 270 in decrypt\r\n2019-12-15T16:42:34.9157396Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 106 in run\r\n2019-12-15T16:42:34.9157782Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.9158167Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.9158597Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.9159508Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.9160077Z \r\n2019-12-15T16:42:34.9160393Z Thread 0x00007fcb6aa1e700 (most recent call first):\r\n2019-12-15T16:42:34.9160918Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 278 in new_private_key\r\n2019-12-15T16:42:34.9161391Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 147 in new_private_key\r\n2019-12-15T16:42:34.9161792Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 201 in encrypt\r\n2019-12-15T16:42:34.9162194Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 105 in run\r\n2019-12-15T16:42:34.9162557Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.9162956Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.9163388Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.9164098Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.9165046Z \r\n2019-12-15T16:42:34.9165391Z Thread 0x00007fcb68a1a700 (most recent call first):\r\n2019-12-15T16:42:34.9165809Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/openssl/ecc.py\", line 294 in private_to_public\r\n2019-12-15T16:42:34.9166215Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 151 in private_to_public\r\n2019-12-15T16:42:34.9167229Z   File \"/home/runner/work/sslcrypto/sslcrypto/sslcrypto/_ecc.py\", line 213 in encrypt\r\n2019-12-15T16:42:34.9167647Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 105 in run\r\n2019-12-15T16:42:34.9168019Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 12 in run\r\n2019-12-15T16:42:34.9168470Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 870 in run\r\n2019-12-15T16:42:34.9169136Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n2019-12-15T16:42:34.9169686Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n2019-12-15T16:42:34.9169964Z \r\n2019-12-15T16:42:34.9170268Z Thread 0x00007fcb72213700 (most recent call first):\r\n2019-12-15T16:42:34.9170685Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 1060 in _wait_for_tstate_lock\r\n2019-12-15T16:42:34.9171492Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/threading.py\", line 1044 in join\r\n2019-12-15T16:42:34.9173786Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/conf.py\", line 22 in decorated\r\n2019-12-15T16:42:34.9174607Z   File \"/home/runner/work/sslcrypto/sslcrypto/test/test_thread_safety.py\", line 109 in test_ecies\r\n2019-12-15T16:42:34.9176172Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/python.py\", line 166 in pytest_pyfunc_call\r\n2019-12-15T16:42:34.9178191Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n2019-12-15T16:42:34.9179794Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n2019-12-15T16:42:34.9181548Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n2019-12-15T16:42:34.9183120Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n2019-12-15T16:42:34.9184591Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/python.py\", line 1435 in runtest\r\n2019-12-15T16:42:34.9186084Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/runner.py\", line 131 in pytest_runtest_call\r\n2019-12-15T16:42:34.9187579Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n2019-12-15T16:42:34.9189564Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n2019-12-15T16:42:34.9192586Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n2019-12-15T16:42:34.9194936Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n2019-12-15T16:42:34.9197022Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/runner.py\", line 207 in <lambda>\r\n2019-12-15T16:42:34.9199161Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/runner.py\", line 234 in from_call\r\n2019-12-15T16:42:34.9201024Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/runner.py\", line 207 in call_runtest_hook\r\n2019-12-15T16:42:34.9203338Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/runner.py\", line 182 in call_and_report\r\n2019-12-15T16:42:34.9205151Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/runner.py\", line 96 in runtestprotocol\r\n2019-12-15T16:42:34.9206937Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/runner.py\", line 81 in pytest_runtest_protocol\r\n2019-12-15T16:42:34.9208697Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n2019-12-15T16:42:34.9210723Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n2019-12-15T16:42:34.9212481Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n2019-12-15T16:42:34.9214247Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n2019-12-15T16:42:34.9216000Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/main.py\", line 270 in pytest_runtestloop\r\n2019-12-15T16:42:34.9217761Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n2019-12-15T16:42:34.9219861Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n2019-12-15T16:42:34.9221798Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n2019-12-15T16:42:34.9223531Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n2019-12-15T16:42:34.9225271Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/main.py\", line 246 in _main\r\n2019-12-15T16:42:34.9227401Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/main.py\", line 196 in wrap_session\r\n2019-12-15T16:42:34.9229545Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/main.py\", line 239 in pytest_cmdline_main\r\n2019-12-15T16:42:34.9231382Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n2019-12-15T16:42:34.9233130Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n2019-12-15T16:42:34.9234872Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n2019-12-15T16:42:34.9236592Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n2019-12-15T16:42:34.9238330Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 92 in main\r\n2019-12-15T16:42:34.9240429Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/pytest/__main__.py\", line 7 in <module>\r\n2019-12-15T16:42:34.9242202Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/coverage/execfile.py\", line 229 in run\r\n2019-12-15T16:42:34.9244152Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/coverage/cmdline.py\", line 703 in do_run\r\n2019-12-15T16:42:34.9246917Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/coverage/cmdline.py\", line 555 in command_line\r\n2019-12-15T16:42:34.9249586Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/site-packages/coverage/cmdline.py\", line 824 in main\r\n2019-12-15T16:42:34.9251736Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/bin/coverage\", line 8 in <module>\r\n2019-12-15T16:42:41.2962217Z /home/runner/work/_temp/85e0b3f1-269e-45bc-8cb3-8af75c30d74a.sh: line 2:  9519 Segmentation fault      (core dumped) coverage run -m pytest test\r\n2019-12-15T16:42:41.2962656Z test/test_thread_safety.py::test_ecies \r\n2019-12-15T16:42:41.2967753Z ##[error]Process completed with exit code 139.\r\n2019-12-15T16:42:41.2997280Z Cleaning up orphan processes\r\n```", "added": 1576417856, "modified": 1576417856, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565826378", "source_type": "github"}, {"comment_id": 1210, "body": "Does anyone have a Linux machine they can share?", "added": 1576418324, "modified": 1576418324, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565826943", "source_type": "github"}, {"comment_id": 1211, "body": "Now *that's* something I haven't thought about... I'll give it a chance.", "added": 1576419631, "modified": 1576419640, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565828616", "source_type": "github"}, {"comment_id": 1212, "body": "Thanks, I'll take a look soon. Please revert this PR though.", "added": 1576419902, "modified": 1576419902, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565828957", "source_type": "github"}, {"comment_id": 1213, "body": "No idea.", "added": 1576597725, "modified": 1576597725, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-566697020", "source_type": "github"}, {"comment_id": 1214, "body": "I'm running stress tests on the VM... let's see if I get any results.", "added": 1576672373, "modified": 1576672379, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-567082264", "source_type": "github"}, {"comment_id": 1215, "body": "400 tests and... nothing. What am I expected to do now? valgrind doesn't detect any memory corruption as well.", "added": 1576674478, "modified": 1576674478, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-567098493", "source_type": "github"}], "1604067701_mirrored_krzysztof113_github": [{"comment_id": 1216, "body": "Did you run setup.py yourself or did pip call it? It looks weird, this has never happened before.", "added": 1575555467, "modified": 1575555467, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2341#issuecomment-562226323", "source_type": "github"}], "1604067707_mirrored_pexo-zn_github": [{"comment_id": 1217, "body": "This is blocking for me. @HelloZeroNet Do you think I could implement it?", "added": 1582532838, "modified": 1582532838, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2350#issuecomment-590276903", "source_type": "github"}, {"comment_id": 1218, "body": "I'm not sure, I think I need to generate lots of IDs so probably inserting all the IDs to `certSelect` will clutter it. What about a separate `Anonymous` option in the dialog that allows the site to update the ID with an API call? It's transparent for the user and easy to use and implement. (of course the option should only be shown if `certSelect` is given a special `show_anonymous` argument).", "added": 1582555156, "modified": 1582555156, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2350#issuecomment-590457377", "source_type": "github"}, {"comment_id": 1219, "body": "LGTM. Is there any wisdom behind choosing 10240 as a limit? Or is it just a \"nice\" number? (a good parody of 1.44 MB)", "added": 1582562119, "modified": 1582562119, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2350#issuecomment-590510164", "source_type": "github"}, {"comment_id": 1220, "body": "AFAIK there's none. Limiting the index to 10000 should work. I'll start implementing it soon. ", "added": 1582600617, "modified": 1582600617, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2350#issuecomment-590703095", "source_type": "github"}], "1604067794_mirrored_imachug_github": [{"comment_id": 1221, "body": "@HelloZeroNet Please take a look at [this ZeroTalk thread](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1578976152_17FotRRc6msHBzM2jrs6tQCmpLaXi1kHd5). Do you know what could cause that problem?", "added": 1579026028, "modified": 1579026028, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2358#issuecomment-574379287", "source_type": "github"}], "1604067790_mirrored_ghost_github": [{"comment_id": 1222, "body": "*/ban @ezdr*\r\n\r\nYou can run a local ZeroName instance or use another DNS like Name.YO.", "added": 1576399134, "modified": 1576399134, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565801445", "source_type": "github"}, {"comment_id": 1223, "body": "@HelloZeroNet Close this issue please. ", "added": 1576400440, "modified": 1576400440, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565803195", "source_type": "github"}], "1604067744_mirrored_styromaniac_github": [{"comment_id": 1224, "body": "Even if emoji aren't good [enough], some way to notify a person about changes would be useful. One problem is that most browsers tend to swap out pages you haven't accessed for a while so the users wouldn't get a notification/title change/whatever whilst these sites are most likely the ones you're monitoring most.", "added": 1576681167, "modified": 1576681167, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2362#issuecomment-567143084", "source_type": "github"}], "1604067721_mirrored_Zaefarani_github": [{"comment_id": 1225, "body": "@HelloZeroNet ...", "added": 1576680994, "modified": 1576680994, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2364#issuecomment-567142059", "source_type": "github"}, {"comment_id": 1226, "body": "> Basically they merged your work without giving you credit.\r\n\r\nBasically, adding a person to CONTRBUTORS.md (e.g.) file is not the only way to give credit. We're using Git for version control and it includes commit authors and such, so everyone who uses ZeroNet source code has a list of all changes including contributor names.", "added": 1576681068, "modified": 1576681068, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2364#issuecomment-567142503", "source_type": "github"}], "1604067723_mirrored_nazmifr_github": [{"comment_id": 1227, "body": "@decentralizedauthority Not all bugs can be reproduced on all machines. ", "added": 1576660828, "modified": 1576660828, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2365#issuecomment-567009410", "source_type": "github"}], "1604067816_mirrored_ghost_github": [{"comment_id": 1228, "body": "@HelloZeroNet Close this orphaned PR please.", "added": 1578237220, "modified": 1578237220, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2384#issuecomment-570934536", "source_type": "github"}, {"comment_id": 1229, "body": "@HelloZeroNet ", "added": 1582979207, "modified": 1582979207, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2384#issuecomment-592956384", "source_type": "github"}], "1604067823_mirrored_imachug_github": [{"comment_id": 1230, "body": "Uh, I can't. I was looking for a way to optimize network usage and noticed that compressing my JS files would be a simple yet efficent solution. For example, one of my sites takes about 1.6 MiB incompessed and 400 KiB compessed. ", "added": 1578282989, "modified": 1578282989, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571027351", "source_type": "github"}, {"comment_id": 1231, "body": "You didn't understand me. This optimization is not for proxies, this is for local clients. I (as a site owner) would compress my JS code to `main.js.gz` and use it like that.", "added": 1578300765, "modified": 1578300765, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571111716", "source_type": "github"}, {"comment_id": 1232, "body": "Based on [this SO thread](https://stackoverflow.com/a/24425286), it looks like Transfer-Encoding refers to *transport* layer and Content-Encoding is *payload*-related. This means that we should use Content-Encoding for files which were precompressed, and we might use Transfer-Encoding as an optimization in case the client supports it. This PR only handles the first usecase.", "added": 1578308235, "modified": 1578308235, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571147085", "source_type": "github"}, {"comment_id": 1233, "body": "@Crypto-Anarchist Right, that's **exactly** why I used Content-Encoding. I want the browser to save .js.gz and only decompress it in case use it in `<script>` tag and such.", "added": 1578313877, "modified": 1578313877, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571183967", "source_type": "github"}, {"comment_id": 1234, "body": "@HelloZeroNet I'm wondering if we can add some flag to files (e.g. a query string such as `?decompress`) because gzip'ing files is really common. It removes zip overhead, compresses files a bit better (I haven't measured that but I think 20% file size decrease is likely) and is also widely supported by bundlers such as webpack.", "added": 1578314051, "modified": 1578314051, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571185139", "source_type": "github"}, {"comment_id": 1235, "body": "Hm. Anyway, bundler support (as well as the fact that it's really common) idea still stands.", "added": 1578315160, "modified": 1578315160, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571192612", "source_type": "github"}, {"comment_id": 1236, "body": "> @imachug I think you can use Transfer-Encoding and compress your resources on-the-fly.\r\n\r\nThis is **not** for on-the-fly compression, it's to minimize network resource usage, it's to optimize peer-to-peer communications.", "added": 1578318609, "modified": 1578318609, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571215808", "source_type": "github"}, {"comment_id": 1237, "body": ">  The tar.bz support got removed earlier because it's pretty slow compression and crashed the Android client.\r\n\r\nGot it, I'll remove all the instances of `bz` then, ok?", "added": 1578318672, "modified": 1578318672, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571216269", "source_type": "github"}, {"comment_id": 1238, "body": "> I still think that using Transfer-Encoding is good and more beneficial than hacking ZeroNet itself.\r\n\r\nThis is **not for proxies**, that's for all the clients. I want this change to propagate the whole network before launching my service.", "added": 1578318724, "modified": 1578318724, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571216603", "source_type": "github"}, {"comment_id": 1239, "body": "What don't you understand in \"peer-to-peer communications\"? It's to minimize ZeroNet protocol bandwidth, not HTTP.", "added": 1578318990, "modified": 1578318990, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571218482", "source_type": "github"}, {"comment_id": 1240, "body": "Here's my usecase. The problem is that ZeroNet tends to share big files worse than several small files, that's why I split my scripts into several parts. Publishing compressed files would help me minimize file count and probably abandon splitting at all.", "added": 1578319051, "modified": 1578319058, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571218869", "source_type": "github"}, {"comment_id": 1241, "body": "Was that enough to prove my point? @Crypto-Anarchist ", "added": 1578319285, "modified": 1578319285, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571220440", "source_type": "github"}, {"comment_id": 1242, "body": "> Not like you can save a lot by compressing with gzip or zip\r\n\r\ngzip has 75% compression ratio for my scripts\r\n\r\n> in the other hand your javascript probably not soooo big.\r\n\r\nIt's 1.6 MiB right now and I haven't implemented a half of what I wanted.", "added": 1578319521, "modified": 1578319521, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571221921", "source_type": "github"}, {"comment_id": 1243, "body": "> Can I ask what are you up to? \ud83e\udd14\r\n\r\nI don't want to release any details right now, sorry. ", "added": 1578328223, "modified": 1578328223, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571278453", "source_type": "github"}, {"comment_id": 1244, "body": "First, this would be helpful for other sites as well. Second, I want to get this merged so that as many people as possible had an updated version at the release moment. ", "added": 1578329370, "modified": 1578329370, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571286542", "source_type": "github"}, {"comment_id": 1245, "body": "Do you **really** think software is less important than license? Anyways, do you want me to show you a usecase or what? I think I've explained it well enough. ", "added": 1578330497, "modified": 1578330497, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571293737", "source_type": "github"}, {"comment_id": 1246, "body": "I've shown it already: big files get propagated slowly. Compressing scripts would a) speed that up b) minimize required bandwidth ", "added": 1578331215, "modified": 1578331215, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571297969", "source_type": "github"}, {"comment_id": 1247, "body": "There we go, I added `?zeronet_content_encoding=...` query string handling to core. E.g.: `<script src=\"main.js.gz?zeronet_content_encoding=gzip\"></script>`", "added": 1578332982, "modified": 1578332982, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571308469", "source_type": "github"}, {"comment_id": 1248, "body": "There we go, sorry for endless problems.", "added": 1578372431, "modified": 1578372431, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571474982", "source_type": "github"}, {"comment_id": 1249, "body": "(misclick)\r\n\r\ninb4: gzipped HTML files are sandboxed correctly.", "added": 1578374447, "modified": 1578374447, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571484179", "source_type": "github"}, {"comment_id": 1250, "body": "Thanks.", "added": 1578379146, "modified": 1578379146, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385#issuecomment-571510512", "source_type": "github"}], "1604067745_mirrored_wizardforcel_github": [{"comment_id": 1251, "body": "@wizardforcel This means that ZeroNet couldn't find your site. Is the site listed in both sites.json and users.json? Does its directory contain `content.json` file?", "added": 1578300710, "modified": 1578300710, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2387#issuecomment-571111467", "source_type": "github"}], "1604067748_mirrored_dapplion_github": [{"comment_id": 1252, "body": "> This means that you can connect only to your main site, and then use as commands to access commands for other sites. But your main site (probably) needs to have ADMIN permission\r\n\r\nADMIN permission is not required if you use admin message IDs, i.e. greater than one million. ", "added": 1578740806, "modified": 1578740806, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2390#issuecomment-573319888", "source_type": "github"}], "1604067751_mirrored_TwinLizzie_github": [{"comment_id": 1253, "body": "You have to \"guess\" when the patch is finished, like this:\r\n\r\n```javascript\r\nvar loader = new THREE.STLLoader();\r\nloader.addEventListener( 'load', function(event) {\r\n    var geometry = event.content;\r\n    scene.add(new THREE.Mesh(geometry));\r\n});\r\n\r\nvar zeroFrame = new ZeroFrame();\r\nzeroFrame.monkeyPatchAjax();\r\nzeroFrame.onRequest = function(cmd, message) {\r\n    if(cmd == 'setSiteInfo') {\r\n        zeroFrame.onRequest = function() {};\r\n        loader.load('/stl/Demo.stl');\r\n    }\r\n};\r\n```\r\n\r\nThis is kind of a hack though, can we add a callback? @HelloZeroNet ", "added": 1578708942, "modified": 1578708961, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2392#issuecomment-573282900", "source_type": "github"}, {"comment_id": 1254, "body": "You have a slash before pathname which makes it resolve as an absolute path, not a relative path. Replace `/stl` with `stl`. ", "added": 1578712381, "modified": 1578712398, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2392#issuecomment-573286576", "source_type": "github"}, {"comment_id": 1255, "body": "Oh, I think I found the problem. You're creating two ZeroFrame instances: one directly and one via `new Page`. ", "added": 1578713112, "modified": 1578713112, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2392#issuecomment-573287374", "source_type": "github"}, {"comment_id": 1256, "body": "Oh, cool! That sounds like a good idea. Try the following:\r\n\r\n```javascript\r\nvar loader = new THREE.STLLoader();\r\nloader.addEventListener( 'load', function(event) {\r\n    var geometry = event.content;\r\n    scene.add(new THREE.Mesh(geometry));\r\n});\r\n\r\nvar zeroFrame = new ZeroFrame();\r\nzeroFrame.monkeyPatchAjax().then(() => loader.load('stl/Demo.stl'));\r\n```", "added": 1578740935, "modified": 1578740935, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2392#issuecomment-573320069", "source_type": "github"}], "1604067768_mirrored_jingyuexing_github": [{"comment_id": 1257, "body": "Don't create several ZeroFrame objects, use a single global object instead. ", "added": 1580802132, "modified": 1580802132, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2409#issuecomment-581847485", "source_type": "github"}, {"comment_id": 1258, "body": "> about use a single global object,NO!\r\n> because zeronet use iframe tag to build web pages,so,i can't use global object,and i tested,this way can't work .because have two scope,the page scope,in the iframe scope\r\n\r\nI'm not sure if you understood me. I mean something like a singletone. Instead of instancing new ZeroFrame instances on every route, create ZeroFrame once at the start of the app.", "added": 1580818933, "modified": 1580818933, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2409#issuecomment-581960661", "source_type": "github"}, {"comment_id": 1259, "body": "You should only use the info when the data has arrived. I haven't worked with Angular but the idea is to make the address and auth_key properties reactive, defaulting to null or some other empty value. When the siteInfo response is received, update the properties and re-render changed data. If you need the address to make some requests, another possible solution is to only start Angular when the data is received, i.e. inside the callback.", "added": 1580894167, "modified": 1580894167, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2409#issuecomment-582380481", "source_type": "github"}, {"comment_id": 1260, "body": "@HelloZeroNet Can this be closed?", "added": 1582977195, "modified": 1582977195, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2409#issuecomment-592953208", "source_type": "github"}], "1604067849_mirrored_slrslr_github": [{"comment_id": 1261, "body": "Can you please attach dbschema.json of the site please?", "added": 1580987169, "modified": 1580987169, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2411#issuecomment-582920360", "source_type": "github"}, {"comment_id": 1262, "body": "Sorry @slrslr, could you please upload data.json & content.json once again? They are most likely not required but it looks like they are missing now.", "added": 1580987676, "modified": 1580987738, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2411#issuecomment-582924074", "source_type": "github"}, {"comment_id": 1263, "body": "Were there any other lines containing \"Worker stopped\" nearby in debug.log?", "added": 1580987984, "modified": 1580987984, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2411#issuecomment-582926439", "source_type": "github"}], "1604067860_mirrored_slrslr_github": [{"comment_id": 1264, "body": "Could you elaborate on the \"reopen\" please?", "added": 1583393678, "modified": 1583393678, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2417#issuecomment-595156143", "source_type": "github"}], "1604067778_mirrored_canewsin_github": [{"comment_id": 1265, "body": "I'm not sure but you should try to use a space instead of `=`. ", "added": 1581421122, "modified": 1581421122, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2418#issuecomment-584666324", "source_type": "github"}], "1604067781_mirrored_rvs75_github": [{"comment_id": 1266, "body": "> `Header add \"Access-Control-Allow-Origin\" \"*\"`\r\n\r\nThis is unrelated to your problem but please don't do this. Disabling CORS allows all zites to steal proxy user's info, e.g. their private keys. ", "added": 1581331646, "modified": 1581331646, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2420#issuecomment-584130153", "source_type": "github"}, {"comment_id": 1267, "body": "Have you tried to add your domain to ui_host config variable? ", "added": 1581336400, "modified": 1581336400, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2420#issuecomment-584167025", "source_type": "github"}], "1604067823_mirrored_styromaniac_github": [{"comment_id": 1268, "body": "Let me make a guess: port 1023 doesn't work while 1024 does. The reason is that Linux-like OSes disallow non-root to use ports below 1024. If you want to bind to those ports, [check this SO thread](https://superuser.com/questions/710253/allow-non-root-process-to-bind-to-port-80-and-443).", "added": 1582202357, "modified": 1582202357, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2432#issuecomment-589139005", "source_type": "github"}], "1604067802_mirrored_Corsairs_github": [{"comment_id": 1269, "body": "Yeah, just make sure to include React.js with `<script>` tag.", "added": 1582380482, "modified": 1582380482, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2435#issuecomment-589976715", "source_type": "github"}], "1604067883_mirrored_imachug_github": [{"comment_id": 1270, "body": "I get 35 Mbps upload speed with websockets (both with and without hashing, so it's a network problem). XHR is waaay faster.", "added": 1582512454, "modified": 1582512556, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590175370", "source_type": "github"}, {"comment_id": 1271, "body": "Interestingly, using a simple server with `websocket` package gives 120-130 Mbps when uploading a file and 350 Mbps when uploading zeroes. This probably means it's either `gevent-websocket` that's slow or there are too many tasks executing in parallel in a single process.\r\n\r\n```python\r\nimport asyncio\r\nimport websockets\r\n\r\n\r\nasync def handler(websocket, path):\r\n    await websocket.send(\"poll\")\r\n    while True:\r\n        await websocket.recv()\r\n        await websocket.send(\"poll\")\r\n\r\n\r\nstart_server = websockets.serve(handler, \"localhost\", 8765, max_size=2 ** 23)\r\n\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```", "added": 1582512918, "modified": 1582516640, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590176671", "source_type": "github"}, {"comment_id": 1272, "body": "Uploading the same file to ZeroUp Unlimited (official ZeroUp doesn't allow so big files) gives me around 800 Mbps. The difference is still too big...", "added": 1582513250, "modified": 1582513250, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590177632", "source_type": "github"}, {"comment_id": 1273, "body": "A simple Python script gives me around 450 mbps which already looks good.\r\n\r\n```python\r\nimport asyncio\r\nimport websockets\r\nimport time\r\n\r\nasync def main():\r\n    uri = \"ws://localhost:8765\"\r\n    async with websockets.connect(uri) as ws:\r\n        time_start = time.time()\r\n        bytes_sent = 0\r\n        while True:\r\n            await ws.recv()\r\n            block = b\"x\" * (2 * 1024 * 1024)\r\n            await ws.send(block)\r\n            bytes_sent += len(block)\r\n            print(int(bytes_sent / 1024 / 1024 * 8 / (time.time() - time_start)), \"mbps\")\r\n\r\nasyncio.get_event_loop().run_until_complete(main())\r\n```\r\n\r\nTo sum up:\r\n\r\n- The browser is a bit slow\r\n- `gevent-websocket` is slow\r\n- websockets are slow\r\n\r\n:man_facepalming: ", "added": 1582514367, "modified": 1582516768, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590181453", "source_type": "github"}, {"comment_id": 1274, "body": "Yeah, `gevent-websocket` is the main problem. 40 Mbps (`gevent-websocket`) vs 450 Mbps (`websockets`). Switching looks like a great opportunity to increase performance and get rid of an incompatible library (license-wise). What do you think? @HelloZeroNet ", "added": 1582518774, "modified": 1582518819, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590196713", "source_type": "github"}, {"comment_id": 1275, "body": "AFAIK `gevent-websocket` is the only websocket library that supports gevent. We could switch to asyncio but you said you don't like it, and also gevent is faster than asyncio according all the benchmarks I could find. It looks like we should either patch `gevent-websocket` or create our own library. The first approach would probably be simplier but the latter one can potentially give better results and resolve license problems.", "added": 1582520177, "modified": 1582520177, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590202143", "source_type": "github"}, {"comment_id": 1276, "body": "I think I have identified the lag reason:\r\n\r\n```python\r\nfor i in range_type(self.length):\r\n    payload[i] ^= mask[i % 4]\r\n```\r\n\r\nIt's *really* dumb but it takes Python a second to loop through a 1 MiB array. wtf\r\n\r\nWithout these 2 lines, I get 1700 Mbps throughput.", "added": 1582522695, "modified": 1582522797, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590215179", "source_type": "github"}, {"comment_id": 1277, "body": "I've managed to get 240 Mbps throughput with some optimizations but it's still too slow. @HelloZeroNet Is there any probability I may use a native module to make this run faster?", "added": 1582525064, "modified": 1582525064, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590228769", "source_type": "github"}, {"comment_id": 1278, "body": "I'm afraid creating a new connection per each MiB is going to be too slow. I've managed to get gevent-websocket load data at 740 Mbps btw! That's even more than `websockets`. That might be enough.", "added": 1582527037, "modified": 1582527059, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590240759", "source_type": "github"}, {"comment_id": 1279, "body": "Do you think you can merge the PR? @HelloZeroNet ", "added": 1582528083, "modified": 1582528154, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436#issuecomment-590247017", "source_type": "github"}], "1604067885_mirrored_imachug_github": [{"comment_id": 1280, "body": "Thanks!", "added": 1582543288, "modified": 1582543288, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2437#issuecomment-590342468", "source_type": "github"}, {"comment_id": 1281, "body": "Looks like a good idea, I didn't notice the code duplication for some reason. Working on the PR.", "added": 1582550397, "modified": 1582550397, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2437#issuecomment-590413287", "source_type": "github"}, {"comment_id": 1282, "body": "Done, check #2438 please.", "added": 1582550435, "modified": 1582550435, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2437#issuecomment-590413682", "source_type": "github"}], "1604067887_mirrored_imachug_github": [{"comment_id": 1283, "body": "There are no tests unfortunately but I've verified it manually and it works well.", "added": 1582550451, "modified": 1582550451, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2438#issuecomment-590413851", "source_type": "github"}, {"comment_id": 1284, "body": "Thx.", "added": 1582554994, "modified": 1582554994, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2438#issuecomment-590456041", "source_type": "github"}], "1604067890_mirrored_imachug_github": [{"comment_id": 1285, "body": "K, will fix. ", "added": 1582640909, "modified": 1582640909, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2439#issuecomment-590977303", "source_type": "github"}, {"comment_id": 1286, "body": "I've restored `run_application` (refactored it a bit) and also added `gevent_ws` to `lib`. I think that supporting both libraries is not necessary because `gevent_ws` is way faster.", "added": 1582727373, "modified": 1582727373, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2439#issuecomment-591546545", "source_type": "github"}, {"comment_id": 1287, "body": "@HelloZeroNet ", "added": 1582769582, "modified": 1582769582, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2439#issuecomment-591785215", "source_type": "github"}, {"comment_id": 1288, "body": "> Do you have numbers how much faster is it?\r\n\r\nIIRC `gevent-websocket` can handle around 50 Mbps and my library can handle around 750 Mbps (just streaming zeroes).", "added": 1582814039, "modified": 1582814039, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2439#issuecomment-592083335", "source_type": "github"}], "1604067904_mirrored_imachug_github": [{"comment_id": 1289, "body": "This PR is WIP. ", "added": 1583203992, "modified": 1583204079, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-593780932", "source_type": "github"}, {"comment_id": 1290, "body": "@HelloZeroNet Ready to be merged.", "added": 1583226000, "modified": 1583226000, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-593915393", "source_type": "github"}, {"comment_id": 1291, "body": "> tests failing\r\n> segfault\r\n\r\nFFFUUUUUUUU...", "added": 1583226402, "modified": 1583226402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-593917734", "source_type": "github"}, {"comment_id": 1292, "body": "There's some evidence the problem is caused by sqlite, not sslcrypto (https://gist.github.com/imachug/1078f745984777f1b918e623c6726420#file-travis-log-L1351, backed up just in case). There's also a person who had the same issue: https://github.com/mrozekma/Sprint/issues/194#issuecomment-33131798.", "added": 1583226733, "modified": 1583226733, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-593919850", "source_type": "github"}, {"comment_id": 1293, "body": "@HelloZeroNet Could you please restart the test to make sure the segfault can't be reproduced? ", "added": 1583227950, "modified": 1583227950, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-593927343", "source_type": "github"}, {"comment_id": 1294, "body": "@HelloZeroNet Do you think you can merge this?", "added": 1583246694, "modified": 1583246694, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594078147", "source_type": "github"}, {"comment_id": 1295, "body": "It most likely will.", "added": 1583327115, "modified": 1583327115, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594629972", "source_type": "github"}, {"comment_id": 1296, "body": "@HelloZeroNet Have you run the tests yet?", "added": 1583327331, "modified": 1583327331, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594632566", "source_type": "github"}, {"comment_id": 1297, "body": "Oh god... again", "added": 1583332723, "modified": 1583332723, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594691222", "source_type": "github"}, {"comment_id": 1298, "body": "For the record: I've noticed that Travis sometimes manually restarts builds so here's the backed up log: https://gist.github.com/imachug/dcc1934f7a3f8571d4cc7be83ed03059.", "added": 1583332829, "modified": 1583332829, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594692503", "source_type": "github"}, {"comment_id": 1299, "body": "@HelloZeroNet That could be the reason. Do you think we could rewrite ThreadPool as a context manager? AFAIK it's only deleted at shutdown (which we're not interested in anyway) and in tests so it shouldn't be a problem.", "added": 1583333388, "modified": 1583333388, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594699619", "source_type": "github"}, {"comment_id": 1300, "body": "@HelloZeroNet Do you think this PR can be merged then?", "added": 1583334265, "modified": 1583334265, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594712899", "source_type": "github"}, {"comment_id": 1301, "body": "I've managed to reproduce a segfault on GitLab, but it turns out it can be reproduced *without* sslcrypto. WTF.", "added": 1583337340, "modified": 1583337605, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594750704", "source_type": "github"}, {"comment_id": 1302, "body": "I can confirm that replacing `__del__` most likely fixes the segfault.", "added": 1583339320, "modified": 1583339320, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-594777053", "source_type": "github"}, {"comment_id": 1303, "body": "SQLite is failing again. Can you run the tests on py3 branch several times to make sure it's not related to sslcrypto? ", "added": 1583375871, "modified": 1583375871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-595038285", "source_type": "github"}, {"comment_id": 1304, "body": "> Do you think we can merge this\r\n\r\nLGTM", "added": 1583415929, "modified": 1583415929, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-595329299", "source_type": "github"}, {"comment_id": 1305, "body": "Yay, thanks.", "added": 1583416581, "modified": 1583416581, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454#issuecomment-595334655", "source_type": "github"}], "1604067829_mirrored_canewsin_github": [{"comment_id": 1306, "body": "In tor always mode the port is always closed so there's nothing to worry about. In tor available mode you'll be able to connect to everyone but only tor users will be able to connect to you. As long as you have many peers, this is not a problem. If you're one of the only seeders, users without tor will have problems downloading the site.\r\n\r\nI've answered a bit more questions than asked, but I hope it's helpful for others too. ", "added": 1583289787, "modified": 1583306393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2456#issuecomment-594338385", "source_type": "github"}, {"comment_id": 1307, "body": "Do you think this issue can be closed then? ", "added": 1583306430, "modified": 1583306430, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2456#issuecomment-594438153", "source_type": "github"}], "1604067909_mirrored_imachug_github": [{"comment_id": 1308, "body": "Thanks", "added": 1583393584, "modified": 1583393584, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2457#issuecomment-595155325", "source_type": "github"}], "1604067856_mirrored_styromaniac_github": [{"comment_id": 1309, "body": "Are you using Termux or ZeroNet app from Google Play? ", "added": 1583458599, "modified": 1583458599, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2460#issuecomment-595596083", "source_type": "github"}], "1604067838_mirrored_canewsin_github": [{"comment_id": 1310, "body": "Kinda forgot about that, thanks. ", "added": 1583577584, "modified": 1583577584, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2463#issuecomment-596089618", "source_type": "github"}], "1604067923_mirrored_imachug_github": [{"comment_id": 1311, "body": "Thanks.", "added": 1583755385, "modified": 1583755385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2466#issuecomment-596585917", "source_type": "github"}], "1604067925_mirrored_imachug_github": [{"comment_id": 1312, "body": "What do you think about the required signer list?", "added": 1583762555, "modified": 1583762555, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2467#issuecomment-596654120", "source_type": "github"}, {"comment_id": 1313, "body": "I think it'd be better to implement some kind of in-place update without restart. The propagated hotfixes will probably be small enough so they won't cause a problem.", "added": 1583763542, "modified": 1583763542, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2467#issuecomment-596664065", "source_type": "github"}, {"comment_id": 1314, "body": "We probably shouldn't show the fix to the public before it is completely signed (nor should we show that the process is going on) so I'd use some clearnet service (e.g. GitHub/GitLab + a bot) to develop the fix and sign it. So we already have all the signatures at the moment when we're publishing the fix. This means we could just hardcode the verification. ", "added": 1583766412, "modified": 1583766412, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2467#issuecomment-596690264", "source_type": "github"}, {"comment_id": 1315, "body": "@HelloZeroNet Can I assume that if Config.py contains some revision number, the bundled code will contain exactly the changes up to the commit which changed the revision number? ", "added": 1584176845, "modified": 1584176845, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2467#issuecomment-599048937", "source_type": "github"}], "1604067931_mirrored_imachug_github": [{"comment_id": 1316, "body": "As a side note: sslcrypto supports all versions of OpenSSL, so even if this change didn't work before (with pyelliptic and such), it should work now.", "added": 1583857951, "modified": 1583857963, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2471#issuecomment-597272754", "source_type": "github"}, {"comment_id": 1317, "body": "Yeah, it's `in` operator so it will.", "added": 1583858233, "modified": 1583858241, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2471#issuecomment-597275040", "source_type": "github"}], "1604067841_mirrored_scpketer_github": [{"comment_id": 1318, "body": "Python 3.8 doesn't support `cgi.parse_qsl`. I'll make a PR right now.", "added": 1583922074, "modified": 1583922074, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2472#issuecomment-597629483", "source_type": "github"}, {"comment_id": 1319, "body": "Actually, the code in the GitHub repository is correct. However, the AUR package looks *really* outdated. The maintainer should probably update it.", "added": 1583922193, "modified": 1583922193, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2472#issuecomment-597630822", "source_type": "github"}, {"comment_id": 1320, "body": "The patch was committed at November 14, AUR was updated in October. I'm not registered on AUR (nor can I, sh*tty captcha I can't pass on Ubuntu) so either @HelloZeroNet or someone who's registered should probably mark the package as outdated.", "added": 1583923852, "modified": 1583923852, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2472#issuecomment-597646589", "source_type": "github"}], "1604067862_mirrored_geekless_github": [{"comment_id": 1321, "body": "I can confirm the problem. The easiest way to reproduce it was to update SunHub (got +10 new files, not so much but still a problem).", "added": 1584196234, "modified": 1584196234, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2476#issuecomment-599105150", "source_type": "github"}], "1604067860_mirrored_canewsin_github": [{"comment_id": 1322, "body": "You have some really weird OpenSSL version I guess... Could you please send me the library for tests? ", "added": 1584243407, "modified": 1584243407, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599174220", "source_type": "github"}, {"comment_id": 1323, "body": "Is there any way to modify the code for your Android client in-place? Probably some directory I could change, or you could make a custom build for me with a custom `actionServerFileWrite` UIWebsocket command?", "added": 1584245134, "modified": 1584245134, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599175936", "source_type": "github"}, {"comment_id": 1324, "body": "Is the source code stored as plain `.py` files?", "added": 1584247244, "modified": 1584247244, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599178357", "source_type": "github"}, {"comment_id": 1325, "body": "Great, can you please make a custom build with the following code added to the end of `src/Ui/UiWebsocket.py`:\r\n\r\n```python\r\n    @flag.admin\r\n    def actionServerFileWrite(self, to, path, content_base64):\r\n        with open(os.path.join(os.path.dirname(os.path.abspath(__file__)), path), \"wb\") as f:\r\n            import base64\r\n            f.write(base64.b64decode(content_base64))\r\n        self.response(to, \"ok\")\r\n\r\n    @flag.admin\r\n    def actionServerFileRead(self, to, path):\r\n        with open(os.path.join(os.path.dirname(os.path.abspath(__file__)), path), \"rb\") as f:\r\n            import base64\r\n            self.response(to, base64.b64encode(f.read()).decode())\r\n```", "added": 1584248094, "modified": 1584248094, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599179368", "source_type": "github"}, {"comment_id": 1326, "body": "Nope I guess, but it's just a 15-line modification you could apply to the latest `py3`.", "added": 1584248865, "modified": 1584248865, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599180247", "source_type": "github"}, {"comment_id": 1327, "body": "aarch64", "added": 1584249172, "modified": 1584249172, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599180628", "source_type": "github"}, {"comment_id": 1328, "body": "Yeah, please use a different one.", "added": 1584249856, "modified": 1584249856, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599181469", "source_type": "github"}, {"comment_id": 1329, "body": "Ok... sorry for asking, but could you please make another build for me with the same change, but based on the old version (i.e. the one that's on Google Play right now).", "added": 1584256719, "modified": 1584256719, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599191129", "source_type": "github"}, {"comment_id": 1330, "body": "@canewsin The problem should now be fixed (thanks for the build btw), please make sure it works for you too!", "added": 1584282919, "modified": 1584282919, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2477#issuecomment-599240788", "source_type": "github"}], "1604067863_mirrored_canewsin_github": [{"comment_id": 1331, "body": "File modifications are ignored, all files (including plugins) are overwritten. ", "added": 1584354612, "modified": 1584368822, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2479#issuecomment-599536968", "source_type": "github"}], "1604067866_mirrored_canewsin_github": [{"comment_id": 1332, "body": "Probably not. I'll check what's wrong again.", "added": 1584407687, "modified": 1584407687, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2480#issuecomment-599868826", "source_type": "github"}, {"comment_id": 1333, "body": "@canewsin The first error has no traceback. Are you running ZeroNet with `--debug`?", "added": 1584412522, "modified": 1584412522, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2480#issuecomment-599886636", "source_type": "github"}], "1604067952_mirrored_imachug_github": [{"comment_id": 1334, "body": "Right, I saw a commit fixing this.", "added": 1584965319, "modified": 1584965319, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2484#issuecomment-602660116", "source_type": "github"}], "1604067943_mirrored_HelloZeroNet_github": [{"comment_id": 1335, "body": "Got it.", "added": 1584453846, "modified": 1584453846, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2486#issuecomment-600187459", "source_type": "github"}, {"comment_id": 1336, "body": "I can reproduce the bug on Firefox, perhaps Werkzeug overrides some of my handlers.", "added": 1584454188, "modified": 1584454188, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2486#issuecomment-600190362", "source_type": "github"}, {"comment_id": 1337, "body": "Do you know why\r\n\r\n```python\r\nreturn self.app(environ, start_response)\r\n```\r\n\r\nworks but\r\n\r\n```python\r\nyield from self.app(environ, start_response)\r\n```\r\n\r\ndoesn't? :)", "added": 1584465649, "modified": 1584465649, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2486#issuecomment-600278138", "source_type": "github"}, {"comment_id": 1338, "body": "I've managed to fix it I think. I knew the difference but I had no idea it could apply here.", "added": 1584467356, "modified": 1584467379, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2486#issuecomment-600289913", "source_type": "github"}, {"comment_id": 1339, "body": "We have a failing master now though, lol.\r\n\r\n*UPD*: It's just a Travis bug, it's fine.", "added": 1584467594, "modified": 1584467616, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2486#issuecomment-600291559", "source_type": "github"}, {"comment_id": 1340, "body": "Yeah, I think so.", "added": 1584467700, "modified": 1584467700, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2486#issuecomment-600293551", "source_type": "github"}], "1604067876_mirrored_canewsin_github": [{"comment_id": 1341, "body": "The interesting part is that the traceback shows that the error happens when there's *no* websocket connection, i.e. when WebSocketHandler just proxies the calls to WSGIHandler.", "added": 1584756913, "modified": 1584756934, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2488#issuecomment-601996523", "source_type": "github"}], "1604067908_mirrored_filips123_github": [{"comment_id": 1342, "body": "Just wondering if you've checked whether verifying works, I'm pretty sure it doesn't. I'm currently working on a better PR with automatic compressed key detection and it looks like signing actually *always* signs with an uncompressed key.", "added": 1585535791, "modified": 1585535791, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2502#issuecomment-605792068", "source_type": "github"}], "1604067978_mirrored_imachug_github": [{"comment_id": 1343, "body": "A segfault in sqlite, huh.", "added": 1585540298, "modified": 1585540298, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-605816097", "source_type": "github"}, {"comment_id": 1344, "body": "Great, waiting for @HelloZeroNet to merge the PR then.", "added": 1585569626, "modified": 1585569626, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-606052943", "source_type": "github"}, {"comment_id": 1345, "body": "> allows me to recover your private key instantly\r\n\r\nI'm really interested in seeing how it's possible.", "added": 1585678172, "modified": 1585678172, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-606876884", "source_type": "github"}, {"comment_id": 1346, "body": "Okay... If you read a little bit below, the `if not entropy:` part does *exactly* what that RFC specifies.", "added": 1585706247, "modified": 1585706247, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-607032623", "source_type": "github"}], "1604067955_mirrored_ghost_github": [{"comment_id": 1347, "body": "Okay, things are moving out of control so I guess it's my turn. You were referring to the `entropy=None` part, probably assuming that it means \"no entropy at all\". This is just a meta-value that I'm comparing `entropy` with later, in the `if not entropy:` case. I could have used `entropy=\"RFC6979\"` as the default parameter and the checking for it with `if entropy == \"RFC6979\"`. I just thought `entropy=None` would be more concise, and it also doesn't let you disable entropy at all without any hacks (and perhaps you already know what you're doing at that moment).", "added": 1585706438, "modified": 1585706438, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2504#issuecomment-607033416", "source_type": "github"}, {"comment_id": 1348, "body": "Uh, yeah. That's *literally* the implementation of the RFC, [section 3.2](https://tools.ietf.org/html/rfc6979#section-3.2).", "added": 1585727445, "modified": 1585727445, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2504#issuecomment-607177999", "source_type": "github"}, {"comment_id": 1349, "body": "> than use `entropy=entropy` instead of `entropy=None` in sslcrypto\r\n\r\nThat's not so easy to do because `entropy` is not defined as a constant. Perhaps using `DETERMINISTIC_RFC6979` constant would make more sense here.\r\n\r\n> `if entropy != None` (I vote for this) or `if entropy is not None` :thinking: :question:\r\n\r\nI'd use `is not None` because that's the official way of comparing with `None` (do some research on why it's so if you want to).\r\n\r\n> try not to have this :point_down: IF statement... sslcrypto should always use RFC\r\n\r\nI've added `entropy` because someone might want to use a hardware random generator or set it themselves (think of compatibility with an existing service where another generator is used). \r\n\r\n> Also, I hardly can understand why need to use both compressed and uncompressed keys.. As you see even in sslcrypto there is `is_compressed` and `is_compressed=is_compressed`....\r\n\r\nI'm not sure if you're struggling to understand the difference between `is_compressed` and `is_compressed=is_compressed`. Just to make sure: the first one is just a variable or a parameter name, the second one is a keyword argument. As for why both types are needed, that's because there are two types of Bitcoin public keys (and thus addresses): compressed and uncompressed. And if a person gives you an address, you have no way to tell whether it's compressed or not. Also, there are vanity address generators (or just generators) which can only generate nice-looking uncompressed addresses; of course, their compressed equivalents are not nice. So we have to support both types.\r\n\r\n---\r\n\r\nWhat username will you choose next?", "added": 1585751890, "modified": 1585751890, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2504#issuecomment-607391202", "source_type": "github"}, {"comment_id": 1350, "body": "@HelloZeroNet Can this issue be closed?", "added": 1585917115, "modified": 1585917115, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2504#issuecomment-608508084", "source_type": "github"}], "1604067912_mirrored_styromaniac_github": [{"comment_id": 1351, "body": "You can use `\"0x\" || sha256(address)` instead of the site address, e.g. `0xf69941233e191d9e00f0cd16c5da10b0124d1c0a498b5ecfa1448b21a3eb0094` instead of `1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D`.", "added": 1585795215, "modified": 1585795215, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2505#issuecomment-607632433", "source_type": "github"}, {"comment_id": 1352, "body": "Exactly, the `\"0x\" || sha256(address)` is a well-known (hopefully) pseudocode for \"concatenate string 0x with the sha256-hash of address\".", "added": 1585826730, "modified": 1585826730, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2505#issuecomment-607878678", "source_type": "github"}], "1604067882_mirrored_GulshanBC_github": [{"comment_id": 1353, "body": "Okay, this problem is caused by a missing `from lib` in sslcrypto. Adding it will fix the problem and I'd recommend it as a hotfix, but it'll also make sslcrypto update more difficult. @HelloZeroNet Do you know why is `from lib` is required in the first place? Perhaps we should fix the problem instead of making hacks.", "added": 1585901203, "modified": 1585901203, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2506#issuecomment-608373843", "source_type": "github"}, {"comment_id": 1354, "body": "/cc @mkg20001 ", "added": 1585923249, "modified": 1585923249, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2506#issuecomment-608558707", "source_type": "github"}], "1604067887_mirrored_SuperSandro2000_github": [{"comment_id": 1355, "body": "Will it work without https?", "added": 1586227456, "modified": 1586227456, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2509#issuecomment-610186699", "source_type": "github"}, {"comment_id": 1356, "body": "Perhaps using config options is not the correct solution, because then either HTTP or HTTPS will break. What if we make the browser send the protocol to the server?", "added": 1586238634, "modified": 1586238634, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2509#issuecomment-610262346", "source_type": "github"}, {"comment_id": 1357, "body": "We could just use JavaScript on the client side.", "added": 1586240043, "modified": 1586240043, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2509#issuecomment-610273410", "source_type": "github"}, {"comment_id": 1358, "body": "Lots of people use Chrome even if we don't like it. We should fix problems if want ZeroNet to be widely used.", "added": 1586272899, "modified": 1586272899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2509#issuecomment-610545626", "source_type": "github"}, {"comment_id": 1359, "body": "> problem with the \"password plugin\" so the solution to your problem should be implemented in that plugin and not in the core!\r\n\r\nAnd now for something completely different: this patch changes the plugin, not the core.", "added": 1586330847, "modified": 1586330847, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2509#issuecomment-610879288", "source_type": "github"}], "1604067964_mirrored_ghost_github": [{"comment_id": 1360, "body": "You can always generate a QR code from a link, ZeroNet sites are no different from clearnet sites in this point. I think this only makes sense in case we add something else to the links, e.g. we could share peer list (*and* this is quite useful if you, say, want to share a zite with your neighbour so the peers are still available).", "added": 1586359099, "modified": 1586359099, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2511#issuecomment-611113593", "source_type": "github"}, {"comment_id": 1361, "body": "> I not referring to URL like 127.0.0.1:43110/1BTCaddressalsoURL , I **referring to only the Bitcoin address** which is written to the `index.html` when `siteCreate`!\r\n\r\nThen I don't see how this is useful. You won't be able to use this address anyway even if you share it, perhaps sharing URL is more helpful.", "added": 1586367330, "modified": 1586367330, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2511#issuecomment-611180461", "source_type": "github"}], "1604067966_mirrored_ghost_github": [{"comment_id": 1362, "body": "> absolutely bullshit this master seed shit, now you gonna fix this genius\r\n\r\nIt helps to recover your private keys. You can always disable master seed if you don't want to. Also, creating sites via terminal was never recommended and the modification only changed the behavour when using console, not browser UI, so saying that this change affected users much is wrong. And if you know how to use terminal, perhaps you know how to fix `users.json` as well (how the heck did master_seed manage to corrupt it though?).", "added": 1586358964, "modified": 1586358964, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2512#issuecomment-611112533", "source_type": "github"}, {"comment_id": 1363, "body": "> If master_seed is turned off than `siteSign` will fail!\r\n\r\nAre you talking about CLI `siteSign` command or ZeroNet UI?", "added": 1586367398, "modified": 1586367398, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2512#issuecomment-611181005", "source_type": "github"}, {"comment_id": 1364, "body": "> Clean up users.json and encourage everyone to BACK UP PRIVATEKEYS!\r\n\r\nWe already do.", "added": 1586422793, "modified": 1586422793, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2512#issuecomment-611489768", "source_type": "github"}], "1604067968_mirrored_ghost_github": [{"comment_id": 1365, "body": "> According to GPLv3 license you can't implement any kind of restriction in the software which makes it unusable, which is exactly what happened. Turning off master_seed in config will result in an unusable ZeroNet, even siteSign will fail!\r\n\r\nSidenote: this is not a restriction, moreover, `master_seed` is enabled by default so users who don't mess up with options won't get broken files. Your point is similar to \"running `rm -rf --no-preserve-root /` broke my computer, it's because the developers added `--no-preserve-root` option\".", "added": 1586422764, "modified": 1586422764, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2513#issuecomment-611489586", "source_type": "github"}, {"comment_id": 1366, "body": "@HelloZeroNet Can this be closed?", "added": 1586422777, "modified": 1586422777, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2513#issuecomment-611489658", "source_type": "github"}], "1604067971_mirrored_ghost_github": [{"comment_id": 1367, "body": "And now for something completely different: private keys are generated in the same range without master_seed. ", "added": 1586440350, "modified": 1586440362, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-611633929", "source_type": "github"}, {"comment_id": 1368, "body": "> While using a seed is good if any of the addresses get compromised from the range of generated private keys an attacker can compromise all and every site generated using that seed!\r\n\r\nPlease elaborate on how this attack could be performed. AFAIK BIP32 was created to have a single private key that can't be compromised if any derived key is stolen. ", "added": 1586440488, "modified": 1586440488, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-611635146", "source_type": "github"}, {"comment_id": 1369, "body": "> They are not generated from the range like BIP32 keys. You have a range let's say 1000-10000, your seed is xyz which gives you xy keys from 8548-9300 which means if a private key is compromised in your given range, a simple \"brute force\" (generating millions of keys in + - in xy range) will compromise all of your private keys.\r\n\r\nHuh, if you think the private key is generated as `seed || inttobytes(id)` (or similar), you're really wrong. The fact that the range is smaller is definitely true, but it's 100'000'000 keys, not 10'000. This, uh, ought to be enough for anybody.", "added": 1586442668, "modified": 1586442668, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-611653751", "source_type": "github"}, {"comment_id": 1370, "body": "> generate 100,000,000 private keys in a given range in a few minutes\r\n\r\nAgain, the private keys are not in a given range, they are almost random. Think of BIP32 as of a deterministic random key generator. ", "added": 1586454010, "modified": 1586454010, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-611742047", "source_type": "github"}, {"comment_id": 1371, "body": "Okay, I've done some research and found out that all private keys can only be recovered if the master public key is known and some private key is known. The first sounds impossible because we only share (sometimes, accidentally) the master *address*, and recovering the public key from an address is impossible AFAIK.", "added": 1586486690, "modified": 1586486690, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-611888254", "source_type": "github"}, {"comment_id": 1372, "body": "> Each private key below the master key is generated from a range, that is why you have something called index. If one or more private key are compromised, you convert that key to a big integer and you will get a very good idea about the range of the other private keys.\r\n\r\nYou don't have to be so specific, I have a good enough overview on elliptic curve cryptography.\r\n\r\nLet's take a look at my implementation of BIP32 non-hardened keys:\r\n\r\n```python\r\n# Round 1\r\nh = hmac.new(key=b\"Bitcoin seed\", msg=seed, digestmod=\"sha512\").digest()\r\nprivate_key1 = h[:32]\r\nx, y = self.private_to_public(private_key1)\r\npublic_key1 = bytes([0x02 + (y[-1] % 2)]) + x\r\nprivate_key1 = bytes_to_int(private_key1)\r\n\r\n# Round 2\r\nmsg = public_key1 + self._int_to_bytes(child, 4)\r\nh = hmac.new(key=h[32:], msg=msg, digestmod=\"sha512\").digest()\r\nprivate_key2 = bytes_to_int(h[:32])\r\n\r\nreturn self._int_to_bytes((private_key1 + private_key2) % self.n)\r\n```\r\n\r\nThe first part computes the base of the private key by using HMAC. The second part uses HMAC and the child ID to generate the offset. It's true that if the second part was just `private_key2 = child` or similar, there would be a range of private keys: `base`, `base+1`, ..., `base+maxchild`.\r\n\r\nLuckily, the offset is not calculated in such a silly way, it's HMAC which uses both the child number and the seed. So, you know that the private key is `base + HMAC(chain_key, public_key || child)`, but you know neither `base`, nor `chain_key`, nor `public_key`.\r\n\r\nHere's how the attack you mentioned works: notice that if the public key and the chain key were both known *and* you somehow got a private key of some site, it would become possible to compute `HMAC(chain_key, public_key || child)`, then subtract this from the known private key to get `base` and then use the formula to get any private key you want.\r\n\r\nLuckily, in our case, if `master_seed` (it's called `seed` in the code above) is not stolen, there's no way to recover any other private keys because there's no way to get the public key and the chain key. Please notice that even if someone accidentally publishes his master *address*, this is not a problem because there's no way to recover a public key from an address.\r\n\r\nIn conclusion: your attack can't be performed on ZeroNet.", "added": 1586518138, "modified": 1586518256, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-612053317", "source_type": "github"}, {"comment_id": 1373, "body": "> You don't get it do you? There is no reason to base ZeroNet in Bitcoin if you don't receive any funds to those addresses! For example an investigative journalist may turn to ZeroNet and able to receive funds directly to his site address, when he spends the part you wrote about public key is broken.\r\n\r\nWe don't use Bitcoin, we use secp256k1 and BIP32, i.e. Bitcoin cryptography, these are different things.\r\n\r\nI'm understanding your last message as \"Pretend if someone uses the same private key for both their ZeroNet site and their Bitcoin wallet. In this case, their funds and other sites may be in danger\". Do I get it right?\r\n\r\nPlease notice that importing your master seed from Bitcoin to ZeroNet is just shooting yourself in the foot.", "added": 1586519443, "modified": 1586519443, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-612062519", "source_type": "github"}, {"comment_id": 1374, "body": "What's the advantage of using xprv instead of WIF?", "added": 1586519826, "modified": 1586519826, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-612065195", "source_type": "github"}], "1604067979_mirrored_ghost_github": [{"comment_id": 1375, "body": "> https://pypi.org/project/gevent/1.5.0/#supported-platforms well, maybe its is the time to drop support for 3.4. Don't you think @imachug?\r\n\r\nI don't think so. Python 3.4 is still the latest available version on some devices. We've dropped Python 2 support just around a year ago, it's not the right time to drop 3.4 yet.", "added": 1586599457, "modified": 1586599457, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612416819", "source_type": "github"}, {"comment_id": 1376, "body": "Okay, let me say what I meant another way. Currently, ZeroNet doesn't use any Python 3.5-specific functions or something, so there's no reason to stop Python 3.4 support when the only Python 3.4-related detail is a single line in `requirements.txt`.", "added": 1586600534, "modified": 1586600534, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612420203", "source_type": "github"}, {"comment_id": 1377, "body": "> this is not just one line\r\n\r\nIt used to be a single line before your PR. Anyway, can't we just request `>=1.1.0` for Python 3.4 and below and `>=1.5.0` for Python 3.5 and above?", "added": 1586602022, "modified": 1586602022, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612425093", "source_type": "github"}, {"comment_id": 1378, "body": "How is it \"not good\"? It's `>=`, not `=`.", "added": 1586604006, "modified": 1586604006, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612431871", "source_type": "github"}, {"comment_id": 1379, "body": "> It is not better to have the correct version of gevent for the correct version of python? Pip would install version 1.1.0 for python 2.7.9 when in reality gevent 1.5.0 supports that!\r\n\r\nDo you know what `>=` means? It installs *any* version greater than or equal to the given one. If a compatible version is already installed, it doesn't do anything; if it's not, it downloads the latest compatible version which is exactly what we want.", "added": 1586608933, "modified": 1586608933, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612449788", "source_type": "github"}, {"comment_id": 1380, "body": "> `python_version == '2.7.9'`\r\n\r\nWe don't support Python 2 anymore so this part is useless.", "added": 1586610399, "modified": 1586610399, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612454003", "source_type": "github"}, {"comment_id": 1381, "body": "I see", "added": 1586611409, "modified": 1586611409, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612457227", "source_type": "github"}], "1604067983_mirrored_ghost_github": [{"comment_id": 1382, "body": "> ZeroNet going to be rewritten\r\n\r\nGo for it.", "added": 1586690026, "modified": 1586690026, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2520#issuecomment-612621481", "source_type": "github"}, {"comment_id": 1383, "body": "Starting an incompatible implementation would be a more complex task. Hopefully you get it finished though.", "added": 1586695205, "modified": 1586695205, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2520#issuecomment-612635004", "source_type": "github"}, {"comment_id": 1384, "body": "@HelloZeroNet Please close this orphaned issue.", "added": 1586699886, "modified": 1586699886, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2520#issuecomment-612645434", "source_type": "github"}], "1604067985_mirrored_ghost_github": [{"comment_id": 1385, "body": "If you want to discuss anything with me, please open an issue on my https://github.com/imachug/ZeroNet repository and don't open them on an irrelevant project such as mainline ZeroNet client.", "added": 1586702959, "modified": 1586702959, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2521#issuecomment-612652239", "source_type": "github"}], "1604067987_mirrored_ghost_github": [{"comment_id": 1386, "body": "I've just thought about something... ZeroNet is now PyPy-compatible but the fix requires gevent 1.5.0. Perhaps we should set `gevent>=1.5.0` for Python 3.5+ and `gevent>=1.4.0` for Python 3.4.", "added": 1586705635, "modified": 1586705635, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2522#issuecomment-612657857", "source_type": "github"}, {"comment_id": 1387, "body": "> As you see, pip now is not looking for the cached version and is clearly downloading gevent-1.5.0 in venv.\r\n\r\nThe problem is when gevent-1.4.0 is already cached (e.g. gevent was installed when 1.5.0 wasn't available yet).", "added": 1586709147, "modified": 1586709147, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2522#issuecomment-612665000", "source_type": "github"}], "1604067990_mirrored_ghost_github": [{"comment_id": 1388, "body": "Do you understand that this only \"fixes\" the problem on Travis but not on users' machines? Perhaps specifying the correct versions we actually need, not making pip guess what we want is the correct way.", "added": 1586709888, "modified": 1586709888, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2523#issuecomment-612666508", "source_type": "github"}, {"comment_id": 1389, "body": "Again. Please install `gevent>=1.4.0` for old Python versions and `gevent>=1.5.0` for new Python versions. The reasoning is: pretend someone uses a new Python version but they have installed gevent before 1.5.0 was published. In this case, installing requirements.txt will still use gevent 1.4.0. In case of PyPy this means breaking ZeroNet.", "added": 1586711310, "modified": 1586711310, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2523#issuecomment-612669244", "source_type": "github"}], "1604068004_mirrored_ghost_github": [{"comment_id": 1390, "body": "Performance is a problem for ZeroNet given that it's written in Python. Hashes are checked really often (see a recent \"Eternal Word\" issue), so making them faster is important. BLAKE3 looks like a good alternative, but changing the hash function without backward compatibility is wrong. We could add both `blake3` and `sha512` fields when signing and check `blake3` on new versions and `sha512` on old versions on verifying.", "added": 1586747442, "modified": 1586747442, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2530#issuecomment-612767361", "source_type": "github"}], "1604068014_mirrored_slrslr_github": [{"comment_id": 1391, "body": "~~@antifa~~ @nomagics It's an error from an internal Python module, I'm afraid we can't easily do this.", "added": 1587986194, "modified": 1587986203, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2538#issuecomment-620015953", "source_type": "github"}], "1604067927_mirrored_nomagics_github": [{"comment_id": 1392, "body": "The problem is not in security in case of reverse proxy for a single site, it's because of usability. If you really want to remove iframe, you'll have to implement the wrapper (i.e. notifications and ZeroFrame) yourself. Not an impossible task but not a simple one either.", "added": 1587997778, "modified": 1587997778, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2542#issuecomment-620125906", "source_type": "github"}], "1604067945_mirrored_gqgs_github": [{"comment_id": 1393, "body": "Can you reproduce the bug if you replace lines 266 and 267 with `pass`?", "added": 1589191618, "modified": 1589191827, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2557#issuecomment-626689975", "source_type": "github"}, {"comment_id": 1394, "body": "No idea, this code used to work. You *should* close the connection after uploading all the data. Could you, by any chance, use the same socket for several files or something like that?", "added": 1589198049, "modified": 1589198049, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2557#issuecomment-626755077", "source_type": "github"}], "1604067947_mirrored_gqgs_github": [{"comment_id": 1395, "body": "ZeroNet's `lib/gevent_ws` is actually a fork of [gevent-ws](https://github.com/imachug/gevent-ws/) library, I think it'd be useful if you also opened a similar PR there. Thanks for the fix BTW!", "added": 1589200657, "modified": 1589200657, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2558#issuecomment-626780817", "source_type": "github"}], "1604067990_mirrored_shyam-sam_github": [{"comment_id": 1396, "body": "There are lots of conflicts here, perhaps you used wrong branch as base. Could you please rebase your changes onto `py3`?", "added": 1595088284, "modified": 1595088284, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2597#issuecomment-660526996", "source_type": "github"}], "1604067993_mirrored_therealelyayo_github": [{"comment_id": 1397, "body": "I believe you wanted to attach an HTML file but it's missing. If you wanted to add inline code, tags might be eaten by GitHub formatting, wrap it in ``` instead (I'm using ''' to show the syntax in the example below because otherwise it thinks it's a code marker):\r\n\r\n```\r\n '''html\r\n <b>Hello, world!</b>\r\n '''\r\n```\r\n\r\n...produces:\r\n\r\n```html\r\n<b>Hello, world!</b>\r\n```\r\n\r\nWhile `<b>Hello, world!</b>` without ``` produces <b>Hello, world!</b>", "added": 1595471115, "modified": 1595471115, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2601#issuecomment-662824407", "source_type": "github"}], "1604068013_mirrored_mx5kevin_github": [{"comment_id": 1398, "body": "What's the point, antifa? You've been spamming us for over a year, yet no one listens to you. Stop this pointless discussion.\r\n\r\nUPD: Perhaps the comment was deleted? Whatever, anyway", "added": 1597658469, "modified": 1597661927, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2602#issuecomment-674866901", "source_type": "github"}], "1604068092_mirrored_ghost_github": [{"comment_id": 1399, "body": "Hats off for a try to add a backdoor, but I am afraid you didn't manage to add it, `\"html\" in content_type` is enough. Try harder next time. ", "added": 1597658321, "modified": 1597658321, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2605#issuecomment-674865654", "source_type": "github"}, {"comment_id": 1400, "body": "`is_html_file` enables sandboxing for dangerous pages that use HTML, XHTML, etc. ", "added": 1597659836, "modified": 1597659836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2605#issuecomment-674879146", "source_type": "github"}, {"comment_id": 1401, "body": "> Okay, since when HTML is dangerous?\r\n\r\nHa-ha-ha. HTML supports JS scripts, which can be used to escape sandbox if CSP is disabled. Same with XHTML, Flash, etc.", "added": 1597660836, "modified": 1597660836, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2605#issuecomment-674888337", "source_type": "github"}, {"comment_id": 1402, "body": "> All in all the backdoor was already there.\r\n\r\nHere's how one would add a backdoor: modify file sending function to take file content into consideration when issuing `Content-Type` header (see mimemagic) instead of (or with) extension which would allow one to craft a file that is parsed as PNG at time-of-check and HTML at time-of-use (by browser).\r\n\r\nIf this PR removed `is_html_file` at all, CSP headers would be never issued which would lead to sandbox escape.", "added": 1597661889, "modified": 1597661889, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2605#issuecomment-674898206", "source_type": "github"}, {"comment_id": 1403, "body": "@HelloZeroNet Please close this orphan issue.\r\n\r\n---\r\n\r\n> You and @shortcutme cheated (illegally manipulated) votes on a license change!\r\n\r\nDon't mess up with chronology. We've decided to use GPLv3 *before* HostFat replied. At this moment, the choice was already made, so I asked HostFat if they're fine with it. They were.\r\n\r\n*Please don't ping unrelated people, omit @ if you quote comments.*", "added": 1597729605, "modified": 1597729605, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2605#issuecomment-675348390", "source_type": "github"}], "1604068094_mirrored_ghost_github": [{"comment_id": 1404, "body": "Just stop this bullshit please, I've never said there's a backdoor or something. See a backdoor? Make an exploit, send it to Tamas (or me if you don't trust him, though I'd still have to contact Tamas to get it merged). I've done that before and it worked out well. Do the same. Until you do that, this discussion is pointless. ", "added": 1597723951, "modified": 1597723951, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2606#issuecomment-675300787", "source_type": "github"}, {"comment_id": 1405, "body": "> Literally you cheated the license change by manipulating votes (it is even criminal internationally)\r\n\r\nBla-bla-bla. Cheating is not my strong point, ask anyone who I tried to shock by showing an exploit :) I don't lie well.\r\n\r\nIt's true that I wanted to switch to a particular license, so I explained why I liked this choice. Someone asked us why we added so many choices and told us that it would be easier to reach consensus if there were fewer licenses to choose from. We didn't listen to them, because we wanted a real voting with real results. The community made a decision; we did our best to relicense with rewriting as small code as possible. ", "added": 1597724705, "modified": 1597724705, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2606#issuecomment-675306519", "source_type": "github"}, {"comment_id": 1406, "body": "> You and shortcutme cheated (illegally manipulated) votes on a license change!\r\n\r\nAnd now for something completely different: this is a project of Tamas, made by Tamas. In his repository, he can relicense software at any time, he just has to make sure there are no contributions by other people that don't match the new license. We're not doing a presidential election, license voting is just an act of good faith.", "added": 1597729774, "modified": 1597729774, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2606#issuecomment-675349772", "source_type": "github"}], "1604068024_mirrored_geekless_github": [{"comment_id": 1407, "body": "A definite 'no'. 'Black' and 'white' in 'blacklists' and 'whitelists' are just abstract colors, in no way they are affiliated with people skin colors. The association with white being good and black being bad has existed since long ago, and this is not going to change in the foreseeable future. I am tired of seeing how people who were not injured by words are asking people who didn't mean to hurt anyone to change the wording to protect someone who has no problem with the words and will most likely not even see the code.\r\n\r\nBut this is not just a problem with wording, the question is much more subtle.\r\n\r\nWe are programmers, we have more work to do other than replacing useless words. We love to communicate with each other while collaborating on open-source software. We make free software, not because we are paid for it, but because we like it. We decide the roadmap, we write code, and we build the universe\u2014our universe. We are not marketers, we do our hard work for ourselves, not for random people who don't want to think for themselves; though of course we're proud of ourselves when people use our programs.\r\n\r\nWe are to decide whether the coders and active members or random users are more important, and I understand that I'm standing on a slippery slope. Each project is to decide whether it's to be used by a mass of people where everyone is equally unimportant, but you have to follow the trend, be it SJW, BLM, etc. or a small group of people that is interested in using, making, and filling the project with unique information, and which can cope with some problems.\r\n\r\nWe already have the first kind of project and, actually, it's much of the web. Facebook, Twitter, you name it. Big Brother sets a trend, and everyone follows it, because they are a part of a 'community', filled by similar people interested in the motion, not in the result. 'Build a system that even a fool can use, and only a fool will want to use it.'\r\n\r\nBut we are not sponsored by corporations, and we can keep saying that two plus two is four, even when everyone says it's five. We are making a decentralized network. The masses don't see a need in it, and the masses will not use it anytime soon\u2014but this is not a bad thing. ZeroNet is a useless pile of code without its community. We've given people who still believe that two plus two is four a way to read each other, write to each other, develop awesome ideas and keep telling the truth without being accused of it. One may say it's a filter bubble, and they may well be right\u2014but it's a bubble we choose ourselves, it's not controlled by a single company, person or country. People's opinions and views are not static, they change all the time, and we keep developing. 'Don't be evil' is our motto, not slogan\u2014we don't manipulate people, we convince them.\r\n\r\nZeroNet was the first network to be both reasonably secure and decentralized and easy to use by newcomers. It has a great potential, and it's easy to spoil it if ZeroNet goes mainstream. You'll get a copy of our Web with the same problems, same people, same controlling organizations, except that there's no spider\u2014and thus the network is de jure decentralized. It's arguably not harder to control people in decentralized networks than in centralized ones when big corporations are involved. Can't change what people say? Make no one listen to them. 'Serenity, Montag. Peace, Montag.' It's a decentralized web, which means it's even harder to search\u2014and find\u2014something, and if big search engines join the game, they and only they decide what people see. There's already existing code that is not very difficult to adapt to a decentralized network, but developing an engine from scratch is much harder, and site lists are going to become extinct in the first few years.\r\n\r\nZeroNet may become a new Web in both senses, bringing in lots of people but changing nothing except the underlying protocol. Or it may not affect the lifes of most people but become a good supportive shelter for clearnet refugees.\r\n\r\nYou choose.", "added": 1597934506, "modified": 1597934518, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2608#issuecomment-677804891", "source_type": "github"}], "1604068005_mirrored_MonsterB210_github": [{"comment_id": 1408, "body": "> You should actually remove those plugins\r\n\r\nThat's a bad idea, it's Tor Browser after all. Maybe whitelisting 127.0.0.1:43110 will help though (I haven't tried it myself).", "added": 1599991017, "modified": 1599991017, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2611#issuecomment-691668388", "source_type": "github"}], "1604068008_mirrored_ihateiframes_github": [{"comment_id": 1409, "body": "> If you rename all ZeroFrame related files and rewrite the source code to something else than \"ZeroFrame\" your browser will freeze your machine you're running on.\r\n\r\nAny reproduction code?", "added": 1599991064, "modified": 1599991064, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2613#issuecomment-691668464", "source_type": "github"}, {"comment_id": 1410, "body": "> I can send you in email.\r\n\r\nA GitHub fork would be better, I think.", "added": 1599993822, "modified": 1599993822, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2613#issuecomment-691673238", "source_type": "github"}], "1604068009_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1411, "body": "And this is perhaps the first of your PRs I can agree with. \r\n\r\nStatus quo:\r\n- [IANA](https://www.iana.org/assignments/language-tags/language-tags.xml#language-tags-1) uses zh-Hans/zh-Hant.\r\n- [Django](\r\nhttps://code.djangoproject.com/ticket/18419) uses zh_Hans/zh_Hant.\r\n- [Mozilla](https://product-details.mozilla.org/1.0/languages.json) uses zh-CN/zh-TW.\r\n- [Wikimedia](https://phabricator.wikimedia.org/T51274) uses zh-hans-cn/zh-hant-tw.\r\n- [IETF](https://tools.ietf.org/rfc/rfc4646.txt) uses zh-Hans-CN/zh-Hant-TW.\r\n\r\nThe difference from the proposed solution is casing or dashes vs underscores, but ZeroNet uses this style so I'm perfectly fine with it.\r\n\r\nIf this passes tests and automatically replaces zh/zh-tw with zh-hans/zh-hant upon updating, you have my LGTM. I have not checked the pull request code though, so don't quote me on that.", "added": 1600428478, "modified": 1600428478, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2614#issuecomment-694901819", "source_type": "github"}, {"comment_id": 1412, "body": "> RFC should be followed not the practices of corporations or other projects\r\n\r\nAgreed, but if everyone uses a non-RFC standard, it's just dumb to follow RFC instead of 'actual' standard. Luckily, this is not a problem in this case.", "added": 1600433442, "modified": 1600433442, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2614#issuecomment-694945826", "source_type": "github"}, {"comment_id": 1413, "body": ">  It is enough to use Language subtag plus Script subtag: either zh-hant or zh-hans.\r\n\r\nAgreed", "added": 1600433456, "modified": 1600433456, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2614#issuecomment-694945915", "source_type": "github"}], "1604068015_mirrored_nikkiunderwood_github": [{"comment_id": 1414, "body": "What is this? Are we going to crack a hash?", "added": 1600864288, "modified": 1600864314, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2618#issuecomment-697549204", "source_type": "github"}], "1604068067_mirrored_styromaniac_github": [{"comment_id": 1415, "body": "OTOH http://127.0.0.1:43110/syncronite.zn doesn't work without the plugin as well.", "added": 1601032880, "modified": 1601032880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2619#issuecomment-698957918", "source_type": "github"}, {"comment_id": 1416, "body": "Got it, you started the issue body with 'address bar' so I thought you were demanding that that URL should work. I now see that you meant that sidebar wrongly uses domain instead of address as if Name.YO was available. Sorry for confusion.\r\n\r\nOn the other hand, the same applies (or had applied before, I don't remember tbh) to ZeroHello: clicking a site with `domain` set to a Name.YO address on a node without Name.YO results in invalid URL.", "added": 1601033928, "modified": 1601033941, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2619#issuecomment-698967693", "source_type": "github"}], "1604068018_mirrored_TomerGamerTV_github": [{"comment_id": 1417, "body": "Have you installed the dependencies via `pip -r requirements.txt`?", "added": 1601124618, "modified": 1601124618, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2620#issuecomment-699512748", "source_type": "github"}], "1604068122_mirrored_slrslr_github": [{"comment_id": 1418, "body": "> changing the `\"--download_optional\", choices=[\"manual\", \"auto\"], default=\"manual\"` in Config.py to default=\"auto\" fix this while the optional is in content.json?\r\n\r\nI wouldn't change the defaults. Instead, add the option to zeronet.conf or CLI argv. No idea if this is going to work anyway, perhaps OP should try it. \r\n\r\n> you should not tell to anyone that you hosting, seeding or aiding in any way millchan!\r\n\r\nIs that illegal or what? Hosting illegal content is not the only goal of Millchan. ", "added": 1602670945, "modified": 1602670945, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2622#issuecomment-708398303", "source_type": "github"}], "1604068023_mirrored_scsmash3r_github": [{"comment_id": 1419, "body": "I think this can now be closed @HelloZeroNet?", "added": 1601914810, "modified": 1601914810, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2625#issuecomment-703836659", "source_type": "github"}], "1604068027_mirrored_Folaht_github": [{"comment_id": 1420, "body": "Does the `src/Ui/media/all.js` file exist and contain anything? Are/were you using `--debug` option at some moment of time?", "added": 1601914590, "modified": 1601914590, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2629#issuecomment-703834897", "source_type": "github"}, {"comment_id": 1421, "body": "Now *that* is an old version of ZeroNet. It's highly likely that old ZeroNet is incompatible with new Python. For instance, I get `UiWSGIHandler error: AttributeError: module 'cgi' has no attribute 'parse_qsl' in UiServer.py line 41 > pywsgi.py line 917 > UiServer.py line 98` on ZeroNet rev 4206 + Python 3.8.2.\r\n\r\nTry updating ZeroNet?", "added": 1601967524, "modified": 1601967524, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2629#issuecomment-704163572", "source_type": "github"}, {"comment_id": 1422, "body": "Did you install ZeroNet from snap store? I can't find ZeroNet in Manjaro package list.", "added": 1601970828, "modified": 1601970839, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2629#issuecomment-704189819", "source_type": "github"}, {"comment_id": 1423, "body": "@HelloZeroNet Feature request: could we maybe add 'installation source (git/snap/site/other)' to the issue template?", "added": 1601970994, "modified": 1601970994, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2629#issuecomment-704191029", "source_type": "github"}, {"comment_id": 1424, "body": "Actually this issue is a duplicate of #2472 which was never fixed.\r\n\r\n@radfish I have never used AUR but could we maybe treat each ZeroNet revision (not version) as a release? I think nofish tries to make all `RevXXXX` commits stable. Or can't monitor all revisions, only the releases?", "added": 1601991940, "modified": 1601992081, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2629#issuecomment-704407193", "source_type": "github"}], "1604068030_mirrored_scsmash3r_github": [{"comment_id": 1425, "body": "IIRC I've already patched (or at least made a PR) to allow passing an array of sites to `corsPermission`; let me check if that was actually merged.", "added": 1601913796, "modified": 1601913796, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2630#issuecomment-703828248", "source_type": "github"}, {"comment_id": 1426, "body": "It looks like I've written the patch but haven't submitted it. Please check if the patch in #2631 works for you, hopefully it'll get merged soon.", "added": 1601914433, "modified": 1601914446, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2630#issuecomment-703833645", "source_type": "github"}], "1604068131_mirrored_imachug_github": [{"comment_id": 1427, "body": "Is GitHub not going to trigger the pipeline?\r\n\r\nYou can check the tests in my repo, though. https://github.com/imachug/ZeroNet/actions/runs/290028296", "added": 1601914912, "modified": 1601915286, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2631#issuecomment-703837569", "source_type": "github"}], "1604068084_mirrored_styromaniac_github": [{"comment_id": 1428, "body": "Do you want a button that says 'whenever I visit site A, redirect me to the same page on site B'?", "added": 1601991750, "modified": 1601991750, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2632#issuecomment-704405389", "source_type": "github"}], "1604068038_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1429, "body": "LGTM now, thanks for the PR! ", "added": 1602567663, "modified": 1602567663, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2635#issuecomment-707588870", "source_type": "github"}], "1604068040_mirrored_Folaht_github": [{"comment_id": 1430, "body": "@Folaht You get this error because the repository `18r929Hq8hE5Pi9Zf7ovMQVyn3WcGfxMgu`, which is a so-called merged site, has `\"merged_type\": \"GitCenter\"` field in its `content.json`, i.e. only sites that have `Merger:GitCenter` permission can access it. You have two options:\r\n\r\n1. Don't change anything in your cloned GitCenter, i.e. use `Merger:GitCenter` permission. As a bonus, this allows interoperability between the fork and the original.\r\n2. Fork `18r929Hq8hE5Pi9Zf7ovMQVyn3WcGfxMgu` as well and change it's `content.json`.\r\n\r\nFWIW, I'd follow the first way.", "added": 1602499290, "modified": 1602499290, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2637#issuecomment-707127374", "source_type": "github"}, {"comment_id": 1431, "body": "What exact revision/commit of ZeroNet are you running? I'm not sure what `MergerSite/MergerSitePlugin.py line 169` refers to", "added": 1602504483, "modified": 1602504483, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2637#issuecomment-707177412", "source_type": "github"}, {"comment_id": 1432, "body": "Okay, so the problem is apparently that removing `merged_type` from content.json doesn't actually make the site non-merged. Could you please maybe rename the issue and update the body to state that that's the root problem please @Folaht?", "added": 1602769385, "modified": 1602769385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2637#issuecomment-709450650", "source_type": "github"}], "1604068044_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1433, "body": "This shouldn't normally happen. What browser are you using? Are there any network errors connected to the websocket? (open 'Network' devtools tab, find an URL like '/ZeroNet-Internal/Websocket', check the response code, etc.)", "added": 1602498876, "modified": 1602498876, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2638#issuecomment-707123636", "source_type": "github"}], "1604068046_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1434, "body": "Please enable debug mode with `--debug` CLI option or add `debug = True` in `zeronet.conf` and send the whole traceback.", "added": 1602498930, "modified": 1602498930, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2639#issuecomment-707124132", "source_type": "github"}, {"comment_id": 1435, "body": "This is a bug on ZeroNet side, but I think the logs have too little information to investigate it further. Was there any traceback or other notices nearby, do you remember what sites or URLs you were browsing at that point of time?", "added": 1602769955, "modified": 1602769963, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2639#issuecomment-709456104", "source_type": "github"}], "1604068148_mirrored_imachug_github": [{"comment_id": 1436, "body": "You didn't get the idea -- it's not about iframes in particular, it's about using Clearnet resources like images, scripts, APIs, etc. It looks like I didn't underline that in the issue body though -- sorry for that.", "added": 1602603213, "modified": 1602603240, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-707931118", "source_type": "github"}, {"comment_id": 1437, "body": "Once again: this issue is not about mirroring entire websites; it's about ZeroNet-to-Clearnet communication.", "added": 1602610113, "modified": 1602610113, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-707990357", "source_type": "github"}, {"comment_id": 1438, "body": "> Take a look instead to this: [#2644 (comment)](https://github.com/HelloZeroNet/ZeroNet/issues/2644#issue-720830107)\r\n\r\nThere is no need to fill this issue with useless references to other issues, I'll look at them anyway.\r\n\r\n> This iframe issue must wait for others opinions as well.\r\n\r\nOh god, do you get it that it's not about iframes *at all*? It's about scripts, or fonts, or APIs -- but not about iframes in particular.", "added": 1602654309, "modified": 1602654356, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-708255852", "source_type": "github"}, {"comment_id": 1439, "body": "Wrong. Use case: ZeroNet social network that allows you to add and verify your email/Facebook/etc. This requires a call to an external service.", "added": 1602670705, "modified": 1602670705, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-708395972", "source_type": "github"}, {"comment_id": 1440, "body": "You are using a social network right now - GitHub. I am not advocating for running Facebook on ZeroNet, i.e. a social network with censorship and spying. Linking external accounts, which is my use case, is not mandatory for the main service but is a nice bonus. ", "added": 1602691989, "modified": 1602691989, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-708605657", "source_type": "github"}, {"comment_id": 1441, "body": "> For http://127.0.0.1:43110/1ADQAHsqsie5PBeQhQgjcKmUu3qdPFg6aA a lot of people would end up in jail and this is nothing compared to other sites on ZeroNet.\r\n\r\nFor hosting /tech/? Go on...\r\n\r\n> But to allow loading anything from facebook or any other network including from GitHub is strongly discouraged.\r\n\r\nEven if that Clearnet site is API that was built for that very zite? Even if the request is `POST /api/verify-email`?.", "added": 1602749197, "modified": 1602749197, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-709201925", "source_type": "github"}, {"comment_id": 1442, "body": "Are you willing to admit there are more use cases of email than verifying if a user is a bot? My ideology has always been that bots must have the same rights, if not more powerful, than users, so I'm not going to add captcha anytime soon. I just want to allow my users to attach emails to their accounts, keeping the following invariant: as long as you trust the site owner (me), you can be sure that if you send a email to that address, the right person will receive it.", "added": 1602753297, "modified": 1602753297, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-709265302", "source_type": "github"}, {"comment_id": 1443, "body": "*You* can do that. And there is nothing wrong in doing that. But there are many people who want to use ZeroNet but have no idea what PGP is. For *them*, email verification is the way.", "added": 1602767609, "modified": 1602767609, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-709433046", "source_type": "github"}, {"comment_id": 1444, "body": "> I think if someone get that far that running ZeroNet probably learning about PGP is not that hard to do.\r\n\r\nYou are overestimating humans. Many people come to ZeroNet not because they don't know about alternatives, but because they are too hard to use for them.", "added": 1602769763, "modified": 1602769803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643#issuecomment-709454356", "source_type": "github"}], "1604068055_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1445, "body": "> Removing the deleted sites from the data folder will download them again\r\n\r\nThat ZeroNet automatically redownloads deleted sites is actually a feature -- it allows you to backup ZeroNet code and data without backing up some popular sites that will be automatically redownloaded when you visit them.\r\n\r\n> Manually need to edit and delete entries regarding the deleted sites from sites.json, users.json and throw out content.db will fix this...\r\n\r\nJust clicking 'Delete' in site sidebar or on ZeroHello should be enough.", "added": 1602654244, "modified": 1602654244, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2644#issuecomment-708255276", "source_type": "github"}, {"comment_id": 1446, "body": "What do you have then? A fork with no admin page and sidebar plugin disabled? In this case, if you disable half of the features, I'm afraid I can't help.\r\n\r\nOn the other hand, maybe you still have the CLI? Try siteDelete command then. ", "added": 1602670584, "modified": 1602670584, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2644#issuecomment-708394900", "source_type": "github"}, {"comment_id": 1447, "body": "Yeah we don't have easy to use CLI... Try this then:\r\n\r\n```\r\npython3 zeronet.py siteCmd address_of_homepage siteDelete your_site_address\r\n```\r\n\r\n`address_of_homepage` is usually `1HeLLo...` but as you don't have ZeroHello, it's your homepage address.\r\n\r\nI admit that this is cumbersome, hopefully #2651 will fix that.", "added": 1602749558, "modified": 1602749558, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2644#issuecomment-709206629", "source_type": "github"}, {"comment_id": 1448, "body": "> your command returns\r\n\r\nNow that is really weird. Can you please send me the entire traceback?", "added": 1602753082, "modified": 1602753089, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2644#issuecomment-709259534", "source_type": "github"}, {"comment_id": 1449, "body": "Apparently we're not starting ZeroNet in case it's not running when handling `siteCmd`, and the error message is completely incomprehensible when `tor=always` or `proxy` are set. Can you try running the same command while ZeroNet is running in background?", "added": 1602770144, "modified": 1602770144, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2644#issuecomment-709457880", "source_type": "github"}], "1604068059_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1450, "body": "> names.json contains many domains which are not registered anymore. That must be cleaned up.\r\n\r\nThis is kind of a feature -- expired domains that no one has squatted still work; although perhaps ZeroNet should warn users about such domains or maybe maintain a local first-come-first-served domain mapping.", "added": 1602657098, "modified": 1602657098, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2646#issuecomment-708282223", "source_type": "github"}, {"comment_id": 1451, "body": "> maybe the next one who register the name would actually use the domain and not squatting it as you said\r\n\r\nNo problem, just show a warning anyway.\r\n\r\n> My guess is a full node and zeroname_updater.py and replacing 1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F in SiteManagerPlugin.py. I would be thankful if you tell me the exact process just to be sure.\r\n\r\nThat is the right way, though I have never tried it myself. ", "added": 1602670485, "modified": 1602670485, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2646#issuecomment-708393947", "source_type": "github"}], "1604068062_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1452, "body": "> Raise the default limits to avoid: #2654\r\n\r\nBugfixing doesn't work like that.", "added": 1603127075, "modified": 1603127075, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-712411179", "source_type": "github"}, {"comment_id": 1453, "body": "> You have that bug only\r\n\r\nI'm the only one who cares enough to report it. ", "added": 1603171143, "modified": 1603171143, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-712680457", "source_type": "github"}, {"comment_id": 1454, "body": "> The line doesn't make any sense, it just causes problems, no matter what the limit is.\r\n\r\nI think this only applies to required files, not optional files. I think it's a good idea to make big files optional anyway.", "added": 1603340424, "modified": 1603340424, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714287885", "source_type": "github"}, {"comment_id": 1455, "body": "> Currently, there would only be benefits to deleting the values completely.\r\n\r\nSo if you accidentally open a malicious site, it will immediately fill up your disk? Sorry, that does not sound like a good idea.", "added": 1603340463, "modified": 1603340463, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714288234", "source_type": "github"}, {"comment_id": 1456, "body": "Sorry, it was difficult to get through your rant, and I don't get your point. You said modern sites are 1-2 GiB each. An average user browses at least 100 sites. Do you think that using 100-200 GiB of disk storage is acceptable? That *is* worse, people will get angry because ZeroNet eats up their disk space, not because of a notification. And if someone doesn't know what a megabyte is, they'd better leave ZeroNet, there are enough idiots on the Clearnet.", "added": 1603357865, "modified": 1603357865, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714449950", "source_type": "github"}, {"comment_id": 1457, "body": "> Yes, 200GB is perfectly acceptable\r\n\r\nHeck, some of the devices I'm running ZeroNet on don't have half of that, and other devices don't have half so much free space. Most disk drive that are installed in modern laptops are 256 to 512 GiB, Windows/Linux/Mac OS (bonus points if you do dual boot) take up at least a quarter of that, user data takes up a lot of space too. Do you want to know the reason why people use web apps instead of installing them? -- right, because they take up space.", "added": 1603364864, "modified": 1603364864, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714519674", "source_type": "github"}, {"comment_id": 1458, "body": "> nowadays everyone has a pendrive with capacity around 256GB, 512GB, and 1TB.\r\n\r\nFirst: many people, not everyone. Second: that capacity is not for ZeroNet exclusively.\r\n\r\n> Lastly, those who don't have @HelloZeroNet home page will never ever get a notification about the file size in the first place.\r\n\r\nYou are several years behind the mainline.", "added": 1603364926, "modified": 1603364926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714520378", "source_type": "github"}, {"comment_id": 1459, "body": "> Downloading a few big file, may make your CSS, fonts and even HTML files to fail downloading and so makes your site unusable!\r\n\r\nFiles are downloaded in a specific order so this usually shouldn't happen. If it does, please send me how to reproduce the issue.\r\n\r\n> I raised the default file size limit to 30MB and the site size limit to 1024MB what's your problem with this\r\n\r\nI don't want to accidentally download a whole 1 GiB of content (possibly illegal) in background. 10 MiB is a good limit for basic code and some text. When there's not enough space for user data, a nice notification pops up with a big 'Increase size' text on it, so I judge if the site is important to me and if it is, I allow the increase.", "added": 1603367616, "modified": 1603367631, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714550556", "source_type": "github"}, {"comment_id": 1460, "body": ">  NOT 1 GB!\r\n\r\nBut site limit is.\r\n\r\n> Torrent is not illegal?\r\n\r\nNot all of them are illegal, like not all ZeroNet sites are illegal. The difference is that most torrent clients show you the list of files while ZeroNet does not.", "added": 1603374193, "modified": 1603374193, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714619681", "source_type": "github"}, {"comment_id": 1461, "body": "> In torrent always download all users the entire content\r\n\r\nSorry, what? You are kind of wrong.", "added": 1603424634, "modified": 1603424634, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-714986818", "source_type": "github"}, {"comment_id": 1462, "body": "Most sites on ZeroNet that I host are under 10 MB. My response is obvious.", "added": 1604039929, "modified": 1604039929, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-719449069", "source_type": "github"}, {"comment_id": 1463, "body": "I'm okay about increasing required file limit from 1 MB to 10 MB though.", "added": 1604039955, "modified": 1604039955, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-719449269", "source_type": "github"}, {"comment_id": 1464, "body": "> There is no such thing as required files.\r\n\r\nRequired files are all files except optional files.", "added": 1604047476, "modified": 1604047476, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-719505845", "source_type": "github"}, {"comment_id": 1465, "body": "> a few ttf font and one video already hitting the limits in any sites\r\n\r\nZeroNet. Does. Not. Work. Well. Without. BigFile. Plugin. That's it, big optional files, even if they are always downloaded, work better than big required files.", "added": 1604047529, "modified": 1604047529, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2647#issuecomment-719506221", "source_type": "github"}], "1604068158_mirrored_imachug_github": [{"comment_id": 1466, "body": "This is a separate feature request. Want it? -- create a new issue.", "added": 1602753035, "modified": 1602753035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2651#issuecomment-709258148", "source_type": "github"}], "1604068055_mirrored_gukandrew_github": [{"comment_id": 1467, "body": "> The file server port is always random!\r\n\r\nThat's difficult to implement in Docker, and the other dockerfile in this repo has a hardcoded port as well. Making it random counts as a feature request, but you shouldn't ask the OP to do that.", "added": 1602781854, "modified": 1602781854, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2652#issuecomment-709564264", "source_type": "github"}, {"comment_id": 1468, "body": "> The only person who actually do something is @imachug.\r\n\r\nDon't underestimate nofish who started this project and don't overestimate me who made a few contributions. We all burn out from time to time, it's okay.", "added": 1602782157, "modified": 1602782163, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2652#issuecomment-709566763", "source_type": "github"}, {"comment_id": 1469, "body": "@HelloZeroNet Please merge this PR and lock the discussion. And you guys please stop acting childish.", "added": 1602926495, "modified": 1602926495, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2652#issuecomment-710881990", "source_type": "github"}, {"comment_id": 1470, "body": "@gukandrew I am sorry for the insults. ZeroNet GitHub repository gets invaded by such people from time to time.", "added": 1602926544, "modified": 1602926544, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2652#issuecomment-710882796", "source_type": "github"}, {"comment_id": 1471, "body": "> As for me that would be overcomplicating, as we use our container only for ZN and could run as non root user even without virtualenv.\r\n\r\nI think so too, perhaps we're not going to add more Python programs to the container.", "added": 1602928022, "modified": 1602928022, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2652#issuecomment-710911967", "source_type": "github"}], "1604068070_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1472, "body": "That applies to literally all software though. It may be a good idea to change the spelling to 'For extra security, run ZeroNet under a separate user with no access to your personal data' or alike.", "added": 1602781775, "modified": 1602781775, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2653#issuecomment-709563613", "source_type": "github"}], "1604068163_mirrored_imachug_github": [{"comment_id": 1473, "body": "Commit f0b0f57643edf002548b9962fcf63e578605af34.", "added": 1603126988, "modified": 1603126994, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2654#issuecomment-712410423", "source_type": "github"}, {"comment_id": 1474, "body": "It is a part of ZeroNet repository, hence I'm reporting the problem here.", "added": 1603171122, "modified": 1603171122, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2654#issuecomment-712680270", "source_type": "github"}, {"comment_id": 1475, "body": "> There should be a different repository for plugins. Just like there is a different repository for HelloZeroNet_ , ZeroMe, and others.\r\n\r\nAsk nofish to do that, I don't have enough privileges.", "added": 1603548142, "modified": 1603548142, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2654#issuecomment-715997895", "source_type": "github"}], "1604068113_mirrored_styromaniac_github": [{"comment_id": 1476, "body": "> I'm pretty sure it works.\r\n\r\nOf course it does not. You're looking for this line:\r\n\r\nhttps://github.com/HelloZeroNet/ZeroNet/blob/29dac8a1889e6c23773292718bec813e00ae2d74/plugins/UiFileManager/media/js/FileList.coffee#L1\r\n\r\nI believe it should be a text file whitelist instead of blacklist though. Perhaps whitelisting txt, json, html, css, js and a few others I can't remember now should work.", "added": 1603262130, "modified": 1603262130, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2656#issuecomment-713442004", "source_type": "github"}, {"comment_id": 1477, "body": "> The applications logo is based on the logo of the Electrum bitcoin wallet, **I strongly recommend to remove the ZeroNet Mobile** if you have Electrum installed and you have bitcoin in that wallet.\r\n\r\nNow *that* is an interesting way to find malicious packages. Oh, its icon is similar to Electrum, oh fuck, remove it ASAP!", "added": 1603262192, "modified": 1603262192, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2656#issuecomment-713442591", "source_type": "github"}, {"comment_id": 1478, "body": "> **ZeroNet is basically a JavaScript software full of shitty coffee scripts**\r\n\r\n![](https://i.kym-cdn.com/entries/icons/mobile/000/027/475/Screen_Shot_2018-10-25_at_11.02.15_AM.jpg)\r\n\r\nHow would you make a web application without JavaScript?", "added": 1603287932, "modified": 1603287932, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2656#issuecomment-713709645", "source_type": "github"}, {"comment_id": 1479, "body": "> In the other hand the application on Google Play has permissions like BILLING which along with Electrum and ZeroNet running can result in stolen funds. Why need ZeroNet Mobile BILLING permission? I tell you, because it is a scam!\r\n\r\nThen report it to the correct repository, nofish has no connection with the ZeroNet-kivy project.", "added": 1603287972, "modified": 1603287972, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2656#issuecomment-713710085", "source_type": "github"}, {"comment_id": 1480, "body": "> Tell me @imachug why the plugin need a different list of mime types when UiRequest already has them\r\n\r\nThat is a good question. Perhaps it'd be a good idea to use server-side `mimetype` module to detect file types without additional detection by browser. @HelloZeroNet Agreed?", "added": 1603288037, "modified": 1603288037, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2656#issuecomment-713710720", "source_type": "github"}, {"comment_id": 1481, "body": "This does not imply that Python is being replaced, it just means more JS code is added. I don't see how this is a problem.", "added": 1603301698, "modified": 1603301698, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2656#issuecomment-713861961", "source_type": "github"}, {"comment_id": 1482, "body": "# :roll_eyes: ", "added": 1603860381, "modified": 1603860381, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2656#issuecomment-717760175", "source_type": "github"}], "1604068077_mirrored_JabbaDesilijicTiure_github": [{"comment_id": 1483, "body": "This is not going to fix the mentioned issue but it's a worthy change anyway. Please add `.ogv` and `.oga` too though.", "added": 1603262259, "modified": 1603262259, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2657#issuecomment-713443221", "source_type": "github"}, {"comment_id": 1484, "body": "Yes, that's why I asked you to add support for `.ogv` and `.oga` extensions as well, for which more specific MIME types can be defined.", "added": 1603287863, "modified": 1603287863, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2657#issuecomment-713709014", "source_type": "github"}, {"comment_id": 1485, "body": "Listen in. Even the article you're referring to notes that there are `.ogg`, `.oga` and `.ogv` extensions. All I'm asking for is that, if you added `.ogg`, please also add MIME types for `.oga` and `.ogv`.", "added": 1603301759, "modified": 1603301759, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2657#issuecomment-713862460", "source_type": "github"}], "1604068117_mirrored_styromaniac_github": [{"comment_id": 1486, "body": "Are you sure it works because of .htaccess, not because of ZeroNet core? What happens if you just delete .htaccess?", "added": 1603339165, "modified": 1603339165, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2658#issuecomment-714276713", "source_type": "github"}, {"comment_id": 1487, "body": "There is no mention of htaccess in all ZeroNet code, I'm sure there is another explanation.", "added": 1603364963, "modified": 1603364963, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2658#issuecomment-714520780", "source_type": "github"}]}, "next_topic_id": 107, "topic": [{"topic_id": 1604065884, "title": "Pass hash to iframe", "body": "When you open http://127.0.0.1:43110/... and then change URL to http://127.0.0.1:43110/...#abc, the iframe changes its `location.hash` to `#abc`. That's OK.\r\n\r\nWhen you directly open http://127.0.0.1:43110/...#abc, the iframe's `location.hash` is still empty! Changing to http://127.0.0.1:43110/...#def works again.\r\n\r\nSo, we could check `location.hash` in wrapper and pass it to inner iframe.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1492949030, "modified": 1493025426, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/914", "source_type": "github"}, {"topic_id": 1604065886, "title": "Pass #hash to inner iframe on load", "body": "See #914 ", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1492951482, "modified": 1493025285, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/915", "source_type": "github"}, {"topic_id": 1604065891, "title": "wrapperReplaceState hash", "body": "Is it possible to make `wrapperReplaceState` change only hash and not reload the entire page?\r\nExample:\r\n```javascript\r\npage.cmd(\"wrapperReplaceState\", [null, \"\", \"#abc\"]);\r\n```\r\nThis command changes URL to `http://127.0.0.1:43110/.../?#abc`. Notice that `?`. That's why the page reloads. I want to get `http://127.0.0.1:43110/.../#abc`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1493216626, "modified": 1494073988, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/918", "source_type": "github"}, {"topic_id": 1604065947, "title": "OptionalManager not working with files containing space", "body": "**Steps to Reproduce:**\r\n1. Create new zite\r\n2. Change `optional` entry to `^abc def$`\r\n3. Create file `abc def` (say, `Hello World!`)\r\n4. Sign\r\n\r\n**Actual Results:**\r\n`optional_files` entry in `content.json` is empty.\r\n\r\n**Expected Results:**\r\n`optional_files` entry in `content.json` contains `abc def` file.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1496235127, "modified": 1511880483, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/961", "source_type": "github"}, {"topic_id": 1604065964, "title": "Replace tools/coffeescript with pip package", "body": "Replaces BAT/WSH/JS *solution* with pip package.\r\n\r\nOn my machine WSH script just gave `Compiler error: Unable to Base64 encode...`. That's probably because:\r\n```javascript\r\ntypeof \"ABCDE\"[0] == \"undefined\"\r\n```\r\n\r\n...Don't know why it worked before. Maybe because ZeroNet saw my own CoffeeScript compiler?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1497272805, "modified": 1497358387, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/974", "source_type": "github"}, {"topic_id": 1604065966, "title": "Partly implement multisig", "body": "Signs with keys are now saved. `signs_required` is checked.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1497273790, "modified": 1575391029, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/975", "source_type": "github"}, {"topic_id": 1604065974, "title": "Allow fileRules for root content.json", "body": "Currently `fileRules('content.json')` throws `Pop from empty list`. This patch fixes the exception and gives valid result.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1497332307, "modified": 1497342274, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/981", "source_type": "github"}, {"topic_id": 1604065976, "title": "Allow 'signers' be list", "body": "-- duplicate --", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1497358165, "modified": 1497586338, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/982", "source_type": "github"}, {"topic_id": 1604065978, "title": "cert_auth_id is not tested during first sign", "body": "```python\r\n# ContentManager.py\r\ntry:\r\n    if not content:\r\n        content = self.site.storage.loadJson(inner_path)  # Read the file if no content specified\r\n    user_urn = \"%s/%s\" % (content[\"cert_auth_type\"], content[\"cert_user_id\"])  # web/nofish@zeroid.bit\r\n    cert_user_id = content[\"cert_user_id\"]\r\nexcept Exception:  # Content.json not exist\r\n    user_urn = \"n-a/n-a\"\r\n    cert_user_id = \"n-a\"\r\n```\r\n\r\nIf default file size is `0` , and file size for `nofish@zeroid.bit` is `100000`, then nobody can sign. That's because if there is no `content.json`, user id is tested against `n-a/n-a@n-a`.\r\n\r\nProbably we can change `except` block to get current ZeroID (or other cert provider).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1497428784, "modified": 1497776285, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/983", "source_type": "github"}, {"topic_id": 1604065980, "title": "Don't ask user for privatekey if file can be signed with auth_privatekey", "body": "In ZeroNet core, both `privatekey` and `auth_privatekey` are used to check if user can sign `content.json`, but there is no such check in `Sidebar` plugin.\r\n\r\nHere we also check if `auth_address` can sign `content.json`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1497536162, "modified": 1497586372, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/984", "source_type": "github"}, {"topic_id": 1604066130, "title": "Cannot add more than 2 signers", "body": "First, I had this in root `content.json`:\r\n```json\r\n...\r\n\"signers\": [\"1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD\", \"1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw\"]\r\n....\r\n```\r\nSigning works.\r\n\r\n---\r\n\r\nNow I change it to:\r\n```json\r\n...\r\n\"signers\": [\"1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD\", \"1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw\", \"18jNLCocEexrDZeyEiVe2yRGoAXd4KxDD7\", \"1CvyxRucf7BbDvGtFe5LayTS2qX88VN7Er\"]\r\n....\r\n```\r\n\r\n2 more signers. I am trying to sign `content.json` and get this:\r\n`'ascii' codec can't decode byte 0xb0 in position 25: ordinal not in range(128)`\r\n\r\n---\r\n\r\nFirst I thought `18jNLCocEexrDZeyEiVe2yRGoAXd4KxDD7` or `1CvyxRucf7BbDvGtFe5LayTS2qX88VN7Er` are incorrect, but then I removed first two signers (`1MMvgRPh9NGX2z5AGQMdoftTngCxS6DciD`, `1FUXrC4M9YuJ2hu7t82cgQ1nKFumcxwDhw`) and signing worked again! **Is there a limitation for signers count, maybe in pybitcointools?**", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1504155739, "modified": 1504344657, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1103", "source_type": "github"}, {"topic_id": 1604066141, "title": "[Feature Request] Allow non-admin zites use siteClone", "body": "Can we add a notification `This site want to clone 1MeFqFfFFGQfa1J3gJyYYUvb5Lksczq7nH. [Allow]` for non-admin sites? For example, ZeroMe could add a button `Create a new hub` which would clone `1Red...`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1504927317, "modified": 1506048740, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1111", "source_type": "github"}, {"topic_id": 1604066143, "title": "MergerSite: Add actionFileList and actionDirList proxy", "body": "Add `actionFileList` and `actionDirList` proxies to allow reading directory content.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1505012089, "modified": 1522815124, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1112", "source_type": "github"}, {"topic_id": 1604066145, "title": "[Bug] fileGet not properly working with binary files", "body": "Unpack this file and save it to some zite: [pack-5037293b68ff33e1c798bff13ba20a855879d168.zip](https://github.com/HelloZeroNet/ZeroNet/files/1290311/pack-5037293b68ff33e1c798bff13ba20a855879d168.zip).\r\n\r\nNow, call `fileGet(\"pack-5037293b68ff33e1c798bff13ba20a855879d168.idx\", false, \"text\", 300)`. The WebSocket simply hangs and you don't get responses to other commands.\r\n\r\nReload page and try `fileGet(\"pack-5037293b68ff33e1c798bff13ba20a855879d168.idx\", false, \"base64\", 300)`. The first part of the file (nearly 750 bytes) is loaded and decoded correctly, but then data ends and I can't get the last 1KB of the file.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1505014540, "modified": 1505017733, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1113", "source_type": "github"}, {"topic_id": 1604066147, "title": "Read files as binary in fileGet()", "body": "#1113", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1505015241, "modified": 1522815123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1114", "source_type": "github"}, {"topic_id": 1604066151, "title": "Allow 'backup' or 'log' as directories", "body": "Currently we have `directory=\"backup\"` parameter for `actionServerShowdirectory`. This PR also allows `log` as valid directory.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1505577720, "modified": 1506357182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1117", "source_type": "github"}, {"topic_id": 1604066155, "title": "[URGENT] ZeroNet security", "body": "*Conversation moved to ZeroMail. @shortcutme, I've sent you a mail. Please check as soon a possible. I'll publish mail here when this is fixed.*", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1505894730, "modified": 1505930454, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1119", "source_type": "github"}, {"topic_id": 1604066157, "title": "Add commands for scripts", "body": "Looks like `zeronet.py` is designed for *a)* those who don't use browser, *b)* scripts. This patch adds some more script commands (`getDataDir`, `getLogDir`, `getRootDir`) because paths can vary on different systems.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1505965457, "modified": 1506357182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1120", "source_type": "github"}, {"topic_id": 1604066159, "title": "Add siteUpdate to zeronet.py", "body": "Currently there is `siteSign`, `sitePublish`, etc. available via `python zeronet.py`. What about also adding `siteUpdate`? It would be interesting if ZeroNet is not running but you want to get the latest version of the site via script or something like that.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1505975504, "modified": 1505977858, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1121", "source_type": "github"}, {"topic_id": 1604066162, "title": "Allow siteClone for non-admin sites", "body": "Adds notification \"Clone site **1HeLLo...**? `Clone`\" for non-admin sites. For sites with ADMIN permission, leave everything as is.\r\n\r\nRejects `{\"error\": \"Not a site: something\"}` if `address` is not valid. If source site wasn't downloaded yet, stop cloning, but don't tell the client about it to avoid exposing site existense.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1506048142, "modified": 1506357182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1122", "source_type": "github"}, {"topic_id": 1604066164, "title": "[WIP] Move server info formatting to Config.py; use it via getConfig console command", "body": "Also return `data_dir`, `log_dir` and `src_dir` (for scripts).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1506074265, "modified": 1506357224, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1123", "source_type": "github"}, {"topic_id": 1604066166, "title": "Move server info formatting to Config.py; use it via getConfig console command", "body": "Also return `log_dir`, `src_dir` and `data_dir`. That's a new, secure version of PR.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1506345744, "modified": 1522815179, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1124", "source_type": "github"}, {"topic_id": 1604066200, "title": "Greenlet failing on OSX and Windows", "body": "```\r\n[2017-10-16 14:50:09,571] ERROR    Site:... sands.git/packed-refs fileGet error: [Errno 2] No such file or directory: u'/Users/Manwe/Tools/ZeroNet/data/1RxTdD54fbEdVZs2hZCUBWirJf5bSsAUg/sands.git/packed-refs'\r\n[2017-10-16 14:50:09,686] DEBUG    Site:... Websocket send error: ConcurrentObjectUseError: This socket is already used by another greenlet: <bound method Waiter.switch of <gevent.hub.Waiter object at 0x1093e1370>> in UiWebsocket.py line 197 > websocket.py line 349 > websocket.py line 333 > _socket2.pyo line 419 > _socket2.pyo line 355 > _socket2.pyo line 328 > _socket2.pyo line 176\r\n[2017-10-16 14:50:09,686] DEBUG    Site:... Websocket send error: ConcurrentObjectUseError: This socket is already used by another greenlet: <bound method Waiter.switch of <gevent.hub.Waiter object at 0x1093e1370>> in UiWebsocket.py line 197 > websocket.py line 349 > websocket.py line 333 > _socket2.pyo line 419 > _socket2.pyo line 355 > _socket2.pyo line 328 > _socket2.pyo line 176\r\n[2017-10-16 14:50:09,686] DEBUG    Site:... Websocket send error: ConcurrentObjectUseError: This socket is already used by another greenlet: <bound method Waiter.switch of <gevent.hub.Waiter object at 0x1093e1370>> in UiWebsocket.py line 197 > websocket.py line 349 > websocket.py line 333 > _socket2.pyo line 419 > _socket2.pyo line 355 > _socket2.pyo line 328 > _socket2.pyo line 176\r\n```\r\n\r\n...and a lot more messages. My site is trying to read many files at once, can it be related? This fails on OSX and works on Windows.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1508146230, "modified": 1509306104, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1149", "source_type": "github"}, {"topic_id": 1604066212, "title": "File modes", "body": "I want to host a git repository on ZeroNet. And I want to host hooks there. I mean, git expects hooks to have *executable* flag, and ZeroNet doesn't handle these flags. How can I fix that? Maybe add another entry to `content.json`?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1508504698, "modified": 1514068064, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1158", "source_type": "github"}, {"topic_id": 1604066222, "title": "DbQuery and Newsfeed bug", "body": "@shortcutme, I understand that SQL is difficult, but using regular expressions to parse SQL... Here are some more hacks:\r\n\r\n1. Add (brackets) around NewsFeed's `body LIKE ? OR title LIKE ?`.\r\n2. WHERE without AND is still WHERE", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1509021640, "modified": 1510059248, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1165", "source_type": "github"}, {"topic_id": 1604066224, "title": "Database rebuilding is sync", "body": "```\r\n[20:22:17] SiteManager Saved sites in 0.17s (generate: 0.00s, write: 0.17s)\r\n[20:22:17] SiteManager Updated merger sites in 0.001s\r\n[20:22:17] Site:1Nse6W..bCUy Deleting files from content.json...\r\n[20:22:20] Site:1Nse6W..bCUy Loaded json: 100 (latest: data/users/1AuZm3GJNEjCpos2o1jGpBMMESVD6HoKNb/content.json)\r\n[20:22:23] Site:1Nse6W..bCUy Loaded json: 200 (latest: data/users/1NtmpGU6qsCjdgHnJfH6sqd9T1e218BEDA/content.json)\r\n[20:22:27] Site:1Nse6W..bCUy Loaded json: 300 (latest: data/users/13EcWBVSknkf9riZSPAZU3txtLhi1iFTxv/content.json)\r\n[20:22:31] Site:1Nse6W..bCUy Loaded json: 400 (latest: data/users/17f64SjwxAqW34g1knWK8Np3bRetSHZZur/content.json)\r\n[20:22:35] Site:1Nse6W..bCUy Loaded json: 500 (latest: data/users/1BUeUfHV5u29pFxovYfEfBdfZAaKDc6wpd/content.json)\r\n[20:22:38] Site:1Nse6W..bCUy Loaded json: 600 (latest: data/users/14eUCVpQR3kAgx1MAps9VFtUUofLGmZZ1S/content.json)\r\n[20:22:41] Site:1Nse6W..bCUy Loaded json: 700 (latest: data/users/1LZzxKdbygD4K1u8qeoLpN2kp7tCWY3BHW/content.json)\r\n[20:22:45] Site:1Nse6W..bCUy Loaded json: 800 (latest: data/users/18GVhFq7iTRQHqqVRT5CipRkhWFoc4Tahi/content.json)\r\n[20:22:47] Site:1Nse6W..bCUy Loaded json: 900 (latest: data/users/1DCaahetWrggu37aPsZwyXgwcvKRzx1zip/content.json)\r\n[20:22:50] Site:1Nse6W..bCUy Loaded json: 1000 (latest: data/users/1GEfdZ7AyiBeEj8341JU5yZrCWCCczGDg5/content.json)\r\n[20:22:53] Site:1Nse6W..bCUy Loaded json: 1100 (latest: data/users/1PKNvEdchbcRLGFcnC5i8NynuVivAfK7W/content.json)\r\n[20:22:56] Site:1Nse6W..bCUy Loaded json: 1200 (latest: data/users/1KHRVkkqCFHDsGsfbpur4NTYaqfoxuMCEB/content.json)\r\n[20:22:59] Site:1Nse6W..bCUy Loaded json: 1300 (latest: data/users/1K5E7pZZuKAHGHN7Mn4L4yfyXgHdZxUySs/content.json)\r\n[20:23:02] Site:1Nse6W..bCUy Loaded json: 1400 (latest: data/users/1LTbyAkCarDCq7jtcEHXptbJwRE8TpKJSQ/content.json)\r\n[20:23:04] Site:1Nse6W..bCUy Loaded json: 1500 (latest: data/users/13ARcZ9svp3y5XZZCr4ZJzhoSCTR2xSaDW/content.json)\r\n[20:23:09] Site:1Nse6W..bCUy Loaded json: 1600 (latest: data/users/1J8gSmYVtns2ezWCEbX4u5RGzYVrKRc3E3/content.json)\r\n[20:23:13] Site:1Nse6W..bCUy Loaded json: 1700 (latest: data/users/1D9PFKqnik1Z4JtDZnYhyQERZAu5ZiXqFX/content.json)\r\n```\r\n\r\nDuring this GUI doesn't respond.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1509027844, "modified": 1512167994, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1166", "source_type": "github"}, {"topic_id": 1604066249, "title": "Accept text/html, text/* and */* as Accept header", "body": "Fixes #1182. Also allows simple curl requests.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1510836605, "modified": 1513471323, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1183", "source_type": "github"}, {"topic_id": 1604066277, "title": "Parse both UNION and UNION ALL", "body": "For query like:\r\n```sql\r\nSELECT 1 AS field\r\nUNION ALL\r\nSELECT 2 AS field\r\n```\r\n\r\nQuery is splitted to: 1. `SELECT 1 AS field` 2. `ALL SELECT 2 AS field`. So, second query is parsed as `{\"ALL\": \"SELECT\", \"2 AS field\": None}`. This PR fixed such behaviour.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1513268225, "modified": 1522815125, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1205", "source_type": "github"}, {"topic_id": 1604066310, "title": "Handle :param being an array", "body": "I am not sure if this is so important, but using `:params` in `NewsFeed` queries proved it is useful.\r\n\r\nSo now the following code will work:\r\n\r\n```javascript\r\npage.cmd(\"dbQuery\", [\r\n    \"SELECT * FROM posts WHERE posts.reply_to IN :replies AND posts.reply_to_json IN :replies_json\"\r\n], {\r\n    replies: [\"1\", \"2\"],\r\n    replies_json: [\"3\", \"4\"]\r\n});\r\n```\r\n\r\nCode from this PR transforms above SQL query to:\r\n```sql\r\nSELECT * FROM posts WHERE posts.reply_to IN :replies__0, :replies__1 AND posts.reply_to_json IN :replies_json__0, :replies_json__1\r\n```\r\n...and placeholders to:\r\n```\r\n{\r\n    replies__0: \"1\",\r\n    replies__1: \"2\",\r\n    replies_json__0: \"3\",\r\n    replies_json__1: \"4\"\r\n}\r\n```\r\n\r\n---\r\n\r\nI know you can use `?` right now, but that doesn't work with complex queries.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1514615179, "modified": 1522815123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1230", "source_type": "github"}, {"topic_id": 1604066313, "title": "Sign & Publish in one button", "body": "Closes #1229", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1514640830, "modified": 1522815124, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1231", "source_type": "github"}, {"topic_id": 1604066315, "title": "File streaming not ending", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.6.0 (rev 3178)\r\n  * Operating system: Windows 10\r\n  * Web browser: Chrome\r\n  * Tor status: disabled\r\n  * Opened port: yes\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\nRanged requests like `0-100000` when file size is `100` only never end. Moreover, after a couple of such requests even normal requests fail.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Create new site\r\n  2. Copy file `00changelog.d` and copy it to site root: [00changelog.zip](https://github.com/HelloZeroNet/ZeroNet/files/1595079/00changelog.zip)\r\n  3. Open DevTools\r\n  4. Define function:\r\n```javascript\r\nfunction ajax(size) {\r\n\tpage.cmd(\"wrapperGetAjaxKey\", [], ajax => {\r\n\t\tlet xhr = new XMLHttpRequest;\r\n\t\txhr.open(\"GET\", \"00changelog.d?ajax_key=\" + ajax);\r\n\t\txhr.responseType = \"arraybuffer\";\r\n\t\txhr.setRequestHeader(\"Range\", \"bytes=0-\" + size);\r\n\t\txhr.onload = e => {\r\n\t\t\tif(xhr.status != 206) {\r\n\t\t\t\tconsole.error(xhr.status);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Loaded\");\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.onreadystatechange = () => {\r\n\t\t\tconsole.log(\"State\", xhr.readyState);\r\n\t\t};\r\n\t\txhr.onerror = e => {\r\n\t\t\tconsole.error(e);\r\n\t\t};\r\n\t\tconsole.log(\"Begin loading\");\r\n\t\txhr.send(null);\r\n\t});\r\n}\r\n```\r\nBasically this will send a range request.\r\n\r\nNow most important:\r\n1. Send `ajax(50)`\r\n2. Send `ajax(1000)` a couple of times (about 5 is enough for me)\r\n3. Send `ajax(50)`\r\n\r\n#### Observed Results:\r\n\r\n1.\r\n```\r\nBegin loading\r\nState 2\r\nState 3\r\nLoaded\r\n```\r\n2.\r\n```\r\nBegin loading\r\nState 2\r\nState 3\r\n```\r\n3.\r\n```\r\nBegin loading\r\nState 2\r\nState 3\r\n```\r\n\r\nNotice that data was sent (`State 3`), though even normal request didn't end (`Loaded`).\r\n\r\n#### Expected Results:\r\n\r\n1.\r\n```\r\nBegin loading\r\nState 2\r\nState 3\r\nLoaded\r\n```\r\n2.\r\n```\r\nBegin loading\r\nState 2\r\nState 3\r\nLoaded\r\n```\r\n3.\r\n```\r\nBegin loading\r\nState 2\r\nState 3\r\nLoaded\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1514700331, "modified": 1516546626, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1232", "source_type": "github"}, {"topic_id": 1604066325, "title": "Don't handle `open` or `success` in error message as a sign of port being opened", "body": "Fixes #1239 by returning `{\"result\": None, \"message\": \"error goes here\"}` instead of `{\"result\": True/False, \"message\": \"error goes here\"}`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1515901535, "modified": 1515925093, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1240", "source_type": "github"}, {"topic_id": 1604066343, "title": "Use `exec init in globals(), locals()` instead of `exec(init, globals(), locals())`", "body": "We are using Python 2, not python 3, `exec(init, globals(), locals())` you are using in `bench()` sometimes raises SyntaxError's.\r\n\r\nCloses #1252.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1516422021, "modified": 1522815124, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1253", "source_type": "github"}, {"topic_id": 1604066355, "title": "FileQuery + CORS", "body": "Hello! I know `fileQuery` is quite an old thing, but it is useful to query some CORS sites that don't have any database.\r\n\r\nSo this PR adds two options:\r\n1. First, it adds `fileQuery` to `corsFuncWrapper` list, so you can `fileQuery(\"cors-something...\")` now.\r\n2. The second change, which isn't connected with CORS, `fileQuery(\"file\", \"posts.slug=home\")` is valid now - so you can use a string as value for searching.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1517052657, "modified": 1522815124, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1261", "source_type": "github"}, {"topic_id": 1604066435, "title": "Add \"Open site directory\" button", "body": "See #1314", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1520745379, "modified": 1522815124, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1325", "source_type": "github"}, {"topic_id": 1604066437, "title": "'siteInfo' can be used as 'actionAs' argument for CORS sites", "body": "Allows getting peer count/some content.json data/etc. from CORS site.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1520745793, "modified": 1522815124, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1326", "source_type": "github"}, {"topic_id": 1604066506, "title": "Fix mergerSiteAdd typo", "body": "Security fix. Sites could be downloaded to proxies via running `mergerSiteAdd(site_address)` in console while on ZeroMe.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1522993285, "modified": 1561528008, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1378", "source_type": "github"}, {"topic_id": 1604066567, "title": "Peer-to-peer applications", "body": "In fact, this is not a bug but a feature request. So I probably won't follow the recommended issue format.\r\n\r\n# Idea\r\n\r\nZeroNet completely depends on sites. The only thing possible to be built on ZeroNet is a site.\r\n\r\nHowever, I see a way to support much more. With the idea I promote we will be able to bring a blockchain here. The idea itself is rather simple: let's give the developer the control over P2P messages. For example, you could spread information to all peers, *without files*!\r\n\r\n# Implementation\r\n\r\nNow to the implementation. There will be a new ZeroFrame command called `peerBroadcast(message, peer_count=5, broadcast=True, immediate=False, timeout=60)`. This will:\r\n\r\n1. Generate message ID by `some_hash(str(rand()) + \",\" + json.dumps(message))`.\r\n2. Get `peer_count` random peers having current site.\r\n3. Trigger `peerBroadcast(message=message, hash=hash_from_p1, peer_count=peer_count, broadcast=broadcast, immediate=immediate)` action on those peers.\r\n\r\n## P2P\r\n\r\nWhen a peer receives `peerBroadcast` from another peer, it first verifies that current message wasn't yet received *in current session* (i.e. check it by hash in some dict or list). It's unlikely that the IDs will be duplicated (they may be, but it should be handled by the zite correctly). And it's unlikely that the message will be received twice after shutdown (i.e. get mesasge, shutdown, start again, connect to other peers, get message again). So we don't need to store the list in file system.\r\n\r\nIf the current message hasn't been received yet, it is sent to all current site's WebSockets via `peerReceive(ip=from_ip, hash=message_hash, message=message)` message. `from_ip` is IPv4, IPv6, or some other ID in case of Tor or I2P. So the site gets messages. The site may respond with another `peerBroadcast` message if it wants to.\r\n\r\n## `immediate`\r\n\r\nIf no WebSocket connection exists, e.g. the browser is closed, *and `immediate` flag is set*, the message is saved to the queue *in memory*. When the site is opened, the WebSocket connection is opened as well, and the queue is flushed to the socket. I say \"*in memory*\" because in fact if you shut down ZeroNet, other messages may be broadcasted, so you'll have to fetch them (e.g. by another `peerBroadcast` command).\r\n\r\n## `broadcast`\r\n\r\nFinally, *if the message hasn't been received yet* (this prevents infinite loop), the message is broadcasted to some random `peer_count` peers. All the arguments are same as received.\r\n\r\n## Results\r\n\r\nIf `broadcast` is set to `False`, the count of peers will be rather small (`peer_count` or less if just a few peers are available). So we may get results from other peers (let's call them neighbours).\r\n\r\nIn this case, neighbours send the message to WebSockets, get the answer (via some another ZeroFrame command, e.g. `peerReply`), and return it to previous peer. The previous peer sets some timeout, i.e. in case that WebSocket isn't open or the remote side hangs. Finally, the gathered results are send in form of `[{ip: ip1, reply: reply1}, ...]`. `reply` is the exact reply from neighbour's WebSocket, and `ip` is either IPv4 or IPv6 or some other ID, e.g. in case of Tor/I2P.\r\n\r\n## Reply\r\n\r\nAnother ZeroFrame command called `peerSend(ip, message)` will send a message to peer specified by IP `ip`. The remote side may then reply, which results in return from `actionPeerSend(self, to, ip, message)`, so the zite gets the reply.\r\n\r\n# Cross-site broadcast\r\n\r\nIt makes sense to ask user for permission to use CORS (because some site may store private data) and Merger (because it allows writing). However, just sending *a message* is secure enough. It makes no sense to do something serious when *just a message* is received. So `as(..., \"peer...\", ...)` should always be allowed *for all sites*, which will send a message to another site.\r\n\r\n# Spam spam spam spam\r\n\r\nSending messages to other peers may be unsafe. For example, peer A may send *lots of messages* to other peers. This leads to spamming their network traffic and wasting CPU power. So I'd like to add two levels of protection: *passive* and *active*.\r\n\r\n## Passive protection\r\n\r\nA new entry called `message_filter` will be added to `content.json`. When a message is received from peer A, it is checked against `message_filter` regex in `content.json`. If the message doesn't match (i.e. it's invalid), it shouldn't be sent to WebSocket, to other peers. In this case peer A gets *5 ban points*. So spamming won't be possible (no more than 20 invalid messages).\r\n\r\n## Active protection\r\n\r\nThe only kind of correct but spam messages is *messages which are correct, but contain invalid data the remote side cannot handle*. In case of Bitcoin this is invalid block hash. It's impossible to run any code in Python safely, so here comes *active protection in browser*. When a message is received from WebSocket, the zite may send `peerInvalid(hash)`, which will *add 10 ban points* to the peer from which that message was received. This is more than *passive protection* because it's more likely to ban.\r\n\r\nHowever, there is no way to reply to a broadcast message, so there is no way to check whether a message is correct without something like `sleep; if didn't receive peerInvalid, then this message is valid`. So instead we add `peerValid(hash)` command, which marks a message as valid, and will make broadcast a bit faster; however, if it isn't sent, it will be timeouted in say 5s, so messages will be transfered just a bit slower.\r\n\r\n# Usage examples\r\n\r\n## IRC\r\n\r\n```javascript\r\n// Using my ZeroPage library, hopefully this will be easy to understand\r\nzeroPage.on(\"peerReceive\", ({params}) => {\r\n\tconst {ip, message} = params;\r\n\tshowNewMessage(message);\r\n});\r\n\r\nbuttonSend.onclick = () => {\r\n\tzeroPage.cmd(\"peerBroadcast\", {message: messageContent.value});\r\n\tshowNewMessage(messageContent.value);\r\n};\r\n```\r\n\r\n---\r\n\r\nMore examples are welcome.\r\n\r\n---\r\n\r\nLooking forward to hear from you, @HelloZeroNet.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1526530110, "modified": 1527066414, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1425", "source_type": "github"}, {"topic_id": 1604066574, "title": "[Ready to be merged] Peer-to-peer applications", "body": "Implements a part of #1425.\r\n\r\n## Current state\r\n\r\nPractically finished, all features are tested.\r\n\r\nDocs are ready (check wiki).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1526704556, "modified": 1575391029, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430", "source_type": "github"}, {"topic_id": 1604066579, "title": "Add fileList, dirList as CORS commands", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1526710556, "modified": 1535723008, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1432", "source_type": "github"}, {"topic_id": 1604066581, "title": "Full server-side ZIP support", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: v0.6.2 (3467), but doesn't really matter\r\n  * Operating system: Windows, doesn't matter\r\n  * Web browser: Chrome, doesn't matter\r\n  * Tor status: error, doesn't matter\r\n  * Opened port: yes, doesn't matter\r\n  * Special configuration: none, doesn't matter\r\n\r\n### Step 2: Describe the problem:\r\n\r\nOpening a file within a ZIP, e.g. `127.0.0.1:43110/something/something.zip/gfdfdgd` works. But WebSocket `fileList`, `dirList`, `fileGet`, etc. don't work.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Try `fileGet(\"yourzip.zip/file_within_zip.txt\")`\r\n\r\n#### Observed Results:\r\n\r\n`File doesn't exist: data/users/1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di/Standard.zip/components/button.vue`\r\n\r\n#### Expected Results:\r\n\r\nFile content.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1526740915, "modified": 1536181658, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1433", "source_type": "github"}, {"topic_id": 1604066587, "title": "Allow fileQuery as CORS command", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1527146186, "modified": 1527486564, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1437", "source_type": "github"}, {"topic_id": 1604066591, "title": "Fix signing&publishing file owned by ZeroID/other provider user", "body": "Fixes my old PR.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1527315429, "modified": 1527486404, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1439", "source_type": "github"}, {"topic_id": 1604066738, "title": "Allow 'fileList' (and other) commands on CORS", "body": "See file changes.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1535723295, "modified": 1535725590, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1558", "source_type": "github"}, {"topic_id": 1604066864, "title": "OpenSSL not working on 64-bit Windows", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.6.3 (rev3576)\r\n  * Operating system: Windows 10, 64 bit\r\n  * Web browser: Firefox\r\n  * Tor status: error\r\n  * Opened port: yes\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Buy 64-bit processor\r\n  2. Install 64-bit Windows\r\n  3. Run ZeroNet\r\n\r\n#### Observed Results:\r\n\r\nI get:\r\n\r\n```\r\nInternal error: WindowsError: [Error 193] %1 is not a valid Win32 application\r\nUiWebsocket.py line 81 > UiWebsocket.py line 267 > CryptMessagePlugin.py line 34 > CryptMessagePlugin.py line 14 > CryptMessage.py line 8 > builtins.py line 96 > __init__.py line 16 > builtins.py line 96 > openssl.py line 504 > openssl.py line 501 > openssl.py line 73 > __init__.py line 366\r\n```\r\n\r\nThis happens because the DDL ZeroNet uses to load OpenSSL is 32-bit. However, my Python is 64-bit, and a 64-bit application cannot use a 32-bit DLL.\r\n\r\n#### Expected Results:\r\n\r\nIt works.\r\n\r\n#### Temporary Solution:\r\n\r\nInstall 32-bit Python.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1537710247, "modified": 1581791853, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1655", "source_type": "github"}, {"topic_id": 1604066870, "title": "Cannot shutdown ZeroNet", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.6.3 (3612)\r\n  * Operating system: Windows 10, x64\r\n  * Web browser: Firefox\r\n  * Tor status: error\r\n  * Opened port: yes\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Start ZeroNet\r\n  2. Shut down ZeroNet via ZeroHello\r\n\r\n#### Observed Results:\r\n\r\n```\r\n[12:20:11] BroadcastServer Stopping, socket: <socket fileno=1236 sock=0.0.0.0:1544>\r\n[12:20:11] ConnServer Stopping\r\n[12:20:11] Ui.UiServer Stopping...\r\n[12:20:11] Ui.UiServer Socket closed: 4\r\n[12:20:11] BroadcastServer Stopped listening on port 1544\r\n[12:20:11] Ui.UiServer 127.0.0.1 - - [2018-09-24 12:20:11] \"GET /Websocket?wrapper_key=1a5c55c2563752f18d5d98b89d0903a892a5800a864bce3ad195757c1eabadee HTTP/1.1\" 101 129 9.481000\r\n[12:20:11] Ui.UiServer 127.0.0.1 - - [2018-09-24 12:20:11] \"GET /Websocket?wrapper_key=737590ee65253c15743137800393828454c4812364abfcf905f58fbac6446ffe HTTP/1.1\" 101 129 9.496000\r\n[12:20:11] Ui.UiServer 127.0.0.1 - - [2018-09-24 12:20:11] \"GET /Websocket?wrapper_key=6fa6c3f1ba881abac3dbf5e758fab3431f95b489f4cddb19f9974142c0eef5a6 HTTP/1.1\" 101 129 9.481000\r\n[12:20:11] Ui.UiServer Stopped.\r\n[12:20:12] Ui.UiServer 127.0.0.1 - - [2018-09-24 12:20:12] \"GET /Websocket?wrapper_key=ee8f42e9f9b783afcdfea9232cdd2461314ef3694c5b9bad81445a4da621d25e HTTP/1.1\" 101 129 5.313000\r\n[12:20:14] ConnServer Conn# 3 45.77.23.92  [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn# 4 217.70.197.95 [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn# 5 107.172.237.134 [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn# 6 144.48.7.45  [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn# 7 66.42.49.228 [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn# 8 108.61.192.31 [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn# 9 207.148.123.94 [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn#10 183.156.99.252 [?] > Closing connection: [Cleanup] Connect timeout: 14.810s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn#11 83.162.192.96 [?] > Closing connection: [Cleanup] Connect timeout: 14.794s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Conn#12 103.73.66.144 [?] > Closing connection: [Cleanup] Connect timeout: 14.794s, waiting_requests: 0, sites: 0, buff: 0...\r\n[12:20:14] ConnServer Checkconnections ended\r\n[12:20:19] Site:1HeLLo..Tf3D Announced in mode start to 1/18 trackers in 20.029s, errors: ['udp://tracker.leechers-paradise.org:6969'], slow: ['1.75s zero://zero.booth.moe#f36ca555bee6ba216b14d10f38c16f7769ff064e0e37d887603548cc2e64191d:443']\r\n[12:20:21] BroadcastServer Broadcast using ips ['192.168.1.3', '127.0.0.1'] on port 1544: discoverRequest\r\n[12:20:21] Site:1HeLLo..Tf3D Recent peers 20 of 20 (need: 25)\r\n[12:20:21] ConnServer Conn#13 qhxjow7tqpvm2apr.onion [?] > Connecting...\r\n[12:20:21] TorManager Creating new Tor socket to qhxjow7tqpvm2apr.onion:15441\r\n[12:20:21] TorManager Waiting for startup...\r\n[12:20:21] ConnServer Conn#14 owlgi7mdfoausxep.onion [?] > Connecting...\r\n[12:20:21] TorManager Creating new Tor socket to owlgi7mdfoausxep.onion:11345\r\n[12:20:21] TorManager Waiting for startup...\r\n[12:20:21] ConnServer Conn#15 qgvq2grf2bm3h625.onion [?] > Connecting...\r\n[12:20:21] TorManager Creating new Tor socket to qgvq2grf2bm3h625.onion:35172\r\n[12:20:21] TorManager Waiting for startup...\r\n[12:20:21] ConnServer Conn#11 83.162.192.96 [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 83.162.192.96 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://83.162.192.96:15441 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn# 4 217.70.197.95 [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 217.70.197.95 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://217.70.197.95:25995 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn# 8 108.61.192.31 [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 108.61.192.31 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://108.61.192.31:17851 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn# 9 207.148.123.94 [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 207.148.123.94 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://207.148.123.94:12013 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn# 7 66.42.49.228 [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 66.42.49.228 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://66.42.49.228:12091 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn#10 183.156.99.252 [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 183.156.99.252 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://183.156.99.252:20177 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn# 6 144.48.7.45  [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 144.48.7.45 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://144.48.7.45:22488 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn# 3 45.77.23.92  [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 45.77.23.92 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://45.77.23.92:15555 announce failed: Invalid response: None in mode start\r\n[12:20:21] ConnServer Conn#12 103.73.66.144 [?] > Crypt connection error: 'NoneType' object has no attribute 'getsockopt', adding ip 103.73.66.144 as broken ssl.\r\n[12:20:21] Site:1HeLLo..Tf3D Tracker zero://103.73.66.144:12589 announce failed: Invalid response: None in mode start\r\n[12:20:22] TorManager Tor controller connect error: error: [Errno 10061] [Error 10061] No connection could be made because the target machine actively refused it. in TorManager.py line 190 > _socket2.py line 238\r\n[12:20:23] TorManager Connecting to Tor Controller 127.0.0.1:49051\r\n[12:20:29] Site:1HeLLo..Tf3D Tracker http://tracker.swateam.org.uk:2710/announce announce failed: No response after 30s in mode start\r\n[12:20:29] Site:1HeLLo..Tf3D Tracker http://open.acgnxtracker.com:80/announce announce failed: No response after 30s in mode start\r\n[12:20:29] Site:1HeLLo..Tf3D Tracker http://retracker.mgts.by:80/announce announce failed: No response after 30s in mode start\r\n...\r\n```\r\n\r\n#### Expected Results:\r\n\r\nZeroNet shuts down.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1537771208, "modified": 1537858821, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1659", "source_type": "github"}, {"topic_id": 1604067006, "title": "Fix `from Config import config`", "body": "Always run `from Config import config` inside `PluginManager.afterLoad`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1541425623, "modified": 1544899271, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1766", "source_type": "github"}, {"topic_id": 1604067251, "title": "Fix double --open_browser", "body": "When you call `start.py`, it calls `zeronet.py` with argument `--open_browser default_browser`. `Config.py` parses `zeronet.conf` and changes this `--open_browser default_browser` to `--open_browser correctbrowser`. \r\n\r\nPretend you untoggle `Open web browser on ZeroNet startup` in UiConfig.\r\n\r\nThen, if you restart ZeroNet (e.g. from UiConfig), ZeroNet calls *the current executable* with *the arguments it was called with*: `start.py --open_browser default_browser`. `start.py` calls `zeronet.py --open_browser default_browser --open_browser default_browser`. Then, `Config.py` reads the correct value (`False`) from `zeronet.conf`, and replaces `--open_browser default_browser` with `--open_browser False`. However, only the first instance is replaced, and you get `--open_browser False --open_browser default_browser`. When this string is parsed, the latter value is used, and the browser is opened (which is not what you expected).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554518323, "modified": 1555690837, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1960", "source_type": "github"}, {"topic_id": 1604067268, "title": "Get rid of pyelliptic", "body": "So I got tired of this dependency we are all talking about. This PR replaces `pyelliptic` with other libraries.\r\n\r\n1. For AES, I use `pycryptodome` (see `plugins/CryptMessage/CryptMessagePlugin.py`). It's simple to use and should be simple to maintain:\r\n```python\r\ncipher = AES.new(key, AES.MODE_CBC, iv)\r\nencrypted = cipher.encrypt(pad(text, AES.block_size))\r\n```\r\n\r\n2. For ECIES, I wrote my own library. I've tested it on your tests, and compared the binary data with some other data, and I'm sure it works correctly. The format is compatible with pyelliptic's format (though I think that this format is weird and seldom used). For key derivation (ECDH), I used some code from `pyelliptic` and fixed it to be compatible with modern OpenSSL (according to the docs). For the AES stage, I use `pycryptodome`. For MAC, I use the standard `hmac` module (preinstalled).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554862945, "modified": 1576399567, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1974", "source_type": "github"}, {"topic_id": 1604067282, "title": "Add ECDSA actions to CryptMessage", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555222125, "modified": 1555350902, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1984", "source_type": "github"}, {"topic_id": 1604067287, "title": "Fix ECDSA on CryptMessage", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555382445, "modified": 1555690533, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1987", "source_type": "github"}, {"topic_id": 1604067296, "title": "Support web notifications", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555690996, "modified": 1556272272, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1993", "source_type": "github"}, {"topic_id": 1604067298, "title": "A third small ECDSA fix", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555747536, "modified": 1556261784, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1994", "source_type": "github"}, {"topic_id": 1604067306, "title": "Signatures not recognized after upgrading to Python 3", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: v0.7.0 (rev4080)\r\n  * Operating system: Windows (but should be reproducible on all OSes)\r\n  * Web browser: doesn't matter\r\n  * Tor status: doesn't matter\r\n  * Opened port: doesn't matter\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\n#### One-line TL;DR\r\n\r\nCompressed recovered public keys are not supported by libsecp256k1message.\r\n\r\n#### A bit longer TL;DR\r\n\r\nKaffieID, CryptoID and several other providers generate signatures like this:\r\n\r\n```\r\nH6YkcFTuwKMVMHI2yycGQIFGbCZVNsZEZvSlOhKpHUt/BlADY94egmDAWdlrbbFrP9wH4aKcEfbLO8sa6f63VU0=\r\n```\r\n\r\nIf you base64-decode this, you get this: *(newlines mine)*\r\n\r\n```\r\n1f\r\na624 7054 eec0 a315 3072 36cb 2706 4081 466c 2655 36c6 4466 f4a5 3a12 a91d 4b7f\r\n0650 0363 de1e 8260 c059 d96b 6db1 6b3f dc07 e1a2 9c11 f6cb 3bcb 1ae9 feb7 554d\r\n```\r\n\r\nThe first integer (`0x1f`) specifies the Recovery ID. Since it's greater than `0x1e`, we understand that the \"recovered public key\" is \"compressed\". `pybitcointools` support this. OpenSSL supports this. `libsecp256k1` (which is the default library!) does not.\r\n\r\n#### The full issue\r\n\r\nThe verifying works like this:\r\n\r\n1. Decode public key from the signature\r\n2. Hash it to get address\r\n3. Compare to the expected address\r\n\r\nThis is the difference: in case the signature uses uncompressed public key, you get this: *(newlines mine)*\r\n\r\n```\r\n04\r\n86bf45b660266d383fbd9046e7ed54c3255ab9bc6e11dc7bdb5a2ef94fa41e49\r\naa5baacddf555d8891ec2c9f52e7b770a470586efacdb765cba245f4e6602d0a\r\n```\r\n\r\nIf it uses compressed public key, you get this:\r\n\r\n```\r\n02\r\n86bf45b660266d383fbd9046e7ed54c3255ab9bc6e11dc7bdb5a2ef94fa41e49\r\n```\r\n\r\nSince the strings are different, the hash is different as well, so the address differs. OpenSSL and pybitcointools support this behaviour, libsecp256k1message doesn't.\r\n\r\n#### Steps to reproduce:\r\n\r\n```\r\nbtctools.ecdsa_recover(\"1NQUem2M4cAqWua6BVFBADtcSP55P4QobM#web/gitcenter\", base64.b64encode(b\"\\x1f\\xa6$pT\\xee\\xc0\\xa3\\x150r6\\xcb'\\x06@\\x81Fl&U6\\xc6Df\\xf4\\xa5:\\x12\\xa9\\x1dK\\x7f\\x06P\\x03c\\xde\\x1e\\x82`\\xc0Y\\xd9km\\xb1k?\\xdc\\x07\\xe1\\xa2\\x9c\\x11\\xf6\\xcb;\\xcb\\x1a\\xe9\\xfe\\xb7UM\"))\r\n# -> 0286bf45b660266d383fbd9046e7ed54c3255ab9bc6e11dc7bdb5a2ef94fa41e49 (original signature used)\r\nbtctools.ecdsa_recover(\"1NQUem2M4cAqWua6BVFBADtcSP55P4QobM#web/gitcenter\", base64.b64encode(b\"\\x1b\\xa6$pT\\xee\\xc0\\xa3\\x150r6\\xcb'\\x06@\\x81Fl&U6\\xc6Df\\xf4\\xa5:\\x12\\xa9\\x1dK\\x7f\\x06P\\x03c\\xde\\x1e\\x82`\\xc0Y\\xd9km\\xb1k?\\xdc\\x07\\xe1\\xa2\\x9c\\x11\\xf6\\xcb;\\xcb\\x1a\\xe9\\xfe\\xb7UM\"))\r\n# -> 0486bf45b660266d383fbd9046e7ed54c3255ab9bc6e11dc7bdb5a2ef94fa41e49aa5baacddf555d8891ec2c9f52e7b770a470586efacdb765cba245f4e6602d0a (after replacing `0x1f` with `0x1b`, i.e. using compressed recovered public key).\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1556353177, "modified": 1556802422, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2000", "source_type": "github"}, {"topic_id": 1604067308, "title": "Build wrapper all.js to support web notifications", "body": "Forgot to build `all.js`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1556367602, "modified": 1556674951, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2001", "source_type": "github"}, {"topic_id": 1604067318, "title": "Add privToPub and pubToAddr commands", "body": "I think that doing this stuff in browser is a bad idea -- the site size increases a lot, however, we have these functions in Python already -- so we can use ZeroFrame to access them.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1556676658, "modified": 1558497544, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2006", "source_type": "github"}, {"topic_id": 1604067340, "title": "Add PeerMessage support for Python 3", "body": "I've ported PeerMessage to py3 recently. This has been tested (probably even more than py2 version -- I had to backport some fixes). Please merge this.\r\n\r\nMain discussion: #1430 (please post not-py3-only issues there).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1558258754, "modified": 1563363575, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2024", "source_type": "github"}, {"topic_id": 1604067343, "title": "Handle fileNeed timeout", "body": "I'm not sure whether this is a Python3-only bug.\r\n\r\nWhen a timeout happens, `gevent.Timeout` is raised. However, it doesn't inherit from Exception -- so `except Exception` doesn't catch it.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1558258894, "modified": 1558497544, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2025", "source_type": "github"}, {"topic_id": 1604067345, "title": "ECMAScript modules", "body": "ECMAScript modules are rather new, but they are supported by Chrome and Firefox already, so I think it's important to support them as well.\r\n\r\nThis PR makes several changes:\r\n\r\n1. All filenames ending with `.js` are forced to have `text/javascript` mimetype (fixes Chrome and Firefox)\r\n2. JavaScript files are allowed to be loaded without Referer header (fixes Chrome)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1558259096, "modified": 1560669768, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2026", "source_type": "github"}, {"topic_id": 1604067349, "title": "Fix calling start.py to reopen browser", "body": "Calling start.py/zeronet.py twice in a row wouldn't work, because ZeroNet would try to logrotate before locking lock.pid.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1558616568, "modified": 1561527593, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2029", "source_type": "github"}, {"topic_id": 1604067379, "title": "Fix starting ZeroNet via start.py", "body": "There was a bug in commit `d1e404f0`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561531154, "modified": 1561952699, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2052", "source_type": "github"}, {"topic_id": 1604067381, "title": "Support different cryptographies", "body": "This PR adds support for other cryptographies -- since now, not only Bitcoin is supported.\r\n\r\nOne implementation example is [Ark plugin](https://github.com/imachug/Plugin-Ark), which you can use immediately by checking out `py3-ark` branch of my fork (https://github.com/imachug/ZeroNet/tree/py3-ark). While Ark is similar to Bitcoin, it's a good example for multiple cryptographies support.\r\n\r\n\r\n## FAQ\r\n\r\n### Can I use both Bitcoin and Ark?\r\n\r\nYes.\r\n\r\n### As a site owner, can I decide what cryptography to use?\r\n\r\nYes.\r\n\r\n### As a ZeroMail user, can I switch to Ark?\r\n\r\nNo. When ZeroMail adds other cryptography support, the answer will change to \"Yes\".\r\n\r\n### What cryptographies can possibly be supported?\r\n\r\nAll that computers can use.\r\n\r\n\r\n## Tutorial for site owners\r\n\r\n<details><summary>Click to expand</summary>\r\n\r\nSince now, sites can use different cryptographies for signatures. When you create a site via ZeroHello or clone someone's site, you get the following question:\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/60177508-bc2e3b80-9821-11e9-845f-3ee280e7680a.png)\r\n\r\n(of course, the shown cryptographies depend on what plugins you have)\r\n\r\nWhatever cryptography you choose, you get an address. For example, APXEPGdqwc5MbasL4SZBHdGYRxcAPjAc6A is an example address for Ark that I got while cloning ZeroTalk.\r\n\r\nIf you're making a site without user data, it's ready. You can do everything you usually do with zites. When you give the link to the zite to people who have the required cryptography installed, they'll be able to use the zite.\r\n\r\nIf you're making a site with user data, and you want the users to be able to use Ark, you'll have to use the specific certificate provider (e.g. ArkID -- a zite I've made). Of course, Bitcoin-address zites can support Ark-address users and vice versa.\r\n\r\nIf you're making a certificate provider, your certificates will use the same cryptography as what your site uses. This means that ArkID must use Ark cryptography, etc.\r\n\r\n</details>\r\n\r\n\r\n## Tutorial for users\r\n\r\nThere is none -- you just install the plugin that adds the cryptography you want.\r\n\r\n\r\n## Tutorial for those who want to add a new cryptography\r\n\r\n<details><summary>Click to expand</summary>\r\n\r\nThe recommended way is to add it via a plugin, which is really easy.\r\n\r\nFirst, you create a `plugins/[name]` directory for your plugin. Example: `plugins/Ark`, `plugins/Etherium`.\r\n\r\nSecond, you create a file for your cryptography implementation inside that directory. `Crypt[name].py` is what *should* be used. Example: `CryptArk.py`, `CryptEtherium.py`. You'll need to use `Crypt.Crypt` module a lot, so you'd better import it:\r\n\r\n```python\r\nfrom Crypt import Crypt\r\n```\r\n\r\nHere's what you'll have to implement:\r\n\r\n```python\r\nnewPrivatekey() -> str\r\nhdPrivatekey(seed: str, child: int) -> str\r\nprivatekeyToAddress(privatekey: str) -> str\r\nsign(data: str, privatekey: str) -> str\r\nverify(data: str, valid_address: List[str]|str, sign: str) -> bool\r\nisAddress(address: str) -> bool\r\n```\r\n\r\n### `newPrivatekey`\r\n\r\nGenerates a new random private key. Luckily, `Crypt` module contains a `newSeed` function that returns a random 256-bit key as a `bytes` object. Example:\r\n\r\n```python\r\ndef newPrivatekey():\r\n    return \"super!\" + Crypt.newSeed().hex()\r\n```\r\n\r\n### `hdPrivatekey`\r\n\r\nGenerates a private key deterministically from a seed and an index (called `child`). The seed is a 256-bit hexadimical string (so it contains of 64 hexadimical digits), the child is a small integer.\r\n\r\nAn ideal implementation should follow the contracts below:\r\n\r\n```python\r\nassert hdPrivatekey(a, b) == hdPrivatekey(a, b)  # The private key id generated deterministically\r\nassert b == c or hdPrivatekey(a, b) != hdPrivatekey(a, c)  # Different children result in different private keys\r\nassert a == c or hdPrivatekey(a, b) != hdPrivatekey(c, b)  # Different seeds result in different private keys\r\n```\r\n\r\nExample:\r\n\r\n```python\r\ndef hdPrivatekey(seed, child):\r\n    return \"super!\" + hashlib.sha256(seed + str(child)).hexdigest()\r\n```\r\n\r\n### `privatekeyToAddress`\r\n\r\nGiven a privatekey, transforms it into an address. In case the given private key wasn't generated by the current cryptography implementation, it should raise `Crypt.CryptError`.\r\n\r\nExample:\r\n\r\n```python\r\ndef privatekeyToAddress(privatekey):\r\n    if not privatekey.startswith(\"super!\"):\r\n        raise Crypt.CryptError(\"The privatekey must start with 'super!'\")\r\n    return hashlib.sha256(privatekey).hexdigest()[:12]\r\n```\r\n\r\n### `sign`\r\n\r\nSigns a given string with a given privatekey and returns the signature as a string (usually base64-encoded).\r\n\r\n### `verify`\r\n\r\nVerifies that a given signature really signs the given data, and that the signature was generated by `valid_address`. (or, if it's a list, by any of valid addresses). Should raise `Crypt.CryptError` if the signature wasn't generated by the current cryptography.\r\n\r\n### `isAddress`\r\n\r\nGiven an address, checks that it was generated by the current cryptography implementation.\r\n\r\nExample:\r\n\r\n```python\r\ndef isAddress(address):\r\n\treturn len(address) == 12 and all((c in \"0123456789abcdef\" for c in address))\r\n```\r\n\r\n---\r\n\r\nFinally, you should *register* the cryptography, so that ZeroNet knows where to find its implementation. Create `plugins/[name]/__init__.py` file with the following content:\r\n\r\n```python\r\nfrom Crypt import Crypt\r\nfrom . import Crypt[name]\r\nCrypt.registerCrypto(\"[name]\", Crypt[name])\r\n```\r\n\r\nExample:\r\n\r\n```python\r\nfrom Crypt import Crypt\r\nfrom . import CryptSuper\r\nCrypt.registerCrypto(\"Super\", CryptSuper)\r\n```\r\n\r\n</details>\r\n\r\n\r\n## Docs\r\n\r\n<details><summary>Click to expand</summary>\r\n\r\nFirst things first -- ZeroNet creates unique `auth_address` and `auth_privatekey` for every site that you visit. If the site is a certificate provider, it can use these values to generate a certificate for the user.\r\n\r\nBy default, site's `auth_address` & `auth_privatekey` use the same cryptography as the site uses.\r\n\r\nThis feature can be used to create different certificate providers (see [ARKidcu9P7HTpig7htMsxTgEuUAp3h34qg.zip](https://github.com/HelloZeroNet/ZeroNet/files/3337969/ARKidcu9P7HTpig7htMsxTgEuUAp3h34qg.zip)).\r\n\r\n\r\n### Modify `siteClone`\r\n\r\n`siteClone` has received a new argument. The signature has been changed to the following:\r\n\r\n```python\r\nsiteClone(address: str, root_inner_path: str=\"\", target_address: str=None, redirect: bool=True, crypto: str=\"Bitcoin\")\r\n```\r\n\r\nIn case the cryptography is not passed and the user doens't have any other cryptographies, the behaviour isn't changed.\r\n\r\nIn case the cryptography is not passed, but the user has several cryptographies, they get the following question:\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/60178470-4c6d8000-9824-11e9-89cc-32732b236aba.png)\r\n\r\nIn case several cryptographies are passed (i.e. as a list), the list above is filtered to only include the allowed cryptographies.\r\n\r\nIn case the cryptography is passed and only one cryptography is allowed, the behaviour is the same as before this PR (the only difference is the cryptography actually used).\r\n\r\n</details>\r\n\r\n\r\n## Implementation details\r\n\r\n<details><summary>Click to expand</summary>\r\n\r\nAll the core & plugins have been updated to use a new `Crypt.Crypt` module instead of `Crypt.CryptBitcoin`, and `Crypt.CryptBitcoin` has been updated to be no different from any other cryptography implementation.\r\n\r\nFirst, we'll discuss how using `CryptBitcoin` is different from using `Crypt`.\r\n\r\n### Rename `CryptBitcoin.privatekeyToAddress` -> `Crypt.privatekeyToAddress`\r\n\r\nNo changes except renaming.\r\n\r\n### Rename `CryptBitcoin.sign` -> `Crypt.sign`\r\n\r\nNo changes except renaming.\r\n\r\n### Rename `CryptBitcoin.verify` -> `Crypt.verify`\r\n\r\nNo changes except renaming.\r\n\r\n### Modify `CryptBitcoin.newPrivatekey` -> `Crypt.newPrivatekey`\r\n\r\nOld signature:\r\n\r\n```python\r\nnewPrivatekey() -> str\r\n```\r\n\r\nNew signature:\r\n\r\n```python\r\nnewPrivatekey(crypto: str) -> str\r\n```\r\n\r\n### Modify `CryptBitcoin.hdPrivatekey` -> `Crypt.hdPrivatekey`\r\n\r\nOld signature:\r\n\r\n```python\r\nhdPrivatekey(seed: str, child: int) -> str\r\n```\r\n\r\nNew signature:\r\n\r\n```python\r\nhdPrivatekey(crypto: str, seed: str, child: int) -> str\r\n```\r\n\r\n</details>", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561538071, "modified": 1586087783, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053", "source_type": "github"}, {"topic_id": 1604067384, "title": "Change default branch to py3", "body": "As far as I know, `master` branch hasn't been updated recently, and most development is done on `py3` branch. I propose changing the default branch to `py3`, which will:\r\n\r\n1. Make it easier to make PRs and not get weird \"This PR cannot be automatically merged\" messages because of wrong target branch,\r\n2. Show the most recent on the home repository page,\r\n3. And will calculate the contributions in GitHub Insights.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561567384, "modified": 1566305164, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2054", "source_type": "github"}, {"topic_id": 1604067392, "title": "Allow sites to lock pointer", "body": "Add `allow-pointer-lock` to iframe sandbox.\r\n\r\nFixes #2057.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561867510, "modified": 1561952601, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2059", "source_type": "github"}, {"topic_id": 1604067394, "title": "Fix siteCloning subdirectory with -default files", "body": "How to reproduce:\r\n\r\nPut `ZeroHello/template-new/data/users/content.json-default` file, and add it to `includes` to `ZeroHello/template-new/content.json-default`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561953100, "modified": 1563363385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2060", "source_type": "github"}, {"topic_id": 1604067396, "title": "Allow some paths to contain .. but not ../", "body": "Basically #1453 but for py3.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561983509, "modified": 1563363418, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2061", "source_type": "github"}, {"topic_id": 1604067407, "title": "Guess content type correctly", "body": "Fix e.g. vue.min.js being reported as text/plain instead of text/javascript.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1562220814, "modified": 1563363385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2069", "source_type": "github"}, {"topic_id": 1604067499, "title": "Fix preferring CLI argument over zeronet.conf", "body": "Fix using open_browser from CLI arguments in case there are several `--open_browser` arguments, which often happens after restarts.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1565504347, "modified": 1565519284, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2137", "source_type": "github"}, {"topic_id": 1604067528, "title": "Allow files with `..` as a name substring", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566187781, "modified": 1566203869, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2160", "source_type": "github"}, {"topic_id": 1604067532, "title": "Toggling \"Open web browser on ZeroNet startup\" twice doesn't restore old browser", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: v0.7.0, rev4172\r\n  * Operating system: reproducible on all\r\n  * Web browser: doesn't matter\r\n  * Tor status: doesn't matter\r\n  * Opened port: doesn't matter\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\nQuote from UiConfig.coffee:\r\n\r\n```coffee\r\nif key == \"open_browser\"\r\n\tif value\r\n\t\tvalue = \"default_browser\"\r\n\telse\r\n\t\tvalue = \"False\"\r\n```\r\n\r\nThis means that once you click the checkbox (even accidentally) and you've manually set a browser (which might have a long path with CLI options), there's no easy way to restore it.\r\n\r\nThis also leads to a fact that toggling the checkbox twice doesn't remove the \"1 configuration item value changed\" banner, while toggling any other checkbox twice *does* remove it. This leads to confusion.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Setup a non-standard browser path in zeronet.conf (even `open_browser = chrome` will work)\r\n  2. Open UI Config\r\n  3. Toggle \"Open web browser on ZeroNet startup\" checkbox\r\n  4. Toggle \"Open web browser on ZeroNet startup\" checkbox\r\n  5. Press \"Save settings\"\r\n  6. Reboot ZeroNet\r\n\r\n#### Observed Results:\r\n\r\n`chrome` is replaced with `default_browser`\r\n\r\n#### Expected Results:\r\n\r\n`chrome` is not changed", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566207724, "modified": 1566207724, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2162", "source_type": "github"}, {"topic_id": 1604067534, "title": "Add GitLab CI/CD support", "body": "This PR adds GitLab CI/CD support. `codecov` and `coveralls` aren't used (yet).\r\n\r\nSome people might find this PR weird: ZeroNet is hosted on GitHub, why is it *GitLab* CI then? One of the reasons is that ZeroNet has [a GitLab repository](https://gitlab.com/HelloZeroNet/ZeroNet) as a mirror. Another reason is more of \"why not\": there are Dockerfile and Vargantfile in this repository already, so adding another file should not be an issue. The third reason is something I'm currently discussing with nofish privately.\r\n\r\nThis is how GitLab CI looks:\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/63271347-7756dc00-c289-11e9-937e-839454b72b96.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/63271385-8dfd3300-c289-11e9-8033-5712fabb0456.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/63271420-a1a89980-c289-11e9-8aad-4b3c4aa6f2f1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/63271453-b38a3c80-c289-11e9-9c06-a85a12d2965a.png)\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566212436, "modified": 1566218201, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2163", "source_type": "github"}, {"topic_id": 1604067539, "title": "Allow blob: protocol", "body": "Fixes #2165", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566235168, "modified": 1566289009, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2166", "source_type": "github"}, {"topic_id": 1604067541, "title": "Add --merge_media config option", "body": "Currently, the only way to enable all.js/all.css merging is `--debug` option. However, `--debug`, uh, logs too much debug information and has other side effects. Thus, I'm adding a separate `--merge_media` option. Backward compatibility is retained.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566280352, "modified": 1566285492, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2167", "source_type": "github"}, {"topic_id": 1604067545, "title": "Proposal: Reverse iframe", "body": "## Abstract\r\n\r\nCurrently ZeroNet uses a wrapper for sidebar and notifications UI, and embeds site content with an iframe. This proposal fixes some issues caused by iframing by embedding ZeroNet UI into site content.\r\n\r\n## Rationale\r\n\r\n- #2165, #2057 - All features have to be marked unsafe by default, so supporting new ones is troublesome;\r\n- #2154 - Most people don't understand what NOSANDBOX means;\r\n- #2086 - Some interactive content in iframes might get blocked;\r\n- #2058 - Pull-to-refresh is working weird with iframes;\r\n- #2003 - \"Opening as child window\" is sometimes impossible to bypass;\r\n- #1736 - Opening link in a new tab is more difficult than required;\r\n- #1707, #565 - Embedding a site into a site is unsafe with an iframe;\r\n- #1667 - Browser header style can only be set by root frame;\r\n- #1403 - Scrolling is impossible, iframe is most likely the reason;\r\n- #1399, #1054, #29 - localStorage, IndexedDB, etc. are not available in sandboxed iframes;\r\n- #1237 - Fullscreen API doesn't work;\r\n- #1236, #1262 - Some Vue plugins don't work;\r\n- #1010 - Creating Web Workers requires data: URI usage;\r\n- #469 - History management requires ZeroFrame usage.\r\n\r\n## Overview\r\n\r\nCurrent architecture:\r\n\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 WRAPPER (src/Ui/template/wrapper.html)              \u2502\r\n\u2502 Stores secrets (e.g. wrapper key)                   \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 WS UPLINK                                       \u2502 \u2502\r\n\u2502 \u2502 UiWebsocket API                                 \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 NOTIFICATIONS (<div>)                           \u2502 \u2502\r\n\u2502 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2502\r\n\u2502 \u2502 \u2551 SITE NOTIFICATIONS (<div>)                  \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 Unsafe content (possible XSS)               \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502 \u2502\r\n\u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502\r\n\u2502 \u2502 \u2502 WRAPPER NOTIFICATIONS (<div>)               \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2502 Safe content (no leaking or spoofing)       \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 SIDEBAR (<div>)                                 \u2502 \u2502\r\n\u2502 \u2502 Site and key management, safe                   \u2502 \u2502\r\n\u2502 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2502\r\n\u2502 \u2502 \u2551 SITE DATA                                   \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 Title, description, donate links, etc.      \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502\r\n\u2502 \u2551 IFRAME SANDBOX                                  \u2551 \u2502\r\n\u2502 \u2551 Unsafe content (managed by site code)           \u2551 \u2502\r\n\u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nSafety layers are separated with double border.\r\n\r\nNo software has zero bugs. This includes security issues. There are many possible attack points here:\r\n\r\n- Site notifications (protected by manual escaping) were exploited by me, revealing site private keys;\r\n- Sidebar content (protected by manual escaping) wasn't exploited according to my sources, but it's still a valid point of attack;\r\n- Iframe sandbox (protected by browser) is in theory unbreakable, but still adds unnecessary complexity;\r\n- The final attack point is the external iframe (in case the wrapper is in an iframe itself). This was exploited by me once.\r\n\r\nProposed architecture;\r\n\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 HTML PAGE                                           \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 PREFIX (shadow DOM)                             \u2502 \u2502\r\n\u2502 \u2502 Practically invisible to site content           \u2502 \u2502\r\n\u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502\r\n\u2502 \u2502 \u2502 SITE NOTIFICATIONS (<div>)                  \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2502 Unsafe content (possible XSS)               \u2502 \u2502 \u2502\r\n\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502\r\n\u2502 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2502\r\n\u2502 \u2502 \u2551 WRAPPER NOTIFICATIONS (<iframe>)            \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 Safe content (no leaking or spoofing)       \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502 \u2502\r\n\u2502 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2502\r\n\u2502 \u2502 \u2551 SIDEBAR (iframe)                            \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 Site and key management                     \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2551 GATE (iframe)                           \u2551 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2551 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2551 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2551 \u2502 WS UPLINK                           \u2502 \u2551 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2551 \u2502 UiWebsocket API (ADMIN)             \u2502 \u2551 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2551 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2551 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502 \u2502\r\n\u2502 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2502\r\n\u2502 \u2502 \u2551 GATE (iframe)                               \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2502 WS UPLINK                               \u2502 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2502 UiWebsocket API (site)                  \u2502 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u2551 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2551 \u2502 \u2502\r\n\u2502 \u2502 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 SITE DATA                                       \u2502 \u2502\r\n\u2502 \u2502 Unsafe content (managed by site code)           \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nSure, it might look more difficult at the first glance, but security comes with a cost.\r\n\r\n## Resulting HTML\r\n\r\nThe resulting HTML (the one that browser receives) consists of a *prefix* and the real site `.html` file.\r\n\r\n## Prefix\r\n\r\nPrefix is a \"magic\" HTML code that sets up an analogue of what was a wrapper by creating a shadow DOM node. This ensures that the sidebar and notifications are shown correctly, independent of main site styles, and that it doesn't affect the site itself.\r\n\r\n## Gate\r\n\r\nA gate is an iframe that acts like a gate between UiWebsocket and its user. The gate handler uses the referrer to check what permissions the websocket must have.\r\n\r\n## Fixed issues / added features\r\n\r\n- #2165, #2057 - All features are now safe;\r\n- #2154 - No need for NOSANDBOX anymore;\r\n- #2086 - The only interactive content is simple notifications (i.e. buttons);\r\n- #2058 - Pull-to-refresh can now be controlled by the site;\r\n- #2003 - No need to be top frame anymore;\r\n- #1736 - Opening in a new tab made easy;\r\n- #1707, #565 - Embedding made possible (requires a separate proposal);\r\n- #1667 - Controlled by the site now;\r\n- #1403 - Scrolling is fixed;\r\n- #1399, #1054, #29 - localStorage, IndexedDB, etc. made possible (requires a separate proposal);\r\n- #1237 - Fullscreen API without ZeroFrame;\r\n- #1236, #1262 - SecurityError's fixed;\r\n- #1010 - Web Workers by path should work now;\r\n- #469 - History API without ZeroFrame.\r\n\r\n## Implementation status\r\n\r\n- [x] Prefix\r\n- [x] Gate\r\n- [ ] 0 button\r\n- [ ] Sidebar\r\n- [ ] Debug logs\r\n- [ ] Notifications\r\n- [ ] Modified panel\r\n- [x] Old wrapper compatiblity\r\n- [ ] Local storage\r\n- [ ] Wrapper commands\r\n  - [x] innerReady [compat]\r\n  - [x] innerLoaded & wrapperInnerLoaded [compat]\r\n  - [ ] wrapperNotification, wrapperConfirm, wrapperPrompt, wrapperProgress\r\n  - [x] wrapperSetViewport [compat]\r\n  - [x] wrapperSetTitle [compat]\r\n  - [x] wrapperReload [compat]\r\n  - [ ] wrapperGetLocalStorage & wrapperSetLocalStorage\r\n  - [x] wrapperPushState, wrapperReplaceState, wrapperGetState [compat]\r\n  - [ ] wrapperGetAjaxKey\r\n  - [x] wrapperOpenWindow [compat]\r\n  - [ ] wrapperPermissionAdd\r\n  - [x] wrapperRequestFullscreen [compat]\r\n  - [ ] wrapperWebNotification & wrapperCloseWebNotification [compat]\r\n\r\nETA: at most 1 week if no major issues are found", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566305068, "modified": 1576260959, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169", "source_type": "github"}, {"topic_id": 1604067562, "title": "Fix UnicodeDecodeError when OpenSSL is not found", "body": "Fixes #2180", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1567424142, "modified": 1567503064, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2181", "source_type": "github"}, {"topic_id": 1604067566, "title": "Fix gevent.Timeout being not caught", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1567442076, "modified": 1567445738, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2183", "source_type": "github"}, {"topic_id": 1604067630, "title": "Road to better sandbox. Lowercase announce", "body": "This is the first PR of the \"Road to better sandbox\" series. This one announces lower-case site addresses as well as full site addresses to trackers.\r\n\r\nThe next steps should be:\r\n\r\n- Refer to sites with lowercase addresses only;\r\n- Support `http://address.zeronet` or `zhttp://address` or `zero://address` schemes;\r\n- Switch to reverse iframe.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1571635386, "modified": 1587028968, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231", "source_type": "github"}, {"topic_id": 1604067674, "title": "Don't share ignored files", "body": "This allows sensitive data to be stored in ignored files. (caution: don't use it on proxies though)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1572419543, "modified": 1572447813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2263", "source_type": "github"}, {"topic_id": 1604067770, "title": "Switch to sslcrypto for cryptography tasks", "body": "[sslcrypto](https://github.com/imachug/sslcrypto) is a new MIT-licensed library I've recently made. It supports AES and ECC. I originally made it to get rid of GPLv3 pyelliptic, but interestingly it turned out even more useful.\r\n\r\nFirst, it replaces pyelliptic, pybitcointools and a part of CryptMessage so there's less code involved. Second, it supports both OpenSSL backend and pure-Python fallback both for AES and ECC (pyelliptic doesn't support pure-Python ECC so CryptMessage didn't work on some machines). Third, it's licensed under MIT (I can add any other license you choose) so we wouldn't have problems if we wanted to re-license a part of ZeroNet code under some lax license. Fourth, it supports *all* OpenSSL versions since 0.9.8 (other cryptography libraries support a lot less). Fifth, its fallback implementation is a bit safer than pybitcointools because it fixes a vulnerability (I don't want to name it here to avoid possible private key leaks).\r\n\r\nSixth, it's fast. Plain performance tests say that it's about as fast as pyelliptic (both for AES and ECC) and that its fallback implementation is 1.5 times faster than pybitcointools (ECIES only, ECDSA is about the same). However, some tests I ran on ZeroMail show that message decryption is about 2 or 3 times faster than the current version (I've only run tests on single-thread model because more threads are slower for me for some reason both for sslcrypto and your version).\r\n\r\nAdditionally, sslcrypto is [tested](https://github.com/imachug/sslcrypto/actions) on Python 3.4 to 3.8 with OpenSSL 0.9.8, 1.0.0, 1.0.1, 1.0.2, 1.1.0 and 1.1.1.\r\n\r\n/cc @filips123\r\n\r\n---\r\n\r\nThis PR closes #1974, closes #917 and closes #993.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1575292850, "modified": 1582972899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338", "source_type": "github"}, {"topic_id": 1604067794, "title": "Switch to bencode_open", "body": "The official bencode parser implementation (bencode.py) is license under Open-Source BitTorrent license which is incompatible with GPL. This PR replaces bencode.py with my implementation (which is [available on PyPI as well](pypi.org/project/bencode_open)).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1576150712, "modified": 1583201219, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2358", "source_type": "github"}, {"topic_id": 1604067823, "title": "Compression support & fixes", "body": "1. Fix `.tar.bz2` archive support.\r\n2. Send `Content-Encoding` header for `.gz` and `.br` files. This allows compressing files and using them directly, like `<script src=\"main.js.gz\">`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1578230988, "modified": 1582544019, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2385", "source_type": "github"}, {"topic_id": 1604067883, "title": "Stream big file upload", "body": "**Is your feature request related to a problem? Please describe.**\r\nI need to upload a big file (say, 2 GiB) from a web app but I generate the data dynamically. I can't save the whole file to memory because it might not fit, so I'd like to stream it. It seems like using ReadableStream as request body is what I'm looking for but unfortunately no browsers support it.\r\n\r\n**Describe the solution you'd like**\r\nAn API call similar to `bigfileUploadInit` to create a new WebSocket, not an HTTP stream. It would be used like this:\r\n```javascript\r\nconst size = 1024 * 1024; // 1 MiB\r\nconst origin = location.href.replace(/(\\:\\/\\/.*?)\\/.*/, \"$1\").replace(\"http\", \"ws\");\r\nconst {url} = await page.cmdp(\"bigfileUploadInitWebsocket\", [\"test.bin\", size]);\r\nconst ws = new WebSocket(url.replace(\"{origin}\", origin));\r\nlet pos = 0;\r\nws.onmessage = e => {\r\n    if(e.data === \"poll\") {\r\n        part = (new Uint8Array(1024)).buffer; // for example\r\n        ws.send(part);\r\n        pos += part.byteLength;\r\n    }\r\n};\r\n```\r\nSome non-intuitive details:\r\n1. The backend should send `\"poll\"` message after it receives a packet, asking you to send a new packet. This is required because there's no way to control websocket send queue (as opposed to classic file upload when the browser handles it) so sending too much data might break the process. Sending packets only when the backend tells you is a decent workaround.\r\n2. A `\"poll\"` message should be sent by the backend when the socket is open. Alternatively, the client could just listen to `open` websocket event but a `\"poll\"` message looks more consistent.\r\n\r\n**Describe alternatives you've considered**\r\n1. Asking the browser developers to allow using ReadableStream as request body. :man_shrugging: \r\n2. Using `fileWrite`: it uses too much memory.\r\n3. Using the main websocket for file upload instead of a separate one. This is something to consider. I (intuitively) think that using a separate websocket would block the main one less but I'm not sure.\r\n\r\n**Additional context**\r\n[Standards](https://github.com/whatwg/fetch/pull/425)\r\n\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1582475821, "modified": 1582537562, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2436", "source_type": "github"}, {"topic_id": 1604067885, "title": "Allow uploading files via websocket", "body": "Closes #2436", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1582521712, "modified": 1582550435, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2437", "source_type": "github"}, {"topic_id": 1604067887, "title": "Avoid code duplication in bigfileUploadInit", "body": "See #2437.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1582550427, "modified": 1582554994, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2438", "source_type": "github"}, {"topic_id": 1604067890, "title": "Switch from gevent-websocket to gevent-ws", "body": "Replacing the slow library with my own fast MIT-licensed library. I'm not sure if this will break bundled clients though, you might want to copy the source (https://github.com/imachug/gevent-ws) to the `lib` directory. ", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1582618476, "modified": 1583200939, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2439", "source_type": "github"}, {"topic_id": 1604067904, "title": "Fix sslcrypto thread safety", "body": "A continuation of #2338.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1583201623, "modified": 1583426936, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2454", "source_type": "github"}, {"topic_id": 1604067909, "title": "Make ThreadPool a context manager to prevent memory leaks", "body": "A more thought-out fix of the segfault reproduced in #2454.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1583374035, "modified": 1583427021, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2457", "source_type": "github"}, {"topic_id": 1604067913, "title": "Add GitHub Actions workflow", "body": "Closes #2382. Check an example here: https://github.com/imachug/ZeroNet/runs/488567862.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1583428186, "modified": 1583802972, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2459", "source_type": "github"}, {"topic_id": 1604067917, "title": "Test on Windows with GitHub Actions", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1583459921, "modified": 1583730468, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2461", "source_type": "github"}, {"topic_id": 1604067923, "title": "Fix websocket_client compatibility", "body": "Forgot that Upgrade is case-insensitive, sorry.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1583690016, "modified": 1583755385, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2466", "source_type": "github"}, {"topic_id": 1604067925, "title": "Unattended updates", "body": "*This is not really a feature request, more of a conversation request to see if we (as the community) can come to a solution that satisfies everyone.*\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nThe problem is that there were quite a lot of vulnerabilities found in ZeroNet earlier and we'll probably have many of them in the future. Every time a vuln is found, we have to broadcast the fix; unfortunately, what we are able to do now is definitely unsafe:\r\n\r\n1. We can just publish this as a commit; looks good at the first glance but people most likely won't update and we can't count on the fact that no one reads commit history;\r\n2. We can hide the fix in some merge commit or something; it's less likely to be noticed compared to 1. but this is definitely not a permanent solution;\r\n3. We can publish the fix immediately and add a big \"update right now\" button to ZeroHello; this immediately makes the vulnerability existence (and thus the exploit) obvious, and the people who didn't update in time will have a big problem.\r\n\r\nWhile some of these solutions are applicable right now, they aren't permanent and will definitely stop working well when new people come to ZeroNet.\r\n\r\n**Describe the solution you'd like**\r\n\r\nWe could allow users to enable unattended updates, say, in /Config (it should probably be enabled by default because those who don't check /Config are most likely too non-techy to understand the consequences of the vulnerability). Some updates would be marked as \"security\". People who have unattended updates enabled would be updated automatically; those who don't will be shown a big red button on ZeroHello (probably also change `0` icon for visibility? These are implementation details though). The update would be cryptographically signed. Whether only nofish will have to sign it or someone else as well is another question; say, lowering the required signature count would make ZeroNet more vulnerable to a single person's sudden decision, and increasing the count can make the vulnerability known before the fix is signed.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe ones in the first section? Hehe.\r\n\r\n**Additional context**\r\n\r\ninb4: Quite a lot of well-known operating systems do that. For example, Ubuntu and Debian have `unattended-upgrades`, Windows (oh well) does that too. ZeroNet is cross-platform and also uses ZeroUpdate for updates, not a central repository, so we can't count on the OS-specific stuff.\r\n\r\n@anoadragon453 @filips123 @blurHY", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1583726664, "modified": 1584365964, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2467", "source_type": "github"}, {"topic_id": 1604067931, "title": "Search for any OpenSSL version in LD_LIBRARY_PATH", "body": "Fixes #2470. Please check @canewsin.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1583857908, "modified": 1583888871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2471", "source_type": "github"}, {"topic_id": 1604067937, "title": "Disable process_result on websocket requests", "body": "Removes a weird \"UiWSGIHandler error: BrokenPipeError: Broken pipe\" error. This didn't affect the connectivity or something, but some users on ZeroTalk told me about it so I fixed it.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584149640, "modified": 1584361084, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2475", "source_type": "github"}, {"topic_id": 1604067942, "title": "Switch to sslcrypto v4.0 to support OpenSSL without builtin curves", "body": "Fixes a problem reported by @canewsin in #2477 which is caused by weird OpenSSL builds which don't have secp256k1 built-in.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584282891, "modified": 1584368810, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2478", "source_type": "github"}, {"topic_id": 1604067948, "title": "Upgrade gevent-ws to v2.0.5", "body": "This makes `Upgrade` header case-insensitive. I'm not sure if this conforms to standards but some clients send `Websocket` instead of `websocket`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584370274, "modified": 1584407044, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2482", "source_type": "github"}, {"topic_id": 1604067950, "title": "Potential fix of BrokenPipeError", "body": "#2480 @canewsin Please check (I can't reproduce the bug locally, thanks for the traceback).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584410396, "modified": 1584442152, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2483", "source_type": "github"}, {"topic_id": 1604067952, "title": "Dot-files", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: v0.7.1 (r4462)\r\n  * Operating system: Ubuntu\r\n  * Web browser: Firefox\r\n  * Tor status: available\r\n  * Opened port: yes\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\nSite 1N9sU8qh3S4ei9PHE1qQyYPbcckJomvwMd can't be downloaded. From logs:\r\n\r\n```\r\n[08:17:28] Site:1N9sU8..vwMd content.json: verify sign error: VerifyError: Invalid relative path: .git/COMMIT_EDITMSG in ContentManager.py line 1000 > 880\r\n```\r\n\r\nIt looks like ZeroNet doesn't like directories which start with a dot, but it has no problems with e.g. `dir/.file`. It looks like this change was added after the site was signed and backward compatibility was broken. Personally, I don't see any threat in `.`, given that we've already ensured there's no `..`. Also, `\\\\` is not handled, only `/`. Do you think we can replace the original check:\r\n\r\n```python\r\ndef isValidRelativePath(self, relative_path):\r\n    if \"..\" in relative_path.replace(\"\\\\\", \"/\").split(\"/\"):\r\n        return False\r\n    elif len(relative_path) > 255:\r\n        return False\r\n    elif relative_path[0] in (\".\", \"/\"):  # Starts with\r\n        return False\r\n    elif relative_path[-1] in (\".\", \" \"):  # Ends with\r\n        return False\r\n    elif re.match(r\".*(^|/)(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9]|CONOUT\\$|CONIN\\$)(\\.|/|$)\", relative_path, re.IGNORECASE):  # Protected on Windows\r\n        return False\r\n    else:\r\n        return re.match(r\"^[^\\x00-\\x1F\\\"*:<>?\\\\|]+$\", relative_path)\r\n```\r\n\r\nwith:\r\n\r\n```python\r\ndef isValidRelativePath(self, relative_path):\r\n    if \"..\" in relative_path.replace(\"\\\\\", \"/\").split(\"/\"):\r\n        return False\r\n    elif len(relative_path) > 255:\r\n        return False\r\n    elif relative_path[0] in (\"/\", \"\\\\\"):  # Starts with\r\n        return False\r\n    elif relative_path[-1] in (\".\", \" \"):  # Ends with\r\n        return False\r\n    elif re.match(r\".*(^|/)(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9]|CONOUT\\$|CONIN\\$)(\\.|/|$)\", relative_path, re.IGNORECASE):  # Protected on Windows\r\n        return False\r\n    else:\r\n        return re.match(r\"^[^\\x00-\\x1F\\\"*:<>?\\\\|]+$\", relative_path)\r\n```\r\n\r\n?\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Open http://127.0.0.1:43110/1N9sU8qh3S4ei9PHE1qQyYPbcckJomvwMd/\r\n\r\n#### Observed Results:\r\n\r\n`CONTENT.JSON DOWNLOAD FAILED`\r\n\r\n#### Expected Results:\r\n\r\nThe site loads correctly.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584411779, "modified": 1584998658, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2484", "source_type": "github"}, {"topic_id": 1604067957, "title": "Update gevent-ws to v2.0.7 to fix werkzeug", "body": "Closes #2486.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584467347, "modified": 1584467572, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2487", "source_type": "github"}, {"topic_id": 1604067960, "title": "Invalid argument in ThreadPool", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: v0.7.1 (r4469)\r\n  * Operating system: Ubuntu\r\n  * Web browser: Firefox\r\n  * Tor status: available\r\n  * Opened port: yes\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. No idea, will check if it can be reproduced later.\r\n\r\n#### Observed Results:\r\n\r\nLots of errors like the following one appear at startup:\r\n\r\n```\r\n[08:05:15] - Unhandled exception: OSError: [Errno 22] Invalid argument in threadpool.py line 137\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/gevent/threadpool.py\", line 137, in __run_task\r\n    thread_result.set(func(*args, **kwargs))\r\nOSError: [Errno 22] Invalid argument\r\n```\r\n\r\n#### Expected Results:\r\n\r\nNo exception.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584756487, "modified": 1584756607, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2489", "source_type": "github"}, {"topic_id": 1604067963, "title": "Import sslcrypto from lib", "body": "Fixes #2490. Please update snap package too.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1584810942, "modified": 1584967694, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2491", "source_type": "github"}, {"topic_id": 1604067978, "title": "Support compressed keys", "body": "Closes #2501 and #2502. This is a less hacky solution, compressed key handling was moved to sslcrypto.\r\n\r\n@filips123 Could you please check if publishing to another machine still works?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1585539982, "modified": 1585706445, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503", "source_type": "github"}, {"topic_id": 1604068131, "title": "Allow sites to request several CORS permissions at once", "body": "One of the old patches I forgot to submit. Closes #2630.\r\n\r\nAllows using `corsPermission([addr1, addr2, ...])` instead of issuing several `corsPermission` commands.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1601914224, "modified": 1602498755, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2631", "source_type": "github"}, {"topic_id": 1604068145, "title": "Use more unique yet short paths for logging", "body": "Now ZeroNet logs tend to be literally useless for debugging because most of the paths are incomprehensible. I propose replacing the path shortening algorithm with a more subtle one. Here are the major changes:\r\n\r\n1. Paths such as `src/Ui/__init__.py`, should they appear in a traceback, are now encoded as `Ui/__init__.py` (was: `__init__.py`).\r\n2. Paths such as `plugins/Chart/ChartDb.py` are now encoded as `ChartDb.py` (was: `Chart/ChartDb.py`). In general, paths such as `A/AB/ABC/X.py` are now encoded as `ABC/X.py` to remove unnecessary prefixes.\r\n3. Paths such as `<frozen importlib._bootstrap>`, which may appear in a traceback due to import errors, are now skipped (was: `<frozen importlib._bootstrap>`).\r\n4. As the algorithm has changed from 'only keep specific prefixes' (ex.: plugin name) to 'only remove unnecessary prefixes' (ex.: `.../src/`), paths outside ZeroNet root, should they appear in a traceback, are now anonymized: `/root/ZeroNet/src/main.py` is now encoded as `?/src/main.py` (was: `main.py`).\r\n5. Third-party module paths now include module name: `.../site-packages/gevent/__init__.py` is now encoded as `<gevent>/__init__.py` (was: `__init__.py`).\r\n6. Builtin python modules are now visibly separated from ZeroNet files: `/usr/lib/python3.8/os.py` is now encoded as `<os>` (was: `os.py`).\r\n7. Gevent paths such as `src/gevent/event.py` are correctly parsed as `<gevent>/event.py` (was: `event.py`).\r\n\r\nI've also added some tests.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1602595720, "modified": 1602599808, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2642", "source_type": "github"}, {"topic_id": 1604068148, "title": "Allowed Clearnet resource switch", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCopied from [this ZeroTalk thread](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1602120041_114yCZGnUqTUcasBbAKUS6xmhQyDPC1ZXt/Iframe+insertion+How+does+TorrentFreak+zite+does+that):\r\n\r\n> So... I was surfing around and watching variety of zites at Sites.ZeroNetwork.bit.\r\n>\r\n> Then, I've stumbled upon this zite: http://127.0.0.1:43110/1JNqdTGVATFWRLzzYwVu19CuWYus5VmoUS/\r\n>\r\n> This is TorrentFreak's direct iframe. I mean, this is the fully operational website inside the ZeroNet frame, inserted there by another iframe. In user's data folder it simply looks like this:\r\n>\r\n> ```\r\n> <iframe src=\"https://torrentfreak.com/\" style=\"position:fixed; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;\"></iframe>\r\n> ```\r\n>\r\n> Now, if you can allow any website to be rendered from the inside of zeronet iframe, it can possibly lead to some point of anonimity breach, no? I thought, that if you're inside the zeronet iframe, you should not be able to include any other iframes? It's just you can include anything as an iframe in your zite (and hide it), and the end-user won't even know it is there. The hidden iframe can do some malicious things (like monero mining, i.e.), and the page shown could be usual zite to held end-user's attention long enough.\r\n>\r\n> Why iframing external http/https resources is allowed?\r\n>\r\n> -- smashbuckler\r\n\r\n**Describe the solution you'd like**\r\nA switch on /Config:\r\n\r\n**Allow sites to use Clearnet resources:**\r\n- Yes\r\n- Yes, but warn me when they do\r\n- No\r\n\r\nA whitelist should probably be implemented as well.\r\n\r\n**Additional context**\r\nThis can probably be easily controlled with CSP: the current value works for the 'Yes' option, more limits can be added for 'No', and `Content-Security-Policy-Report-Only` should be used for warnings.\r\n\r\nAccording to some random site on the internet, CSP value limit is around 2048 bytes which should be more than enough for our use cases, including potential URL whitelists.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1602598787, "modified": 1603713390, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2643", "source_type": "github"}, {"topic_id": 1604068158, "title": "`siteCmd` CLI command with admin rights", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nZeroNet uses `id=1` for commands issued by `siteCmd` CLI command:\r\nhttps://github.com/HelloZeroNet/ZeroNet/blob/29dac8a1889e6c23773292718bec813e00ae2d74/src/main.py#L381\r\n...which means that the queries are executed without ADMIN rights, unless the site has ADMIN rights itself.\r\n\r\n**Describe the solution you'd like**\r\nEither `siteCmdAdmin` or `siteCmd --admin` should set `id` to an ADMIN id.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1602749522, "modified": 1603713386, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2651", "source_type": "github"}, {"topic_id": 1604068163, "title": "Unobvious redirection to site file list", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.7.2 (rev4538, 29dac8a1889e6c23773292718bec813e00ae2d74)\r\n  * Operating system: Linux\r\n  * Web browser: doesn't matter\r\n  * Tor status: doesn't matter\r\n  * Opened port: doesn't matter\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\nSometimes I'm redirected to /list/1Address when downloading a site for the first time. I believe this usually happens when the size of the files attached to the root `content.json` is larger than allowed. It's not obvious what one has to click after increasing the size limit.\r\n\r\n#### Steps to reproduce:\r\n\r\nDownload some site with lots of files at root, e.g. [ZAlex's blog](http://127.0.0.1:43110/1HKcfPD3LhwzgrSwkSFFKUiTJJ3MvbgRTw/).\r\n\r\n#### Observed Results:\r\n\r\nWatch file list opening (only content.json ATM).\r\n\r\n![image](https://user-images.githubusercontent.com/16370781/96481055-b3961b80-1243-11eb-856e-fbb14c142a48.png)\r\n\r\n#### Expected Results:\r\n\r\nThe user should be redirected to site root after accepting the limit. Also, showing only `content.json` is useless, perhaps required but not downloaded files should be shown too (greyed out). Site title & description should be shown too.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1603115243, "modified": 1603713687, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2654", "source_type": "github"}]}