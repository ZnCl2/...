{"cert_user_id": "randoms@github", "next_topic_id": 2, "topic": [{"topic_id": 1604064921, "title": "How do you sync file changes?", "body": "I am trying to find out how you sync file changes. It seems that changes are pushed directly from changer to other peers. However if we get 1K peers hosting the site(which is really common for a normal site), 1K requests will be pushed from the changer, and all the other peers will download new content directly from the changer. This will lose the power of decentralize.\nIf a peer is not online when change request was pushed. How could it get the lasted content of the site. Will it download content.json each time it starts up?\nHow do you sync up database? If a new record was inserted into database, will you update the whole database to other peers?\nI really love the idea of decentralize web, and I am making something like this. It will be great help if you can share some of you ideas.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1441578170, "modified": 1441923259, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/154", "source_type": "github"}], "next_comment_id": 3, "comment": {"1604064921_mirrored_randoms_github": [{"comment_id": 1, "body": "Thanks for your response. But this will cause a potential lose of data. For example in a messaging board program like ZeroBorard. If user A made a comment, and user B made a comment before A's comment sync to all the other peers. Then A's comment will be overwritten. Because we have two version of data record, and B's version is newer. You said you take the latest changes in the document.\nDo you have any work around for this?\n", "added": 1441665810, "modified": 1441665810, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/154#issuecomment-138404439", "source_type": "github"}, {"comment_id": 2, "body": "But all these files will be added to something like content.json. He still has the chance to miss some content. \nIf we want the content to be the same, we must have the same page file. And if we want to edit it without conflict then a lock is needed. I digged into [ceph](https://github.com/ceph/ceph) yesterday. And I think their method is really good to follow. They used an ordered list of all peers, editions are only allowed on the first peer called primary node, this is something like a lock. In zeronet's case, if you want to make a comment, check if you have the same content with the primary node. If not then sync your files with it. Push your changes to the primary node, and primary node will sync your changes to other peers.\n", "added": 1441753388, "modified": 1441753388, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/154#issuecomment-138753479", "source_type": "github"}]}}