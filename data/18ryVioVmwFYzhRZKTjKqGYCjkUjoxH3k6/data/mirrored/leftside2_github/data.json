{"cert_user_id": "leftside2@github", "next_comment_id": 11, "comment": {"1604066391_mirrored_tangdou1_github": [{"comment_id": 1, "body": "That's not a good idea. Uselessly confuses users with complex menu items.", "added": 1520394867, "modified": 1520394867, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1314#issuecomment-371042012", "source_type": "github"}], "1604066394_mirrored_leftside2_github": [{"comment_id": 2, "body": "@HelloZeroNet : What if the client's system clock changes itself many times during continuous offline state and the client uploads the posts and comments many times during the same period? (This can be happened in case of the battery on the mainboard malfunctions.)\r\n\r\n* We can keep a kind of flash memory space (HDD is also OK) in order to keep the zeronet.py specific relative time counter. It increases only after the checking the previous written counter in the same memory location whenever it senses any event which zeronet.py logged or triggered. It can not replace an accurate clock, but at least it can tell zeronet.py which event is ahead or behind of which event independent of the system clock error.\r\n\r\n* How to apply this technique over network or inter-network wide? Each activity of the client sometimes depends on the other users' activities such as making a comment to the other user's post/comment or making a post to the other user's recently updated site. These relative timing activities could be recognized by the local zeronet.py and recorded in order to make the proper order for the various users' comments or posts. (refer to 'Comments order bug based on timestamps of each other's PC, maybe?' https://github.com/HelloZeroNet/ZeroMe/issues/115 ). And the more precise time gaps between the client's activities could be calculated by the client's [Relative Time Counter] which is introduced in the previous paragraph. But this calculation is just as precise as at best only relatively because the client's PC could be turned on and off intermittently with very long time gaps in-between while the system clock is malfunctioning. zeronet.py still has to heavily depend on it's PC's system clock anyway. Especially after the PC's turned off and turned on again with the system clock malfunctioning, zeronet.py will experience the biggest erroneous time shift.\r\n\r\n* How to reduce errors in time shift? zeronet.py could pop up the dialog box asking the user for the current time he [thinks], periodically and Relative Time Counter Alert dependently (system wakeup event, etc), showing the current system time and the timestamp of the most recent activity, so that user could recognize the time gap between the events. But to avoid the case the user lies to zeronet.py about the current time, zeronet.py should restrict the current time value which the user inputs, depending on the calculation. \r\n\r\n* How to prevent the user from fabricating the Relative Time Counter value in the flash memory (or a certain file)? Relative Time Counter format could be encrypted by zeronet.py.\r\n\r\n* Any better solution to keep the track of the order of the activities of the various users? Here comes the Trusted Time Servers idea. In addition to the timestamps which were calculated by the zeronet.py's of various users, another field [Time Server Received Date] could be created for each activity by the any one of the Trusted Time Servers when it receives the new data from the outside world, so that at least people can tell the subtle differences between various posts and comments anyhow.\r\n\r\n* SSD wear-leveling problem in regard of Relative Time Counter memory. zeronet.py could make the Relative Time Counter [file] to be increased continuously like log files to avoid re-wring to the same memory location repeatedly. (And periodically discard the over-sized file.)\r\n\r\n* How to reduce the access time of the Relative Time Counter file? zeronet.py could write to the Relative Time Counter in the file and in the variable (in the RAM) at the same time, and could read the value only from the variable. The file could be read when the PC power-on or wakeup event is detected, in which case the variable must have been emptied.", "added": 1520629235, "modified": 1520633264, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1319#issuecomment-371979650", "source_type": "github"}, {"comment_id": 3, "body": "@HelloZeroNet : We may need a tag \"#non-authenticated-timestamp\" for the users whose zeronet clock has not been signed by any of the authorized ZeroNet RTC peers, so that people notice that the some users' strange comments might be caused by that reason. Plz refer to this post: http://127.0.0.1:43110/Me.ZeroNetwork.bit/?Post/1oranGeS2xsKZ4jVsu9SVttzgkYXu4k9v/1AWwhg4EiWAVttfQboJZ4wJfX3WawfJT3h/1535159559", "added": 1535156878, "modified": 1535156921, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1319#issuecomment-415930430", "source_type": "github"}], "1604066700_mirrored_DaniellMesquita_github": [{"comment_id": 4, "body": "Clearnet server can be monitoring its own zeronet server and the zeronet server is continuously updating, let's say, ZeroUp, and once there's a new upload on zeronet, the clearnet server may copy it to its web folder internally and add a link to the file on its web page.", "added": 1534968240, "modified": 1534968240, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1526#issuecomment-415215094", "source_type": "github"}, {"comment_id": 5, "body": "@DaniellMesquita , At least one of the zeronet users' PC should behave like web bot to upload zeronet data to clearnet sites. (P.S. The above mentioned clearnet server which is monitoring zeronet can also have a web bot to upload the zeronet files to any clearnet sites it wants.)", "added": 1534972413, "modified": 1534972464, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1526#issuecomment-415229032", "source_type": "github"}], "1604066926_mirrored_DaniellMesquita_github": [{"comment_id": 6, "body": "Do we need a kind of the duplicate of the Zeronet directories, or just execute the same zeronet.py?", "added": 1537738982, "modified": 1537738982, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423860163", "source_type": "github"}, {"comment_id": 7, "body": "@blurHY , Any possibility to have different tor IP address for each instance??", "added": 1537751401, "modified": 1537751401, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423873423", "source_type": "github"}, {"comment_id": 8, "body": "My main process : $ ./ZeroNet.sh --tor always --tor_controller 127.0.0.1:9151;\r\nerror msg: None.\r\n\r\nAdditional instance : $ ./ZeroNet.sh --ui_port=8090;\r\nerror msg: Can't open lock file, your ZeroNet client is probably already running, exiting... ([Errno 11] Resource temporarily unavailable)\r\n", "added": 1537751668, "modified": 1537751668, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423873749", "source_type": "github"}, {"comment_id": 9, "body": "@blurHY , that's the answer what I wanted! :100: ", "added": 1537754139, "modified": 1537754139, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1653#issuecomment-423876991", "source_type": "github"}], "1604066965_mirrored_DaniellMesquita_github": [{"comment_id": 10, "body": "Cybercafe's PC's HDD, screenshot and running process list are open to the cafe administrator from the beginning, aren't they? Zeronet's private key is designed to be saved to the HDD so that it's not weird that anybody who has an access to the HDD can use it to login to Zeronet, isn't it???", "added": 1538695225, "modified": 1538695225, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1677#issuecomment-427226436", "source_type": "github"}]}, "next_topic_id": 4, "topic": [{"topic_id": 1604066389, "title": "Keeping comments when the original post was removed by the author.", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.6.2 (rev3340)\r\n  * Operating system: Ubuntu 16\r\n  * Web browser: tor-browser\r\n  * Tor status: always\r\n  * Opened port: no\r\n  * Special configuration: no\r\n\r\n### Step 2: Describe the problem:\r\n\r\nSome users delete their posts without showing any respect to the commenters' efforts, so that no matter how many comments were attached all of them disappear too. \r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Start new topic in ZeroTalk site\r\n  2. Wait till people add comments to that topic.\r\n  3. Delete your topic.\r\n  4. All the comments will disappear even though those commenters don't want them to be disappeared.\r\n\r\n#### Observed Results:\r\n\r\nReluctant to comment any more so that the ZeroNet community's falling down.\r\n\r\n#### Expected Results:\r\n\r\n  Allow the topic creator to choose what to remove among title, body and author ID. \r\nIn case the bulletin board doesn't allow anonymous posting, when he selects 'remove author ID' show him the msg saying 'Removing author ID will remove the title and the body together and they will not be recovered.' If click 'yes', remove all 3 items, but still remains comments under the topic.\r\n\r\nhttp://127.0.0.1:43110/Me.ZeroNetwork.bit/?Profile/1SunAWK2VUT9GQK32MpwRfFPVgcBSJN9a/16dEowtNbV89NxPcDrAKkmnuXtiJVoVcDm/leftside@zeroid.bit\r\n\r\nsos4sos@riseup.net 2018-03-07 16-43-58\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1520397860, "modified": 1520398497, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1316", "source_type": "github"}, {"topic_id": 1604066394, "title": "Need some trusted time servers among our PCs.", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.6.5 r3340\r\n  * Operating system: Ubuntu 16\r\n  * Web browser: tor-browser\r\n  * Tor status: always\r\n  * Opened port: no\r\n  * Special configuration: ____\r\n\r\n### Step 2: Describe the problem:\r\n\r\nRefer to : <Comments order bug based on timestamps of each other's PC, maybe? #115> https://github.com/HelloZeroNet/ZeroMe/issues/115\r\n\r\nI noticed a strange phenomenon today while commenting on the post in ZeroMe.\r\n\r\nAnother guy make a comment just now, and I read it and make a next comment following him, but my comment popped up under his comment. I deleted mine, and made another again, but it still goes under his one. I thought he hacked something or what, but I decided to wait 10 seconds and made another one only to fail. At last I could see my new comment above his one after around 40 to 50 seconds.\r\n\r\nWhat was happened?\r\n\r\n@HelloZeroNet : Since there is no central computer involved in ZeroNet the timestamp is added by the sender's computer. So if yours or the sender's computer time is out of sync, then it could break the order.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. One PC make a comment on ZeroMe or something.\r\n  2. Within a second or more, another PC with the system time 30 seconds or more shifted backward from the above PC makes a comment on the same post as the above.\r\n  3. The above time shifted PC's comment stays under the the first PC's comment for about 30 seconds even though he deletes his comment and make again within 30 seconds.\r\n  4. After the amount of the shift time, it will be placed over the first comment if at least he made a new comment after 30 seconds the first guy did.\r\n\r\n#### Observed Results:\r\n\r\n  * What happened? This could be a screenshot, a description, log output (you can send log/debug.log file to hello@zeronet.io if necessary), etc.\r\n\r\nRefer to the above paragraph I described.\r\n\r\n#### Expected Results:\r\n\r\n  * What did you expect to happen?\r\n\r\nWe need to appoint some trusted time servers among the decentralized PCs, don't we? Have them be chosen by voting. Predefined upvotes to downvotes ratio will switch off some of them or switch on others of them.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1520591633, "modified": 1535156921, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1319", "source_type": "github"}, {"topic_id": 1604067003, "title": "URL not recognizable if it contains '&' or ':' characters.", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: _____\r\n  * Operating system: _____\r\n  * Web browser: _____\r\n  * Tor status: not available/always/disabled\r\n  * Opened port: yes/no\r\n  * Special configuration: ____\r\n\r\n### Step 2: Describe the problem: If the original filename contains '&' or ':' characters in it, remote URL to that filename is not recognized by the zeronet server. But '(,),_,,' etc characters are recognizable.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. _____ $ touch filename:1.txt in the folder zeronet/data/1TestSite/\r\n  2. _____ sign & publish the site http://127.0.0.1:43110/1TestSite/\r\n  3. _____ try to open http://127.0.0.1:43110/1TestSite/filename:1.txt\r\n  4. _____ 'File not found'. If u rename 'filename:1.txt' to 'filename_1.txt', it will be opened with no problem.\r\n\r\n#### Observed Results:\r\n\r\n  * What happened? This could be a screenshot, a description, log output (you can send log/debug.log file to hello@zeronet.io if necessary), etc.\r\n\r\n#### Expected Results:\r\n\r\n  * What did you expect to happen?\r\n\r\nUTF-8 escaping allows the URL with those characters to be searchable by the zeronet server.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1543795651, "modified": 1543796585, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1797", "source_type": "github"}]}