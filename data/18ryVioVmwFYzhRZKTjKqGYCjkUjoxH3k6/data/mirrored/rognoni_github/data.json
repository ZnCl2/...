{"cert_user_id": "rognoni@github", "next_topic_id": 2, "topic": [{"topic_id": 1604065496, "title": "[Change request] \"Angular Component Router\" support", "body": "For my ZeroNet(Werkzeug)-based project I'll use **Angular2** routing instead of **CoffeeScript**, for example http://127.0.0.1:5000/detail/11 but I'll see this error:\n\n```\nNot Found\n\nThe requested URL was not found on the server.\nIf you entered the URL manually please check your spelling and try again.\n```\n\n``` python\nimport os.path\nfrom flask import Flask\nfrom werkzeug.wsgi import SharedDataMiddleware\n\napp = Flask(__name__)\n\napp.wsgi_app = SharedDataMiddleware(app.wsgi_app, {\n    '/': os.path.join(os.path.dirname(__file__), '.')\n})\n```\n\nThis is the **lite-server** description of this feature:\n\n> When creating a SPA there are routes that are only known to the browser. For example, /customer/21 may be a client side route for an Angular app. If this route is entered manually or linked to directly as the entry point of the Angular app (aka a deep link) the static server will receive the request, because Angular is not loaded yet. The server will not find a match for the route and thus return a 404. The desired behavior in this case is to return the index.html (or whatever starting page of the app we have defined).\n\n_Original request here:_ https://github.com/pallets/werkzeug/issues/1016\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1475601462, "modified": 1475610602, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/603", "source_type": "github"}]}