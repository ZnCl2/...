{"cert_user_id": "cusmith1@github", "next_topic_id": 3, "topic": [{"topic_id": 1604066049, "title": "CORS error accessing external api", "body": "We are exploring options for negating the effects of DDoS attacks in enterprise web applications (with large backends). Currently we are considering using ZeroNet to serve as a decentralized frontend for the site while using Blockstack (blockstack.org) to manage decentralized control and encryption of user data (backend).\r\n\r\nThe zeronet zite however, doesn't allow the cross origin connection to the Blockstack browser for  authentication or data access. Errors as follows:\r\n\r\n> Origin http://localhost:8888 is not allowed by Access-Control-Allow-Origin.\r\n> Failed to load resource: Origin http://localhost:8888 is not allowed by Access-Control-Allow-Origin\r\n> Fetch API cannot load http:127.0.0.1:43110/manifest.json. Origin http://localhost:8888 is not allowed by Access-Control-Allow-Origin.\r\n\r\nI already attempted to use the zeronet CORS plugin to allow localhost:8888 which didn't work. Is there a special case for non-zeronet sites? or is there no way to use API external to zeronet?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1500912752, "modified": 1502898423, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1045", "source_type": "github"}, {"topic_id": 1604066062, "title": "Accessing localStorage from zite", "body": "I'm getting a \"SecurityError (DOM Exception 18): The operation is insecure.\" while trying to check/store a login information cookie. I realize that this is because localStorage isn't accessible from a sandboxed iframe. Is there a way to get around this?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1501165434, "modified": 1501166170, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1054", "source_type": "github"}], "next_comment_id": 4, "comment": {"1604066049_mirrored_cusmith1_github": [{"comment_id": 1, "body": "Cors is enabled on blockstack. It is the zeronet side that is blocking the request.", "added": 1500916283, "modified": 1500916283, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1045#issuecomment-317540151", "source_type": "github"}, {"comment_id": 2, "body": "<img width=\"1395\" alt=\"screen shot 2017-07-25 at 2 42 34 pm\" src=\"https://user-images.githubusercontent.com/17167947/28588317-2fbf740e-7148-11e7-8dc1-28aa2e170ac8.png\">\r\n<img width=\"591\" alt=\"screen shot 2017-07-25 at 2 43 32 pm\" src=\"https://user-images.githubusercontent.com/17167947/28588324-32a2dfa8-7148-11e7-97eb-a1025acf220e.png\">\r\n\r\nThe site supposedly has permissions for localhost:8888 where the Blockstack browser is but I still get cross origin errors.\r\n\r\nAlso can you point me to an explanation of how to use fileGet instead?", "added": 1500997878, "modified": 1500997878, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1045#issuecomment-317835457", "source_type": "github"}, {"comment_id": 3, "body": "Apologies, I got sidetracked by another project and lost track of this.\r\n\r\nThe blockstack system is set up to use the Fetch API so that was part of the issue. ZeroNet was blocking that despite the CORS setup of the requests as it is necessary to use the FileGet method @HelloZeroNet described above. I was able to set it up with FileGet on the client side which removed most of the errors, but the base blockstack browser still requires Fetch in some spots resulting in a failed URI request on blockstacks side.\r\n\r\nWe're now looking at altering the base blockstack code to make it function with zeronet's API but that's for us to figure out with their side. Thank you all for giving your thoughts.", "added": 1502898422, "modified": 1502898422, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1045#issuecomment-322864110", "source_type": "github"}]}}