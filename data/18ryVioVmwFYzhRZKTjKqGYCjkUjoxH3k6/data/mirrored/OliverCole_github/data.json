{"cert_user_id": "OliverCole@github", "next_comment_id": 47, "comment": {"1604064822_mirrored_HelloZeroNet_github": [{"comment_id": 1, "body": "I noticed you haven't labelled this one with help wanted. Is that intentional? Do you have a particular design in mind you could share? \n\nThis would be something I'd love to implement!\n", "added": 1456948090, "modified": 1456948090, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-191477257", "source_type": "github"}, {"comment_id": 2, "body": "@HelloZeroNet Yeah, I think we have similar thoughts on this.\n\nTo me you want to have the public site unencrypted, and then an encrypted 'subdirectory', or even more than one. This means the owner can have public content, and how to contact them perhaps, and then the private stuff all under one key/bit domain. They can always choose to keep the public site blank if they wish.\n\nWe should think about each private 'subsite' as a site itself though - with it's own content.json etc. I feel like it should probably be rolled up in a zip file to avoid any visibility of the private site structure, but then that might make publishing difficult?\n\nSome other thoughts:\n- You can support various access methods:\n  - Simple 'password', entered into ZeroNet managed UI over a site - stretched to the shared decryption key\n  - Certificate access. This would require the owner encrypting the decryption key to each cert, and publishing the lot, but it's super easy for the users, they just know that a given certificate grants access. This does also mean you can rotate the underlying decryption key - on every site publish if required!\n  - Bitcoin integration? Further in the future, what about something that would publish copies of the decryption key, encrypted to the public key of Bitcoin addresses which had sent it an amount of Bitcoin.\n- You could manage the whole workflow quite neatly - users could write an access request, which would be encrypted to the site owner and published. The site owner could have an interface for reviewing them and granting access where needed.\n- I'm not sure IP filtering is worth considering because it's not guaranteed for a user, and some people are deliberately using ZeroNet through Tor.\n\nIt's definitely not ideal for all use cases - and in particular, any user with access can then distribute (or reveal) that access to other users, regardless of whatever UI we put over the top. But I think it would be pretty good within the limitations of ZeroNet.\n", "added": 1457256527, "modified": 1457256527, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-192883715", "source_type": "github"}, {"comment_id": 3, "body": "So @HelloZeroNet, I want to have a crack at this - maybe just starting with the encryption/publishing part, for the 'simple password' case. **Are you happy to merge if we come up with something good?** \n\nMy first thought is on the metadata - we could add this in the files list in content.json, but that's not strictly accurate. Alternatively we could call it an include.\n\nBut I think a third list might be a good idea, eg:\n\n```\n{\n \"address\": \"1evJheeFpVQkHaZdAzEMj75w5T14ogZWT\",\n \"description\": \"My example site\",\n \"files\": {\n  \"index.html\": {\n   \"sha512\": \"dc5af04d2cde806f4bab9a0dd6b09d367c9f2dd51dd5f22a36c2dc56aa6e925e\",\n   \"size\": 428\n  }\n },\n \"private\": {\n  \"members\": {\n   \"description\": \"Private members area - contact johnsmith on ZeroMail for access\",\n  }\n },\n...\n```\n\nSigning and publishing would then require the encryption key (not ZIP password! :stuck_out_tongue_closed_eyes:), stretch it, and encrypt `members.zip` to `members.zip.zeronet` - the encrypted file gets published and the cleartext remains on disk.\n\n`members.zip` would contain `content.json` at the top level, which would behave like any other subdirectory content.json. And `members.zip.zeronet` would be eligible for distribution by users, along with the rest of the site.\n\nLater on, when we get to retrieving, a request for `1evJheeFpVQkHaZdAzEMj75w5T14ogZWT/members/` would trigger ZeroNet to request the key for `members.zip.zeronet`, decrypt it on disk and then proceed as normal.\n", "added": 1458904213, "modified": 1458904213, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-201297303", "source_type": "github"}, {"comment_id": 4, "body": "How do you mean twice? The only thing that would actually be shared out would be the encrypted zip.\n\nAre you proposing the private bit is unencrypted, but only shared to people who should have access? Could you outline how that would work?\n", "added": 1458908445, "modified": 1458908445, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-201330988", "source_type": "github"}, {"comment_id": 5, "body": "> You can spy on site activity\n\nAre you talking about metadata, like file names/sizes etc? That's partly what the zip file is for - just to bundle it up and avoid that analysis.\n\n> (Future) Patch command can be problematic\n\nI haven't read anything about this - what is it?\n\nYou can actually still achieve adding/removing users with per-file encryption, by picking a random symmetric key, encrypting the files (or zip file), and then encrypting a copy of that key to each user, exactly the same way PGP does it. If you want to add a user, simply publish an additional encrypted copy. Removing a user means picking a new random key and encrypting that for the remaining users.\n\nI think per-file encryption is the best, but tell me about the patch command?\n", "added": 1458993085, "modified": 1458993108, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-201840249", "source_type": "github"}, {"comment_id": 6, "body": "> multi-user sites \n\nYou mean public zeronet proxies? True... but are you thinking that if it was per-file, it would be decrypted in the browser? Otherwise you still have to trust the server with the key.\n\n> per-user encryption is not really works for many users (100+)\n\nSurely that's only (number of users \\* encrypted 256 bit key)? That's 32 users/kilobyte, minus some for overhead - doesn't seem insane to me.\n\nPatch command is interesting. \n\nSomething else to consider is whether it is desirable for users without access (in the per-file model) to already be distributing the encrypted files, without access. Think about the scenario where Assange posted those diplomatic cables encrypted in bulk, as an insurance policy... you would want them to be replicated by interested parties, even if **nobody** but the author had a key.\n\nI would say it would be good if ZeroNet supported that use case. In the connection security model, it wouldn't be possible because nobody would have access.\n", "added": 1459024622, "modified": 1459024622, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-201950304", "source_type": "github"}, {"comment_id": 7, "body": "Well, there is a way around having to re-encrypt all the files - version and increment the keys.\n1. Files A and B (in the main part of the site) are encrypted with K<sub>1</sub>, and U<sub>1</sub> knows K<sub>1</sub> because the site owner encrypted a copy of it with K<sub>U1</sub>.\n2. U<sub>2</sub> publishes file C, and encrypts it with K<sub>1</sub>.\n3. Site owner 'deletes' U<sub>1</sub>. Site owner generates a new shared key K<sub>2</sub>, and writes a new table, with a copy of K<sub>2</sub> encrypted to K<sub>U2</sub>, K<sub>U3</sub> etc.\n4. From this point, K<sub>1</sub> is considered 'compromised', and new and updated files will only use K<sub>2</sub>. \n5. Site owner makes a change to A, encrypts it with K<sub>2</sub>.\n6. U<sub>2</sub> publishes new file D, encrypts it with K<sub>2</sub>.\n\nSo U<sub>1</sub> can still access the files as they were when they had access (until they're republished anyway), BUT that's OK because they always had access to those files, and could have taken a copy at any time.\n\n#### Patch command\n\nCould we make this work by simply encrypting the patches?\n- In the basic scenario, you simply send the patch encrypted with K<sub>1</sub>. Each node decrypts the file, applies the patch and re-encrypts.\n- In the advanced case where you've deleted a user, and are updating a file for the first time since, you encrypt the patch with K<sub>2</sub>, and set a flag to say that each node will decrypt the file with K<sub>1</sub>, apply the patch, and re-encrypt it with K<sub>2</sub>. Every node has to repeat the work, but that's not so bad.\n", "added": 1459109223, "modified": 1459109223, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-202166716", "source_type": "github"}, {"comment_id": 8, "body": "Actually, thinking about the patch command... you said the zip file wouldn't work because of the patch command: the patch could simply include a path into the zip file. It would be interesting to do some experiments and see if you could deterministically produce the same patched encrypted zip file on multiple hosts/OSs. It should be possible though.\n\nBut anyway, there are a lot of questions and complexity here, and we'll never get the right answer straight away. Why don't we implement the simplest possible idea: single shared AES per-file encryption (ie, image.jpg.encrypted), get it working with the patch command and new key management GUI, and get it out there to see how people use it? Or indeed if anyone does actually bother using it at all!\n\nThat way we avoid the complexity of adding/removing individual users, managing access etc, and we don't spend a bunch of time building something people won't use.\n", "added": 1459185641, "modified": 1459185641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-202565767", "source_type": "github"}, {"comment_id": 9, "body": "By reuse, you mean it's not a good idea to encrypt the first version of the file with {K<sub>1</sub>,IV<sub>1</sub>}, encrypt the patch with {K<sub>1</sub>,IV<sub>1</sub>}, decrypt the file, make the change, and then re-encrypt it with {K<sub>1</sub>,IV<sub>1</sub>} again? You're right, that would be bad.\n\nHowever, we can send IV in the clear without risk. So we would need to use a fresh IV for the patch encryption, and the patch would need to contain another fresh IV to use after the patch has been applied. We might want to include checksums for both plaintext and ciphertext inside the patch.\n\nHowever, IV presents a bigger question for multi-user sites - we would need to use fresh IVs for user publications, and publish those along with the ciphertext. The sqlite DB only exists locally, and never leaves the machine, right? Or do we need to think about that too?\n\nIn fact, if we **don't** use zip files, we have to publish IVs per file too. On a site with a lot of files that could eat a lot of entropy from the pool.\n", "added": 1459270915, "modified": 1459270915, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-203075268", "source_type": "github"}, {"comment_id": 10, "body": "It's probably worth trying to put this all together in a wiki page that shows all the algos, keys and messages... any thoughts before I get started?\n", "added": 1459706446, "modified": 1459706446, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-205053821", "source_type": "github"}, {"comment_id": 11, "body": "@anoadragon453 Absolutely, I started outlining some ideas at https://github.com/OliverCole/ZeroNet/wiki/Private-sites-on-ZeroNet, but haven't had time to work on it further. Let me know if you want to talk over what I wrote - it wasn't finished.\r\n\r\nThe problem is it gets complex fast - when you remove a user, do you want to re-encrypt the site content to immediately deny them access to the data? Or just encrypt changes from that point? How do you make all that work with the delta updates?\r\n\r\nBut I think there is huge value in supporting a simple use case - someone publishes some leaked documents with a single symmetric key, which is revealed to media/the public at a later date. I would love to see Zeronet do that!", "added": 1498825482, "modified": 1498825482, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-312297358", "source_type": "github"}, {"comment_id": 12, "body": "I likely don\u2019t have time to work on this any more, so anyone should feel free to have a go.\r\nAll I would suggest is making sure to support various \u2018versions\u2019 of private sites - so that if we want to support more advanced use cases/cryptographic structures later we still can.\r\n\r\nI didn\u2019t know there were bounties on ZeroNet issues though - is there a link?", "added": 1528285964, "modified": 1528285964, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-395097441", "source_type": "github"}, {"comment_id": 13, "body": "@anoadragon453 This comment explains some of the complexities: https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-312297358", "added": 1570531830, "modified": 1570531830, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/62#issuecomment-539523196", "source_type": "github"}], "1604065071_mirrored_HelloZeroNet_github": [{"comment_id": 14, "body": "@makdisse ZeroSociety was my first thought too - http://mrrobot.wikia.com/wiki/Fsociety :)\n", "added": 1462637298, "modified": 1462637298, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/232#issuecomment-217662319", "source_type": "github"}], "1604065064_mirrored_GomZik_github": [{"comment_id": 15, "body": "@dmp1ce Check out [Beaker](https://github.com/beakerbrowser/beaker) and the relevant [ZeroNet ticket](https://github.com/HelloZeroNet/ZeroNet/issues/530).\n", "added": 1475990263, "modified": 1475990263, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/266#issuecomment-252472228", "source_type": "github"}], "1604065093_mirrored_scriptzteam_github": [{"comment_id": 16, "body": "Are you guys talking about HTTPS to the localhost:43110 interface? Not sure what https, Cloudflare or Lets Encrypt add here?\n", "added": 1457003241, "modified": 1457003241, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/288#issuecomment-191776869", "source_type": "github"}], "1604065112_mirrored_Flux3PO_github": [{"comment_id": 17, "body": "You can run `zeronet.py --ui_port  12345`.\n\nYou can see all the config options by running `zeronet.py -h`\n", "added": 1457024820, "modified": 1457024820, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/303#issuecomment-191940642", "source_type": "github"}], "1604065145_mirrored_iShift_github": [{"comment_id": 18, "body": "Perhaps this would be possible by standing up a server on another port number just for serving this data - wouldn't that fail same origin policy?\n", "added": 1457463518, "modified": 1457463518, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/323#issuecomment-193985645", "source_type": "github"}], "1604065188_mirrored_OliverCole_github": [{"comment_id": 19, "body": "Still picking this stuff up!\n\n```\n        # Everything should be same as before except the modified timestamp and the signs\n>       assert (\n            {key: val for key, val in content_old.items() if key not in [\"modified\", \"signs\", \"sign\", \"zeronet_version\"]}\n            ==\n            {key: val for key, val in content.items() if key not in [\"modified\", \"signs\", \"sign\", \"zeronet_version\"]}\n        )\nE       assert {'address': '...ork.bit', ...} == {'address': '1...ork.bit', ...}\nE         Common items:\nE         {u'address': u'1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT',\nE          u'background-color': u'white',\nE          u'description': u'Blogging platform Demo',\nE          u'domain': u'Blog.ZeroNetwork.bit',\nE          u'files_optional': {u'data/img/zeroblog-comments.png': {u'sha512': u'efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4',\nE                                                                  u'size': 24001},\nE                              u'data/img/zeroid.png': {u'sha512': u'b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b',\nE                                                       u'size': 18875},\nE                              u'data/img/zeroname.png': {u'sha512': u'bab45a1bb2087b64e4f69f756b2ffa5ad39b7fdc48c83609cdde44028a7a155d',\nE                                                         u'size': 36031},\nE                              u'data/img/zerotalk-mark.png': {u'sha512': u'a335b2fedeb8d291ca68d3091f567c180628e80f41de4331a5feb19601d078af',\nE                                                              u'size': 44862},\nE                              u'data/img/zerotalk-upvote.png': {u'sha512': u'b1ffd7f948b4f99248dde7efe256c2efdfd997f7e876fb9734f986ef2b561732',\nE                                                                u'size': 41092},\nE                              u'data/img/zerotalk.png': {u'sha512': u'54d10497a1ffca9a4780092fd1bd158c15f639856d654d2eb33a42f9d8e33cd8',\nE                                                         u'size': 26606},\nE                              u'data/optional.txt': {u'sha512': u'c6f81db0e9f8206c971c9e5826e3ba823ffbb1a3a900f8047652a8bf78ea98fd',\nE                                                     u'size': 6}},\nE          u'ignore': u'((js|css)/(?!all.(js|css))|data/.*db|data/users/.*/.*|data/test_include/.*)',\nE          u'includes': {u'data/test_include/content.json': {u'added': 1424976057,\nE                                                            u'files_allowed': u'data.json',\nE                                                            u'includes_allowed': False,\nE                                                            u'max_size': 20000,\nE                                                            u'signers': [u'15ik6LeBWnACWfaika1xqGapRZ1zh3JpCo'],\nE                                                            u'signers_required': 1,\nE                                                            u'user_id': 47,\nE                                                            u'user_name': u'test'},\nE                        u'data/users/content.json': {u'signers': [u'1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f'],\nE                                                     u'signers_required': 1}},\nE          u'inner_path': u'content.json',\nE          u'optional': u'(data/img/zero.*|data/optional.txt)',\nE          u'signers_sign': u'HDNmWJHM2diYln4pkdL+qYOvgE7MdwayzeG+xEUZBgp1HtOjBJS+knDEVQsBkjcOPicDG2it1r6R1eQrmogqSP0=',\nE          u'signs_required': 1,\nE          u'title': u'ZeroBlog'}\nE         Differing items:\nE         {'files': {'css/all.css': {'sha512': '65ddd3a2071a0f48c34783aa3b1bde4424bdea344630af05a237557a62bd55dc', 'size': 11271... 'data/data.json': {'sha512': '0f2321c905b761a05c360a389e1de149d952b16097c4ccf8310158356e85fb52', 'size': 31126}, ...}} != {'files': {'css/all.css': {'sha512': 'fcca6465c91188993b597a12a3fb75c9cf7a5c9371276ca6c6c014a2809d3ad1', 'size': 11309...'data/data.json': {'sha512': 'a7919a78587627676983978969d6457eb351da51ed1355c588885138baba7b85', 'size': 31369L}, ...}}\nE         Full diff:\nE         - {u'address': u'1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT',\nE         ?              -\nE         + {u'address': '1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT',\nE         u'background-color': u'white',\nE         u'description': u'Blogging platform Demo',\nE         u'domain': u'Blog.ZeroNetwork.bit',\nE         -  u'files': {u'css/all.css': {u'sha512': u'65ddd3a2071a0f48c34783aa3b1bde4424bdea344630af05a237557a62bd55dc',\nE         +  u'files': {'css/all.css': {'sha512': 'fcca6465c91188993b597a12a3fb75c9cf7a5c9371276ca6c6c014a2809d3ad1',\nE         -                              u'size': 112710},\nE         ?                             --          ^^^\nE         +                             'size': 113094L},\nE         ?                                       ^ +++\nE         -             u'data-default/data.json': {u'sha512': u'3f5c5a220bde41b464ab116cce0bd670dd0b4ff5fe4a73d1dffc4719140038f2',\nE         +             'data-default/data.json': {'sha512': '1a11aae6e183f3fb2026763b014047edc933c3a27bfab5da63daecf998f116aa',\nE         -                                         u'size': 196},\nE         ?                                        --        ^^^\nE         +                                        'size': 205L},\nE         ?                                                ^^^^\nE         -             u'data-default/users/content-default.json': {u'sha512': u'0603ce08f7abb92b3840ad0cf40e95ea0b3ed3511b31524d4d70e88adba83daa',\nE         +             'data-default/users/content-default.json': {'sha512': '37b11e263d4f572555f8a1cb27f1d3df27beebf29275152773b9e239092bed63',\nE         -                                                          u'size': 679},\nE         ?                                                         --        - ^\nE         +                                                         'size': 703L},\nE         ?                                                                  ^^^\nE         -             u'data/data.json': {u'sha512': u'0f2321c905b761a05c360a389e1de149d952b16097c4ccf8310158356e85fb52',\nE         +             'data/data.json': {'sha512': 'a7919a78587627676983978969d6457eb351da51ed1355c588885138baba7b85',\nE         -                                 u'size': 31126},\nE         ?                                --          ^^\nE         +                                'size': 31369L},\nE         ?                                          ^ ++\nE         -             u'data/img/autoupdate.png': {u'sha512': u'd2b4dc8e0da2861ea051c0c13490a4eccf8933d77383a5b43de447c49d816e71',\nE         ?             -                            -          -\nE         +             'data/img/autoupdate.png': {'sha512': 'd2b4dc8e0da2861ea051c0c13490a4eccf8933d77383a5b43de447c49d816e71',\nE         -                                          u'size': 24460},\nE         ?                                         --\nE         +                                         'size': 24460L},\nE         ?                                                      +\nE         -             u'data/img/direct_domains.png': {u'sha512': u'5f14b30c1852735ab329b22496b1e2ea751cb04704789443ad73a70587c59719',\nE         ?             -                                -          -\nE         +             'data/img/direct_domains.png': {'sha512': '5f14b30c1852735ab329b22496b1e2ea751cb04704789443ad73a70587c59719',\nE         -                                              u'size': 16185},\nE         ?                                             --\nE         +                                             'size': 16185L},\nE         ?                                                          +\nE         -             u'data/img/domain.png': {u'sha512': u'ce87e0831f4d1e95a95d7120ca4d33f8273c6fce9f5bbedf7209396ea0b57b6a',\nE         ?             -                        -          -\nE         +             'data/img/domain.png': {'sha512': 'ce87e0831f4d1e95a95d7120ca4d33f8273c6fce9f5bbedf7209396ea0b57b6a',\nE         -                                      u'size': 11881},\nE         ?                                     --\nE         +                                     'size': 11881L},\nE         ?                                                  +\nE         -             u'data/img/memory.png': {u'sha512': u'dd56515085b4a79b5809716f76f267ec3a204be3ee0d215591a77bf0f390fa4e',\nE         ?             -                        -          -\nE         +             'data/img/memory.png': {'sha512': 'dd56515085b4a79b5809716f76f267ec3a204be3ee0d215591a77bf0f390fa4e',\nE         -                                      u'size': 12775},\nE         ?                                     --\nE         +                                     'size': 12775L},\nE         ?                                                  +\nE         -             u'data/img/multiuser.png': {u'sha512': u'88e3f795f9b86583640867897de6efc14e1aa42f93e848ed1645213e6cc210c6',\nE         ?             -                           -          -\nE         +             'data/img/multiuser.png': {'sha512': '88e3f795f9b86583640867897de6efc14e1aa42f93e848ed1645213e6cc210c6',\nE         -                                         u'size': 29480},\nE         ?                                        --\nE         +                                        'size': 29480L},\nE         ?                                                     +\nE         -             u'data/img/progressbar.png': {u'sha512': u'23d592ae386ce14158cec34d32a3556771725e331c14d5a4905c59e0fe980ebf',\nE         ?             -                             -          -\nE         +             'data/img/progressbar.png': {'sha512': '23d592ae386ce14158cec34d32a3556771725e331c14d5a4905c59e0fe980ebf',\nE         -                                           u'size': 13294},\nE         ?                                          --\nE         +                                          'size': 13294L},\nE         ?                                                       +\nE         -             u'data/img/slides.png': {u'sha512': u'1933db3b90ab93465befa1bd0843babe38173975e306286e08151be9992f767e',\nE         ?             -                        -          -\nE         +             'data/img/slides.png': {'sha512': '1933db3b90ab93465befa1bd0843babe38173975e306286e08151be9992f767e',\nE         -                                      u'size': 14439},\nE         ?                                     --\nE         +                                     'size': 14439L},\nE         ?                                                  +\nE         -             u'data/img/slots_memory.png': {u'sha512': u'82a250e6da909d7f66341e5b5c443353958f86728cd3f06e988b6441e6847c29',\nE         ?             -                              -          -\nE         +             'data/img/slots_memory.png': {'sha512': '82a250e6da909d7f66341e5b5c443353958f86728cd3f06e988b6441e6847c29',\nE         -                                            u'size': 9488},\nE         ?                                           --\nE         +                                           'size': 9488L},\nE         ?                                                       +\nE         -             u'data/img/trayicon.png': {u'sha512': u'e7ae65bf280f13fb7175c1293dad7d18f1fcb186ebc9e1e33850cdaccb897b8f',\nE         ?             -                          -          -\nE         +             'data/img/trayicon.png': {'sha512': 'e7ae65bf280f13fb7175c1293dad7d18f1fcb186ebc9e1e33850cdaccb897b8f',\nE         -                                        u'size': 19040},\nE         ?                                       --\nE         +                                       'size': 19040L},\nE         ?                                                    +\nE         -             u'dbschema.json': {u'sha512': u'7b756e8e475d4d6b345a24e2ae14254f5c6f4aa67391a94491a026550fe00df8',\nE         +             'dbschema.json': {'sha512': 'a92933be0138624aaf1d14e1c0e4467915b1a1623e48302378031dcfaed35510',\nE         -                                u'size': 1529},\nE         ?                               --           ^\nE         +                               'size': 1582L},\nE         ?                                         + ^\nE         -             u'img/loading.gif': {u'sha512': u'8a42b98962faea74618113166886be488c09dad10ca47fe97005edc5fb40cc00',\nE         ?             -                    -          -\nE         +             'img/loading.gif': {'sha512': '8a42b98962faea74618113166886be488c09dad10ca47fe97005edc5fb40cc00',\nE         -                                  u'size': 723},\nE         ?                                 --\nE         +                                 'size': 723L},\nE         ?                                            +\nE         -             u'index.html': {u'sha512': u'c4039ebfc4cb6f116cac05e803a18644ed70404474a572f0d8473f4572f05df3',\nE         +             'index.html': {'sha512': '607317eb5744be5f538b0dc464f6c90dc7a1c2a0e3e00db05cecad86b8e7c556',\nE         -                             u'size': 4667},\nE         ?                            --         ^^^\nE         +                            'size': 4804L},\nE         ?                                     ^^^^\nE         -             u'js/all.js': {u'sha512': u'034c97535f3c9b3fbebf2dcf61a38711dae762acf1a99168ae7ddc7e265f582c',\nE         +             'js/all.js': {'sha512': 'f801cdd7f507a53bb0a8a32e2ce3d54593e47111bf7693c8232722c33809f8aa',\nE         -                            u'size': 201178}},\nE         ?                           --          ^^ ^\nE         +                           'size': 203070L}},\nE         ?                                     ^^ ^^\nE         -  u'files_optional': {u'data/img/zeroblog-comments.png': {u'sha512': u'efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4',\nE         ?                      -                                   -          -\nE         +  u'files_optional': {'data/img/zeroblog-comments.png': {'sha512': 'efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4',\nE         -                                                          u'size': 24001},\nE         ?                                                         --\nE         +                                                         'size': 24001L},\nE         ?                                                                      +\nE         -                      u'data/img/zeroid.png': {u'sha512': u'b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b',\nE         ?                      -                        -          -\nE         +                      'data/img/zeroid.png': {'sha512': 'b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b',\nE         -                                               u'size': 18875},\nE         ?                                              --\nE         +                                              'size': 18875L},\nE         ?                                                           +\nE         -                      u'data/img/zeroname.png': {u'sha512': u'bab45a1bb2087b64e4f69f756b2ffa5ad39b7fdc48c83609cdde44028a7a155d',\nE         ?                      -                          -          -\nE         +                      'data/img/zeroname.png': {'sha512': 'bab45a1bb2087b64e4f69f756b2ffa5ad39b7fdc48c83609cdde44028a7a155d',\nE         -                                                 u'size': 36031},\nE         ?                                                --\nE         +                                                'size': 36031L},\nE         ?                                                             +\nE         -                      u'data/img/zerotalk-mark.png': {u'sha512': u'a335b2fedeb8d291ca68d3091f567c180628e80f41de4331a5feb19601d078af',\nE         ?                      -                               -          -\nE         +                      'data/img/zerotalk-mark.png': {'sha512': 'a335b2fedeb8d291ca68d3091f567c180628e80f41de4331a5feb19601d078af',\nE         -                                                      u'size': 44862},\nE         ?                                                     --\nE         +                                                     'size': 44862L},\nE         ?                                                                  +\nE         -                      u'data/img/zerotalk-upvote.png': {u'sha512': u'b1ffd7f948b4f99248dde7efe256c2efdfd997f7e876fb9734f986ef2b561732',\nE         ?                      -                                 -          -\nE         +                      'data/img/zerotalk-upvote.png': {'sha512': 'b1ffd7f948b4f99248dde7efe256c2efdfd997f7e876fb9734f986ef2b561732',\nE         -                                                        u'size': 41092},\nE         ?                                                       --\nE         +                                                       'size': 41092L},\nE         ?                                                                    +\nE         -                      u'data/img/zerotalk.png': {u'sha512': u'54d10497a1ffca9a4780092fd1bd158c15f639856d654d2eb33a42f9d8e33cd8',\nE         ?                      -                          -          -\nE         +                      'data/img/zerotalk.png': {'sha512': '54d10497a1ffca9a4780092fd1bd158c15f639856d654d2eb33a42f9d8e33cd8',\nE         -                                                 u'size': 26606},\nE         ?                                                --\nE         +                                                'size': 26606L},\nE         ?                                                             +\nE         -                      u'data/optional.txt': {u'sha512': u'c6f81db0e9f8206c971c9e5826e3ba823ffbb1a3a900f8047652a8bf78ea98fd',\nE         ?                      -                      -          -\nE         +                      'data/optional.txt': {'sha512': 'c6f81db0e9f8206c971c9e5826e3ba823ffbb1a3a900f8047652a8bf78ea98fd',\nE         -                                             u'size': 6}},\nE         ?                                            --\nE         +                                            'size': 6L}},\nE         ?                                                     +\nE         u'ignore': u'((js|css)/(?!all.(js|css))|data/.*db|data/users/.*/.*|data/test_include/.*)',\nE         u'includes': {u'data/test_include/content.json': {u'added': 1424976057,\nE         u'files_allowed': u'data.json',\nE         u'includes_allowed': False,\nE         u'max_size': 20000,\nE         u'signers': [u'15ik6LeBWnACWfaika1xqGapRZ1zh3JpCo'],\nE         u'signers_required': 1,\nE         u'user_id': 47,\nE         u'user_name': u'test'},\nE         u'data/users/content.json': {u'signers': [u'1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f'],\nE         u'signers_required': 1}},\nE         -  u'inner_path': u'content.json',\nE         ?                 -\nE         +  u'inner_path': 'content.json',\nE         u'optional': u'(data/img/zero.*|data/optional.txt)',\nE         -  u'signers_sign': u'HDNmWJHM2diYln4pkdL+qYOvgE7MdwayzeG+xEUZBgp1HtOjBJS+knDEVQsBkjcOPicDG2it1r6R1eQrmogqSP0=',\nE         ?                   -\nE         +  u'signers_sign': 'HDNmWJHM2diYln4pkdL+qYOvgE7MdwayzeG+xEUZBgp1HtOjBJS+knDEVQsBkjcOPicDG2it1r6R1eQrmogqSP0=',\nE         u'signs_required': 1,\nE         u'title': u'ZeroBlog'}\n```\n", "added": 1457884310, "modified": 1457884310, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/360#issuecomment-196019968", "source_type": "github"}, {"comment_id": 20, "body": "Eliminated version:\n\n```\n(env) C:\\Users\\Oliver\\Documents\\AeroFS\\ZeroNet\\ZeroNet [master]> python -m pytest .\\src\\Test\\TestContent.py -k testSign[\ncontent.json]\n============================= test session starts =============================\nplatform win32 -- Python 2.7.9, pytest-2.9.0, py-1.4.31, pluggy-0.3.1 -- C:\\Users\\Oliver\\Documents\\AeroFS\\ZeroNet\\ZeroNet\\env\\Scripts\\python.exe\ncachedir: src\\Test\\.cache\nrootdir: C:\\Users\\Oliver\\Documents\\AeroFS\\ZeroNet\\ZeroNet\\src\\Test, inifile: pytest.ini\ncollected 8 items\n\nsrc\\Test\\TestContent.py::TestContent::testSign[content.json] FAILED\n\n========================== slowest 6 test durations ===========================\n0.28s call     TestContent.py::TestContent::testSign[content.json]\n0.03s setup    TestContent.py::TestContent::testSign[content.json]\n0.00s teardown TestContent.py::TestContent::testSign[content.json]\n================================== FAILURES ===================================\n_____________________ TestContent.testSign[content.json] ______________________\n\nself = <src.Test.TestContent.TestContent instance at 0x035EF288>\nsite = <Site 1TeSTv..xQGT>, inner_path = 'content.json'\n\n    @pytest.mark.parametrize(\"inner_path\", [\"content.json\", \"data/test_include/content.json\", \"data/users/content.json\"])\n    def testSign(self, site, inner_path):\n        # Bad privatekey\n        assert not site.content_manager.sign(inner_path, privatekey=\"5aaa3PvNm5HUWoCfSUfcYvfQ2g3PrRNJWr6Q9eqdBGu23mtMnaa\", filewrite=False)\n\n        # Good privatekey\n        content = site.content_manager.sign(inner_path, privatekey=\"5KUh3PvNm5HUWoCfSUfcYvfQ2g3PrRNJWr6Q9eqdBGu23mtMntv\", filewrite=False)\n        content_old = site.content_manager.contents[inner_path]  # Content before the sign\n        assert not content_old == content  # Timestamp changed\n        assert site.address in content[\"signs\"]  # Used the site's private key to sign\n        if inner_path == \"content.json\":\n            assert len(content[\"files\"]) == 17\n        elif inner_path == \"data/test-include/content.json\":\n            assert len(content[\"files\"]) == 1\n        elif inner_path == \"data/users/content.json\":\n            assert len(content[\"files\"]) == 0\n\n        # Everything should be same as before except the modified timestamp and the signs\n>       assert (\n            {key: val for key, val in content_old.items() if key not in [\"modified\", \"signs\", \"sign\", \"zeronet_version\"]}\n            ==\n            {key: val for key, val in content.items() if key not in [\"modified\", \"signs\", \"sign\", \"zeronet_version\"]}\n        )\nE       assert {'address': '...ork.bit', ...} == {'address': '1...ork.bit', ...}\nE         Common items:\nE         {u'address': u'1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT',\nE          u'background-color': u'white',\nE          u'description': u'Blogging platform Demo',\nE          u'domain': u'Blog.ZeroNetwork.bit',\nE          u'files_optional': {u'data/img/zeroblog-comments.png': {u'sha512': u'efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4',\nE                                                                  u'size': 24001},\nE                              u'data/img/zeroid.png': {u'sha512': u'b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b',\nE                                                       u'size': 18875},\nE         Detailed information truncated (216 more lines), use \"-vv\" to show\n\nsrc\\Test\\TestContent.py:98: AssertionError\n---------------------------- Captured stdout setup ----------------------------\nDEBUG:Site:1TeSTv..xQGT:New auth key: 2d6f928172505690f21b83be9489cd9a7571d1ecda4546b5eca2c80a90e94dbc\nDEBUG:Site:1TeSTv..xQGT:New wrapper key: 62ad3bbd58dae973c222f0ddac5169ee38e1162844cfaf3bc13acf1ed702b172\n---------------------------- Captured stdout call -----------------------------\nINFO:Site:1TeSTv..xQGT:Opening site data directory: src/Test/testdata/1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT/...\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] content.json\nINFO:Site:1TeSTv..xQGT:- dbschema.json (SHA512: a92933be0138624aaf1d14e1c0e4467915b1a1623e48302378031dcfaed35510)\nINFO:Site:1TeSTv..xQGT:- index.html (SHA512: 607317eb5744be5f538b0dc464f6c90dc7a1c2a0e3e00db05cecad86b8e7c556)\nINFO:Site:1TeSTv..xQGT:- css/all.css (SHA512: fcca6465c91188993b597a12a3fb75c9cf7a5c9371276ca6c6c014a2809d3ad1)\nINFO:Site:1TeSTv..xQGT:- data/data.json (SHA512: a7919a78587627676983978969d6457eb351da51ed1355c588885138baba7b85)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/optional.txt (SHA512: c6f81db0e9f8206c971c9e5826e3ba823ffbb1a3a900f8047652a8bf78ea98fd)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/zeroblog.db\nINFO:Site:1TeSTv..xQGT:- data/img/autoupdate.png (SHA512: d2b4dc8e0da2861ea051c0c13490a4eccf8933d77383a5b43de447c49d816e71)\nINFO:Site:1TeSTv..xQGT:- data/img/direct_domains.png (SHA512: 5f14b30c1852735ab329b22496b1e2ea751cb04704789443ad73a70587c59719)\nINFO:Site:1TeSTv..xQGT:- data/img/domain.png (SHA512: ce87e0831f4d1e95a95d7120ca4d33f8273c6fce9f5bbedf7209396ea0b57b6a)\nINFO:Site:1TeSTv..xQGT:- data/img/memory.png (SHA512: dd56515085b4a79b5809716f76f267ec3a204be3ee0d215591a77bf0f390fa4e)\nINFO:Site:1TeSTv..xQGT:- data/img/multiuser.png (SHA512: 88e3f795f9b86583640867897de6efc14e1aa42f93e848ed1645213e6cc210c6)\nINFO:Site:1TeSTv..xQGT:- data/img/progressbar.png (SHA512: 23d592ae386ce14158cec34d32a3556771725e331c14d5a4905c59e0fe980ebf)\nINFO:Site:1TeSTv..xQGT:- data/img/slides.png (SHA512: 1933db3b90ab93465befa1bd0843babe38173975e306286e08151be9992f767e)\nINFO:Site:1TeSTv..xQGT:- data/img/slots_memory.png (SHA512: 82a250e6da909d7f66341e5b5c443353958f86728cd3f06e988b6441e6847c29)\nINFO:Site:1TeSTv..xQGT:- data/img/trayicon.png (SHA512: e7ae65bf280f13fb7175c1293dad7d18f1fcb186ebc9e1e33850cdaccb897b8f)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroblog-comments.png (SHA512: efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroid.png (SHA512: b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroname.png (SHA512: bab45a1bb2087b64e4f69f756b2ffa5ad39b7fdc48c83609cdde44028a7a155d)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-mark.png (SHA512: a335b2fedeb8d291ca68d3091f567c180628e80f41de4331a5feb19601d078af)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-upvote.png (SHA512: b1ffd7f948b4f99248dde7efe256c2efdfd997f7e876fb9734f986ef2b561732)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk.png (SHA512: 54d10497a1ffca9a4780092fd1bd158c15f639856d654d2eb33a42f9d8e33cd8)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/peanut-butter-jelly-time.gif\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/data.json\nINFO:Site:1TeSTv..xQGT:- data-default/data.json (SHA512: 1a11aae6e183f3fb2026763b014047edc933c3a27bfab5da63daecf998f116aa)\nINFO:Site:1TeSTv..xQGT:- data-default/users/content-default.json (SHA512: 37b11e263d4f572555f8a1cb27f1d3df27beebf29275152773b9e239092bed63)\nINFO:Site:1TeSTv..xQGT:- img/loading.gif (SHA512: 8a42b98962faea74618113166886be488c09dad10ca47fe97005edc5fb40cc00)\nINFO:Site:1TeSTv..xQGT:- js/all.js (SHA512: f801cdd7f507a53bb0a8a32e2ce3d54593e47111bf7693c8232722c33809f8aa)\nDEBUG:Site:1TeSTv..xQGT:Changed files: ['content.json', 'data/img/zeroid.png', 'data/img/zerotalk-upvote.png', 'dbschema.json', 'data/img/zeroblog-comments.png', 'css/all.css', 'data/img/zerotalk.png', 'data-default/data.json', 'js/all.js', 'data/img/zeroname.png', 'data/optional.txt', 'data/data.json', 'index.html', 'data/img/zerotalk-mark.png', 'data-default/users/content-default.json']\nINFO:Site:1TeSTv..xQGT:Adding timestamp and sha512sums to new content.json...\nINFO:Site:1TeSTv..xQGT:Verifying private key...\nERROR:Site:1TeSTv..xQGT:Private key invalid! Valid signers: ['1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT'], Private key address: False\nINFO:Site:1TeSTv..xQGT:Opening site data directory: src/Test/testdata/1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT/...\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] content.json\nINFO:Site:1TeSTv..xQGT:- dbschema.json (SHA512: a92933be0138624aaf1d14e1c0e4467915b1a1623e48302378031dcfaed35510)\nINFO:Site:1TeSTv..xQGT:- index.html (SHA512: 607317eb5744be5f538b0dc464f6c90dc7a1c2a0e3e00db05cecad86b8e7c556)\nINFO:Site:1TeSTv..xQGT:- css/all.css (SHA512: fcca6465c91188993b597a12a3fb75c9cf7a5c9371276ca6c6c014a2809d3ad1)\nINFO:Site:1TeSTv..xQGT:- data/data.json (SHA512: a7919a78587627676983978969d6457eb351da51ed1355c588885138baba7b85)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/optional.txt (SHA512: c6f81db0e9f8206c971c9e5826e3ba823ffbb1a3a900f8047652a8bf78ea98fd)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/zeroblog.db\nINFO:Site:1TeSTv..xQGT:- data/img/autoupdate.png (SHA512: d2b4dc8e0da2861ea051c0c13490a4eccf8933d77383a5b43de447c49d816e71)\nINFO:Site:1TeSTv..xQGT:- data/img/direct_domains.png (SHA512: 5f14b30c1852735ab329b22496b1e2ea751cb04704789443ad73a70587c59719)\nINFO:Site:1TeSTv..xQGT:- data/img/domain.png (SHA512: ce87e0831f4d1e95a95d7120ca4d33f8273c6fce9f5bbedf7209396ea0b57b6a)\nINFO:Site:1TeSTv..xQGT:- data/img/memory.png (SHA512: dd56515085b4a79b5809716f76f267ec3a204be3ee0d215591a77bf0f390fa4e)\nINFO:Site:1TeSTv..xQGT:- data/img/multiuser.png (SHA512: 88e3f795f9b86583640867897de6efc14e1aa42f93e848ed1645213e6cc210c6)\nINFO:Site:1TeSTv..xQGT:- data/img/progressbar.png (SHA512: 23d592ae386ce14158cec34d32a3556771725e331c14d5a4905c59e0fe980ebf)\nINFO:Site:1TeSTv..xQGT:- data/img/slides.png (SHA512: 1933db3b90ab93465befa1bd0843babe38173975e306286e08151be9992f767e)\nINFO:Site:1TeSTv..xQGT:- data/img/slots_memory.png (SHA512: 82a250e6da909d7f66341e5b5c443353958f86728cd3f06e988b6441e6847c29)\nINFO:Site:1TeSTv..xQGT:- data/img/trayicon.png (SHA512: e7ae65bf280f13fb7175c1293dad7d18f1fcb186ebc9e1e33850cdaccb897b8f)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroblog-comments.png (SHA512: efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroid.png (SHA512: b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroname.png (SHA512: bab45a1bb2087b64e4f69f756b2ffa5ad39b7fdc48c83609cdde44028a7a155d)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-mark.png (SHA512: a335b2fedeb8d291ca68d3091f567c180628e80f41de4331a5feb19601d078af)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-upvote.png (SHA512: b1ffd7f948b4f99248dde7efe256c2efdfd997f7e876fb9734f986ef2b561732)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk.png (SHA512: 54d10497a1ffca9a4780092fd1bd158c15f639856d654d2eb33a42f9d8e33cd8)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/peanut-butter-jelly-time.gif\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/data.json\nINFO:Site:1TeSTv..xQGT:- data-default/data.json (SHA512: 1a11aae6e183f3fb2026763b014047edc933c3a27bfab5da63daecf998f116aa)\nINFO:Site:1TeSTv..xQGT:- data-default/users/content-default.json (SHA512: 37b11e263d4f572555f8a1cb27f1d3df27beebf29275152773b9e239092bed63)\nINFO:Site:1TeSTv..xQGT:- img/loading.gif (SHA512: 8a42b98962faea74618113166886be488c09dad10ca47fe97005edc5fb40cc00)\nINFO:Site:1TeSTv..xQGT:- js/all.js (SHA512: f801cdd7f507a53bb0a8a32e2ce3d54593e47111bf7693c8232722c33809f8aa)\nDEBUG:Site:1TeSTv..xQGT:Changed files: ['content.json', 'data/img/zeroid.png', 'data/img/zerotalk-upvote.png', 'dbschema.json', 'data/img/zeroblog-comments.png', 'css/all.css', 'data/img/zerotalk.png', 'data-default/data.json', 'js/all.js', 'data/img/zeroname.png', 'data/optional.txt', 'data/data.json', 'index.html', 'data/img/zerotalk-mark.png', 'data-default/users/content-default.json']\nINFO:Site:1TeSTv..xQGT:Adding timestamp and sha512sums to new content.json...\nINFO:Site:1TeSTv..xQGT:Verifying private key...\nINFO:Site:1TeSTv..xQGT:Correct 1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT in valid signers: ['1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT']\nINFO:Site:1TeSTv..xQGT:Signing content.json...\nINFO:Site:1TeSTv..xQGT:File content.json signed!\n============== 7 tests deselected by '-ktestSign[content.json]' ===============\n=================== 1 failed, 7 deselected in 0.40 seconds ====================\n```\n", "added": 1457888256, "modified": 1457888256, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/360#issuecomment-196039141", "source_type": "github"}, {"comment_id": 21, "body": "This has to relate to line endings on Windows. I'll keep digging - can't be a coincidence!\n\n```\ncontent[u'files']['css/all.css']['size'] = {long} 113094\ncontent_old[u'files']['css/all.css']['size'] = {int} 112710\n```\n\n```\noli@praxis:~$ python\nPython 2.7.3 (default, Jun 22 2015, 19:33:41)\n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> 113094 - 112710\n384\n>>>\noli@praxis:~$ wc -l AeroFS/ZeroNet/ZeroNet/src/Test/testdata/1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT/css/all.css\n384 AeroFS/ZeroNet/ZeroNet/src/Test/testdata/1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT/css/all.css\n```\n", "added": 1458068831, "modified": 1458068831, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/360#issuecomment-197046666", "source_type": "github"}, {"comment_id": 22, "body": "Of course - Windows developers need `core.autocrlf = input` as other settings will checkout the `src/Test/testdata` files with CRLF line endings and cause the file size and checksum tests in `TestContent.py::testSign` to fail.\n\nFrom: http://stackoverflow.com/questions/3206843/how-line-ending-conversions-work-with-git-core-autocrlf-between-different-operat\n- _Text files checked-out from the repository will keep original EOL characters in your working tree._\n- _Text files in your working tree with CRLF EOL characters are normalized to LF when committed back to the repository._\n", "added": 1458414970, "modified": 1458414970, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/360#issuecomment-198796424", "source_type": "github"}], "1604065217_mirrored_OliverCole_github": [{"comment_id": 23, "body": "Ohh, I get you now! One sec.\n", "added": 1458418820, "modified": 1458418904, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/380#issuecomment-198805756", "source_type": "github"}], "1604065223_mirrored_OliverCole_github": [{"comment_id": 24, "body": "Packet capture: [wrapper_nonce.zip](https://github.com/HelloZeroNet/ZeroNet/files/181368/wrapper_nonce.zip) (from a separate machine - Ubuntu, latest FF)\n", "added": 1458479661, "modified": 1458479801, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/383#issuecomment-198956215", "source_type": "github"}, {"comment_id": 25, "body": "OK, my bad. I had a different error earlier, saw the comments on that blog entry and grabbed one from a different site. Thanks!\n", "added": 1458483699, "modified": 1458483699, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/383#issuecomment-198968420", "source_type": "github"}], "1604065235_mirrored_OliverCole_github": [{"comment_id": 26, "body": "Hmm - so yes, the entry point/discovery is censorable, but the actual content is not.\n\nIf I had a domain, and some ZeroNet content, and my domain was seized or whatever, the ZeroNet content would remain, and still be distributed and updatable.\n\nIf users could now reference it via its ZeroNet address then I can continue to maintain and use the ZeroNet content, right? In a sense, it's almost counter-censorship, because it can't be taken down by seizing the domain. Isn't that worth having?\n", "added": 1458901077, "modified": 1458901077, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/391#issuecomment-201273408", "source_type": "github"}, {"comment_id": 27, "body": "What do you mean by updates? \n\nDo you mean, what if the seized domain gained a new ZeroNet address pointing at something else? That would be bad yeah, and hard to handle too.\n", "added": 1458901516, "modified": 1458901516, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/391#issuecomment-201274983", "source_type": "github"}, {"comment_id": 28, "body": "That's true, but you could limit it to DNSSEC roots to eliminate that.\n\nDoesn't deal with the earlier issues though - I can see it has problems.\n", "added": 1458901854, "modified": 1458901854, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/391#issuecomment-201276173", "source_type": "github"}], "1604065290_mirrored_HelloZeroNet_github": [{"comment_id": 29, "body": "Although in the case where the diff is encrypted it would make sense to compress it before encryption.\n", "added": 1459997113, "modified": 1459997113, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/395#issuecomment-206706335", "source_type": "github"}, {"comment_id": 30, "body": "It looks like CRIME depends on observing multiple ciphertexts. \nIn basically any ZeroNet design I can think of, there is only going to be one ciphertext per patch - I can't see a mechanism for an attacker to force the site owner to inject his extra content and repeatedly patch the site?\n", "added": 1460020041, "modified": 1460020041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/395#issuecomment-206840125", "source_type": "github"}], "1604065239_mirrored_ShalokShalom_github": [{"comment_id": 31, "body": "It is, yes. The bundle scripts simply call the updater, which gets the latest version from GitHub.\n", "added": 1459264300, "modified": 1459264300, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/400#issuecomment-203032190", "source_type": "github"}], "1604065242_mirrored_WangZhengmao_github": [{"comment_id": 32, "body": "Can you provide some more details? Can you share the command and the output with us?\n", "added": 1459348276, "modified": 1459348276, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/402#issuecomment-203541834", "source_type": "github"}], "1604065249_mirrored_mirrorwish_github": [{"comment_id": 33, "body": "On my vanilla Firefox I had to open the console and tick a box in the console settings to force disabling the cache.\n", "added": 1459863371, "modified": 1459863371, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/409#issuecomment-205886596", "source_type": "github"}], "1604065259_mirrored_gaby-de-wilde_github": [{"comment_id": 34, "body": "It would probably be better to do an Ubuntu/Debian package before putting it in a store...\n", "added": 1460455182, "modified": 1460455182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/417#issuecomment-208893013", "source_type": "github"}], "1604065265_mirrored_ShenXuGongZi_github": [{"comment_id": 35, "body": "Can you explain what you mean by GPS being a privacy risk?\n", "added": 1461005855, "modified": 1461005855, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/422#issuecomment-211598610", "source_type": "github"}], "1604065284_mirrored_Feeding_github": [{"comment_id": 36, "body": "There was/is a Chrome extension: https://chrome.google.com/webstore/detail/zeronet-protocol/cpkpdcdljfbnepgfejplkhdnopniieop?hl=en\n\nIs that what you mean?\n", "added": 1461519946, "modified": 1461519946, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/436#issuecomment-214032380", "source_type": "github"}], "1604065291_mirrored_PeterCxy_github": [{"comment_id": 37, "body": "Perhaps an emulator? https://developer.chrome.com/devtools/docs/device-mode\n", "added": 1461939519, "modified": 1461939519, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/442#issuecomment-215820126", "source_type": "github"}], "1604065292_mirrored_hayzamjs_github": [{"comment_id": 38, "body": "You should read the developer documentation and slideshow which is linked from the readme.\n\nWhat you need to bear in mind is that the database is really just formed of data in JSON files published by individual users, and then mapped into the database. There's no backend process to run the database for you, unless you run something periodically on your own machine (which isn't great).\n\nZeroNet isn't great at hosting large amounts of data - how much were you thinking of?\n", "added": 1461939106, "modified": 1461939106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/443#issuecomment-215817398", "source_type": "github"}, {"comment_id": 39, "body": "It won't take long to run through the build a site tutorial - it's on the sidebar in ZeroBlog.\n", "added": 1461939150, "modified": 1461939150, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/443#issuecomment-215817704", "source_type": "github"}], "1604065303_mirrored_sergei-bondarenko_github": [{"comment_id": 40, "body": "I'm not sure what I'd use it for, but I like the idea nonetheless!\n", "added": 1464804666, "modified": 1464804666, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/452#issuecomment-223125912", "source_type": "github"}], "1604065389_mirrored_heavenly_github": [{"comment_id": 41, "body": "ZeroNet is intended to serve static sites and Javascript, there's no server to run the PHP on.\n\nBut you can achieve almost anything using Javascript these days!\n", "added": 1469503679, "modified": 1469503679, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/519#issuecomment-235174549", "source_type": "github"}], "1604065411_mirrored_casept_github": [{"comment_id": 42, "body": "Which sites?\n", "added": 1471326495, "modified": 1471326495, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/536#issuecomment-240041091", "source_type": "github"}], "1604065415_mirrored_Shufflow80_github": [{"comment_id": 43, "body": "How did you create the site? Did you sign and publish it?\n", "added": 1471677492, "modified": 1471677492, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/539#issuecomment-241191762", "source_type": "github"}], "1604065695_mirrored_fermmm_github": [{"comment_id": 44, "body": "I like the idea. I don't think anyone's written a phone ZeroNet client though, and that would be a prerequisite.\n\nAnd while that's certainly possible, it would require the users of your Tinder example to allow their phones to be serving P2P requests all day for the site to continue being operational - that tends to be bad for battery life and data caps.", "added": 1484193160, "modified": 1484193160, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/763#issuecomment-272090290", "source_type": "github"}], "1604067605_mirrored_ZeroNetTickBot_github": [{"comment_id": 45, "body": "GPLv3 and Apache", "added": 1572806803, "modified": 1572806803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549182286", "source_type": "github"}], "1604067608_mirrored_ZeroNetTickBot_github": [{"comment_id": 46, "body": "GPLv3 and Lax", "added": 1572823654, "modified": 1572823654, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549207826", "source_type": "github"}]}, "next_topic_id": 10, "topic": [{"topic_id": 1604065186, "title": "Add virtualenv dir to gitignore.", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1457876619, "modified": 1457910168, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/359", "source_type": "github"}, {"topic_id": 1604065188, "title": "TestContent.py::testSign[content.json] fails", "body": "I get this locally - anyone else?\n\n```\n(env) C:\\Users\\Oliver\\Documents\\AeroFS\\ZeroNet\\ZeroNet [master]> python -m pytest .\\src\\Test\\TestContent.py -k testSign[\ncontent.json]\n============================= test session starts =============================\nplatform win32 -- Python 2.7.11, pytest-2.9.0, py-1.4.31, pluggy-0.3.1 -- C:\\Users\\Oliver\\Documents\\AeroFS\\ZeroNet\\ZeroNet\\env\\Scripts\\python.exe\ncachedir: src\\Test\\.cache\nrootdir: C:\\Users\\Oliver\\Documents\\AeroFS\\ZeroNet\\ZeroNet\\src\\Test, inifile: pytest.ini\nplugins: cov-2.2.1\ncollected 8 items\n\nsrc\\Test\\TestContent.py::TestContent::testSign[content.json] FAILED\n\n========================== slowest 6 test durations ===========================\n0.15s call     TestContent.py::TestContent::testSign[content.json]\n0.01s setup    TestContent.py::TestContent::testSign[content.json]\n0.00s teardown TestContent.py::TestContent::testSign[content.json]\n================================== FAILURES ===================================\n_____________________ TestContent.testSign[content.json] ______________________\n\nself = <src.Test.TestContent.TestContent instance at 0x037EA3F0>\nsite = <Site 1TeSTv..xQGT>, inner_path = 'content.json'\n\n    @pytest.mark.parametrize(\"inner_path\", [\"content.json\", \"data/test_include/content.json\", \"data/users/content.json\"])\n    def testSign(self, site, inner_path):\n        # Bad privatekey\n        assert not site.content_manager.sign(inner_path, privatekey=\"5aaa3PvNm5HUWoCfSUfcYvfQ2g3PrRNJWr6Q9eqdBGu23mtMnaa\", filewrite=False)\n\n        # Good privatekey\n        content = site.content_manager.sign(inner_path, privatekey=\"5KUh3PvNm5HUWoCfSUfcYvfQ2g3PrRNJWr6Q9eqdBGu23mtMntv\", filewrite=False)\n        content_old = site.content_manager.contents[inner_path]  # Content before the sign\n        assert not content_old == content  # Timestamp changed\n        assert site.address in content[\"signs\"]  # Used the site's private key to sign\n        if inner_path == \"content.json\":\n            assert len(content[\"files\"]) == 17\n        elif inner_path == \"data/test-include/content.json\":\n            assert len(content[\"files\"]) == 1\n        elif inner_path == \"data/users/content.json\":\n            assert len(content[\"files\"]) == 0\n\n        # Everything should be same as before except the modified timestamp and the signs\n>       assert (\n            {key: val for key, val in content_old.items() if key not in [\"modified\", \"signs\", \"sign\", \"zeronet_version\"]}\n            ==\n            {key: val for key, val in content.items() if key not in [\"modified\", \"signs\", \"sign\", \"zeronet_version\"]}\n        )\nE       assert {'address': '...ork.bit', ...} == {'address': '1...ork.bit', ...}\nE         Common items:\nE         {u'address': u'1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT',\nE          u'background-color': u'white',\nE          u'description': u'Blogging platform Demo',\nE          u'domain': u'Blog.ZeroNetwork.bit',\nE          u'files_optional': {u'data/img/zeroblog-comments.png': {u'sha512': u'efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4',\nE                                                                  u'size': 24001},\nE                              u'data/img/zeroid.png': {u'sha512': u'b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b',\nE                                                       u'size': 18875},\nE         Detailed information truncated (216 more lines), use \"-vv\" to show\n\nsrc\\Test\\TestContent.py:98: AssertionError\n---------------------------- Captured stdout setup ----------------------------\nDEBUG:Site:1TeSTv..xQGT:New auth key: 3d7fa0718c59f08bf73272adb70d4d5c9f3cd5e507e6bc69d3b2b92aa90bb4a4\nDEBUG:Site:1TeSTv..xQGT:New wrapper key: c8e03a51640139696dd058572f7a0a0885220ae376906382539e2f4916cc5425\n---------------------------- Captured stdout call -----------------------------\nINFO:Site:1TeSTv..xQGT:Opening site data directory: src/Test/testdata/1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT/...\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] content.json\nINFO:Site:1TeSTv..xQGT:- dbschema.json (SHA512: a92933be0138624aaf1d14e1c0e4467915b1a1623e48302378031dcfaed35510)\nINFO:Site:1TeSTv..xQGT:- index.html (SHA512: 607317eb5744be5f538b0dc464f6c90dc7a1c2a0e3e00db05cecad86b8e7c556)\nINFO:Site:1TeSTv..xQGT:- css/all.css (SHA512: fcca6465c91188993b597a12a3fb75c9cf7a5c9371276ca6c6c014a2809d3ad1)\nINFO:Site:1TeSTv..xQGT:- data/data.json (SHA512: a7919a78587627676983978969d6457eb351da51ed1355c588885138baba7b85)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/optional.txt (SHA512: c6f81db0e9f8206c971c9e5826e3ba823ffbb1a3a900f8047652a8bf78ea98fd)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/zeroblog.db\nINFO:Site:1TeSTv..xQGT:- data/img/autoupdate.png (SHA512: d2b4dc8e0da2861ea051c0c13490a4eccf8933d77383a5b43de447c49d816e71)\nINFO:Site:1TeSTv..xQGT:- data/img/direct_domains.png (SHA512: 5f14b30c1852735ab329b22496b1e2ea751cb04704789443ad73a70587c59719)\nINFO:Site:1TeSTv..xQGT:- data/img/domain.png (SHA512: ce87e0831f4d1e95a95d7120ca4d33f8273c6fce9f5bbedf7209396ea0b57b6a)\nINFO:Site:1TeSTv..xQGT:- data/img/memory.png (SHA512: dd56515085b4a79b5809716f76f267ec3a204be3ee0d215591a77bf0f390fa4e)\nINFO:Site:1TeSTv..xQGT:- data/img/multiuser.png (SHA512: 88e3f795f9b86583640867897de6efc14e1aa42f93e848ed1645213e6cc210c6)\nINFO:Site:1TeSTv..xQGT:- data/img/progressbar.png (SHA512: 23d592ae386ce14158cec34d32a3556771725e331c14d5a4905c59e0fe980ebf)\nINFO:Site:1TeSTv..xQGT:- data/img/slides.png (SHA512: 1933db3b90ab93465befa1bd0843babe38173975e306286e08151be9992f767e)\nINFO:Site:1TeSTv..xQGT:- data/img/slots_memory.png (SHA512: 82a250e6da909d7f66341e5b5c443353958f86728cd3f06e988b6441e6847c29)\nINFO:Site:1TeSTv..xQGT:- data/img/trayicon.png (SHA512: e7ae65bf280f13fb7175c1293dad7d18f1fcb186ebc9e1e33850cdaccb897b8f)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroblog-comments.png (SHA512: efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroid.png (SHA512: b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroname.png (SHA512: bab45a1bb2087b64e4f69f756b2ffa5ad39b7fdc48c83609cdde44028a7a155d)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-mark.png (SHA512: a335b2fedeb8d291ca68d3091f567c180628e80f41de4331a5feb19601d078af)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-upvote.png (SHA512: b1ffd7f948b4f99248dde7efe256c2efdfd997f7e876fb9734f986ef2b561732)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk.png (SHA512: 54d10497a1ffca9a4780092fd1bd158c15f639856d654d2eb33a42f9d8e33cd8)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/peanut-butter-jelly-time.gif\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/data.json\nINFO:Site:1TeSTv..xQGT:- data-default/data.json (SHA512: 1a11aae6e183f3fb2026763b014047edc933c3a27bfab5da63daecf998f116aa)\nINFO:Site:1TeSTv..xQGT:- data-default/users/content-default.json (SHA512: 37b11e263d4f572555f8a1cb27f1d3df27beebf29275152773b9e239092bed63)\nINFO:Site:1TeSTv..xQGT:- img/loading.gif (SHA512: 8a42b98962faea74618113166886be488c09dad10ca47fe97005edc5fb40cc00)\nINFO:Site:1TeSTv..xQGT:- js/all.js (SHA512: f801cdd7f507a53bb0a8a32e2ce3d54593e47111bf7693c8232722c33809f8aa)\nDEBUG:Site:1TeSTv..xQGT:Changed files: ['content.json', 'data/img/zeroid.png', 'data/img/zerotalk-upvote.png', 'dbschema.json', 'data/img/zeroblog-comments.png', 'css/all.css', 'data/img/zerotalk.png', 'data-default/data.json', 'js/all.js', 'data/img/zeroname.png', 'data/optional.txt', 'data/data.json', 'index.html', 'data/img/zerotalk-mark.png', 'data-default/users/content-default.json']\nINFO:Site:1TeSTv..xQGT:Adding timestamp and sha512sums to new content.json...\nINFO:Site:1TeSTv..xQGT:Verifying private key...\nERROR:Site:1TeSTv..xQGT:Private key invalid! Valid signers: ['1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT'], Private key address: False\nINFO:Site:1TeSTv..xQGT:Opening site data directory: src/Test/testdata/1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT/...\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] content.json\nINFO:Site:1TeSTv..xQGT:- dbschema.json (SHA512: a92933be0138624aaf1d14e1c0e4467915b1a1623e48302378031dcfaed35510)\nINFO:Site:1TeSTv..xQGT:- index.html (SHA512: 607317eb5744be5f538b0dc464f6c90dc7a1c2a0e3e00db05cecad86b8e7c556)\nINFO:Site:1TeSTv..xQGT:- css/all.css (SHA512: fcca6465c91188993b597a12a3fb75c9cf7a5c9371276ca6c6c014a2809d3ad1)\nINFO:Site:1TeSTv..xQGT:- data/data.json (SHA512: a7919a78587627676983978969d6457eb351da51ed1355c588885138baba7b85)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/optional.txt (SHA512: c6f81db0e9f8206c971c9e5826e3ba823ffbb1a3a900f8047652a8bf78ea98fd)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/zeroblog.db\nINFO:Site:1TeSTv..xQGT:- data/img/autoupdate.png (SHA512: d2b4dc8e0da2861ea051c0c13490a4eccf8933d77383a5b43de447c49d816e71)\nINFO:Site:1TeSTv..xQGT:- data/img/direct_domains.png (SHA512: 5f14b30c1852735ab329b22496b1e2ea751cb04704789443ad73a70587c59719)\nINFO:Site:1TeSTv..xQGT:- data/img/domain.png (SHA512: ce87e0831f4d1e95a95d7120ca4d33f8273c6fce9f5bbedf7209396ea0b57b6a)\nINFO:Site:1TeSTv..xQGT:- data/img/memory.png (SHA512: dd56515085b4a79b5809716f76f267ec3a204be3ee0d215591a77bf0f390fa4e)\nINFO:Site:1TeSTv..xQGT:- data/img/multiuser.png (SHA512: 88e3f795f9b86583640867897de6efc14e1aa42f93e848ed1645213e6cc210c6)\nINFO:Site:1TeSTv..xQGT:- data/img/progressbar.png (SHA512: 23d592ae386ce14158cec34d32a3556771725e331c14d5a4905c59e0fe980ebf)\nINFO:Site:1TeSTv..xQGT:- data/img/slides.png (SHA512: 1933db3b90ab93465befa1bd0843babe38173975e306286e08151be9992f767e)\nINFO:Site:1TeSTv..xQGT:- data/img/slots_memory.png (SHA512: 82a250e6da909d7f66341e5b5c443353958f86728cd3f06e988b6441e6847c29)\nINFO:Site:1TeSTv..xQGT:- data/img/trayicon.png (SHA512: e7ae65bf280f13fb7175c1293dad7d18f1fcb186ebc9e1e33850cdaccb897b8f)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroblog-comments.png (SHA512: efe4e815a260e555303e5c49e550a689d27a8361f64667bd4a91dbcccb83d2b4)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroid.png (SHA512: b46d541a9e51ba2ddc8a49955b7debbc3b45fd13467d3c20ef104e9d938d052b)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zeroname.png (SHA512: bab45a1bb2087b64e4f69f756b2ffa5ad39b7fdc48c83609cdde44028a7a155d)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-mark.png (SHA512: a335b2fedeb8d291ca68d3091f567c180628e80f41de4331a5feb19601d078af)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk-upvote.png (SHA512: b1ffd7f948b4f99248dde7efe256c2efdfd997f7e876fb9734f986ef2b561732)\nINFO:Site:1TeSTv..xQGT:- [OPTIONAL] data/img/zerotalk.png (SHA512: 54d10497a1ffca9a4780092fd1bd158c15f639856d654d2eb33a42f9d8e33cd8)\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/test_include/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1C5sgvWaSgfaTpV5kjBCnCiKtENNMYo69q/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/data.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1CjfbrbwtP8Y2QjPy12vpTATkUT7oSiPQ9/peanut-butter-jelly-time.gif\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/content.json\nINFO:Site:1TeSTv..xQGT:- [SKIPPED] data/users/1J6UrZMkarjVg5ax9W4qThir3BFUikbW6C/data.json\nINFO:Site:1TeSTv..xQGT:- data-default/data.json (SHA512: 1a11aae6e183f3fb2026763b014047edc933c3a27bfab5da63daecf998f116aa)\nINFO:Site:1TeSTv..xQGT:- data-default/users/content-default.json (SHA512: 37b11e263d4f572555f8a1cb27f1d3df27beebf29275152773b9e239092bed63)\nINFO:Site:1TeSTv..xQGT:- img/loading.gif (SHA512: 8a42b98962faea74618113166886be488c09dad10ca47fe97005edc5fb40cc00)\nINFO:Site:1TeSTv..xQGT:- js/all.js (SHA512: f801cdd7f507a53bb0a8a32e2ce3d54593e47111bf7693c8232722c33809f8aa)\nDEBUG:Site:1TeSTv..xQGT:Changed files: ['content.json', 'data/img/zeroid.png', 'data/img/zerotalk-upvote.png', 'dbschema.json', 'data/img/zeroblog-comments.png', 'css/all.css', 'data/img/zerotalk.png', 'data-default/data.json', 'js/all.js', 'data/img/zeroname.png', 'data/optional.txt', 'data/data.json', 'index.html', 'data/img/zerotalk-mark.png', 'data-default/users/content-default.json']\nINFO:Site:1TeSTv..xQGT:Adding timestamp and sha512sums to new content.json...\nINFO:Site:1TeSTv..xQGT:Verifying private key...\nINFO:Site:1TeSTv..xQGT:Correct 1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT in valid signers: ['1TeSTvb4w2PWE81S2rEELgmX2GCCExQGT']\nINFO:Site:1TeSTv..xQGT:Signing content.json...\nINFO:Site:1TeSTv..xQGT:File content.json signed!\n============== 7 tests deselected by '-ktestSign[content.json]' ===============\n=================== 1 failed, 7 deselected in 0.27 seconds ====================\n```\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1457883271, "modified": 1458414970, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/360", "source_type": "github"}, {"topic_id": 1604065215, "title": "Add tools dir to .gitignore", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1458417049, "modified": 1458418096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/379", "source_type": "github"}, {"topic_id": 1604065217, "title": "Add tor and phantomjs dir to .gitignore", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1458418577, "modified": 1458418964, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/380", "source_type": "github"}, {"topic_id": 1604065219, "title": "Add tor and phantomjs dir to .gitignore", "body": "I think this is right now.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1458419219, "modified": 1458419653, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/381", "source_type": "github"}, {"topic_id": 1604065223, "title": "Error Message: \"Message wrapper_nonce error, please report!\"", "body": "I'm following the [site tutorial](http://127.0.0.1:43110/Blog.ZeroNetwork.bit/?Post:43:ZeroNet+site+development+tutorial+1), and I'm getting the above error at the last stage (before publishing).\n\nWin 10, latest FF. I've tried in a fresh profile without any extensions. Seeing #306, I have tried disabling antivirus/antimalware - no effect.\n\nFirefox console:\n\n```\nThe connection to ws://127.0.0.1:43110/Websocket?wrapper_key=f034d74605321b02f027fadcc152eec7afe8804c2e62c215d6afda80797ff2c8 was interrupted while the page was loading. all.js:40:16\n[ZeroWebsocket] Closed close { target: WebSocket, isTrusted: true, wasClean: true, code: 1001, reason: \"\", currentTarget: WebSocket, eventPhase: 2, bubbles: false, cancelable: false, defaultPrevented: false, timeStamp: 1458488860822000 } all.js:106:14\nGET \nhttp://127.0.0.1:43110/1H1Ee3oP5tVZqz5kmQVqqfXjFUDx8kAinN/ [HTTP/1.1 200 OK 1ms]\nGET \nhttp://127.0.0.1:43110/uimedia/all.css [HTTP/1.1 200 OK 2ms]\nGET \nhttp://127.0.0.1:43110/uimedia/all.js [HTTP/1.1 200 OK 4ms]\n[Wrapper] Created! all.js:1292:14\nGET \nhttp://127.0.0.1:43110/1H1Ee3oP5tVZqz5kmQVqqfXjFUDx8kAinN/ [HTTP/1.1 200 OK 0ms]\nGET \nhttp://127.0.0.1:43110/1H1Ee3oP5tVZqz5kmQVqqfXjFUDx8kAinN/js/all.js [HTTP/1.1 200 OK 0ms]\n[Wrapper] Message nonce error: undefined != 8ffea5dfc1054366343dda68a7de96679efb05f9fdcc7cd5e864651d89e32628\n```\n\nSite: [1H1Ee3oP5tVZqz5kmQVqqfXjFUDx8kAinN.zip](https://github.com/HelloZeroNet/ZeroNet/files/181356/1H1Ee3oP5tVZqz5kmQVqqfXjFUDx8kAinN.zip)\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1458478141, "modified": 1458483699, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/383", "source_type": "github"}, {"topic_id": 1604065233, "title": "Generate Coffeescript source maps", "body": "It would be great if we could get this working for debugging the resulting JS in Firefox. [Some](http://ryanflorence.com/2012/coffeescript-source-maps/) [links](http://tarantsov.com/WorkflowThu/source-maps-with-coffeescript-and-uglify-js/).\n\nCurrently we're reading the compiler output on stdout:\n\n``` python\ncompiler = subprocess.Popen(command, shell=True, stderr=subprocess.STDOUT,stdout=subprocess.PIPE)\nout = compiler.stdout.read().decode(\"utf8\")\n```\n\nSo we would need to switch to using temporary files in order to get the map file out, and then making sure it gets served up - or at least stored locally. And we would also need to think about how to stop that leaking with published sites.\n\nAny thoughts?\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1458760992, "modified": 1458760992, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/390", "source_type": "github"}, {"topic_id": 1604065235, "title": "Idea: Using normal domain names via addresses in TXT records", "body": "I'm not sure what discussions have already happened about using names other than .bit, but if you put the site address in the TXT record that would allow public internet domain owners to point to a ZeroNet site.\n\nAny thoughts?\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1458897651, "modified": 1541169803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/391", "source_type": "github"}, {"topic_id": 1604065411, "title": "Consider contributing a ZeroNet client to Beaker", "body": "> Beaker is a browser for IPFS and Dat. It's licensed MIT, and supports plugins for adding new protocols and Web APIs.\n\nhttps://github.com/pfrazee/beaker\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1470994961, "modified": 1487652832, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/530", "source_type": "github"}]}