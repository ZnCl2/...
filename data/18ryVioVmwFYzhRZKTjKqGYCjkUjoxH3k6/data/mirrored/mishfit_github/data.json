{"cert_user_id": "mishfit@github", "next_comment_id": 32, "comment": {"1604065043_mirrored_splix_github": [{"comment_id": 1, "body": "It might be worthwhile catching this particular scenario and improving logging here.", "added": 1492194545, "modified": 1492194545, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/250#issuecomment-294240352", "source_type": "github"}], "1604065518_mirrored_mishfit_github": [{"comment_id": 2, "body": "Cool, I've made a [PR](https://github.com/HelloZeroNet/ZeroNet/pull/621). I just need to update the docs and make a PR for that too\n", "added": 1477100312, "modified": 1477100312, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/620#issuecomment-255507089", "source_type": "github"}], "1604065520_mirrored_mishfit_github": [{"comment_id": 3, "body": "I agree, I want the favicon to work without adding the address but it hasn't worked for me yet. I'm all for any suggestions.\n", "added": 1477143928, "modified": 1477143928, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/621#issuecomment-255539376", "source_type": "github"}, {"comment_id": 4, "body": "Okay, I've fixed the relative paths. Here's a small [repo](https://github.com/mishfit/testZeroNetDynamicFavicon/tree/master/1PoxxaBW6VVeZmRvZ2LY9do5xq1hnoYJ5m) I used for testing it.\n", "added": 1478270339, "modified": 1478270339, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/621#issuecomment-258498873", "source_type": "github"}], "1604065795_mirrored_mishfit_github": [{"comment_id": 5, "body": "I would ordinarily agree, however the original `list` excludes directories in its resultset whereas the new list includes directories (something I actually want)", "added": 1488067273, "modified": 1488067273, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/842#issuecomment-282528928", "source_type": "github"}], "1604065820_mirrored_jerry-wolf_github": [{"comment_id": 6, "body": "@l5h5t7 as of #842 there's a feature in the API to list directories and files (`dirList`) non-recursively. Or you can call `fileList` which will recursively get all the files given a specific path, excluding the directories as it traverses.", "added": 1489578535, "modified": 1489578535, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/846#issuecomment-286765075", "source_type": "github"}], "1604065814_mirrored_Snarkly_github": [{"comment_id": 7, "body": "You have to enter `python zeronet.py` from the same directory in which zeronet.py is located.", "added": 1489485185, "modified": 1489485185, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/858#issuecomment-286411695", "source_type": "github"}, {"comment_id": 8, "body": "When I say \"the same directory\" I mean in the terminal app", "added": 1489500816, "modified": 1489500816, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/858#issuecomment-286492983", "source_type": "github"}], "1604065812_mirrored_sonatagreen_github": [{"comment_id": 9, "body": "I believe the files are \"mutable\" if the \"zite\" owner updates them and signs them.\r\n\r\nIf the site owner doesn't update, sign and publish the new content, then static files will not change (most importantly by seeders of the site).\r\n\r\nPerhaps I'm missing something, but that seems to fit your use case.", "added": 1489485043, "modified": 1489485043, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859#issuecomment-286411125", "source_type": "github"}, {"comment_id": 10, "body": "You might have a misconception about IPFS. You can have static javascript files in IPFS just fine.\r\n\r\nWhat features of the ZeroNet API would you want if the files themselves are meant to be \"immutable\"?", "added": 1489577703, "modified": 1489577703, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859#issuecomment-286760545", "source_type": "github"}, {"comment_id": 11, "body": ">> I don't see how static javascript is relevant to\r\n\r\n>A static zite would differ from e.g. an IPFS site in that it could access the ZeroFrame API, and therefore act as a client for a networked protocol, whereas an IPFS site is purely read-only. Through the API, static zites could have mutable state; only the code would be immutable, not the data.\r\n\r\nYeah, \"non-updatable\" is confusing as a requirement. \"Versioned\" site makes a lot more sense to me.\r\n\r\n>> What features of the ZeroNet API would you want if the files themselves are meant to be \"immutable\"?\r\n\r\n> I'm not sure what you mean by the \"ZeroNet API\", but I'd want everything in the ZeroFrame API, even sitePublish, siteSign, and siteUpdate.\r\n\r\nI mean the \"ZeroFrame\" API.\r\n\r\nPerhaps you should change the title to \"Versioned Sites\" as a feature request.", "added": 1489599909, "modified": 1489599909, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859#issuecomment-286873202", "source_type": "github"}], "1604065840_mirrored_mishfit_github": [{"comment_id": 12, "body": "Never mind. the issue was about size (however the error messaging was unclear)", "added": 1490867663, "modified": 1490867663, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/877#issuecomment-290401707", "source_type": "github"}], "1604065842_mirrored_jancborchardt_github": [{"comment_id": 13, "body": "It's not a bad idea...it would look more professional and be in line with other projects in the space (see [ipfs](https://github.com/ipfs), [bitcoinjs](https://github.com/bitcoinjs), etc.).\r\n\r\n[Here's](https://help.github.com/articles/converting-a-user-into-an-organization/) some docs on how to do it.\r\n\r\nBut it is ultimately up to @shortcutme ", "added": 1491845196, "modified": 1491845196, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/882#issuecomment-293068532", "source_type": "github"}], "1604065851_mirrored_dnelband_github": [{"comment_id": 14, "body": "If the cert already exists and there's only one valid cert signer for the site then \r\n\r\n`siteInfo.cert_user_id` will not be null when you call the [\"siteInfo\"](http://zeronet.readthedocs.io/en/latest/site_development/zeroframe_api_reference/#siteinfo) API command.", "added": 1491854003, "modified": 1491854015, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/883#issuecomment-293101759", "source_type": "github"}], "1604065853_mirrored_virl_github": [{"comment_id": 15, "body": "I think a complete rewrite in Swift/Java would be better.\r\n\r\nA couple of things to consider:\r\n\r\n1. System-wide TOR support allegedly coming soon to iOS, see [here](https://techstuffer.com/tor-for-ios-tor-is-coming-to-ios-soon/)\r\n2. It should be possible to handle trackers, connections, etc natively\r\n3. It would get you into the App Store or Google Play\r\n4. Mobile clients could be leechers-only.\r\n5. That would help standardize protocols/APIs and open up the possibility of having Java/ObjC/Node/C#/Ruby versions of ZeroNet clients.\r\n\r\nIf @shortcutme can add the repo to @HelloZeroNet I can start that (or I can create one and we can switch ownership afterwards).", "added": 1491846246, "modified": 1491846246, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/891#issuecomment-293073076", "source_type": "github"}], "1604065880_mirrored_DaniellMesquita_github": [{"comment_id": 16, "body": "The wrapper already contains this [feature](https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Ui/media/Wrapper.coffee#L167-L175).\r\n And here's the [docs](https://zeronet.readthedocs.io/en/latest/site_development/zeroframe_api_reference/#wrapperopenwindow-_url-target-specs)", "added": 1491851096, "modified": 1491851163, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/897#issuecomment-293092694", "source_type": "github"}, {"comment_id": 17, "body": "I think the changes would be [here](https://github.com/HelloZeroNet/ZeroMe/blob/master/js/utils/Text.coffee#L40-L50).\r\n\r\nEssentially, strip out `target=\"_blank\"` in any URLs and replace it with an \"onclick\" event call to a new function which uses the API.\r\n\r\nThe new function would look similar to `handleLinkClicked` (see [here](https://github.com/HelloZeroNet/ZeroMe/blob/8136f5b24f231fd2f57f8aa07a96c7aa29af068f/js/ZeroMe.coffee#L117)) but would call the API.", "added": 1491853251, "modified": 1491853251, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/897#issuecomment-293099581", "source_type": "github"}, {"comment_id": 18, "body": "Also, I'm not sure if you noticed that you pushed your linked issue to a repo that isn't the original [ZeroMe](https://github.com/HelloZeroNet/ZeroMe)", "added": 1491853305, "modified": 1491853305, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/897#issuecomment-293099743", "source_type": "github"}], "1604065886_mirrored_DaniellMesquita_github": [{"comment_id": 19, "body": "@Plasmmer have you seen the example of optionally seeding a user's images in ZeroMe?\r\n\r\nIt seems like you're talking about something that already exists...all except for the automatic deletion of images, which as @border0464111 pointed out seems like a waste of cycles (from a network/CPU standpoint).\r\n\r\n![optional-sedding](https://cloud.githubusercontent.com/assets/817064/25016423/26c2740c-203d-11e7-99fb-59edb675dc6a.gif)\r\n", "added": 1492093735, "modified": 1492094070, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/899#issuecomment-293968011", "source_type": "github"}, {"comment_id": 20, "body": "You are asking for features which exist (and some that shouldn't exist). It might take some work on your part to implement them in your own site...we're here to help.\r\n\r\nTo that end, I'm going to break down your original comment:\r\n\r\n> Site owners will can activate this option, then users will can get his site from peers but after close the tab, the site will be removed. It will open a horizont to a lot of possibilities:\r\n- A site owner already has the option to include \"merger\" sites.\r\n- Having the optional site removed on the closing of the browser (or tab/window) is unnecessary. However, you can implement that on your own (the browser can let you know when it is closing and you can intercept that event).\r\n\r\n> External images (image from site B on site A);\r\n- That's how ZeroMe works...the images are on a merger site (called a \"hub\" for some reason).\r\n> Social gadgets (ZeroMe's like button, embedded post, etc);\r\n- There's nothing preventing you from cloning ZeroMe, making it a merger site of a site you already own and inserting content from ZeroMe into your site (including a \"like button\")\r\n>External APIs;\r\n> Search engine scrapping website's pages;\r\n> Search engine getting Wiki's pages;\r\n>etc.\r\n- Take a look at ZeroHello. It has an example implementation of pulling data from various sites and aggregating that data. Once aggregated, one could implement a search on that data", "added": 1492098853, "modified": 1492098853, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/899#issuecomment-293990605", "source_type": "github"}], "1604065873_mirrored_mishfit_github": [{"comment_id": 21, "body": "You can get to it by loading my development site: http://127.0.0.1:43110/1Gyhw9AfTojuc42h6nHmV9QCgroTXG9WRt\r\n\r\n![contrechess-signup-signing-001](https://cloud.githubusercontent.com/assets/817064/24917569/d6e0935e-1e9a-11e7-9752-10859c746c0e.gif)\r\n\r\nThe section of code that writes the file is located [here](https://github.com/ContreChess/ContreChess/blob/master/src/js/signup/signup.js#L126-L147) but I've pulled out an excerpt:\r\n```javascript\r\n// 2. sign user address, plus cert type, plus user address (again) in base64\r\n    //    using site's user content address private key\r\n    var textToSign = _self.model.get('btcAddress') + '#web/' + _self.model.get('userName'),\r\n        cert = currency\r\n          .btcSignMessage(_self.contentAddress, textToSign)\r\n          .toDER()\r\n          .toString('base64');\r\n\r\n    return zeronet.addCertificate(cert, _self.model.get('userName'))\r\n      .then(function () {\r\n        return zeronet.selectCertificate('contrechess.io');\r\n      })\r\n      .then(function (response) {\r\n        // 3. write the model to the file system\r\n        var fileContent = btoa(unescape(encodeURIComponent(JSON.stringify(_self.model.toJSON(), null, '  '))));\r\n        return zeronet.writeFile(filePath, fileContent);\r\n      })\r\n      .then(function (response) {\r\n        return zeronet.publish(filePath);\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        // 4. handle errors or process notifications\r\n      });\r\n```\r\nThe file it is trying to save is \"user.json\"...it creates content.json (it's just missing \"cert_user_id\"). I've looked at \"nanasi\" (http://127.0.0.1:43110/16KzwuSAjFnivNimSHuRdPrYd1pNPhuHqN) and it appears to create the cert_user_id for that site.", "added": 1491914929, "modified": 1491914929, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/901#issuecomment-293306885", "source_type": "github"}, {"comment_id": 22, "body": "Awesome, thanks, I'll play around with that.", "added": 1491941622, "modified": 1491941622, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/901#issuecomment-293426904", "source_type": "github"}], "1604065892_mirrored_DaniellMesquita_github": [{"comment_id": 23, "body": "I am trying to understand this issue.\r\n\r\nIs the intent to have multiuser-enabled ZeroNet instances push the user's private key down to the browser by downloading a text file with the key in it?", "added": 1491930224, "modified": 1491930224, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/902#issuecomment-293384067", "source_type": "github"}, {"comment_id": 24, "body": "@Plasmmer dude, chill out.\r\n\r\nI agree with @border0464111 that passing around private keys in plain text is a bad idea. Most people that are even remotely familiar with cryptography would think that is a bad idea.\r\n\r\nZeroNet adoption would increase via a mobile client or even simpler desktop bundles.\r\n\r\nProxies are not trustworthy (implicitly...not an insult towards proxy operators). So why would one want to pass in a private key to an entity one doesn't trust?", "added": 1492099363, "modified": 1492099363, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/902#issuecomment-293992825", "source_type": "github"}], "1604065872_mirrored_Forbo_github": [{"comment_id": 25, "body": "Another reason to convert @HelloZeroNet into an organization. Then register as a developer on Microsoft Store (and Apple Developer and Google Play, etc.). Then work to get ZeroNet entered into the Microsoft Store (will need signing, etc..but Windows/ClamAV will presume its been blessed). ", "added": 1492100470, "modified": 1492100470, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-293997197", "source_type": "github"}], "1604065901_mirrored_DaniellMesquita_github": [{"comment_id": 26, "body": "This may be a silly/unnecessary question...but do you have python27 installed? If so, can you run\r\n```cmd\r\npip install gevent\r\n```\r\n(you might need to do this for `msgpack-python` if you don't have that either)", "added": 1492046115, "modified": 1492046115, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/908#issuecomment-293775611", "source_type": "github"}], "1604065889_mirrored_mishfit_github": [{"comment_id": 27, "body": "@shortcutme can I get eyes on this?", "added": 1493840614, "modified": 1493840614, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/912#issuecomment-299056168", "source_type": "github"}, {"comment_id": 28, "body": "Awesome, hope it's been fun.", "added": 1493849049, "modified": 1493849049, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/912#issuecomment-299076075", "source_type": "github"}], "1604065909_mirrored_DaniellMesquita_github": [{"comment_id": 29, "body": "Do you mean the menu inside your site:\r\n<img width=\"538\" alt=\"zeronet-peers\" src=\"https://cloud.githubusercontent.com/assets/817064/25292167/413aa024-2692-11e7-8cf8-6b163a5fb859.png\">\r\n\r\nOr the menu inside [ZeroHello](https://github.com/HelloZeroNet/ZeroHello/)?\r\n<img width=\"354\" alt=\"zerohello-peers\" src=\"https://cloud.githubusercontent.com/assets/817064/25292189/57990270-2692-11e7-928b-4326d86d6a5d.png\">\r\n\r\nThat will help determine whether this is a ZeroNet Sidebar plugin issue or a ZeroHello site issue", "added": 1492790430, "modified": 1492790430, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/913#issuecomment-296278173", "source_type": "github"}, {"comment_id": 30, "body": "That seems like a good thing to me...you aren't a peer, you are the current instance.\r\n\r\n@shortcutme can weigh in, but if you are correctly listed on the globe and the number of real peers is correct, then it probably shouldn't include you.\r\n\r\nI also see what looks like an explicit exclusion of \"self\" (loopback or \"127.0.0.1\") as a peer in [SiteManager.py](https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Site/SiteManager.py#L158)\r\n```python\r\npeer_blacklist = [(\"127.0.0.1\", config.fileserver_port)]  # Dont add this peers\r\n```", "added": 1492791967, "modified": 1492791967, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/913#issuecomment-296285499", "source_type": "github"}], "1604065886_mirrored_imachug_github": [{"comment_id": 31, "body": "While I like the idea of pushing the hash to the inner frame I think it shouldn't be in the template for the wrapper, but instead somewhere in the [javascript portion of the logic for the wrapper](https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Ui/media/Wrapper.coffee#L372-L380):\r\n```javascript\r\n# Iframe loaded\r\n\tonLoad: (e) =>\r\n\t\t@inner_loaded = true\r\n\t\tif not @inner_ready then @sendInner {\"cmd\": \"wrapperReady\"} # Inner frame loaded before wrapper\r\n\t\t#if not @site_error then @loading.hideScreen() # Hide loading screen\r\n                //# ***NOTE***\r\n                // somewhere in here the hash should be pushed to the inner_frame\r\n                //***\r\n\t\tif @ws.ws.readyState == 1 and not @site_info # Ws opened\r\n\t\t\t@reloadSiteInfo()\r\n\t\telse if @site_info and @site_info.content?.title?\r\n\t\t\twindow.document.title = @site_info.content.title+\" - ZeroNet\"\r\n\t\t\t@log \"Setting title to\", window.document.title\r\n```\r\nThis would keep the logic in the same file as [this](https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Ui/media/Wrapper.coffee#L29-L33) (which handles hash changes):\r\n```javascript\r\nwindow.onhashchange = (e) => # On hash change\r\n\t\t\t@log \"Hashchange\", window.location.hash\r\n\t\t\tif window.location.hash\r\n\t\t\t\tsrc = $(\"#inner-iframe\").attr(\"src\").replace(/#.*/, \"\")+window.location.hash\r\n\t\t\t\t$(\"#inner-iframe\").attr(\"src\", src)\r\n```\r\n", "added": 1492980297, "modified": 1492980311, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/915#issuecomment-296497585", "source_type": "github"}]}, "next_topic_id": 9, "topic": [{"topic_id": 1604065518, "title": "Serve Site-Specific Favicon", "body": "Was hoping to get dynamic favicon files served by the UiServer. I've created a tentative [commit](https://github.com/mishfit/ZeroNet/commit/84ea1687ab76b27688f44d61abdf99d92c985a5e) but am not sure I'm using the right approach.\n\nI've removed the lines where UiRequest blindly serves the standard ZeroNet favicon and added an attempt to retrieve the favicon from content.json.\n\nI've also changed the wrapper template to take a favicon variable and add the appropriate header link tag.\n\nI would appreciate it if you could look it over, critique it, and (if acceptable) I'll create the PR for it.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1477067068, "modified": 1477100312, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/620", "source_type": "github"}, {"topic_id": 1604065520, "title": "Serve Site-Specific Favicon", "body": "Serve either the standard ZeroNet (icon](https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Ui/media/img/favicon.ico) or an image referenced in `content.json` (example):\r\n\r\n``` json\r\n\"title\": \"foo.bit\",\r\n\"favicon\": \"1CLJpP511DDvMsrkdxufodHvLfZZdTtckr/favicon.png\"\r\n```\r\n- [x] Simplify relative path resolution of favicon\r\n- [x] Create a PR for \"readthedocs\" documentation\r\n\r\nI'd like to create an associated PR for the documentation site before merging this in.\r\n\r\nFor some reason including the site address in the favicon path appears to be required...would love suggestions on allowing the path to look like its based from the site root directory:\r\n\r\n``` json\r\n\"favicon\": \"favicon.png\"\r\n```\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1477100269, "modified": 1478805577, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/621", "source_type": "github"}, {"topic_id": 1604065530, "title": "Prevent portchecker on tor == always", "body": "Perhaps it's just me, but is there a point to testing for the port before checking for tor settings?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1478271337, "modified": 1478275560, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/628", "source_type": "github"}, {"topic_id": 1604065788, "title": "How does one support \"Unique to site\" user accounts?", "body": "Was looking to see if this question was asked (and/or answered) already...all I found was this #458.\r\n\r\nHow does one support accounts that are unique to the site (not using ZeroID)?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1487563624, "modified": 1487569180, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/837", "source_type": "github"}, {"topic_id": 1604065795, "title": "Rename SiteStorage.list to SiteStorage.walk", "body": "also, add SiteStorage.list as non-recursive\r\ndirectory listing (`os.listdir`)\r\n\r\nI've got a use case for listing the contents of a directory (non-recursively) and the nomenclature works better with 'list' (which is what it's actually doing) while the pre-existing 'list' function is actually performing a 'walk'.\r\n\r\nI've renamed 'list' to 'walk' (to make more sense) and added 'list' for a single directory.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1487987552, "modified": 1488620805, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/842", "source_type": "github"}, {"topic_id": 1604065840, "title": "Site Sign Failed (new development)", "body": "I'm having an issue when trying to sign user data which has successfully written to disk.\r\n\r\nI've checked out an example of saving user data [here](http://127.0.0.1:43110/16KzwuSAjFnivNimSHuRdPrYd1pNPhuHqN) however, they do not appear to need to create the content.json file in the user-specific data director.\r\n\r\nBelow is the output associated:\r\n```bash\r\n- Starting ZeroNet...\r\n[16:50:04] - OpenSSL loaded, version: 0009081DF\r\n[16:50:04] - Patching sockets to tor socks proxy: 127.0.0.1:9050\r\n[16:50:04] - Version: 0.5.3 r2004, Python 2.7.10 (default, Oct 23 2015, 19:19:21) \r\n[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)], Gevent: 1.1.2\r\n[16:50:04] - Creating FileServer....\r\n[16:50:04] - Creating UiServer....\r\n[16:50:04] SiteManager Deleting orphan site from content.db: 16P3zSUJidcexQx2WJDJeYrWH25vcg3gnY\r\n[16:50:04] - Removing old SSL certs...\r\n[16:50:04] - Starting servers....\r\n[16:50:04] Ui.UiServer --------------------------------------\r\n[16:50:04] Ui.UiServer Web interface: http://127.0.0.1:43110/\r\n[16:50:04] Ui.UiServer --------------------------------------\r\n[16:50:05] FileServer Checking port 15441 using portchecker.co...\r\n[16:50:24] Site:1Gyhw9..9WRt Opening site data directory: data/1Gyhw9AfTojuc42h6nHmV9QCgroTXG9WRt/...\r\n[16:50:24] Site:1Gyhw9..9WRt - [SKIPPED] .content.json.swp\r\n[16:50:24] Site:1Gyhw9..9WRt - [SKIPPED] content.json\r\n[16:50:24] Site:1Gyhw9..9WRt - index.html (SHA512: ed48b6467ca4e7370cc15afe92da818676b451537939c5ebfa7dbb1725f1a9a5)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/semantic.css (SHA512: 0231d68e35f409a0fc5b4526543c4dd8267fe1a900be29ccac381033de50419e)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/styles.css (SHA512: 0c24a002ae3925cfd483b0b923d30fb760fdcd1bfdcb4c9b3ce9aa7ee6ad6b83)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/themes/default/assets/fonts/icons.eot (SHA512: c160d3d77e67eff986043461693b2a831e1175f579490d7f0b411005ea81bd4f)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/themes/default/assets/fonts/icons.svg (SHA512: 4f575d52331de91a2e32cc3408dd0eaf0cf25b7244d34b226314e3647e85ce28)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/themes/default/assets/fonts/icons.ttf (SHA512: 9ffb91e68c975172848b4bba25284678cc2c6eb4fb2d42000aa871c36656c4ce)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/themes/default/assets/fonts/icons.woff (SHA512: 9c776dea55a01fd854ea23b3463d9ac716077d406ecbe8ed0c9b6120ff7e6035)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/themes/default/assets/fonts/icons.woff2 (SHA512: 838fefdbc14901f41edf995a78fdac55764cd4912ccb734b8bea490919458290)\r\n[16:50:24] Site:1Gyhw9..9WRt - css/themes/default/assets/images/flags.png (SHA512: 5470424a23d61248974ae1886e6e38e78685b7957b05445b1c12b9ca355faa81)\r\n[16:50:24] Site:1Gyhw9..9WRt - [SKIPPED] data/users/content.json\r\n[16:50:24] Site:1Gyhw9..9WRt - [SKIPPED] data/users/19qnpSv3bmXNgKhRyaFE5k5FPcLJ5AZiDU/user.json\r\n[16:50:24] Site:1Gyhw9..9WRt - [SKIPPED] data/users/19qnpSv3bmXNgKhRyaFE5k5FPcLJ5AZiDU/user.json-old\r\n[16:50:24] Site:1Gyhw9..9WRt - images/game.svg (SHA512: 7593981b31e3bd5d3f97cf9aa61a23c7e8ed9b5c4aef55fbaf1ed303434dc0cd)\r\n[16:50:24] Site:1Gyhw9..9WRt - js/contre-min.js (SHA512: db60d340e2d364094de5e201cd15f61f94d816bc2a7608f603cb7ad1ebf70beb)\r\n[16:50:24] Site:1Gyhw9..9WRt - js/contre.js (SHA512: 98c642eb29700e5f69b191184bc0ae976d145b1fe04fde5dd094d3401f44f7d8)\r\n[16:50:24] Site:1Gyhw9..9WRt - js/semantic.js (SHA512: 43d0a7345b6f7fda6a7fdb106039b2163a0fdaa97fba062a8ddbff01d43066e8)\r\n[16:50:24] Site:1Gyhw9..9WRt Adding timestamp and sha512sums to new content.json...\r\n[16:50:24] Site:1Gyhw9..9WRt Verifying private key...\r\n[16:50:24] Site:1Gyhw9..9WRt Correct 1Gyhw9AfTojuc42h6nHmV9QCgroTXG9WRt in valid signers: [u'1Gyhw9AfTojuc42h6nHmV9QCgroTXG9WRt']\r\n[16:50:24] Site:1Gyhw9..9WRt Signing content.json...\r\n[16:50:24] Site:1Gyhw9..9WRt Saving to content.json...\r\n[16:50:24] Site:1Gyhw9..9WRt File content.json signed!\r\n[16:50:35] Site:1RedkC..uFdL data/users/1CigQW67KiepQZi2sFvrr1jsLCXxibntdw/data.json file size does not match 520 <> 390, Hash: False\r\n[16:50:35] Site:1RedkC..uFdL data/users/1CigQW67KiepQZi2sFvrr1jsLCXxibntdw/data.json file size does not match 520 <> 390, Hash: False\r\n[16:50:35] Site:1RedkC..uFdL data/users/1CigQW67KiepQZi2sFvrr1jsLCXxibntdw/data.json file size does not match 520 <> 390, Hash: False\r\n[16:50:36] Site:1BLueG..tG49 data/users/1NsW7cpAZSc2F2RSUBSE8TcZvuUMrjtCGq/data.json file size does not match 47887 <> 48078, Hash: False\r\n[16:50:37] Site:1BLueG..tG49 data/users/1AWKKjCvCFvUbmrbBtqrMSfAGZ8D6tAVHt/data.json file size does not match 47619 <> 47815, Hash: False\r\n[16:50:38] Site:1BLueG..tG49 data/users/1AWKKjCvCFvUbmrbBtqrMSfAGZ8D6tAVHt/data.json file size does not match 47619 <> 47815, Hash: False\r\n[16:50:38] Site:1BLueG..tG49 data/users/1NsW7cpAZSc2F2RSUBSE8TcZvuUMrjtCGq/data.json file size does not match 47887 <> 48078, Hash: False\r\n[16:50:38] Site:1BLueG..tG49 data/users/1NsW7cpAZSc2F2RSUBSE8TcZvuUMrjtCGq/data.json file size does not match 47887 <> 48078, Hash: False\r\n[16:50:38] Site:1BLueG..tG49 data/users/1yvSQH5Z7aJra4y9s6KG2kjLeGXYhNgn7/data.json file size does not match 45306 <> 45685, Hash: False\r\n[16:50:39] Site:1BLueG..tG49 data/users/1yvSQH5Z7aJra4y9s6KG2kjLeGXYhNgn7/data.json file size does not match 45306 <> 45685, Hash: False\r\n[16:50:39] Site:1BLueG..tG49 data/users/1AWKKjCvCFvUbmrbBtqrMSfAGZ8D6tAVHt/data.json file size does not match 47619 <> 47815, Hash: False\r\n[16:50:40] Site:1BLueG..tG49 data/users/1NsW7cpAZSc2F2RSUBSE8TcZvuUMrjtCGq/data.json file size does not match 43570 <> 48078, Hash: False\r\n[16:50:41] Site:1BLueG..tG49 data/users/1AWKKjCvCFvUbmrbBtqrMSfAGZ8D6tAVHt/data.json file size does not match 47619 <> 47815, Hash: False\r\n[16:50:42] Site:1BLueG..tG49 data/users/1yvSQH5Z7aJra4y9s6KG2kjLeGXYhNgn7/data.json file size does not match 45306 <> 45685, Hash: False\r\n[16:50:44] Site:1BLueG..tG49 data/users/1yvSQH5Z7aJra4y9s6KG2kjLeGXYhNgn7/data.json file size does not match 45306 <> 45685, Hash: False\r\n[16:50:52] Site:1K28kQ..NddE data/users/1GZvKfDijCJZJ7hyUpU4AdrgqFKe3DzLNv/data.json file size does not match 236 <> 647, Hash: False\r\n[16:50:53] Site:1K28kQ..NddE data/users/1GZvKfDijCJZJ7hyUpU4AdrgqFKe3DzLNv/data.json file size does not match 236 <> 647, Hash: False\r\n[16:50:53] Site:1K28kQ..NddE data/users/1GZvKfDijCJZJ7hyUpU4AdrgqFKe3DzLNv/data.json file size does not match 236 <> 647, Hash: False\r\n[16:50:57] FileServer Update for 1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27/data/users/15B3dWeg9CL5hcKEQq7UX6efPSFCYV9T9T/content.json looks valid, saving...\r\n[16:51:22] Site:1BLueG..tG49 data/users/1NsW7cpAZSc2F2RSUBSE8TcZvuUMrjtCGq/data.json file size does not match 47887 <> 48078, Hash: False\r\n[16:51:24] FileServer Update for 1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27/data/users/15B3dWeg9CL5hcKEQq7UX6efPSFCYV9T9T/content.json looks valid, saving...\r\n[16:51:25] Site:1BLueG..tG49 data/users/1yvSQH5Z7aJra4y9s6KG2kjLeGXYhNgn7/data.json file size does not match 45306 <> 45685, Hash: False\r\n[16:51:25] Site:1BLueG..tG49 data/users/1NsW7cpAZSc2F2RSUBSE8TcZvuUMrjtCGq/data.json file size does not match 47887 <> 48078, Hash: False\r\n[16:51:25] Site:1RedkC..uFdL data/users/1CigQW67KiepQZi2sFvrr1jsLCXxibntdw/data.json file size does not match 520 <> 390, Hash: False\r\n[16:51:30] Site:1BLueG..tG49 data/users/1yvSQH5Z7aJra4y9s6KG2kjLeGXYhNgn7/data.json file size does not match 44709 <> 45685, Hash: False\r\n**[16:51:59] Site:1Gyhw9..9WRt WebSocket handleRequest error: TypeError: 'NoneType' object has no attribute '__getitem__' in UiWebsocket.py line 105 > UiWebsocket.py line 210 > MergerSitePlugin.py line 185 > MergerSitePlugin.py line 182 > UiWebsocket.py line 324**\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1490818760, "modified": 1490867663, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/877", "source_type": "github"}, {"topic_id": 1604065873, "title": "User data content.json missing \"cert_user_id\"", "body": "`ContentManager.py` checks user content.json for \"cert_user_id\"...however, when I sign a file the cert_user_id is not included in the user content.json. Everything else looks okay:\r\n```json\r\n{\r\n \"address\": \"1Gyhw9AfTojuc42h6nHmV9QCgroTXG9WRt\",\r\n \"files\": {\r\n  \"user.json\": {\r\n   \"sha512\": \"67a27e6e9a1154adc93e24bcdef2a7430983a8b6bb000f14f1860597a0b94977\",\r\n   \"size\": 5082\r\n  }\r\n },\r\n \"inner_path\": \"data/users/128WNjzSyM9kEFCCHQJVSEp2y81ojrcKs1/content.json\",\r\n \"modified\": 1491897904,\r\n \"signs\": {\r\n  \"128WNjzSyM9kEFCCHQJVSEp2y81ojrcKs1\": \"HKSwACHjMksJgDwhPP7mOjcHnjJ2oeSzu/kMq+lgCJXZd+HYZRz44ei9BaoIpqhCnqwSgO1hVVfmGwat6wBtlN0=\"\r\n }\r\n}\r\n```\r\n^ It's just missing \"cert_user_id\"", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1491888931, "modified": 1491941622, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/901", "source_type": "github"}, {"topic_id": 1604065889, "title": "Allow empty fileQuery filters", "body": "Currently `actionFileQuery` requires a string value for the query (filter) parameter. To run a query without \"filtering\" an empty string is required.\r\n\r\nThis PR makes `query` optional.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1492756251, "modified": 1494031236, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/912", "source_type": "github"}]}