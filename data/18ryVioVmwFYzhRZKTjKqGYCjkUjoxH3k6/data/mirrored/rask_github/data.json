{"cert_user_id": "rask@github", "next_topic_id": 3, "topic": [{"topic_id": 1604064837, "title": "More documentation for site developers needed", "body": "I'm building a ZeroNet blogging platform from scratch using Backbone.js and JSON+Markdown data formats.\n\nI'd like to see more documentation on the ZeroFrame file API and routing, among additions to the code examples provided.\n\nCurrently there are copy-pastes CoffeeScript examples available at the documentation page regarding `fileGet` (which I'm using succesfully to read JSON, Markdown and .html template files) and `fileWrite` (which I can't seem to get working properly).\n\nI need to save blog post contents into Markdown files and the post meta (such as date, title, publish status and so on) into a general `posts.json` file. Currently the WebSocket connection is error closed when I'm trying to write a new Markdown file into a site subfolder. Do the files need to exist in the `files` construct of the `content.json` file in order allow `fileWrite` to work properly?\n\nRouting is a bit of a mystery for me in the ZeroFrame API. There is code available in the ZeroBlog source, but I'd like to know how setting the site `iframe`'s URL hash could be propagated to the ZeroFrame and onto the main browser window's URL hash.\n\nCould the documentation be beefed up a bit to include pure JS examples that are not copy-pasted out of context (e.g. containing unknown variables and such)?\n\nAll additional information would be awesome. :)\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1429545058, "modified": 1429625455, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/89", "source_type": "github"}, {"topic_id": 1604064839, "title": "Private key validation method for UIWebSocket", "body": "I tried skimming through documentation and source code, but didn't find anything of use.\n\nIt would be great to have a simple private key validation method available for the ZeroFrame API, e.g.\n\n```\nSite.cmd('wrapperPrompt', ['Please give private key:', 'password'], function(private_key) {\n     var privateKeyValid = Site.cmd('validatePrivateKey', private_key, callback);\n});\n```\n\nThere is `siteSign` available, but to my understanding it isn't that usable for \"password protected\" content and such.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1429707496, "modified": 1435249402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/90", "source_type": "github"}], "next_comment_id": 4, "comment": {"1604064837_mirrored_rask_github": [{"comment_id": 1, "body": "Oh okay. I created the site on another computer and I'm working on it on my home computer. Great to know! I'll test it out.\n", "added": 1429625455, "modified": 1429625455, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/89#issuecomment-94875342", "source_type": "github"}], "1604064839_mirrored_rask_github": [{"comment_id": 2, "body": "That works wonders. Thanks for sharing!\n", "added": 1430021770, "modified": 1430021770, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/90#issuecomment-96336243", "source_type": "github"}], "1604064877_mirrored_HelloZeroNet_github": [{"comment_id": 3, "body": "Do you mean that a server runs ZeroNet and allows mobile/similar clients to access ZeroNet through it using auth? Password protected proxy in essence?\n", "added": 1430021912, "modified": 1430021912, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/91#issuecomment-96336305", "source_type": "github"}]}}