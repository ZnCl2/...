{"cert_user_id": "up4@github", "next_comment_id": 32, "comment": {"1604064736_mirrored_HelloZeroNet_github": [{"comment_id": 1, "body": "Hi, me again. Two questions:\n1. Why, precisely (in terms of actual code), are big/large files not supported (many references to \"more than 1MB\")?\n2. Why does it \"need to wait until DHT support\" lands ?\n\nThanks!\n", "added": 1464207817, "modified": 1464207817, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/7#issuecomment-221736805", "source_type": "github"}, {"comment_id": 2, "body": "Hi!\n\nNo harsh feeling against you personally, but I hold a solid grudge against the \"please spare Tor for important text-based traffic from the third world\". Very pre-Nietzschean as a moral argument. I just can't. Plus, I have discussed it ad-nauseam in ZeroChat FR (I think). If I were to make a fork of this repo, modify the storage mechanism (and download progress interface) and not touch the protocol itself, I think people would prefer this version over the official ZeroNet stack because it just makes more sense technically. I'd rather do that than an optional plugin. I'm going to make a pull request when I'm done and I'm going to let you decide if you want it in your repo or not.\n\nI just hope we can make this work.\n", "added": 1464216432, "modified": 1464216432, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/7#issuecomment-221756789", "source_type": "github"}, {"comment_id": 3, "body": "Solution proposed and being worked on here (I will commit real code in the next couple of days): pull request #521.\n", "added": 1469896254, "modified": 1469896254, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/7#issuecomment-236385327", "source_type": "github"}], "1604064781_mirrored_komachi_github": [{"comment_id": 4, "body": "I am working on something to make this easier: #520. Please check it out.\n", "added": 1469894106, "modified": 1469894106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/45#issuecomment-236383088", "source_type": "github"}, {"comment_id": 5, "body": "@str4d my patch is the beginning of something to abstract the transport and create a configuration to allow the user to have the control over which transports he wants to use. Maybe I should PR to your repo those abstractions and then you can PR to the main repo. Anyways I2P support would be great!\n", "added": 1469957789, "modified": 1469957789, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/45#issuecomment-236427668", "source_type": "github"}], "1604064913_mirrored_kseistrup_github": [{"comment_id": 6, "body": "I am working on something to make this easier: #520. Please check it out. Also, dumping BitTorrent trackers would be great in so many ways.\n", "added": 1469894228, "modified": 1469894228, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-236383231", "source_type": "github"}], "1604065050_mirrored_azcoppen_github": [{"comment_id": 7, "body": "Hi guys! For your information, I'm trying something about this. More info here 0net://libzeronet.bit\n", "added": 1467020344, "modified": 1467020344, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/254#issuecomment-228733718", "source_type": "github"}], "1604065247_mirrored_up4_github": [{"comment_id": 8, "body": "OK, thanks. That's not what I meant and it was not functional when I tried it but I talked to the author ( @TheNain38 ) and he said he would fix it and try to implement the functionality I was referring to : that if a local instance of namecoind is running, to automatically switch to resolving .bit domains with it instead of relying on ZeroName. Can we leave this open until it is confirmed to work and turned on by default in a release or something ? Thanks.\n", "added": 1461005581, "modified": 1461005581, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/407#issuecomment-211597410", "source_type": "github"}, {"comment_id": 9, "body": "It's not stable, I agree. But, it does affect the overall perception that ZeroNet does not try very hard to be truly decentralized by forcing you to trust ZeroName, by _default_. Leaving this issue open shows that, well, it's a _known_ issue, at least.\n", "added": 1461017957, "modified": 1461017957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/407#issuecomment-211669810", "source_type": "github"}, {"comment_id": 10, "body": "i hear you and i agree but I think this should remain a ZeroNet open issue and recognized as such\n", "added": 1461019127, "modified": 1461019127, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/407#issuecomment-211676507", "source_type": "github"}], "1604065268_mirrored_frerepoulet_github": [{"comment_id": 11, "body": "So, to be clear here, @HelloZeroNet (BTW, I work with @frerepoulet ). You do understand that the iframe blocking ZeroNet site access to Window.localStorage (required by both HLS and DASH), combined with the ZeroNet file size restriction effectively ban video content of any reasonable quality on your network ? Don't you feel compelled to provide alternative ideas at all ?\n", "added": 1461016157, "modified": 1461016157, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/424#issuecomment-211658376", "source_type": "github"}, {"comment_id": 12, "body": "If you would allow us to extend the ZeroFrame API with some kind of Window.localStorage emulation, then I'd be more than happy to fork dash.js to allow it to work with zeronet. I think we would also need to extend UiServer.fileGet for proper progress tracking and be able to display minimal loading status UI. But I would need some kind of reassurance that provided with good enough code you will make those changes to be default and not disabled optional plugins, if the changes are not made available to all users, they are pointless.\n", "added": 1461017704, "modified": 1461017704, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/424#issuecomment-211668236", "source_type": "github"}, {"comment_id": 13, "body": "OK, great I didn't see that. Will try it and see. Do you already have a precise idea of the other sandboxing issues we should expect (given that with \"allow-same-origin\", it works) ?\n", "added": 1461018414, "modified": 1461018414, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/424#issuecomment-211673305", "source_type": "github"}, {"comment_id": 14, "body": "it might be required (btw, we are looking at Media Source Extensions for both DASH and HLS right now and not WebRTC) but it doesn't seem to be enabled by allow-same-origin which is the only flag we added\n", "added": 1461019045, "modified": 1461019045, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/424#issuecomment-211676316", "source_type": "github"}, {"comment_id": 15, "body": "also, what do you feel about extending fileGet (or such) for download progress tracking ? or is there already something to that effect in place ?\n", "added": 1461019245, "modified": 1461019245, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/424#issuecomment-211676767", "source_type": "github"}, {"comment_id": 16, "body": "yes ok but: 1) they should and 2) we are having all sorts of issues with files >100KB  just as well so, if this can't be fixed at a lower level soon enough, something needs to be done for better I/O error reporting and progress UI\n\nanyways, we'll see if we can have DASH work without allow-same-origin and be back on I/O UI later\n", "added": 1461069480, "modified": 1461069480, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/424#issuecomment-211983507", "source_type": "github"}], "1604065349_mirrored_Arcturus36_github": [{"comment_id": 17, "body": "Wouldn't it be better to pressurize Tor to include it as default in their binary distributions and config ? What are their reasons for not doing so ? Most ZeroNet users are not configuring their tor proxy properly anyways so I think better Tor education might be more productive than silently fixing it for the user whenever possible\u2026\n", "added": 1467407188, "modified": 1467407188, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/487#issuecomment-230071182", "source_type": "github"}, {"comment_id": 18, "body": "Yes but all of this breaks Tor+obfs4 installations that are already setup correctly (well, not quite \"break\" but you get my meaning). I would do the opposite. De-couple ZeroNet from Tor and not package Tor with the ZeroNet bundle altogether. Or make a \"n00b\" distribution that contains everything and a \"pro\" distribution that lets you configure your Tor proxy the way you want, with some recommendations perhaps. AND when it comes to Tor support I think #504 more urgent an issue than including obfs4 in the ZeroNet distro. OR, let the Python stack be the n00b stack and the libzeronet-based distro I'm making ( #254 ) be the \"pro\" version of ZeroNet. ;-)\n", "added": 1467896207, "modified": 1467896341, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/487#issuecomment-231123749", "source_type": "github"}], "1604065388_mirrored_up4_github": [{"comment_id": 19, "body": "@radfish _Also change ZeroAnnounce_: I agree. I also agree with your `--transports {tor,ipv4}` proposal. But I would change \"tor\" for \"onion\" for \"onion routing\" so it excludes ipv4 via tor exit nodes. I would also change --pex-only to --zero-annouce only, however I am not 100% confident about this and I will need to read more on the whole ZeroAnnounce/Boostraper plugin bundle. But I think it is important to keep this pull request open to signify that a refactoring is in progress regarding that. Will be back with more in the next couple of days. Thanks.\n", "added": 1469227285, "modified": 1469227285, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/517#issuecomment-234691968", "source_type": "github"}, {"comment_id": 20, "body": "So, I'm just fixing the current implementation towards benchmarking the siteDownload command the same way it is implemented in libzeronet (pex_only, onion_only). I talked to @shortcutme about merging the \"pex\" and \"announce\" commands but I will need more time to think about it and propose something that is backward compatible and will also simplify the code (both commands should be handled by the same code).\n", "added": 1469711660, "modified": 1469711660, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/517#issuecomment-235944920", "source_type": "github"}, {"comment_id": 21, "body": "I am closing and re-opening this in its own branch.\n", "added": 1469892661, "modified": 1469892661, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/517#issuecomment-236381557", "source_type": "github"}], "1604065391_mirrored_up4_github": [{"comment_id": 22, "body": "There are many ways for ZeroNet to access Namecoins records:\n1.  Via the ZeroName site cache (maintained by, I suppose, Tamas himself)\n2. Via a plugin that requires an accessible namecoind service (but I think it is broken)\n3. Via a new method that was recently introduced in the namecoin client that doesn't require the whole blockchain to work (but that hasn't been implemented in ZeroNet, but I'm sure it could and thus could remove the ZeroName site dependency)\n", "added": 1469226732, "modified": 1469226732, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/518#issuecomment-234691485", "source_type": "github"}], "1604065396_mirrored_up4_github": [{"comment_id": 23, "body": "Hi all. I made a test site for that: 1ASN2GD7AMLcBwo6AViiEAf4KNX55Af6Ki\n\nThe HTML contains a HTML5 video element that requests an mp4 file for which there is a \"vfiles\" entry in the content.json. The array contains an ordered list of normal files that have been obtained with MP4Box with DASH-complient segments of the original MP4 file.\n\nThe video is in French and I provided French closed captions as well as English subtitles. Unfortunately, because of the ZeroNet Ui frame sandboxing, WebVTT tracks will not work. \n\nNow I will update my branch with the code to parse and concatenate all of this on the server-side. In the meantime, within the site, I provided a \"concat.sh\" script that will concatenate all the files to a single properly named file that will simulate what the server-side code will do for you.\n", "added": 1470336225, "modified": 1470336225, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-237692926", "source_type": "github"}, {"comment_id": 24, "body": "I will test in-stream VTT files to see if they are loaded.\n\nUPDATE: there is no hope right now of getting subtitles to work with frame sandboxing. Moving on to implementing server-side concatenation.\n", "added": 1470336274, "modified": 1470345292, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-237693154", "source_type": "github"}, {"comment_id": 25, "body": "So I just committed the first functional \"big file\" support for ZeroNet. It works with `curl` but not from the browser. It's an HTTP thing. Would appreciate some help in debugging that if possible.\n", "added": 1470511645, "modified": 1470511645, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-238052298", "source_type": "github"}, {"comment_id": 26, "body": "Got rid of the broken pipe error. But the content still doesn't load in the browser\u2026\n", "added": 1470568350, "modified": 1470568350, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-238084686", "source_type": "github"}, {"comment_id": 27, "body": "> I still don't understand why are you dividing one \"big\" file into chunks if their summary size can't be more than 10 MB. In what cases will it be useful? P.S. Are you trying to overcome 1 MB limit per file? Is this limit still in effect?\n\n@grez911 \"Still\" meaning that we've talked about it before? If so, I don't recall. I've seen ZeroNet choke on files as low as 256K with current codebase so obviously, supporting both bigger files _and_ chunking is an immediate, direct improvement. It is also backward compatible with the sharing protocol making it an elegant change too. Also, you can include optional file chunks in the list and they will all get transparently requested to peers with better load balancing between them when http-requesting the concatenated file. And my plan in the future for virtual files is to also support proxy files that can be streamed by the ZeroNet UI server from IPFS, WebTorrent and such without the need for the user to support external deamons.\n", "added": 1470581343, "modified": 1470581432, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-238097029", "source_type": "github"}, {"comment_id": 28, "body": "I just merged the merger site feature into this branch so it's in sync with the master branch.\n", "added": 1471185258, "modified": 1471185258, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-239685947", "source_type": "github"}, {"comment_id": 29, "body": "I will pause development of this feature until I hear from Tamas on what his intentions are with eventually pulling it.\n", "added": 1471284563, "modified": 1471284563, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-239930026", "source_type": "github"}, {"comment_id": 30, "body": "I don't mind refactoring this into a plugin if you tell me it is possible. But before I do that, I would like to know if you consider this feature worthy of pulling the code in, albeit as a plugin. Also can it be enabled by default ? Thanks.\n", "added": 1471431719, "modified": 1471431719, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-240420467", "source_type": "github"}, {"comment_id": 31, "body": "If \u00abmaturity\u00bb is what you are looking for, then I'm going to concentrate on libzeronet and the first application I'm building on top of it. When this app is available on the Apple macOS App Store, users will be able to create content where ZeroNet and BitTorrent are used as storages back-ends: ZeroNet for the Core Data-compliant SQLite3 metadata store referring to BitTorrent-served large file blobs. Until virtual files are pulled in here, Python Ui users will only be able to see static JPEG thumbnails of the torrent blobs in the HTML Ui generated by the Cocoa browser. Then, I guess, the feature will be sufficiently mature to implement in Python. But it will take a couple of months at least.\n", "added": 1471799056, "modified": 1471799154, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521#issuecomment-241278458", "source_type": "github"}]}, "next_topic_id": 7, "topic": [{"topic_id": 1604065247, "title": "Decentralized solution for .bit domain resolving", "body": "If I have an up-to-date namecoin blockchain and with a local Namecoind service running, I would like ZeroNet to use its JSON RPC API instead of ZeroName for .bit domain name resolution.\n\nIf it has any chance of being pulled back for the next release I would like to submit a patch. Please let me know if there is interest.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1459683632, "modified": 1485654294, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/407", "source_type": "github"}, {"topic_id": 1604065370, "title": "Make Local Onion Persistent Between Restarts", "body": "Unless mistaken, in `TorManager.py`, method `addOnion`, the private keys are never saved anywhere and never re-used preventing the onion addresses from being persistent between ZeroNet restarts.\n\nSince libzeronet's primary concern is performance for resilient super-peers (eligible for eventual inclusion in the bootstrapable peer list in `Config.py`), this issue is libzeronet-related and a solution for it might be included in my libzeronet-backed port of the Python stack.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1467400236, "modified": 1467400236, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/504", "source_type": "github"}, {"topic_id": 1604065388, "title": "ZeroNet Sharing Protocol Transport Abstraction", "body": "Self-explanatory.\n\nlibzeronet will not support ipv4 (even through Tor exit nodes) nor BitTorrent trackers for hardened security and improved decentralization.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1469194863, "modified": 1469892661, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/517", "source_type": "github"}, {"topic_id": 1604065391, "title": "Hardened Namecoin Peer Bootstrapping", "body": "More zeronet onion peers are needed in the Config.py \"trackers\" boostrap list. I would like to propose a solution that involves the \"zeronet\" entry in Namecoin support (in ZeroName, for which I do not have the source code) as such. Instead of being a map of subdomains --> ZeroNet site addresses, it would be an array of 2 elements, the first one being the current ZeroNet site map, and the second being an array of zeronet peer addresses, as such:\n\n`{  \"zeronet\": [\n    {\n        \"\" :                \"1MZTSurvwBMiVGcMgRQTtM1tGnjBbQKA3z\",\n        \"penis\" :           \"17xzX33PL2o3GEjX8rNmWJBZgzQypoSA7G\",\n        \"nouveauvloggeur\" : \"1AFFsmTYqeQMdPgfic2BGGHWgEy8R1i9Gu\",\n        \"cherjournal\" :     \"1HhZuTC1oN8fFzwyN4RytAPruhyyMEM8Pe\",\n        \"tuetamere\" :       \"1qyRZgfeRstryNAKPFQJnNtRdNaSY1n1B\"\n    },\n    [\n        \"zero://boot3rdez4rzn36x.onion:15441\",\n\"zero://boot.zeronet.io#f36ca555bee6ba216b14d10f38c16f7769ff064e0e37d887603548cc2e64191d:15441\",\n        \"udp://tracker.coppersurfer.tk:6969\",\n        \"udp://tracker.leechers-paradise.org:6969\",\n        \"udp://9.rarbg.com:2710\",\n        \"http://tracker.aletorrenty.pl:2710/announce\",\n        \"http://explodie.org:6969/announce\",\n        \"http://torrent.gresille.org/announce\"\n    ]\n]}`\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1469194929, "modified": 1469226732, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/518", "source_type": "github"}, {"topic_id": 1604065394, "title": "Sharing Protocol Transport Abstraction & Modularity", "body": "Added all changes from #517 pull request. Please refer to it for more info.\n\nThis aims at abstracting the \"transport\" protocol from the \"sharing\" protocol and easily be able to extend the sharing protocol to support more transport protocols (i2p, ip6, etc.). But for now it only serves the purpose of simulating libzeronet benchmarking because libzeronet doesn't support non-zeronet trackers or ip4.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1469893970, "modified": 1469894231, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/520", "source_type": "github"}, {"topic_id": 1604065396, "title": "Virtual Files with Ui-Level Chunking & External Streams", "body": "Here is a solution for bigger files support and more: virtual files with chunking.\n\nSo in your content.json, you would add a \"vfiles\" section such as this one\n\n\"vfiles\" : {\n    \"path/to/vfile1\" : [\n        \"path/to/vfile1/chunk1\",\n        \"path/to/vfile1/chunk2\",\n        \"path/to/vfile1/chunk3\",\n        \"path/to/vfile1/chunk4\",\n        \"path/to/vfile1/chunk5\"\n    ],\n    \"path/to/vfileN\" : [\n        \"path/to/vfileN/chunkA\",\n        \"path/to/vfileN/chunkB\",\n        \"path/to/vfileN/chunkC\",\n        \"path/to/vfileN/chunkD\",\n        \"path/to/vfileN/chunkE\",\n        \"path/to/vfileN/chunkF\"\n    ]\n}\n\nThis would allow for smaller files (\"chunks\") to be concatenated from the filesystem to an HTTP response stream by the Ui server without affecting the sharing protocol at all.\n\nEventually, this could be extended with external vfiles to allow the Ui file server to hide the complexity of installing proxies and additional software by supporting them internally. When an HTTP by the client is made to the Ui server for such a file, the Ui server must handle the request to the external system and stream back the file to the client via http.\n\n\"vfiles\" : {\n    \"path/to/vfile2\" : {\n        uri : \"http://sjdf893hiwjkehrod.onion/bigMovie.mp4\"\n        size : 12567773,\n        sha256 : \"jk98ey934hoi099u23u423\"\n    },\n    \"path/to/vfileZ\" : {\n        uri : \"ipfs://QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG/bigMovie.mp4\"\n        size : 638236,\n        sha256 : \"ASDH=ASDB234234\"\n    }\n}\n\nOf course the ZeroFrame Javascript API should also be extended to allow for better progress reporting.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1469896198, "modified": 1561985727, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/521", "source_type": "github"}]}