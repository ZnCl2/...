{"cert_user_id": "krzotr@github", "next_comment_id": 9, "comment": {"1604067247_mirrored_tangdou1_github": [{"comment_id": 1, "body": "> To make it more predictable we could write our own content-type resolver that does not depends on operating system configuration files.\r\n\r\nInstead of creating own resolver we can create own file which contains specified content-types and extensions e.g.\r\n\r\nfile `/tmp/mime.types`\r\n```\r\n    application/font-woff   woff\r\n    font/woff2              woff2\r\n```\r\n\r\nJust run\r\n```\r\nimport mimetypes\r\nmimetypes.init(['/tmp/mime.types']);\r\n\r\nmimetypes.guess_type('MaterialIcons-Regular.woff2');    # returns ('font/woff2', None) - perfect\r\n```\r\n\r\nRegarding source code of [mimetypes.init function](https://github.com/python/cpython/blob/master/Lib/mimetypes.py#L345). We can create own `mime.types` file which does not depend on operating system configuration files - only specified content-types and extensions entries `mimetypes.init` will be loaded.", "added": 1555348780, "modified": 1555348780, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1940#issuecomment-483403115", "source_type": "github"}], "1604067270_mirrored_tangdou1_github": [{"comment_id": 2, "body": "> > We could avoid the code duplication if the size formatter function would be a separate function\r\n> \r\n> Yes, that will be a good idea. However, I donot know how to implement it explicitly.\r\n\r\nI have removed code duplication.\r\n\r\nCreated function `helper.prettySize` and added tests\r\n\r\n![zeronet_sidebar_plugin](https://user-images.githubusercontent.com/655681/63802732-8c7bdc80-c913-11e9-95a1-85fcbefa05d8.png)\r\n", "added": 1566923866, "modified": 1566924145, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1954#issuecomment-525451567", "source_type": "github"}], "1604067198_mirrored_krzotr_github": [{"comment_id": 3, "body": "I have created a workaround. Just check modification datetime and size of the file and load it from memory instead of disk. This method is much faster and partly solved my problem - not produce additional I/O.\r\n\r\nA web interface is loading correctly (I see lags some times).\r\n\r\nI still do not know why ZeroNet checks a lot of json files.\r\nWhen i go to http://127.0.0.1:43110/149EPBN4hQRpwj5TcoPETepnoXHCUXzaCN/ I see - **88 500** requests to load **content.json** user files (Total of 397 user directories exists in data directory)\r\n\r\n-------\r\n\r\n```diff\r\ndiff --git a/src/Site/SiteStorage.py b/src/Site/SiteStorage.py\r\nindex d901d5f..85f4cd4 100644\r\n--- a/src/Site/SiteStorage.py\r\n+++ b/src/Site/SiteStorage.py\r\n@@ -30,6 +30,7 @@ class SiteStorage(object):\r\n         self.db_checked = False  # Checked db tables since startup\r\n         self.event_db_busy = None  # Gevent AsyncResult if db is working on rebuild\r\n         self.has_db = self.isFile(\"dbschema.json\")  # The site has schema\r\n+        self.files_cache = {}\r\n\r\n         if not os.path.isdir(self.directory):\r\n             if allow_create:\r\n@@ -303,8 +304,30 @@ class SiteStorage(object):\r\n\r\n     # Load and parse json file\r\n     def loadJson(self, inner_path):\r\n+        file_path = self.getPath(inner_path)\r\n+\r\n+        mtime = os.path.getmtime(file_path)\r\n+        size = os.path.getsize(file_path)\r\n+\r\n+        file_path = self.getPath(inner_path)\r\n+\r\n+        if file_path in self.files_cache:\r\n+            cache = self.files_cache[file_path]\r\n+\r\n+            if cache[\"size\"] == size and cache[\"mtime\"] == mtime:\r\n+#                self.log.debug(\"Loaded json from cache: %s\" % (inner_path, ))\r\n+                return cache[\"content\"]\r\n+\r\n         with self.open(inner_path) as file:\r\n-            return json.load(file)\r\n+            content = json.load(file)\r\n+\r\n+            self.files_cache[file_path] = {\r\n+                \"size\": size,\r\n+                \"mtime\": mtime,\r\n+                \"content\": content\r\n+            }\r\n+\r\n+            return content\r\n\r\n     def formatJson(self, data):\r\n         content = json.dumps(data, indent=1, sort_keys=True) \r\n```", "added": 1554311287, "modified": 1554311287, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1955#issuecomment-479639615", "source_type": "github"}, {"comment_id": 4, "body": "The problem exists on ZeroNet sites where is a huge amount of **optional files** e.g. KopyKate BIG Official, ZeroUP, ZeroUP Unlimited.\r\n\r\nI used below JavaScript code (Pool Request https://github.com/HelloZeroNet/ZeroNet/pull/1956) to request to download all files from Zero Up site.\r\nI have a fast internet connection and a lot of free space, so I created seed node. After 7 days my node downloaded only 1 GB of data (download_optional and autodownload has been enabled). This is the reason why I ran this script. In few hours downloaded over 10GB of data. After I restarted ZeroNet I saw \"Loaded json\" in logs and web interface did not respond.\r\n\r\n```\r\n// Just go to http://127.0.0.1:43110/1uPLoaDwKzP6MCGoVzw48r4pxawRBdmQc/ \r\n// open your JavaScript Console and run below code\r\n// Send 3000 fileNeed requests\r\nvar address='1uPLoaDwKzP6MCGoVzw48r4pxawRBdmQc';\r\nzeroframe.cmd('optionalFileList', {\"address\":address, \"orderby\": \"inner_path ASC\", \"filter\":\"\", \"limit\": 3000}, function(lst) {\r\n\tlst.forEach(function(entry) {\r\n\t\tconsole.log(entry.peer + ' \"' + entry.inner_path + '\" size: ' + entry.size);\r\n\t\tzeroframe.cmd('fileNeed', entry.inner_path + '|all', function(e) {\r\n\t\t\tconsole.log(e);\r\n\t\t});\r\n\t});\r\n});\r\n```", "added": 1554380237, "modified": 1554380237, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1955#issuecomment-479941092", "source_type": "github"}], "1604067234_mirrored_krzotr_github": [{"comment_id": 5, "body": "After applying your patch I got a different error when I visit `Files` page on `ZeroHello` - http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/?Files\r\n\r\n```\r\n[2019-04-13 23:32:42,706] ERROR    Site:1HeLLo..Tf3D WebSocket handleRequest error: TypeError: a bytes-like object is required, not 'str' in UiWebsocket.py line 84 > UiWebsocket.py line 268 > OptionalManager/UiWebsocketPlugin.py line 159 > OptionalManager/UiWebsocketPlugin.py line 69\r\n {\"cmd\":\"optionalFileList\",\"params\":{\"address\":\"all\",\"filter\":\"downloaded,bigfile\",\"limit\":101,\"orderby\":\"time_downloaded DESC\"},\"wrapper_nonce\":\"2b75b784dd3abdda0513148948c987b5e4bd96b3c902f273bcf755cda1a99241\",\"id\":91}\r\n```", "added": 1555176958, "modified": 1555176958, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1980#issuecomment-482881796", "source_type": "github"}, {"comment_id": 6, "body": "@radfish After 16 hours of running ZeroNet with your patch I can confirm - I do not see both errors.\r\n\r\nYour patch solved `TypeError` errors which I described in this ticket.", "added": 1555325428, "modified": 1555325428, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1980#issuecomment-483259689", "source_type": "github"}], "1604067526_mirrored_krzotr_github": [{"comment_id": 7, "body": "@imachug, I am not talking about default configuration file  `zeronet.conf`. I agree if file `zeronet.conf` does not exist should be created.\r\n\r\nIn my opinion if you try to load file different  then `zeronet.conf` - file should exists. It is normal to use `--config_file` parameter to load existing configuration. Anybody use  command `--config_file`  to create new file? - I do not think so.\r\n\r\nIs easy way to make typo in the filename. Instead of load new configuration you thinking why configuration does not work.\r\n\r\nIf you disagree I think the debug message are good enough:\r\n- `Loading a configuration from a file xyz.conf`\r\n- `Configuration file 'xyz.conf' does not exist - creating...`", "added": 1568724786, "modified": 1568724786, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2200#issuecomment-532283410", "source_type": "github"}], "1604067525_mirrored_caryoscelus_github": [{"comment_id": 8, "body": "BTC address contains last 4 bytes as a checksum. In my opinion, we should check if an address is correct. Please check this python code https://rosettacode.org/wiki/Bitcoin/address_validation#Python\r\n\r\nValidation of BTC address will prevent point 3 - `change case of one (or many) of its alphabetic components`\r\n\r\n", "added": 1569247759, "modified": 1569247759, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2206#issuecomment-534193644", "source_type": "github"}]}, "next_topic_id": 18, "topic": [{"topic_id": 1604067198, "title": "ZeroNet WEB interface has been blocked by \"Loaded json\" message", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: **Current - 0.6.5 ba6a75f8d7c8d12**\r\n  * Operating system: **Centos 7**\r\n  * Web browser: **Chrome**\r\n  * Tor status: **available**\r\n  * Opened port: **yes**\r\n  * Special configuration: \r\n```\r\nmultiuser_local\r\n\r\noptional_limit = 1024\r\nfileserver_ip_type=ipv4\r\nlog_dir=/zeronet/log\r\ndata_dir=/zeronet/data\r\nfileserver_port=26552\r\nfileserver_ip=0.0.0.0\r\nuse_openssl=true\r\nui_ip=127.0.0.1\r\ndownload_optional=auto\r\nui_trans_proxy\r\nautodownload_bigfile_size_limit = 3900\r\nbigfile_size_limit = 5000\r\nworkers=10\r\nconnected_limit=20\r\nglobal_connected_limit=2048\r\n```\r\n\r\n### Step 2: Describe the problem:\r\n\r\nWeb interface is not working correctly. I checked logs and saw, the web interface has been blocked by `Loaded json: ` command.\r\n\r\n```[2019-04-03 14:21:58,394] DEBUG    Site:1uPLoa..dmQc Loaded json: 44923100 (latest: data/users/1QHVkerVSwMQF8LtzEb5XQSZxGeu9dRHmL/content.json)```\r\n\r\n#### Steps to reproduce:\r\n\r\nI use ZeroFrame API to download (should be \"to request\", because **fileNeed** does not download files instantly) all files from ZeroUP (1uPLoaDwKzP6MCGoVzw48r4pxawRBdmQc) - (commands **optionalFileList** and **fileNeed**, where i added to filename '|all' at the end. I made similar on YouTube and KopyKate BIG OFFICIAL.\r\n\r\n#### Observed Results:\r\n\r\nAfter restart ZeroNet (I changed configuration) web interface not working correctly. In logs, I saw: `Loaded json: X` messages\r\n\r\n```\r\n[2019-04-03 07:19:54,146] DEBUG    Site:1uPLoa..dmQc Loaded json: 100 (latest: data/users/15LYZz82LwdFA4tqWVgv3zJ8ZsWam784VV/content.json)\r\n[2019-04-03 07:19:54,569] DEBUG    Site:1uPLoa..dmQc Loaded json: 200 (latest: data/users/1CwbqLCD6TdkinNNNb4GneZxbsoJ6Mw6oE/content.json)\r\n[2019-04-03 07:19:56,393] DEBUG    Site:1uPLoa..dmQc Loaded json: 300 (latest: data/users/15LYZz82LwdFA4tqWVgv3zJ8ZsWam784VV/content.json)\r\n[2019-04-03 07:19:57,397] DEBUG    Site:1uPLoa..dmQc Loaded json: 400 (latest: data/users/1Mx5xcSVsv8mdsXtKwBPD8X1SEfzN2VR5u/content.json)\r\n```\r\n\r\nAfter a few hours, python has been killed - Out Of Memor\r\n\r\n```\r\n[2019-04-03 14:21:58,321] DEBUG    Site:1uPLoa..dmQc Loaded json: 44922800 (latest: data/users/1DiRWRFXcVgQQ75cXnAG2pyxxjGo2VaH5/content.json)\r\n[2019-04-03 14:21:58,346] DEBUG    Site:1uPLoa..dmQc Loaded json: 44922900 (latest: data/users/1Hfhfqq1dC9cPDrLHGmX5QYFYX3BmeGi6w/content.json)\r\n[2019-04-03 14:21:58,369] DEBUG    Site:1uPLoa..dmQc Loaded json: 44923000 (latest: data/users/1FZYhmAxsjUgUsDb3maysDUc9nRjfJNQm5/content.json)\r\n[2019-04-03 14:21:58,394] DEBUG    Site:1uPLoa..dmQc Loaded json: 44923100 (latest: data/users/1QHVkerVSwMQF8LtzEb5XQSZxGeu9dRHmL/content.json)\r\n[2019-04-03 14:21:58,416] DEBUG    Site:1uPLoa..dmQc Loaded json: 44923200 (latest: data/users/1L3kWGTi9tCFGLrt9EXGN55W1oNv7CU5Hj/content.json)\r\n[2019-04-03 14:21:58,443] DEBUG    Site:1uPLoa..dmQc Loaded json: 44923300 (latest: data/users/19QH9sZCo9RB6TA7648YQsX6rda7toiBnB/content.json)\r\n[2019-04-03 14:21:58,468] DEBUG    Site:1uPLoa..dmQc Loaded json: 44923400 (latest: data/users/12qJ8Wiyw72qWbKDnzg7qDGdL1fLUBzeXQ/content.json)\r\n```\r\n\r\nAs you can see, the application tries to load different **content.json** user files over **44922800** times. In a data directory, I have only **594** user directories.\r\n\r\n```\r\n# ls -la /zeronet/data/1uPLoaDwKzP6MCGoVzw48r4pxawRBdmQc/data/users/ | wc -l\r\n594\r\n```\r\n\r\n#### Expected Results:\r\n\r\nInitialization of ZeroNet should be very fast.\r\n\r\nWhy application check content.json user file many times? Should be some kind of cache to prevent load the same file several times.\r\n\r\nAt the moment I cannot get access to Web Interface of ZeroNet\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554291265, "modified": 1554380237, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1955", "source_type": "github"}, {"topic_id": 1604067200, "title": "OptionalFileList - Added support for filter not_downloaded", "body": "We have **optionalFileList** command and filters: **downloaded**, **bigfile**, **pinned**, **downloaded**. \r\n\r\nAdded support to **not_downloaded** filter to get all not downloaded files through API.\r\n\r\nThis is much better solution then checking **entry.is_downloaded** in loop in JavaScript.\r\n\r\nExample:\r\n```\r\nvar address='1CiXRY9ATZSoZqBzwMfXEMsKtPRt2aQoF2';\r\n\r\nzeroframe.cmd('optionalFileList', {\"address\":address, \"orderby\": \"inner_path ASC\", \"filter\":\"not_downloaded\", \"limit\": 1000}, function(lst) {\r\n\tlst.forEach(function(entry) {\r\n\t\tconsole.log(entry.is_downloaded + ' ' + entry.inner_path);\r\n\t});\r\n});\r\n```\r\n\r\nTo add to queue not downloaded files now we can use\r\n\r\n```\r\nvar address='1uPLoaDwKzP6MCGoVzw48r4pxawRBdmQc';\r\nzeroframe.cmd('optionalFileList', {\"address\":address, \"orderby\": \"inner_path ASC\", \"filter\":\"not_downloaded\", \"limit\": 1000}, function(lst) {\r\n\tlst.forEach(function(entry) {\r\n\t\tconsole.log(entry.peer + ' \"' + entry.inner_path + '\" size: ' + entry.size);\r\n\t\tzeroframe.cmd('fileNeed', entry.inner_path + '|all', function(e) {\r\n\t\t\tconsole.log(e);\r\n\t\t});\r\n\t});\r\n});\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554293901, "modified": 1554814404, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1956", "source_type": "github"}, {"topic_id": 1604067202, "title": "Added support for encrypted connections in Dockerfile - added OpenSSL\u2026", "body": "I have added **openssl** library to Dockerfile to enable **tls** encryption.\r\n\r\nOn screenshot, you can see previous ZeroNet Dockerfile version without OpenSSL (top image) and with installed OpenSSL - bottom\r\n\r\n![openssl-tls](https://user-images.githubusercontent.com/655681/55572126-38275480-5707-11e9-855e-cbb0dee3574b.png)\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554385192, "modified": 1554387586, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1957", "source_type": "github"}, {"topic_id": 1604067225, "title": "Updated to python 3.6 in Dockerfile", "body": "Changed version of python to 3.6 in Dockerfile", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554919791, "modified": 1554921830, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1975", "source_type": "github"}, {"topic_id": 1604067227, "title": "XSS - Cross Site Scripting on \"403 Forbidden\" page", "body": "Tested on latest git versions of `0.7.0` and `0.6.5`\r\n\r\n1. Open Firefox and go to URL (does not work on Chrome - ERR_BLOCKED_BY_XSS_AUDITOR)\r\n2. Move your mouse on the red rectangle - JavaScript code has been executed\r\n\r\n```\r\nhttp://127.0.0.1:43110/uimedia/im..g/aaa%3Cdiv%20oNmouseover=alert(1);%20style=width:500px;height:500px;background-color:red;position:absolute;top:50;left:50%3EXSS%3C/div%3Eaaa/\r\n```\r\n![xss](https://user-images.githubusercontent.com/655681/55917124-9f08aa00-5bee-11e9-8bdd-a2f43d811588.png)\r\n\r\n\r\nIn HTML code you can see:\r\n```\r\n    \"HTTP_HOST\": \"127.0.0.1:43110\",\r\n    \"HTTP_UPGRADE_INSECURE_REQUESTS\": \"1\",\r\n    \"HTTP_USER_AGENT\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0\",\r\n    \"PATH_INFO\": \"/uimedia/im..g/aaa<div oNmouseover=alert(1); style=width:500px;height:500px;background-color:red;position:absolute;top:50;left:50>XSS</div>aaa/\",\r\n    \"QUERY_STRING\": \"\",\r\n    \"REMOTE_ADDR\": \"172.17.0.1\",\r\n    \"REMOTE_PORT\": \"40050\",\r\n```\r\n\r\nValue of `PATH_INFO` is not escaped!.\r\nPlease escape the following characters with HTML entity encoding to prevent switching into any execution context (`&`, `<`, `>`, `\"`, `'`)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554924032, "modified": 1554931940, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1976", "source_type": "github"}, {"topic_id": 1604067229, "title": "Application version information disclosure on \"403 Forbidden\" page", "body": "This ticket is related to #1976.\r\n\r\nTested on latest git versions of 0.7.0 and 0.6.5\r\n\r\nWhen we add two dots in URL e.g. `http://127.0.0.1:43110/a../` we see `403 Forbidden` page with `Details` - a full list of HTTP headers, all configuration parameters of ZeroNet, list of enabled plugins and specified versions (python, zeronet, gevent).\r\n\r\nIn some cases, we can expose the real IP address of the server behind the proxy. We can also very easy check version of ZeroNet client or python\r\n\r\nThis list should be available when `debug` or `verbose` parameter is set to `on`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554925279, "modified": 1554931873, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1977", "source_type": "github"}, {"topic_id": 1604067234, "title": "Two TypeError after upgrade to py3", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: **py3 - Rev4059** - **Python 3.6.6**\r\n  * Operating system: **Centos 7**\r\n  * Web browser: **Chrome 73**\r\n  * Tor status: **enabled**\r\n  * Opened port: **yes**\r\n  * Special configuration: \r\n```\r\n[global]\r\nfileserver_ip_type=ipv4\r\nlog_dir=/zeronet/log\r\ndata_dir=/zeronet/data\r\nfileserver_port=26552\r\nfileserver_ip=0.0.0.0\r\nuse_openssl=true\r\nui_ip=127.0.0.1\r\ndownload_optional=auto\r\nui_trans_proxy\r\nautodownload_bigfile_size_limit = 5000\r\nbigfile_size_limit = 5000\r\nworkers=15\r\nconnected_limit=20\r\nglobal_connected_limit=2048\r\noptional_limit=1000\r\n```\r\n\r\n### Step 2: Describe the problem:\r\n\r\nI have two identical environments - the same version of Python, Zeronet, the same OS. On one of them, I have a huge number of sites and a huge number of `Optional Files` - On that machine, I see errors in console/log file.\r\n\r\nAt the moment I do not see any unexpected problems. Maybe something is wrong with downloading or saving files - I do not know.\r\n\r\n#### Steps to reproduce:\r\n\r\nI do not know how to reproduce - I tried a fresh instance of ZeroNet and download, redownload `Optional Files` - no results.\r\nI see errors in the log file and in the console after upgrade to py3 branch.\r\n\r\n#### Observed Results:\r\n\r\nAfter upgrade to py3, I see two types of errors\r\n- Error1 - `TypeError: ljust() argument 2 must be a byte string of length 1, not str`\r\n- Error2 - `TypeError: can't concat str to bytes`\r\n\r\nIn both log files, I get one line before and after.\r\nWhat I see, before error function has triggered `Downloaded optional file in 1.582s, adding to hashfield`\r\n\r\n##### Error 1\r\n```\r\n[09:44:28] - Unhandled exception: [(<class 'TypeError'>, TypeError('ljust() argument 2 must be a byte string of length 1, not str',), <traceback object at 0x7fa087c501c8>)]\r\nTraceback (most recent call last):\r\n  File \"src/gevent/greenlet.py\", line 766, in gevent._greenlet.Greenlet.run\r\n  File \"/home/zeronet/zeronet-py3/src/Worker/Worker.py\", line 122, in downloader\r\n    self.manager.doneTask(task)\r\n  File \"/home/zeronet/zeronet-py3/plugins/OptionalManager/OptionalManagerPlugin.py\", line 145, in doneTask\r\n    super(WorkerManagerPlugin, self).doneTask(task)\r\n  File \"/home/zeronet/zeronet-py3/src/Worker/WorkerManager.py\", line 553, in doneTask\r\n    self.site.content_manager.optionalDownloaded(task[\"inner_path\"], task[\"optional_hash_id\"], task[\"size\"])\r\n  File \"/home/zeronet/zeronet-py3/plugins/OptionalManager/OptionalManagerPlugin.py\", line 72, in optionalDownloaded\r\n    return super(ContentManagerPlugin, self).optionalDownloaded(inner_path, hash_id, size, own)\r\n  File \"/home/zeronet/zeronet-py3/plugins/Bigfile/BigfilePlugin.py\", line 364, in optionalDownloaded\r\n    self.site.storage.piecefields[file_info[\"sha512\"]][piece_i] = True\r\n  File \"/home/zeronet/zeronet-py3/plugins/Bigfile/BigfilePiecefield.py\", line 74, in __setitem__\r\n    data = data.ljust(key + 1, \"0\")\r\nTypeError: ljust() argument 2 must be a byte string of length 1, not str\r\n```\r\n\r\n[log1.txt](https://github.com/HelloZeroNet/ZeroNet/files/3075888/log1.txt)\r\n\r\n### Error 2\r\n```\r\n[10:01:31] - Unhandled exception: [(<class 'TypeError'>, TypeError(\"can't concat str to bytes\",), <traceback object at 0x7fa0ac56eb48>)]\r\nTraceback (most recent call last):\r\n  File \"src/gevent/greenlet.py\", line 766, in gevent._greenlet.Greenlet.run\r\n  File \"/home/zeronet/zeronet-py3/src/Worker/Worker.py\", line 122, in downloader\r\n    self.manager.doneTask(task)\r\n  File \"/home/zeronet/zeronet-py3/plugins/OptionalManager/OptionalManagerPlugin.py\", line 145, in doneTask\r\n    super(WorkerManagerPlugin, self).doneTask(task)\r\n  File \"/home/zeronet/zeronet-py3/src/Worker/WorkerManager.py\", line 553, in doneTask\r\n    self.site.content_manager.optionalDownloaded(task[\"inner_path\"], task[\"optional_hash_id\"], task[\"size\"])\r\n  File \"/home/zeronet/zeronet-py3/plugins/OptionalManager/OptionalManagerPlugin.py\", line 72, in optionalDownloaded\r\n    return super(ContentManagerPlugin, self).optionalDownloaded(inner_path, hash_id, size, own)\r\n  File \"/home/zeronet/zeronet-py3/plugins/Bigfile/BigfilePlugin.py\", line 364, in optionalDownloaded\r\n    self.site.storage.piecefields[file_info[\"sha512\"]][piece_i] = True\r\n  File \"/home/zeronet/zeronet-py3/plugins/Bigfile/BigfilePiecefield.py\", line 75, in __setitem__\r\n    data = data[:key] + str(int(value)) + data[key + 1:]\r\nTypeError: can't concat str to bytes\r\n```\r\n\r\n[log2.txt](https://github.com/HelloZeroNet/ZeroNet/files/3075890/log2.txt)\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555129058, "modified": 1556040758, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1980", "source_type": "github"}, {"topic_id": 1604067239, "title": "OptionalManager file info - set bytes_downloaded to total file size if a file is fully downloaded", "body": "In `optionalFileList` API command I saw a bug. If the file is 100% downloaded field `bytes_downloaded` contains an incorrect value.\r\n\r\ne.g.\r\n```\r\n   bytes_downloaded: 677380096\r\n   pieces: 646\r\n   pieces_downloaded: 646\r\n   size: 676612177\r\n```\r\n\r\nA number of `bytes_downloaded` is greater than the total size of the file - field `size`, because `bytes_downloaded` is calculated as `pieces * piece_size`.\r\n\r\nI have fixed that problem. If a file is fully downloaded (`pieces` is equal to `pieces_downloaded`), set field `bytes_downloaded` to a value of `size`.\r\n\r\n```\r\n  bytes_downloaded: 676612177\r\n  pieces: 646\r\n  pieces_downloaded: 646\r\n  size: 676612177\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555179424, "modified": 1555312889, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1983", "source_type": "github"}, {"topic_id": 1604067494, "title": "KeyError: 'piece_size' in `fileNeed` command in BigfilePlugin when try to download non-optional files with `|all`", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.7.0 4197\r\n  * Operating system: Fedora 30 x64\r\n  * Web browser: Chromium 75.0.3770.100\r\n  * Tor status: not available\r\n  * Opened port: yes\r\n\r\n### Step 2: Describe the problem:\r\n\r\nI try to use `fileNeed` command with `|all` to download `data/mp4-redditgifs/9450.mp4` file from address`1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h`. I received error `{\"error\": \"KeyError: piece_size\"}`\r\n\r\n#### Steps to reproduce:\r\n\r\nI used fileNeed to try download file, the most important thing is `|all` at the end.\r\n\r\n```\r\n{\"cmd\":\"fileNeed\",\"params\":\"data/mp4-redditgifs/9450.mp4|all\",\"wrapper_nonce\":\"6a0201394d5a983802bed79f159fc037a8a6693603d09a6e227e65c64a170f8a\",\"id\":3}\r\n{\"cmd\": \"response\", \"to\": 3, \"result\": {\"error\": \"KeyError: piece_size\"}, \"id\": 7}\r\n```\r\n\r\n#### Observed Results:\r\n\r\nAs you can see in response I got `\"error\": \"KeyError: piece_size\"`. I enabled traceback:\r\n\r\n```\r\nTraceback (most recent call last):#### Expected Results:\r\n  File \"/home/ko/dev/zeronet/src/Ui/UiWebsocket.py\", line 704, in actionFileNeed\r\n    self.site.needFile(inner_path, priority=6)\r\n  File \"/home/ko/dev/zeronet/plugins/Bigfile/BigfilePlugin.py\", line 757, in needFile\r\n    piece_size = file_info[\"piece_size\"]\r\nKeyError: 'piece_size'\r\n```\r\nThe problem is in `BigfilePlugin.py` in `needFile` function.\r\n\r\nFile `data/mp4-redditgifs/9450.mp4` is not marked as `optional file` and `piece_size` does not exist in `content.json` file, check `1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h/content.json`:\r\n\r\n```\r\n  \"data/mp4-redditgifs/9450.mp4\": {\r\n   \"sha512\": \"36134aa4525d5985b1440d42e2b33580df56a179b4b0c71d0234947008a4fc12\",\r\n   \"size\": 1042259\r\n  },\r\n```\r\n\r\n#### Expected Results:\r\n\r\nIf file is not marked as optional should be downloaded correcty with `|all` at the end.\r\n\r\nI created patch which fixed this problem. If `piece_size` index does not exist in `file_info` - just use default `needFile` function from `SitePlugin`", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1567177098, "modified": 1567181146, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2179", "source_type": "github"}, {"topic_id": 1604067504, "title": "Set custom priority in FileNeed and FileGet command", "body": "When you use `FileNeed` or `FileGet` command the default priority is set to `6`.\r\nYou cannot change that value because is hardcoded.\r\n\r\nNow you can set priority of downloading files manually:\r\n\r\n```\r\nthis.cmd(\"fileNeed\", {\r\n    \"inner_path\": inner_path + \"|all\",\r\n    \"priority\": 10\r\n})\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1567925557, "modified": 1567945459, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2187", "source_type": "github"}, {"topic_id": 1604067520, "title": "TypeError: memoryview: a bytes-like object is required, not 'str' when try to download resource from not activated zite", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.7.1 r4210\r\n  * Operating system: Fedora 30 x64\r\n  * Web browser: Chromium\r\n  * Tor status: available\r\n  * Opened port: no\r\n\r\n### Step 2: Describe the problem:\r\n\r\nI have not activated zite `1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h` yet. I found on another zite link to the movie on GIF Time. I opened link. My browser waits very long time for http response. In the meantime i see error in console.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Please do not activate zite `GIF Time` - `1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h`\r\n  2. Go directly to  http://127.0.0.1:43110/1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h/data/mp4-devopsreactions/3827.mp4\r\n  3. See the console log\r\n\r\n#### Observed Results:\r\n\r\nConsole shows:\r\n```\r\n[21:11:56] - UiWSGIHandler error: TypeError: memoryview: a bytes-like object is required, not 'str' in UiServer.py line 41 > pywsgi.py line 924 > pywsgi.py line 910 > pywsgi.py line 757 > pywsgi.py line 778 > pywsgi.py line 742 > pywsgi.py line 704 > _socket3.py line 457 > _socket3.py line 45\r\n```\r\n\r\n#### Expected Results:\r\n\r\nI should see 403 error because I have not activated zite `1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h` yet.\r\n\r\nI think 403 status code is better then 404 because i do not have access to that resource, I have to activate zite first. I mean go to http://127.0.0.1:43110/1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h\r\n\r\n\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1568564660, "modified": 1568899161, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2197", "source_type": "github"}, {"topic_id": 1604067524, "title": "\"Web interface bind error\" but ZeroNet is still working", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.7.1 r4214\r\n  * Operating system: Fedora 30 x64\r\n  * Web browser: Chromium\r\n  * Tor status: available\r\n  * Opened port: no\r\n\r\n### Step 2: Describe the problem:\r\n\r\nI have binded another service on port `43110`. After I run ZeroNet on the same port in logs I see error but ZeroNet is still working.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. bind service on port `43110` - e.g. `nc -k -l 127.0.0.1 43110`\r\n  2. Make sure ZeroNet use port from step 1 (`ui_port = 43110`)\r\n  2. run ZeroNet\r\n\r\n#### Observed Results:\r\n\r\nConsole shows error `exiting.... ` but ZeroNet client is still working\r\n\r\n```\r\n[15:25:36] Ui.UiServer Web interface bind error, must be running already, exiting.... [Errno 98] Address already in use: ('127.0.0.1', 43110)\r\n```\r\n\r\n#### Expected Results:\r\n\r\nZeroNet should exit when cannot bind on specified port.\r\n\r\n#### fileserver_port\r\n\r\nThe same situation when you try to bind on `fileserver_port` port. ZeroNet is still working.\r\n\r\n```\r\n[15:33:56] ConnServer StreamServer listen error: [Errno 98] Address already in use: ('0.0.0.0', 44444)\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1568716824, "modified": 1568898451, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2199", "source_type": "github"}, {"topic_id": 1604067526, "title": "No error message when configuration file does not exist - param config_file", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.7.1 r4214\r\n  * Operating system: Fedora 30 x64\r\n  * Web browser: Chromium\r\n  * Tor status: available\r\n  * Opened port: no\r\n\r\n### Step 2: Describe the problem:\r\n\r\nI tried to load configuration file (`--config_file` param) but I made typo in the file name. Instead of see error message ZeroNet client created new configuration file.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. run `python3 zeronet.py --config_file file_does_not_exist.conf`\r\n\r\n#### Observed Results:\r\n\r\nZeroNet client created new file `file_does_not_exist.conf` with content\r\n\r\n```\r\n[global]\r\nfileserver_port = 24124\r\n```\r\n\r\n#### Expected Results:\r\n\r\nI should see error message and ZeroNet should exit\r\n```\r\nCannot load configuration file file_does_not_exist.conf. Exiting ...\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1568717499, "modified": 1568724786, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2200", "source_type": "github"}, {"topic_id": 1604067540, "title": "Address blacklist does not work correctly", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.7.1 r4221\r\n  * Operating system: Fedora 30 x64\r\n  * Web browser: Chromium\r\n  * Tor status: available\r\n  * Opened port: no\r\n\r\n### Step 2: Describe the problem:\r\n\r\nI want to block Git Center (`1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t`) Zite permanently even I do not want to download it.\r\nI enabled `ContentFilter` plugin and put address to the `filters.json` file.\r\nWhen I go directly to the Zite `/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t` - everything is OK - Zite is blocked.\r\nWhen I use `Get All Sites` (`/1Ake2MmwxDgst5M8WqoyNLjDQj2pcPj5zL/`) to add address which is already on blacklist - (Zite uses `mergerSiteAdd` command) -  Zite is not blocked, is normally downloaded.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Create file `data/filters.json`\r\n  ```\r\n{\r\n   \"siteblocks\":{\r\n      \"1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t\":{\r\n         \"date_added\":1569622557,\r\n         \"reason\":\"Test only\"\r\n      }\r\n   }\r\n}  \r\n  ```\r\n  2. Run ZeroNet\r\n  3. Go to `http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t`\r\n  3.1. Go to `http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/index/`\r\n  4. On both sites you should see `Site Blocked` message - correct\r\n  5. Go to `Get All Sites `http://127.0.0.1:43110/1Ake2MmwxDgst5M8WqoyNLjDQj2pcPj5zL/`\r\n  6. Put `1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t`\r\n  7. Press `Step 1` and `Step 2` - you should see `Added 1 new site`\r\n  8. Go to `http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/`\r\n  9. You see `Git Center` - Zite is on blacklist but is working\r\n  \r\n#### Observed Results:\r\n\r\nTwo things:\r\n1. You can get access to the Zite even you added to the blacklist\r\n2. API command `mergerSiteAdd` does not support blacklist\r\n\r\n#### Expected Results:\r\n\r\nWhen I blacklist Zite I should see `Site Blocked` message even website has been downloaded.\r\nWhen I blacklist Zite I should not be possible to download Zite - remove from blacklist first\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1569614615, "modified": 1569675658, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2210", "source_type": "github"}, {"topic_id": 1604067824, "title": "Fixed \"LookupError: 'hex' is not a text encoding\" on /StatsBootstrapper page", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: rev4458\r\n  * Operating system: CentOS 8\r\n  * Web browser: Chrome\r\n  * Tor status: available\r\n  * Opened port: yes\r\n  * Special configuration: \r\n\r\n### Step 2: Describe the problem:\r\n\r\nWhen enable plugin `Bootstrapper` and visit URl `http://127.0.0.1:43110/StatsBootstrapper` to show stats, page is blank and in log file i see error\r\n\r\n```\r\n[2020-02-26 21:59:31,593] ERROR    - UiWSGIHandler error: LookupError: 'hex' is not a text encoding; use codecs.encode() to handle arbitrary codecs in core/src/Ui/UiServer.py line 61 > ... > disabled-Bootstrapper/BootstrapperPlugin.py line 153\r\n[2020-02-26 21:59:31,594] DEBUG    Ui.UiServer 127.0.0.1 - - [2020-02-26 21:59:31] \"GET /StatsBootstrapper HTTP/1.1\" 200 473 0.003000\r\n```\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Enable `Bootstrapper` plugin\r\n  2. Go to `http://127.0.0.1:43110/StatsBootstrapper`\r\n\r\n#### Observed Results:\r\n\r\nErrors in log file:\r\n```\r\nLookupError: 'hex' is not a text encoding; use codecs.encode() to handle arbitrary codecs in core/src/Ui/UiServer.py line 61 > ... > disabled-Bootstrapper/BootstrapperPlugin.py line 153\r\n```\r\n\r\n#### How to fix?\r\n\r\nI created a patch.\r\n\r\nAlso fixed below error:\r\n```\r\n[22:55:58] - UiWSGIHandler error: KeyError: 'ip4' in UiServer.py line 61 > pywsgi.py line 924 > 908 > helper.py line 345 > disabled-Bootstrapper/BootstrapperPlugin.py line 157\r\n[22:55:58] Ui.UiServer Error 500: UiWSGIHandler error: KeyError: ip4\r\n```\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1582740724, "modified": 1582750116, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2442", "source_type": "github"}, {"topic_id": 1604067830, "title": "Polish translation", "body": "I have added polish translation to `Trayicon` and `UiConfig` plugin. I also added some missing translations.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1582838856, "modified": 1583331257, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2449", "source_type": "github"}, {"topic_id": 1604067834, "title": "Fixed `Cache-Control` for .js and .css files - 10 minutes cache", "body": "Hello,\r\n\r\nWhen sending request `GET http://127.0.0.1:43110/uimedia/all.css?rev=4458` the response contains `Cache-Control: no-cache, no-store, private, must-revalidate, max-age=0`.\r\nIt means `.css` and `.js` files are not cached by the browser\r\n\r\nI fixed that problem, now receive: `Cache-Control: public, max-age=600`\r\n\r\n* * *\r\n\r\nI change the order of code, check the `content-type` (`application/javascript` or `text/css`), at the end add charset `utf-8.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1582923458, "modified": 1583159123, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2453", "source_type": "github"}]}