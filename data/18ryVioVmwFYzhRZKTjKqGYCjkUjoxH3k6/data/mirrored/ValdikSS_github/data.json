{"cert_user_id": "ValdikSS@github", "next_comment_id": 45, "comment": {"1604064856_mirrored_n3r0-ch_github": [{"comment_id": 1, "body": "Note that implementing TXT query only on the main domain is not a very good idea since that prevents using CNAME records.\r\n\r\nIPFS introduces `_dnslink` prefix and queries TXT record like this:\r\n`get TXT of _dnslink.example.com`\r\n`if that failed, get TXT of example.com`\r\n\r\nThat way you can setup CNAME on example.com and additional TXT record on _dnslink.example.com.", "added": 1566828195, "modified": 1566828195, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-524941765", "source_type": "github"}, {"comment_id": 2, "body": "@filips123 Yes, should be no problems with subdomains.", "added": 1566835976, "modified": 1566835976, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-524991237", "source_type": "github"}, {"comment_id": 3, "body": "@filips123 Awesome! Please also add reverse-proxying feature to the plugin, i.e. the website should not only be accessible using `127.0.0.1:43110/example.com`, but also when the ZeroNet port receives HTTP request with `Host: example.com`.", "added": 1569169588, "modified": 1569169588, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-533910280", "source_type": "github"}, {"comment_id": 4, "body": "@imachug, yes, I'm thinking about public ZeroNet gateways on the internet, but it could also be used for transparent access in the local network.\r\n\r\nSay, you want to create a blog, and you have a domain name. You clone ZeroBlog, setup CNAME to public gateway domain name and dnslink to your blog addresss and \u2014 boom \u2014 you have a blog, reachable from the internet, set up in 5 minutes.", "added": 1569234599, "modified": 1569234638, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534099167", "source_type": "github"}, {"comment_id": 5, "body": "You can perform DNS queries over TCP, over Tor.\r\nYou can also use DNS over HTTPS or DNS over TLS.", "added": 1569334405, "modified": 1569334405, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534657009", "source_type": "github"}, {"comment_id": 6, "body": "http://www.dnspython.org/docs/1.16.0/dns.query-module.html#tcp\r\nThis?", "added": 1569334644, "modified": 1569334644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534658664", "source_type": "github"}, {"comment_id": 7, "body": "http://www.dnspython.org/docs/1.16.0/dns.resolver-module.html#query\r\nThis. `tcp=True`.", "added": 1569334823, "modified": 1569334916, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534659923", "source_type": "github"}, {"comment_id": 8, "body": "@imachug, isn't socket.socket already getting monkey-patched by ZeroNet?", "added": 1569334941, "modified": 1569334941, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534660766", "source_type": "github"}, {"comment_id": 9, "body": "The problem is in non-blocking socket code, but I'm confused by the fact that it occurs in gevent.\r\nMy assumption is that dnspython switches socket into non-blocking mode, which gevent can't handle?\r\n\r\nNon-blocking sockets should be handled in a slightly different way, using [selectors](https://docs.python.org/3/library/selectors.html). ZeroNet uses gevent, a \"green threads\" library which abstracts threads allowing software to be written in an old, blocking fashion, but in fact it doesn't block as a regular non-gevent software.\r\n\r\nIf it wasn't in gevent, it would be obvious that you need to use selectors on the socket or not switch it into non-blocking socket, but since the error is inside gevent, I'm not sure what should be done to fix it without checking your code first, or at least a short example which I can debug.", "added": 1569412809, "modified": 1569412809, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535064908", "source_type": "github"}, {"comment_id": 10, "body": ">The recvfrom function is used for UDP sockets, so if you get error related to that, then it means it tries to use UDP sockets.\r\n\r\nrecvfrom could also be used for TCP, which is probably the case here.", "added": 1569413740, "modified": 1569413740, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535071969", "source_type": "github"}, {"comment_id": 11, "body": "Is that a windows-only issue? Can't reproduce it on Linux.", "added": 1569421164, "modified": 1569421164, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535123870", "source_type": "github"}, {"comment_id": 12, "body": "That's unrelated, but you can't capture it on Linux either if you unprivileged.", "added": 1569421495, "modified": 1569421495, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535126065", "source_type": "github"}, {"comment_id": 13, "body": "If you want to use third-party external resolvers by default in the first place (why by the way?), maybe it's better to use DoH then?", "added": 1569421941, "modified": 1569421952, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535129038", "source_type": "github"}, {"comment_id": 14, "body": "Here in Russia many ISPs perform DNS transparent proxying to their own DNS resolvers for censorship reasons. Sending DNS request to any IP address, like one which does not run DNS recursor or even to unroutable IP address results in a DNS response.\r\n\r\nI mean, it's not *sane* to use third-party *unencrypted* DNS resolver by default, IMO. It either should be system default resolver or DoH/DoT.", "added": 1569422453, "modified": 1569422453, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535132269", "source_type": "github"}, {"comment_id": 15, "body": "I'd say:\r\n\r\n* Use system default resolver in No Tor/Tor Available mode by default\r\n* Use DoH in Tor Always mode, always\r\n\r\nWhat do you think?", "added": 1569422560, "modified": 1569422653, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535132900", "source_type": "github"}, {"comment_id": 16, "body": "Also to note, dnspython sometimes can't detect system default resolver and does not work properly. I'm not sure which platforms are affected (Windows I suppose), but in my [blockcheck](https://github.com/ValdikSS/blockcheck) software I see reports of broken system resolver once in a while.", "added": 1569422845, "modified": 1569422845, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535134694", "source_type": "github"}], "1604065235_mirrored_OliverCole_github": [{"comment_id": 17, "body": "@HelloZeroNet, I think it's a useful feature even if it may contradict with your main ZeroNet conception.\r\n\r\nFor example, I'd like to have a blog in ZeroNet which could be accessed from the internet. The easiest and most sane method to implement this is to allow ZeroNet to handle HTTP `Host` header and perform DNS query for a TXT record which points to zite public key hash (zite address). This feature allows domain owner to point DNS records to different public ZeroNet gateways or to setup own gateway for a limited number of websites without a hassle.\r\n\r\nTake a look how it's implemented in IPFS. IPFS handles HTTP `Host` header, performs DNS TXT record lookup to `_dnslink.domain.com` which contains TXT record `dnslink=/ipfs/SoMeRanDoMFilEHasH` and opens resolved address from the TXT record.\r\nThis feature brings hosting-less websites with Cloudflare's service https://cloudflare-ipfs.com/ or any other public gateway.\r\n\r\nAs DNS hijacking brings more and more attention and major public DNS providers has implemented DNS over TLS/over HTTPS, I believe ZeroNet would benefit from this feature.", "added": 1541152979, "modified": 1541169803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/391#issuecomment-435372284", "source_type": "github"}], "1604066010_mirrored_ValdikSS_github": [{"comment_id": 18, "body": ">If applying as an individual or team of individuals, all team members must be U.S. permanent residents (i.e. citizens or green card holders)\r\n>If applying as an organization, the team lead can be anyone who is an employee of that organization and 18 years of age (including visa holders), provided that the organization is incorporated in and maintains a primary place of business in the U.S.\r\n\r\nThey also accept solutions without Internet access.", "added": 1499850192, "modified": 1499850192, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1015#issuecomment-314748431", "source_type": "github"}], "1604066269_mirrored_ValdikSS_github": [{"comment_id": 19, "body": "What was the result? Did you get a reply?", "added": 1516535421, "modified": 1516535421, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1220#issuecomment-359253840", "source_type": "github"}, {"comment_id": 20, "body": "@HelloZeroNet, here's another distributed networks support initiative, from Samsung:\r\nhttps://samsungnext.com/whats-next/introducing-the-samsung-next-stack-zero-grant/", "added": 1549242069, "modified": 1549242069, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1220#issuecomment-460125000", "source_type": "github"}], "1604066430_mirrored_ValdikSS_github": [{"comment_id": 21, "body": "Do I understand this correctly that this is done to prevent deanonymization of Zeronet users from the usual internet websites? If Zeronet would serve the content when `Accept` header is completely missing, would that bring additional issues?", "added": 1521463707, "modified": 1521463707, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1346#issuecomment-374260531", "source_type": "github"}], "1604067135_mirrored_rllola_github": [{"comment_id": 22, "body": "ZeroNet uses several external port check websites. Maybe one of them is misbehaving.\r\nhttps://github.com/HelloZeroNet/ZeroNet/blob/fa99f3dbbeb0ad5f9fb643c914f4be82547e4d06/src/Peer/PeerPortchecker.py", "added": 1552987475, "modified": 1552987475, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1890#issuecomment-474340160", "source_type": "github"}], "1604067192_mirrored_blurHY_github": [{"comment_id": 23, "body": "@HelloZeroNet this may help a bit\r\nhttps://github.com/HelloZeroNet/ZeroNet/pull/1928\r\nhttps://github.com/HelloZeroNet/ZeroNet/pull/1927", "added": 1552998317, "modified": 1552998317, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1914#issuecomment-474422421", "source_type": "github"}, {"comment_id": 24, "body": "@blurHY, @emacsenli, try Rev3860.", "added": 1553671655, "modified": 1553671655, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1914#issuecomment-477084129", "source_type": "github"}, {"comment_id": 25, "body": "Note that all current IP addresses of ZeroNet peers may be blocked in China, and it's better to test new obfuscation changes on new peers. For example, you can set up ZeroNet on a VPS, with bootstrap plugin, and test if it's connectable from China.", "added": 1553671752, "modified": 1553671752, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1914#issuecomment-477084880", "source_type": "github"}, {"comment_id": 26, "body": "@HelloZeroNet at least two of my IP addresses no longer respond to ICMP (ping) accorting to ping.pe.", "added": 1553675227, "modified": 1553675227, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1914#issuecomment-477107214", "source_type": "github"}, {"comment_id": 27, "body": "So, did this help? Does ZeroNet work in China?", "added": 1554234351, "modified": 1554234351, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1914#issuecomment-479239444", "source_type": "github"}], "1604067208_mirrored_slrslr_github": [{"comment_id": 28, "body": "Do you have your ZeroNet folder on the filesystem path with non-latin characters?", "added": 1552988307, "modified": 1552988307, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1924#issuecomment-474344330", "source_type": "github"}], "1604067168_mirrored_ValdikSS_github": [{"comment_id": 29, "body": "@HelloZeroNet fixed it. The problem was in `prompt = no`.", "added": 1553625015, "modified": 1553625015, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1928#issuecomment-476860464", "source_type": "github"}], "1604067196_mirrored_ValdikSS_github": [{"comment_id": 30, "body": "@HelloZeroNet, why? mimetypes is a small module, it's included in standard Python library and already bundled&used in ZeroNet.", "added": 1554313849, "modified": 1554313849, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1950#issuecomment-479653771", "source_type": "github"}, {"comment_id": 31, "body": "@HelloZeroNet Are you aware that mimetypes module just loads my list and parses it, without using system mime types? Are you still want to replace it with a custom one? I don't understand the reason.", "added": 1562153606, "modified": 1562153606, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1950#issuecomment-508119576", "source_type": "github"}, {"comment_id": 32, "body": "Unfortunately I don't have much spare time recently.\r\nI propose the following: use this modification for Python 2 version, and for Python 3 version I (or somebody else) will make a proper mime types implementation.", "added": 1562260949, "modified": 1562260949, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1950#issuecomment-508570086", "source_type": "github"}], "1604067324_mirrored_tangdou1_github": [{"comment_id": 33, "body": "While kcp/kcptun is an interesting idea and a great project, it has only C and Go implementations which IMO is another unnecessary binary dependency.", "added": 1555968519, "modified": 1555968519, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1996#issuecomment-485598181", "source_type": "github"}], "1604067300_mirrored_asddsaz_github": [{"comment_id": 34, "body": "Take a look at https://github.com/HelloZeroNet/ZeroNet/pull/602\r\nThere's ZeroNet over I2P implementation. I've pinged str4d on IRC2P to check it.", "added": 1569002559, "modified": 1569002559, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2037#issuecomment-533708054", "source_type": "github"}], "1604067315_mirrored_Corsairs_github": [{"comment_id": 35, "body": "You're misunderstanding license text.\r\n\r\nThis license is GNU GPLv2, a pretty common license for software. Linux kernel uses it.\r\n\"but changing it is not allowed\" refers to the license text, not to the source code of the software. You're not allowed to change the license text, but you allowed to change the source code.\r\nYou're indeed obligated to provide source code of ZeroNet and changes to the source code if you do any modifications, but it is allowed to sell both ZeroNet and your own software which uses ZeroNet.\r\nYou can use ZeroNet in your non-GPL software and you don't need to disclose code of your software as long as you use it via console API or browser HTML API and do not directly integrate it into your own (python) application.\r\n\r\n>I believe that we need a license where the zeronet allows everyone to change the license is the main thing that should symbolize the zeronet.\r\n\r\nWhat does that mean? Why you want to change the license of any software, and how do you imagine that? MIT license of Bitcoin (the one you linked) does not allow that either (it allows sublicensing though, but that's different matter).\r\n\r\nI recommend you to find out more about software licenses. There are a lot of explanations on the internet if you don't understand exact text of the license.", "added": 1562261780, "modified": 1562261780, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2048#issuecomment-508572300", "source_type": "github"}], "1604067347_mirrored_mx5kevin_github": [{"comment_id": 36, "body": "Try https://meet.jit.si/. It's not really a VoIP as in phone, it's a conference room, but still.\r\nI think it could be installed into ZeroNet (but it will use Internet and browser's WebRTC anyway), and maybe even fully ported to ZeroNet using PeerMessage plugin.", "added": 1569006279, "modified": 1569006279, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2070#issuecomment-533725313", "source_type": "github"}], "1604067364_mirrored_Zero-Ware_github": [{"comment_id": 37, "body": "Please post more information. You repository only has a single image, not even a screenshot. How can we understand what's that, how does it work and how to use it?", "added": 1569006368, "modified": 1569006368, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2088#issuecomment-533725674", "source_type": "github"}], "1604067474_mirrored_ValdikSS_github": [{"comment_id": 38, "body": "@imachug yes it does, with minor modification (see https://github.com/HelloZeroNet/ZeroNet/pull/2166#issuecomment-522774613)", "added": 1566242160, "modified": 1566242160, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2165#issuecomment-522774866", "source_type": "github"}], "1604067539_mirrored_imachug_github": [{"comment_id": 39, "body": "I believe `blob:` should not be in quotes.\r\n\r\n`headers[\"Content-Security-Policy\"] = \"default-src 'none'; script-src 'nonce-{0}'; img-src 'self' blob:; style-src 'self' 'unsafe-inline' blob:; connect-src *; frame-src 'self' blob:\".format(script_nonce)`\r\n\r\nThat way it works in Firefox and Chrome.\r\nThis modification should be reviewed by a web security specialist since it may introduce unwanted functionality or a security vulnerability.", "added": 1566242107, "modified": 1566242107, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2166#issuecomment-522774613", "source_type": "github"}], "1604067531_mirrored_krixano_github": [{"comment_id": 40, "body": "Take a look how domain names are implemented in I2P. Basically, it's very close to @krixano idea.\r\nThere aren't any centralized DNS per se; each I2P router maintains its own \"hosts file\", with the functionality to merge hosts files of other users, by just downloading them over HTTP from a web server.\r\n\r\nThere are \"domain registrars\" which basically are websites which publish hosts files for other users. You can register your domain on such website and all users which use hosts file from this registrar would be able to access it.\r\n\r\nDomain registrars are not the only way to add domains into your address book. The URL may contain full destination information for the domain, which the router will parse and add automatically (or notify user that this domain is already added with another destination, etc). This is called \"addresshelper link\", which looks like this:\r\n`http://zeronet.i2p/?i2paddresshelper=75002LwLP5cMwjkKt1DmlXF9fXflqKnCxhS01VU~CUcHbNPpwQmuLTAKVnm7HS2tGlRjn6SVQv-uQT4A2P2YAWzBcMHtH2AP9M2D6l-j32kgJ7Ai2jL2TV34o0XVCzUsxGt-6e8Rhub0z96S-25Jwci-A1ci~JAJoXpALoMXV0JYY7od0KVWDVczCrsA3eaCOjLAj8Fz~uMRD~FDA04s8PrSnjWdwsRmGqXGXlYVVcFLWIeOedzq2MVKIsSllo3atl7CON47pWjPde~iQGGjpy3KjpjzLWdPdTWj7k807J5zPa8ErF-zHRM-k8lfcxAlWrigfnfWYDVuIiyS-DKvL5TTkDs4qdKN8d8DvkgYG1q62Zr5~w-Du0g0ZmQwVF1~IyjsL5rk-gLS23fv7zvsEevVruZUW5VVQ2g3~2bJX9yFPHRpFYfokaW9NJW3PgaX5W1Hj1KycVM-Me2RLQ1mxnnLKD1jSc0J9FABjXrPYxhkdOjExMo~vhC3dxJs3MEMBQAEAAcAAA==`\r\n\r\nOh yeah, there's ZeroNet gateway on I2P I'm running since Oct. 15, 2017. Did I mention that before?\r\n\r\nThere are also \"jump servers\", a special hosts (webservers) which just redirect you to the addresshelper link for the domain they know. Like:\r\n```\r\njumpserver.i2p?q=newdomain.i2p\r\nHTTP 301 newdomain.i2p?addresshelper=\u2026\r\n```\r\nI2P router can have multiple jump services defined, they would be used if there's no destination for requested I2P domain.\r\n\r\nMore information here: https://geti2p.net/en/docs/naming\r\n\r\n\r\n\r\n![Screenshot_20190920_233434-fs8](https://user-images.githubusercontent.com/3054729/65357276-44dd2d80-dbff-11e9-8788-2c883f2ee6b1.png)", "added": 1569000082, "modified": 1569000906, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-533696185", "source_type": "github"}, {"comment_id": 41, "body": "Also please restrict this feature to unique, not registered domain zones. `Name.YO` used to be called `Name.IT` and has been renamed by my request. Here are my arguments:\r\n\r\n>`.bit` domains could be used in ZeroNet because they __may__ contain a special record with ZeroNet address inside the domain information, just like with regular domains. They __may__ contain real IPv4/IPv6 addresses, MX records etc as well. `.bit` domains are consistent: once you registered `.bit` domain, you control it in both clearnet and in ZeroNet (since ZeroNet does not \"implement\" `.bit` domains but sync it with a real NameCoin database). In your plugin, the owner of `name.it` DNS name can't control `name.it` inside ZeroNet with your plugin.\r\n>\r\n>Imagine if ZeroNet could query such records for a real DNS domains, so you can open e.g. `127.0.0.1:43110/zeronet.io/` and it would open. ZeroNet queries real `zeronet.io` domain over DNS, gets a TXT record which contains ZeroNet address and opens the website.\r\nBy using real DNS zones, your plugin creates conflict with real existing DNS records and prevents implementing this functionality in the future.", "added": 1569001222, "modified": 1569001222, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-533701524", "source_type": "github"}], "1604067555_mirrored_filips123_github": [{"comment_id": 42, "body": "I haven't tried to run the plugin yet, only checked the code.\r\n\r\n1. The plugin uses third-party DoH resolvers by default. I don't think this is a good idea. In my opinion, it should use system resolver by default unless configured otherwise or Tor always mode enabled.\r\n2. `isDomain` regex doesn't allow international domain names. Or are they converted to punycode?", "added": 1571884527, "modified": 1571884527, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-545752469", "source_type": "github"}, {"comment_id": 43, "body": "@filips123, I'll test the plugin today to check how good does it work.", "added": 1572343788, "modified": 1572343788, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-547410888", "source_type": "github"}], "1604067626_mirrored_filips123_github": [{"comment_id": 44, "body": "@HelloZeroNet, I've contacted you several months ago about proper ZeroNet packaging. I'm experienced in Linux packaging, especially Python packaging, and willing to make .deb (Debian/Ubuntu), .rpm (Fedora), snap and AppImage (similar to current .zip archive) packages and maintain them, including Tor packaging.\r\nI also proficient in Linux security and can write proper systemd service with isolation, AppArmor and SELinux rules.\r\nBut before that, I'd like to discuss all the technical nuances because it will introduce some restrictions on ZeroNet interactive functionality (like opening zite folder) and update functionality.\r\nWhere should I do that? I honestly don't feel that Github issue is a proper place for discussion, but if you don't mind, I'm OK with that.", "added": 1572897416, "modified": 1572897433, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-549585462", "source_type": "github"}]}, "next_topic_id": 9, "topic": [{"topic_id": 1604066010, "title": "Apply for Mozilla Wireless Innovation for a Networked Society (WINS) Challenge", "body": "Mozilla and the National Science Foundation are offering a $2 million prize for big ideas that decentralize the web.\r\n\r\nhttps://blog.mozilla.org/blog/2017/06/21/2-million-prize-decentralize-web-apply-today/\r\nhttps://wirelesschallenge.mozilla.org/\r\n\r\nI think ZeroNet and it's ideas can apply for **Challenge 2: Smart Community Networks Challenge**\r\n\r\n>How can we leverage existing infrastructure to provide robust wireless Internet connectivity in communities that need greater access?\r\n>\r\n>Ten percent of all Americans \u2014 34 million people \u2014 lack access to quality Internet connectivity. The Smart Community Networks Challenge aims to close this access gap by enhancing wireless connectivity in areas where Internet access is a challenge, whether due to geographic, financial or other factors. With a total of $1M in prize money, the Smart Community Networks Challenge seeks wireless solutions that leverage existing physical infrastructure to provide robust access to the whole Internet in underserved areas.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1499806214, "modified": 1499850193, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1015", "source_type": "github"}, {"topic_id": 1604066269, "title": "Apply for funding to Open Technology Fund", "body": "I think Zeronet conforms with the Open Technology Fund's \"Internet Freedom Fund\" and has a good chance to receive funding. \r\nhttps://www.opentech.fund/requests/internet-freedom-fund\r\nThe deadline is 1st of January.\r\n\r\nWhat do you think about that, @HelloZeroNet?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1514112620, "modified": 1549288464, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1220", "source_type": "github"}, {"topic_id": 1604066430, "title": "Zeronet UI does not work without HTTP Accept header", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.6.2\r\n  * Operating system: Linux\r\n  * Web browser: Firefox\r\n  * Tor status: enabled\r\n  * Opened port: yes\r\n  * Special configuration: I2P Tunnel\r\n\r\n### Step 2: Describe the problem:\r\n\r\nZeronet Ui expects HTTP `Accept` header to contain at least `text/html`. I2P tunnels remove `Accept` header from the request, which does not allow to access Zeronet due to the following check:\r\nhttps://github.com/HelloZeroNet/ZeroNet/blob/master/src/Ui/UiRequest.py#L283\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Send HTTP request without `Accept` HTTP header to Zeronet UI address\r\n\r\n#### Observed Results:\r\n\r\nZeronet returns HTTP 403 `Invalid Accept header to load wrapper` error.\r\n\r\n#### Expected Results:\r\n\r\nZeronet ignores absence of HTTP `Accept` header and continue to work.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1521455026, "modified": 1521471416, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1346", "source_type": "github"}, {"topic_id": 1604067167, "title": "Update ciphersuites", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1552998264, "modified": 1553519744, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1927", "source_type": "github"}, {"topic_id": 1604067168, "title": "Less obvious fake TLS certificate generation", "body": "This patch adds the following:\r\n * Pre-defined CA certificate subjects\r\n * Pre-defined popular website domain names\r\n * Fake certificate generation for pre-defined popular website domain signed by fake CA with pre-defined subject\r\n\r\nIt should look less suspicious than \"example.com\" certificates.\r\nNOTE: tested only on Linux, with OpenSSL 1.1.1b.\r\n\r\nExample:\r\n```\r\nCertificate:\r\n    Data:\r\n        Version: 3 (0x2)\r\n        Serial Number:\r\n            17:ad:55:4c:62:17:ec:40:4c:3a:f5:6b:d3:aa:3c:8d:2c:66:cb:1e\r\n        Signature Algorithm: sha256WithRSAEncryption\r\n        Issuer: C = US, O = Amazon, OU = Server CA 1B, CN = Amazon\r\n        Validity\r\n            Not Before: Mar 19 15:20:14 2019 GMT\r\n            Not After : Mar 18 15:20:14 2021 GMT\r\n        Subject: CN = bing.com\r\n        Subject Public Key Info:\r\n            Public Key Algorithm: rsaEncryption\r\n                RSA Public-Key: (2048 bit)\r\n                Modulus:\r\n                    00:b8:83:71:6a:d0:51:20:3c:68:9e:df:92:82:12:\r\n                    2f:0c:72:bc:b9:d3:35:27:5d:d8:12:e3:4f:41:d6:\r\n                    eb:74:56:ab:1b:5f:89:c1:95:fc:9f:2c:4e:1f:f8:\r\n                    8e:4d:2d:0c:7a:6d:22:79:d0:d1:93:cf:1a:75:12:\r\n                    40:df:c3:83:d4:0c:c7:67:4a:5e:86:9e:2c:b7:b7:\r\n                    8a:d7:06:98:4e:69:4d:56:50:05:a3:af:ea:7d:b9:\r\n                    12:d8:c3:70:c0:de:6b:cb:98:bc:9f:e7:09:89:5c:\r\n                    31:4b:bf:14:81:4d:10:e6:f4:ab:ca:8d:f3:81:71:\r\n                    2d:75:97:6d:b3:57:7c:dd:bb:0a:e7:5b:df:6a:c8:\r\n                    9e:df:4e:c8:4b:9f:56:37:a2:30:e3:5e:80:76:88:\r\n                    9c:2f:db:4b:84:ca:b2:c0:cd:4e:ff:9a:81:90:a0:\r\n                    9f:8b:6f:39:d7:2a:93:65:dc:a5:e7:42:9a:3e:b8:\r\n                    73:a1:f1:6b:31:ea:d6:b9:26:b8:66:d4:dd:b4:4e:\r\n                    e5:6c:1f:99:24:28:05:d9:f6:8d:47:d9:0d:b8:f9:\r\n                    a6:c2:6a:e4:10:94:eb:ca:e7:e0:7d:7c:c3:66:30:\r\n                    e8:82:64:3b:23:0f:4c:9e:cb:84:ff:9a:94:b8:15:\r\n                    34:ae:06:f5:72:77:d6:40:07:7f:3a:09:c7:4b:ec:\r\n                    3e:2d\r\n                Exponent: 65537 (0x10001)\r\n        X509v3 extensions:\r\n            X509v3 Subject Key Identifier: \r\n                68:57:03:F0:26:78:CA:F4:76:88:2F:30:B1:62:44:54:F5:62:86:A6\r\n            X509v3 Authority Key Identifier: \r\n                keyid:DA:B6:2F:E7:8D:C7:AF:C3:26:F3:87:9C:35:46:DA:0F:E7:62:A9:81\r\n\r\n            X509v3 Basic Constraints: \r\n                CA:FALSE\r\n            X509v3 Key Usage: \r\n                Digital Signature, Key Encipherment\r\n            X509v3 Extended Key Usage: \r\n                TLS Web Client Authentication, TLS Web Server Authentication\r\n            X509v3 Subject Alternative Name: \r\n                DNS:bing.com, DNS:www.bing.com\r\n    Signature Algorithm: sha256WithRSAEncryption\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1552998285, "modified": 1553640204, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1928", "source_type": "github"}, {"topic_id": 1604067196, "title": "Include mime.types file and use it for WebUI Content-Types", "body": "Python 2.7 on Windows loads known MIME types from registry, which is\r\nnot always up-to-date. For example, it causes issue with webp images:\r\nhttp://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1554160326_131Seivv6aH8vnohPmYPcPwPfZ1a5ubMMs\r\n\r\nThe mime.types file has been merged from Fedora's /etc/mime.types and\r\nhttps://s-randomfiles.s3.amazonaws.com/mime/allMimeTypes.txt", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554225319, "modified": 1562260950, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1950", "source_type": "github"}, {"topic_id": 1604067253, "title": "Always translate html files to avoid compatibility problems with brackets in url", "body": "\u2026kets in url\r\n\r\nBackport of commit 90fee9788dc7e0e5465dc035c61b1c8417f674f0 from py3 branch", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1555874297, "modified": 1555966945, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1995", "source_type": "github"}, {"topic_id": 1604067474, "title": "Add blob: scheme to Content-Security-Policy", "body": "### Step 1: Please describe your environment\r\n\r\n  * ZeroNet version: 0.7.0 (4188)\r\n  * Operating system: Linux\r\n  * Web browser: Firefox 68.0\r\n  * Tor status: enabled\r\n  * Opened port: yes\r\n  * Special configuration: none\r\n\r\n### Step 2: Describe the problem:\r\n\r\nZeroNet includes the following `Content-Security-Policy` HTTP header:\r\n\r\n`Content-Security-Policy: default-src 'none'; script-src 'nonce-xxxxxx'; img-src 'self'; style-src 'self' 'unsafe-inline'; connect-src *; frame-src 'self'`\r\n\r\n`'self'` value allows `blob:` scheme to be used on Chrome but not on Firefox.\r\nI'd like to ask adding `blob:` scheme where `'self'` is currently used.\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Open http://127.0.0.1:43110/1MVyVRFfQ8nSR3dMxisz1pZBwrd8jJRezy/ (TiddlyWiki)\r\n  2. Press drop-down menu on the tiddler \u2192 export tiddler \u2192 CSV\r\n\r\n#### Observed Results:\r\n\r\nThe tiddler export functionality, which uses `blob:` scheme, succeeds on Chrome but not on Firefox.\r\n\r\n#### Expected Results:\r\n\r\n`blob:` scheme could be used on both Chrome and Firefox.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566234305, "modified": 1566286922, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2165", "source_type": "github"}]}