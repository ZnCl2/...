{"cert_user_id": "sonatagreen@github", "next_comment_id": 6, "comment": {"1604065586_mirrored_amiyatulu_github": [{"comment_id": 1, "body": "There's [a JS implementation](https://github.com/ipfs/js-ipfs) of IPFS.", "added": 1489428748, "modified": 1489428748, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/676#issuecomment-286245317", "source_type": "github"}], "1604065812_mirrored_sonatagreen_github": [{"comment_id": 2, "body": "As I understand it, it's currently possible to create a site that _doesn't_ update, by refraining from making use of the update feature; but it's not currently possible to create a site that _can't_ update.\r\n\r\nA site that _can_ update, even if it _doesn't_, provides no verifiable guarantee that it _won't_.\r\n\r\n---\r\n\r\nSites can contain Javascript; therefore, sites are computer programs. Zeronet's sandboxing security model limits the damage that malicious sites can do, but users who choose to run a particular program benefit from being able to rely on it doing what they expect.\r\n\r\nSecurity requires code review.\r\n\r\nFor any site that even in principle could possibly ever update, each user must either:\r\n\r\n1. review the code every time she visits; or\r\n2. pause the site so as to block future updates; or\r\n3. accept on faith that the site owner will not push a malicious (or careless) update.\r\n\r\nOnly option 2 is compatible with reasonable security practices. Even then, it's not possible to write a hyperlink to a particular version of a site, so even if there's widespread consensus that site X is not evil as of date Y, I can't readily download the date-Y version of X.\r\n\r\n---\r\n\r\nZeronet is based on Bittorrent.\r\n\r\nImagine a version of Bittorrent where, even after you finished downloading a file, by default the original uploader could _push a different version_ so that _the copy on your machine was automatically replaced without notifying you_.\r\n\r\nImagine if, even if you turned off automatic updates for a particular file, there was no way for a tracker website to publish a .torrent file referring to a specific version, so that no matter how well-vetted a particular .torrent file was, it would always be possible for the original uploader to decide unilaterally that any newcomers downloading the file for the first time should get an altered version of the file instead of the well-vetted original.\r\n\r\nWould you want to use such a thing?\r\n\r\n---\r\n\r\nThere are many cases where it's good for updating a site to be possible. There are also cases where it's _very bad_ for it to be possible to update a site _even if that possibility is never exercised_.\r\n\r\nThe site owner being able to refrain from updating the site is _very different_ from ordinary users being able to be sure that the site can never be changed.", "added": 1489509244, "modified": 1489509244, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859#issuecomment-286535039", "source_type": "github"}, {"comment_id": 3, "body": "> Do you mean that use zeronet is more risky that to use the conventional client -> server website?\r\n\r\nNo, Zeronet is superior to the traditional model even without the feature I'm requesting. But it could still be better.\r\n\r\n----\r\n\r\n> what about if zeronet has a config to deactivate completely any client side code like javascript as an option?\r\n\r\nI don't think that is necessary or particularly helpful. Between the existing sandboxing and the option to simply not use a given site, I don't think that would provide anything we don't already have.\r\n\r\nWhat I want is to be able to use a site, including its scripting, but to specify a particular version of it.\r\n\r\n----\r\n\r\n> You might have a misconception about IPFS. You can have static javascript files in IPFS just fine.\r\n\r\nI don't see how static javascript is relevant to \r\n\r\n>> A static zite would differ from e.g. an IPFS site in that it could access the ZeroFrame API, and therefore act as a client for a networked protocol, whereas an IPFS site is purely read-only. Through the API, static zites could have mutable state; only the code would be immutable, not the data.\r\n\r\n.\r\n\r\n----\r\n\r\n> What features of the ZeroNet API would you want if the files themselves are meant to be \"immutable\"?\r\n\r\nI'm not sure what you mean by the \"ZeroNet API\", but I'd want everything in the [Zero**Frame** API](https://zeronet.readthedocs.io/en/latest/site_development/zeroframe_api_reference/), even sitePublish, siteSign, and siteUpdate.\r\n\r\nOn further reading about how those are used, I realize that my original idea of how this would work was based on a misunderstanding of Zeronet implements stuff.\r\n\r\nWhat I want is a site that verifiably-to-the-end-user rejects only those updates that require the signoff of the site's original publisher, while accepting the type of updates that do not require that sort of special privilege.\r\n\r\nPossibly I'm still misunderstanding how stuff works. Possibly merger sites do what I want. Probably I need to grok better in order to figure out how what I have in my head would work. Possibly Zeronet _can't_ do what I want.\r\n\r\nWhat I want is a type of site that works - roughly - like an Ethereum contract: non-updateable code, and mutable state that can only be changed in accordance with the non-updateable code.", "added": 1489593930, "modified": 1489593930, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859#issuecomment-286847158", "source_type": "github"}, {"comment_id": 4, "body": "On further reflection, merger sites provide _most_ of the security benefits, but I still want to be able to create a static link to a specific version of a site. I'll change the title to reflect that.\r\n\r\nThanks for your help getting my head sorted out on this.", "added": 1489627689, "modified": 1489627689, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859#issuecomment-286954890", "source_type": "github"}, {"comment_id": 5, "body": "That's a good idea. In order to fulfill this request, though, it'd be necessary to not only store previously-seen versions of the site, but to download the entire change history of the site even from before one joined. Otherwise,\r\n\r\n>  it's not possible to write a hyperlink to a particular version of a site, so even if there's widespread consensus that site X is not evil as of date Y, I can't readily download the date-Y version of X.", "added": 1502962655, "modified": 1502962655, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859#issuecomment-323060457", "source_type": "github"}]}, "next_topic_id": 2, "topic": [{"topic_id": 1604065812, "title": "[feature request] Static link to a specific version of a site", "body": "_[ Edit: This was not initially well thought out. To keep the record of the conversation intact, I have kept the rest of this post as I first posted it; for those just joining us, the actual feature request is [further downthread](#issuecomment-286954890). ]_\r\n\r\n---\r\n\r\nIt would be nice to be able to have static (immutable, non-updatable) zites. There are many cases where immutability is a positive feature from a security perspective, especially from the perspective of auditability.\r\n\r\nA static zite would differ from e.g. an IPFS site in that it could access the ZeroFrame API, and therefore act as a client for a networked protocol, whereas an IPFS site is purely read-only. Through the API, static zites could have mutable state; only the code would be immutable, not the data.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1489431936, "modified": 1502966611, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/859", "source_type": "github"}]}