{"cert_user_id": "doublec@github", "next_comment_id": 4, "comment": {"1604064733_mirrored_HelloZeroNet_github": [{"comment_id": 1, "body": "Here's another one for testing: 13TSUryi4GhHVQYKoRvRNgok9q8KsMLncq\n\nIt's weblog but is fairly large. The index page downloads but the CSS is often not downloaded in time so the initial display is unstyled. A refresh shows it styled due to it having downloaded by then.\n", "added": 1421227558, "modified": 1421227558, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/6#issuecomment-69909121", "source_type": "github"}, {"comment_id": 2, "body": "Ah, I didn't have that commit, thanks. Looks like that's fixed it.\n", "added": 1421260247, "modified": 1421260247, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/6#issuecomment-69995777", "source_type": "github"}], "1604064747_mirrored_doublec_github": [{"comment_id": 3, "body": "I'm meaning more in the case of a user browsing a site wanting to get a link to share.  They can't copy/paste the URL in the browser because it stays as the top of the site and doesn't change. If they copy the URL of a page or link on a page they get the '/media/...' link which they have to edit.\n", "added": 1421355480, "modified": 1421355480, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/18#issuecomment-70186173", "source_type": "github"}]}, "next_topic_id": 3, "topic": [{"topic_id": 1604064747, "title": "Top level URL doesn't show URL of iframe", "body": "When navigating a ZeroNet site the top URL in the browser doesn't change. It stays as the address for the top level of the site. This makes creating internal links to sites in ZeroNet difficult.\n\nYou can right click on a link and copy/paste it. But this leaves the \"/media\" path in the URL and when you visit it it displays at the top level, not in the iframe with the Websocket magic around it.\n\nWould it be possible to change the top level URL when navigating? Maybe using a fragment identifier that the top level JS parses to navigate the iframe?\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1421354710, "modified": 1421508796, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/18", "source_type": "github"}, {"topic_id": 1604066171, "title": "Signing error when adding \"optional\" to content.json", "body": "I get a \"Site error: argument of type 'NoneType' is not iterable\" when doing a siteSign of a site where I've added a `optional` key to `content.json` when that key did not exist before. A stacktrace when I remove the try/catch:\r\n\r\n    - Unhandled exception: argument of type 'NoneType' is not iterable\r\n    Traceback (most recent call last):\r\n      File \"zeronet.py\", line 19, in main\r\n        main.start()\r\n      File \"src/main.py\", line 496, in start\r\n        actions.call(config.action, action_kwargs)\r\n      File \"src/main.py\", line 155, in call\r\n        func(**kwargs)\r\n      File \"src/main.py\", line 230, in siteSign\r\n        succ = site.content_manager.sign(inner_path=inner_path, privatekey=privatekey, update_changed_files=True, remove_missing_optional=remove_missing_optional)\r\n      File \"src/Content/ContentManager.py\", line 577, in sign\r\n        helper.getDirname(inner_path), content.get(\"ignore\"), content.get(\"optional\")\r\n      File \"src/Content/ContentManager.py\", line 524, in hashFiles \r\n        self.hashFile(dir_inner_path, file_relative_path, optional=True)\r\n      File \"plugins/Bigfile/BigfilePlugin.py\", line 245, in hashFile\r\n        if content and file_relative_path in content.get(\"files_optional\"):\r\n    TypeError: argument of type 'NoneType' is not iterable\r\n\r\nIt seems to look for a \"files_optional\" key and if it doesn't exist the error happens due to trying it iterate over `None`. If I add a line:\r\n\r\n    \"files_optional\": { },\r\n\r\nto `content.json` then the sign works and there is no error.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1507852554, "modified": 1507876131, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1144", "source_type": "github"}]}