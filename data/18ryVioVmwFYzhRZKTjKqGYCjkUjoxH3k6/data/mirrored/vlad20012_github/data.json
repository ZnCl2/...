{"cert_user_id": "vlad20012@github", "next_comment_id": 20, "comment": {"1604064765_mirrored_thesoftwarejedi_github": [{"comment_id": 1, "body": "[ContentManager.py:460](https://github.com/HelloZeroNet/ZeroNet/blob/1d6f56c6766651f94060f101aaaa5e2933e1fe19/src/Content/ContentManager.py#L460) Still not implemented\n", "added": 1457387315, "modified": 1457387315, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/30#issuecomment-193530804", "source_type": "github"}], "1604065117_mirrored_meriken_github": [{"comment_id": 2, "body": "I receive it always in google chrome, ZeroNet totally not useable. (But FireFox is OK)\n\nI placed brakepoint at onMessageInner and found that first message looks like\n![image](https://cloud.githubusercontent.com/assets/3221931/13591258/f9d70d26-e4f7-11e5-82cb-e0dd8cdfb432.png)\nNote: data field is not ZeroNet message at all. WTF is it?\n\nOK, the problem is FriGate extension - popular in Russia anti-censor tool.\nCan I expect a fix? We can't force all to disable this extension.\n", "added": 1457397384, "modified": 1457398278, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/306#issuecomment-193588099", "source_type": "github"}, {"comment_id": 3, "body": "I talked with friGate developer. He sayed that it's common practice to use message bus in chrome extensions, and application must filter messages. I have also heard complaints against other extensions, not only friGate, so it seems to be true.\n", "added": 1457431768, "modified": 1457431825, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/306#issuecomment-193779186", "source_type": "github"}, {"comment_id": 4, "body": "Yep, it's fixed now.\n", "added": 1457481397, "modified": 1457481397, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/306#issuecomment-194090198", "source_type": "github"}], "1604065151_mirrored_vlad20012_github": [{"comment_id": 5, "body": "Live example: http://127.0.0.1:43110/1G9sW6n1wqhUnoHLKEkycKM8sVgazFvFc\n", "added": 1457349641, "modified": 1457349641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/331#issuecomment-193267378", "source_type": "github"}, {"comment_id": 6, "body": "It is good solution too, but what the problem to add one if statement with comparison domain to site.settings[\"domain\"]?\n", "added": 1457350741, "modified": 1457350847, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/331#issuecomment-193275125", "source_type": "github"}, {"comment_id": 7, "body": "What about confirmation dialog if domains not equal (even if cert not exists)?\n", "added": 1457366242, "modified": 1457366242, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/331#issuecomment-193395462", "source_type": "github"}, {"comment_id": 8, "body": "I think it's reasonable to add ability to redefine or even delete certificates. Otherwise, services are advised to remove them manually. For example http://127.0.0.1:43110/16KzwuSAjFnivNimSHuRdPrYd1pNPhuHqN\n", "added": 1457596664, "modified": 1457596853, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/331#issuecomment-194790736", "source_type": "github"}, {"comment_id": 9, "body": "@alxbob It is a question for me? It's not my site. I just learned how it (and zeroID) works. Any authorization service (including zeroID) is only associating username with public key. On \"Nanasi text board\" you sign the certificate yourself, so anybody can choose any username (one username may be associated with two or more public keys). It is quite useless service because you can work directly with public keys (without usernames) without any authorization service.\n\n\"p2p zeroid alternative\" - is only blockchain. Look toward Twister http://twister.net.co/\n(I don't support this way; think you must either be completely anonymous (without username) or authorized by the central server)\n", "added": 1458124034, "modified": 1458124797, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/331#issuecomment-197328606", "source_type": "github"}], "1604065178_mirrored_vlad20012_github": [{"comment_id": 10, "body": "It's fast solution using nonstandard attribute for Chrome only. This issue awaiting full cross-browser solution: catch window opening from parent frame. Something like this:\n\n``` javascript\nvar frame = ...;\nframe.contentWindow.open = function (url, windowName, windowFeatures) {\n    window.open(url, windowName, windowFeatures);\n};\n```\n", "added": 1457817805, "modified": 1457817998, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352#issuecomment-195838529", "source_type": "github"}, {"comment_id": 11, "body": "@HelloZeroNet Yes, in this case, a zeroframe api command is also perfectly acceptable.\n", "added": 1457819101, "modified": 1457819101, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352#issuecomment-195842614", "source_type": "github"}, {"comment_id": 12, "body": "@TheNain38 I am developing service for authorization via social networks and need normal `window.open` or any alias (it's not a problem to write `@cmd \"openWindow\"` instead of `window.open`).\n\nFor example, it redirects user to `https://accounts.google.com`, but ZeroNet site should be open to receive cerificate.\n", "added": 1457819409, "modified": 1457819657, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352#issuecomment-195843739", "source_type": "github"}, {"comment_id": 13, "body": "@HelloZeroNet No. I'm speaking about ZeroNet user certificate reception (`@cmd \"certAdd\"`).\nI can also redirect user from external site back to ZeroNet in same tab. Now I am doing so. It looks not very convenient.\n", "added": 1457820323, "modified": 1457820418, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352#issuecomment-195844989", "source_type": "github"}, {"comment_id": 14, "body": "You can add API function and replace window.open in the default ZeroFrame.coffee. It will be transparent for users. If you feel that this is unreasonable, you can close the issue, i'll find another solution. But I think that soon it will be duplicated again.\n", "added": 1457820987, "modified": 1457821790, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352#issuecomment-195847073", "source_type": "github"}, {"comment_id": 15, "body": "[:161](https://github.com/HelloZeroNet/ZeroNet/commit/99f0407ba23707774884cd2ad103914044414587#diff-25ec8dd4ba66e508e805a317bc38fa5fR161) `w = window.open(null, params[1])`\n3rd param missing.\n\n```\nwindow.open(strUrl, winName [, winParams])\n```\n\nFor example\n\n```\nPage.cmd(\"wrapperOpenWindow\", \"https://github.com\", \"GitHub\", \"width=420,height=230\")\n```\n", "added": 1458401914, "modified": 1458402104, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352#issuecomment-198764170", "source_type": "github"}, {"comment_id": 16, "body": "Now it's working very good. Thank you very much.\n", "added": 1458557325, "modified": 1458557325, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352#issuecomment-199288607", "source_type": "github"}], "1604065180_mirrored_vlad20012_github": [{"comment_id": 17, "body": "Make few commits locally and push them together. If bug found in some local commit (maybe after testing), just use `git rebase -i` to make this commit the last and then amend it. I don't understand your problems.\n", "added": 1457776022, "modified": 1457776316, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/353#issuecomment-195734612", "source_type": "github"}, {"comment_id": 18, "body": "You can also commit to other branch (\"development\"?) and merge to master only when version assigned\n", "added": 1457777033, "modified": 1457777033, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/353#issuecomment-195736812", "source_type": "github"}], "1604065234_mirrored_HelloZeroNet_github": [{"comment_id": 19, "body": "I'm the only one who does not understand why we need a \"universal\" interface, not just admin/user page on ZeroTalk/ZeroBlog using normal JS?\n", "added": 1457776735, "modified": 1457776897, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/354#issuecomment-195735888", "source_type": "github"}]}, "next_topic_id": 4, "topic": [{"topic_id": 1604065151, "title": "Security: Any site may call certAdd for any domain", "body": "For example\n\n``` coffeescript\n@cmd \"certAdd\", [\"zeroid.bit\", \"atype1\", \"username\", \"sign\"]\n```\n\nThen the user will not be able to register at zeroid.bit.\n\nit is easy to fix: just compare domain name with current in UiWebsocket.actionCertAdd\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1457307589, "modified": 1460213523, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/331", "source_type": "github"}, {"topic_id": 1604065178, "title": "Allow to open not sandboxed windows", "body": "Currently iframe property `sandbox=\"..., allow-popups\"` allows only to open sandboxed windows (tabs), if they opens in any way from script (`<a target=\"_blank\">`, `window.open()`). \"sandboxed\" means same-origin restriction to parent domain (for AJAX requests and more). It may totally break some sites (external to ZeroNet). Normal links (without `target=\"_blank\"`) is working good for now.\n\nFast solution: add `allow-popups-to-escape-sandbox` to iframe sandbox attribute. At least it will work in Chrome. Read more [here](https://googlechrome.github.io/samples/allow-popups-to-escape-sandbox/).\n\nNormal solution: Catch windows opening from parent scripts or add API functions to open windows normally\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1457725243, "modified": 1458561333, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/352", "source_type": "github"}, {"topic_id": 1604065180, "title": "Pls commit each feature separately", "body": "I oftem read a GIT history, and it is very comfortable common practice when each commit represents one feature or fix, not multiple.\n\nWhen I reading your commits I should do extra working to determine what particular feature any line of code relative to.\n\nPls just commit each feature separately\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1457734288, "modified": 1457810326, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/353", "source_type": "github"}]}