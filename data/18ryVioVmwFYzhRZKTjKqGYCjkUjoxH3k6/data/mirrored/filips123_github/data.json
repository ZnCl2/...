{"cert_user_id": "filips123@github", "next_comment_id": 522, "comment": {"1604064865_mirrored_HelloZeroNet_github": [{"comment_id": 1, "body": "There are a few related issues about URL scheme and handler (#83, #266, #1295).\r\n\r\n---\r\n\r\nI think that the best scheme would be `zero://` (or `zeronet://`). This scheme is also the most valid according to URL syntax:\r\n\r\n```\r\nURI = scheme:[//authority]path[?query][#fragment]\r\nauthority = [userinfo@]host[:port]\r\n```\r\n\r\nIn this case, `zero://` would be the URL scheme. This would correctly separate ZeroNet sites from classic websites and ensure there are no conflicts.\r\n\r\n---\r\n\r\nThere are some with other suggestions:\r\n\r\n* Suggestion for using custom domains (`http://talk.zeronetwork.zero`, http://talk.zeronetwork.0net ...) is too complicated. It also doesn't allow other DNS providers. It is also not so valid URL syntax.\r\n\r\n* Usage of `http://zero/site-address` is also not good. It doesn't look so good and it also means different things. According to URL syntax, there is domain `zero` which contains subdirectory `site-address`. This is not so valid and would also not prevent CORS.\r\n\r\n---\r\n\r\nI recommend that you make browser extension (for Firefox and Chrome) that would handle `zero://` scheme, offer some developer tools and managing ZeroNet. Maybe it could also bundle ZeroNet directly into it. I will maybe create this extension in the future if I will have time.\r\n\r\nIf this is not possible, I recommend that you make custom browser for this. And I strongly recommend to not use Electron/Chromium for this because it has some problems. Electron uses a lot of memory and it doesn't have great performance. And Chromium is controlled by Google and it is not good for any decentralized and privacy projects.\r\n\r\nIt would be better to create a custom build of Firefox (or Tor Browser) which would contain bundled ZeroNet and extension for managing it. Problem with this is that it will require experience with Firefox codebase so it could be hard.\r\n\r\nSee rllola/ZeronetBrowser#87 for some more details.", "added": 1557052299, "modified": 1557052299, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-489426817", "source_type": "github"}, {"comment_id": 2, "body": "> The `zero` domain would just be `localhost`. And yes, there _is_ a subdirectory containing the `site-address` - that's what the data folder is.\r\n\r\nThis wouldn't prevent CORS. And ZeroNet sites should be on separate domains (even if there are on the same server).\r\nAnd what's then the point of using `http://zero` instead of `localhost:43110`?\r\n\r\n> I don't understand how `http://talk.zeronetwork.zero` isn't valid URL syntax... it looks valid to me.\r\n\r\nSorry, I was editing my comment before I published it and I forgot to change this.\r\nIt is valid (except that Amazon applied for .zero TLD).\r\nBut the problem with it is that it doesn't allow other DNS providers. Some solution to this may be to use `http://talk.zeronetwork.bit.zero` or something like this.\r\n\r\n---\r\n\r\nI didn't know about that additional Gopher and FTP plugins. Now I probably agree that `zero://` scheme is not so good.\r\n\r\nI would now recommend to use `http://talk.zeronetwork.bit.zero` or something like that. This would allow accessing sites without (`address.zero`) and with (`domain.bit.zero`) domain. It would also allow other DNS (like ENS or even classic DNS) and also other protocols (Gopher, FTP...).\r\n\r\n**Update:** Better to use `.zeronet`, because `.zero` is registered for Amazon. Other stays the same. And if you have some time, maybe even apply `.zeronet` to ICANN.", "added": 1557071419, "modified": 1562697366, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-489452892", "source_type": "github"}], "1604064856_mirrored_n3r0-ch_github": [{"comment_id": 3, "body": "@HelloZeroNet Any progress here? Will classic DNS be supported?\r\n\r\nEven if DNS isn't so decentralized, it would be good if it is supported.\r\nYou could use cache to avoid offline problems. And there are probably also solutions for other problems with it.\r\n\r\nAnd for DNS servers, it should probably use [OpenNIC](https://www.opennic.org/) by default (because it is \"open and democratic alternative DNS root\"), but it should be configurable by user.", "added": 1556605917, "modified": 1561118158, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-487884017", "source_type": "github"}, {"comment_id": 4, "body": "IPFS also support similar thing.\r\n\r\nYou can add TXT record that points to IPFS file hash (`dnslink=/ipns/<your-hash>`). File is then accessible from `ipfs-proxy.com/your-domain.com`.\r\n\r\nIn addition, if you also create CNAME record that points to public IPFS proxy (`217.182.195.23` for `gateway.ipfs.io`), file is also accessible directly from `your-domain.com`).\r\n\r\nThis would also be extremely useful for ZeroNet. Site owner would then only need to create TXT record with ZeroNet address and CNAME record that points to (trusted) ZeroNet public proxy or local ZeroNet instance and site would be accessible directly from classic domain.", "added": 1561199856, "modified": 1561199856, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-504666540", "source_type": "github"}, {"comment_id": 5, "body": "@ValdikSS Yes, that is how I want to be implemented. With this, it should be also possible to handle subdomains (`_dnslink.subdomain.example.com`), right?", "added": 1566835263, "modified": 1566835263, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-524986620", "source_type": "github"}, {"comment_id": 6, "body": "@ValdikSS It appears that DNSLink, which is used by IPFS, is already [some kind of standard](https://dnslink.io/). It also supports linking other types different from IPFS.\r\n\r\nSo, instead of reinventing the wheel with a custom type of DNS record, ZeroNet should just use DNSLink. ZeroNet records should use the same names and structure as IPFS's, just record's content should be `dnslink=/zeronet/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D`.", "added": 1568993208, "modified": 1568993397, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-533662321", "source_type": "github"}, {"comment_id": 7, "body": "I created a Python library for resolving DNSLink records, [DNSLinkPy](https://github.com/filips123/DNSLinkPy). I will also soon create a plugin for DNS support in ZeroNet.", "added": 1569169402, "modified": 1569169402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-533910046", "source_type": "github"}, {"comment_id": 8, "body": "> but also when the ZeroNet port receives HTTP request with `Host: example.com`\r\n\r\nThis will not be in my initial changes. However, I will see if I (or someone else) can implement this a bit later.", "added": 1569169745, "modified": 1569169745, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-533910492", "source_type": "github"}, {"comment_id": 9, "body": "@ValdikSS Yes, this is similar to what IPFS also supports. So you create ZeroNet sure, create DNSLink TXT record with site address, point CNAME or A record to public instance and site is reachable just with domain.\r\n\r\n@imachug Won't be a problem that local ZeroNet instance is on port 43110 but domain should be reachable on port 80? With public instances this isn't a problem because most public instances are on port 80.\r\n\r\n---\r\n\r\nOr there would be even better solution, if it is possible to do. This would be to first try to resolve domain on local instance and fallback to public if needed. But I'm not sure if this is possible with CNAME or A records.", "added": 1569235836, "modified": 1569236027, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534107913", "source_type": "github"}, {"comment_id": 10, "body": "Good news! I almost finished the DNS plugin. I just need to test it a bit more and I will probably create the next week.\r\n\r\nThe plugin uses various OpenNIC nameservers to resolve the domain. It uses DNSLink to get site address. It then also stores address in a local cache file to support quicker resolving and offline usage.\r\n\r\nHowever, there is something that might need to be discussed. DNS queries won't go over Tor, right? Could this be a privacy problem? And how it could be fixed (I'm using [DNSPython](https://github.com/rthalley/dnspython) library)?", "added": 1569334246, "modified": 1569334246, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534655950", "source_type": "github"}, {"comment_id": 11, "body": "@ValdikSS How can this be done in DNSPYthon? Also, it should probably be enabled only in Tor Always Mode.", "added": 1569334513, "modified": 1569334513, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534657785", "source_type": "github"}, {"comment_id": 12, "body": "@ValdikSS I'm using `dns.resolver.query(domain, 'TXT')` for getting TXT records. However, I can also change the settings of the resolver object.", "added": 1569334803, "modified": 1569334803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534659785", "source_type": "github"}, {"comment_id": 13, "body": "So the solution is to use DNS queries over TCP and proxy socket to Tor?\r\n\r\nThis shouldn't be hard. DNSPython supports option to overwrite `socket_factory` of [`dns.query`](https://github.com/rthalley/dnspython/blob/master/dns/query.py#L39). So `socket_factory` needs to be overwritten to use Tor proxy in case if Tor Always Mode is enabled.\r\n\r\nHow can I get Tor mode details and set Tor proxy from plugin?", "added": 1569336345, "modified": 1569336345, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534670611", "source_type": "github"}, {"comment_id": 14, "body": "@imachug Thanks! And how to attach a Tor proxy to socket? I saw that ZeroNet uses PySocks but I'm not sure about all implementation details.", "added": 1569336537, "modified": 1569336537, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534671937", "source_type": "github"}, {"comment_id": 15, "body": "@imachug So `socket.socket` is then monkey-patched? Or it uses some other default configuration?\r\n\r\nAlso, is importing in `SiteManagerPlugin.load` method OK?", "added": 1569337033, "modified": 1569337110, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534675548", "source_type": "github"}, {"comment_id": 16, "body": "I updated resolver to always use TCP if Tor is enabled, but there is still some problem.\r\n\r\nWhen a resolver tries to [create a query](https://github.com/rthalley/dnspython/blob/legacy-v1/dns/resolver.py#L918-L922), it will throw this exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"D:\\Users\\filips\\Downloads\\ZeroNet\\venv\\lib\\site-packages\\dns\\resolver.py\", line 910, in query\r\n    source_port=source_port)\r\n  File \"D:\\Users\\filips\\Downloads\\ZeroNet\\venv\\lib\\site-packages\\dns\\query.py\", line 491, in tcp\r\n    q.keyring, q.mac, ignore_trailing)\r\n  File \"D:\\Users\\filips\\Downloads\\ZeroNet\\venv\\lib\\site-packages\\dns\\query.py\", line 419, in receive_tcp\r\n    ldata = _net_read(sock, 2, expiration)\r\n  File \"D:\\Users\\filips\\Downloads\\ZeroNet\\venv\\lib\\site-packages\\dns\\query.py\", line 347, in _net_read\r\n    n = sock.recv(count)\r\n  File \"D:\\Users\\filips\\Downloads\\ZeroNet\\venv\\lib\\site-packages\\socks.py\", line 410, in recv\r\n    bytes, _ = self.recvfrom(*pos, **kw)\r\n  File \"D:\\Users\\filips\\Downloads\\ZeroNet\\venv\\lib\\site-packages\\socks.py\", line 391, in recvfrom\r\n    return super(socksocket, self).recvfrom(bufsize, flags)\r\n  File \"D:\\Users\\filips\\Downloads\\ZeroNet\\venv\\lib\\site-packages\\gevent\\_socket3.py\", line 411, in recvfrom\r\n    return _socket.socket.recvfrom(self._sock, *args)\r\nBlockingIOError: [WinError 10035] A non-blocking socket operation could not be completed immediately\r\n```\r\n\r\n(It will actually handle it but it is the same for all nameservers which means that domain will load infinitely. I modified DNSPython to also print trace of it.)\r\n\r\nThose are my observations:\r\n\r\n* When Tor is disabled, everything works correctly. DNS uses UDP query.\r\n\r\n* When Tor is enabled (always mode), the query will fail because UDP is not supported in Tor. This is expected and I already fixed this.\r\n\r\n* However, if I force a query to be TCP (and Tor is enabled), it will also fail because of the above error. This is **not** expected and should **not** happen.\r\n\r\n* Also, when I force TCP but Tor is disabled, it still works.\r\n\r\n[Here](https://github.com/HelloZeroNet/ZeroNet/files/3649121/DNS.zip) is my current version of the plugin for testing. You need to install dependencies from `requirements.txt`.\r\n\r\nDomains that are available for testing are `js.zeroframe.oss` and `py.zeroframe.oss` which should redirect to my Git Center repositories (and it works without Tor).\r\n\r\nJust note that cache is saved into memory and `data/dns_cache.json`. This means that you should delete that file (and restart ZeroNet) after every test, else it might look like that DNS works but domain will be only loaded from cache.", "added": 1569343718, "modified": 1569343828, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534719681", "source_type": "github"}, {"comment_id": 17, "body": "@ValdikSS @imachug Any thoughts on this?", "added": 1569412119, "modified": 1569412119, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535059493", "source_type": "github"}, {"comment_id": 18, "body": "@ValdikSS\r\n\r\n> I'm not sure what should be done to fix it without checking your code first, or at least a short example which I can debug.\r\n\r\nHere are some reproduction steps:\r\n\r\n1. Plugin source code is [here](https://github.com/HelloZeroNet/ZeroNet/files/3649121/DNS.zip).\r\n\r\n2. You need to add a plugin to ZeroNet and install all dependencies from `requirements.txt`.\r\n\r\n3. Modify [`dns/resolver.py`](https://github.com/rthalley/dnspython/blob/legacy-v1/dns/resolver.py#L927) (around line 927) of DNSResolver package and add this to show error when it occours:\r\n\r\n```py\r\nexcept (socket.error, dns.exception.Timeout) as ex:\r\n    #\r\n    # Communication failure or timeout.  Go to the\r\n    # next server\r\n    #\r\n\r\n    import traceback      # Add this two lines\r\n    traceback.print_exc() # To show exception\r\n\r\n    errors.append((nameserver, tcp_attempt, port, ex,\r\n                   response))\r\n    response = None\r\n    continue\r\n```\r\n\r\n4. Enable Tor Always Mode and restart ZeroNet (start with `--debug` option to see live logs). Delete `dns_cache.json`file from ZeroNet data folder (if exists) to remove cache.\r\n\r\n5. Try to open domain `py.zeroframe.oss` which should open Git Center repository (but it probably won't).\r\n\r\n6. You will see a lot of errors in log output (for each of availible DNS servers). Some of errors are related to IPv6 (which appears to not be supported by PySocks. But most of the errors will be related to problem from my previous comment. Also, website will load for infinity.\r\n\r\n@HelloZeroNet\r\n\r\n> Pysocks is not compatible fully with gevent when udp sockets are used.\r\n\r\nYes, I just saw your issue few minutes before you linked it :)\r\n\r\n> The recvfrom function is used for UDP sockets, so if you get error related to that, then it means it tries to use UDP sockets.\r\n\r\nWhere could this be called? UDP should be disabled.\r\n\r\nCan you check my plugin?", "added": 1569413824, "modified": 1569413824, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535072648", "source_type": "github"}, {"comment_id": 19, "body": "> I recommend to create a simple test script to check if it works without gevent.monkey.patch_all()\r\n\r\n@HelloZeroNet How to do this?\r\n\r\nAlso, it looks like that `dnslib` is only a package for encoding/decoding DNS packets, but not actually sending them to real nameservers.", "added": 1569417087, "modified": 1569417215, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535096493", "source_type": "github"}, {"comment_id": 20, "body": "> I think the problem is not with your plugin, but pysocks + gevent + dnspython is not fully compatible.\r\n\r\nSo, is it possible to somewhere report an issue with those libraries?\r\n\r\n> I recommend to create a simple test script to check if it works without gevent.monkey.patch_all()\r\n\r\nHow to do this? Do you mean to create a simple script that gets DNS record using my library, but check it with and without `gevent.monkey.patch_all()`?\r\n\r\nIf it would be hard to fix this for now, could we just disable DNS resolving when Tor is used (more private but less useful) or always use clearnet for resolving (less private but more useful)?", "added": 1569417745, "modified": 1569417745, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535101013", "source_type": "github"}, {"comment_id": 21, "body": "Yes, it may only cause problems on Windows. I only tested this on it.", "added": 1569421672, "modified": 1569421672, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535127219", "source_type": "github"}, {"comment_id": 22, "body": "External DNS servers are used because they are for [OpenNIC](https://www.opennic.org/) which is \"open and democratic alternative DNS root\". This could make DNS at least a bit more decentralized.\r\n\r\nIt is also possible to use system configuration. But in most cases, default system DNS servers will be from ISP or Google, which isn't so decentralized and also doesn't support special free OpenNIc domains. That's why it is not used by default.", "added": 1569422172, "modified": 1569422172, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535130513", "source_type": "github"}, {"comment_id": 23, "body": "@ValdikSS Using system default resolver would remove the ability to use OpenNIC-specific features, like additional free TLDs, Emercoin TLDs...\r\n\r\nI would more like that DoH/DoT resolvers will be always enabled, regardless of what Tor is, except if the user specifically doesn't want this. However, DNSPython currently doesn't support DoH and DoT (see rthalley/dnspython#358 for details).", "added": 1569423558, "modified": 1569423558, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535139457", "source_type": "github"}, {"comment_id": 24, "body": "@HelloZeroNet Great! All DoH resolvers use same request and response format in JSON, right?\r\n\r\nBecause DNSPython also supports some other features (like cache, response handling...), I will try to create PR for it with DoH support. This means that DNSPython (when using DoH nameserver) could completely bypass current TCP/UDP socket requests and just use `urllib` or similar. This should also fix issue with Gevent and non-blocking sockets.\r\n\r\nIt would also be good to support [DNS stamps](https://dnscrypt.info/stamps-specifications/). I found [Python library](https://github.com/chrisss404/python-dnsstamps) for that, but I don't know what exactly all data in stamp mean and how to use it.\r\n\r\nAlso, because I will use `urllib` for making HTTP requests, I also need to know if it will be automatically monkey-patched in ZeroNet for Tor, or I will need to do this manually.", "added": 1569431415, "modified": 1569433583, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535191769", "source_type": "github"}, {"comment_id": 25, "body": "I almost implemented DoH support for DNSPython. It uses basic `urllib.request` so there should hopefully be no problems with Gevent. I will try to test it tomorrow and then create PR for DNSPython next week. Then DNS plugin for ZeroNet would just need to wait until PR is merged or use my temporary branch for DoH support.", "added": 1569514087, "modified": 1569514126, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-535644565", "source_type": "github"}, {"comment_id": 26, "body": "@HelloZeroNet @imachug @ValdikSS I created #2214.", "added": 1569942260, "modified": 1569942260, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-537157815", "source_type": "github"}, {"comment_id": 27, "body": "My PR already supports `_dnslink` subdomain which is is the same thing as used in IPFS-based websites and other decentralized systems.", "added": 1585830641, "modified": 1585830641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-607917655", "source_type": "github"}], "1604064916_mirrored_kseistrup_github": [{"comment_id": 28, "body": "@HelloZeroNet Any update?\r\n\r\nSome Linux distributions (Ubuntu 18.04) removed Python 2. Users will now have to install Python 2 manually to use ZeroNet.\r\nAlso, it is only few more than one year left to transfer project, because Python 2 will not be supported in 2020 anymore.", "added": 1539788025, "modified": 1539788025, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149#issuecomment-430725833", "source_type": "github"}], "1604065064_mirrored_GomZik_github": [{"comment_id": 29, "body": "There are a few related issues about URL scheme and handler (#83, #266, #1295). I posted my idea about this in https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-489426817.", "added": 1557052557, "modified": 1557052557, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/266#issuecomment-489427187", "source_type": "github"}], "1604065143_mirrored_iShift_github": [{"comment_id": 30, "body": "@HelloZeroNet Do you have any localisation platform for ZeroNet?", "added": 1554732491, "modified": 1554732491, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/322#issuecomment-480918218", "source_type": "github"}], "1604065872_mirrored_Forbo_github": [{"comment_id": 31, "body": "This is what `PUA.DownloadAdmin` could mean ([source](https://www.symantec.com/security-center/writeup/2015-040613-1142-99)):\r\n\r\n> PUA.DownloadAdmin is a potentially unwanted application that may download additional software onto the computer. \r\n>\r\n> The program is a software installation manager that must be manually downloaded and installed on the computer.\r\n>When the program is executed, it displays an End User License Agreement (EULA). If the user accepts the EULA, the program may then offer to install additional potentially unwanted applications.\r\n> The EULA also contains details saying that it displays ads at the discretion of the software. \r\n\r\nMaybe they don't like that ZeroNet automatically downloads visited zites (potentially unwanted applications)? If this is true, the only thing to fix this is to submit false positive report to antivirus.", "added": 1562056396, "modified": 1562056396, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-507637394", "source_type": "github"}], "1604066073_mirrored_krixano_github": [{"comment_id": 32, "body": "@HughIsaacs2 What security issues would be if manifest would be edited directly? Because it would be easier to just specify path to manifest file in `content.json` so wrapper would then include it.\r\n\r\n", "added": 1557494099, "modified": 1557494099, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-491345516", "source_type": "github"}, {"comment_id": 33, "body": "What if web app manifest would be linked in `content.json`, but the program would overwrite \"danger\" sections with the safe one?", "added": 1557503451, "modified": 1557503451, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-491394301", "source_type": "github"}, {"comment_id": 34, "body": "> I could also just read the manifest from a meta tag like the standards, to support multiple installable apps within one site.\r\n\r\nThat would probably be the best way.\r\n\r\nYou would then need to replace danger parts of sections like `scope` and `start_url`. It would be good to only replace parts upper than the current site, so developers would be able to create multiple apps with multiple scopes.\r\n\r\nBut not forget to prevent `../` and related \"escaping\" techniques.", "added": 1557504955, "modified": 1557504955, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-491401211", "source_type": "github"}, {"comment_id": 35, "body": "@HughIsaacs2 Did you started anything? I would like to test and contribute to it.", "added": 1558884019, "modified": 1558884019, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1065#issuecomment-496020736", "source_type": "github"}], "1604066161_mirrored_filips123_github": [{"comment_id": 36, "body": "How can I use Websocket? I have a Python program and I would like to communicate with ZeroNet site.", "added": 1507630670, "modified": 1507645388, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1137#issuecomment-335469172", "source_type": "github"}, {"comment_id": 37, "body": "If I have a javascript function on the ZeroNet page, how can I call it from Python and get a function return?", "added": 1508405407, "modified": 1508405407, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1137#issuecomment-337892499", "source_type": "github"}, {"comment_id": 38, "body": "If I understand correctly, I need to run PhantomJS from Python, which sends a request to the ZeroNet page. Is there any other way?", "added": 1508408072, "modified": 1508408072, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1137#issuecomment-337903878", "source_type": "github"}, {"comment_id": 39, "body": "It works. Thank you!", "added": 1508508533, "modified": 1508508533, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1137#issuecomment-338266329", "source_type": "github"}], "1604066309_mirrored_ZedeX_github": [{"comment_id": 40, "body": "Make this also for ZeroID please.", "added": 1516384454, "modified": 1516384454, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1251#issuecomment-359086197", "source_type": "github"}], "1604066389_mirrored_HelloZeroNet_github": [{"comment_id": 41, "body": "@HelloZeroNet I think that a few days are too much for the normal user. And something like https://github.com/HelloZeroNet/ZeroNet/issues/1258#issuecomment-380050512 should be implemented.\r\n\r\nWhen it will be possible to import PowID providers from GUI?\r\n\r\nAlso, you said \"Get my auth_address by entering to site's JS console\". The auth_address will be diffreant for each site. Does this mean that I would need to do this and generate certificate for every site I want to use manually? Will this be automated?", "added": 1555609231, "modified": 1555609231, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1258#issuecomment-484682362", "source_type": "github"}], "1604066357_mirrored_MarBlen79_github": [{"comment_id": 42, "body": "@MarBlen79 @DaniellMesquita @HelloZeroNet \r\n\r\nI created ZeroFrame WebSocket API for JavaScript. It supports (almost) same features as default ZeroFrame that is included in ZeroNet sites, but it is using WebSocket client so it can be used in local programs, such as Node.js and Electron. It's not complete ZeroNet implementation in JavaScript, but just WebSocket client which connects to exiting ZeroNet instance.\r\n\r\nThis program is currently only available as [GitHub Gist](https://gist.github.com/filips123/14d5979db24b20cdcfd40e3faacf1033), but I will soon publish it to GitHub repository and NPM. I will also properly document it and add some more features.\r\n\r\nWhat do you think?\r\nThere are a few things I want to discuss before I will publish this as a package and create clients for other languages. They are available in [Discussion sections](https://gist.github.com/filips123/14d5979db24b20cdcfd40e3faacf1033#discussion) of Gist.\r\n\r\nI am also creating clients for Python and PHP, but I will wait before publishing to discuss all things that are related to them.", "added": 1561994823, "modified": 1561994823, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1289#issuecomment-507374004", "source_type": "github"}, {"comment_id": 43, "body": "> Instead, focus on getting a connection to the ZeroNet daemon in every language working (and easy for people to install and get started) and then work on abstractions afterwards if you'd like.\r\n\r\nYes, I will try to support more languages (Python and PHP for start) with the same abstraction level as original ZeroFrame class.\r\n\r\nThere are still some things I want to discuss so please check them in [Discussion section](https://gist.github.com/filips123/14d5979db24b20cdcfd40e3faacf1033#discussion) of Gist.\r\n\r\n> Btw, are you interested in making a full ZN implementation in JS? I think it could really help ZeroNet adoption if one was out there.\r\n\r\nThere are already some (mostly unmaintained) projects which tried to do this. See [NPM](https://www.npmjs.com/search?q=zeronet) for details.", "added": 1562001475, "modified": 1562001475, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1289#issuecomment-507409745", "source_type": "github"}, {"comment_id": 44, "body": "> It could serve as a base, though it's a bit mixed up with my effort to **port the zeronet protocol to libp2p** for scalability.\r\n\r\nIs it still compatible with the original Python client?\r\nIf not, it should be. It's not good to have a slightly different version of the same thing for multiple languages, because they could be incompatible.\r\n\r\nAlso, regarding libp2p. Could it be used in original Python client as alternative protocol? @HelloZeroNet, what do you think?\r\n", "added": 1562003819, "modified": 1562003819, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1289#issuecomment-507422973", "source_type": "github"}, {"comment_id": 45, "body": "@mkg20001 Would it be possible to also support that in Python?\r\n\r\nThere are *many* decentralized protocols. And more protocols ZeroNet support, more decentralized it would be. There just needs to be some mechanism to handle all of them.", "added": 1562004206, "modified": 1562004381, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1289#issuecomment-507425028", "source_type": "github"}], "1604066365_mirrored_rllola_github": [{"comment_id": 46, "body": "There are a few related issues about URL scheme and handler (#83, #266, #1295). I posted my idea about this in https://github.com/HelloZeroNet/ZeroNet/issues/83#issuecomment-489426817.", "added": 1557052564, "modified": 1557052564, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1295#issuecomment-489427199", "source_type": "github"}], "1604066574_mirrored_imachug_github": [{"comment_id": 47, "body": "@HelloZeroNet @imachug This PR is now 1 year old. Can it be merged? Are there any important issues with it?", "added": 1558246950, "modified": 1558246950, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1430#issuecomment-493740783", "source_type": "github"}], "1604066569_mirrored_krixano_github": [{"comment_id": 48, "body": "@krixano @imachug @HelloZeroNet Are here also some issues? Can it be merged?", "added": 1558260393, "modified": 1558260393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-493755604", "source_type": "github"}, {"comment_id": 49, "body": "Does this also need Python 3 version?", "added": 1558343545, "modified": 1558343545, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1451#issuecomment-493960531", "source_type": "github"}], "1604066626_mirrored_alex37330_github": [{"comment_id": 50, "body": "Is it possible to change port of web interface?", "added": 1533547430, "modified": 1533547430, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1501#issuecomment-410689947", "source_type": "github"}], "1604067121_mirrored_DaniellMesquita_github": [{"comment_id": 51, "body": "> > I still don't support running third party code on client-side and I don't see why would we need to involve nodejs in it.\r\n> \r\n> Because zites are done in JavaScript, and NodeJS is JavaScript\r\n\r\nBut zites are sandboxed and isolated. NodeJs isn't. Running malicious NodeJs script can affect and damage computer.", "added": 1557753234, "modified": 1557753263, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1762#issuecomment-491888340", "source_type": "github"}], "1604067049_mirrored_HelloZeroNet_github": [{"comment_id": 52, "body": "@HelloZeroNet Shouldn't this be closed as ZeroNet now supports Python 3?\r\n\r\nAlso, can you push some changes to `master` branch to alert all users which are still using Python 2 that it will be unsupported in 2020 and with details how to update to Python 3 version?", "added": 1572289423, "modified": 1572290650, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1773#issuecomment-547165232", "source_type": "github"}], "1604067196_mirrored_ValdikSS_github": [{"comment_id": 53, "body": "@HelloZeroNet What if program first checks some common MIME types from your list. If none of them matches, the program also checks `mimetypes` module (because it contains more types). If it still doesn't match, it uses `application/octet-stream`.", "added": 1562138444, "modified": 1562138444, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1950#issuecomment-508034908", "source_type": "github"}], "1604067222_mirrored_filips123_github": [{"comment_id": 54, "body": "Ok, fixed!\r\n\r\nWhat about that errors in https://github.com/HelloZeroNet/ZeroHello/issues/116#issuecomment-480868018?", "added": 1554725628, "modified": 1554725628, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1972#issuecomment-480874505", "source_type": "github"}, {"comment_id": 55, "body": "So what's then the issue? Maybe Tor needs writable directory? ZeroNet process is also not stopped.", "added": 1554727792, "modified": 1554727792, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1972#issuecomment-480889415", "source_type": "github"}, {"comment_id": 56, "body": "Ok, I installed to `%LOCALAPPDATA%`.\r\n\r\nCan you make installation program that would correctly install and set up all directories?", "added": 1554730954, "modified": 1554730954, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1972#issuecomment-480909044", "source_type": "github"}], "1604067267_mirrored_filips123_github": [{"comment_id": 57, "body": "@imachug Yes. Users can exchange their own systems, images and snapshots. Users can also just run a custom system without publishing it (like https://copy.sh/v86/).", "added": 1556640065, "modified": 1556640125, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005#issuecomment-488074652", "source_type": "github"}, {"comment_id": 58, "body": "As I also posted on [ZeroTalk](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1558282143_1LFu1BTScmY82HHtg3TY2jAuSrCYNsQWEY), this only doesn't work on local ZeroNet instance:\r\n\r\n> I tested this few more times. I'm still using AJAX with wrapperGetAjaxKey. I figured out that it only doesn't work if I'm using my local ZeroNet instance which has admin access to zite. If I'm using my other ZeroNet instance which doesn't have admin access to zite, it works.\r\n\r\nCould this be ZeroNet bug? I will try to provide more details soon.", "added": 1558886880, "modified": 1558886880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005#issuecomment-496023778", "source_type": "github"}, {"comment_id": 59, "body": "Yes, this could be problem. Is there any workaround? Is it possible to tell ZeroNet to not check cookies on Ajax requests?", "added": 1558953237, "modified": 1558953237, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005#issuecomment-496214832", "source_type": "github"}, {"comment_id": 60, "body": "Maybe allow request without cookies but disallow all insecure things in it.", "added": 1558954784, "modified": 1558954784, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005#issuecomment-496222398", "source_type": "github"}, {"comment_id": 61, "body": "Yes. But I also agree that it should use something else instead of cookies in the future.", "added": 1558955246, "modified": 1558978130, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005#issuecomment-496224739", "source_type": "github"}, {"comment_id": 62, "body": "I fixed this. It was because of some custom plugin I wrote too quickly.", "added": 1560508022, "modified": 1560508022, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005#issuecomment-502108763", "source_type": "github"}], "1604067345_mirrored_imachug_github": [{"comment_id": 63, "body": "@imachug Are you sure it must be `text/javascript` mimetype? Because some people say it must be `text/javascript` and some other `application/javascript`.", "added": 1560669767, "modified": 1560669767, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2026#issuecomment-502439483", "source_type": "github"}], "1604067300_mirrored_filips123_github": [{"comment_id": 64, "body": "@HelloZeroNet You need to also enable this in repository settings and merge this in `py3` branch.", "added": 1562250096, "modified": 1562250096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2031#issuecomment-508543283", "source_type": "github"}], "1604067323_mirrored_filips123_github": [{"comment_id": 65, "body": "I'm currently creating a plugin that supports ENS. Note that it might take some time because Web3.py library currently doesn't support a new ENS `contenthash` format. It needs to be supported in order to allow linking ZeroNet sites from ENS domains. See ethereum/web3.py#1397 for details.\r\n\r\n---\r\n\r\n@HelloZeroNet I also have a few questions.\r\n\r\nIn ENS, links to websites are specified in `contenthash` record. It uses `protocol://address` format (see [this domain's content record](https://manager.ens.domains/name/pricefeed.doracle.eth) for details).\r\n\r\nI need to decide which `protocol` name will I use for ZeroNet. This `protocol` name then also needs to be added to some other packages in order to be properly supported. See this pull requests (multiformats/js-multiaddr#89, pldespaigne/content-hash#24, ensdomains/ui#13, MetaMask/metamask-extension#6869) how Onion support was added to ENS as there should be something similar for ZeroNet.\r\n\r\nI think that `zero://` protocol won't be good for this as it is already used for trackers. It would be better to use a new protocol scheme to avoid confusion. That new protocol scheme should then specifically be used to specify the address of the ZeroNet site in ENS and other domain systems. I will use `zeronet://` as that protocol scheme. Do you think this is OK?\r\n\r\nAlso, as you can see in linked PRs for Onion support, I also need to specify which encoding and format should be used. What should I use for ZeroNet there?", "added": 1563810817, "modified": 1563810817, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2049#issuecomment-513909308", "source_type": "github"}, {"comment_id": 66, "body": "I also think that. But which encoding and format should be used (see previously linked PRs)? Base58?", "added": 1563858256, "modified": 1563858256, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2049#issuecomment-514100398", "source_type": "github"}], "1604067325_mirrored_filips123_github": [{"comment_id": 67, "body": "@Thunder33345 For start, just better UI would be enough. It would also be backward-compatible with previous (current) solutions.\r\n\r\nBut in the future, there should be support for multiple IDs from same provider.\r\n\r\n---\r\n\r\nAlso, if one account will be able to own multiple usernames from same provider, there also needs to be some management.\r\n\r\nFor example, user can have `user1@zeroid.bit`, `user1@kxoid.bit` and `user2@zeroid.bit`, `user2@kxoid.bit`. So, same username but on different providers and also same provider but with different usernames. If there are more than just 4 usernames, it can become messy.\r\n\r\nUsers should then be able to sort and group IDs depending on username and provider (both of that). So user will be able to list only `user1` IDs or only `zeroid.bit` providers. There should also be support for search, sorting and grouping of IDs.", "added": 1561965943, "modified": 1561965943, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2050#issuecomment-507208084", "source_type": "github"}, {"comment_id": 68, "body": "One masterseed can already have multiple IDs, but only on different providers.\r\n\r\nThis is why I currently have all `user1` IDs at different providers on one masterseed and `user2` on the other.\r\n\r\nBut there need to be good UI for switching and managing multiple masterseeds and accounts.", "added": 1562155348, "modified": 1562155348, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2050#issuecomment-508131784", "source_type": "github"}, {"comment_id": 69, "body": "> a we might even be able to just use multiuser\r\n\r\nProbably not Multiuser plugin because it's primary usage is for public proxies. But another plugin which would be similar to Multiuser.", "added": 1562231989, "modified": 1562231989, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2050#issuecomment-508462454", "source_type": "github"}, {"comment_id": 70, "body": "@HelloZeroNet Nice. However, there is still some problem.\r\n\r\nAccount usernames are displayed based on the first ID that is stored in that account (alphabetically). But the problem is that I want to display ZeroID username, but it displays CryptoID username (I want to display `filips@zeroid.bit` instead of `filips@cryptoid.bit`). Is it possible to let users decide which provider will be displayed?\r\n\r\nOr, maybe even better, strip provider part and just display `filips`. This would be useful if you have `user1@provider1` and `user1@provider2` in one account and `user2@provider1` and `user2@provider2` in the second one. But this should also be configurable.", "added": 1571247796, "modified": 1571247796, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2050#issuecomment-542883274", "source_type": "github"}], "1604067381_mirrored_imachug_github": [{"comment_id": 71, "body": "Is it also possible to use multiple cryptographies at the same time? Can you add support for this?", "added": 1561538590, "modified": 1561538590, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-505839251", "source_type": "github"}, {"comment_id": 72, "body": "Will system detect which cryptography is used and automatically switch to it?\r\n\r\nAlso, I think that you should now also create an Ethereum plugin because it is very widely used.", "added": 1561539236, "modified": 1561539236, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-505842344", "source_type": "github"}, {"comment_id": 73, "body": "@imachug @HelloZeroNet I saw a question about SegWit addresses on [ZeroTalk](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1561983082_1EBYmm4sYxPoUVKAYFLfmYR6opizGGmM8v). Are SegWit addresses already supported by ZeroNet? If not, could they be supported by this PR?", "added": 1561973045, "modified": 1561973045, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2053#issuecomment-507242497", "source_type": "github"}], "1604067384_mirrored_imachug_github": [{"comment_id": 74, "body": "@HelloZeroNet Is there any update about ZeroBundle for Python 3?", "added": 1561740096, "modified": 1561740096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2054#issuecomment-506854440", "source_type": "github"}], "1604067336_mirrored_filips123_github": [{"comment_id": 75, "body": "@imachug It works with your fix. Thank you.", "added": 1561874506, "modified": 1561874506, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507020267", "source_type": "github"}, {"comment_id": 76, "body": "@imachug If needed it can also be merged into Python 2. Do you think this is needed? If not, I will close this issue.", "added": 1561901388, "modified": 1561901393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507049552", "source_type": "github"}, {"comment_id": 77, "body": "Ok", "added": 1561901723, "modified": 1561901723, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507049921", "source_type": "github"}, {"comment_id": 78, "body": "@HelloZeroNet When will ZeroBundle for Python 3 be ready?", "added": 1561902596, "modified": 1561902596, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057#issuecomment-507050778", "source_type": "github"}], "1604067343_mirrored_filips123_github": [{"comment_id": 79, "body": "@0polar @rllola I added BitTorrent to list. I also added [Fediverse](https://en.wikipedia.org/wiki/Fediverse) protocols to list.", "added": 1563105096, "modified": 1563105096, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2062#issuecomment-511209150", "source_type": "github"}, {"comment_id": 80, "body": "@blurHY IPFS is more \"standalone\", for storage of large files. IPLD is data model for integrating IPFS with other protocols.", "added": 1568625566, "modified": 1568625566, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2062#issuecomment-531752727", "source_type": "github"}, {"comment_id": 81, "body": "IPFS is already functional app/protocol for storing files. IPLD is \"data model of the content-addressable web\" which is made to integrate multiple protocols with data models.", "added": 1568626393, "modified": 1568626393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2062#issuecomment-531756962", "source_type": "github"}], "1604067346_mirrored_filips123_github": [{"comment_id": 82, "body": "@0polar I agree that some things are not standard but this is because there is currently no popular and good standard for such apps.\r\n\r\n> Custom diff protocol\r\n\r\nWhat do you mean with that?\r\n\r\n> WebSocket as RPC\r\n\r\nWhy is this not good? WebSockets are standard. And they are actually connected via HTTP. Other solutions (just HTTP) are slower and not so good for websites that always needs to be connected to ZeroNet instance.", "added": 1562484390, "modified": 1562484417, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063#issuecomment-508988354", "source_type": "github"}, {"comment_id": 83, "body": "> Half truth. WebSocket is not popular as normal HTTP. HTTP are included in almost every standard library, but WebSocket not.\r\n\r\nThey are [standardized](https://html.spec.whatwg.org/multipage/web-sockets.html).\r\n\r\nI agree that they **currently** sometimes don't have a library, but this is because they are new. In the (probably near) future, they will be integrated into more things. And don't forget that HTTP also didn't have many libraries when it was invented.\r\n\r\nDo you have any special concerns about the availability of WebSocket library? There are WebSocket clients for [Node.js](https://github.com/websockets/ws), [Python](https://github.com/websocket-client/websocket-client), [PHP](https://github.com/ratchetphp/Pawl), [C](https://github.com/warmcat/libwebsockets), [C++](https://github.com/zaphoyd/websocketpp), [C#/.NET](https://github.com/Marfusios/websocket-client), [Rust](https://docs.rs/websocket/0.22.4/websocket/), [Ruby](https://github.com/faye/faye-websocket-ruby), [Go](https://github.com/gorilla/websocket) and [Java](https://github.com/TooTallNate/Java-WebSocket). For even bigger list see [Awesome WebSockets](https://github.com/facundofarias/awesome-websockets).\r\n\r\n---\r\n\r\nAlso, I'm currently creating a WebSocket based ZeroFrame client for local programs in multiple different languages. It will enable usage of ZeroNet features in command programs, desktop apps and classic servers.\r\n\r\nCurrently, I'm creating JavaScript client (for Node.js and Electron). It's currently available as [GitHub Gist](https://gist.github.com/filips123/14d5979db24b20cdcfd40e3faacf1033), but it will be also available as NPM package (probably) next week. See [my ZeroTalk topic](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1562093171_1LFu1BTScmY82HHtg3TY2jAuSrCYNsQWEY) for details.\r\n\r\nI'm also creating clients for Python and PHP. They will probably be available this month. And I will also try to create clients for other languages soon.\r\n\r\n---\r\n\r\n> Long connections are stateful, stateful means potential hazard to to concurrency.\r\n> WebSocket should be opt-in.\r\n\r\nDo you also have any special concerns here? What would you recommend instead?", "added": 1562486243, "modified": 1562486406, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063#issuecomment-508990164", "source_type": "github"}, {"comment_id": 84, "body": "> remote procedure call from client to server\r\n\r\nBut ZeroFrame also calls a client from the server. This is not possible with HTTP or REST.\r\n\r\nAnd I still think that using WebSockets is not reinventing the wheel. WebSockets are also supported in most languages and tools so so you won't lose most existing tools.", "added": 1562488770, "modified": 1562488770, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063#issuecomment-508992628", "source_type": "github"}], "1604067349_mirrored_filips123_github": [{"comment_id": 85, "body": "@HelloZeroNet Why it doesn't detect that UI server port is already taken also then also stop file server?", "added": 1562242430, "modified": 1562242430, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2065#issuecomment-508515207", "source_type": "github"}, {"comment_id": 86, "body": "In this case, there should be an option to disable the UI server and web interface.", "added": 1562242872, "modified": 1562242872, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2065#issuecomment-508517349", "source_type": "github"}], "1604067373_mirrored_filips123_github": [{"comment_id": 87, "body": "I have some idea how this could be implemented:\r\n\r\n1. This should be implemented as a plugin which would overwrite all ZeroNet functions where cryptography operations with user's private key are used. With this I mean all functions that are using user's private key (currently from `users.json`), like signing, encrypting... @HelloZeroNet Which functions are actually that?\r\n\r\n2. Instead of relying on the private key from `users.json` and signing/encrypting data directly in them, that functions should forward a request to client-side Wrapper code.\r\n\r\n3. The Wrapper should then finish request from the backend (signing/encrypting) and forward result back to the backend. The result should only contain signing/encrypting data, not the actual private key.\r\n\r\n4. Backend functions should verify data from the Wrapper and return them as normal.\r\n\r\nThen, the Wrapper code could use any method for actual signing/encrypting of that data:\r\n\r\n* Browser extension\r\n* Client-side prompt\r\n* Hardware wallet\r\n* ...\r\n\r\nThis should be pretty secure. In case if the backend is malicious, users should see what they are signing before the actual signing. And because everything would happen on client-side, backend won't be able to do arbitrary operations with the private key. In case if the client is malicious, backend should verify if the signature is correct.", "added": 1569774173, "modified": 1569774173, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2083#issuecomment-536332779", "source_type": "github"}, {"comment_id": 88, "body": "@rllola This won't be directly usable, as I would like to do this in client-side with JavaScript. But it will be good as an example how communication with Ledger works and what it is required to sign ZeroNet data. Also, can you explain it a bit more?\r\n\r\nAlso, I will probably start at backend-to-wrapper communication and then add possibility to add hardware wallets or other signing methods. Developing this directly for Ledger might be a bit harder for me as I don't have any hardware wallet at home :)", "added": 1569857376, "modified": 1569857985, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2083#issuecomment-536690948", "source_type": "github"}], "1604067372_mirrored_geekless_github": [{"comment_id": 89, "body": "> This intervention unloads ads that are in the .1% of bandwidth usage,\r\n.1% of CPU usage per minute, and .1% of overall CPU time. The current\r\nnumbers are 4MB network and 60 seconds CPU, but may be changed as more\r\ndata is available.\r\n\r\nThey will block ad iframes that have been detected to use an \"egregious amount of system resources\". I'm not sure how will this look like but they already created patch and commit so someone can look to detection code.\r\n\r\nThis blocking of ads is again one of the Google decisions to make web better... \ud83d\ude02 But I'm sure they won't block ads on YouTube.", "added": 1562732818, "modified": 1562764702, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2086#issuecomment-509943715", "source_type": "github"}], "1604067374_mirrored_geekless_github": [{"comment_id": 90, "body": "I think that easiest and fastest way to at least enable `.zeronet` domains it to use [Proxy PAC](https://en.wikipedia.org/wiki/Proxy_auto-config) file.\r\n\r\nUsers need to add this Proxy PAC file to their system or browser. This will use `localhost:43110` for all hosts ending with `.zeronet`.\r\n\r\n```js\r\nfunction FindProxyForURL(url, host) {\r\n  if (shExpMatch(host, '*.zeronet')) {\r\n    return 'PROXY localhost:43110'\r\n  }\r\n\r\n  return 'DIRECT'\r\n}\r\n```\r\n\r\nThen the ZeroNet code needs to be updated. There are currently a few problems which need to be resolved:\r\n\r\n* Server will throw `Error 403: Invalid host`. The server also needs to accept hosts that end with `.zeronet` (maybe there should also be some additional security checks). There is already 4ffd6427323945fcba734f60209c0d0dbdb7b4d5 but it needs to be enabled by default and with more features (support for `.zeronet`).\r\n* Code needs to be updated to ignore `.zeronet` at the end of the address. If not, the site will not be found.\r\n* Addresses will turn into lowercase, so they will become invalid. There needs to be some solution for that. There is also PR #2053 for multiple cryptographies and some of them might support case insensitive addresses.\r\n* There could be problems with UiPassword or Multiuser plugin. Users who use those plugins will need to input password for every site they visit (because cookies will be only for one domain). See my issue #2050 for better user management.\r\n\r\nThis is for the beginning. It could be annoying for users to set Proxy PAC file, so there also needs to be some more automated solution.\r\n\r\nThis could include some registry tweaks and some other settings to automatically use ZeroNet for all `.zeronet` domains system-wide.\r\n\r\nAlso, can we register `.zeronet` TLD? This would make sure no other would use it.\r\n\r\n---\r\n\r\n> The proposed second-level domain schemes:\r\n\r\nThere should also be support for other domain systems, as suggested in my issue #2049. But domain scheme structures should be almost the same.\r\n\r\n> Cert-based, as proposed in #1696: .user.zeronet\r\n\r\nWhat if there is some ID provider that would use another domain system, for example, Ethereum Name Service (`.eth`)?\r\n\r\nBased on your examples, cert-based domains are `http://geekless.kxoid.user.zeronet` which is user `geekless` on provider `kxoid.bit`. But what if there is user `geekless` on provider `kxoid.eth` (note `.eth`)? How would you write this?\r\n\r\n> Opennic-based (#104): .opennic.zeronet\r\n\r\nHere it would maybe be better to just use `.zeronet`. See my https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-504666540 for why.\r\n\r\n> Onion-based (the protocol proposal hasn't been published yet): .onion.zeronet\r\n\r\nI don't know if support for this is actually needed. Onion domains are random, so there's probably no benefit from using it instead of a regular Bitcoin address.\r\n\r\nBut if there could be some benefit, maybe similar to that with classic DNS, it should still be supported.\r\n\r\n---\r\n\r\n> We can use something similar to http://zero/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/ or http://zeronet/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/, and it looks as a working option as long as we are able to provide the domain isolation with iframes.\r\n\r\nI personally more like `.zeronet` domain than `http://zero/` hostname. It looks more clear and more valid because ZeroNet sites should be different origins.\r\n\r\nI hope there is some solution for turning URL into lowercase. If there's not, we would need to use some other solution.", "added": 1562699559, "modified": 1562699559, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509829391", "source_type": "github"}, {"comment_id": 91, "body": "> We should have $185000 and be some kind of legal entity (company or organization).\r\n\r\nOh...\r\n\r\n> Simple & silly solution: Just ignore the address case. The probability of two addresses matching case-insensitive but not totally equal is small enough to ignore it.\r\n\r\nThis would be ok it it would be possible to implement.\r\n\r\n> Though I have no idea how onion domains could be used in ZeroNet (waiting for @geekless'es proposal), there's a thing like vanitygen there. facebookcorewwwi.onion would like to have a word with you.\r\n\r\nYes, vanity domains could be useful if you already have them.", "added": 1562732115, "modified": 1562732115, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509940345", "source_type": "github"}, {"comment_id": 92, "body": "@imachug Are that lowercase addresses actually valid Bitcoin addresses (because of invalid chars and checksum)? Won't wallets prevent people to send Bitcoin to invalid address?\r\n\r\nI think that site address should only be shown in lowercase in URL. In the UI (sidebar...) and ZeroFrame commands (`siteInfo`) should still be in mixed-case.", "added": 1562737827, "modified": 1562737862, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509972517", "source_type": "github"}, {"comment_id": 93, "body": "> However, we still have a small problem that you can't donate directly to site address anymore\r\n\r\nCould real site address still be displayed in UI, sidebar and ZeroFrame commands?", "added": 1562738168, "modified": 1562738168, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509974576", "source_type": "github"}, {"comment_id": 94, "body": "@imachug Will there be Python 3 version?", "added": 1562761813, "modified": 1562761813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-510111255", "source_type": "github"}, {"comment_id": 95, "body": "> That assumes a bit much. Is there no alternative like .eth?\r\n\r\nI'm currently working on ENS support so this will be supported in near future.\r\n\r\n> $185,000 is a hefty price, a few yearly salaries or bug bounties fitting into that bill. Not to mention it's centralized and clearnet reliant. Am I wrong?\r\n\r\nYou mean this for `.zeronet` TLD, right? I think that this is very big open source project. But it's not really needed. It's just to standardize things and prevent others from taking this TLD, like Amazon did with `.zero`?\r\n\r\n> If I am, maybe .zn is better for shortness/convenience?\r\n\r\nIt would conflict with two-tetter TLDs for countries.", "added": 1564241690, "modified": 1564241690, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-515704556", "source_type": "github"}, {"comment_id": 96, "body": "@HelloZeroNet @geekless It might be possible to register `.zeronet` TLD for as a special-use domain for free. See https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-516552136 for details.", "added": 1564502775, "modified": 1564502775, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-516552665", "source_type": "github"}, {"comment_id": 97, "body": "There is a new [browser extension](https://github.com/sprite-1/zeronetloader) by @sprite-1 which adds support to access ZeroNet domains using URL prefixes or custom TLDs. There is also [ZeroTalk](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1568783263_1Q5f5jQxn2duHpJCCdWhYCkeM8pGagUDdp) topic about it.\r\n\r\nWays of accessing are described in its README. However, the extension doesn't load site to the original URL. Instead, it just redirects them to `http://127.0.0.1:43110`.\r\n\r\nI think that ZeroNet should first standardize one specific way of accessing ZeroNet domains. Then this (or any other extension or another program) needs to be modified to use that specific way. It would also be good it could leave original URLs. Then this extension should be made \"official\" along with other programs for accessing ZeroNet domains.\r\n\r\n---\r\n\r\nThere is also [another extension](https://github.com/goldenratio/zeronet-protocol-crx) which uses PAC file so URL can stay the same. However, it is only available for Chrome and abandoned. Some of its code could maybe also be reused for a new extension.", "added": 1568809465, "modified": 1568809624, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-532735960", "source_type": "github"}, {"comment_id": 98, "body": "> Mentioned sprite add-on tries to support all but that can cause more problems then it solves.\r\n\r\nWhy do you think so?\r\n\r\nBecause there is currently no standard, all options should be possible. When standard will be created, only is should be enabled.", "added": 1571157041, "modified": 1571157041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-542368926", "source_type": "github"}, {"comment_id": 99, "body": "@sprite-1 Can you add configuration page to let users manage which keywords, addresses and TLDs should be rewritten? This would be useful if the user does not need all possibilities or you forgot some of them. It should have the following option:\r\n\r\n* **Keywords:** `[keyword] [address]` (user chooses `[keyword]`) -> `http://127.0.0.1:43110/[address]` (example `zn 1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F`)\r\n\r\n* **Keywords:** `[host]/[address]` (user chooses `[host]`) -> `http://127.0.0.1:43110/[address]` (example `http://zero/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F`)\r\n\r\n* **Domain without stripped TLD:** `*.bit`, `*.yo`, `*.yu`...\r\n\r\n* **Domain with stripped TLD:** `*.zero`, `*.zeronet`...", "added": 1571158034, "modified": 1571158058, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-542375125", "source_type": "github"}, {"comment_id": 100, "body": "@krzysztof113 This is not what that plugin is meant for. And how would you actually do this with a plugin?\r\n\r\nThis needs to be done with ZeroNet changes. Public ZeroNet instance should accept URL like `talk.zeronetwork.bit.example.com` where `talk.zeronetwork.bit` is ZeroNet domain and `example.com` is proxy URL. The instance should then extract ZeroNet domain, lookup site and serve it. This can't be done with plugin.\r\n\r\nFor local ZeroNet instances, `talk.zeronetwork.bit.zeronet` is enought. It should be handled by local ZeroNet instance and can be done with proxy PAC file, custom DNS or DoH server, system program or browser plugin. However, all cases would require ZeroNet changes to handle server on custom URLs.\r\n\r\nSee this issue, issues linked from this issue and issues that link this issue for details.", "added": 1571158460, "modified": 1571158460, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-542377663", "source_type": "github"}, {"comment_id": 101, "body": "I created a comment about different ways of accessing ZeroNet and ways of implementing that in https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544664709.", "added": 1571674596, "modified": 1571674596, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-544664989", "source_type": "github"}], "1604067418_mirrored_blurHY_github": [{"comment_id": 102, "body": "@blurHY Can you develop IPZN as normal ZeroNet plugin instead? See also #2062.", "added": 1564386017, "modified": 1564386017, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2090#issuecomment-515940710", "source_type": "github"}], "1604067382_mirrored_6543_github": [{"comment_id": 103, "body": "See also #2087.\r\n\r\nIt would be good to standardize and registered almost all parts of ZeroNet. This includes standardization of ZeroNet protocol (as new RFC) and `zero://` protocol, `.zeronet` TLD and port `43110` (at IANA).\r\n\r\nProblem is that some of that standardizations require to register a company and pay a large amount of money. For example, to register official TLD you need to pay $185000.", "added": 1563447489, "modified": 1563447489, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-512827310", "source_type": "github"}, {"comment_id": 104, "body": "It might be possible to register `.zeronet` domain as \"Special-Use Domain\". I don't know if there is also a requirement to pay for that but it is based on RFCs.\r\n\r\nFor example, TLD `.onion` is registered for special use with [RFC 7686](https://tools.ietf.org/rfc/rfc7686.txt).\r\n\r\nSame should be done (if possible) for `.zeronet`. It should not be hard to write that RFC. For example `.onion`'s RFC contains only 7 pages and actual RFC text is only on 4 pages.", "added": 1564502679, "modified": 1564502679, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-516552136", "source_type": "github"}, {"comment_id": 105, "body": "Here are also my thoughts about different ways about accessing ZeroNet and implementing them (see #2231 and #2087). I commented this here because there are currently quite some ZeroNet issues about DNS/protocols/schemes... and I think that this one is currently the most suitable for this type of comment.\r\n\r\n---\r\n\r\n## Ways of accessing ZeroNet\r\n\r\n### zero:// scheme\r\n\r\n* Simpler to implement than `z*://` schemes.\r\n* A bit harder to implement than `.zeronet` TLD.\r\n* Is almost schematically valid.\r\n* But it in conflict with support for protocols other than HTTP and ZeroNet communication protocol.\r\n* Does not allow using public ZeroNet instances.\r\n\r\n### z*:// schemes\r\n\r\n* Could be `zhttp://` for HTTP, `zhttps://` for HTTPS, `zftp://` for FTP...\r\n* Harder to implement as each custom scheme would need to be handled separatly in the browser and every program you want to use it (local programs, CURL, API clients...).\r\n* More schematically valid as it correctly separates different access protocols.\r\n* Still does not allow using public ZeroNet instances.\r\n\r\n### .zeronet TLD\r\n\r\n* Simpler to implement (see the second part of this comment).\r\n* Can be used in any program without too mich changes (also see second part of comment).\r\n* Schematically valid as it separates all ZeroNet related sites with custom TLD.\r\n* Allows using public ZeroNet instances with `https://address.public.zeronet.com`.\r\n* Similar way is also used in Tor (`.onion`).\r\n\r\n## Ways of implementing this\r\n\r\n### Extensions\r\n\r\n* Easy for users to install and use.\r\n* Not hard to do as extension can actually install/use PAC file.\r\n* But you have to pay for Google and Microsoft store (or hire some existing developer to publish it for you).\r\n* Not well supported on mobile (but you can use Firefox for Android which support extensions).\r\n\r\n### PAC file\r\n\r\n* A bit harder for users.\r\n* Very easy to implement.\r\n* Not supported in all browsers but it can also be handled by extensions.\r\n* Can also be a global setting (would be useful for ZeroNet applications outside the web).\r\n\r\n### Proxy / Local DNS / Local DoH\r\n\r\n* Forward all traffic through DNS server which then decides if it is handled by ZeroNet or clearnet.\r\n* Can also be a global setting.\r\n* Can be easy to implement if you already have DNS server library for Python.\r\n\r\n### Local system program/app / System-wide configuration\r\n\r\n* Can be used for system-wide settings.\r\n* Can be used on macOS, mobile or systems without other easy ways systems.\r\n* Can be actually the only wrapper around other methods (PAC file, DNS server).\r\n\r\n---\r\n\r\nFor the way of accessing ZeroNet, I would most like `.zeronet` TLD as it is not hard to implement and also serves its purpose. This would also allow accessing public ZeroNet instances `https://address.public.zeronet.com` and even directly accessing ZeroNet sites with DNSLink and CNAME/A record (part of this is #2214 but the other half still needs to be implemented - can be probably implemented by @imachug in \"Road to better sandbox\" series).\r\n\r\nFor the way of implementing this, I'd start with PAC file as it is also the easiest. Then it should be expanded to browser extensions (which can actually just be wrappers around PAC files) and then custom DNS server and system programs. But first of all, the ZeroNet itself should support handling all this things. This is something that @imachug is currently working on.", "added": 1571674556, "modified": 1571674556, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544664709", "source_type": "github"}, {"comment_id": 106, "body": "@imachug It is not so hard to install an extension. The extension can already pack proxy inside it so normal users don't need to configure it manually. See [`proxy.onRequest`](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/proxy/onRequest) for Firefox API but I think that Chromium also supports similar thing.\r\n\r\nSo it would actually look something like this: you download a ZIP, extract it and run ZeroNet.exe. ZeroNet asks you to install some random extension. You click the link and press \"Install\" button. You wait for the extension to get installed. Hooray, ZeroNet now works.\r\n\r\nJust PAC file is another thing, but it doesn't need an extension. It should be supported first, but soon after that, the extension should be made.", "added": 1571677862, "modified": 1571677870, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544686777", "source_type": "github"}, {"comment_id": 107, "body": "That's why I said that extension should be **one of** the supported solutions. Because most users (desktop) can use it and it is not very hard to do, it should be one of the first implementations.\r\n\r\nFor mobile users, ZeroNet is actually already not so optimized, so this won't be such drawback. But in the future, there could be some native Android app to do this (same for macOS). Currently, you can use Firefox or another Android browser with extensions.\r\n\r\nAnd even if companies (Microsoft and Google) require you to pay for to register developer account, you may still be able to publish it for free. I'm sure that there is at least one active and trusted ZeroNet user/developer which has a developer account and would be happy to publish extensions for you.\r\n\r\n", "added": 1571678794, "modified": 1571678794, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544692761", "source_type": "github"}, {"comment_id": 108, "body": "@Merith-TK I will maybe start working on custom Firefox/Tor Browser bundle with support for ZeroNet. But  I don't promise anything because I don't have much time.\r\n\r\nBut really, we should first check if there is any existing extension developer which can publish an extension to Web Store so there won't be any need for that \"hacky solutions\". But they would probably be needed (and implemented) some time later.", "added": 1571754329, "modified": 1571754453, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545068034", "source_type": "github"}, {"comment_id": 109, "body": "@Merith-TK It doesn't support `.zeronet` TLD. Also, because support for all these unofficial ways would not be really needed, this should be enough:\r\n\r\n```js\r\nfunction FindProxyForURL(url, host) {\r\n  if (shExpMatch(host, '*.zeronet')) {\r\n    return 'PROXY localhost:43110'\r\n  }\r\n\r\n  return 'DIRECT'\r\n}\r\n```", "added": 1571760341, "modified": 1571760341, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545108454", "source_type": "github"}, {"comment_id": 110, "body": "@Merith-TK This is the point. `.bit` domains should not be handled separately but under special `.zeronet` TLD. This will make them much easier to handle than each one separately and would also prevent collisions with normal `.bit` domains.\r\n\r\n* Addresses: `http://1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D.zeronet`\r\n* Namecoin domains: `http://Talk.ZeroNetwork.bit.zeronet`\r\n* ENS domains: `http://example.bit.zeronet`\r\n* etc.\r\n\r\nSee https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509829391 for derails what needs to be done to implement this.", "added": 1571761047, "modified": 1571761047, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545112758", "source_type": "github"}, {"comment_id": 111, "body": "@Merith-TK See [#2087 (comment)](https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509829391) for details what needs to be done to implement this:\r\n\r\n> Then the ZeroNet code needs to be updated. There are currently a few problems which need to be resolved:\r\n> \r\n> * Server will throw `Error 403: Invalid host`. The server also needs to accept hosts that end with `.zeronet` (maybe there should also be some additional security checks). There is already [4ffd642](https://github.com/HelloZeroNet/ZeroNet/commit/4ffd6427323945fcba734f60209c0d0dbdb7b4d5) but it needs to be enabled by default and with more features (support for `.zeronet`).\r\n> * Code needs to be updated to ignore `.zeronet` at the end of the address. If not, the site will not be found.\r\n> * Addresses will turn into lowercase, so they will become invalid. There needs to be some solution for that. There is also PR #2053 for multiple cryptographies and some of them might support case insensitive addresses.\r\n> * There could be problems with UiPassword or Multiuser plugin. Users who use those plugins will need to input password for every site they visit (because cookies will be only for one domain). See my issue #2050 for better user management.\r\n\r\n\r\n", "added": 1571761710, "modified": 1571761735, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545116677", "source_type": "github"}, {"comment_id": 112, "body": "@Merith-TK I agree with you. But I'm talking about \"official solution\", not about \"one of the community versions\". Yes, *currently* your PAC file is correct. But when ZeroNet implements official proxy/domain support, my version should be used.", "added": 1571762268, "modified": 1571762268, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-545120081", "source_type": "github"}, {"comment_id": 113, "body": "> So, extensions are supported by most browsers but Chrome and Edge will make them a pain if we don't use a developer acccount.\r\n\r\nThere are currently two ZeroNet browser extensions.\r\n\r\nOne is by @goldenratio ([here](https://github.com/goldenratio/zeronet-protocol-crx)) and it uses PAC file so URLs are correctly rewritten. It was published to Chrome Web Store once ago, but it appears that it was taken down. It is also very outdated and does not support other browsers.\r\n\r\nThe newer extension is by @sprite-1 ([here](https://github.com/sprite-1/zeronetloader)) and it doesn't use PAC file so tabs are just redirected. It not discontinued and supports multiple browsers. However, However, it's author also don't have Google developer account so it is not published to Chrome Web Store.\r\n\r\nIn my opinion, these two extensions should be merged with each other to provide the best things of both. Then that extension should be published as an official ZeroNet browser extension.\r\n\r\n> As for mobile browsers, we could make a dedicated app for them.\r\n\r\nFor mobile, there could be a dedicated app for ZeroNet.\r\n\r\nOne possible way how it could function is that it could somehow add ZeroNet as a proxy to system-level (so it would be possible to use it in chrome).\r\n\r\nAnother possible way is to create a browser app which would only add ZeroNet proxy to it. I think that it is not very hard to implement a browser with [GeckoView](https://github.com/mozilla/geckoview) and [Android Components](https://github.com/mozilla-mobile/android-components) or to [Firefox Preview](https://github.com/mozilla-mobile/fenix) fork. The reason why using GeckoView and not default system WebView is that we shouldn't be another \"decentralized\" project which uses browser engine from Google.\r\n\r\n---\r\n\r\nAlso, I think that, at least for some time, ZeroNet should support both normal access from `https://127.0.0.1:43110` and proxied access with extensions. The reason is that some users don't want (or can't) set up \"proxy\" (or whatever will be used) and it is easier to just use current ZeroNet accessing way.", "added": 1572073522, "modified": 1572073522, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546589125", "source_type": "github"}, {"comment_id": 114, "body": "@imachug Yes but... don't extensions actually use the same browser APIs as PAC file?", "added": 1572095960, "modified": 1572095960, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546616983", "source_type": "github"}, {"comment_id": 115, "body": "Can `proxy` APIs affect WebSockets?", "added": 1572097480, "modified": 1572097480, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546619499", "source_type": "github"}, {"comment_id": 116, "body": "Nice! But why PAC files don't work?", "added": 1572098345, "modified": 1572098345, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-546620844", "source_type": "github"}], "1604067384_mirrored_6543_github": [{"comment_id": 117, "body": "There is CoinHive alternative called CoinIMP.\r\n\r\nBut it also obviously needs a connection to the internet. It's not possible to mine public cryptocurrency without it.", "added": 1563476275, "modified": 1563476275, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2101#issuecomment-513004569", "source_type": "github"}, {"comment_id": 118, "body": "@Thunder33345 To mine cryptocurrency completely decentralized via the P2P network, you need to have a full node. This means that you have to download the whole blockchain which is very big.\r\n\r\nAll that JS website mining solutions are using clernet proxy to allow users accessing blockchain and mining cryptocurrencies without downloading it.\r\n\r\nIf you would want complete P2P solution, all users that would like to mine Monero as donations would need to download almost 65 GB of Monero blockchain.", "added": 1563477837, "modified": 1563477837, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2101#issuecomment-513011672", "source_type": "github"}], "1604067424_mirrored_styromaniac_github": [{"comment_id": 119, "body": "Are you sure that it is no longer in development? Latest commit was [2 days ago](https://github.com/webtorrent/webtorrent).\r\n\r\nMain \"problem\" is that WebTorrent is meant for websites (front-end) so it's written in JavaScript, and have no Python library. But it is very similar to BitTorrent. The only difference is that WebTorrent uses WebRTC and WebSockets.\r\n\r\nPython can also [support](https://github.com/aiortc/aiortc) WebRTC so it should not be hard to also support WebTorrent.\r\n\r\n> WebTorrent uses the same protocol as BitTorrent but uses a different transport. WebTorrent primarily relies on WebRTC connections, while BitTorrent uses TCP connections and UDP datagrams directly.", "added": 1564837424, "modified": 1564837424, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2120#issuecomment-517935466", "source_type": "github"}], "1604067433_mirrored_filips123_github": [{"comment_id": 120, "body": "> As far as I know this behavior is going to be modified as we are going to explicitly ask to activate plugins inside the config file. You might be able to specify the order then.\r\n\r\nYes, but it would be better to also allow plugins themselves to define when they should be executed. So something like `@PluginManager.registerTo('SiteManager', priority=50)` where priority should be an optional argument (and set to 50 by default) to maintain backwards compatibility. And if multiple plugins have the same priority, they should be executed depending on alphabetical order or order in the config file.", "added": 1565197955, "modified": 1565197997, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-519251229", "source_type": "github"}, {"comment_id": 121, "body": "@HelloZeroNet @rllola There is an issue for my plugin. Plugin `TranslateSite` will be called before my `ENS`. It depends on `path` argument of `actionSiteMedia` to get site, but because my plugin is still not executed, it will contain `.eth` domain instead of the address. It will fail and site content won't load. Although this is a problem with `TranslateSite` and `ENS` it could probably happen with any other plugins.\r\n\r\n> As it should only do something if it catch a domain name ending with .bit and if I am not wrong ENS if for Ethereum and therefore end with .eth.\r\n\r\nI fixed this with also loading plugin on `SiteManager` that also checks for `.eth` domains. And all this should work perfectly except above problem.", "added": 1565206158, "modified": 1565206158, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-519291917", "source_type": "github"}, {"comment_id": 122, "body": "Here is my plugin: [ENS](https://github.com/HelloZeroNet/ZeroNet/files/3482738/ENS.zip)\r\n\r\nBecause there are currently no ZeroNet ENS domains, I modified it for testing to return ZeroHello site address at domain `example.eth`. You should test that domain.\r\n\r\nAlso, to use it you need to install [my version of Web3.py](https://github.com/filips123/web3.py/tree/patch-for-zeronet) which contains changes that are currently waiting to be merged into Web3.py. Also, you can install some missing Python wheels (if needed) from [here](https://www.lfd.uci.edu/~gohlke/pythonlibs/).", "added": 1565271021, "modified": 1565276923, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-519592520", "source_type": "github"}, {"comment_id": 123, "body": "@rllola Thank you for that. Unfortunately, I will only be able to test this next Sunday, but you can also test this with code I provided.\r\n\r\n> you might want to add it too in your SiteManagerPlugin class.\r\n\r\nWhat do you mean with that? Can you provide now details?\r\n\r\n**Update:** Do you mean that I should add the same change as your in my own plugin?", "added": 1565513803, "modified": 1565513873, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-520222268", "source_type": "github"}, {"comment_id": 124, "body": "@HelloZeroNet My plugin now works with that fixes so I will close this issue. I will soon create PR for the plugin.", "added": 1566226353, "modified": 1566226353, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-522685499", "source_type": "github"}, {"comment_id": 125, "body": "@rllola No, it doesn't work. It has the same problem as before with disabled `Zeroname`. Log output is [here](https://pastebin.com/BNyG7P17).", "added": 1566408944, "modified": 1566408944, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-523638267", "source_type": "github"}], "1604067436_mirrored_filips123_github": [{"comment_id": 126, "body": "I have some idea how this could be implemented without modifying ZeroNet code too much (as a plugin):\r\n\r\n1. When a user wants to create storage (so probably on first ZeroNet startup), the plugin creates a data site which is cloned from some template with basic storage structure (JSON). The plugin should then store the site address.\r\n\r\n2. The plugin registers a few ZeroFrame commands for accessing storage (get, set, unset). That commands can be used by sites to access storage.\r\n\r\n3. When a site wants to access storage, it needs to call one of the available commands.\r\n  Data should probably be accessed as `key->value` database (exact structure should be determined later). Subkeys should be accessed with dot as separator (`one.second.third`) (or some other character if needed) and then converted into proper JSON objects.\r\n  Each `key-value` pair should also have additional details. This details should be storage type either encrypted or unencrypted), reading permission (to only allow some sites to read data) and writing permission (to only allow some sites to write data). This details should be site by site that initially created the data (or in some other way).\r\n\r\n4. Site-specific data should be separated from general data. This could be done with specific subkeys.\r\n  For example, general/common public data could be accessed with `general.public`. General/common private data could be accessed with `general.private`. Site-specific data could be accessed with `sites.ADDRESS` for other site and `sites.current` for the current site, with same options for public and private data.\r\n\r\n5. To lookup data, the plugin should access data site. Data should be stored in JSON files. How exactly should file and directory structure look like should also be determined later.\r\n\r\nThis approach has some advantages:\r\n\r\n* Data are stored in a decentralized way\r\n* Data are accessed in a centralized way\r\n* It doesn't require drastic ZeroNet modification\r\n\r\nHowever, there are also some disadvantages:\r\n\r\n* Data site would need seeders in order to be public. This could be especially problematic for newly-created accounts/sites.\r\n* There are currently no ways to access other users' data. To do this, there would need to be some public index of data sites. Then plugin should access data from other user's site, not the current one.", "added": 1568811717, "modified": 1568811717, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2129#issuecomment-532752330", "source_type": "github"}, {"comment_id": 127, "body": "> since zeronet has no way of locally excluding files(or from what i know), or any forms of partial download/ignore mandatory/site's json\r\n\r\nZeroNet supports optional files which are downloaded only if needed. This means that data should be split across multiple files so the user would only need to download and save one specific file.\r\n\r\n> idea is just to use the public auth address\r\n\r\nIs this possible? If it is, this should be the best solution.", "added": 1568992771, "modified": 1568992771, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2129#issuecomment-533659860", "source_type": "github"}], "1604067485_mirrored_filips123_github": [{"comment_id": 128, "body": "@HelloZeroNet What if plugin loader would check if plugin needs additional dependencies from `requirements.txt` file and if that dependencies are installed and not load plugin if they aren't.\r\n\r\nAlso, that binary dependencies are problem but it can be partially solved with installing them from thrid-party (which I linked in earlier comment).\r\n\r\nFor dependencies size, this could maybe be solved with special lightweight version of Web3.py which would contain only parts required by ENS. But I'm not sure how much benefit would be from that and this is also very hard to do.", "added": 1566288241, "modified": 1566288241, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-522964260", "source_type": "github"}, {"comment_id": 129, "body": "@rllola I don't know. But ENS support, as well as support for other DNS systems, could be one of the main parts of ZeroNet in the future. So they should probably be enabled by default.\r\n\r\nAlso, the repository already contains some plugins that are not really required, but still useful. And if ENS plugin is only installed, but not enabled, it doesn't need installed dependencies so size could be small.\r\n\r\n---\r\n\r\nSolution for this could be to store plugins in different repositories (except for low-level networking and other strictly required plugins) and automatically install them on the first startup. This could also be integrated with the new plugin management system. This would still support all features, but keep repository small.", "added": 1566402656, "modified": 1566402656, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-523600768", "source_type": "github"}, {"comment_id": 130, "body": "@imachug Yes, something like this. And it could maybe even use some parts of PIP and PyPI for this.", "added": 1566405412, "modified": 1566405412, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-523617253", "source_type": "github"}, {"comment_id": 131, "body": "@rllola\r\n\r\n> I am more for a plugin store. I also believe some plugins should be removed. Some are not up-to-date and can be unsafe to use.\r\n\r\nI agree with that, but this could be a complicated process so it should be done later in (near) future. Until then, this and other important plugins (PeerMessage, BackgroundProcessing) should probably be merged into the repository.\r\n\r\n> Also your plugin use third-party providers like infura. Could you code something like for Zeroname ? You register all the Zeronet addressed registered in a merger site ?\r\n\r\nUsing Infura (or local RPC/IPC provider if available) is the only easy option. Also, users can use their own ETH node with ZeroNet which is the most decentralized way available. Alternatively, if they don't trust Infura, they can also specify other providers.\r\n\r\nAlso, how should that Zeroname-like site look like? If it would be like Zeroname, the owner of that site would have full access to modify or delete all domains so it would be again centralized.", "added": 1566407657, "modified": 1566407657, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-523630500", "source_type": "github"}, {"comment_id": 132, "body": "> I don't use them. Is there people using those plugins ?\r\n\r\nPeerMessage plugin is really useful and it is already used by some big sites, like KxoID and other real-time communication sites. @imachug can probably give you more examples of usage and details about it.\r\n\r\n> If it is the only option to have a third-party is it really worth it ? People are already not using Namecoin node to resolve .bit and it easier to have it work than Ethereum.\r\n\r\nPeople may already have full-node Ethereum wallet installed, which can be used with this plugin.\r\n\r\n> Yeah that's how it works for .bit domain name and people are a bit pissed about that.\r\n\r\nSome users don't like this because @HelloZeroNet has whole control for it and some already proposed to move to something else. So using it also for ETH wouldn't be really step-forward. It would be better to sue some other solution.\r\n\r\n> And if people don't trust it they can have their own node ?\r\n\r\nYes, the local node is used if available. But if not, it currently uses Infura.", "added": 1566412557, "modified": 1566412557, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-523659002", "source_type": "github"}, {"comment_id": 133, "body": "@imachug I just got one idea. Could PeerMessage be used for decentralized ENS support that would work something like KxoID.", "added": 1566444904, "modified": 1566444904, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-523769539", "source_type": "github"}, {"comment_id": 134, "body": "## How to register ZeroNet ENS domain\r\n\r\n### Using ENS Manager website\r\n\r\n**This is not available until ensdomains/ui#23 is merged and released!**\r\n\r\n1. Open [ENS Manager website](https://app.ens.domains/).\r\n\r\n2. Buy domain if you don't have it already.\r\n\r\n3. Make sure that your domain is using public resolver with support for EIP 1577.\r\n\r\n4. Under records section, click + button. Set record type to \"content\". Set record value to `zeronet://YOUR-SITE-ADDRESS`.\r\n\r\n5. Save changes and wait until the transaction is confirmed.\r\n\r\n6. Your website should be accessible from `http://127.0.0.1:43110/your-domain.eth`.\r\n\r\n### Using Web3.py library\r\n\r\n**This is a temporary workaround until ENS Manager is supported.**\r\n\r\n1. Clone [filips123/web3.py@patch-for-zeronet](https://github.com/filips123/web3.py/tree/patch-for-zeronet) and go into it:\r\n\r\n```bash\r\ngit clone https://github.com/filips123/web3.py.git --branch patch-for-zeronet\r\ncd web3.py\r\n```\r\n\r\n2. Install Web3.py dependencies as specified [here](https://github.com/filips123/web3.py/tree/patch-for-zeronet#developer-setup).\r\n\r\n3. Run this Python script (and edit it before) from the environment where you have dependencies installed:\r\n\r\n```py\r\nimport web3 import IPCProvider, HTTPProvider\r\nfrom ens import ENS\r\n\r\n# Connect to your Web3 provider\r\n# Chose only one of the providers and edit it with connection details\r\nprovider = HTTPProvider('http://127.0.0.1:8545')\r\nprovider = IPCProvider(\"~/Library/Ethereum/geth.ipc\")\r\n\r\n# Create ENS connection\r\nns = ENS(provider)\r\n\r\n# Set up content hash\r\n# Make sure that your domain is using EIP 1577 compatible resolver\r\ncontent = {\r\n    'type': 'zeronet',\r\n    'hash': 'YOUR-SITE-ADDRESS',\r\n}\r\nns.setup_content('your-domain.eth', content)\r\n```\r\n\r\n4. Your website should be accessible from `http://127.0.0.1:43110/your-domain.eth`.\r\n\r\n---\r\n\r\nThis should be steps to register ZeroNet ENS domain. However, I haven't completely tested them yet, so please don't do them on mainnet to avoid losing ETH with a gas fee in case if you need to change things multiple times.", "added": 1572076624, "modified": 1572076624, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-546592401", "source_type": "github"}, {"comment_id": 135, "body": "I updated this plugin with most things that have already been added to DNS plugin. I also added plugin dependency installation to CI, but there are still some problems.\r\n\r\n* Python 3.4 and 3.5 tests are failing because Web3.py is compatible only with Python 3.6+.\r\n\r\n* ~~Python 3.8 tests are failing because `cytoolz` is currently not compatible with Python 3.8 (pytoolz/cytoolz#136).~~ **Update:** Fixed.\r\n\r\n* But I don't know why did Python 3.6 and 3.7 (**update:** and 3.8) tests fail. @HelloZeroNet @imachug Do you know what is this and how to fix it? I found pysal/splot#47. From [CI log](https://travis-ci.org/HelloZeroNet/ZeroNet/jobs/606706069#L690), I can see:\r\n\r\n```\r\nsrc/Test/TestConnectionServer.py::TestConnection::testPing[ipv4] /home/travis/.travis/functions: line 109:  4666 Aborted                 (core dumped) python -m pytest src/Test --cov=src --cov-config src/Test/coverage.ini\r\nThe command \"python -m pytest src/Test --cov=src --cov-config src/Test/coverage.ini\" exited with 134.\r\n```\r\n\r\nBecause of that, I also didn't bundle dependencies along with source code yet.", "added": 1572769215, "modified": 1573401644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-549126716", "source_type": "github"}, {"comment_id": 136, "body": "Few of problems are lack of Python 3.4 and 3.5 support (if this actually is a problem...) and that CI failures.\r\n\r\nAnother problems are relying on centralized Ethereum nodes (if user does not have local node) and quite heavy dependencies. But this can't be really easily fixed and are maybe not so important...", "added": 1575460657, "modified": 1576261384, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-561682418", "source_type": "github"}, {"comment_id": 137, "body": "I added `strace` to failed command to Travis CI build.\r\n\r\nComplete `strace` output, of Python 3.7 build, is [here](https://github.com/HelloZeroNet/ZeroNet/files/4002262/py37.log). I also formatted last error traceback from `strace` output which is [here](https://github.com/HelloZeroNet/ZeroNet/files/4002270/error.log).\r\n\r\nIt appears that problems are caused in `gevent`, `urllib3` and `ssl` modules. But I don't know what exactly it is.", "added": 1577346067, "modified": 1577346067, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164#issuecomment-569035315", "source_type": "github"}], "1604067545_mirrored_imachug_github": [{"comment_id": 138, "body": "@imachug That commands should probably be available, but marked as deprecated and removed on next major version.\r\n\r\nAlso, how would you prevent CORS? Because all sites would be on same origin, any site would be able to access all data from other sites even without permission.\r\n\r\n---\r\n\r\nI think that this would be good improvement. This would also allow Progressive Web Apps with Web Manifests and Service Workers available.\r\n\r\nCan you share your unsafe PoC when it is available? I would like to test it.", "added": 1566364134, "modified": 1566364134, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523347106", "source_type": "github"}, {"comment_id": 139, "body": "What is different between site and wrapper notifications? Could both of them use DIV or IFRAME or even be in same element?", "added": 1566371161, "modified": 1566371161, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-523390602", "source_type": "github"}, {"comment_id": 140, "body": "@imachug Maybe changing URL to address of another ZeroNet site. All sites would be on the same origin but I don't know if HTTP CORS headers actually prevent this.", "added": 1566492044, "modified": 1566492044, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524047682", "source_type": "github"}, {"comment_id": 141, "body": "@imachug Ok, this makes sense. And you probably can't open `http://127.0.0.1:43110` in iframe, right?\r\n\r\nAlso, would it be possible to differentiate between legitimate and malicious iframes? Because site can use iframe to just display other content on it (embedded game, sidebar... hosted on it) or to attack different site.", "added": 1566492246, "modified": 1566492371, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524049039", "source_type": "github"}, {"comment_id": 142, "body": "@HelloZeroNet What if the site would somehow delete/replace `setInterval`?", "added": 1566496066, "modified": 1566496066, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524071124", "source_type": "github"}, {"comment_id": 143, "body": "@imachug Can site code access prefix's intervals? If so, the site could maybe guess (or brute-force) all interval IDs and clear (`clearInterval`) them which would disable security check.", "added": 1566496690, "modified": 1566496690, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524074688", "source_type": "github"}, {"comment_id": 144, "body": "> Maybe we should just say that changing URL to another site isn't a trouble \r\n\r\nBut it probably it. Site could pretend to be another site and trick user into entering sensitive information.", "added": 1566535516, "modified": 1566535516, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524210797", "source_type": "github"}, {"comment_id": 145, "body": "@HelloZeroNet Od just use both (along with otherbl cryptographies) and let user decide what they want to use.\r\n\r\nDiscussion should be moved to #2087 which is relevant issue for this problem. So, domains should end with TLD `.zeronet` (but still allow access via `127.0.0.1` and proxies should be accessible via `doman.bir.proxy.com`. But it should be still available to access sites normal way.", "added": 1566546058, "modified": 1566546136, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524266784", "source_type": "github"}, {"comment_id": 146, "body": "> Do you understand that it breaks the goal of same-origin policy?\r\n\r\nCode could serve old/current version of wrapper when accessing from same-origin.\r\n\r\nAlso, you can simply use Proxy PAC file to set `127.0.0.1` as proxy for all `.zeronet` domains. For start, ZeroNet needs to be modified to allow that domains and properly handle them. This should not be so hard as some part for this is already in ZeroNet but it doesn't work properly.\r\n\r\nThe next steps would be to redesign wrapper code and create more complete ways to handle URL rewrites (DNS server, proxies, extensions...).", "added": 1566547179, "modified": 1566547413, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524271979", "source_type": "github"}, {"comment_id": 147, "body": "@github-zeronet Yes, configuring DNS and rewriting at OS lever could be a difficult problem. That's why I think that we should have multiple options for users: legacy `127.0.0.1`, Proxy PAC file, browser extension, OS rewrites, registry changes, network changes... But first feature should be to provide possibility to use ZeroNet with Proxy PAC which is simplest way for now.", "added": 1566563473, "modified": 1566563473, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524359910", "source_type": "github"}, {"comment_id": 148, "body": "@imachug Are wildcard certificates really such problem? Hostname solution currently seems the best solution.\r\n\r\nFor local ZeroNet instance, we could use `talk.zeronetwork.bit.zeronet`. For proxy, we could use `talk.zeronetwork.bit.zeronet.xyz` (append proxy URL). Rewriting could be done with PAC, extension or other programs.\r\n\r\n@KilowattJunkie This doesn't get benefit over hostname solution. It just gets more complicated, because you have to handle all protocol schemes and browser probably also won't recognize them.", "added": 1566569828, "modified": 1566570203, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524394275", "source_type": "github"}, {"comment_id": 149, "body": "> it'll be configurable with an URL (i.e. talk.zeronetwork.bit.zn.amorgan.xyz), how will we learn what part is a ZeroNet domain and which part is Clearnet one? \r\n\r\nProxy owner should specify which part is real clear net domain. Or alternatively (preferely) program should detect this automatically.", "added": 1566579803, "modified": 1566580259, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524444378", "source_type": "github"}, {"comment_id": 150, "body": "@KilowattJunkie Regarding custom URL schemes: How would browser know to send HTTP request to `zhttp` scheme? Also, Android Chrome doesn't recognize bit and instead opens Google search.", "added": 1566581640, "modified": 1566581640, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524453110", "source_type": "github"}, {"comment_id": 151, "body": "@github-zeronet I partially agree with you. However, PAC file is something that should nort be so hard, as there are only [few issues](https://github.com/HelloZeroNet/ZeroNet/issues/2087#issuecomment-509829391) with it (actually some of them are a bit harder to do). This would also enable easier integrations with other incredible things in the future.\r\n\r\nBut I don't think ZN specific DNS would be useful. It would be better to just integrate it with other existing DNS projects (#2049).\r\n\r\nAlso, requiring user to use Docker isn't good. Docker could be hard to install, specially on Windows, where, if you don't have Pro versions, you have to install both VirtualBox and Docker Toolbox. ", "added": 1566583471, "modified": 1566583851, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524461858", "source_type": "github"}, {"comment_id": 152, "body": "@imachug Other possibly may be browser extension. It isn't so powerful, but it may be easier for users to use.\r\n\r\nI'd first support PAC file and proxy which are most easiest way to implement (and both of them are related to each other). But later, we should also implement other ways to do this, such as DNS, extensions and system programs. Of that possiblities, extension should probably be implement first.", "added": 1566639499, "modified": 1566639679, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524547103", "source_type": "github"}, {"comment_id": 153, "body": "@HelloZeroNet With last update 3 years ago and old available for Chrome. Not good solution because of that, but something like this should be made to be official. There should be extension like this, but for more browser, regularly updated with latest specs and official. I will try to make and release PoC of this but I need to wait until we standardize hostname (or other) solution. Here I would still like something like `.zeronet` TLD or alternatively custom protocol schemes.", "added": 1566653300, "modified": 1566653487, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-524563639", "source_type": "github"}, {"comment_id": 154, "body": "Another possibility could be to use `zero://` protocol as IPFS and Swarm do, but this won't make it possible to use ZeroNet with other protocols in the future, as handler won't be able to distinguish between them. But with `.zeronet` TLD, you could use both `http://domain.bit.zeronet`, `ftp://domain.bit.zeronet`, `gopher://domain.bit.zeronet`...\r\n\r\nUsing `zero://` could look cleaner, but with it, it won't be possible to handle more protocols. And most browsers won't let you directly type `zero://domain.bit` as it will just redirect to search.", "added": 1576172097, "modified": 1576172174, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565175491", "source_type": "github"}, {"comment_id": 155, "body": "I don't see a reason why you should support them. Even if we get rid f them later, we can also get rid of them *now*. Users would have to change anyway.", "added": 1576172372, "modified": 1576172372, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565177147", "source_type": "github"}, {"comment_id": 156, "body": "Ideally, both `*.zeronet` and `*.zeronet.some.tld` should be supported. Some other decentralized systems (Onion, IPFS...) are also doing it in simialar way.\r\n\r\nJust note that it should be possible to access sites from port 80 and 443, and not 43110. Using 43110 as port number was probably meant to separate ZeroNet UI and prevent conflicts with other servers that may run on port 80. But as hostnames will be now separated, it should be possible to access sites as normal clearnet sites, from port 80 and 443 (and other ports for other services). This would also enable adding CNAME/A/AAAA and TXT record\r\n to clearnet domain, and accessing site publically with normal domain. Solution (with some problems in macOS) for this would be to use `127.43.11.0:80` as default host of ZeroNet UI. See https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-565189278 for more details.\r\n\r\nAnd instead of `*.zeronet.io`, it might be better to use `*.zeronet.link`. Because `zeronet.io` would be used as normal website and (your) `zeronet.link` would be used for proxy. For example, ENS and IPFS are also doing this in similar way, where `eth.link` is just proxy to resolve and handle ENS domains.\r\n\r\nThen, browser plugin or local program would set `*.zeronet` and `*.zeronet.link` as wilcard for local ZeroNet instance. Additionally, DNS records should also be set to local IP (`127.43.11.0:80`). So when ZeroNet will be installed, and user will access `example.bit.zeronet` or `example.bit.zeronet.link`, it will be automatically forwarded to local ZeroNet instance. And when ZeroNet won't be installed, `zeronet.link` will have public record to instead use some reliable public ZeroNet proxy(ies).", "added": 1576257789, "modified": 1576257789, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2169#issuecomment-565595581", "source_type": "github"}], "1604067479_mirrored_tianlichunhong_github": [{"comment_id": 157, "body": "> Multiuser plugin is only for a person use different ID. It is not suitable to the scenario where multiple users use multiple IDs.\r\n\r\nMultiuser plugin (in non-local mode) is made for public proxies where multiple users use the same proxy, but with a different account.", "added": 1568644292, "modified": 1568644292, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2171#issuecomment-531877874", "source_type": "github"}], "1604067497_mirrored_mindey_github": [{"comment_id": 158, "body": "@imachug Maybe domain could be active until a certain number of people use/seed it.\r\n\r\nFor example, the domain is deactivated if less then 15 people seed it for more than 30 days. Also, if the domain has subdomains, it may be deleted only if all of its subdomain websites are seeded by less than 15 people.\r\n\r\nBut yes, this is a difficult topic as many things need to be considered here.", "added": 1568644099, "modified": 1568644099, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2189#issuecomment-531876648", "source_type": "github"}], "1604067521_mirrored_filips123_github": [{"comment_id": 159, "body": "> It's for tracking changes and prevent malware\r\n\r\nIt is for **local** tracking of changes. This means that user would have local Git repository to store changes, and this plugin would automatically commit/track changes instead of user.\r\n\r\nFew examples why this could be useful. Owner of some popular site can delete it. If changes are tracked (even if locally), other user can restore and publish it. Or site can get malicious update. With tracking, user can spot this and identify when did the change happened.\r\n\r\n", "added": 1568626005, "modified": 1568626230, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2191#issuecomment-531754981", "source_type": "github"}, {"comment_id": 160, "body": "Yes, so\r\n\r\n> Ignore .git the directory from the remote site or store it on different location outside site directory (to prevent site owner from overwriting it)", "added": 1568626466, "modified": 1568626466, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2191#issuecomment-531757315", "source_type": "github"}], "1604067585_mirrored_HelloZeroNet_github": [{"comment_id": 161, "body": "While I would like that ZeroNet would be more modular and with more protocols, I don't like creating a completely new incompatible project for this. Here is why:\r\n\r\n* New protocols and modularity can be added in the current ZeroNet code (to the core or as plugins). See my issues #2062 and #2063 for details. It would be easier to do this than starting a new project from scratch, as 90% of the code is already written.\r\n* There will be many incompatible versions of \"ZeroNet\". This would be bad for the network itself and confusing for users. Even now, there are at least two different implementations of ZeroNet in JS, and official one in Python.\r\n* I agree that it is good to have multiple **compatible** implementations of ZeroNet in multiple languages. But they should be compatible with each other. This would help the network and also make ZeroNet more popular. See my comments in blurHY/IPZN#5 (specially https://github.com/ipzn/ipzn/issues/5#issuecomment-516404249) for details how I would like to have ZeroNet standardized.", "added": 1568567001, "modified": 1568567001, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-531594920", "source_type": "github"}, {"comment_id": 162, "body": "> Secondly, supporting too much protocols reduces performance and efficiency, some of the protocols you listed on the issue are outdated as well.\r\n\r\nExplain a bit please...", "added": 1568627451, "modified": 1568627451, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-531762818", "source_type": "github"}, {"comment_id": 163, "body": "> Firstly, you should separate application layer in order that make a protocol stack.\r\n\r\nZeroNet already contains plugins for som low-level network communications. Other protocols can also be added as new plugins. I agree that it would be good to have ZeroNet more modular, but this can be done in existing code.\r\n\r\nBut too much layering and modularity aren't really needed. ZeroNet is a full self-contained network with support for sites, users and (almost) real-time updates. So it is not really needed to be very layered as most features are already built-in. But IPFS is only a file system for storage without any other functionalities. For it, it is needed to be modular as developers need to implement most functionalities themselves.\r\n\r\nI'm not really seeing IPFS as ZeroNet competitor but as an addition. So ideally, IPFS would be a plugin to ZeroNet so it would be able to use either ZeroNet protocol, BitTorrent protocol, IPFS protocol or any other protocol depending on what is needed.\r\n\r\n> If you want to make a site available on all supoorted protocols/networks, you have to abstract their common features from them.\r\n\r\nIf this is implemented in a good way, it can also be efficient. And it is good to support multiple protocols, to make network bigger and reach more users.\r\n\r\nIt could actually be more efficient. For example, you could use BitTorrent, IPFS or Swarm (depending on what is most appropriate/available/not blocked) best for big static content, as they are mostly made for it. Then you could use ZeroNet protocol or libp2p for dynamic content. It is same for DNS systems for ZeroNet.\r\n\r\nBut to do this, you don't need a completely new project. Most of the things can be done with plugins and some of them with some core changes.\r\n\r\n> Outdated, e.g. FreeNet, GNUNet.\r\n\r\nWhat makes Freenet and GNUNet \"outdated\" and IPFS \"very modern\". By development and releases certainly not, as both (actually all three) of them have very active development history. And they also have a lot of users. Ok, IPFS is newer and with some better features, but how would you make sure that there will be no better solution than IPFS in the future?\r\n\r\n> And it seems nonsense to support BitTorrent and WebTorrent, what's the purpose. Does it make Zeronet more robust ?\r\n\r\nWhy not? Yes, to make ZeroNet more robust.\r\n\r\nIf more protocols would be supported, it would be harder to block all of them. Also see above and other comments for more details.", "added": 1568637444, "modified": 1568637444, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-531832897", "source_type": "github"}, {"comment_id": 164, "body": "@BugsAllOverMe See #2214 for DNS support.", "added": 1571047423, "modified": 1571047423, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-541664909", "source_type": "github"}, {"comment_id": 165, "body": "Note that content-addresses data should also be accessible from mutable addresses. This would be useful for updating content and getting newest version easily.\r\n\r\nThis could similar to IPNS where it could be using existing zite functionalities with public and private keys so zite would actually link content-addressed data from it.", "added": 1571750339, "modified": 1571750339, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2192#issuecomment-545041345", "source_type": "github"}], "1604067531_mirrored_krixano_github": [{"comment_id": 166, "body": "This is an interesting idea and I quite like it. However, because of the problems that were already written by @Thunder33345, this can't fully functional DNS system and shouldn't be the only available option.\r\n\r\nBut it is still be something that should be supported. It is something like `/etc/hosts` file but for ZeroNet level that can also be shared with others. This would be useful for testing or sharing personal sites with friends (or others).", "added": 1568995327, "modified": 1568995327, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-533673520", "source_type": "github"}, {"comment_id": 167, "body": "> Also please restrict this feature to unique, not registered domain zones.\r\n\r\nOr even better, allow users to have any domain zone locally, but limit them when publishing domain list publicly. This would be useful for testing.", "added": 1569003926, "modified": 1569003926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-533713834", "source_type": "github"}, {"comment_id": 168, "body": "@krzysztof113 This is already #2214 for this.", "added": 1571141607, "modified": 1571141607, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2204#issuecomment-542262989", "source_type": "github"}], "1604067525_mirrored_caryoscelus_github": [{"comment_id": 169, "body": "There is problem with using either case sensitive or case insensitive addresses.\r\n\r\n**Problem with using case sensitive addresses (two addresses with different cases will be two sites):**\r\n\r\n1. Filesystem could be case insensitive.\r\n2. Domain name is case insensitive (and converted to lowercase). See #2087 for details why could this be problem.\r\n\r\n**Problem with using case insensitive addresses (two addresses with different cases will be same site):**\r\n\r\n1. Bitcoin addresses are case sensitive. This means that if address has different case than original, it is different from original and can also be not valid.", "added": 1569217388, "modified": 1569217388, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2206#issuecomment-534009366", "source_type": "github"}, {"comment_id": 170, "body": "@Thunder33345 Yes, this could happen but it is nearly impossible:\r\n\r\n> The probability that a mistyped address is accepted as being valid is 1 in 232, that is, approximately 1 in 4.29 billion.\r\n\r\n(From [Bitcoin Wiki](https://en.bitcoin.it/wiki/Address))", "added": 1569324934, "modified": 1569324934, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2206#issuecomment-534588235", "source_type": "github"}], "1604067534_mirrored_adrelanos_github": [{"comment_id": 171, "body": "@DaniellMesquita Who said GPG/PGP is weak? Keyservers are unreliable, not the GPG itself.\r\n\r\n**Adding** new signing mechanisms would be good, but **replacing** GPG would be useless.", "added": 1570381782, "modified": 1570381818, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2209#issuecomment-538783142", "source_type": "github"}], "1604067555_mirrored_filips123_github": [{"comment_id": 172, "body": "@imachug It should be. Zeroname is still the default domain system and almost no one would disable it. But I think that this issue should be fixed quickly.\r\n\r\nBut I actually only tested this few months ago with ENS plugin (which uses same structure as this). I will also try to test this again now.\r\n\r\n**Update:** I tested this again and I can confirm that it works only when Zeroname is enabled. When Zeroname is disabled, the site will try to load (it will open wrapper and page title will be set), but the actual page will load forever. See debug log [here](https://pastebin.com/QFyUiExs) - the error is (almost) the same as in #2128. When Zeroname is enabled, it will work normally.", "added": 1569949842, "modified": 1569951469, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-537208108", "source_type": "github"}, {"comment_id": 173, "body": "@HelloZeroNet Do you know what could be a reason for that error?", "added": 1570024005, "modified": 1570024005, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-537580882", "source_type": "github"}, {"comment_id": 174, "body": "@HelloZeroNet I don't think so. I would agree with you if my plugins would be the only way for domains in ZeroNet. But since users can also use Zeroname (or any other domain plugin), it would actually make it more decentralized as users won't be forced to use one particular domain system.", "added": 1570154404, "modified": 1570155971, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538234536", "source_type": "github"}, {"comment_id": 175, "body": "> Of course, the best would be multiple decentralized solutions, but we have more work to get to that point.\r\n\r\nAnd it is actually not so easy to implement a really decentralized solution. Almost every third-party domain system for integration with ZeroNet (or any other project) would require either:\r\n\r\n* Complete protocol implementation with locally stored data (which in case of blockchain-based systems means to have the whole blockchain stored locally).\r\n* Data stored in a custom location (like Zeroname site).\r\n* Data from a third-party provider (like Infura for Ethereum).", "added": 1570205991, "modified": 1570205991, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538528158", "source_type": "github"}, {"comment_id": 176, "body": "@HelloZeroNet @shortcutme Did you find why this plugin doesn't work without Zeroname?", "added": 1570348594, "modified": 1570348594, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538735325", "source_type": "github"}, {"comment_id": 177, "body": "@HelloZeroNet Should I change anything in this plugin or it will simply work?\r\n\r\nFrom your commits, I saw that you removed `actionSiteMedia`. Does this mean that the whole `UiRequestPlugin` is not needed anymore?", "added": 1570371860, "modified": 1570371860, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538768442", "source_type": "github"}, {"comment_id": 178, "body": "> Look #2208 I don't see how _dnslink is better than a reverse proxy to /raw/.\r\n\r\nDNSLink is actually solves a bit different problem than reverse proxy. Main goal of DNS plugin is to also allow users to use normal DNS instead of Namecoin. However, this can also be expended to reverse proxy later. See other existing issues in this repository about DNS and proxies (I don't have currently time to link them all).\r\n\r\n> i've been thinking about how to bridge ENS to Zeronet for a while now. With the new ENS system and 3,4,5-letter domains being auctioned now, I think the system will gain traction within the crypto community. What's the status of #2164? Is this working?\r\n\r\nIt should be working. Also please test it for any issues.\r\n\r\nHowever, there are still few small known issues with it. See PR comments for details.\r\n\r\nMain problem is that there is no easy way to create actual ENS domains that link to ZeroNet sites. This will be fixed when my PR to ENS manager will be merged and released. Until then you have to manually create ENS domain in programmatic way using Web3 library.\r\n\r\nOther problem is that Web3.py has not yet merged my changes for ContentHash records which are needed for ZeroNet. Until then, you have to install Web3.py from my temporary branch.\r\n\r\n> The idea is, our proxy at 0net.io would serve (as it does now) the files to Clearnet users, however, they would be able to use https://example.eth instead of https://0net.io/example.bit. Obviously, this would NOT be limited to just .eth, I'm thinking .xyz too (they have a very progressive admin team).\r\n\r\nThis is also already known idea \ud83d\ude01 See existing issues which are related to domains and proxies.\r\n\r\nThis could be achieved  with CNAME/A/AAAA record as well as DNSLink record so domain system would then forward request to ZeroNet instance. This would require my DNS plugin as well as few other ZeroNet changes that are not made yet (to allow accessing ZeroNet via custom domain).\r\n\r\nOne other feature is to also point CNAME/A/AAAA record to local ZeroNet instance so users will be able to access it using their own ZeroNet instance.", "added": 1571108252, "modified": 1571108252, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-542050207", "source_type": "github"}, {"comment_id": 179, "body": "@HelloZeroNet @shortcutme Can you check my previous questions:\r\n\r\n> From your commits, I saw that you removed `actionSiteMedia`. Does this mean that the whole `UiRequestPlugin` is not needed anymore?\r\n\r\nAlso https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538234536, https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538526212 and https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538528158. So, when this is resolved, I think that this should be merged even if it is using centralized DNS.", "added": 1571163159, "modified": 1571163186, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-542407182", "source_type": "github"}, {"comment_id": 180, "body": "> To be clear, are you talking about \"registering\" the ENS domains or \"linking\" them to zites?\r\n\r\nI'm talking about linking domains to ZeroNet. Plugin uses content hash record to store hire address, but currently there is no easy way to create it for ZeroNet.\r\n\r\n> Why wouldn't you just use the dapp at https://app.ens.domains? I'm not clear what you're trying to accomplish.\r\n\r\nMy point is that https://app.ens.domains currently does not support linking domains to zites. I already created PR ensdomains/ui#23 to add support for this, but it has not been yet merged.", "added": 1571188908, "modified": 1571189110, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-542506300", "source_type": "github"}, {"comment_id": 181, "body": "@HelloZeroNet @shortcutme Based on 5ca3401eb992dd52fa2a784de03d64b886246640, I assume that `UiRequestPlugin` needs to be removed. I also removed it here so this PR is now completely ready.", "added": 1571235454, "modified": 1571235454, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-542803535", "source_type": "github"}, {"comment_id": 182, "body": "@D14na\r\n\r\n> your updating content-hash to v2.4.4\r\n\r\nI updated `content-hash` because was needed to be updated to support `zeronet` codec.\r\n\r\nENS uses `content-hash` (EIP 1577) to differ between multiple content hash types (IPFS, Swarm, Tor, ZeroNet...). And `content-hash` was updated to support `zeronet` codec.\r\n\r\n> I have no issue with that, but why not ALSO support for `zero://`?\r\n\r\nBecause `zero://` and `zeronet:/` are different protocols/schemes. `zero://` is used for internal ZeroNet communication between trackers. `zeronet://` is used as an identifier to let know ENS system that this is ZeroNet domain. See https://github.com/HelloZeroNet/ZeroNet/issues/2049#issuecomment-513975113 for details.\r\n\r\nIt doesn't matter which is \"more popular\". They are used for different things. The community would have to update things in any way if they want to use DNS.\r\n\r\nFor the same reason, I also use `dnslink=/zeronet/ADDRESS` instead of `dnslink=/zero/ADDRESS`.", "added": 1571320031, "modified": 1571320255, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-543263411", "source_type": "github"}, {"comment_id": 183, "body": "@imachug Yes, deciding which way should be used for accessing ZeroNet is another long story... But this is not related to ENS or DNS codecs that are used in my plugins.\r\n\r\n> Thus, I guess we'll have to admit that the ENS protocol name has no connection to how end users communicate with ZeroNet: think of it as a codec or a type or something like that.\r\n\r\nAlso yes, here `zeronet://` actually is codec/type for ENS/DNSLink protocol name.\r\n\r\nAlso, because `zero://` (as a communication/transport protocol) may also be added to `multicodec` later in the future (in case if ZeroNet gets support for more protocols), it is better to separate `zero://` (as a communication/transport protocol) and `zeronet://` as a client/service name in ENS. This is actually what @HelloZeroNet said.", "added": 1571320954, "modified": 1571321355, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-543269585", "source_type": "github"}, {"comment_id": 184, "body": "> oh, so this is for \"internal\" / \"system\" -use\"?\r\n\r\nYes, it is only to tell DNS/ENS that record should be handled by ZeroNet.", "added": 1571765937, "modified": 1571765937, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-545143970", "source_type": "github"}, {"comment_id": 185, "body": "@d14na No, because it was meant to be built-in to core. If you want to use it, download my ZeroNet repository and copy DNS plugin to your installation.", "added": 1571849128, "modified": 1571849128, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-545606176", "source_type": "github"}, {"comment_id": 186, "body": "@D14na\r\n\r\n> just so I'm clear, what's the reason for having this \"built-in\"?\r\n\r\nDomain plugin that needs to be installed separately is kinda useless. If your site uses it, you will still have to provide classic address-based URL for users that don't have it. And the main point of domain systems is that you don't have to provide addresses.\r\n\r\n> Is there a way to \"auto-install\" these requirements with the the Plugin Manager? if not, how problematic is the process for the user?\r\n\r\nCurrently no.\r\n\r\nIn CI, requirements from the plugin are also installed. In local installations, they need to be installed with the manual calling of plugin's `requirements.txt`. I might also add this to README.\r\n\r\nYou can use this to install all plugins' dependencies:\r\n\r\n```\r\nfor PLUGIN in $(ls plugins/[^disabled-]*/requirements.txt); do pip install --upgrade -r ${PLUGIN}; done\r\n```\r\n\r\nIn ZeroBundle, that requirements would need to be installed directly. This is currently not used, but it needs to be added after this plugin is released.\r\n\r\n> would it be possible to run the adt'l dependencies in a container? (eg venv?)\r\n\r\nWhat do you mean with this?\r\n\r\nInstalling plugin's dependencies is same as installing normal dependencies from root `requirements.txt`. You just need to install additional `requirements.txt` files from plugins.", "added": 1571851211, "modified": 1571851331, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-545618749", "source_type": "github"}, {"comment_id": 187, "body": "> ahh, of course, i wasn't thinking. regardless, a separate repo makes it easier for others to test, and that's probably the best path to core adoption.\r\n\r\nStill, it is meant to be included in core as soon as possible. That's why it doesn't have a separate repository.\r\n\r\n> it doesn't matter, I'm just working with a lot with docker now, so everything is a container to me\r\n\r\nYou can use provided ZeroNet's `Dockerfile`. I updated it to also install dependencies from plugins.", "added": 1571853939, "modified": 1571853939, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-545636260", "source_type": "github"}, {"comment_id": 188, "body": "@ValdikSS\r\n\r\n> The plugin uses third-party DoH resolvers by default. I don't think this is a good idea. In my opinion, it should use system resolver by default unless configured otherwise or Tor always mode enabled.\r\n\r\nProblem is that default system resolver will most likely use Google or ISP nameservers. And Google is not a good solution for any privacy/decentralized project and ISPs are also inspecting traffic in some countries.\r\n\r\nAnother problem is that normal DNS traffic is unencrypted so everyone can inspect/modify it. So I'm using DoH which is encrypted.\r\n\r\nAnother reasons why I'm using this specific nameservers is that they support OpenNIC TLDs. OpenNIC is alternative domain root and has free domains (but you can still use normal domains). Free alternative to ZeroNet addresses is also something that users would want. Default system resolvers most likely won't support it.\r\n\r\nBut you still can enable default system resolver or use custom nameservers if you want.\r\n\r\n> `isDomain` regex doesn't allow international domain names. Or are they converted to punycode?\r\n\r\nI actually wasn't thinking about this. Can you check yourself if that domains work?", "added": 1571896228, "modified": 1571896228, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-545815953", "source_type": "github"}, {"comment_id": 189, "body": "@d14na I can provide you ZIP file with the plugin.", "added": 1571905500, "modified": 1571905500, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-545873625", "source_type": "github"}, {"comment_id": 190, "body": "> how do I register names like yours? where's the registrar? if its NOT on zeronet, then how do we get it on?\r\n\r\nYou can register normal DNS domains in your DNS manager. That `.oss` domains from my example are OpenNIC and can be registered [here](https://www.opennic.org/).\r\n\r\nThe exact process depends on your DNS manager, but in summary you need to create `_dnslink.your.domain` with TXT record `dnslink=/zeronet/YOUR-ZERONET-ADDRESS`. Then wait some time so DNS records are updated and your site should be accessed from `http://127.0.0.1:43110/your.domain`.\r\n\r\nFor ENS domains, you will be able to register them with ENS Manager website. You will need to create content hash record with value `zeronet://YOUR-ADDRESS`. Note that this won't work until ensdomains/ui#23 is merged.\r\n\r\n> my endgame is .eth support (as mentioned #2049)\r\n\r\nI also created plugin for ENS support in #2164. It should work, but please check that PR for some details and some issues about it.", "added": 1571972086, "modified": 1571972086, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-546212352", "source_type": "github"}, {"comment_id": 191, "body": "@d14na\r\n\r\n> and what about registering `.zeronet` with opennic? has anyone done that? is there reason to do that? also, i see `.o` is registered, what about registering `.0`? is that legal as per dns spec? does it matter, if its on opennic?\r\n\r\nThere isn't any need to do this.\r\n\r\nUnline normal domains, `.zeronet` TLD (which may be used to access ZeroNet in the future) is only special-usage pseudo-TLD. It's only use-case is to clearly separate requests that should be made to ZeroNet from clearnet requests/websites. But the actual domain resolving is based on a first subdomain (`example.bit.zeronet` would resolve `example.bit` using Namecoin).\r\n\r\nHowever, it would be good to register it to IANA as a special-use domain to prevent other companies from registering it themselves and making a conflict with ZeroNet.\r\n\r\n> is this what YOUR plugin handles? or is this done at opennic?\r\n\r\nYou need to do this at OpenNIC. For `.oss` domains, you can use [this](http://be.libre/) (requires you that you have OpenNIC nameservers used) and for `.o` domains you can do this [from GitHub](https://github.com/moderntld/.o/wiki/Claiming-Your-Domain). For other domains, you need to do this in your DNS manager.\r\n\r\nThe plugin then checks if the domain has that TXT record and resolves it to address.\r\n\r\n> have a ton of names, but have never actually done this. something to try out this weekend\r\n\r\n*(This is for Ethereum's ENS and is not actually related to this plugin)*\r\n\r\nUnfortunately, you can't use ENS Manager website until ensdomains/ui#23 is merged. You can try to build that website yourself (from a branch of that PR) or use Web3.py (also from my temporary branch) to programmatically set content hash record.\r\n\r\n> just from examining this commit, i'm wondering why line # 52 already has zeronet in the regex, was zeronet previously supported in some way?\r\n\r\nThis is just merge commit and this is how GitHub displays them. No, support for ZeroNet was not available before. [This](https://github.com/ensdomains/ui/pull/23/files) is complete diff.\r\n\r\n> and then this commit is adding 3 new dependencies. what are they for? imo, the less changes, the faster the merge, just something to consider\r\n\r\nAlso merge commit. Those dependencies were added to the original ENS Manager repository.\r\n\r\n> why can't you import your ens support into THIS plugin? do you think its better to have both?\r\n\r\nI think that each domain system should have a separate plugin. This would make them more transparent, easier for development/debugging and also allow users to manage each one separately.\r\n\r\nThis specific plugin is made specifically for classic/normal DNS.\r\n\r\n> i believe you sent me a .zip of ENS (can't remember how i got it)\r\n\r\nI didn't send you ZIP file as I forgot to do this (there was actually some old ZIP of it but it is few months old)... But you have source code [here on GitHub](https://github.com/filips123/ZeroNet/tree/ethereum-name-service/plugins/ENS).\r\n\r\nIf you want to directly get ZIP files, they are available here:\r\n\r\n* [DNS plugin](https://github.com/HelloZeroNet/ZeroNet/files/3773847/DNS.zip)\r\n* [ENS plugin](https://github.com/HelloZeroNet/ZeroNet/files/3773848/ENS.zip)", "added": 1572027818, "modified": 1572027818, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-546518437", "source_type": "github"}, {"comment_id": 192, "body": "## How to register ZeroNet DNS domain\r\n\r\n### OpenNIC .libre/.oss domain\r\n\r\n1. Set up your system DNS resolver to use [OpenNIC](https://www.opennic.org/) DNS servers. This is required only for the process of registration.\r\n\r\n2. Open [domain registrator](http://be.libre/).\r\n\r\n3. Register a new domain if you haven't it already.\r\n\r\n4. Create TXT record with content `dnslink=/zeronet/YOUR-SITE-ADDRESS`.\r\n\r\n5. Save the record and wait until DNS servers are updated.\r\n\r\n6. Your website should be accessible from `http://127.0.0.1:43110/your-domain.oss`.\r\n\r\n### Other OpenNIC domains\r\n\r\n1. Set up your system DNS resolver to use [OpenNIC](https://www.opennic.org/) DNS servers. This is required only for the process of registration.\r\n\r\n2. Follow the registration process of your desired registrators and add the same TXT record. All registrators are listed [here](https://www.opennic.org/).\r\n\r\n3. Your website should be accessible from `http://127.0.0.1:43110/your-domain.tld`.\r\n\r\n### Other domains\r\n\r\n1. Use your registrator/DNS manager website to create TXT record.\r\n\r\n2. Your website should be accessible from `http://127.0.0.1:43110/your-domain.tld`.\r\n", "added": 1572077378, "modified": 1572077378, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-546593185", "source_type": "github"}, {"comment_id": 193, "body": "@d14na I added description for registering DNS domain here and steps for registering ENS domain in ENS plugin PR.", "added": 1572077507, "modified": 1572077507, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-546593296", "source_type": "github"}, {"comment_id": 194, "body": "@HelloZeroNet @shortcutme Can you merge this?\r\n\r\nAs discussed in https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538234536, https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538526212 and https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-538528158, this won't defeat the decentralized goals of ZeroNet as this won't be the only supported domain system. Users would still be able to use Namecoin or any other domain system for their sites.\r\n\r\nAlso, the domain plugin that needs to be installed separately is kinda useless. If your site uses it, you will still have to provide classic address-based URL for users that don't have it. And the main point of domain systems is that you don't have to provide addresses.\r\n\r\nThis domain plugin would also enable accessing ZeroNet sites as normal websites. This means that if site owner would point A record of domain to IP of public or local ZeroNet instance, the site will be accessible just like normal website. Although this is not currently supported, it is something that I and @imachug are currently working on.\r\n\r\nAnd in the future, we could also find other DoH resolvers with support for OpenNIC and include them here. This would make resolving more decentralized as there would be multiple resolvers. And maybe we could then also chose random resolver from a list for each user.\r\n\r\n**Update:** ~~There is some small things that needs to be added before this can be merged. I will do it later today.~~ That thing were dependencies. This is now fixed.", "added": 1572341656, "modified": 1572544661, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-547397866", "source_type": "github"}, {"comment_id": 195, "body": "@HelloZeroNet @imachug @krixano There is one last thing that needs to be done before this PR can be merged. Problems are additional plugin dependencies.\r\n\r\n---\r\n\r\nThe plugin includes additional dependencies only for it. But when updating ZeroNet from UI, that dependencies will not be installed so the plugin will not load.\r\n\r\nOne of the solutions for this is to manually bundle plugin dependencies along with plugin code here in the repository. But this is not the best solution as it would pollute repository with third-party dependencies and make things harder to maintain.\r\n\r\nAnother solution is to install dependencies on its first run. This won't require to include dependencies to repository, but still install them so the plugin will be usable. Here is the problem that this probably doesn't work with ZeroBundle as dependencies in ZeroBundle are stored in the compiled file. But we can still install dependencies to `src/lib` directory which is not compiled with ZeroBundle. But there is still a problem here because we would need to access and use `pip` programmatically (or make some lightweight PyPI downloader).\r\n\r\nThe final solution is to install dependencies directly into ZeroBundle. But this means that all users would have to manually reinstall ZeroBundle in order to update ZeroNet.\r\n\r\n---\r\n\r\nI would go for the second solution (install dependencies to `src/lib` with some lightweight PyPI downloader on first plugin run). But I would also install dependencies to ZeroBundle for all new users because it is better to have dependencies pre-installed.", "added": 1572375271, "modified": 1572375271, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-547646792", "source_type": "github"}, {"comment_id": 196, "body": "@HelloZeroNet I bundled all plugin's dependencies (DNSPython and DNSLink) into ZIP file along with plugin's source code. That ZIP file is then added to Python's path (Python can load modules from ZIP) in case if dependencies are not already installed.\r\n\r\nI also included support for DNS-reverse-proxy (implemented by @imachug) which enables you to create a site which is hosted on ZeroNet and access it like normal website. To do this, you need to create DNSLink TXT record that points to site address and CNAME/A/AAAA that points to ZeroNet instance. In case of local ZeroNet instance, the site can be accessed at `example.com:43110`. In case of public ZeroNet proxy, site can be accessed directly at `example.com` (because most proxies host ZeroNet on port 80). Note that some sites (like ZeroHello, probably also other official sites with dynamic links to other sites) are not yet ready for this as they make incorrect links to other sites. This needs to be fixed in their end.", "added": 1572535317, "modified": 1572535317, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-548506600", "source_type": "github"}, {"comment_id": 197, "body": "@HelloZeroNet @shortcutme Can you check and merge this?\r\n\r\nDependencies are now bundles with source code (and all licenses are compatible) so there shouldn't be any problem with using this plugin.\r\n\r\nThis would allow accessing ZeroNet sites from classic DNS domains which is useful in case if site author already has domain (or want to use free OpenNIC domain) and don't want to register another Namecoin domain.\r\n\r\nAnd it would also allow accessing ZeroNet as reverse-proxy. So if the domain has CNAME/A/AAAA record that points to ZeroNet instance and TXT record which contains the address of the site, the site will be directly accessible from that domain.\r\n\r\nIn case of local instances, this will have to include port `43110`. Solution for this would be to use `127.43.11.0:80` as default host of ZeroNet UI. This will also enable viewing ZeroNet sites with local instances from on port 80 while still keeping ZeroNet separated from other services which may run on port 80 (as it would use `127.43.11.0` which is another loopback IP). IPs in `127.*.*.*` should resolve to loopback in most cases, but I think that in macOS, the only loopback address is `127.0.0.1`. This means that for it, we would need to manually assign new IP to loopback interface, which probably requires root permissions.\r\n\r\nBut this is actually not so important for this PR so it would be great if you can merge it.\r\n\r\nAnd even if classic DNS is centralized, adding it as additional, but enabled by default, domain system won't defeat decentralized goals of ZeroNet, as users will actually have more choice between domain systems. And with ENS support, it would make it even more decentralized.", "added": 1576174408, "modified": 1576174408, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-565189278", "source_type": "github"}, {"comment_id": 198, "body": "My PR for DNS-over-HTTPS support has been merged, so we don't need to depend on my fork anymore. However, we still need to use Git-based version, as changes still aren't released in new version.", "added": 1576320735, "modified": 1576320735, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-565719141", "source_type": "github"}, {"comment_id": 199, "body": "@imachug I tested DNS reverse proxy with my public ZeroNet proxy and problem is that sometimes cookies are not sent to WebSocket connection which means that connection fails with Multiuser plugin. Do you think it would be possible to send that cookie to WebSocket connection even if it is in a different origin than the website?\r\n\r\nAlso, zero button links to `zero/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D` but this can probably be fixed easily with some condition.. There might also be some other problems with other features that try to connect to wrong URL.\r\n\r\nAlso, can you check if there can be any possible security problems with accessing WebSocket from a different origin and such?", "added": 1582563998, "modified": 1582565962, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590524171", "source_type": "github"}, {"comment_id": 200, "body": "> AFAIK there's no way to add a cookie to another site.\r\n\r\nIn non-web-based WebSocket clients (in Node.js and Python) you can set cookies. However, I'm not sure if browsers also allow this.\r\n\r\nSo yes, if sending cookies is not possible, it should be sent either in URL or in first message.\r\n\r\n> Where do you want it to redirect to? Probably the root of the site?\r\n\r\nYes.", "added": 1582601812, "modified": 1582601812, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590708248", "source_type": "github"}, {"comment_id": 201, "body": "There is one other thing. Is there any reason why WebSocket requests are made to different origin that is specified in `server_url` instead of accessing from same origin? I think it may be with some issues with old Chrome proxy extension with WebSockets but I'm not sure?", "added": 1582619768, "modified": 1582619768, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-590823768", "source_type": "github"}, {"comment_id": 202, "body": "Just accessing DNS domains works.\r\n\r\nHowever, DNS reverse proxy with Multiuser plugin sometimes doesn't because of cookies and CORS.", "added": 1584420765, "modified": 1584420765, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-599926870", "source_type": "github"}, {"comment_id": 203, "body": "I have idea how this cross-origin cookie/multiuser handling could be implemented:\r\n\r\n1. Wrapper/client normally sets cookie and tries to use it on WebSocket connection, like it does now.\r\n\r\n2. When WebSocket server (Multiuser plugin) receives request, it checks for cookie. If it exists, it uses it to get account/address, also like it does now.\r\n\r\n3. However, if cookie isn't set (probably because of CORS), instead of failing with error, it immediately sends some message/request/action/command to wrapper/client for user address.\r\n\r\n4. Wrapper/client listens for that message, and if it receives it, it sends user address as response. Then it can start sending commands normally.\r\n\r\n5. Once server receives response, it uses it as account. If it receives any other commands before response (and response was requested), it fails with error that user isn't authenticated (similarly to what currently happens).\r\n\r\nAdvantage of this is that if cookies are sent in first place, there isn't any need for any additional message, which means that it shouldn't affect speed. Additionally, it stays compatible with all current clients.", "added": 1586262894, "modified": 1586262894, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-610458205", "source_type": "github"}, {"comment_id": 204, "body": "Master seed or master address? Cookie currently contains master address, so that response should probably also use it. And given that it will probably be used in somewhere in browser's storage (probably cookie just like now, but client just reads it from cookie and sends it to server if needed), it probably won't be good to store sensitive information such as master seed.", "added": 1586265421, "modified": 1586265421, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214#issuecomment-610482461", "source_type": "github"}], "1604067568_mirrored_filips123_github": [{"comment_id": 205, "body": "@krixano Yes, BackgroundProcessing needs to be updated to allow route handling and also tested and audited.", "added": 1571069480, "modified": 1571069480, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223#issuecomment-541865073", "source_type": "github"}, {"comment_id": 206, "body": "@HelloZeroNet What about using existing sandboxing tools, like WebAssembly System Interface ([WASI](https://github.com/WebAssembly/WASI)). It is still work-in-progress, but it will provide a way to run any program in any language (that complies to WebAssembly) in a sandboxed environment. You could use [Wasmer](https://github.com/wasmerio/python-ext-wasm) for this.\r\n\r\nThis would not only make local scrips more secure (sandboxed) but also enable you to write them in any language (Python, Node.js, Rust, C...).", "added": 1571074732, "modified": 1571074732, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223#issuecomment-541907918", "source_type": "github"}, {"comment_id": 207, "body": "> If we could somehow call the zeroframe api functions (directly or via websocket), then it may work.\r\n\r\nThis could be done with importing Python ZeroFrame functions/classes to WASM VM.  However, I don't know if this is already supported in Python package.", "added": 1571104827, "modified": 1571104827, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223#issuecomment-542037353", "source_type": "github"}], "1604067630_mirrored_imachug_github": [{"comment_id": 208, "body": "@imachug Can you also add support for `http://address.zeronet`? As noted in existing DNS related issues, Amazon applied for `.zero` TLD so there could be a conflict if they start using it. And if `.zeronet` becomes an official TLD for ZeroNet, we might also be able to register it to IANA as \"Special-Use Domain\". See https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-516552136 for details.\r\n\r\nAlso, because handling lowercase addresses and supporting custom URL schemes and TLDs is a bit different thing than the actual implementation of new sandbox, but might be better to create this in separate PRs. Handling lowercase addresses and supporting custom URL schemes and TLDs should be the first part, and when it is finished, you should make another PR for actual sandbox implementation. **Update:** It looks like you already planned that \ud83d\ude03:\r\n\r\n> This is the first PR of the \"Road to better sandbox\" series. This one announces lower-case site addresses as well as full site addresses to trackers.", "added": 1571669611, "modified": 1571669806, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-544631531", "source_type": "github"}, {"comment_id": 209, "body": "@imachug Yes, I missed that part of PR description...\r\n\r\nCan you also add support for `.zeronet` TLD? Also, although I would like to get this working as fast as possible, we would really need to decide and standardize the way of accessing ZeroNet (custom protocol, custom TLD). If we do this before actual implementation will be used, it won't be hard to do this. But if we do this after users start using any of (unofficial) ways, it would be hard to tell them to start using another way.\r\n\r\nI will also create another comment in one of DNS related issues about my thoughts about diffreant ways for accessing ZeroNet soon.", "added": 1571669948, "modified": 1571670149, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-544633852", "source_type": "github"}, {"comment_id": 210, "body": "@imachug I created a comment about different ways of accessing ZeroNet and ways of implementing that in https://github.com/HelloZeroNet/ZeroNet/issues/2100#issuecomment-544664709.", "added": 1571674604, "modified": 1571674604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-544665026", "source_type": "github"}, {"comment_id": 211, "body": "> New version of firefox on android doesn't support them\r\n\r\nBecause it is a preview version. It will get extensions support before it replaces the current version.\r\n\r\n---\r\n\r\nAlso, which way would you suggest? Extensions and PAC file are the only simple way to do this.", "added": 1571761449, "modified": 1571761449, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-545115111", "source_type": "github"}, {"comment_id": 212, "body": "@imachug Does it also work in Firefox and Edge? Also, did you do anything with DNS reverse-proxying? Because at least part which handles existing domains does not need this PR (but my DNS plugin PR).", "added": 1572199398, "modified": 1572199398, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-546733960", "source_type": "github"}, {"comment_id": 213, "body": "> You think IANA just will add .zeronet as \"Special-Use Domain\"? \r\n\r\nThey already added `.onion` domain, so I see no problem with adding `.zeronet`. You \"just\" need to create RFC specifying its usage.\r\n\r\n> Doesn't need to!\r\n\r\nIf Amazon starts using and selling `.zero` TLD, there will be a conflict with ZeroNet which would use the same TLD. This means that normal `.zero` websites will not be usable for ZeroNet users and would generally create mess.\r\n\r\n> Hm, there are special-use domains. AFAIK we can register them by issuing an RFC.\r\n\r\nTrue.", "added": 1572357485, "modified": 1572357514, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547525179", "source_type": "github"}, {"comment_id": 214, "body": "> Yes I know but they did not added .onion for at least 15 years... Think about.\r\n\r\nActually 11 years. It was the first introduced in 2004 and officialized in 2015.\r\n\r\nOf course they won't register domain now as nobody uses it. But when ZeroNet and `.zeronet` TLD becomes more popular, we can create RFC to officialize it. Until then, it is pseudo TLD.\r\n\r\n> I hate USA and Israel and they should be bombed to the ground! Fucking fascists! That's what they are! War criminal maniac terrorists!\r\n\r\nYes, but what you are currently doing is not a solution...", "added": 1572358322, "modified": 1572358367, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-547532096", "source_type": "github"}, {"comment_id": 215, "body": "@d14na Any update about Chrome Web Store?", "added": 1573395515, "modified": 1573395515, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-552214559", "source_type": "github"}, {"comment_id": 216, "body": "How would you handle this is address will be converted to lowercase before it will be sent to ZeroNet?\r\n\r\nFor example, if we choose `http://aDDREss.zeronet` scheme, `aDDREss` will be (probably?) converted to lowercase before it will send to ZeroNet server.", "added": 1575394911, "modified": 1575394911, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2231#issuecomment-561347988", "source_type": "github"}], "1604067562_mirrored_icf20_github": [{"comment_id": 217, "body": "What do you mean? On ZeroHello, click on three dots to open menu, then click on menu item that displays something like \"Version: 0.7.0 (rev4241): Updated\".", "added": 1571673215, "modified": 1571673215, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2233#issuecomment-544655900", "source_type": "github"}, {"comment_id": 218, "body": "It is not on the connected sites list until you actually open it. It is also not on more sites list as it is not meant to be used as a normal site.\r\n\r\n---\r\n\r\nIt is available in ZeroHello menu under the three-dots button:\r\n\r\n1. Click three dots:\r\n\r\n![three-dots](https://user-images.githubusercontent.com/16626308/67237484-a3d6d200-f44b-11e9-8fad-00467a80d415.png)\r\n\r\n2. Link to ZeroUpdate is available in that menu:\r\n\r\n![menu](https://user-images.githubusercontent.com/16626308/67237548-ccf76280-f44b-11e9-8536-5b3ae1c75695.png)\r\n\r\n", "added": 1571676211, "modified": 1571676211, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2233#issuecomment-544675714", "source_type": "github"}], "1604067565_mirrored_icf20_github": [{"comment_id": 219, "body": "@HelloZeroNet Current `Dockerfile` in `py3` branch is actually correct. However, it is not published to [Docker Hub](https://hub.docker.com/r/nofish/zeronet). Changing `Dockerfile` is not really needed, as you probably just need to publish new version to Docker Hub.", "added": 1571922421, "modified": 1571922421, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2234#issuecomment-545989382", "source_type": "github"}], "1604067563_mirrored_krzysztof113_github": [{"comment_id": 220, "body": "@imachug But `.ipfs.dweb.link` is actually existing public IPFS instance. So, in case in there is public ZeroNet instance, the suffix should be `.zeronet.dweb.link` (or any other public instance/proxy domain). But for local ZeroNet instances, only `.zeronet` should be used.", "added": 1571743432, "modified": 1571743432, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2236#issuecomment-544988169", "source_type": "github"}, {"comment_id": 221, "body": "@imachug Because `.link` is real TLD so `.zeronet.link` would mean that there is real server publically hosted on it (and that all requests are made to it). IPFS's `.ipfs.dweb.link` is actually also just a (centralized) IPFS proxy open to the web.\r\n\r\nBut `.zeronet` would be special-use domain so it is clear that it is used for something else than normal internet. Note that Tor also uses `.onion` in a similar way.", "added": 1571750695, "modified": 1571755281, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2236#issuecomment-545043872", "source_type": "github"}], "1604067604_mirrored_rllola_github": [{"comment_id": 222, "body": "Restating ZeroNet is needed to apply all changes (changed modules, removed modules, new modules, changed plugins...) to Python runtime environment.\r\n\r\nReloading changes without restart might be possible but it would require manual reloading of modules using some Python functions. But I don't know how stable would it work.", "added": 1571883223, "modified": 1571883223, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2237#issuecomment-545747561", "source_type": "github"}], "1604067567_mirrored_d14na_github": [{"comment_id": 223, "body": "For plugin store it is better to use merged sites. Main site should be for UI, but each plugin should be separated merged site (like repositories in Git Center).\r\n\r\n@imachug Isn't this something that @krixano will do in new KxoNetwork version?", "added": 1572008170, "modified": 1572008170, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2240#issuecomment-546410582", "source_type": "github"}], "1604067573_mirrored_leycec_github": [{"comment_id": 224, "body": "> Uh, seriously? They broke backward compatibility with many decentralized projects (I2P was already mentioned here).\r\n\r\nAre you sure that there is no other simple way to use ZeroNet in Tor Browser?\r\n\r\nAnyway, I don't think that Tor Browser team thought about this when they removed proxy support. So maybe create a bug to Tor Browser to add support back ", "added": 1572089494, "modified": 1572090108, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546608144", "source_type": "github"}, {"comment_id": 225, "body": "> An extension might help\r\n\r\nI mean built-in way. Tor Browser team probably didn't know that this will break quite a lot of projects, so creating a Tor Browser bug would make sense. Then they could provide another simple (not with `about:config`) built-in way to do this.", "added": 1572090270, "modified": 1572092467, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-546609147", "source_type": "github"}, {"comment_id": 226, "body": "@monroeclinton So it actually *is* bug in Tor Browser?", "added": 1572279948, "modified": 1572279948, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-547107428", "source_type": "github"}, {"comment_id": 227, "body": "@monroeclinton Can you then report it to Tor Browser team if it is not reported already?", "added": 1572283799, "modified": 1572283799, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-547132193", "source_type": "github"}, {"comment_id": 228, "body": "@matthewrobertbell So ask them back why does it still not work? If this is not desired behavior, they would fix it.", "added": 1572340133, "modified": 1572340133, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2244#issuecomment-547389374", "source_type": "github"}], "1604067600_mirrored_filips123_github": [{"comment_id": 229, "body": "> To make easier to manage I'm planning to move all the distributions to one repository (ZeroNet-dist) and make ZeroBundle, ZeroNet-win, ZeroNet-linux, ZeroNet-mac mark as outdated. (delete them?)\r\n\r\nThis would be OK. Or use `ZeroBundle` instead of `ZeroNet-dist` because it looks nicer \ud83d\ude03\r\n\r\nYou should also provide build scripts (maybe in master) for each system. Then you can also set up that CI will automatically build all things for you.\r\n\r\n> Idea for other branch names\r\n\r\nThis would be OK. One branch (probably master) should also contain all build sceripts with settings. Other branches should be for distributions.\r\n\r\nRegarding branch names, what about `linux32-armv8`? Is it needed?", "added": 1572074209, "modified": 1572074209, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2246#issuecomment-546589937", "source_type": "github"}, {"comment_id": 230, "body": "@hacktivist There are actually two things in this issue. First is that some installation methods are outdated and only support in Python 2 version. Other is to rename branches for compiled distributions.\r\n\r\nAnd I think that compiled distributions are needed to make ZeroNet popular for normal users. They don't know what is Python, how to install and use it. They need to just have a file/program that they can run and use it.", "added": 1572085659, "modified": 1572085674, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2246#issuecomment-546602523", "source_type": "github"}], "1604067623_mirrored_ghost_github": [{"comment_id": 231, "body": "@imachug Regarding JS mime type, I already searched about this around the web and it seems that  nobody actually know which one is correct.\r\n\r\nAlso, if you are already adding new mime types, you should also add `.webmanifest` ==> `application/manifest+json` mime type as this is official mime type for Web App Manifest for PWA. It was already added to `mimetypes` module (by me), but the change is only present in Python 3.8+.", "added": 1572092049, "modified": 1572092199, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546611504", "source_type": "github"}, {"comment_id": 232, "body": "> But now I am getting \"font/woff\" in python. I suppose the mimetypes module was fixed for fonts but the zeronet workaround wasn't removed or something?\r\n\r\nWhich Python version do you have? Because `mimetypes` is in standard library, it is updated with Python. So maybe this was changed in recent Python versions.", "added": 1572095038, "modified": 1572095038, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546615678", "source_type": "github"}, {"comment_id": 233, "body": "@imachug There are around 100 built-in extensions but yes other are loaded from system.", "added": 1572095620, "modified": 1572095620, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546616475", "source_type": "github"}, {"comment_id": 234, "body": "@hacktivist Can you explain that comment a bit more? Because I see it as point **for** using `.webmanifest` extension and correct content type.", "added": 1572095791, "modified": 1572096023, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546616727", "source_type": "github"}, {"comment_id": 235, "body": "Mimetypes module only resolves .webmanifest in Python 3.8 or if this is in system configuration. But in most cases, it is not and most users don't have Python 3.8 yet.\r\n\r\nAnd the only change needed for this is to check for `.webmanifest` and return mime type `application/manifest+json`. Changing `.json` is not needed.", "added": 1572097825, "modified": 1572097956, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546619985", "source_type": "github"}, {"comment_id": 236, "body": "@Hacktivist Only since Python 3.8. But most users don't use it yet.", "added": 1572103392, "modified": 1572103433, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-546627501", "source_type": "github"}], "1604067611_mirrored_filips123_github": [{"comment_id": 237, "body": "@krixano @imachug @hacktivist", "added": 1572264280, "modified": 1572264280, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2253#issuecomment-546989377", "source_type": "github"}], "1604067626_mirrored_filips123_github": [{"comment_id": 238, "body": "@HelloZeroNet @imachug @krixano @ValdikSS @d14na", "added": 1572540032, "modified": 1572540032, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-548537141", "source_type": "github"}, {"comment_id": 239, "body": "> Actually it should work for bundles on Windows and Linux\r\n\r\n@HelloZeroNet Good, but when is this actually used? I use ZeroBundle for Windows, but based on file modification date, it was never updated (but source code was updated). Or do you do this only for some specific cases when updating ZeroBundle is needed?\r\n\r\nAlso, was this added recently in Python 3 version? **Update:** In May 2019 (d1e404f093c23a0a0cc8f4d4ee4f1f6d233eaf47).\r\n\r\nIt might be good to backport this to Python 2 as there are still some peers running on 0.6.5 (from my `/Stats` there are 11 py2 peers and 34 py3 peers).\r\n\r\n> if someone installed it manually\r\n\r\nIf it was installed from source code, without any embedded Python, then you just update source code and not ZeroBundle. Also, if it was installed with Git, it might be good to actually use Git to update ZeroNet. \r\n\r\n> or from a package\r\n\r\nYou should automatically publish new ZeroNet to various package managers (#2246). Then, when update is available, you could just display a notification to users that they need to update ZeroNet from package manager. And, if possible, you could automatically do this.", "added": 1572592960, "modified": 1572628369, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-548739362", "source_type": "github"}, {"comment_id": 240, "body": "@HelloZeroNet @shortcutme Is there any update? Can you please answer https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-548739362?", "added": 1573311474, "modified": 1573311474, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-552122666", "source_type": "github"}, {"comment_id": 241, "body": "@HelloZeroNet When is this actually used? Based on file modification date, it was never updated for me (but source code was updated). Or do you do this only for some specific cases when updating ZeroBundle is needed?\r\n\r\nYes, some notification in py2 would be useful, as some users still don't know how to update to py2.", "added": 1573390816, "modified": 1573390942, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-552207826", "source_type": "github"}, {"comment_id": 242, "body": "@HelloZeroNet Should this be automated? So, when new (compatible) Python version is released, when there are some big fixes in  Python, when adding/updating bundled dependencies (e.g. my DNS plugin).", "added": 1573391524, "modified": 1573391524, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-552209034", "source_type": "github"}, {"comment_id": 243, "body": "Couldn't you automatically run Pip to install new dependencies if user does not have bundle? In case of source installation, you can get Python executable and run Pip from it, so it will work both with global installation and venv.\r\n\r\nAlso, my DNS plugin now bundles dependencies with it, so for it, this is not a problem. Because of that, can you please merge it, as any domain plugin that needs to be installed separately is basically useless?", "added": 1573393118, "modified": 1573393303, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264#issuecomment-552211170", "source_type": "github"}], "1604067617_mirrored_krixano_github": [{"comment_id": 244, "body": "PyElliptic's original author suggested [this](https://github.com/pyca/cryptography) as alternative. It is [dual-licensed](https://github.com/pyca/cryptography/blob/master/LICENSE) under Apache or BSD. There are also [some other](https://github.com/yann2192/pyelliptic/issues/50#issuecomment-297018932) alternatives.", "added": 1572711209, "modified": 1572711294, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549072476", "source_type": "github"}, {"comment_id": 245, "body": "@0x6a73 ZeroNet uses fork from BitMessage which is licenced under GPLv3. Original pyelliptic was also using GPLv3, but switched to BSD at some later point.", "added": 1572763462, "modified": 1572763462, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549120204", "source_type": "github"}, {"comment_id": 246, "body": "@HelloZeroNet I would recommend to modularize ZeroNet a bit more (#2063). Then \"one part\" (but multiple libraries) would be internal ZeroNet libraries (licensed under MIT) and another part would be a program (licensed under GPL). This would also make ZeroNet mode embeddable (and hopefully more popular) as developers won't have to worry about all license issues.", "added": 1572796151, "modified": 1572796151, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549166765", "source_type": "github"}, {"comment_id": 247, "body": "And contributors whose code was replaced/deleted?", "added": 1572797471, "modified": 1572797471, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549168629", "source_type": "github"}, {"comment_id": 248, "body": "@namazso @krixano\r\n\r\n> Now, I don't know if pypi packages count or not with this whole licensing stuff, so it'd be nice to get clarification on that aspect.\r\n\r\nI contacted FSF if they allow using projects with incompatible licenses as PyPI packages/dependencies in the GPLv2-licensed project (also with some other questions). They haven't answered yet as their response may take a few days.\r\n\r\nHowever, ZeroBundle could still be a problem. I also asked FSF about this.\r\n\r\n> even with the incompatibility issues, there are other reasons for upgrading the license to GPLv3.\r\n\r\nHere I would also say that another thing we should/could do when updating licenses would be to split ZeroNet into libraries and release libraries as MIT/BSD/similar license and main program as GPL. This would enable developers to develop third-party solutions for ZeroNet without having to worry about license incompatibilities.\r\n\r\nSo I recommend you to vote for \"GPLv3 and Lax\" option. Voting is your opinion of course so you can also chose other options if you want.", "added": 1572888034, "modified": 1572888034, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549529725", "source_type": "github"}, {"comment_id": 249, "body": "@namazso But this won't be good for normal users which don't know much about programming and building/compiling programs. And one thing that ZeroNet really needs to be popular is an easy way to install and use it.\r\n\r\nAlso, licensing core ZeroNet libraries as Lax would also enable third-party developers to implement custom ZeroNet solutions, just like some developers are already using IPFS to build custom solutions (which is dual-licensed MIT/Apache2). In case if ZeroNet core libraries would remain GPLv2, that developers would have to worry about all license incompatibilities too much. But main program would be still licensed as GPL as it probably won't be meant to be used in third-party solutions so much.", "added": 1572888410, "modified": 1572888673, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549531916", "source_type": "github"}, {"comment_id": 250, "body": "> I'm indeed not sure how difficult it would be to write an \"installer\" that does all the hassle of pulling the libraries and building ZeroNet automatically would be, or how much time/space/bandwidth such installer would take compared to the current one.\r\n\r\nWe first need to wait if FSF considers this as accepted. If so, we will probably do this for ZeroBundle. For source code installation, PyPI will also mostly cover this (and PyPI can probably also be embedded to ZeroBundle if needed).", "added": 1572888919, "modified": 1572888919, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549535078", "source_type": "github"}, {"comment_id": 251, "body": "@krixano It would be good to tell this to antifa, lol", "added": 1572890162, "modified": 1572890162, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2269#issuecomment-549542977", "source_type": "github"}], "1604067605_mirrored_ZeroNetTickBot_github": [{"comment_id": 252, "body": "GPLv3 and Apache", "added": 1572804545, "modified": 1572804545, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549178798", "source_type": "github"}, {"comment_id": 253, "body": "Relicensing as GPLv3 and Apache-compatible would be needed in case we make ZeroNet more modularized (#2063) in the future. In this case, ZeroNet libraries (protocol handling and other more low-level things) would then be licensed as Apache-compatible license (MIT/BSD). Complete ZeroNet program would then be licensed as GPLv3.\r\n\r\nThis could help making ZeroNet more popular as developers would have already-created modular libraries for extending/building with ZeroNet. Apache-compatible license would be needed as such licenses (MIT/BSD) have the ability to be used in most other licenses, so developers won't have to worry about license compatibility so much.", "added": 1572805773, "modified": 1572805773, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549180687", "source_type": "github"}, {"comment_id": 254, "body": "@anoadragon453 This can be considered as \"any license\" or \"I don't care\", right?\r\n\r\n@krixano Bot currently does not support this. But can \"GPLv3 and Apache\" be also considered as this? If so, @anoadragon453 can update vote to this. If not, @imachug probably need to implement \"Any license\" option.", "added": 1572808286, "modified": 1572808286, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2271#issuecomment-549184373", "source_type": "github"}], "1604067608_mirrored_ZeroNetTickBot_github": [{"comment_id": 255, "body": "GPLv3 and Lax", "added": 1572835946, "modified": 1572835946, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549230911", "source_type": "github"}, {"comment_id": 256, "body": "Relicensing as GPLv3 and Lax would be needed in case we make ZeroNet more modularized (#2063) in the future. In this case, ZeroNet libraries (protocol handling and other more low-level things) would then be licensed as Lax license (MIT/BSD). Complete ZeroNet program would then be licensed as GPLv3.\r\n\r\nThis could help making ZeroNet more popular as developers would have already-created modular libraries for extending/building with ZeroNet. Lax license would be needed as such licenses (MIT/BSD) have the ability to be used in most other licenses, so developers won't have to worry about license compatibility so much.", "added": 1572837899, "modified": 1572837899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549235463", "source_type": "github"}, {"comment_id": 257, "body": "@cclauss In this case, please switch to \"GPLv3+ and Lax\". If you do this, and if your code is appropriate for usage as ZeroNet libraries, it will be probably licensed as Lax (MIT/BSD) license. This will also make other developers easier to use ZeroNet in their projects as they won't have to worry about licenses and will still be able to make non-GPL projects with core ZeroNet libraries. However, the license for ZeroNet as whole program will probably be GPL.\r\n\r\nP.S. If you want to change vote, you need to have separate comment as this is how bot works I think.", "added": 1572882358, "modified": 1572883070, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549492742", "source_type": "github"}, {"comment_id": 258, "body": "@cclauss Post only mentions currently incompatible licences. But there are also some MIT and BSD-licenced dependencies. Also, reason for using MIT/BSD is that it is more compatible with other licenses than Apache 2 which would be important and using ZeroNet in other projects.", "added": 1572884419, "modified": 1572885065, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549506451", "source_type": "github"}, {"comment_id": 259, "body": "This would be how a process of resolving licenses and modularization of ZeroNet could/would probably look like if \"GPLv3 and Lax\" is chosen:\r\n\r\n1. First, ZeroNet is just re-licensed to GPLv3 to resolve all current incompatibilities.\r\n\r\n2. Then, we (here I mean ZeroNet maintainers and contributions) start working on modularization.\r\n\r\n3. During that, new contributions are asked (while making their PR) for simple CLA to give as the ability to re-license their work as MIT/Lax license if their work would be later used on ZeroNet core libraries.\r\n\r\n4. ZeroNet is then modularized into multiple libraries/packages. Core libraries that can be used for building third-party Zeronet-based solutions are licensed under MIT/Lax license which gives developers the ability to use them easily. Main ZeroNet program (as a whole like it is currently) remains licensed under GPLv3 as it is not meant to be frequently reused in third-party solutions.\r\n\r\n5. In case if there are some MIT-incompatible libraries which need to be used in the MIT-licensed part of ZeroNet, we try to resolve this. In the worst case, we find alternative libraries which are also compatible with MIT and GPLv3.\r\n\r\nThis process could take quite a long time. However, it would be good for the future development of ZeroNet as a project and also ZeroNet as a solution for third-party projects. And unlike some users says (actually it is one person with multiple spamming accounts), this won't make ZeroNet more restricted/proprietary/etc.\r\n\r\n@HelloZeroNet @imachug @krixano What do you think?", "added": 1572972107, "modified": 1572972107, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549986848", "source_type": "github"}, {"comment_id": 260, "body": "So smart. Using `II` and `lI` instead of `ll` in username:\r\n\r\n* Original: `HelloZeroNet`\r\n* Fake: `HeIIoZeroNet`\r\n* Also fake: `HelIoZeroNet`\r\n* Also fake: `HeIloZeroNet`", "added": 1573152429, "modified": 1573156527, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-551280533", "source_type": "github"}, {"comment_id": 261, "body": "@thesoftwarejedi That user (hacktivist/antifa) created \"homograph attack\" of `HelloZeroNet` username. It used `II` instead of `ll` but they look same on GitHub. The referenced issue was from that fake account.", "added": 1573182732, "modified": 1573182732, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-551399326", "source_type": "github"}, {"comment_id": 262, "body": "@0x6a73 Please save/log what he says.", "added": 1573214725, "modified": 1573214725, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-551862839", "source_type": "github"}, {"comment_id": 263, "body": "> Funny, the guy who talks too much about copyright don't know that doesn't need to be completely identical at all to be considered a copyright infringement! It is called substantial similarity\r\n\r\nSo you own copyright for detecting and handling MIME types? Why then don't you sue Apache or other web servers which use the same way of handling MIME types?\r\n\r\nOr even better, where is your proof that you didn't steal that code from Apache or another web server? ", "added": 1573290977, "modified": 1573290977, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552094293", "source_type": "github"}, {"comment_id": 264, "body": "I created [ZeroTalk topic](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1573418495_1LFu1BTScmY82HHtg3TY2jAuSrCYNsQWEY/Contributor+Agreement+for+License+Change).\r\n\r\nNote that those are GitHub usernames and a user may use different ZeroID. If you know any other way of contacting those users, please let us know.", "added": 1573407734, "modified": 1573407785, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552231805", "source_type": "github"}, {"comment_id": 265, "body": "> The only cases for termination are distribution & modification and as far as i understand the violation happens only due to \"linking\" (tbh, not sure how it applies to python), thus merely sending patches shouldn't count.\r\n\r\nI asked FSF about that. I will post when I receive answer.", "added": 1573412007, "modified": 1573412007, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-552238666", "source_type": "github"}, {"comment_id": 266, "body": "Stop lying. You were banned a long before you ever reported license violations and before Tamas Kocsis ever pushed that changes.\r\n\r\nThe reason for this was that you implemented useless cache for files, and when nobody wanted it, you started spamming, trolling and making death threats to people who told you that cache is useless.\r\n\r\nAfter that, you created another account which is already violation of GitHub ToS and continue spamming and making death threats.\r\n\r\nAlso, creating more and more accounts won't make your statements any more true.\r\n", "added": 1573887878, "modified": 1573895970, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554623077", "source_type": "github"}, {"comment_id": 267, "body": "Stop lying. You were banned a long before you ever reported license violations and before Tamas Kocsis ever pushed that changes.\r\n\r\nThe reason for this was that you implemented useless cache for files, and when nobody wanted it, you started spamming, trolling and making death threats to people who told you that cache is useless.\r\n\r\nAfter that, you created another account which is already violation of GitHub ToS and continue spamming and making death threats.\r\n\r\nAlso, creating more and more accounts won't make your statements any more true.\r\n", "added": 1573920978, "modified": 1573921359, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554665918", "source_type": "github"}, {"comment_id": 268, "body": "> That's great but the voting is not about replacing dependencies far as I concern, nobody agreed on that\r\n\r\nIf dependencies are replaced, incompatibilities are fixed and voting is not needed.\r\n\r\n", "added": 1574009424, "modified": 1574009424, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554779595", "source_type": "github"}, {"comment_id": 269, "body": "Why then conditions from GPLv2 (that code must still be GPL-licensed) still apply?", "added": 1574010209, "modified": 1574010209, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554780749", "source_type": "github"}, {"comment_id": 270, "body": "> That is just not permitted\r\n\r\nWhy?\r\n\r\n> and also is interesting how you planning to force forks to get rid of those dependencies...\r\n\r\nAnd how you are planning to force forks to update to GPLv3?", "added": 1574010625, "modified": 1574010649, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554781343", "source_type": "github"}, {"comment_id": 271, "body": "> They will get new version of ZeroNet anyway.\r\n\r\nThey will get new version of ZeroNet, including dependencies, anyway.\r\n\r\n> Not possible to force everyone to move to MIT or anything else from GPL. \r\n\r\n\"Forcing\" forks to use GPLv3, MIT or update dependencies is the same.\r\n\r\n> I'm too tired after two week to talk about this more.\r\n\r\nWe allow you to stop.", "added": 1574010960, "modified": 1574010981, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554781804", "source_type": "github"}, {"comment_id": 272, "body": "> they need to use GPLv3 on they repositories\r\n\r\nAnd what is then de difference if they need to update dependencies or use MIT on they repositories?", "added": 1574011252, "modified": 1574011252, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554782383", "source_type": "github"}, {"comment_id": 273, "body": "> I think most people will do the same\r\n\r\nWhich people?\r\n> would solve all problems instantly\r\n\r\nAfter all contributors agree...\r\n\r\n> Worth noting that any attempt to restrict the use of ZeroNet\r\n\r\nSwitching to a more permissive license would be \"attempt to restrict the use of ZeroNet\"?", "added": 1574011714, "modified": 1574011714, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-554783075", "source_type": "github"}, {"comment_id": 274, "body": "> The bot is dead again.\r\n\r\nIt is fixed again. Thanks for report \ud83d\udc4d \r\n\r\n> Not everyone can open and see a markdown file\r\n\r\nMarkdown is built specifically that you can open and read it without any render...\r\n\r\n> If someone want to get information about how to install ZeroNet they would look for the `INSTALL` file not the `README.markdown`.\r\n\r\nNo, most users will look for README. Why should they look to 10 different files if they can get all information in one place (README)?", "added": 1574171910, "modified": 1574171910, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555603908", "source_type": "github"}, {"comment_id": 275, "body": "I received the answer from FSF. Bellow is their original answer. Here is my quick summary:\r\n\r\n* If we get permission from contributors, we can re-license future releases ZeroNet, also to GPLv3, MIT or another license. Although they suggest making sure that new license won't be harmful to the community, switch to MIT probably won't be as only libraries will be licensed so and the whole project would still be GPL.\r\n\r\n*  For any license change, we need permission from copyright owners (contributors).\r\n\r\n* After incompatibilities are fixed, new versions can be legally distributed again. however, old versions will still be incompatible. Also, who has a copy of an old version will be in violation once they distribute their copy without fixing the license incompatibilities.\r\n\r\n* Owner of the library that uses incompatible license can give us permission to use it even if licenses are incompatible. This would be useful for Apache-licensed projects where maintainers are still active.\r\n\r\n---\r\n\r\n\r\n> Can future releases of GPLv2-licensed program become non-GPL-licensed\r\n> (but still open source) or GPLv3-licensed if all contributions agree?\r\n\r\nyes\r\n\r\nIn the case of upgrading to GPLv3, if the GPLv2-licensed software\r\nalready has the \"or later\" option to upgrade (see section 9 of GPLv2),\r\nthen you need not ask permission to upgrade to GPLv3.\r\n\r\nIn the case of changing the license completely, the most important first\r\nstep is to make sure that the license change isn't disastrous to the\r\nproject and the community. A change to GPLv3 is a good idea since GPLv3\r\nis an improvement over GPLv2 (we discussed one aspect of this when we\r\nreferenced how GPLv3 handles accidental violations.) But a change to a\r\nGPL-incompatible license, or a license which would permit the software\r\nto become proprietary may harm the community in many ways; some of which\r\nare hard to foresee, and may be hidden behind the beguiling\r\nattractiveness of a lax and permissive license which permits the work to\r\nlink everything under the sun.\r\n\r\n> What is the process of doing this?\r\n\r\nYou would need the explicit permission of all of the copyright holders\r\nto change the license of their work.\r\n\r\n> Is consent from contributors needed if license violations are going to\r\n> be fixed with switching to GPLv3 which is compatible with\r\n> dependencies? What if switch to another open source license is needed\r\n> for this?\r\n\r\nYou will need explicit permission from the relevant copyright holders to\r\nchange the license of a work regardless of why you are doing the\r\nchange. As above, the only situation where you don't need permission is\r\nif it has already been given in the form of the \"or later\" upgrade\r\noption in GPLv2.\r\n\r\n> Also, what is the exact process of fixing this? Can a project license\r\n> be changed to compatible-one and can incompatible dependencies be\r\n> replaced with their license-compatible alternatives?\r\n\r\nOnce you square away all of the license compatibility problems, then\r\nevery copy of the correctly-licensed software will be in\r\ncompliance. This doesn't cure, or permit the distribution of\r\nincompatibly-licensed past copies retroactively. To put it another way:\r\nwhat is not in compliance isn't fixed by the fact there is a new version\r\nout there which is.\r\n\r\nThankfully, software freedom means that everyone is free to copy and\r\nshare the compliant version once that is out and available.\r\n\r\n> Can the owner of a library which's license is being violated gives\r\n> permission to use it in that specific project even if licenses are\r\n> incompatible?\r\n\r\nyes\r\n\r\nPlease see: http://www.gnu.org/licenses/gpl-faq.html#GPLIncompatibleLibs\r\n\r\n> > But with GPLv2, the rights of the violator under the GPL to further\r\n> > distribute the work are immediately terminated upon violation.\r\n\r\n> Who is violator in this case? Project maintainer, the person who\r\n> unintentionally introduced incompatible dependency or the person which\r\n> distributes such project?\r\n\r\nThe GPL places conditions on distributing the software. Therefore, the\r\nviolator would be a distributor of the work if they do not abide by the\r\nconditions of the license.\r\n\r\n> Also, are rights to distribute the project terminated when violation\r\n> was discovered or when it first happened?\r\n\r\nWhen someone distributes the software not in compliance with the\r\nconditions of GPLv2, their rights are immediately terminated (but\r\nremember the The Principles of Community-Oriented GPL Enforcement I\r\nreferenced earlier). However, anyone who received a copy from them is\r\nnot also in violation unless and until they further distribute the\r\nsoftware in an incompatible way as well.\r\n\r\n> What is the process of restoring license after violations are fixed\r\n> and is there any specific process that needs to be done to fix\r\n> violations? What needs to be done in order to distribute that project\r\n> again?\r\n\r\nUnder GPLv2 the violator must request a reinstatement of rights from the\r\ncopyright holders before they may distribute the work again.\r\n\r\nUnder GPLv3 the violator is eligible for automatic reinstatement when:\r\n\r\n* the violation is corrected, and they are not contacted by a\r\ncopyright holder about the violation within sixty days after the\r\ncorrection, or\r\n\r\n* the violator receives, from a copyright holder, a first-ever\r\ncontact regarding a GPL violation, and it is corrected within\r\nthirty days of receipt of copyright holder's notice.", "added": 1574181429, "modified": 1574181429, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555674565", "source_type": "github"}, {"comment_id": 276, "body": "> Contributors do agree that ZeroNet need to be on GPLv3+ and that's all what matter.\r\n\r\nAll contributors need to agree and that's all what matter.", "added": 1574187296, "modified": 1574187296, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555718026", "source_type": "github"}, {"comment_id": 277, "body": "> No they don't!\r\n\r\nYes they do. Read a response from FSF:\r\n\r\n> You will need explicit permission from the relevant copyright holders to\r\nchange the license of a work regardless of why you are doing the\r\nchange.\r\n\r\n---\r\n\r\n> The voting options also wrong! This voting should have only two options GPL-3.0-only or GPL-3.0-or-later not 10 nonsense. \r\n\r\nExplain.", "added": 1574187621, "modified": 1574187628, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555720298", "source_type": "github"}, {"comment_id": 278, "body": "> seems you don't understand the response of FSF either\r\n\r\nExplain that...\r\n\r\n> You must replace the license with GPLv3! Which part don't you understand?\r\n\r\nI don't know. Can you explain me please?", "added": 1574188374, "modified": 1574188374, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555725356", "source_type": "github"}, {"comment_id": 279, "body": "> You will need explicit permission from the relevant copyright holders to\r\nchange the license of a work regardless of why you are doing the\r\nchange. As above, the only situation where you don't need permission is\r\nif it has already been given in the form of the \"or later\" upgrade\r\noption in GPLv2.\r\n\r\nCurrent ZeroNet license does not specify \"or later\". This means that we need permission from contributors to re-license ZeroNet to any other license, including GPLv3.\r\n\r\n> In the case of changing the license completely, the most important first\r\nstep is to make sure that the license change isn't disastrous to the\r\nproject and the community. \r\n\r\nThis is a suggestion, not a requirement. Also, because permissive license would only be used for core libraries, it won't disastrous to the project and the community in any way.\r\n\r\n---\r\n\r\nNow, please explain me what is wrong here...", "added": 1574188601, "modified": 1574188601, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555726773", "source_type": "github"}, {"comment_id": 280, "body": "> Go read over and over again until you do understand.\r\n\r\nI also recommend this to you...", "added": 1574188616, "modified": 1574188623, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555726864", "source_type": "github"}, {"comment_id": 281, "body": "Contributors of code are the only one which has copyright for that piece of code. And they only give permission to distribute it under GPLv2. It doesn't matter if the license was violated, they still only give you permission to distribute it under GPLv2.\r\n\r\nYou need permission from contributors if you want to change license. Let me quote FSF again if you can't read:\r\n\r\n> In the case of upgrading to GPLv3, if the GPLv2-licensed software\r\n**already has the \"or later\" option** to upgrade (see section 9 of GPLv2),\r\nthen you need not ask permission to upgrade to GPLv3.\r\n\r\n> You would need the explicit permission of all of the copyright holders\r\nto change the license of their work.\r\n\r\n> You will need explicit permission from the relevant copyright holders to\r\nchange the license of a work regardless of why you are doing the\r\nchange. As above, the only situation where you don't need permission is\r\n**if it has already been given in the form of the \"or later\" upgrade\r\noption** in GPLv2.", "added": 1574189041, "modified": 1574189041, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555729441", "source_type": "github"}, {"comment_id": 282, "body": "To comply with the licenses, you changed the license. Again, **you changed the license**!", "added": 1574189282, "modified": 1574189813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555730871", "source_type": "github"}, {"comment_id": 283, "body": "GPLv2 and GPLv3 are different licenses! FSF just confirmed that. The only case when you don't need consent to change to GPLv3 is when GPLv2 specifies \"or later\" which ZeroNet doesn't.\r\n\r\nFor those who just reading now, @binarypunk is a troll which is spamming and trolling on ZeroNet issues for a few weeks. He things he knows how licenses work, although he doesn't, and nobody agree with him.\r\n\r\n---\r\n\r\nAgain:\r\n\r\n> You would need the explicit permission of all of the copyright holders\r\nto change the license of their work.\r\n\r\nNow explain where does this prove your points.\r\n\r\n---\r\n\r\n> Nothing else can be done!\r\n\r\nWhat about finding alternative libraries, contacting library authors to give permission, etc?", "added": 1574190273, "modified": 1574190372, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555737286", "source_type": "github"}, {"comment_id": 284, "body": "> STOP OVER QUOTING YOURSELF YOU MANIAC!\r\n\r\nSo I am FSF?", "added": 1574190417, "modified": 1574190417, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555738148", "source_type": "github"}, {"comment_id": 285, "body": "> Shame on you!\r\n\r\nSays someone who has been trolling, spamming making death threats, violating GitHub ToS...\r\n\r\n> You lie to FSF and misleading previous contributors.\r\n\r\nI am misleading previous contributors because I am giving them right they own to decide which license will be used?", "added": 1574190721, "modified": 1574190721, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555740054", "source_type": "github"}, {"comment_id": 286, "body": "> there is absolutely nothing else can be done but using a GPLv3+ license\r\n\r\nWhat about finding alternative libraries, contacting library authors to give permission, using another license, etc?\r\n\r\n> If future releases of ZeroNet is licensed anything but GPL that would very badly harm ZeroNet.\r\n\r\nBecause it would become easier to use in third-party solutions and more popular?\r\n\r\n> but this will not change the fact that GPLv2 is terminated\r\n\r\nGPLv2 is not terminated. Licenses of dependencies are.\r\n\r\n> while you and some other looking ways to restrict ZeroNet,\r\n\r\nAllowing others to easier create ZeroNet-based programs would restrict ZeroNet?\r\n\r\n> if you need to disregard what contributors want\r\n\r\nSays someone who wants to completely ignore \"voting\". And BTW, it is not voting but contributor agreement for license change (CLA).", "added": 1574191277, "modified": 1574191450, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555743480", "source_type": "github"}, {"comment_id": 287, "body": "The Free Software Foundation was very clear in their message:\r\n\r\n> In the case of upgrading to GPLv3, if the GPLv2-licensed software\r\n> **already has the \"or later\" option** to upgrade (see section 9 of GPLv2),\r\n> then you need not ask permission to upgrade to GPLv3.\r\n\r\n> You would need the explicit permission of all of the copyright holders\r\n> to change the license of their work.\r\n \r\n> You will need explicit permission from the relevant copyright holders to\r\n> change the license of a work regardless of why you are doing the\r\n> change. As above, the only situation where you don't need permission is\r\n> **if it has already been given in the form of the \"or later\" upgrade\r\n> option** in GPLv2.\r\n\r\n", "added": 1574192886, "modified": 1574192886, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555752107", "source_type": "github"}, {"comment_id": 288, "body": "So, explain what is not true here.", "added": 1574192924, "modified": 1574192924, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555752324", "source_type": "github"}, {"comment_id": 289, "body": "Users can use this tool themselves if they want. For anything else, changelog in GitHub Releases and ZeroBlog is enough.", "added": 1574221081, "modified": 1574221081, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555861983", "source_type": "github"}, {"comment_id": 290, "body": "So we need 20 different files just for ChangeLog? And just that you know, GIMP stopped using file changelogs and instead using release notes on their site.", "added": 1574222447, "modified": 1574222447, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555867973", "source_type": "github"}, {"comment_id": 291, "body": "Changelogs last updated 10 years ago...", "added": 1574222555, "modified": 1574222555, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555868446", "source_type": "github"}, {"comment_id": 292, "body": "> I hate googlelang\r\n\r\nAt least something where we agree \ud83d\udc4d", "added": 1574228305, "modified": 1574228305, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555899029", "source_type": "github"}, {"comment_id": 293, "body": "GIMP's changelog in their repository are not updated. Their changelogs are in release notes on their website.\r\n\r\nYou don't need 20 different files. They will just create mess. You can display all those things in README, GitHub or website.\r\n\r\nMost OSs also don't handle those \"special files\" in any way.\r\n\r\nAnd not only GitHub has this features (release notes, contributors list...). Almost every VCS hosting system has them. Also GitLab, Gitea and GitCenter can also be updated to support them.", "added": 1574228524, "modified": 1574228647, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-555900240", "source_type": "github"}, {"comment_id": 294, "body": "> Since when you can legally allowed to \"fix\" a crime? I thought if you commit a crime you get jail, not time to vote!\r\n\r\nAnd death threats are not a crime?\r\n\r\nAlso,and your switch to GPLv3 would also magically fix a \"crime\"?\r\n\r\n> Since all contributions made under GPL the license can be replace with GPLv3+ without any issue.\r\n\r\n\"GPL\" license does not exist! There are just GPLv1, GPLv2 and GPLv3. Both of them are independent and different. As pointed by FSF, you need consent from contributions for any license change, including GPLv3, as GPLv3 is different license than GPLv2. The only case when you don't need consent is if software was already licensed as GPLv2 or later, but this is not the case in ZeroNet. As contributions are made only under GPLv2 only, we need consent from their authors to change the license.\r\n\r\n> I'm a lawyer\r\n\r\nAnd I'm an astronaut.", "added": 1574263200, "modified": 1574263200, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-556202716", "source_type": "github"}, {"comment_id": 295, "body": "> Anyways, it looks like I didn't quite get the 95%+ rule correctly.\r\n\r\nThis rule means that if small percentage of users were unreachable after several attempts, we can assume they agree with change. However, if they specifically don't agree, we can't ignore them.", "added": 1574936776, "modified": 1574936776, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559494089", "source_type": "github"}, {"comment_id": 296, "body": "As it is very hard to get 100% agreement, most open source communities agree that some very high percentage (for example 95%) is enough for relicesing:\r\n\r\n> While in the free and open-source domain achieving 100% coverage of all authors is often impossible due to the many contributors involved, often it is assumed that a great majority is sufficient. For instance, Mozilla assumed an author coverage of 95% to be sufficient.\r\n\r\nHowever, in our case, the only currently possible option is dual-licencing as we don't have enough agreements.", "added": 1574938979, "modified": 1574938979, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559505983", "source_type": "github"}, {"comment_id": 297, "body": "> Ok I guess we can use GPLv3-only in case we remove the contributions by the three people who voted for \"Lax\".\r\n\r\nAre you sure that we need to remove that contributions? As Lax is more permissive than GPLv3, we can still license their contributions as GPLv3.", "added": 1574943209, "modified": 1574943209, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559529615", "source_type": "github"}, {"comment_id": 298, "body": "> Now, we have to take a look at the dependencies. Quite a lot of them are GPLv3-incompatible.\r\n\r\nHave you made any progress on that?", "added": 1574943452, "modified": 1574943452, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559530898", "source_type": "github"}, {"comment_id": 299, "body": "> Contributors voted for GPLv3+!\r\n\r\nGPv3+ means GPLv3 **or** later. So we can either use GPLv3-only or GPLv3-or-later for license.\r\n\r\n> Show me just one dependency which is not compatible with GPLv3+!\r\n\r\nBencode parser. Licensed under BitTorrent Open Source License. Incompatible with any GPL license.", "added": 1574943647, "modified": 1574943754, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559531906", "source_type": "github"}, {"comment_id": 300, "body": "> You can't license ZeroNet GPLv3-only when most contributors clearly voted for GPLv3+\r\n\r\nThis is the same as you would say that you can't include public domain software in other licenses because authors licensed it under public domain.", "added": 1574943926, "modified": 1574943926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559533374", "source_type": "github"}, {"comment_id": 301, "body": "> talk respectfully\r\n\r\nSame person, few minutes earlier:\r\n\r\n> The two retard again in action.", "added": 1574944139, "modified": 1574944152, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559534463", "source_type": "github"}, {"comment_id": 302, "body": "> No, because those are GPLv2-incompatible licenses. It doesn't really\r\nmatter the technical details of how they arrive at being included and\r\nlinked to the project.\r\n\r\n> If it was possible to simply package incompatible (this includes\r\nproprietary) libraries in a different file, or something similar, then\r\nit would be trivially easy to circumvent the GPL and the license would\r\nhave no effect. ", "added": 1574944732, "modified": 1574944732, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559537766", "source_type": "github"}, {"comment_id": 303, "body": "It is same about any copyleft license!", "added": 1574944819, "modified": 1574944819, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559538295", "source_type": "github"}, {"comment_id": 304, "body": "> The license only matters when you ship something in the source code.\r\n\r\nSo we can keep GPLv2 and just use the same packages with incompatible licenses but from PyPI? What is then points of license?\r\n\r\nFSF already said that unfortunately this is not possible.\r\n\r\n> Could even use pip to install non-free software. \r\n\r\nYou can already. PyPI packages provide \"license\" field which is counted as license information. But you can't distribute/use them in GPL-licensed project.\r\n\r\n> So ZeroNet must have a GPLv3+ (GPLv3.0-or-later) license to solve license incompatibility issues.\r\n\r\nOr replace incompatible dependencies with compatible alternatives and keep  GPLv2.\r\n\r\nOr use GPLv3-only, for which we already have permission from many contributions.\r\n\r\nOr use MIT, if we get permission from contributors.", "added": 1574947045, "modified": 1574947098, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559549980", "source_type": "github"}, {"comment_id": 305, "body": "> Yes, probably I'm the only one here who know the legal definition of linking\r\n\r\nYes, you better know things than FSF.\r\n\r\nExplain me why we can't keep GPLv2 if we replace incompatible dependencies, use GPLv3-only or use MIT.\r\n\r\nAlso explain what is the point of licenses if you can bypass them just with using dependencies from PyPI.", "added": 1574947150, "modified": 1574947292, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559550618", "source_type": "github"}, {"comment_id": 306, "body": "Explain me why we can't keep GPLv2 if we replace incompatible dependencies, use GPLv3-only or use MIT.\r\n\r\nAlso explain what is the point of licenses if you can bypass them just with using dependencies from PyPI.\r\n\r\n", "added": 1574947318, "modified": 1574947318, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559551419", "source_type": "github"}, {"comment_id": 307, "body": "> Threatening me with block is absurd and shameful.\r\n> This is absurd and illegal!\r\n\r\nMuch like spamming, trolling, violating ToS, death threats...\r\n\r\n> Could I please see the full, uncut e-mail which was sent to FSF and their full, uncut reply? \r\n\r\nSure, just wait a few minutes.\r\n\r\n> Explain to me how is that now GPLv3-only has more votes? \r\n\r\nBecause contributions from contributors which accepted GPLv3+ can also be licensed as GPLv3 only. However, some contributors also chose GPLv3 only which can't be licensed as GPLv3+.", "added": 1574948058, "modified": 1574948158, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559554742", "source_type": "github"}, {"comment_id": 308, "body": "?", "added": 1574948246, "modified": 1574948246, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559555579", "source_type": "github"}, {"comment_id": 309, "body": "You can use code from users who voted for GPLv3+ under GPLv3. The same as you can use MIT code in GPLv3, public domain in MIT and GPLv3...", "added": 1574948361, "modified": 1574948361, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559556114", "source_type": "github"}, {"comment_id": 310, "body": "> GPLv3+ is more permissive than GPLv3-only\r\n\r\nYes. And you can include more permissive licenses in less permissive ones. But not the opposite way.", "added": 1574948500, "modified": 1574948575, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559556710", "source_type": "github"}, {"comment_id": 311, "body": "So you also think you can't use public domain code in MIT-licensed program? And that you can't use MIT code in GPL-licensed program?", "added": 1574948803, "modified": 1574948803, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559557955", "source_type": "github"}, {"comment_id": 312, "body": "> You are annoying @filips123 **you requoting yourself** and your stupid things what you read randomly on the net.\r\n\r\nAnd then you post each your comment at least two times.", "added": 1574948871, "modified": 1574948871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559558233", "source_type": "github"}, {"comment_id": 313, "body": "@adrelanos I think I already posted FSF reply, but as the discussion here is quite long, here it is again on Pastebin:\r\n\r\n* [1](https://pastebin.com/UdPbbRFB)\r\n* [2](https://pastebin.com/x6gEHxi8)", "added": 1574949236, "modified": 1574949236, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559559706", "source_type": "github"}, {"comment_id": 314, "body": "> Legally speaking you are a criminal!\r\n\r\nTrolling, spamming, violating ToS, death and other threats, insults... aren't a crime?", "added": 1574949305, "modified": 1574949305, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559560032", "source_type": "github"}, {"comment_id": 315, "body": "> talk respectfully", "added": 1574949432, "modified": 1574949432, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559560543", "source_type": "github"}, {"comment_id": 316, "body": "You don't need to post each comment multiple times...", "added": 1574949956, "modified": 1574949956, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559562779", "source_type": "github"}, {"comment_id": 317, "body": "> I actually removing all the comments from here. \r\n\r\nThen you talk about how others are manipulating the voting...", "added": 1574950105, "modified": 1574950105, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559563454", "source_type": "github"}, {"comment_id": 318, "body": "And just that you know, there is ZeroNet IRC channel just for you.", "added": 1574950187, "modified": 1574950187, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559563823", "source_type": "github"}, {"comment_id": 319, "body": "> I did not manipulated the voting results but @imachug did! \r\n\r\nNo he didn't.\r\n\r\n> You are all should be shame of yourselves! \r\n\r\nWhy?\r\n\r\n> Disgusting and absolutely illegal!\r\n\r\nAgain, just like spamming, trolling, violating ToS, death and other threats, insults... all by you.\r\n\r\n> I will not use and distribute ZeroNet under GPLv3-only because most contributors voted for GPLv3+!\r\n\r\nCode from users who voted for GPLv3-or-later can be distributed under GPLv3-only.", "added": 1574950392, "modified": 1574950392, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559564654", "source_type": "github"}, {"comment_id": 320, "body": "@SwissConfederation\r\n\r\n> you requoting yourself and your stupid things what you read randomly on the net", "added": 1574950456, "modified": 1574950481, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559564898", "source_type": "github"}, {"comment_id": 321, "body": "> These page is now archived again.\r\n\r\nYes, sure. But don't forget to keep your comments in the archive.", "added": 1574950530, "modified": 1574950530, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559565166", "source_type": "github"}, {"comment_id": 322, "body": "> most of the votes for GPL3+\r\n\r\nMost, but not all. And some even said to only allow GPLv3-only.", "added": 1574950909, "modified": 1574950909, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559566727", "source_type": "github"}, {"comment_id": 323, "body": "> I sending a report to EUROPOL under intellectual property crimes.\r\n\r\nDon't forget to report yourself for death threats, other threats, insults and other.", "added": 1574958843, "modified": 1574958843, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559590131", "source_type": "github"}, {"comment_id": 324, "body": "Don't forget to report yourself for death threats, other threats, insults and other.", "added": 1574959092, "modified": 1574959092, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559590791", "source_type": "github"}, {"comment_id": 325, "body": "> MOST CONTRIBUTORS VOTED FOR THAT\r\n\r\nMost voted for GPLv3-or-later and some voted for GPLv3-only. and because GPLv3-or-later can be licensed as GPLv3-only, this is actually the correct license we could currently use.", "added": 1574961303, "modified": 1574961303, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559596072", "source_type": "github"}, {"comment_id": 326, "body": "> More than 3 weeks ago I reported problem with the license\r\n\r\nYes, what problem? Just simple license incompatibility that is actually not very critical and just because of some incompatible statement which will probably never be actually important.\r\n\r\n> Not to mention the voting is misleading and you have changed the results by yourself disregarding the will of contributors.\r\n\r\nHow? Not to mention that you want to completely ignore the will of contributions and license as GPLv3+ without any agreement from contributions and when you can clearly see that not all contributions voted for GPLv3+.\r\n\r\n> You are a fraud and you should be ashamed by yourself!\r\n\r\nJust like you with spamming, trolling, death threats...\r\n\r\n> If someone notifies for example GIMP that has licensing issues they would immediately stop the distribution of that software and not harassing and discrediting those who want to fix it.\r\n\r\n> If someone notifies for example GIMP that has licensing issues they would immediately stop the distribution of that software and not harassing and discrediting those who want to fix it.\r\n\r\nYes, sure. They would stop distributing one of the most popular projects just because of simple incompatible.\r\n\r\n> We are not changing the license to anything but GPL and so the voting is absolutely unnecessary.\r\n\r\nGPLv3-only and GPLv3-or-later are different licences while GPLv2 and GPLv3 are the same?\r\n\r\nFSF clearly stated that this is not true and we need agreement from contributions to switch from GPLv2 to GPLv3.\r\n\r\n> Why need to replace the license? \r\n\r\nOr replace incompatible dependencies.\r\n\r\n> Voting about license change only can be done if there is no license violations and even than not possible to change to anything else but GPLv3! Is this clear?\r\n\r\nYes it is possible. You can change license to any other open source licence if contributions agree. This already happen million times in various open source projects.", "added": 1575112604, "modified": 1575112604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559973196", "source_type": "github"}, {"comment_id": 327, "body": "?", "added": 1575113788, "modified": 1575113788, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559975852", "source_type": "github"}, {"comment_id": 328, "body": "FSF Said:\r\n\r\n> > Is consent from contributors needed if license violations are going to\r\n> > be fixed with switching to GPLv3 which is compatible with\r\n> > dependencies? What if switch to another open source license is needed\r\n> > for this?\r\n> \r\n> You will need explicit permission from the relevant copyright holders to\r\nchange the license of a work regardless of why you are doing the\r\n> change. As above, the only situation where you don't need permission is\r\nif it has already been given in the form of the \"or later\" upgrade\r\n> option in GPLv2.", "added": 1575114657, "modified": 1575114657, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559977793", "source_type": "github"}, {"comment_id": 329, "body": "> I can use a GPLv3+ license on this archive right now if I want so this voting makes no sense!\r\n\r\nExplain.\r\n\r\n\r\n> Because GPLv2 on ZeroNet violates other licenses I'm actually forced to use a GPLv3 license on this archive before distribution and nobody can do anything to stop this! Is this clear?\r\n\r\nYou can't distribute ZeroNet under GPLv3 unless copyright holders agree. GPLv2 and GPLv3 are different licences.", "added": 1575114751, "modified": 1575114872, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559978013", "source_type": "github"}, {"comment_id": 330, "body": "GPLv2 and GPLv3 are different licenses. And FSF also said that you need agreement.", "added": 1575114932, "modified": 1575114932, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559978429", "source_type": "github"}, {"comment_id": 331, "body": "> FSF Said:\r\n> \r\n> > > Is consent from contributors needed if license violations are going to\r\n> > > be fixed with switching to GPLv3 which is compatible with\r\n> > > dependencies? What if switch to another open source license is needed\r\n> > > for this?\r\n> > \r\n> > \r\n> > You will **need explicit permission from the relevant copyright holders** to\r\n> > change the license of a work **regardless of why you are doing the\r\n> > change**. As above, the only situation where you don't need permission is\r\n> > **if** it has already been given in the form of the \"or later\" upgrade\r\n> > option in GPLv2.\r\n\r\n", "added": 1575115026, "modified": 1575115026, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559978614", "source_type": "github"}, {"comment_id": 332, "body": "You also can't use GPLv3! If you do, it will also be illegal and criminal.", "added": 1575115118, "modified": 1575115211, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559978781", "source_type": "github"}, {"comment_id": 333, "body": "> You was lied to them so they did not understand what is the problem\r\n\r\nHow?", "added": 1575115238, "modified": 1575115238, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559979006", "source_type": "github"}, {"comment_id": 334, "body": "No you can't! Period.", "added": 1575115387, "modified": 1575115387, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559979333", "source_type": "github"}, {"comment_id": 335, "body": "> Read my comments you retard!\r\n\r\nSo FSF od also retarded?\r\n\r\n> I can use GPL on the software but NOT GPLv2!!!\r\n\r\nGPLv2 and GPLv3 are different licences. You can't use GPLv3 if software is released under GPLv2.", "added": 1575115552, "modified": 1575115552, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559979771", "source_type": "github"}, {"comment_id": 336, "body": "> You will **need explicit permission from the relevant copyright holders** to change the license of a work **regardless of why you are doing the change**. As above, the only situation where you don't need permission is **if it has already been given in the form of the \"or later\" upgrade option in GPLv2**.", "added": 1575115632, "modified": 1575115738, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559979944", "source_type": "github"}, {"comment_id": 337, "body": "I can't help you if you can't read...", "added": 1575115762, "modified": 1575115812, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559980235", "source_type": "github"}, {"comment_id": 338, "body": "And you also don't understand American (FSF's) English.", "added": 1575116397, "modified": 1575116397, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559981878", "source_type": "github"}, {"comment_id": 339, "body": "You can only use GPLv3 if ZeroNet is licensed under GPLv2+, which it isn't. Because it is not, you need agreement from contributions.", "added": 1575117058, "modified": 1575117058, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559983465", "source_type": "github"}, {"comment_id": 340, "body": "You should also read more carefully:\r\n\r\n> You will need explicit permission from the relevant copyright holders to change the license of a work **regardless of why you are doing the change**.", "added": 1575117486, "modified": 1575117486, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-559984475", "source_type": "github"}, {"comment_id": 341, "body": "> I hate America for obvious reasons, imperialist, capitalist and terrorist system and everyone in my eyes who not speaking up against this are legally speaking complicit in war crimes!\r\n\r\nYou hate the USA and capitalism and then you care about simple license incompatibility?\r\n\r\n> What kind of developer is who claims he using Bitcoin crypto and BitTorrent and does everything to mislead the public or limit the license on such a great software like ZeroNet?\r\n\r\nWhat?\r\n\r\n> You neither have a choice.\r\n\r\nExcept using alternative dependencies, using GPLv3-only, using MIT...\r\n\r\n> Not like I care much because as I said I can and I will use a GPLv3+ license on ZeroNet regardless of your stupid voting. Yes, stupid and useless voting.\r\n\r\nSo you want to distribute it under GPLv3-or-later without agreement from contributors? That's also illegal.\r\n\r\n> When I hear that people voted for licenses anything than GPL I literally fall of my seat!\r\n\r\nYes?\r\n\r\n> Let's say if future releases of ZeroNet is relicensed to anything but GPL, that would grant additional rights to those who already receives ZeroNet under GPL.\r\n\r\nYes?\r\n\r\n> This would make ZeroNet available under 3 different licenses! One would have MIT other GPL-3.0 and another with GPL-3.0-or-later! Think about that.\r\n\r\nThis *is* good.\r\n\r\nAnd just that you know, only core libraries would be licensed as MIT, the project as a whole would stay GPL. And this would be better for ZeroNet and community, as it would make it possible to easily extend ZeroNet in third-party solutions.", "added": 1575131781, "modified": 1575132178, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-560014900", "source_type": "github"}, {"comment_id": 342, "body": "> but again this is not a license switch\r\n\r\nYes it is! The reason doesn't matter, and you need agreement from contributors in any case.", "added": 1575628665, "modified": 1575628665, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562574402", "source_type": "github"}, {"comment_id": 343, "body": "> It is NOT a license switch!\r\n\r\nIt IS license switch.\r\n\r\n> someone can be jailed\r\n\r\nYou can also be jailed for death threats.\r\n\r\n\r\n> Switching license is only possible if there is no license violations and if that's the case, again, there is nothing preventing me or anyone else to use a GPLv3+ license in our distributions.\r\n\r\nYou can't use GPLv3 without agreement from contributors.\r\n\r\n---\r\n\r\nAgain, answer from FSF:\r\n\r\n> > Is consent from contributors needed **if license violations are going to\r\n> > be fixed with switching to GPLv3** which is compatible with\r\n> > dependencies? What if switch to another open source license is needed\r\n> > for this?\r\n> \r\n> You will **need explicit permission from the relevant copyright holders to\r\n> change the license of a work regardless of why you are doing the\r\n> change**. As above, the only situation where you don't need permission is\r\n> if it has already been given in the form of the \"or later\" upgrade\r\n> option in GPLv2.", "added": 1575629026, "modified": 1575629026, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562576463", "source_type": "github"}, {"comment_id": 344, "body": "If you can't read, [here](https://srv-file7.gofile.io/download/ZWRZB1/voice.mp3) is text-to-speech of FSF answer.", "added": 1575629272, "modified": 1575629272, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562577867", "source_type": "github"}, {"comment_id": 345, "body": "> > Is consent from contributors needed **if license violations are going to\r\n> > be fixed with switching to GPLv3** which is compatible with\r\n> > dependencies? What if switch to another open source license is needed\r\n> > for this?\r\n> \r\n> You will **need explicit permission from the relevant copyright holders to\r\n> change the license of a work regardless of why you are doing the\r\n> change**. As above, the only situation where you don't need permission is\r\n> if it has already been given in the form of the \"or later\" upgrade\r\n> option in GPLv2.\r\n\r\n\r\n", "added": 1575629364, "modified": 1575629364, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562578408", "source_type": "github"}, {"comment_id": 346, "body": "Rights were already granted to you only under GPLv2!", "added": 1575629627, "modified": 1575629627, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562579847", "source_type": "github"}, {"comment_id": 347, "body": "All contributions need to agree with GPLv3-or-later. And as some (@TheNain38) explicitly said that they only GPLv3-only, you can't distribute their work under GPLv3-or-later. And you also can't change license of contributions made by contributions which still haven't agreed.", "added": 1575629968, "modified": 1575629968, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562581799", "source_type": "github"}, {"comment_id": 348, "body": "Rights were only given under GPLv2 terms, not under GPLv3!", "added": 1575630851, "modified": 1575630851, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562587009", "source_type": "github"}, {"comment_id": 349, "body": "You can NOT legally use GPLv3!!! You need agreement from ALL contributions first.", "added": 1575631017, "modified": 1575631039, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562588035", "source_type": "github"}, {"comment_id": 350, "body": "Maybe [this](https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562578408)? But if you can't read, I can't help you...", "added": 1575631106, "modified": 1575631106, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562588607", "source_type": "github"}, {"comment_id": 351, "body": "> I MUST distribute ZeroNet under a GPL license and I do use GPLv3+ absolutely legally!\r\n\r\nJust don't distribute ZeroNet yourself if you care so much as incompatibilities.\r\n\r\nAnd AGAIN, distributing ZeroNet under GPLv3 without agreement from contributions is as illegal as distributing it under GPLv2 or even more.", "added": 1575631658, "modified": 1575631658, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562591993", "source_type": "github"}, {"comment_id": 352, "body": "We can sue you for distributing ZeroNet under GPLv3 without our agreement and agreement from ALL contributions.", "added": 1575631769, "modified": 1575631769, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562592624", "source_type": "github"}, {"comment_id": 353, "body": "RIGHTS WERE ONLY GRANTED UNDER GPLV2! DISTRIBUTING UNDER GPLV3 IS ALSO ILLEGAL!\r\n\r\nEveryone, sorry about all capital letters. But it seems extremly massive stars can't understand otherwise.", "added": 1575632296, "modified": 1575632316, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562595713", "source_type": "github"}, {"comment_id": 354, "body": "1. Rights were only given under GPLv2 to distribute under **GPLv2 terms**.\r\n2. * You are knowing distribution under GPLv3 without agreement from **all** contributors is **also** illegal.\r\n   * Death threats are also illegal.\r\n3. Then go to jail...\r\n4. You **must not** distribute ZeroNet under GPLv3 without agreement. Just stop distributing ZeroNet until isues are fixed and be quiet. Thanks!", "added": 1575638156, "modified": 1575638156, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-562637382", "source_type": "github"}, {"comment_id": 355, "body": "Could we use [`websockets` library](https://github.com/aaugustin/websockets)? It's licensed under BSD-3-Clause and it's not dead.\r\n\r\nHowever, I don't know if it is compatible with Gevent. It only supports Python 3.6.1 so we would have to drop support for Python 3.4 and 3.5. However, both of them are already EOL by the Python development team so we would have to check how many people are using them and if we can drop support for them.\r\n\r\nBut even without license issues, it would be still good to replace some outdated/discontinued libraries with more modern ones.", "added": 1575906721, "modified": 1575906721, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-563378231", "source_type": "github"}, {"comment_id": 356, "body": "> Joined 1 hour ago\r\n\r\nSurly this is your first account...", "added": 1575964189, "modified": 1575964189, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-563977604", "source_type": "github"}, {"comment_id": 357, "body": "> You need to remove code only if you change the license to anything but to GPLv3\r\n\r\nYou **need** agreement for **any** license change, the new license and reason for change do not matter. The only case when you don't need agreement for GPLv3 change if old license would be GPLv2**+**.\r\n\r\n> Asyncio and gevent are not really compatible with each other, so it won't work\r\n\r\nIsn't asyncio basically similar to gevent but built in new Python versions? So if support for old Python versions is not really needed, it might be good to rewrite ZeroNet on top of asyncio.", "added": 1575971686, "modified": 1575971686, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564019796", "source_type": "github"}, {"comment_id": 358, "body": "Rights were only granted to distribute ZeroNet under GPLv2 terms only! Using GPLv3 is license change, and as FSF ALSO said, you need permission from contributors for that!\r\n\r\nThat's why there are GPLv2-only and GPLv2-or-later licenses. With GPLv2-only, which is used by ZeroNet, contributions only granted permission to distribute code under GPLv2 terms only. In this case, you need agreement.", "added": 1575978412, "modified": 1575978574, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564065991", "source_type": "github"}, {"comment_id": 359, "body": "Contributors granted rights to distribute under GPLv2 only! It would be illegal and a criminal offence to distribute it with the GPLv3 license because not all contributors agreed with this!\r\n\r\n> You will **need explicit permission** from the relevant **copyright holders** to change the license of a work **regardless of why you are doing the change**. As above, the only situation where you don't need permission is if it has already been given in the form of the \"or later\" upgrade option in GPLv2.\r\n", "added": 1575982846, "modified": 1575982846, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564102115", "source_type": "github"}, {"comment_id": 360, "body": "So FSF is maniac?\r\n\r\nIf you can't read or understand FSF email, just shut up!", "added": 1575982994, "modified": 1575983082, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564103247", "source_type": "github"}, {"comment_id": 361, "body": "> > Is consent from contributors needed if license violations are going to be fixed with switching to GPLv3 which is compatible with dependencies?\r\n> \r\n> You will need explicit permission from the relevant copyright holders to change the license of a work regardless of why you are doing the change. As above, the only situation where you don't need permission is if it has already been given in the form of the \"or later\" upgrade option in GPLv2.", "added": 1575983032, "modified": 1575983032, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564103556", "source_type": "github"}, {"comment_id": 362, "body": "> They talk about CHANGE!\r\n\r\nUsing GPLv3 instead of GPLv2 IS CHANGE OF LICENSE!!\r\n\r\n> How you wish to prevent people to keep distributing ZeroNet under GPL?\r\n\r\nAnd you think all forks and users will magically replace LICENSE file with GPLv3?", "added": 1575983234, "modified": 1575983332, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564105095", "source_type": "github"}, {"comment_id": 363, "body": "GPLv3 IS NOT SAME LICENSE AS GPLv2", "added": 1575983451, "modified": 1575983451, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564106745", "source_type": "github"}, {"comment_id": 364, "body": "And stop quoting yourself and read FSF's reply...", "added": 1575983477, "modified": 1575983477, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564106956", "source_type": "github"}, {"comment_id": 365, "body": "Replacing GPLv2 with GPLv3 without consent from contributors would be illegal!", "added": 1575983551, "modified": 1575983551, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564107509", "source_type": "github"}, {"comment_id": 366, "body": "Your account should also be banned for more than a month... And just that you know, death and other threats are also illegal.", "added": 1575983748, "modified": 1575983957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564109154", "source_type": "github"}, {"comment_id": 367, "body": "Most, not all!", "added": 1575983855, "modified": 1575983972, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564110000", "source_type": "github"}, {"comment_id": 368, "body": "@HelloZeroNet It would be better to split ZeroNet into more modular libraries which would be licensed under MIT license and the main project which would be licensed under GPLv3. This would allow developers to create custom solutions built on ZeroNet which would use those libraries which still required to distribute ZeroNet as a whole with source code.\r\n\r\nOf course this would require quite a lot of work with rewritign ZeroNet but the final result would be that it would be easier for developers to do custom solutions with ZeroNet.", "added": 1575984046, "modified": 1575984586, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564111604", "source_type": "github"}, {"comment_id": 369, "body": "This would also be OK, but it might still be good to have some \"protection\" for project as whole which GPL offers. But in any case, we would need agreement from contributors...", "added": 1575985680, "modified": 1575985680, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564124333", "source_type": "github"}, {"comment_id": 370, "body": "It is changing to dual-licensed MIT + Apache 2, actually just because of GPLv2 compatiblility.", "added": 1575986241, "modified": 1575986241, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-564128822", "source_type": "github"}, {"comment_id": 371, "body": "BitTorrent Open Source License, which is used by current BenCode implementation, is incompatible with all GPL licenses.", "added": 1576224604, "modified": 1576224604, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-565402498", "source_type": "github"}, {"comment_id": 372, "body": "Again, only under GPLv2!! Is it so hard to understand??", "added": 1576586023, "modified": 1576586023, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-566593242", "source_type": "github"}, {"comment_id": 373, "body": "It works again.", "added": 1577041957, "modified": 1577041957, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-568307084", "source_type": "github"}, {"comment_id": 374, "body": "This is true. If one contributions votes/agrees for one license (BSD) you should also be able to distribute code under any more redistricted license (GPLv3).", "added": 1584297060, "modified": 1584297060, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-599267505", "source_type": "github"}], "1604067633_mirrored_Merith-TK_github": [{"comment_id": 375, "body": "I think that the check for origin happens [here](https://github.com/HelloZeroNet/ZeroNet/blob/py3/src/Ui/UiRequest.py#L774). Maybe the problem could be that proxy is accessed from port 80, but ZeroNet expects the different port so origins are not the same.\r\n\r\n@imachug What do you think? What should be the value of `HTTP_HOST` env var and `self.server.allowed_ws_origins`?\r\n\r\n@Merith-TK Can you (temporary) add few lines [after this line](https://github.com/HelloZeroNet/ZeroNet/blob/py3/src/Ui/UiRequest.py#L774) to your ZeroNet source code that prints content of variabled `origin_host`, `origin`, `host` and `self.server.allowed_ws_origins`? That part should then look something like this:\r\n\r\n```py\r\n            if origin:\r\n                origin_host = origin.split(\"://\", 1)[-1]\r\n                if origin_host != host and origin_host not in self.server.allowed_ws_origins:\r\n                    print(\"Origin host:\", origin_host)\r\n                    print(\"Origin:\", origin)\r\n                    print(\"Host:\", host)\r\n                    print(\"Allowed WS origins:\", self.server.allowed_ws_origins)\r\n\r\n                    ws.send(json.dumps({\"error\": \"Invalid origin: %s\" % origin}))\r\n                    return self.error403(\"Invalid origin: %s\" % origin)\r\n```\r\n\r\nThen paste log output here. This lines should be only for troubleshooting and you can remove them later.", "added": 1572970245, "modified": 1572970245, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2287#issuecomment-549973806", "source_type": "github"}], "1604067645_mirrored_Merith-TK_github": [{"comment_id": 376, "body": "@imachug Can ZeroNet be fixed to also support sites with enabled Rocket Loader? Or maybe Cloudflare can fix this on their end?", "added": 1573291706, "modified": 1573291706, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552095194", "source_type": "github"}, {"comment_id": 377, "body": "@imachug Yes, but this is just some workaround for the actual issue. It would be good to check why exactly it happens and how to fix it.", "added": 1573298265, "modified": 1573298265, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552104643", "source_type": "github"}, {"comment_id": 378, "body": "@HelloZeroNet Yes, but why does Cloudflare breaks it?", "added": 1573302213, "modified": 1573302213, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552109846", "source_type": "github"}, {"comment_id": 379, "body": "Could we then submit a bug report to Cloudflare? Rocker Loader could really be useful as most public ZeroNet proxies are running quite slow.", "added": 1573307985, "modified": 1573308035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2295#issuecomment-552117901", "source_type": "github"}], "1604067699_mirrored_ghost_github": [{"comment_id": 380, "body": "Why do we need 10 more files just for license change? All of those things are already described either in README or GitHub itself. The only file changes needed would be LICENSE (with new license text) and README (with short license notice).\r\n\r\nIn README, there is already an installation and usage section and documentation. Short license notice (LICENSE file in your changes) should also be just added to section of README.\r\n\r\nChange log and contributors are also displayed on GitHub website (change log is in GitHub Releases, contributors are also displayed automatically on list), so additional files are useless.\r\n\r\nYes, this is how FSF recommends things, but these recommendations were created a long time before GitHub had all these features and now they (recommendations) are basically useless. Multiple license-related files will also confuse GitHub to show \"view license file\"/\"unknown license\" instead of correct license and most modern open-source projects just use single LICENSE file with short notice in README.", "added": 1573293650, "modified": 1573293650, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552098267", "source_type": "github"}, {"comment_id": 381, "body": "> I don't give a damn about GitHub!\r\n\r\nAnd? Then I don't give a damn about your unnecessary files.\r\n\r\n> Each file has a very specific purpose\r\n\r\nEach of this purposes is already supported directly on GitHub website.", "added": 1573314494, "modified": 1573314532, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552126621", "source_type": "github"}, {"comment_id": 382, "body": "Explain why are these files needed if GitHub shows the same information on their website.\r\n\r\nAlso, if I say \"The project is licensed under GPLv3+\" in README and include GPLv3 text in LICENSE, why won't this be OK? From GitHub documentation:\r\n\r\n> If your repository is using a license that is listed on the Choose a License website and it's not displaying clearly at the top of the repository page, it may contain multiple licenses or other complexity. To have your license detected, simplify your LICENSE file and note the complexity somewhere else, such as your repository's README file.", "added": 1573314858, "modified": 1573315084, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552127098", "source_type": "github"}, {"comment_id": 383, "body": "> I did explained very respectfully. I'm not going to argue.\r\n\r\nNo, you didn't. You only explain what that files would be used for. You didn't explain why do you need that files if data are already on GitHub.\r\n\r\n> This repository must comply with the terms of the license!\r\n\r\nWhere is it stated that repository must have that files and that GitHub's data are not enough?\r\n\r\n> The voting #2273 can be also closed by now.\r\n\r\nThe PR #2296 can be also closed by now.", "added": 1573315874, "modified": 1573315874, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552128436", "source_type": "github"}, {"comment_id": 384, "body": "So you own the copyright for detecting and handling MIME types? Why then don't you sue Apache or other web servers which use the same way of handling MIME types?\r\n\r\nOr even better, where is your proof that you didn't steal that code from Apache or another web server?", "added": 1573316057, "modified": 1573316057, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552128653", "source_type": "github"}, {"comment_id": 385, "body": "Again, please answer what I asked you. Is [this diffreance](https://github.com/HelloZeroNet/ZeroNet/pull/2248#issuecomment-549682814) not enough for you?", "added": 1573316188, "modified": 1573316255, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552128817", "source_type": "github"}, {"comment_id": 386, "body": "Nobody need to stop distributing the ZeroNet software. However, you must prove **what I asked you for**!", "added": 1573316368, "modified": 1573316380, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552129078", "source_type": "github"}, {"comment_id": 387, "body": "> No credit is given to me for this contribution, figure out other way to fix your problems or keep it how you used it for years. I reserve all right to my contribution.\r\n>\r\n> I going to sue if in any way the file is similar to to my pull request!\r\n\r\nOh yes. So you own the copyright for handling MIME types according to RFC and IANA?", "added": 1573316843, "modified": 1573316873, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552129663", "source_type": "github"}, {"comment_id": 388, "body": "Yes, we see that GitHub legal stuff is on your side as they removed at least 10 of your accounts. Of course totally not because of violating their ToS.", "added": 1573318747, "modified": 1573318747, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552132175", "source_type": "github"}, {"comment_id": 389, "body": "They don't remove accounts that don't violate ToS. They remove accounts that violate ToS.", "added": 1573318919, "modified": 1573318919, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552132415", "source_type": "github"}, {"comment_id": 390, "body": "Yes. Microsoft sucker that made decentralized GitHub and GitLab alternative.", "added": 1573319418, "modified": 1573319418, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552133086", "source_type": "github"}, {"comment_id": 391, "body": "@imachug Can you add KxoID? Look, the first step into making new version :)", "added": 1573319674, "modified": 1573319702, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2296#issuecomment-552133405", "source_type": "github"}], "1604067666_mirrored_styromaniac_github": [{"comment_id": 392, "body": "If there isn't any API to do this, ZeroNet couldn't cheat in any way. Can you post URL to some website which does display video details so we can check how it works?", "added": 1576395834, "modified": 1576395834, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2300#issuecomment-565797532", "source_type": "github"}], "1604067671_mirrored_ahmadly_github": [{"comment_id": 393, "body": "But does it cut only connections to outside countries or also internal communication?\r\n\r\nIf there is still some internal communication available, it might be possible to use ZeroNet with local tracker list.", "added": 1574305943, "modified": 1574305943, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2322#issuecomment-556936621", "source_type": "github"}, {"comment_id": 394, "body": "They didn't just block ZeroNet. They completely cut off the internet, without any communication. In this case, you couldn't use ZeroNet or any other internet service.\r\n\r\nBut I think they now restored internet so it should work again.", "added": 1574774763, "modified": 1574774763, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2322#issuecomment-558708028", "source_type": "github"}, {"comment_id": 395, "body": "> When western propaganda media says Iran have no Internet they referring\r\n\r\nWas internet completely disabled or was just communication to other countries blocked? Do you have any proof of this?\r\n\r\nIn the first case, you can't use ZeroNet, but in the second case, you can use it with local trackers.\r\n\r\n> You are an Islamophobic person\r\n\r\nYes? No...", "added": 1574775446, "modified": 1574775606, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2322#issuecomment-558713438", "source_type": "github"}, {"comment_id": 396, "body": "> I fully support both the \"firewall of China\" and Iran when they blocking\r\n\r\nI don't. Although many of that sites are used to spread propaganda (by US, Iran, China..., it actually doesn't matter), there are better ways to fight against this, not with blocking them.", "added": 1574775759, "modified": 1574775759, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2322#issuecomment-558715906", "source_type": "github"}], "1604067685_mirrored_adrelanos_github": [{"comment_id": 397, "body": "I'm against using distribution package repositories. Packages in them are often outdated, take a lot of time to update, and many of them simply aren't available. They also aren't portable.\r\n\r\nHow would distribution package repositories prevent their developers from submitting malicious version? The same happened with `event-stream`. It was not because of NPM issue, but because `event-stream` used dependency by the malicious author which added malicious code. Same can happen with APT repositories.", "added": 1574709274, "modified": 1574709301, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2326#issuecomment-558364209", "source_type": "github"}, {"comment_id": 398, "body": "> It works for thousands of applications available from\r\n\r\nBut that applications are not written in Python and are not using Python dependencies.\r\n\r\n> Debian developers don't allow malware into Debian.\r\n\r\nNPM and PyPI also don't allow malware. But malicious maintainer of the package can still push it.", "added": 1574874039, "modified": 1574874039, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2326#issuecomment-559232380", "source_type": "github"}, {"comment_id": 399, "body": "APT by default uses HTTP and there were already vulnerabilities to allow man-in-the-middle attacks ([here](https://www.guardicore.com/2019/01/a-vulnerability-in-debians-apt-allows-for-easy-lateral-movement-in-data-centers) and [here](https://duo.com/decipher/flaw-in-apt-utility-allows-malicious-package-installation).\r\n\r\nCryptographically signing packages does not prevent their authors to publish malicious packages, which happened in the case of npm and pip.\r\n\r\nThe only way to prevent this would me to manually review and check every single release of every single package but I don't think this happens on APT either.\r\n\r\nAlso, distribution package managers are often outdated and take a lot of time to update. Many APT packages do not have their latest version published, even if it exists on other package repositories. This means that we would need to wait a long time to get new features. And sometimes, if you use a bit old distribution, they are just not updated.\r\n\r\nAnd using distribution package managers would require to set things for each of package managers. There are many Linux distributions so this would require a lot of work. Pip, on the other hand, is platform-independent and you don't need to configure packages for each platform separately. And you will still need to use yet another thing for Windows and macOS.\r\n\r\nSo, distro-specific managers are not a solution. The proper solution is to use distro-agnostic managers (AppImage, Flatpack, Snap) where they are available and continue using Pip where they are not.", "added": 1575699284, "modified": 1575749637, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2326#issuecomment-562832116", "source_type": "github"}], "1604067751_mirrored_ghost_github": [{"comment_id": 400, "body": "> You don't own ZeroNet\r\n\r\nYes? How? And where is the problem now?", "added": 1574957137, "modified": 1574957137, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2331#issuecomment-559585588", "source_type": "github"}], "1604067689_mirrored_martinvahi_github": [{"comment_id": 401, "body": "Can't you already make symlink just for file?\r\n\r\nAs identity is mostly on one file (`data/users.json`) I don't see a particular reason to move it to separate folder, if the file itself can be symlinked.", "added": 1575181462, "modified": 1575181592, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2332#issuecomment-560081609", "source_type": "github"}, {"comment_id": 402, "body": "> I can, but it would be a MESS, because the moment they change the number of files during the natural development of the ZeroNet, the symlink creation code has to be updated.\r\n\r\nWhat do you mean with this?\r\n\r\n> I also point out that the data/users.json that You mentioned does not hint at all that this is the file related to IDENTITIES. What users?\r\n\r\nIt contains your public and private keys, IDs, auth addresses for sites...\r\n\r\n> On the other hand, if there is a folder with the name of data/identity or, better yet, in plural, data/identities, then that question gets answered WITHOUT NEEDING TO START LOOKING FOR THAT INFORMATION FROM DOCUMENTATION.\r\n\r\nWhat?\r\n\r\nIsn't `users.json` already good way to describe that file contains users?\r\n\r\nHaving folder which contains just one file would also be a mess.", "added": 1575196071, "modified": 1575196071, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2332#issuecomment-560108312", "source_type": "github"}, {"comment_id": 403, "body": "Yes, there is only one `data/users.json`. This shouldn't break unless something very big is changed, but the same could happen with folders.\r\n\r\nNote that better user managing and signing API would be good. With this, I mean easier support to let plugins/code store and sign data in different ways, for example, in folders, memory, SQLite, browser extensions...\r\n\r\nYou might want to open a new feature request for this.", "added": 1575213596, "modified": 1575213596, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2332#issuecomment-560139623", "source_type": "github"}], "1604067691_mirrored_krzysztof113_github": [{"comment_id": 404, "body": "You have Python 2.7 version which you can't update automatically. You need to manually download ZeroBundle again, copy your `data` directory to it, and then use new version.\r\n\r\nYes, it would be good to provide details about this and maybe also support to update ZeroBundle completely with new Python version.\r\n\r\n@HelloZeroNet It might be good to backport changes for updating complete ZeroBundle to Python 2.7 version so users will be able to download Python 3 from UI. Or at least add some notification/description for instructions.", "added": 1575181182, "modified": 1575181357, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2335#issuecomment-560081245", "source_type": "github"}], "1604067770_mirrored_imachug_github": [{"comment_id": 405, "body": "> Don't include this until the license is not fixed!\r\n\r\nWhy?", "added": 1575316024, "modified": 1575316024, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560800662", "source_type": "github"}, {"comment_id": 406, "body": "> Also note that most code is not originates from @imachug he copied most of the code from other people including from pastebin!\r\n\r\nProve this.", "added": 1575316320, "modified": 1575316320, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560811999", "source_type": "github"}, {"comment_id": 407, "body": "1. You can't include MIT license in MIT license? That's something new...\r\n\r\n2. So you think it is not possible to write cryptography-related library because somebody already wrote it and now whole cryptography operations are copyrighted?", "added": 1575316524, "modified": 1575316524, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560819727", "source_type": "github"}, {"comment_id": 408, "body": "And you own that patents, right?\r\n\r\nWhy do we already have more than one cryptography library?", "added": 1575316771, "modified": 1575316771, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560828946", "source_type": "github"}, {"comment_id": 409, "body": "> No but I can use patented works as long I don't claim it to be mine!\r\n\r\nWhere does @imachug claims that all code is his? Where some code was taken from other people, this is clearly stated in that file.\r\n\r\nAnd still, I don't know what is the difference with other cryptography libraries...\r\n\r\n> This still not solve the licensing issue!\r\n\r\nYes it does. If incompatible libraries are replaced, incompatibilities are fixed.\r\n\r\n> I can publish my version of ZeroNet under GPLv3+ immediately!\r\n\r\nNo you can't. You need agreement from contributors for that.\r\n\r\n> Merging this will give immediately permission for all forks to use either GPLv3+ or GPLv3-only on ZeroNet!\r\n\r\nWTF are you talking?", "added": 1575317320, "modified": 1575317320, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-560849400", "source_type": "github"}, {"comment_id": 410, "body": "> Replacing the library in order to avoid changing the license will not replace the library in my copy and other 1,900 forks!\r\n\r\nChanging the license to GPLv3+ would magically replace it in forks?\r\n\r\n> Under GPL I have already granted all copyright permission to modify and distribute the software under GPL but legally I can't distribute ZeroNet under GPLv2!\r\n\r\nYou have right to distribute it under GPLv2, not any GPL license. That's why it includes GPLv2 license file, not just GPL license file.\r\n\r\n> This means if you replace the library, I'm getting a green light to release ZeroNet under a compatible GPL license of my choosing, which is GPLv3+!\r\n\r\nReplacing the library means that (almost) all incompatibilities are fixed and if you want to comply with licenses, you need to download new libraries.\r\n\r\n> I don't need a shit from contributors! I already granted all rights under GPL!\r\n\r\nAs FSF said, contributions only granted distribution under GPLv2.\r\n\r\n> You need to tell contributors that you are fooled them!\r\n\r\nBecause we allowed them to do what they should be able to do?\r\n\r\n> Under GPL section 2 the entire ZeroNet is already released under GPL!\r\n\r\nNo it is not. It is licensed under GNU General Public License **version 2**.\r\n\r\n> You also can't claim ownership over your contributions to a work which is licensed under GPL!\r\n\r\nYou \"care\" so much about contributions and then you would ignore their opinion and agreement when changing the license...", "added": 1575343828, "modified": 1575343828, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561022159", "source_type": "github"}, {"comment_id": 411, "body": "Why do we already have other libraries than pybitcointools?", "added": 1575351612, "modified": 1575351612, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561059662", "source_type": "github"}, {"comment_id": 412, "body": "Simulating Pip properly is quite hard. The best solution we can currently do is to just place your library into `lib` manually (like already done for some dependencies and like I did for DNS plugin).\r\n\r\nFor more proper solution, we need to switch distributing system for ZeroNet quite a bit (check my existing issue about this).", "added": 1575368960, "modified": 1575368960, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561167868", "source_type": "github"}, {"comment_id": 413, "body": "@imachug Even if it is in `src/lib`, I think that it is still useful to have is in `requirements.txt` because new installation will use it (@HelloZeroNet ZeroBundle also needs to be updated) and after some time, it could be probably removed from repository.", "added": 1575383581, "modified": 1575383581, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-561274527", "source_type": "github"}, {"comment_id": 414, "body": "@HelloZeroNet Any update?", "added": 1575635572, "modified": 1575635572, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-562619197", "source_type": "github"}, {"comment_id": 415, "body": "How often are they reproducible? Because if they are rare, it might still not be needed to revert PR.", "added": 1576417641, "modified": 1576417641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565826123", "source_type": "github"}, {"comment_id": 416, "body": "Can't you use virtual machine?", "added": 1576419342, "modified": 1576419362, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-565828238", "source_type": "github"}, {"comment_id": 417, "body": "@HelloZeroNet @shortcutme @imachug Is there any update? did you figured out what caused segfault?", "added": 1576595289, "modified": 1576595289, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-566681137", "source_type": "github"}, {"comment_id": 418, "body": "@HelloZeroNet @imachug Any update here?", "added": 1582972899, "modified": 1582972899, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2338#issuecomment-592946825", "source_type": "github"}], "1604067710_mirrored_amiremohamadi_github": [{"comment_id": 419, "body": "1. Create a Persian translation of original ZeroTalk.\r\n  * This will just translate UI for original ZeroTalk, but the content will remain in English.\r\n  * Translations can be found [here](https://github.com/HelloZeroNet/ZeroTalk/blob/master/languages/hu.json).\r\n  * Save them into JSON as it is done [for other languages](https://github.com/HelloZeroNet/ZeroTalk/blob/master/languages/hu.json).\r\n  * Submit PR with changes to [ZeroTalk repository](https://github.com/HelloZeroNet/ZeroTalk).\r\n\r\n---\r\n\r\n2. Clone ZeroTalk.\r\n   * Open ZeroHello.\r\n   * Find ZeroTalk in the list of sites.\r\n   * Click three dots and then clone.\r\n\r\n![clone](https://user-images.githubusercontent.com/16626308/70396495-d0e64080-1a09-11ea-8436-553602256059.png)\r\n\r\n---\r\n\r\n3. Configure cloned site as you want.\r\n   * Change title and name.\r\n   * Change description.\r\n   * Change admins and sticky topics.\r\n\r\n---\r\n\r\n4. Make it known.\r\n   * Share it on original ZeroTalk.\r\n   * Submit PR to [ZeroTalk repository](https://github.com/HelloZeroNet/ZeroTalk) which adds link to your clone.", "added": 1575829826, "modified": 1575891920, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2355#issuecomment-562996763", "source_type": "github"}], "1604067783_mirrored_ghost_github": [{"comment_id": 420, "body": "Just that you know, merging this PR without consent from all contributors would be illegal...", "added": 1575983589, "modified": 1575983589, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2356#issuecomment-564107803", "source_type": "github"}], "1604067719_mirrored_krzysztof113_github": [{"comment_id": 421, "body": "I think that ZeroFrame has a function to monkey-patch all `fetch` requests to include AJAX key.", "added": 1576078708, "modified": 1576078708, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2357#issuecomment-564676865", "source_type": "github"}, {"comment_id": 422, "body": "Just out of interest, which library are you using and what are you building?", "added": 1576084079, "modified": 1576084079, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2357#issuecomment-564711181", "source_type": "github"}], "1604067740_mirrored_styromaniac_github": [{"comment_id": 423, "body": "Better to just have `domain` key, but ignore it if plugin that is used by that domain does not exists. Having separate key for every domain plugin would just create a mess. Then, this can also be backported to Python 2.7 and Kivy version.\r\n\r\nNote that @mkg20001 was working on Python 3 support for Android. That PR was merged, but I don't know if it works.", "added": 1576395626, "modified": 1576395626, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2360#issuecomment-565797325", "source_type": "github"}, {"comment_id": 424, "body": "Just ZeroHello as it is just a site.", "added": 1576408915, "modified": 1576408915, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2360#issuecomment-565814094", "source_type": "github"}], "1604067790_mirrored_ghost_github": [{"comment_id": 425, "body": "You need to wait some time so that domains are updated.", "added": 1576397120, "modified": 1576397120, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565799058", "source_type": "github"}, {"comment_id": 426, "body": "Is it listed [here](http://127.0.0.1:43110/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F/)?", "added": 1576397205, "modified": 1576397205, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565799150", "source_type": "github"}, {"comment_id": 427, "body": "Then you need to wait until it will be. Sometimes this is quick, but sometimes it takes a few days (or more)...", "added": 1576397461, "modified": 1576397473, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565799475", "source_type": "github"}, {"comment_id": 428, "body": "Suprise, @HelloZeroNet manages it...\r\n\r\nThe reason why this list is used is that there isn't any other good option for interacting with blockchain without downloading it. I don't think users will want to download 6GB of blockahain data just to view domain. But if you want using local Namecoin blockchain, use [ZeronameLocal](https://github.com/HelloZeroNet/ZeroNet/tree/py3/plugins/disabled-ZeronameLocal) plugin.", "added": 1576397708, "modified": 1576397778, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565799776", "source_type": "github"}, {"comment_id": 429, "body": "Who said that you need to use Namecoin? And how would you interact with it without list?", "added": 1576397821, "modified": 1576397843, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565799909", "source_type": "github"}, {"comment_id": 430, "body": "We've already seen that Reddit really likes you.", "added": 1576397916, "modified": 1576397916, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565800020", "source_type": "github"}, {"comment_id": 431, "body": "Again, how would you interact with it without list? And who said that you **need** to use Namecoin?", "added": 1576397938, "modified": 1576397938, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565800052", "source_type": "github"}, {"comment_id": 432, "body": "> Hardcoding it and run a cluster where can access Namecoin blockchain on a few servers.\r\n\r\nWhat do you mean with this? It would still run in *centralized* servers so there won't be any benefit.", "added": 1576398273, "modified": 1576398273, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565800480", "source_type": "github"}, {"comment_id": 433, "body": "And of course that servers can't be compromised or censored. Who runs that servers can still manage all domains.", "added": 1576398435, "modified": 1576398435, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565800667", "source_type": "github"}, {"comment_id": 434, "body": "> I can run the server, I'm not afraid to pay $5 for a server with 20 Gb space...\r\n\r\nYes, but then you can still manage that server.\r\n\r\n> There should be a plugin or something to point ZeroNet to a server with the Namecoin blockchain.\r\n\r\n[ZeronameLocal](https://github.com/HelloZeroNet/ZeroNet/tree/py3/plugins/disabled-ZeronameLocal)\r\n\r\n> Better put this directly into the Config of ZeroNet!\r\n\r\nDomain plugins should be plugins included in core, but not directly in core.\r\n\r\n> But to have one list what one guy manages and he decide what .bit domains will resolve is absurd!\r\n\r\nAnd if *you* run your server and everyone uses it, you can also manage domains. That is also absurd!", "added": 1576398783, "modified": 1576398783, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565801051", "source_type": "github"}, {"comment_id": 435, "body": "Nobody said that you must use Namecoin.", "added": 1576399069, "modified": 1576399069, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565801378", "source_type": "github"}, {"comment_id": 436, "body": "> Tell this to @JeremyRand who even advertise ZeroNet on Namecoin.org!\r\n\r\nAgain, in any case, you will have to rely on centralized provider. And just that you know, most programs (browser extensions) that use Namecoin also rely on centralized servers.\r\n\r\n> You can run a local ZeroName instance or use another DNS like Name.YO.\r\n\r\nOr ENS. Or classic DNS. Or just Bitcoin address.\r\n\r\n> The local ZeroName instance will not solve anything because other people unable to visit the mydomain.bit domain anyway!\r\n\r\n@HelloZeroNet runs some script that fetches data from blockchain and puts them to Zeroname site. Maybe that script stopped for some reason, but it can be restartzed so your domain will work.\r\n\r\nAnd if you rely on another centralized server, that server can also crash and all domains will stopped working. ZeroNet initially used centralized server (DNSChain), but it was discontinued so **all** domains would stopped wotrking if ZeroNet wouldn't be updated to use Zeroname site.\r\n\r\n> Don't you claim that ZeroNet is censorship resistant when one guy can censor the whole thing!\r\n\r\nAnd relying on your centralized clearnet Namecoin proxy would solve this?", "added": 1576399515, "modified": 1576399565, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565801963", "source_type": "github"}, {"comment_id": 437, "body": "Again, **who said that you have to rely on Namecoin to use ZeroNet???**", "added": 1576399592, "modified": 1576399592, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565802062", "source_type": "github"}, {"comment_id": 438, "body": "?", "added": 1576399711, "modified": 1576399711, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565802204", "source_type": "github"}, {"comment_id": 439, "body": "Or just block **you**.", "added": 1576399820, "modified": 1576399820, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565802336", "source_type": "github"}, {"comment_id": 440, "body": "Again, **most programs that use Namecoin (and any other decentralized name system) use it with centralized clearnet servers**! Will you block all of them??", "added": 1576399869, "modified": 1576399869, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565802398", "source_type": "github"}, {"comment_id": 441, "body": "Every program that uses Namecoin relys on centralized servers!!!", "added": 1576400071, "modified": 1576400365, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565802676", "source_type": "github"}, {"comment_id": 442, "body": "Every program that uses Namecoin relys on centralized servers!!!", "added": 1576400111, "modified": 1576400370, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565802726", "source_type": "github"}, {"comment_id": 443, "body": "And update Zeroname list \ud83d\ude00", "added": 1576400507, "modified": 1576400507, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565803288", "source_type": "github"}, {"comment_id": 444, "body": "@krzysztof113 I partly agree with you. However, as I previously said, it is hard to design and use system that is efficient, safe, user-friendly and decentralized at same time.\r\n\r\n> And it is actually not so easy to implement a really decentralized solution. Almost every third-party domain system for integration with ZeroNet (or any other project) would require either:\r\n> \r\n> * Complete protocol implementation with locally stored data (which in case of blockchain-based systems means to have the whole blockchain stored locally).\r\n> * Data stored in a custom location (like Zeroname site).\r\n> * Data from a third-party provider (like Infura for Ethereum).\r\n", "added": 1576415901, "modified": 1576415926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565823687", "source_type": "github"}, {"comment_id": 445, "body": "> I mean, its blockchain is huge and yet people don't have to download tons of gigabytes to use it. \r\n\r\nIf they want to use it in completely decentralized way, they *have to* download tons of gigabytes. But they can also simply use some online wallets, which are centralized, and something like this is currently used by ZeroNet.\r\n\r\n> How's Zeronet data different and why can't be it stored in the same way as BTC transactions data?\r\n\r\nAnd how are BTC transactions data stored? Isn't the only way of accessing them to download blockchain - either locally or using some online service?", "added": 1576432813, "modified": 1576432876, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-565846342", "source_type": "github"}, {"comment_id": 446, "body": "Unfortunately, that centralized resolution is not really \"unnecessary\". Currently, this is the only efficient way to query blockchain without downloading it. Because in any case, you will either have to download whole blockchain or rely on centralized resolution.", "added": 1576551980, "modified": 1576551980, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-566396028", "source_type": "github"}, {"comment_id": 447, "body": "@JeremyRand When you will have time, could you continue discussiong that alternative solutions for domain queryng? And yes, use new new normal GitHub issue for that, not this one...", "added": 1576595650, "modified": 1576595650, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2361#issuecomment-566683433", "source_type": "github"}], "1604067744_mirrored_styromaniac_github": [{"comment_id": 448, "body": "@HelloZeroNet Doesn't ZeroNet Wrapper or Sidebar already provides some notification if site changes?", "added": 1576694750, "modified": 1576694750, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2362#issuecomment-567226857", "source_type": "github"}, {"comment_id": 449, "body": "Not always. If you build and sign new version of site yourself using command line, while you are having the site opened in tab, it won't update, but just display some notification. That's how it was few months ago.", "added": 1576695101, "modified": 1576695302, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2362#issuecomment-567228750", "source_type": "github"}], "1604067756_mirrored_styromaniac_github": [{"comment_id": 450, "body": "It would be good (but probably harder to do) to update ZeroNet to use Python bindings of libtorrent, which is one of the most popular BitTorrent libraries.\r\n\r\nThis would give support for more BitTorrent features which aren't currently supported by ZeroNet, including DHT, PEX and HTTP seeding, as well as better performance because it is written in C++. In the (near) future, it will also support WebTorrent, which would make it possible to later do complete browser versions of ZeroNet compatible with current one.\r\n\r\nAnd as it is quite extensible, it should probably be also possible to write extension/support for `zero` protocol.\r\n\r\nOne of the downsides (apart from that quite a lot of ZeroNet code would need to be rewritten) is that building and installing libtorrent is quite hard. But I (and probably also others) am working on some way to make that easier.\r\n\r\nSo, libtorrent should not be immediate priority, but it would be very useful to use it at some point.", "added": 1577806878, "modified": 1577806878, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2374#issuecomment-569972282", "source_type": "github"}, {"comment_id": 451, "body": "It might be possible to write libtorrent extension for dynamic contact. I think it should be possible, but it could be quite hard...", "added": 1577864185, "modified": 1577864185, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2374#issuecomment-570041458", "source_type": "github"}, {"comment_id": 452, "body": "@canewsin Few weeks ago, I created (unfinished) PR to libtorrent to provide easier installation and building (also wheels) with PyPI (arvidn/libtorrent#4218). Could you please check it and finish the work?", "added": 1581618009, "modified": 1581618009, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2374#issuecomment-585976933", "source_type": "github"}], "1604067761_mirrored_sergei-bondarenko_github": [{"comment_id": 453, "body": "ZeroNet currently uses Travis CI for tests.\r\n\r\nHowever, we could switch to GitHub Actions and also use them for more complete testing (more systems, testing bundles, testing Docker), building bundles, publishing changes... As GitHub Actions provide support for multiple workflows, more things could be tested at the same time.", "added": 1578148176, "modified": 1578148176, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2382#issuecomment-570803556", "source_type": "github"}], "1604067748_mirrored_dapplion_github": [{"comment_id": 454, "body": "@dapplion You need separate connection for each site. However, because you have access to WebSocket without wrapper, you can use [`as`](https://zeronet.io/docs/site_development/zeroframe_api_reference/#as) command to \"execute  command in other site's context\".\r\n\r\nThis means that you can connect only to your main site, and then use `as` commands to access commands for other sites. But your main site (probably) needs to have `ADMIN` permission.", "added": 1578730468, "modified": 1578730516, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2390#issuecomment-573307240", "source_type": "github"}, {"comment_id": 455, "body": "You can set property `nextMessageId` to `1000000` on ZeroFrame object. But note that I haven't tested it if it works with `as` command, although it should work.", "added": 1578822337, "modified": 1578822337, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2390#issuecomment-573411830", "source_type": "github"}, {"comment_id": 456, "body": "Yes, there is [ZeroNet](https://matrix.to/#/#0net:matrix.org) room on Riot/Matrix and #zeronet channel on Freenode IRC.", "added": 1578824673, "modified": 1578825334, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2390#issuecomment-573415114", "source_type": "github"}], "1604067751_mirrored_Visentinel_github": [{"comment_id": 457, "body": "People can ask @HelloZeroNet via ZeroMail to raise their limits.", "added": 1578661508, "modified": 1578661508, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2391#issuecomment-573096675", "source_type": "github"}], "1604067751_mirrored_TwinLizzie_github": [{"comment_id": 458, "body": "> This is kind of a hack though, can we add a callback?\r\n\r\nIt already supports `await`ing it since https://github.com/HelloZeroNet/ZeroHello/commit/a24c137a656bff1523599a368e4431102c5433f4.\r\n\r\nSo you can now use `await zeroframe.monkeyPatchAjax()`.", "added": 1578727162, "modified": 1578727276, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2392#issuecomment-573303453", "source_type": "github"}], "1604067764_mirrored_jeff-hykin_github": [{"comment_id": 459, "body": "It should be something like `zeronet.link`. And it should also provide stable public proxy for users that don't want or can't install ZeroNet.\r\n\r\nAnd in similar way as Ethereum and IPFS have `.eth.link` to like ENS+IPFS websites (`domain.eth.link` resolves to IPFS gateway), ZeroNet should also support `address.zeronet.to` and `domain.bit.zeronet.to` which would resolver to ZeroNet proxy.\r\n\r\nHowever, problem here is centralization and relying on singe server. So, when/if ZeroNet would get implementation of domain-based wrapper (@imachug was working on that), it should also locally resolve `.zeronet.to` addresses without relying on DNS servers.", "added": 1579872922, "modified": 1579872922, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578204612", "source_type": "github"}, {"comment_id": 460, "body": "Also, with DNS plugin (which isn't merged yet), you can use DNS reverse proxy for your own site so classic DNS domain resolves to public or personal ZeroNet instance.", "added": 1579873007, "modified": 1579873007, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578205165", "source_type": "github"}, {"comment_id": 461, "body": "...", "added": 1580048880, "modified": 1580048880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578523893", "source_type": "github"}, {"comment_id": 462, "body": "Death and other threats, spamming, trolling, insults... are also pretty disgusting. Just think about for a second.", "added": 1580058205, "modified": 1580058205, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578537531", "source_type": "github"}, {"comment_id": 463, "body": "I wouldn't report you if you wouldn't start spamming, trolling, making threats...", "added": 1580062094, "modified": 1580062094, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578543261", "source_type": "github"}, {"comment_id": 464, "body": "I didn't report GiganticBlackBear. I just reported account in which you were spamming, trolling and making threats.", "added": 1580063845, "modified": 1580063845, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578545936", "source_type": "github"}, {"comment_id": 465, "body": "Do you have any proof that **I** reported your account? If not, shut up!", "added": 1580064776, "modified": 1580064776, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578547188", "source_type": "github"}, {"comment_id": 466, "body": "Still no proof... Shame on you!", "added": 1580065268, "modified": 1580065268, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578547808", "source_type": "github"}, {"comment_id": 467, "body": "And what are your contributions? Stupid typo fix that you try to copyright. Or handling MIME types according to standards. Why don't you copyright Hello World program?", "added": 1580065322, "modified": 1580065322, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578547875", "source_type": "github"}, {"comment_id": 468, "body": "And just that you know. I didn't reported this exact account you had until few minutes ago. I actually noticed that it is deleted 30 seconds ago.", "added": 1580065421, "modified": 1580065421, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578548028", "source_type": "github"}, {"comment_id": 469, "body": "> I'm not sure what you mean by this. Won't the server need the site address in order to perform the redirect?\r\n\r\nRedirect could be performed by JavaScript. And because URL fragments (after #) are not sent to server, it shouldn't be able to track them.\r\n\r\n> Upgrade GLPv2 to v3 as described here\r\n\r\nHe actually can't publicly relicense ZeroNet as it is licensed as GPLv2-only and this means that he needs agreement from all ZeroNet contributors to relicense their work. He won't need agreement if ZeroNet would be licensed as GPLv2-or-later, but it is not. That page from GNU is just for relicesing your own work, but since ZeroNet includes contributions from other users, he needs agreement from them.", "added": 1580095120, "modified": 1580095120, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-578606289", "source_type": "github"}, {"comment_id": 470, "body": "It doesn't work for me in Firefox. It says that my ZeroNet local client is not detected, even if it is running. It fails because it tries to load favicon as a stylesheet so MIME type is incorrect.", "added": 1581096114, "modified": 1581096410, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-583594732", "source_type": "github"}, {"comment_id": 471, "body": "Also, wouldn't it be better to create a separate HTML and CSS files for this, as currently it is just embedds in main ZeroNet website? So it also loads 10 more files even if they are not needed for this.\r\n\r\nSo it would be `https://zeronet.io/Site/#1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8`, or even better `https://go.zeronet.io/#1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8`.", "added": 1581096306, "modified": 1581096306, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-583595789", "source_type": "github"}, {"comment_id": 472, "body": "@HelloZeroNet I created PR which modifiers regex to allow both access with `Site:` prefix and without it: HelloZeroNet/zeronet.io#46.", "added": 1581148936, "modified": 1581148936, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2406#issuecomment-583726340", "source_type": "github"}], "1604067776_mirrored_friday-james_github": [{"comment_id": 473, "body": "Problem is that ZeroNet relies on low-level network communication and file access which is quite hard to achieve with WebExtensions API. Also, it is written in Python and not so modular, but it may be possible to port it with WebAssembly, but the main problems are still modularity and low-level access.\r\n\r\nHowever, [anshorei@zeroid.bit](http://127.0.0.1:43110/Me.ZeroNetwork.bit/?Profile/1MoonP8t4rk9QamBUPh5Aspkwa1Xhf5ux2/1CgdRv2BFaVqNfmK3qGVYDuA7EDmk8dJVS/anshorei@zeroid.bit) is developing [ZeruNet](http://127.0.0.1:43110/4mVJrvB1XqtC4Aq55BmXyf9yXUN9iWwd8), which is ZeroNet implementation in Rust. I think it will be more modular and will support WebAssembly porting, so it might be possible to use it as an addon. However, it is currently not finished and not all things work yet.", "added": 1581149564, "modified": 1581149582, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2416#issuecomment-583727045", "source_type": "github"}], "1604067790_mirrored_canewsin_github": [{"comment_id": 474, "body": "@canewsin Don't worry, russianagent is just spammer/troll which has been spamming (and making death threats) for a few months.\r\n\r\nAlso, some documentation of ZeroNet protocol is [here](https://zeronet.io/docs/help_zeronet/network_protocol/). But more standardization would be good.", "added": 1581786081, "modified": 1581786108, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2425#issuecomment-586636283", "source_type": "github"}, {"comment_id": 475, "body": "> I was dare to report that ZeroNet illegally distributed more than 20 account of mine is suspended by GitHub.\r\n\r\nMaybe your account was suspended because you were making death threats, which are million times more illegal than any license violation?", "added": 1581786529, "modified": 1581786529, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2425#issuecomment-586636880", "source_type": "github"}, {"comment_id": 476, "body": "Look. I would also like to fix the license.\r\n\r\nBut you can't simply replace the old file with new one. You need permission from copyright holders (contributors) to do this, and not all of them allowed this.", "added": 1581787100, "modified": 1581787100, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2425#issuecomment-586637688", "source_type": "github"}, {"comment_id": 477, "body": "> Copyright permission is granted already under GPL \r\n\r\nPermission was only granted under GPLv2. If it would be granted under GPLv2-or-later, you could easily update the license, but as it is under GPLv2-only, you can't.", "added": 1581789042, "modified": 1581789042, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2425#issuecomment-586640066", "source_type": "github"}, {"comment_id": 478, "body": "So if \"GPLv2 license is GONE,\" ZeroNet is now proprietary, so you also need permission from contributors to change license...", "added": 1581789247, "modified": 1581789247, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2425#issuecomment-586640303", "source_type": "github"}, {"comment_id": 479, "body": "*All* contributors need to agree...", "added": 1581789395, "modified": 1581789395, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2425#issuecomment-586640488", "source_type": "github"}], "1604067823_mirrored_styromaniac_github": [{"comment_id": 480, "body": "> ZeroNet needs to tell the user that those numbers below 1024 are invalid.\r\n\r\nThey are not invalid. It's just OS that prevents non-root programs to use them.\r\n\r\nIf you run ZeroNet as root (or use options that @imachug linked), ZeroNet should work with any port.", "added": 1582226938, "modified": 1582226979, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2432#issuecomment-589383574", "source_type": "github"}], "1604067925_mirrored_imachug_github": [{"comment_id": 481, "body": "Or for more advanced updates that would need restart: Download update in background, notify user that restart is recommended, and replace/update ZeroNet on next startup.", "added": 1583763615, "modified": 1583763615, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2467#issuecomment-596664784", "source_type": "github"}], "1604067963_mirrored_imachug_github": [{"comment_id": 482, "body": "This should be just a temporary solution. Adding packages to `lib` directory and using some forks of them is not a good thing, as this requires more maintaining and possibly results in outdated or insecure dependencies.\r\n\r\nThe proper solution is to implement a better updating mechanism (updating dependencies in ZeroBundle and non-bundled versions, official releases on various package managers...) and then just add dependencies to `requirements.txt` or convert them into `setup.py` script. And to prevent malicious updates, there are some tools that automatically lock all dependencies' versions and add hash checking.", "added": 1584967694, "modified": 1584967694, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2491#issuecomment-602686395", "source_type": "github"}], "1604067887_mirrored_canewsin_github": [{"comment_id": 483, "body": "@WhooshJohnDoe Are you sure this is a good idea? Wikipedia [says](https://en.wikipedia.org/wiki/GNU_Free_Documentation_License#GPL_incompatible_in_both_directions) no:\r\n\r\n> The GNU FDL is incompatible in both directions with the GPL\u2014material under the GNU FDL cannot be put into GPL code and GPL code cannot be put into a GNU FDL manual.\r\n\r\nBut CC BY-SA is one-way compatible with the GPLv3, so it can be used here.", "added": 1585654520, "modified": 1585654520, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2496#issuecomment-606666936", "source_type": "github"}], "1604067875_mirrored_rubo77_github": [{"comment_id": 484, "body": "You probably need to use `python3` instead of just `python`.", "added": 1585401120, "modified": 1585401120, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2500#issuecomment-605468074", "source_type": "github"}, {"comment_id": 485, "body": "How did you mount `zeronet.conf` file? I think that Docker doesn't support mounting files so it failed.\r\n\r\nYou can instead just specify `--ui_ip` as command argument, like in [official Docker image](https://github.com/HelloZeroNet/ZeroNet/blob/py3/Dockerfile#L30):\r\n\r\n```dockerfile\r\nCMD (! ${ENABLE_TOR} || tor&) && python3 zeronet.py --ui_ip 0.0.0.0 --fileserver_port 26552\r\n```\r\n\r\nSo, because you are using `docker-compose.yml` you can probably use:\r\n\r\n```dockerfile\r\ncommand: \"(! ${ENABLE_TOR} || tor&) && python3 zeronet.py --ui_ip 0.0.0.0 --fileserver_port 26552\"\r\n```\r\n", "added": 1588570280, "modified": 1588570280, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2500#issuecomment-623330721", "source_type": "github"}], "1604067906_mirrored_filips123_github": [{"comment_id": 486, "body": "I modified `src/Crypt/CryptBitcoin.py` to use `is_compressed=True` in `privatekeyToAddress` and `sign` function, then sign site using uncompressed version of private key, and it worked. However, now uncompressed address can't be signed.\r\n\r\nIs there any way to support both addresses? Maybe first try to sign with uncompressed address and then compressed? Any better solution?\r\n\r\n**Update:** Based on [this Bitcointalk message](https://bitcointalk.org/index.php?topic=129652.msg1384929#msg1384929), the difference between compressed and uncompressed *private* key is \"a flag bit to the base58 encoding of the private key, notifying the importer whether or not to use the compressed public keys.\" So, if ZeroNet could detect this flag, it could determine if this is compressed or uncompressed key and then correctly use `is_compressed` argument.\r\n\r\n[Also](https://bitcointalk.org/index.php?topic=129652.msg1687617#msg1687617), \"to create the WIF, suitable for importing later, you take the 32 byte binary private key, prepend the 0x80 bytes, and append the 0x01 flag for compression, then run through base58encode and the output is the WIF.  For reference, to create an uncompressed WIF, just don't append the 0x01 before encoding.\" This probably means that `sslcrypto` needs to be updated to handle this `0x01` flag and ZeroNet to correctly use it? @imachug ", "added": 1585503278, "modified": 1585504381, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2501#issuecomment-605696980", "source_type": "github"}, {"comment_id": 487, "body": "But there is also VanitySearch which by default searches compressed addresses.", "added": 1585539387, "modified": 1585539387, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2501#issuecomment-605810731", "source_type": "github"}], "1604067908_mirrored_filips123_github": [{"comment_id": 488, "body": "Verifying doesn't fail, but I don't know if it actually works. I was able to sign and publish site with compressed address on instance with this addition, and view it on another instance with normal version.", "added": 1585539566, "modified": 1585539566, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2502#issuecomment-605811780", "source_type": "github"}], "1604067978_mirrored_imachug_github": [{"comment_id": 489, "body": "It seems to work. I created two ZeroTalk clones:\r\n\r\n* [`1BXjuMLWBG3PovvdyV4r1pgNrecLNatSqH`](http://127.0.0.1:43110/1BXjuMLWBG3PovvdyV4r1pgNrecLNatSqH/) with uncompressed address\r\n* [`1B7N3frmgHsQCztg8U6Q1g7KVk2dS3SA3Z`](http://127.0.0.1:43110/1B7N3frmgHsQCztg8U6Q1g7KVk2dS3SA3Z/) with compressed address\r\n\r\nI was able to sign and publish both of them, and both also work on another ZeroNet instance without these changes. And publishing users' content also work without changes.", "added": 1585568218, "modified": 1585568218, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-606038859", "source_type": "github"}, {"comment_id": 490, "body": "> Makes no sense to publish the same site under two different Bitcoin address\r\n\r\nWho said that you need to publish site on both addresses. You can just use compressed address and publish site to it and leave uncompressed one.\r\n\r\n> allows me to recover your private key instantly\r\n\r\nOk. I have site [ZeroTalk Compressed Address](http://127.0.0.1:43110/1B7N3frmgHsQCztg8U6Q1g7KVk2dS3SA3Z/) and [ZeroTalk Uncompressed Address](http://127.0.0.1:43110/1BXjuMLWBG3PovvdyV4r1pgNrecLNatSqH/). Both are signed with the same private key, one with compressed public key and one with uncompressed. Now, where is my private key?\r\n\r\nAlso, to make things a bit \"easier,\" here is the same message signed with compressed and uncompressed address of the same private key:\r\n\r\n```\r\n-----BEGIN BITCOIN SIGNED MESSAGE-----\r\nHello World\r\n-----BEGIN SIGNATURE-----\r\n1B7N3frmgHsQCztg8U6Q1g7KVk2dS3SA3Z\r\nIHktsPPjwy5B7jlvQBA8nX+jjUB6Z0owpGTGtptwAyaUnHkEz1eOq78PWhWgV1lAINezo/sC/EeqlZyyKUOQR30=\r\n-----END BITCOIN SIGNED MESSAGE-----\r\n```\r\n\r\n```\r\n-----BEGIN BITCOIN SIGNED MESSAGE-----\r\nHello World\r\n-----BEGIN SIGNATURE-----\r\n1BXjuMLWBG3PovvdyV4r1pgNrecLNatSqH\r\nHJz85ZdaDlL+vDdaOvu+Ng/D9/CDhVwXt7fnp0xchBGieixY/eOUTV/PrTwDIgFAwApjbJcHk0OUzEBubVjyEkU=\r\n-----END BITCOIN SIGNED MESSAGE-----\r\n```", "added": 1585678284, "modified": 1585678548, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-606877744", "source_type": "github"}, {"comment_id": 491, "body": "So explain how does it work? And if it is such serious vulnerability, won't be good to (securely) report it to Bitcoin developers?", "added": 1585679460, "modified": 1585680018, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-606887661", "source_type": "github"}, {"comment_id": 492, "body": "> Send some Bitcoin to the un(compressed) address and spend it. 1 satoshi for example.\r\n\r\nI don't have plans for spending any money for this, but if you send me some Bitcoins, I can try \ud83d\ude00\r\n\r\n> Are you signing the Bitcoin address or that is the message?\r\n\r\nIf you think about these two messages:\r\n\r\n* I'm signing message `Hello World`\r\n* With the same private key private key as compressed (`1B7N3frmgHsQCztg8U6Q1g7KVk2dS3SA3Z`) and uncompressed (`1BXjuMLWBG3PovvdyV4r1pgNrecLNatSqH`) address (separatly)\r\n* Which produces `IHktsPPjwy5B7jlvQBA8nX+jjUB6Z0owpGTGtptwAyaUnHkEz1eOq78PWhWgV1lAINezo/sC/EeqlZyyKUOQR30=` (compressed) and `HJz85ZdaDlL+vDdaOvu+Ng/D9/CDhVwXt7fnp0xchBGieixY/eOUTV/PrTwDIgFAwApjbJcHk0OUzEBubVjyEkU=` (uncompressed) signatures.", "added": 1585679798, "modified": 1585679798, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-606890025", "source_type": "github"}, {"comment_id": 493, "body": "> Take a look at this: crypto.stackexchange.com/a/57851 and this: eprint.iacr.org/2013/346\r\n\r\nBut where do this mention compressed and uncompressed addresses? The first website just mentions using the same `k` for signing different messages with the same private key. And the second mentions \"power analysis attack\" which I'm pretty sure you won't be able to do it using ZeroNet.", "added": 1585680838, "modified": 1585680838, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2503#issuecomment-606897217", "source_type": "github"}], "1604067955_mirrored_ghost_github": [{"comment_id": 494, "body": "What's then [this](https://github.com/imachug/sslcrypto/blob/master/sslcrypto/_ecc.py#L472-L478)?", "added": 1585726092, "modified": 1585726092, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2504#issuecomment-607168035", "source_type": "github"}], "1604067887_mirrored_SuperSandro2000_github": [{"comment_id": 495, "body": "> I going to get rid off all unnecessary plugins, UI, and trashy code related to OS and browsers from ZeroNet.\r\n> ZeroNet going to be renamed too and going to be way faster and stable than it is right now.\r\n\r\nYes. When you remove all those things, rename it to \"zero\".\r\n", "added": 1586325939, "modified": 1586325939, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2509#issuecomment-610843027", "source_type": "github"}], "1604067918_mirrored_filips123_github": [{"comment_id": 496, "body": "Ironically, two days after this PR (yesterday), stable Gevent 1.5.0 was released. This means that we probably don't need condition anymore and can just require `gevent>=1.1.0` for all Python versions.", "added": 1586587791, "modified": 1586587791, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2510#issuecomment-612381206", "source_type": "github"}], "1604067964_mirrored_ghost_github": [{"comment_id": 497, "body": "But what's point of this? When you start developing a site, you will most likely rewrite `index.html` and delete QR code so there is no point in generating QR code. But you can always manually create QR code, and site developer can also do this if he wants.", "added": 1586367125, "modified": 1586367125, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2511#issuecomment-611178679", "source_type": "github"}], "1604067971_mirrored_ghost_github": [{"comment_id": 498, "body": "> BIP32 is created for the idiots who not backing up keys\r\n\r\nExcept that Bitcoin developers and community recommend to **not** use \"normal\" private keys and to use deterministic wallets instead...\r\n\r\n[Source](https://en.bitcoin.it/wiki/Address_reuse)", "added": 1586513975, "modified": 1586513975, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2514#issuecomment-612024865", "source_type": "github"}], "1604067973_mirrored_ghost_github": [{"comment_id": 499, "body": "> you should never copy your private keys with users.json to any other computer!\r\n\r\nWhy?\r\n\r\n> If you not copy the entire folder (including private keys) than you will need to manually add each site in UI and download any additional files.\r\n\r\nSo then you copy entire folder?", "added": 1586592238, "modified": 1586592238, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2515#issuecomment-612394167", "source_type": "github"}, {"comment_id": 500, "body": "> because you should never copy private keys like how you copy other files!\r\n\r\nBecause why?\r\n\r\n> there should be a command to bulk add sites to a node!\r\n\r\nOr you can just make simple Python or Bash script which loops through sites in list and creates HTTP request to ZeroNet to load it.", "added": 1586600853, "modified": 1586600853, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2515#issuecomment-612421218", "source_type": "github"}, {"comment_id": 501, "body": "No, HTTP request to `http://127.0.0.1:43110/site-address` is enough.", "added": 1586605320, "modified": 1586605320, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2515#issuecomment-612436526", "source_type": "github"}], "1604067977_mirrored_ghost_github": [{"comment_id": 502, "body": "What was the output of `apt autoremove --purge`?", "added": 1586587152, "modified": 1586587152, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2517#issuecomment-612379395", "source_type": "github"}, {"comment_id": 503, "body": "Did you initially install dependencies with APT or pip? Also, did you updated from Python 3.7 (or some older version) to 3.8?\r\n\r\nIf you updated Python, your dependencies from previous Python version were not transferred to 3.8. Then BleachBit probably recognized them as unimportant and deleted them.\r\n\r\nAnd your problem with Gevent is similar to [this](https://askubuntu.com/questions/797058/not-uninstalling-paramiko-at-usr-lib-python2-7-dist-packages-outside-environme). It probably means that you installed Gevent with `apt install python3-gevent` and not with pip. Because of that, pip can't update it. To update all dependencies successfully with pip, you first need to remove all APT-installed dependencies (`apt remove python3-gevent`) and then run pip.", "added": 1586588271, "modified": 1586588271, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2517#issuecomment-612382612", "source_type": "github"}, {"comment_id": 504, "body": "Yes, you should uninstall Gevent from APT and install it using pip. Problem is that Gevent from APT does not have 1.5.0, which is the only version which supports Python 3.8.", "added": 1586589129, "modified": 1586589129, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2517#issuecomment-612384974", "source_type": "github"}, {"comment_id": 505, "body": "Then you either need to:\r\n\r\n* Install ZeroNet in virtualenv and keep the Harvester and Gevent from APT, or\r\n* Remove the Harvester and Gevent from APT, install them [from source](https://github.com/laramies/theHarvester/wiki/Installation) and install Gevent for ZeroNet using pip.\r\n\r\n", "added": 1586589607, "modified": 1586589607, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2517#issuecomment-612386287", "source_type": "github"}, {"comment_id": 506, "body": "> ZeroNet never works from virtualenv, I tried also in venv\r\n\r\nThis is not true.\r\n\r\n> I can use ZeroNet with gevent 1.4.0-1.1 in Python 3.8\r\n\r\nYes, it installs correctly. But does it actually works when you try to use it in ZeroNet?", "added": 1586590180, "modified": 1586590180, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2517#issuecomment-612388103", "source_type": "github"}], "1604067979_mirrored_ghost_github": [{"comment_id": 507, "body": "I created this PR before I saw yours (although your was first). But yes, yours can be merged if you want.", "added": 1586591039, "modified": 1586591039, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612390657", "source_type": "github"}, {"comment_id": 508, "body": "Gevent 1.5 does not support Python 3.4 but ZeroNet does.", "added": 1586594101, "modified": 1586594101, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612399819", "source_type": "github"}, {"comment_id": 509, "body": "> well, maybe its is the time to drop support for 3.4. \r\n\r\nTime to drop 3.4 support was already few years ago...\r\n\r\n> Since Gevent 1.5.0 supports all version from 2.7.9 to up, except 3.4\r\n\r\nIt support Python 2.7+, except 3.0, 3.1, 3.2 and 3.3. Basically Python 2.7 and 3.5+.", "added": 1586597996, "modified": 1586597996, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2518#issuecomment-612412146", "source_type": "github"}], "1604067958_mirrored_filips123_github": [{"comment_id": 510, "body": "I think I know how could I implement this and will try to create PR tommorow.", "added": 1587748640, "modified": 1587748640, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2540#issuecomment-619220058", "source_type": "github"}, {"comment_id": 511, "body": "Yes, this should probably work, but it is not documented anywhere. ZeroFrame documentation just lists `as` as admin command without any mention that it works with merged sites.", "added": 1587813584, "modified": 1587813584, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2540#issuecomment-619386738", "source_type": "github"}, {"comment_id": 512, "body": "> I for example don't even ever used merger\r\n\r\nSure, if you don't need that plugin don't use it...", "added": 1587973920, "modified": 1587973920, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2540#issuecomment-619902386", "source_type": "github"}, {"comment_id": 513, "body": "Thanks! I'm will close this issue because using `as` command should work.\r\n\r\nCan you also check if there are some other commands that are listed as ADMIN while they also work with CORS/MergerSite plugin and mark them if needed?", "added": 1587981678, "modified": 1587981678, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2540#issuecomment-619970884", "source_type": "github"}], "1604067926_mirrored_anmol26s_github": [{"comment_id": 514, "body": "ZeroNet for YunoHost package is unmaintained and broken. I'm currently working on updating it so it will work with newer ZeroNet versions.", "added": 1587990312, "modified": 1587990312, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2541#issuecomment-620056021", "source_type": "github"}, {"comment_id": 515, "body": "Are you trying to do this with YunoHost? Unfortunately, this won't work because YunoHost uses cookies for SSO and that cookies won't be included in ZeroNet's iframe so scripts won't load. See https://github.com/YunoHost/issues/issues/1580 for more details.\r\n\r\nI'm trying to update ZeroNet package and add more configuration options to it (like support for Multiuser plugin, public instances...), but this error is preventing from finishing it.\r\n\r\nAs possible workaround about this, you can try installing Multiuser plugin and then enabling public access to ZeroNet which probably means SSO cookies won't be needed.", "added": 1588228763, "modified": 1588228843, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2541#issuecomment-621726230", "source_type": "github"}, {"comment_id": 516, "body": "If it is working or not is not related to Multiuser/UiPassword plugin but if YunoHost restricts access behind SSO login.\r\n\r\nI meant that you could try enabling public/unrestricted access to ZeroNet (with `source /usr/share/yunohost/helpers && ynh_app_setting_set --app=$app --key=unprotected_uris --value=\"/\"`, where `$app` is ZeroNet app ID from YunoHost), but restrict access to yourself with UiPassword plugin (I first wrongly said Multiuser).", "added": 1588258374, "modified": 1588258374, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2541#issuecomment-622007110", "source_type": "github"}], "1604067927_mirrored_nomagics_github": [{"comment_id": 517, "body": "Iframe wrapper is there for a reason. If there won't be one, every site will be able to access data from all other sites...", "added": 1587995848, "modified": 1587995848, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2542#issuecomment-620108979", "source_type": "github"}, {"comment_id": 518, "body": "You also need iframe on revere proxies because if not, sites would have direct access to WebSocket API which basically means NOSANDBOX and ADMIN permissions. Also, wrapper manages many of ZeroFrame functionalities (prompts, notifications...) so you won't get them if you remove it.", "added": 1587997196, "modified": 1587997479, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2542#issuecomment-620120919", "source_type": "github"}], "1604067929_mirrored_earthengine_github": [{"comment_id": 519, "body": "Why Multiuser plugin, which also uses a cookie, works but UiPassword doesn't?", "added": 1588449566, "modified": 1588449566, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2544#issuecomment-623026609", "source_type": "github"}], "1604067972_mirrored_mx5kevin_github": [{"comment_id": 520, "body": "> In the More Sites start page to Create a Page where volunteers can upload patches and codes,current softwares.About ZeroNet and zites too.In the case of Zites who wants what,bug reports.If a developer has free time, they can simply add it to the project.\r\n\r\nWell, sites can already use GitHub, GitLab or Git Center if they are open source and want to accept contributions. Not sure why this would have to be directly built into ZeroNet.\r\n\r\n> Donate to using popular cryptocurrencies and not just bitcoin.Opening a common mining pool where the users can donate CPU and GPU mining with an easy-to-download preset software.\r\n\r\nProblem is that cryptocurrencies and blockchains use completely different network than ZeroNet. This means that any mining pool would have to be separate from ZeroNet and centrally hosted on clearnet.\r\n\r\nIdea of that \"dontation platform\" is interesting and some of them already exist on Ethereum (like [Gitcoin](https://gitcoin.co/) or [Bounties Network](https://bounties.network/)), but it is still separate from ZeroNet and would still need to interact with services outside ZeroNet.", "added": 1592729013, "modified": 1592729013, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2570#issuecomment-647116909", "source_type": "github"}, {"comment_id": 521, "body": "> Unable to upload files. There is no easily accessible common development interface.\r\n\r\nShould be fixed pretty easily, in any case more easily than creating whole new site to reinvent the wheel.\r\n\r\n> A separate account must be registered.\r\n\r\nFor Git Center? Well, you have to register ZeroId or KxoID, just like for any othr ZeroNet site.\r\n\r\n> GitHub, GitLab or Git Center there is no possibility for rapid and independent developments.\r\n\r\nHow not? If original site/repository is dead, anyone can fork it and develop it themselves.\r\n\r\nOne of points for ZeroNet is that only site owners can change their sites, so I don't see how it would be possible for independent development of original site without owner's approval for changes.\r\n\r\n> Paid sites option, clearnet access and etc.\r\n\r\nPaid sites should probably be implemented externally using some plugins or services, not directly in ZeroNet core. Same for clearnet access which can be done with third-party proxies.\r\n\r\n> That's what I was thinking. https://xmr.nanopool.org/blocks\r\n\r\nYes, but this is not directly connected to ZeroNet protocol. It would also need to be implemented using external service.", "added": 1592763999, "modified": 1592763999, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2570#issuecomment-647183887", "source_type": "github"}]}, "next_topic_id": 36, "topic": [{"topic_id": 1604066157, "title": "Add Slovenian translate.", "body": "Add Slovenian translate.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1507389404, "modified": 1507629360, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1135", "source_type": "github"}, {"topic_id": 1604066161, "title": "ZeroNet REST API", "body": "Can I use a ZeroNet for decentralized REST API server and client? If so, how? If not, can you enable this?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1507441820, "modified": 1508508534, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1137", "source_type": "github"}, {"topic_id": 1604066186, "title": "Change ZeroNet to Python 3", "body": "Please change ZeroNet to Python 3 (with Python 2 support).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1508252212, "modified": 1508340516, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1154", "source_type": "github"}, {"topic_id": 1604067215, "title": "Paid site hosting", "body": "## Motivation\r\n\r\nThe site currently remains online so long as at least 1 peer is serving it.\r\n\r\nThis is good, but what if all the visitors suddenly stop hosting the site? It will go down.\r\n\r\n## Solution\r\n\r\nFree hosting should remain, but there should be optional support for paid hosting.\r\n\r\nSome users of ZeroNet (hosts) might want to make money from hosting ZeroNet websites. So they set the ZeroNet program to hosting mode (this include setting the max amount of storage and payment address).\r\n\r\nThen, the site owner decides to pay for hosting. He pays some amount of cryptocurrency (probably Bitcoin or Ethereum) to the network.\r\n\r\nThe network then decides how many (based on the amount that was paid) and which (randomly) hosts would serve the site. The site is then transferred to that hosts and hosts receive money for hosting.\r\n\r\n## Considerations\r\n\r\n- [ ] What should be the price for hosting.\r\nIt should depend on the amount of storage and the number of hosts.\r\n\r\n- [ ] Which cryptocurrency should be used.\r\nBitcoin's cryptography is already used by ZeroNet.\r\nEthereum has some features that might be useful for this ([EIP 1337](https://1337alliance.com/) - subscriptions).\r\n\r\n- [ ] How to implement payments.\r\nThis should be done with some subscriptions.\r\nHosts should be paid dynamically depending on how many sites and storage they host.\r\n\r\n- [ ] How to implement hosts choosing.\r\nThere should be some good algorithm to choose the hosts.\r\n\r\n- [ ] What if the host goes down.\r\nMultiple hosts should be used for each site.\r\nThe host should not be paid when it is not hosting the site.\r\nHosts should be able to (temporary and permanently) go down.\r\n\r\n## Existing projects\r\n\r\nThere are already some existing projects for distributed storage hosting. You could look to them for the idea how to implement this.\r\n\r\n* [Storj](https://storj.io/)\r\n* [Filecoin](https://filecoin.io/)\r\n* Other \"Proof of Storage\" and \"Proof of Capacity\" projects", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554647865, "modified": 1554647865, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1967", "source_type": "github"}, {"topic_id": 1604067222, "title": "Use Local App Data when running from Program Files", "body": "The program now checks if it is running from `Program Files` and then set `start_dir` to `%LOCALAPPDATA\\ZeroNet`.\r\n\r\nThere are still some problems with this. See https://github.com/HelloZeroNet/ZeroHello/issues/116#issuecomment-480868018.\r\n\r\nShould I also submit this to `py3` branch?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1554725108, "modified": 1586077151, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1972", "source_type": "github"}, {"topic_id": 1604067257, "title": "Support for detection of system's theme", "body": "I created support for the detection of system's theme. This fixes HelloZeroNet/ZeroHello#117.\r\n\r\nAfter this PR is merged, I will also submit PR to ZeroHello to actually change `use_system_theme` setting and configure detection. For that, I need to know the revision of ZeroNet that would have this feature enabled to implement a version check.\r\n\r\nThis PR adds a new CoffeeScript file that will check if `use_system_theme` setting is true. If it is, it will check the current system's theme. If it is different from current ZeroNet theme, it will set it and reload the page. If the theme is changed when the page is opened, it will display a notification to the user.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1556285353, "modified": 1563712105, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/1999", "source_type": "github"}, {"topic_id": 1604067267, "title": "Downloading optional binary file", "body": "I am working on decentralized x86 virtualization with ZeroNet and [v86](https://github.com/copy/v86/) ([my site address](http://127.0.0.1:43110/1z86z5jCaCQpgabfbQFJTLcKBLJdTtGYD/) - not finished).\r\n\r\n---\r\n\r\nTo run systems, I need to load system images and BIOSes. Details how to do this are available in [v86 API docs](https://github.com/copy/v86/blob/master/docs/api.md).\r\n\r\n> There are two ways to load images (`bios`, `vga_bios`, `cdrom`, `hda`, ...):\r\n>\r\n> - Pass an object that has a url. Optionally, `async: true` and `size:\r\n  size_in_bytes` can be added to the object, so that sectors of the image\r\n  are loaded on demand instead of being loaded before boot (slower, but\r\n  strongly recommended for big files). In that case, the `Range: bytes=...`\r\n  header must be supported on the server. Note: the python SimpleHTTPServer \r\n  does not support this, so it won't work with the default webserver used\r\n  by `make run`.\r\n>\r\n> - Pass an `ArrayBuffer` or `File` object as `buffer` property.\r\n\r\n---\r\n\r\n\r\nIn my site, `bios` and `vga_bios` are optional static (provided by me) files and located in `data/bios/bios.bin` and `data/bios/vga_bios.bin`. Other files will be provided by users (something like ZeroUp).\r\n\r\n---\r\n\r\nFirst, I tried to provide `bios` and `vga_bios` as URLs. This is my code:\r\n\r\n```js\r\nlet ajaxKey = (await this.cmd('wrapperGetAjaxKey', {}))[0] // I'm using custom version of this.cmd with promise\r\n\r\noptions.bios = { url: 'data/bios/seabios.bin?ajax_key=' + ajaxKey }\r\noptions.vga_bios = { url: 'data/bios/vgabios.bin?ajax_key=' + ajaxKey }\r\n\r\n// Options are provided to V86Starter constructor\r\n```\r\n\r\nBut this doesn't work.\r\n\r\nIn Firefox network monitor, I can see the request to the first file, but it looks like it is not finished:\r\n\r\n![slika](https://user-images.githubusercontent.com/16626308/56983232-67ed3f00-6b83-11e9-9f0e-d272e8474541.png)\r\n\r\nIn the ZeroNet log, I can see this request:\r\n\r\n```\r\n[2019-04-30 19:38:48,121] DEBUG    Ui.UiServer 127.0.0.1 - - [2019-04-30 19:38:48] \"GET /uimedia/all.css?rev=3852 HTTP/1.1\" 200 44127 0.001000\r\n[2019-04-30 19:38:53,598] DEBUG    ConnServer Conn#354 91.64.153.29 [?] > Closing connection: [Cleanup] Connect timeout: 13.999s, waiting_requests: 1, sites: 3, buff: 0...\r\n[2019-04-30 19:38:53,598] DEBUG    Site:1SunAW..JN9a Queried hashfield from 1 peers in 58.738s\r\n[2019-04-30 19:38:54,598] DEBUG    ConnServer Conn#355 91.64.153.29 [?] > Connecting... (site: Site 1uPLoa..dmQc)\r\n[2019-04-30 19:38:56,786] DEBUG    Site:15fDN4..h518 Need connections: 6, Current: 18, Total: 273\r\n[2019-04-30 19:38:56,809] DEBUG    Site:15fDN4..h518 Sent my hashfield (chaged 2178.630s ago) to 1 peers\r\n[2019-04-30 19:38:56,835] DEBUG    ConnServer Conn#355 91.64.153.29 [?] > Wait for handshake before send request\r\n[2019-04-30 19:38:57,003] DEBUG    WorkerManager:1Gtubs..Y22s Timeout, Skipping: {'optional_hash_id': None, 'site': <Site 1Gtubs..Y22s>, 'done': False, 'size': 0, 'inner_path': u'data/users/131Seivv6aH8vnohPmYPcPwPfZ1a5ubMMs/content.json', 'peers': None, 'time_started': 1556645866.947, 'time_action': None, 'priority': 2, 'failed': [<Peer:78.143.208.119>, <Peer:5.9.9.18    >, <Peer:173.249.37.150>, <Peer:23.92.127.42>, <Peer:12.217.40.216>, <Peer:91.64.153.29>, <Peer:37.187.118.206>, <Peer:pr7l5d22b2hstu26.onion>], 'workers_num': 0, 'time_added': 1556645866.947, 'evt': <gevent.event.AsyncResult object at 0x0841D4F0>}\r\n[2019-04-30 19:38:57,003] DEBUG    Site:1Gtubs..Y22s Download data/users/131Seivv6aH8vnohPmYPcPwPfZ1a5ubMMs/content.json failed, check_modifications: False\r\n[2019-04-30 19:39:08,598] DEBUG    ConnServer Conn#355 91.64.153.29 [?] > Closing connection: [Cleanup] Connect timeout: 14.001s, waiting_requests: 1, sites: 1, buff: 0...\r\n[2019-04-30 19:39:09,599] DEBUG    ConnServer Conn#356 91.64.153.29 [?] > Connecting... (site: Site 15fDN4..h518)\r\n[2019-04-30 19:39:12,882] DEBUG    ConnServer Conn#356 91.64.153.29 [?] > Wait for handshake before send request\r\n[2019-04-30 19:39:18,828] DEBUG    Ui.UiServer 127.0.0.1 - - [2019-04-30 19:39:18] \"GET /1z86z5jCaCQpgabfbQFJTLcKBLJdTtGYD/data/bios/seabios.bin?ajax_key=a8b7e87fa9ee6256c4bb398c561a980e3020a04ea37b0e4af4b7a060b374f08c HTTP/1.1\" 200 65889 0.001000\r\n[2019-04-30 19:39:23,599] DEBUG    ConnServer Conn#356 91.64.153.29 [?] > Closing connection: [Cleanup] Connect timeout: 14.000s, waiting_requests: 1, sites: 1, buff: 0...\r\n[2019-04-30 19:39:23,599] DEBUG    Site:1MaiL5..Ju27 Queried hashfield from 1 peers in 49.742s\r\n[2019-04-30 19:39:23,980] DEBUG    Site:1CiXRY..QoF2 Sent my hashfield (chaged 2205.787s ago) to 2 peers\r\n[2019-04-30 19:39:24,121] DEBUG    Site:1CiXRY..QoF2 Queried hashfield from 1 peers in 0.141s\r\n[2019-04-30 19:39:24,601] DEBUG    ConnServer Conn#357 91.64.153.29 [?] > Connecting... (site: Site 1KN5zR..h38s)\r\n[2019-04-30 19:39:26,122] DEBUG    Site:1Name2..hM9F Need connections: 6, Current: 30, Total: 837\r\n[2019-04-30 19:39:27,124] DEBUG    Site:1HeLLo..Tf3D Need connections: 6, Current: 27, Total: 782\r\n[2019-04-30 19:39:28,124] DEBUG    ConnServer Conn#358 144.34.215.231 [?] > Connecting... (site: None)\r\n[2019-04-30 19:39:28,976] DEBUG    ConnServer Conn#358 144.34.215.231 [v2] > Closing connection: Removing, waiting_requests: 0, sites: 1, buff: 0...\r\n[2019-04-30 19:39:28,976] DEBUG    Site:1Gtubs..Y22s Tracker announce result: zero://144.34.215.231:16419 (sites: 74, new peers: 1) in 0.852s\r\n```\r\n\r\nBut request never finished. The second file is never requested. And v86 never loads.\r\n\r\nWhat's this? I can download both files directly in less than a  second (they are 128 KB and 34 KB big).\r\n\r\n---\r\n\r\nIf I try to request files with cmd `fileGet` and pass them as buffer, It doesn't work becaue of encoding problems:\r\n\r\n```\r\n[2019-04-30 20:12:10,578] DEBUG    Site:1z86z5..tGYD Websocket send error: UnicodeDecodeError: 'utf8' codec can't decode byte 0x90 in position 30436: invalid start byte in UiWebsocket.py line 214 > __init__.py line 244 > encoder.py line 207 > encoder.py line 270\r\n```\r\n\r\n---\r\n\r\nIs there any way to download (large) optional binary files? How can I do this?\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1556637236, "modified": 1560508022, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2005", "source_type": "github"}, {"topic_id": 1604067300, "title": "Display a sponsor button in repository", "body": "GitHub now supports [sponsorships](https://github.blog/2019-05-23-announcing-github-sponsors-a-new-way-to-contribute-to-open-source/) in the repository.\r\n\r\nI created `.github/FUNDING.yml` file which contains a link to ZeroNet donation page. This will now display the sponsor button, but **you need to enable this in repository settings.**\r\n\r\nIf you also have other supported providers, you can also set up them in this file. You can see [more details](https://help.github.com/en/articles/displaying-a-sponsor-button-in-your-repository) about this and details how to enable this.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1558703284, "modified": 1563712095, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2031", "source_type": "github"}, {"topic_id": 1604067323, "title": "More domain name systems", "body": "There should be support for more domain name systems. Some of them are more decentralised, some of them are less, but it would still be good if more would be supported.\r\n\r\nIdeally, each system should have it's own plugin (to provide support to disable only one), but some of them may share some code. All of them should be enabled by default (to reach more users) but it should be possible to disable them.\r\n\r\nThis are some ideas I have:\r\n\r\n- [x] [NameCoin](https://namecoin.org/) (#31)\r\n- [ ] [Classic DNS (with OpenNIC)](https://www.opennic.org/) (#104)\r\n- [ ] [Ethereum Name Service](https://ens.domains/)\r\n- [ ] [Tor Onion Domains](https://en.wikipedia.org/wiki/.onion)\r\n- [ ] [EmerDNS](https://emercoin.com/en/emerdns) (#142)\r\n- [ ] [Handshake](https://handshake.org/)\r\n- [ ] [Unstoppable Domains](https://unstoppabledomains.com/)\r\n- [ ] [OneName](https://onename.com/)\r\n- [ ] ZeroNet ID providers (#1696)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561206958, "modified": 1585825644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2049", "source_type": "github"}, {"topic_id": 1604067325, "title": "Better user management", "body": "## Problem\r\n\r\nMany users want to have more IDs on same provider (probably ZeroID).\r\n\r\nThis is currently only possible with Multiuser plugin which isn't really designed for such things. Users must know their master seeds each time they want to switch ID and their `users.json` can get bloated with many random generated accounts.\r\n\r\n## Solution\r\n\r\nThere should be plugin built specifically for this.\r\n\r\nWhen user visits ZeroHello, it should see which account is in use and all IDs that are in that account.\r\nUsers should then be able to list all other accounts that are stored with all IDs that are in them. It should be possible to switch account with click on it. Additionally, each account should have name that is provided by user.\r\nIt should also be possible to manage accounts. It should be possible to add or remove specific account from list and `users.json`. It should also be possible to rename accounts, re-order them and group them together into groups.\r\n\r\n## Terms\r\n\r\nWith \"user\", I mean person using ZeroNet.\r\nWith \"account\", I mean ZeroNet account which consist of address and master seed.\r\nWith \"ID\", I mean username from providers like ZeroID.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561210718, "modified": 1571247796, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2050", "source_type": "github"}, {"topic_id": 1604067336, "title": "Allow Pointer Lock API in iframe", "body": "[Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API) is blocked in sandboxed iframes. Can you allow it for usage?\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1561830778, "modified": 1561909273, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2057", "source_type": "github"}, {"topic_id": 1604067343, "title": "Add support for more protocols", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nZeroNet currently uses the BitTorrent network. Although it is good, it still has some limitations.\r\n\r\n**Describe the solution you'd like**\r\n\r\nZeroNet should support more protocols. More protocols it would support, more decentralized it would be. It would also have many more features.\r\n\r\nI would like to support those protocols:\r\n\r\n- [ ] DHT - Already in #57\r\n- [ ] BitTorrent - Standard BitTorrent for storage of large files; Already used in [rllola/zeronet-torrent-plugin](https://github.com/rllola/zeronet-torrent-plugin)\r\n- [ ] [WebTorrent](https://webtorrent.io/) - Alerady in #2120\r\n- [ ] [libp2p](https://libp2p.io/) - Python version is currently developing; Already used in @ZeroNetJS\r\n- [ ] [IPFS](https://ipfs.io/) - For storage of large files\r\n- [ ] [IPLD](https://ipld.io/) - Already in MuxZeroNet/proposals#2\r\n- [ ] [Dat](https://www.datprotocol.com/)\r\n- [ ] [Safe Network](https://safenetwork.org/)\r\n- [ ] [Arweave](https://www.arweave.org/)\r\n- [ ] [Solid](https://solid.inrupt.com/)\r\n- [ ] [Lokinet](https://loki.network/)\r\n- [ ] [Fediverse](https://en.wikipedia.org/wiki/Fediverse) (ActivityPub, DFRN, Diaspora Network, OStatus, XMPP, Zot & Zot/6)\r\n\r\nThere could also be integration with existing decentralized and anonymous projects:\r\n\r\n- [x] [Tor](https://www.torproject.org/)\r\n- [ ] [I2P](https://geti2p.net/)\r\n- [ ] [Freenet](https://freenetproject.org/)\r\n- [ ] [GNUnet](https://gnunet.org/)\r\n\r\nSome of that suggestion are mine and some are based on other comments on GitHub or ZeroNet. I think that it's good to have one place to track them, so I created this issue.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1562081636, "modified": 1582293149, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2062", "source_type": "github"}, {"topic_id": 1604067346, "title": "Split ZeroNet into multiple parts", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nZeroNet source code is currently pretty huge. It's hard to only use only one part because all parts are very connected with each other.\r\n\r\nThis is also related to #1289, #2062 and some other comments on GitHub and ZeroTalk.\r\n\r\n**Describe the solution you'd like**\r\n\r\nZeroNet source code should be split into multiple packages. That packages should be for core (communication between peers and related protocol things), user-related things (configuration, saving sites...), WebSocket server (for [integration with other software](https://gist.github.com/filips123/14d5979db24b20cdcfd40e3faacf1033)), UI server (for complete ZeroNet like it is today), command-line interface and additional plugins. And maybe also some additional packages if needed.\r\n\r\nThis would allow easier development of ZeroNet itself and also easier [integration with other software](https://github.com/HelloZeroNet/ZeroNet/issues/1289).\r\n\r\nAlso, there should be proper documentation of ZeroNet protocol so it would be easier to make ZeroNet implementations in other languages.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1562092184, "modified": 1562500670, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2063", "source_type": "github"}, {"topic_id": 1604067349, "title": "Second instance will continue running even if port is already taken", "body": "### Describe your environment\r\n\r\n  * ZeroNet version: 0.7.0\r\n  * Operating system: Windows 10\r\n\r\n  * First instance: `C:\\Users\\filips\\AppData\\Local\\Programs\\ZeroNet`\r\n  * Second instance: `D:\\Users\\filips\\Namizje\\ZeroNet-win-dist-win64`\r\n\r\n### Describe the problem\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Create first ZeroNet instance.\r\n  2. Confirm that it works.\r\n  3. Create a second ZeroNet instance with the same port.\r\n  4. It will continue running even if the port is already taken.\r\n\r\n#### Observed results\r\n\r\nThe second instance will try to start. It will fail because the port for a server is already taken by the first instance.\r\n\r\nBut for some reason, the process of the second instance won't be killed so it will be still running, but without any usability.\r\n\r\nWhen you will try to open the server of the second instance, it will actually use the first one.\r\n\r\n[Here](https://pastebin.com/Vgz9xR64) is my debug log of the second instance. As you can see, it will detect that port is already taken and stop UiServer. But the process will be still running until I manually kill it from Task Manager.\r\n\r\nThis issue is mostly based on [this Reddit topic](https://www.reddit.com/r/zeronet/comments/c045z2/disallow_running_a_second_instance/).\r\n\r\n#### Expected results\r\n\r\nThe second instance should detect that port is already taken, inform the user and then stop itself.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1562138037, "modified": 1562242872, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2065", "source_type": "github"}, {"topic_id": 1604067359, "title": "Create translation managing site", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIt's currently not easy to create and maintain ZeroNet translation because all translation happens just in files so it's hard to track all changes.\r\n\r\n**Describe the solution you'd like**\r\n\r\nCreate a translation/localisation platform as ZeroNet zite. It should be similar to Transifex, Crowdin or other existing platforms. It should be possible to track all changes to the original words, translated words, missing translations... It should also be possible to automatically merge and pull all changes to/from GitHub (or Git Center).\r\n\r\nAlso, that zite should be open to anyone to host and translate own projects. Something like Git Center which allows hosting Git projects as merged sites. So there would be the main UI for translation, but each project would have a separate merged site for storing data.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nUntil you finish translation zite, you should use some other translation/localisation platform, such as Transifex or Crowdin.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1562308952, "modified": 1562308952, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2072", "source_type": "github"}, {"topic_id": 1604067361, "title": "Fix infinite reloading when system theme changes", "body": "This fixes problem with infinite reloading which was introduced with my #1999.\r\n\r\nWhen system theme changes, the wrapper will send a notification to the user to reload the page. When a page is reloaded, it checks if the current user's theme is equal to the system's theme. If it's not, it should change the user's theme to the system's theme and reload the page again.\r\n\r\nBut the problem is that the user's global settings can only be changed on sites with \u02d9ADMIN` permission. This means that if the user reloads different page than ZeroHello, it will still try to change settings but fail. But even if it failed, the page will reload. This will result in the infinitive loop of reloads.\r\n\r\nI added checks for `ADMIN` permission. If the site doesn't have it, the user is notified to visit ZeroHello to use the new theme. And if the user reloads the page, it will still try to change settings, but reload only change is successful.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1562334765, "modified": 1563712084, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2073", "source_type": "github"}, {"topic_id": 1604067373, "title": "Support for hardware wallets", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nZeroNet currently uses a local JSON file for storing private keys and accounts. And when using Multiuser plugin, the private key should be written directly to the displayed prompt.\r\n\r\nWhile this is good for local instances, there are security concerns when using public proxies. If a proxy is malicious or compromised and you write your private key, they can steal your account and IDs. There can also be a problem with a local instance in case if the computer is compromised.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThere should be support for hardware wallets. Users should be able to log in with their hardware wallets from both local instance and public proxy. This means that all communication needs to be done with JavaScript.\r\n\r\nMost hardware wallets communicate via WebAuthn/U2F which is supported in all browsers so this should not be a problem. Some other hardware wallets require browser extension or local bridge but this is also not a problem.\r\n\r\nAnd if Ethereum cryptography is supported with #2053, there could also be support for MetaMask, WalletConnect and WalletLink.\r\n\r\nThe most important thing here is that users should be safe even if they use an account on possible compromised proxy or computer. And classic accounts with private keys should remain because not everyone has hardware wallets and private keys are still safe for local instances (except if your computer is compromised).\r\n\r\nYou can see [MyEtherWallet](https://www.myetherwallet.com/access-my-wallet) and [MyCrypto](https://mycrypto.com/account) for some popular hardware wallets that should probably be supported.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1562515357, "modified": 1569857985, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2083", "source_type": "github"}, {"topic_id": 1604067419, "title": "Add response to some commands", "body": "Add response to some ZeroFrame commands. If this is not used, and the command is called with `await zeroframe.cmdp`, it will hang forever because response won't be sent.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1564669037, "modified": 1571921882, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2116", "source_type": "github"}, {"topic_id": 1604067433, "title": "Execution order of ZeroNet plugins", "body": "In which order do ZeroNet plugins execute when registering to core classes?\r\n\r\nI tested this and it seems to be in reverse alphabetical order. Is that right?\r\n\r\n---\r\n\r\nBecause of that, I have a problem with developing the ZeroNet plugin for Ethereum Name Service. It will be called `ENS` so it will be executed somewhere in the middle. This is a problem because plugins that are executed before it won't have resolved domain so they will probably crash. This isn't a problem for NameCoin plugin because it is called `Zeroname` so it is executed first.\r\n\r\nIs it possible to fix this? A quick solution would be to rename my plugin to `ZeroENS` but there should be better handling of plugin order.\r\n\r\n---\r\n\r\nThere needs to be support to specify priority and execution order of plugins.\r\n\r\nThere need to be a few priority classes reserved for a specific type of plugin:\r\n\r\n* High - For DNS plugins and other plugins that need to be executed first\r\n* Medium - Normal plugins\r\n* Low - Network plugins that need to be executed last\r\n\r\nSo I would recommend documenting those three priority classes (maybe more if needed) and represent them with numbers:\r\n\r\n* High - 100\r\n* Medion - 50\r\n* Low - 0\r\n\r\nHere, the highest number would execute first. Plugins with the same number should be executed in reverse alphabetical order (as currently).\r\n\r\nThis would allow plugins to categorize into groups, but still allow exceptional plugins to be executed before or after majority or other plugins. Normal plugins should be using one of those three numbers but they would also be able to use other numbers if needed.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1565195573, "modified": 1572192995, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2128", "source_type": "github"}, {"topic_id": 1604067436, "title": "Create \"centralized\" profile storage", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nZeroNet has many communication sites. Although you can use most of them with ZeroID, many of them also require additional profile data, such as icon, name, description and other. Some of that data is unique for each site, but some of them could be shared.\r\n\r\nIn order to set or change some data, the user needs to change them on each site and multiple times. If not, some of the data that should be the same across multiple sites (like the name) could be different and this could be confusing.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThere needs to be some kind of \"centralized\" profile storage for data that would be accessed and used across multiple ZeroNet sites.\r\n\r\nThat storage would have to store multiple kinds of data. General data (icon, username, name, description...) would be stored in general namespaces. Some site-specific data would be stored in site namespace and other site-specific data (posts...) should be stored in the site as currently. There would also need to be support for multiple accounts and multiple IDs for each user and relations between them. Private encrypted data should also be supported.\r\n\r\nHere I don't mean a centralized site to store all data but site completely decentralized and managed by the user. The possible implementation of this would be that each user would have its own ZeroNet site dedicated to profiling storage. Other sites would them somehow know the address of that site (maybe with additional site index site) and query data from it.\r\n\r\n**Additional context**\r\n\r\nSimilar projects to this are [3Box](https://3box.io/) for Ethereum and [Gravatar](https://gravatar.com/) for clearnet.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1565254716, "modified": 1569056644, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2129", "source_type": "github"}, {"topic_id": 1604067485, "title": "Add support for ENS", "body": "I added support for Ethereum Name Service (ENS). This is part of #2049.\r\n\r\nThe plugin first tries to connect to different local and public Ethereum providers. It takes the first working provider from each category. When a domain is requested, it tries to resolve it with all providers.\r\n\r\nIt will first use the result from cache (if available and not outdated). Then will try result from the first available provider (and update cache). If no provider gets a result, the domain does not exist and 404 is returned. If a domain is in the cache (but outdated) and the provider has an error, it will use a value from the cache.\r\n\r\nSupported networks:\r\n\r\n1. Local providers\r\n2. Mainnet\r\n3. Ropsten\r\n4. Rinkeby\r\n5. Goerli\r\n\r\nNote that Web3.py requires Python 3.6 while ZeroNet also supports Python 3.4 so users of old Python version probably won't be able to use ZeroNet unless they disable this plugin. CI will also fail because of this on Python 3.4 and 3.5 tests.\r\n\r\nAlso, Web3.py is defined as an additional dependency in plugin's `requirements.txt` and it needs to be installed manually. Also, some missing Python wheels can be installed (if needed) from [here](https://www.lfd.uci.edu/~gohlke/pythonlibs/). Ideally, all additional requirements should be bundled in ZeroBundle. CI currently fails because of this because `web3` module is not installed.\r\n\r\nAlso, this depends on ethereum/web3.py#1396 and ethereum/web3.py#1411. Until then, [my temporary patch](https://github.com/filips123/web3.py/tree/patch-for-zeronet) can be used for testing.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1566229899, "modified": 1580746262, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2164", "source_type": "github"}, {"topic_id": 1604067521, "title": "Plugin for Git tracking site changes", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nEven if the ZeroNet site is distributed across multiple users, its owner still has full site access. This means that he can delete/modify the site so others won't be able to use it. Or even worse, put some changes that could be malicious but very hard to spot.\r\n\r\n**Describe the solution you'd like**\r\n\r\nZeroNet should have a plugin for tracking site changes in Git. That plugin should:\r\n\r\n* Ignore `.git` the directory from the remote site or store it on different location outside site directory (to prevent site owner from overwriting it)\r\n* Automatically commit every site change/update\r\n* Display UI options for managing repository and history (viewing the site at specific commit, comparing changes...)\r\n\r\nThen, users could just view site changes directly in UI or alternatively view them in a dedicated Git program if they are more advanced.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nA simple solution is to manually create a repository and manually commit all changes. However, this has a downside because the site owner will probably be able to overwrite local `.git` directory and it is also not so convenient to manually commit every change.\r\n\r\n**Additional context**\r\n\r\nThis is based on [ZeroTalk topic](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1567951156_14kTJXu4KZSoWSSNcGtXEijf4NqEGimc9J).\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1568119848, "modified": 1568732629, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2191", "source_type": "github"}, {"topic_id": 1604067553, "title": "Display a sponsor button in repository (py3)", "body": "I already created #2031 for this, but since default branch is now changed to `py3\u02d9, the file also needs to be present in it.\r\n\r\n(cherry picked from commit f08bea7f904fdac1a22fa39d57b359f68a776cfc)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1569938489, "modified": 1571921883, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2213", "source_type": "github"}, {"topic_id": 1604067555, "title": "Add support for DNS", "body": "This adds support for classic DNS. It closes #104 and it is part of #2049.\r\n\r\n---\r\n\r\nThe plugin uses [DNSPython](https://github.com/rthalley/dnspython) library for getting DNS responses and [DNSLink](https://github.com/filips123/DNSLinkPy) for resolving DNSLink records.\r\n\r\nIt uses a few DNS-over-HTTPS resolvers with [OpenNIC](https://www.opennic.org/) TLD support, but it can also be configured to use other resolvers or system configuration. Results are also cached in files so domains will still work if the computer is offline.\r\n\r\nThere are already a few (my) domains that use DNS plugin which you can use for testing:\r\n\r\n* `py.zeroframe.oss`\r\n* `js.zeroframe.oss`\r\n\r\n---\r\n\r\nNote that because now plugin has additional dependencies, I had to change the configuration for Travis CI, GitLab CI, Docker and Vagrant to also install dependencies from (enabled) plugins. @HelloZeroNet ZeroBundle also needs to be updated to do this.\r\n\r\nAlso, DNSPython currently doesn't support DNS-over-HTTPS so I created PR rthalley/dnspython#393 with support for it. Until it is not merged and released, we have to use my temporary branch. Then you would need to update it to use a newly created version.\r\n\r\nI also think that there this domain plugins aren't currently working if default `Zeroname` is disabled. I already reported this in #2128, when it was partly fixed (before that it was completely impossible to create domain plugin), but it appears that [there are still problems](https://github.com/HelloZeroNet/ZeroNet/issues/2128#issuecomment-523638267) if `Zeroname` is disabled. I wasn't able to test this with this plugin, but it needs to be investigated.\r\n\r\nThere are currently also some problems with CI. Tests works, but there is problem with linter (`flake8`). Because DNSPython [needs to be loaded](https://github.com/HelloZeroNet/ZeroNet/issues/104#issuecomment-534674685) after Tor monkey-patching is completed, I needed to load them from a class method. I [implemented](https://github.com/filips123/ZeroNet/blob/dns/plugins/DNS/DNSResolver.py#L32-L44) that with importing modules inside a function and adding them to `globals()`. This works normally as modules are now availible at global context. However, `flake8` doesn't like that and throws `F821 undefined name` errors. Is there any way to tell `flake8` that `dns` and `dnslink` are actually existing names?\r\n\r\n---\r\n\r\n@HelloZeroNet @imachug @ValdikSS Can you test and rewiev this?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1569942228, "modified": 1587484393, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2214", "source_type": "github"}, {"topic_id": 1604067568, "title": "Dynamically-generate static files", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nZeroNet only supports serving static site files which can add dynamic functionalities with client-side JavaScript. However, there are some cases where client-side generated files are not possible. Some of these cases can be command line browsers, programmatic HTTP requests, usage of ZeroNet as package index for PyPI, NPM, Packagist, Docker...\r\n\r\n**Describe the solution you'd like**\r\n\r\nThere should be support for files that are generated on the backend (like normal client-server architecture). This could be made using BackgroundProcessing plugin, which would be listed on specific URLs (routes) and return dynamically-generated content (like modern MVC frameworks).\r\n\r\n@HelloZeroNet @imachug What do you think?", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1571068113, "modified": 1571104827, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2223", "source_type": "github"}, {"topic_id": 1604067588, "title": "Allow NOSANDBOX in local mode", "body": "Even if Multiuser plugin is in local mode, it doesn't allow adding NOSANDBOX permission. This should be now fixed. See [this](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1571571783_144CwRj8eynTUC9DtGHaNHR3wm9P2EhuAY) for details.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1571843421, "modified": 1571921886, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2238", "source_type": "github"}, {"topic_id": 1604067600, "title": "Other installation methods are outdated", "body": "Installation methods other than ZeroBundle and source installation are outdated and only supported in Python 2 version. They should also be updated and fixed for Python 3 version.\r\n\r\nThese installation methods are currently outdated:\r\n\r\n* Arch Linux\r\n* Gentoo Linux\r\n* FreeBSD\r\n* Vagrant\r\n* Docker\r\n\r\n---\r\n\r\nIt would be also good to refactor ZeroBundle process as there are currently many (also outdated) repositories for each OS and each has a bit different (also outdated) process of bundling ZeroNet.\r\n\r\nThese bundle repositories could have some issues:\r\n\r\n* Both [HelloZeroNet/ZeroNet-mac@dist](https://github.com/HelloZeroNet/ZeroNet-mac/tree/dist) and [HelloZeroNet/ZeroNet-dist@mac](https://github.com/HelloZeroNet/ZeroNet-dist/tree/mac) are for macOS, however, one of the repository is outdated.\r\n\r\n* For Windows, there are [HelloZeroNet/ZeroNet-win@dist-win64](https://github.com/HelloZeroNet/ZeroNet-win/tree/dist-win64) which is Python 3 version and [HelloZeroNet/ZeroNet-win@dist](https://github.com/HelloZeroNet/ZeroNet-win/tree/dist) which is Python 2 version.\r\n\r\n* For Linux, there is just [HelloZeroNet/ZeroNet-linux@dist-linux64](https://github.com/HelloZeroNet/ZeroNet-linux/tree/dist-linux64) for 64-bit.\r\n\r\n* There are no macOS build scripts in [HelloZeroNet/ZeroBundle@py3](https://github.com/HelloZeroNet/ZeroBundle/tree/py3). Also, build scrits should be better separated by systems.\r\n\r\nThere are two solutions for this:\r\n\r\n* One is to have separate repositories for each bundle distribution called `ZeroBundle-OS-NAME` (like `ZeroBundle-win`) and main repository called `ZeroBundle` for bundling scrips. That separate repositiries should have separate branches for each architrecture (32-bit and 64-bit) called `dist-ARCHITECTURE` (like `dist-64`).\r\n\r\n* Another solution is to have just one repository where different systems and architectures are separated with branches called `OS-ARCHITECTURE` (like `win-64` or `linux-32`).\r\n\r\n---\r\n\r\nWhen this all is fixed, README should have this installation options:\r\n\r\n* ZeroBundle for Windows\r\n* ZeroBundle for macOS\r\n* ZeroBundle for Linux\r\n\r\n* Source installation\r\n\r\n* Whonix\r\n* Arch Linux\r\n* Gentoo Linux\r\n* FreeBSD\r\n\r\n* Vagrant\r\n* Docker", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1572022019, "modified": 1572086408, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2246", "source_type": "github"}, {"topic_id": 1604067611, "title": "Provide a way to change cache duration", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nZeroNet only supports cache for around 20 minutes and it is not possible to configure this. However, some sites are updated more frequently and some are updated less frequently.\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt should be possible to change cache duration both by instance owner (with `--cache_for` argument) and by site owner (with `content.json`).\r\n\r\nCommand argument should be default cache duration or all sites, but `content.json` entry should overwrite it. Site owners should also be able to specify cache duration for specific files and specific content types.\r\n\r\nThis would enable to cache sites that don't update often for long time and sites that update quickly for short time.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1572264159, "modified": 1572287372, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2253", "source_type": "github"}, {"topic_id": 1604067626, "title": "Update ZeroBundle while updating from UI", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, if you update ZeroNet from UI, the only thing that will change is ZeroNet source code. While this is OK if you use ZeroNet directly from source code, it is not in case if you use ZeroBundle as ZeroBundle files will stay the same.\r\n\r\nThis creates some problems:\r\n\r\n* One is already my DNS plugin with custom dependencies. In case of such a plugin, all users would have to manually update ZeroBundle with new dependencies to use it. Although I fixed this with bundling dependencies along with plugin's code, this isn't the best solution.\r\n\r\n* Another problem would be in case if there is some critical bug or security issue with distributed Python version or dependencies bundled in ZeroBundle. In case of this, all users would have to manually update ZeroBundle to fix this bug.\r\n\r\n* Additional problem which was already fixed was updating from Python 2. Because ZeroNet 0.7.0 required Python 3, the only way to update it was by manually updating ZeroBundle. If updating would be implemented in a better way, ZeroBundle would change to Python 3 automatically.\r\n\r\n**Describe the solution you'd like**\r\n\r\nInstead, you should be also updating ZeroBundle files while updating from UI. You should also change how updates work internally.\r\n\r\n* On the ZeroUpdate site (or whatever it is called), there should be one JSON file which would contain all metadata about the latest release (version, revision, description, changelog, type of changes, type of update...). ZeroNet should use that file to check if an update is available and also display details, description and changelog to users. It would be good to also store details of all previous releases.\r\n\r\n* That site should also host ZIP files which actual update. One of the files should contain classic source code and others should be for ZeroBundle for specific platforms.\r\n\r\n* Before updating, ZeroNet should check if a release you want to install (and any release newer than your current release) contains changes to ZeroBundle. If it doesn't, it should simply download source code ZIP file and install it as currently. But if the release contains changes to ZeroBundle (new dependencies, new Python version...), it should also download and install ZeroBundle ZIP file with updated dependencies/Python.\r\n\r\n* For additional security, all files should be cryptographically signed. By default, it should only trust official ZeroNet key, but it should be possible to also trust different keys or completely disable verification and change ZeroUpdate site address. This would be useful if you want to create custom ZeroNet installation with your own updated.\r\n\r\nOne of already built Python packages for updating is [PyUpdater ](https://www.pyupdater.org/). I haven't checked it too much but it also provides a plugin for additional storage locations so it should be possible to store updates on ZeroNet site. But I haven't checked it too much so I don't know if it might be easier to just create update system yourself.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1572539359, "modified": 1573393303, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2264", "source_type": "github"}, {"topic_id": 1604067902, "title": "Changing ZeroFrame license", "body": "It would be good to change and better define license of ZeroFrame library.\r\n\r\nIt is currently developed and published in this repository, so it is probably also licensed as GPLv2, just like the rest of ZeroHello. This makes it harder (actually impossible if we are strict) to use it in any site that it is licensed other than GPLv2, so most of current sites.\r\n\r\nTo fix this, you should update the license of ZeroFrame library to something like MIT. This probably won't be hard, as all commits are made by you so you won't need agreement from others. To do this, you would probably just need to add some notice as a comment to that file, and as MIT is compatible with GPLv2, this shouldn't cause problems with the rest of repository.\r\n\r\n/cc @shortcutme @imachug ", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1585316288, "modified": 1585469651, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2499", "source_type": "github"}, {"topic_id": 1604067906, "title": "Support for compressed Bitcoin vanity addresses", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nFor example, I want to have a vanity address for my site. I use some vanity generator (like VanityGen or VanitySearch) to generate it and get address and private key.\r\n\r\nBut Bitcoin has two types of classic (`1`) addresses: compressed and uncompressed. And it seems that ZeroNet only supports uncompressed version, which makes it impossible to use it with compressed vanity addresses (it is possible if you convert it to uncompressed version but this doesn't make sense because you would lose vanity prefix).\r\n\r\nFor example, let's say that I generated some compressed vanity address, for example `1FQbDerUcLDTDYe1FqXnQrgzww4DA7C9io` (it's not vanity or used on any site but just example). Its compressed private key is `L3ocupNWioTwhLgu64xcSs5mGSZEPd6LevpUMmiZ2Q8E25Pah1x9`. Based on bitaddress.org, the uncompressed version of this private key is `5KJp75PYf21fg3eb1F3BJBtq6K2QstgGnJBJXXyYGiweqq25stV`, which results in `1K5XQVPpdxAyBnocSp6GhqnfJ77TESQB7d` as uncompressed address.\r\n\r\nI can successfully use `1K5XQVPpdxAyBnocSp6GhqnfJ77TESQB7d` (uncompressed address) as address of my site. Signing it with uncompressed private key works normally.\r\n\r\nHowever, given that my vanity address is compressed, I want to to use it for site address. So I create site with \"vanity\" compressed address `1FQbDerUcLDTDYe1FqXnQrgzww4DA7C9io` in the same way as previously. But when I try to sign it, it doesn't work.\r\n\r\nWhen I try to sign it with compressed private key, it results in this signing error:\r\n\r\n```\r\nError signing content.json\r\nPrivate key invalid! Valid signers: ['1FQbDerUcLDTDYe1FqXnQrgzww4DA7C9io'], Private key address: 1CVdzwL9c2WVEkHMmkrHS9o6CD4WQaj2iR\r\n```\r\n\r\nWhen I try it with uncompressed private key, it also results in a similar error:\r\n\r\n```\r\nError signing content.json\r\nPrivate key invalid! Valid signers: ['1FQbDerUcLDTDYe1FqXnQrgzww4DA7C9io'], Private key address: 1K5XQVPpdxAyBnocSp6GhqnfJ77TESQB7d\r\n```\r\n\r\nIn this case, you can see that it detects private key's address as uncompressed version, but fails to sign it because I want to use it on compressed address.\r\n\r\n**Describe the solution you'd like**\r\n\r\nZeroNet should support both compressed and uncompressed Bitcoin addresses.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1585490844, "modified": 1585597709, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2501", "source_type": "github"}, {"topic_id": 1604067908, "title": "Add support for compressed addresses", "body": "This adds support for compressed Bitcoin site addresses and closes #2501.\r\n\r\nIt's using `sslcrypto` changes from imachug/sslcrypto#7 to detect if WIF private key has compression flag and then uses it to correctly get address and sign content.\r\n\r\nApparently `verify` does not need to be modified. Sites with compressed addresses can be viewed on older versions, but signing them does not work (I'm not sure for signing of the user's content).", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1585508811, "modified": 1586077201, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2502", "source_type": "github"}, {"topic_id": 1604067918, "title": "Use Gevent prerelease for Python 3.8", "body": "This changes Gevent for Python 3.8 from using Git archive to the latest prerelease version. This enables wheel installation on supported systems and results in faster dependency installation.\r\n\r\nHowever, a special case for Python 3.8 is still needed, because the changes were not released as 1.5 yet.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1586347705, "modified": 1586587791, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2510", "source_type": "github"}, {"topic_id": 1604067932, "title": "Remove Gevent dependency condition", "body": "As stable Gevent 1.5.0 with support for Python 3.8 was recently released, there is no need for special condition which installs custom Gevent version depending on Python version.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1586590396, "modified": 1586591463, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/2519", "source_type": "github"}, {"topic_id": 1604067958, "title": "Compatibility of other plugins (UiPluginManager) with MergerSite", "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nBased on MergerSite's source code, the plugin only modified some of WebSocket actions to correctly resolve `merged-` paths and changes a few other (unrelated to this) methods for correct handling of paths and site updates.\r\n\r\nHowever, UiPluginManager uses `site.storage.loadJson` and to check plugin info and directly copies plugin from `inner_path`. This makes it impossible to correctly load plugin from another merged site. Loading plugins in a such way would be very useful in (currently unexisting) \"plugin store\" sites, where each plugin could be hosted on separate merged site.\r\n\r\nAdditionally, I'm also developing my own plugin that would similarly need to access files from merged sites. More specifically, it would need to resolve `inner_path` (if it is `merged-` path), separate it into site address and actual `inner_path` and then use those two variables for accessing/working with files.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI think that a good way of doing this would be to somehow expose [`checkMergerPath`](https://github.com/HelloZeroNet/ZeroNet/blob/py3/plugins/MergerSite/MergerSitePlugin.py#L31-L52) from MergerSite plugin to other plugins. Then, both UiPluginManager and my plugin could use that function to site address and `inner_path` from it and use them for handling files.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1587748123, "modified": 1587981678, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2540", "source_type": "github"}]}