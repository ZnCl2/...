{"cert_user_id": "kseistrup@github", "next_topic_id": 8, "topic": [{"topic_id": 1604064913, "title": "IPv6", "body": "Please support IPv6.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1441533546, "modified": 1548913964, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148", "source_type": "github"}, {"topic_id": 1604064916, "title": "Python3", "body": "Please support Python3.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1441533687, "modified": 1561665998, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149", "source_type": "github"}, {"topic_id": 1604064919, "title": "Please reap child processes", "body": "When calling the external `openssl` command using `subprocess.Popen()` the childprocesses are never reaped, thus leaving zombies behind.  After having read the output, a call to the childprocess's `.wait()` method should be called. \n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1441542211, "modified": 1441574020, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/151", "source_type": "github"}, {"topic_id": 1604064921, "title": "Reap child processes", "body": "Previously child processes were not reaped, leaving zombies behind.\nNow each child process's `.wait()` method is called before proceeding.\n\nCloses #151.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1441543492, "modified": 1441574025, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/152", "source_type": "github"}, {"topic_id": 1604065179, "title": "ZeroNet fails on PyPy", "body": "TL;DR: It's almost there, I believe (PyPy 4.0.1 on Linux):\n\n``` sh\n$ # Get a fresh copy of ZeroNet\n$ git clone https://github.com/HelloZeroNet/ZeroNet\n$ cd ZeroNet\n$ # Install the msgpack-python and gevent modules\n$ # (We already had a working copy of pip and virtualenv)\n$ /opt/pypy/bin/pip install -r requirements.txt\n$ # Create a virtual environment\n$ /opt/pypy/bin/virtualenv venv\n$ source venv/bin/activate\n(venv) $ python zeronet.py\n- Starting ZeroNet...\n[18:36:04] - OpenSSL loaded, version: 01000207F\n[18:36:05] - Version: 0.3.6 r989, Python 2.7.10 (5f8302b8bf9f, Mar 04 2016, 08:29:09)\n[PyPy 4.0.1 with GCC 5.3.0], Gevent: 1.1.0\n[18:36:05] - Creating FileServer....\n[18:36:05] TorManager Tor controller connect error: error: [Errno 111] Connection refused in TorManager.py line 151 > _socket2.py line 228\n[18:36:05] - Creating UiServer....\n[18:36:05] Site:1Name2..hM9F Content.json not exist: data/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F/content.json\n[18:36:05] - Removing old SSL certs...\n[18:36:05] - Starting servers....\n[18:36:05] Ui.UiServer --------------------------------------\n[18:36:05] Ui.UiServer Web interface: http://127.0.0.1:43110/\n[18:36:05] Ui.UiServer --------------------------------------\n[18:36:05] Site:1Name2..hM9F Content.json not exist: data/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F/content.json\n[18:36:06] FileServer Checking port 15441 using portchecker.co...\n[18:36:07] FileServer [OK :)] Port open: Port 15441 is open.\n[18:36:10] Ui.UiServer Wrapper key not found: 2948bfa27342bcc0fdabed5de2b53b9eafbce2a2ae5e7db650ab4d8c5bde9c28\n[18:36:22] Db:TestDb Table keyvalue outdated...version: False need: 1, rebuilding...\n[18:36:22] Db:TestDb Table json outdated...version: 0 need: 1, rebuilding...\n[18:36:22] Db:TestDb Table test outdated...version: 0 need: 1426195822, rebuilding...\n[18:36:27] - UiWSGIHandler error: OperationalError: database is locked in UiServer.py line 39 > pywsgi.py line 871 > pywsgi.py line 860 > StatsPlugin.py line 547 > Db.py line 119 > Db.py line 89 > Db.py line 60 > DbCursor.py line 53 > _sqlite3.py line 700 > _sqlite3.py line 857 > _sqlite3.py line 795 > _sqlite3.py line 181 > _sqlite3.py line 1026\n```\n\nIn addition to the locked database as seen above, I also got an `msgpack` exception that I didn't catch when I ran the [benchmark](http://127.0.0.1:43110/Benchmark).\n\nWill try again when PyPy 5.0 reaches ArchLinux.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1457711019, "modified": 1585015337, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351", "source_type": "github"}, {"topic_id": 1604065421, "title": "Please sign releases", "body": "It would be highly desirable if the `.zip` and `.tar.gz` files found on  the [Releases page](https://github.com/HelloZeroNet/ZeroNet/releases) were signed using GPG/PGP so that people can verify that the blobs haven't been tampered with.\n\nEven  [signed commits](https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work) could be useful.\n\nAs a minimum, please sha256sum the release files.\n\nCheers.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1471621393, "modified": 1496314782, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/540", "source_type": "github"}, {"topic_id": 1604065645, "title": "ImportError: No module named coros (gevent)", "body": "Just upgraded the `gevent` module from python2-gevent 1.1.2 to 1.2.0 and now Zeronet won't start:\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"zeronet.py\", line 18, in main\r\n    main.start()\r\n  File \"\u2026/zeronet/src/main.py\", line 450, in start\r\n    actions.call(config.action, action_kwargs)\r\n  File \"\u2026/zeronet/src/main.py\", line 129, in call\r\n    func(**kwargs)\r\n  File \"\u2026/zeronet/src/main.py\", line 134, in main\r\n    from File import FileServer\r\n  File \"/usr/lib/python2.7/site-packages/gevent/builtins.py\", line 93, in __import__\r\n    result = _import(*args, **kwargs)\r\n  File \"\u2026/zeronet/src/File/__init__.py\", line 1, in <module>\r\n    from FileServer import FileServer\r\n  File \"/usr/lib/python2.7/site-packages/gevent/builtins.py\", line 93, in __import__\r\n    result = _import(*args, **kwargs)\r\n  File \"\u2026/zeronet/src/File/FileServer.py\", line 14, in <module>\r\n    from Connection import ConnectionServer\r\n  File \"/usr/lib/python2.7/site-packages/gevent/builtins.py\", line 93, in __import__\r\n    result = _import(*args, **kwargs)\r\n  File \"\u2026/zeronet/src/Connection/__init__.py\", line 1, in <module>\r\n    from ConnectionServer import ConnectionServer\r\n  File \"/usr/lib/python2.7/site-packages/gevent/builtins.py\", line 93, in __import__\r\n    result = _import(*args, **kwargs)\r\n  File \"\u2026/zeronet/src/Connection/ConnectionServer.py\", line 15, in <module>\r\n    from Tor import TorManager\r\n  File \"/usr/lib/python2.7/site-packages/gevent/builtins.py\", line 93, in __import__\r\n    result = _import(*args, **kwargs)\r\n  File \"\u2026/zeronet/src/Tor/__init__.py\", line 1, in <module>\r\n    from TorManager import TorManager\r\n  File \"/usr/lib/python2.7/site-packages/gevent/builtins.py\", line 93, in __import__\r\n    result = _import(*args, **kwargs)\r\n  File \"\u2026/zeronet/src/Tor/TorManager.py\", line 17, in <module>\r\n    from gevent.coros import RLock\r\n  File \"/usr/lib/python2.7/site-packages/gevent/builtins.py\", line 93, in __import__\r\n    result = _import(*args, **kwargs)\r\nImportError: No module named coros\r\n```\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1482821136, "modified": 1494850384, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/720", "source_type": "github"}], "next_comment_id": 19, "comment": {"1604064913_mirrored_kseistrup_github": [{"comment_id": 1, "body": "[IAB Statement on IPv6](https://www.iab.org/documents/correspondence-reports-documents/2016-2/iab-statement-on-ipv6/) (7 November 2016):\n\n> We recommend that existing standards be reviewed to ensure they will work with IPv6, and use IPv6 examples.\n", "added": 1478589265, "modified": 1478589301, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-259097819", "source_type": "github"}, {"comment_id": 2, "body": "On Linux, binding to IPv6 (only) will allow the application to receive incoming connections on IPv6 _and_ IPv4.\r\n\r\n```sh\r\n$ sudo netstat -anp | grep ^tcp6 | tail -2\r\ntcp6       0      0 192.168.1.50:15441      206.251.89.121:52549    ESTABLISHED 29569/zeronetd\r\ntcp6       0      0 2001:570:28:4b5:::15441 2001:19f0:4400:75:34996 ESTABLISHED 29569/zeronetd\r\n```\r\n", "added": 1548068508, "modified": 1548068508, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-456084001", "source_type": "github"}, {"comment_id": 3, "body": "Yggdrasil and cjdns runs fine side by side. I'm not sure how to make ZeroNet use them, though.\r\n", "added": 1548301841, "modified": 1548301841, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-457086915", "source_type": "github"}, {"comment_id": 4, "body": "@DaniellMesquita,\r\n\r\n> Why I need to provide an fixed IP address? That makes it centralized\r\n\r\nBecause otherwise peers won't know how to connect to your node and peer with it. If you didn't have any peers, your node would be just like a remote island that nobody knows exists. You need at least one peer.\r\n", "added": 1548302066, "modified": 1548302066, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/148#issuecomment-457087641", "source_type": "github"}], "1604064916_mirrored_kseistrup_github": [{"comment_id": 5, "body": "(For certain values of \u201cpopular\u201d, yes. ArchLinux has Python3 as its default.)\n\nI agree, I just wanted to make sure there was a formal issue concerning this.\n", "added": 1441624754, "modified": 1441624754, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149#issuecomment-138310168", "source_type": "github"}, {"comment_id": 6, "body": "@DoWhileGeek cool! :+1: \n", "added": 1456894210, "modified": 1456894210, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/149#issuecomment-191115733", "source_type": "github"}], "1604065074_mirrored_ghost_github": [{"comment_id": 7, "body": "I have successfully imported a ZeroNet private key into my bitcoin instance using the `importprivkey` RPC call. It sould work in the GUI client also.\n", "added": 1457710541, "modified": 1457710541, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/263#issuecomment-195491343", "source_type": "github"}], "1604065139_mirrored_iShift_github": [{"comment_id": 8, "body": "@HelloZeroNet you can only change it from python if you haven't already reached the upper limit (and it seems 1024 was the limit on my box).\n\nI added the following lines to `/etc/security/limits.conf`:\n\n``` sh\n*               hard    nofile          8192\n*               soft    nofile          4096\n```\n\nand\n\n``` ini\nLimitNOFILE=8192\n```\n\nto the `[Service]` section of the `zeronet.service` file.\n", "added": 1457211818, "modified": 1457211818, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/320#issuecomment-192763097", "source_type": "github"}], "1604065179_mirrored_kseistrup_github": [{"comment_id": 9, "body": "Update: ZeroNet also fails on PyPy 5.0. However the benchmarks on PyPy 5.0 (providing Python 2.7.10) compared with those from vanilla Python 2.7.11 on the same machine are interesting:\n\n### PyPy 5.0\n\n```\nBenchmarking ZeroNet 0.3.6 (rev989) Python 2.7.10 (246c9cf22037, Mar 11 2016, 12:05:36) [PyPy 5.0.0 with GCC 5.3.0] on: linux2...\n\nCryptBitcoin:\n- hdPrivatekey x 10..........0.225s [x3.11: WOW]\n- sign x 10..........0.085s [x4.10: Insane!!]\n- openssl verify x 100..........0.359s [x1.03: OK]\n- pure-python verify x 10..........0.301s [x5.32: Insane!!]\n\nCryptHash:\n- sha256 5M x 10..........0.305s [x1.96: Fast]\n- sha512 5M x 10..........0.247s [x2.43: Fast]\n- os.urandom(256) x 100 000..........1.913s [x0.34: Ehh]\n\nMsgpack:\n- pack 5K x 10 000..........\n! Error: '\\x84\\xa3int\\xce@\\x00\\x00\\x00\\xa5float\\xcb@\\xc8\\x1c\\xd6\\xe61\\xf8\\xa1\\xa4text\\xda\\x14\\x00hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello\\xa6binary\\xda\\x01\\x00fqv\\xf0\\x1a\"e\\x10,\\xbe\\x9cT\\x9e(\\xa5]u\\x072C\\x8c\\x15\\xa2\\xa8\\x93Sw)\\x19\\x02\\xdd\\t\\xfb\\xf67\\x88\\xd9\\xee\\x86\\xa1\\xe4\\xb6,\\xc6\\x14\\xbb\\xd7$z\\x1d\\xb2\\xda\\x85\\xf5\\xa0\\x97^\\x01*\\xaf\\xd3\\xb0!\\xb7\\x9d\\xea\\x89\\xbbh8\\xa1\"\\xa7]e(@\\xa2\\xa5g\\xb7[\\xae\\x8eE\\xc2\\x9fL\\xb6s\\x19\\x19\\r\\xc8\\x04S\\xd0N\\xe4]?/\\x01\\xea\\xf6\\xec\\xd1\\xb3\\xc2\\x91\\x86\\xd7\\xf4K\\xdf\\xc2lV\\xf4\\xe8\\x80\\xfc\\x8ep\\xbb\\x82\\xb3\\x86\\x98F\\x1c\\xecS\\xc8\\x15\\xcf\\xdc\\xf1\\xed\\xfc\\xd8\\x18r\\xf9\\x80\\x0f\\xfa\\x8cO\\x97(\\x0b]\\xf1\\xdd\\r\\xe7\\xbf\\xed\\x06\\xbd\\x1b?\\xc5\\xa0\\xd7a\\x82\\xf3\\xa8\\xe6@\\xf3\\ri\\xa1\\xb10\\xf6\\xd4W\\xbc\\x86\\x1a\\xbb\\xfd\\x94!bS\\xdb\\xaeM\\x92\\x00#\\x0b\\xf7\\xad\\xe9\\xc2\\x8e\\x86\\xbfi![%\\xd31]\\xc6\\xfc2\\xc9\\xda\\xc6v\\x82P\\xcc\\xa9\\xea\\xb9\\xff\\xf6\\xc8\\x17iD\\xcf\\xf3\\xeeI\\x04\\xe9\\xa1\\x19\\xbb\\x01\\x92\\xf5nn4K\\xf8\\xbb\\xc6\\x17e>\\xa7 \\xbbv'\n!=\n'\\x84\\xa3int\\xce@\\x00\\x00\\x00\\xa4text\\xda\\x14\\x00hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello\\xa5float\\xcb@\\xc8\\x1c\\xd6\\xe61\\xf8\\xa1\\xa6binary\\xda\\x01\\x00fqv\\xf0\\x1a\"e\\x10,\\xbe\\x9cT\\x9e(\\xa5]u\\x072C\\x8c\\x15\\xa2\\xa8\\x93Sw)\\x19\\x02\\xdd\\t\\xfb\\xf67\\x88\\xd9\\xee\\x86\\xa1\\xe4\\xb6,\\xc6\\x14\\xbb\\xd7$z\\x1d\\xb2\\xda\\x85\\xf5\\xa0\\x97^\\x01*\\xaf\\xd3\\xb0!\\xb7\\x9d\\xea\\x89\\xbbh8\\xa1\"\\xa7]e(@\\xa2\\xa5g\\xb7[\\xae\\x8eE\\xc2\\x9fL\\xb6s\\x19\\x19\\r\\xc8\\x04S\\xd0N\\xe4]?/\\x01\\xea\\xf6\\xec\\xd1\\xb3\\xc2\\x91\\x86\\xd7\\xf4K\\xdf\\xc2lV\\xf4\\xe8\\x80\\xfc\\x8ep\\xbb\\x82\\xb3\\x86\\x98F\\x1c\\xecS\\xc8\\x15\\xcf\\xdc\\xf1\\xed\\xfc\\xd8\\x18r\\xf9\\x80\\x0f\\xfa\\x8cO\\x97(\\x0b]\\xf1\\xdd\\r\\xe7\\xbf\\xed\\x06\\xbd\\x1b?\\xc5\\xa0\\xd7a\\x82\\xf3\\xa8\\xe6@\\xf3\\ri\\xa1\\xb10\\xf6\\xd4W\\xbc\\x86\\x1a\\xbb\\xfd\\x94!bS\\xdb\\xaeM\\x92\\x00#\\x0b\\xf7\\xad\\xe9\\xc2\\x8e\\x86\\xbfi![%\\xd31]\\xc6\\xfc2\\xc9\\xda\\xc6v\\x82P\\xcc\\xa9\\xea\\xb9\\xff\\xf6\\xc8\\x17iD\\xcf\\xf3\\xeeI\\x04\\xe9\\xa1\\x19\\xbb\\x01\\x92\\xf5nn4K\\xf8\\xbb\\xc6\\x17e>\\xa7 \\xbbv'\n0.143s [x5.46: Insane!!]\n- unpack 5K x 10 000..........0.161s [x7.46: Insane!!]\n- streaming unpack 5K x 10 000..........0.087s [x16.16: Insane!!]\n\nDb:\n- Open x 10\n! Error: cannot commit transaction - SQL statements in progress\n0.012s [x10.81: Insane!!]\n```\n\n### Python 2.7.11\n\n```\nBenchmarking ZeroNet 0.3.6 (rev989) Python 2.7.11 (default, Mar 3 2016, 11:00:04) [GCC 5.3.0] on: linux2...\n\nCryptBitcoin:\n- hdPrivatekey x 10..........0.267s [x2.62: WOW]\n- sign x 10..........0.171s [x2.05: Fast]\n- openssl verify x 100..........0.157s [x2.36: Fast]\n- pure-python verify x 10..........0.676s [x2.37: Fast]\n\nCryptHash:\n- sha256 5M x 10..........0.630s [x0.95: OK]\n- sha512 5M x 10..........0.372s [x1.61: Fine]\n- os.urandom(256) x 100 000..........2.400s [x0.27: Sloooow]\n\nMsgpack:\n- pack 5K x 10 000..........0.569s [x1.37: Fine]\n- unpack 5K x 10 000..........0.940s [x1.28: Fine]\n- streaming unpack 5K x 10 000..........0.821s [x1.70: Fast]\n\nDb:\n- Open x 10..........0.137s [x0.95: OK]\n- Insert x 10 x 1000..........1.476s [x0.68: Goodish]\n- Buffered insert x 100 x 100..........1.295s [x1.00: OK]\n- Total rows in db: 20000\n- Indexed query x 1000..........0.193s [x1.29: Fine]\n- Not indexed query x 100..........0.544s [x1.10: OK]\n- Like query x 100..........0.956s [x1.88: Fast]\n\nDone. Total: 9.86s\n```\n", "added": 1457774395, "modified": 1457774395, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-195728690", "source_type": "github"}, {"comment_id": 10, "body": "PS: The vanilla benchmarks have been seen to take from 7.5 seconds to ~12 seconds on the same machine, so don't read too much from the absolute numbers.\n", "added": 1457774556, "modified": 1457774556, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-195728881", "source_type": "github"}, {"comment_id": 11, "body": "PyPy 5.4.0 (Python 2.7.10) is out.\n\nZeroNet starts up well and sites like ZeroHello, ZeroName and ZeroBoard, as well as static sites) works fine. However, visit sites like ZeroTalk, ZeroBlog and ZeroMe, and you get a ton of SQL errors.\n\nLet's call it status quo.\n", "added": 1472995315, "modified": 1472995315, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-244612634", "source_type": "github"}, {"comment_id": 12, "body": "PyPy 5.6.0 (Python 2.7.12) is out.\n\nThis is far worse than with previous versions of PyPy: ZeroNet can't even start:\n\n``` pytb\n[22:34:51] - OpenSSL loaded, version: 0100020AF\n[22:34:51] - Version: 0.5.0 r1704, Python 2.7.12 (aff251e54385, Nov 12 2016, 22:03:47)\n[PyPy 5.6.0 with GCC 6.2.1 20160830], Gevent: 1.1.2\n[22:34:51] Db:ContentDb Table keyvalue outdated...version: False need: 3, rebuilding...\n[22:34:51] Db:ContentDb Table json outdated...version: 0 need: 3, rebuilding...\n[22:34:51] Db:ContentDb Table site outdated...version: 0 need: 1, rebuilding...\n[22:34:51] Db:ContentDb Table content outdated...version: 0 need: 1, rebuilding...\n[22:34:51] Db:ContentDb Table file_optional outdated...version: 0 need: 11, rebuilding...\n[22:34:51] Db:ContentDb Table peer outdated...version: 0 need: 1, rebuilding...\nTraceback (most recent call last):\n  File \"zeronet.py\", line 16, in main\n    main.start()\n  File \"src/main.py\", line 429, in start\n    actions.call(config.action, action_kwargs)\n  File \"src/main.py\", line 129, in call\n    func(**kwargs)\n  File \"src/main.py\", line 134, in main\n    from File import FileServer\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/File/__init__.py\", line 1, in <module>\n    from FileServer import FileServer\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/File/FileServer.py\", line 12, in <module>\n    from Site import SiteManager\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/Site/__init__.py\", line 1, in <module>\n    from Site import Site\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/Site/Site.py\", line 24, in <module>\n    from Content import ContentManager\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/Content/__init__.py\", line 1, in <module>\n    from ContentManager import ContentManager\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/Content/ContentManager.py\", line 15, in <module>\n    from ContentDbDict import ContentDbDict\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/Content/ContentDbDict.py\", line 4, in <module>\n    import ContentDb\n  File \"/tmp/pypy2/site-packages/gevent/builtins.py\", line 93, in __import__\n    result = _import(*args, **kwargs)\n  File \"src/Content/ContentDb.py\", line 137, in <module>\n    getContentDb()  # Pre-connect to default one\n  File \"src/Content/ContentDb.py\", line 134, in getContentDb\n    content_dbs[path] = ContentDb(path)\n  File \"plugins/PeerDb/PeerDbPlugin.py\", line 14, in __init__\n    super(ContentDbPlugin, self).__init__(*args, **kwargs)\n  File \"plugins/OptionalManager/ContentDbPlugin.py\", line 28, in __init__\n    super(ContentDbPlugin, self).__init__(*args, **kwargs)\n  File \"src/Content/ContentDb.py\", line 14, in __init__\n    self.checkTables()\n  File \"plugins/OptionalManager/ContentDbPlugin.py\", line 67, in checkTables\n    changed_tables = super(ContentDbPlugin, self).checkTables()\n  File \"src/Db/Db.py\", line 213, in checkTables\n    cur.execute(\"COMMIT\")\n  File \"src/Db/DbCursor.py\", line 53, in execute\n    res = self.cursor.execute(query)\n  File \"/opt/pypy/lib_pypy/_sqlite3.py\", line 700, in wrapper\n    return func(self, *args, **kwargs)\n  File \"/opt/pypy/lib_pypy/_sqlite3.py\", line 857, in execute\n    return self.__execute(False, sql, [params])\n  File \"/opt/pypy/lib_pypy/_sqlite3.py\", line 830, in __execute\n    raise self.__connection._get_exception(ret)\nOperationalError: cannot commit transaction - SQL statements in progress\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/opt/pypy/lib-python/2.7/atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"plugins/PeerDb/PeerDbPlugin.py\", line 84, in saveAllPeers\n    for site in self.sites.values():\nAttributeError: 'ContentDb' object has no attribute 'sites'\nException AttributeError: AttributeError(\"'ContentDb' object has no attribute 'sites'\",) in sys.exitfunc == <function _run_exitfuncs at 0x00007f7ce3f70980> ignored\n- Starting ZeroNet...\n[EXIT]\n```\n", "added": 1479062339, "modified": 1479062339, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-260214829", "source_type": "github"}, {"comment_id": 13, "body": "@border0464111,\r\n\r\nThe [PyPy compatibility page](http://pypy.org/compat.html) reads:\r\n\r\n> Please just check if it imports. If it imports, it should work.\r\n\r\nAnd `import sqlite3` yields no errors. Also:\r\n\r\n> Supported, but written in pure Python:\r\n> * [\u2026], sqlite3, [\u2026]\r\n\r\nSo I vote for keeping it open.\r\n\r\n\r\n", "added": 1497450718, "modified": 1497450718, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/351#issuecomment-308503117", "source_type": "github"}], "1604065263_mirrored_TheNain38_github": [{"comment_id": 14, "body": "Actually, you can play with more RPC parameters in `~/.namecoin/namecoin.conf`:\n\n```\n  -rpcconnect=<ip>\n       Send commands to node running on <ip> (default: 127.0.0.1)\n\n  -rpcport=<port>\n       Connect to JSON-RPC on <port> (default: 8336 or testnet: 18336)\n\n  -rpcwait\n       Wait for RPC server to start\n\n  -rpcuser=<user>\n       Username for JSON-RPC connections\n\n  -rpcpassword=<pw>\n       Password for JSON-RPC connections\n\n  -rpcclienttimeout=<n>\n       Timeout during HTTP requests (default: 900)\n```\n\nso perhaps it would be prudent to take all of them into consideration, e.g., something like this:\n\n``` python\ndef init_rpc(config):\n    \"\"\"Initialize Namecoin RPC\"\"\"\n    rpcdata = {\n        'config': config,\n        'connect': '127.0.0.1',\n        'port': '8336',\n        'user': 'PLACEHOLDER',\n        'password': 'PLACEHOLDER'\n        'clienttimeout': '900',\n    }\n    try:\n        from bitcoinrpc.authproxy import AuthServiceProxy\n        fptr = open(rpcdata['config'], 'r')\n        lines = fptr.readlines()\n        fptr.close()\n    except:\n        return None  # Or take some other appropriate action\n\n    for line in lines:\n        if not line.startswith('rpc'):\n            continue\n        keyval = line.split(None, 1)[0]\n        (key, val) = keyval.split('=', 1)\n        if not key or not val:\n            continue\n        rpcdata[key[3:]] = val\n\n    url = 'http://%(user)s:%(password)s@%(connect)s:%(port)s' % rpcdata\n\n    return AuthServiceProxy(url, timeout=int(rpcdata['clienttimeout']))\n```\n\nCheers!\n", "added": 1458484960, "modified": 1458485054, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/385#issuecomment-198971434", "source_type": "github"}, {"comment_id": 15, "body": "Please note that I haven't tested the actual code, it was just taken from off top of my head. Specifically, I'm used to coding in Python 3, and I'm unsure if the example above will run without errors. I did try to avoid `with open(config, 'r') as fptr:` because I can't remember when the with-statement was introduced. Also, I'm unsure if there was a `.startswith()` method on string objects in Python 2. But such things should be easy to spot for people who are used to Python 2.\n", "added": 1458488238, "modified": 1458488313, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/385#issuecomment-198984797", "source_type": "github"}, {"comment_id": 16, "body": "Cool! :+1: \n", "added": 1458488431, "modified": 1458488431, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/385#issuecomment-198985324", "source_type": "github"}], "1604067608_mirrored_ZeroNetTickBot_github": [{"comment_id": 17, "body": "GPLv3+ and Lax\r\n", "added": 1572815710, "modified": 1572815710, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549194598", "source_type": "github"}, {"comment_id": 18, "body": "GPLv3+\r\n", "added": 1572859812, "modified": 1572859812, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2273#issuecomment-549332417", "source_type": "github"}]}}