{"cert_user_id": "MuxZeroNet@github", "next_comment_id": 151, "comment": {"1604064736_mirrored_HelloZeroNet_github": [{"comment_id": 1, "body": "I believe ZeroNet protocol does a better job protecting integrity and privacy than the original BitTorrent protocol. ZeroNet has the potential to be a more resilient file sharing network.\r\n\r\n|        | ZeroNet | BitTorrent |\r\n| ------ | ------- | ---------- |\r\n| Digest | SHA-512/256 (the truncated version) | SHA-1 (vulnerable to [BitErrant attack](https://biterrant.io/)) |\r\n| Signature | secp256k1 (Bitcoin) | ? |\r\n| Encryption | TLS, on by default, unless OpenSSL is gone | Various, on by deault in many clients |\r\n| Link | Bitcoin address, [ripemd160(sha256())](https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses) | Magnet URI, SHA-1 |\r\n| File List | Signed `content.json` | BEncoded, not signed |\r\n\r\nCurrent blocks:\r\n- Tor people will blame us for abusing their bandwidth.\r\n- No I2P support yet.\r\n- No DHT yet, but many I2P torrent clients do not implement DHT either.", "added": 1488934673, "modified": 1488934673, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/7#issuecomment-284940003", "source_type": "github"}, {"comment_id": 2, "body": "> When big file support will come out ?\n\nHello there!\n\nBig file feature requires more research and more frequent discussion. Instead of asking this, do you think you can contribute any ideas regarding any of the bullet points below? Write another comment and we (the community) will evaluate your thoughts.\n\n- Hashing, integrity\nHow can we hash the big files in such a way that small segments can be verified efficiently?\n\n- Routing, data availability\nHow can we find the file in the first place?\nHow can we encourage people to seed?\nNode responsibilities? Blacklisting free-riders? Can I cut my files and put it away after the moment it is finished? What about caring about the others?\n\n- Usability, caching\nHow can we cache the file? __zncache__/ ?\nCan I use evil AJAX requests to download the whole Internet to your computer and blow up your hard drive?\nWhat kind of user interaction must take place?\n\n", "added": 1498517083, "modified": 1498517083, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/7#issuecomment-311229019", "source_type": "github"}, {"comment_id": 3, "body": "Big file support demo at ZeroNet Meetup 2017: https://www.youtube.com/watch?v=U01L7GS30MA&t=820s", "added": 1506797102, "modified": 1506797102, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/7#issuecomment-333338021", "source_type": "github"}], "1604064781_mirrored_komachi_github": [{"comment_id": 4, "body": "I assume that i2p.socket fully works with gevent. The remaining problem is that ZeroNet creates too much I2P hidden services and i2p will be overloaded. I am thinking about randomly dividing the list of sites in to at most 50 subgroups of variable lengths in order to reduce the number of hidden services used.", "added": 1488927403, "modified": 1488927403, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/45#issuecomment-284922093", "source_type": "github"}, {"comment_id": 5, "body": "Thank you very much. Do you think a even simpler SAM enabled socket module is worth integrating into ZeroNet? Just like what TorManager does: it has a simple control socket implementation plus Stem Control Library support.\r\n\r\n|                        | TorManager | I2PManager |\r\n| --------------------- | ---------- | ---------- |\r\n| Simple Implementation | \u2713          | ?          |\r\n| Control Library       | \u2713 stem          | \u2713 i2p.socket        |", "added": 1489043027, "modified": 1489043093, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/45#issuecomment-285308584", "source_type": "github"}, {"comment_id": 6, "body": "[Onion pooling](https://bit.surf:43110/Blog.Zeronetwork.bit/?Post:108:New+version+0.5.4) has been implemented at this moment.", "added": 1492449183, "modified": 1492449183, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/45#issuecomment-294577893", "source_type": "github"}], "1604064808_mirrored_HelloZeroNet_github": [{"comment_id": 7, "body": "> Handshake\r\n\r\nNeeds more documentation on Handshake and GetHashfield. #987", "added": 1497927876, "modified": 1497927876, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/56#issuecomment-309653555", "source_type": "github"}], "1604064810_mirrored_HelloZeroNet_github": [{"comment_id": 8, "body": "I talked with Shortcutme with this issue. Here are the questions he is trying to find an answer to.\r\n\r\n> Some months ago I did some experiments and checked out some [DHT] libraries, but there are still lots of questions left.\r\n\r\n- Can it reliably work over Tor (or over TCP at all)?\r\n- DHT routing in ZeroNet must support .onion and .i2p addresses.\r\n- Should we use an existing DHT implementation (eg. Mainline, OpenDHT) or create a new one?\r\n- Is there any alternative to DHT that worth checking out?\r\n\r\nHere are my questions:\r\n\r\n- Nodes in the network hosts their own sets of sites and optional files, based on user interests. We still want to choose what to store and what not to store. There is no strictly defined _peer responsibilities_. Should me adjust current DHT implementations to reflect the current circumstances of the ZeroNet network?\r\n", "added": 1497925140, "modified": 1497925140, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/57#issuecomment-309647462", "source_type": "github"}, {"comment_id": 9, "body": "Here is my own implementation of the Pastry DHT algorithm. https://github.com/MuxZeroNet/pastry\r\n\r\nPastry basics:\r\n- [Dynamic Distributed Hash Tables.](https://www.youtube.com/watch?v=p8iugvHeGcg)\r\n- [Selected DHT algorithms: Chord and Pastry.](https://www.cs.tut.fi/kurssit/ELT-53206/lecture03.pdf) pp. 23-34.\r\n- [Distributed Hash Tables: An Overview.](https://www.cs.cmu.edu/~ashu/talks/DHT.pdf) pp. 14-16.\r\n\r\nJoining, leaving and repairing the network:\r\n- [Pastry, Tapestry and Kademlia.](https://heim.ifi.uio.no/michawe/teaching/p2p-ws08/p2p-5-6.pdf) p. 5.\r\n- [Structured P2P Networks: Pastry and Tapestry.](http://inst.eecs.berkeley.edu/~cs268/sp03/notes/Lecture22.pdf) p. 5\r\n\r\nThe packets you may need to provide:\r\n1. A packet that implements this interface: `has_value, other_nodes = send_dht_request(peer, key)`\r\n2. A \"gossip\" packet that allows nodes to exchange parts of the routing table or leaf set.\r\n\r\n_Edit: Removed \"Toy DHT.\" Added Pastry, which is not a toy._", "added": 1506797316, "modified": 1515635511, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/57#issuecomment-333338194", "source_type": "github"}, {"comment_id": 10, "body": "We got a new problem:\r\n\r\n> Tamas Kocsis wrote:\r\n> The handshake and the encryption has pretty big overhead\r\n> so probably it would be more efficient if we would use a separate UDP port\r\n\r\nYes. In practice, latency is what makes DHT protocols slow, which is one of the reasons DHT protocols run over datagram, but rarely over TCP streams.\r\n\r\nIn Tor, you have to use TCP streams, because this is how Tor works.\r\n\r\nI2P SAM provides datagram API. Running DHT over I2P has \"encryption overhead\" and has observable latency, but it is better than nothing. DHT has been used by I2PSnark and BiglyBT for torrents.\r\n\r\n> Do you think if the DHT should be part of ZeroNet protocol?\r\n> [use the protocol provided by] one of the already existent [libraries]. (maybe libp2p or any other dht lib)\r\n\r\nI am more on the \"implement a DHT that fits ZeroNet's needs\" side, while I am not familiar with the API `libp2p` or any DHT library provides.\r\n\r\nEven if you will be using a DHT library, you should always think about how to write the protocol docs. By using proper means of abstraction, the less you leak implementation details in the specification, the more flexible the protocol is. You really don't want to make future developers who will be implementing ZeroNet in another programming language get stuck on a particular library.\r\n\r\n", "added": 1515636619, "modified": 1515636619, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/57#issuecomment-356827254", "source_type": "github"}], "1604064816_mirrored_HelloZeroNet_github": [{"comment_id": 11, "body": "Most of them have been implemented. Don't forget to update this issue.", "added": 1497927577, "modified": 1497927577, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/59#issuecomment-309652844", "source_type": "github"}], "1604064859_mirrored_HelloZeroNet_github": [{"comment_id": 12, "body": "Hi there. Any progress on this? This can be used in public gateways.", "added": 1488927975, "modified": 1488927975, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/80#issuecomment-284923668", "source_type": "github"}], "1604065043_mirrored_splix_github": [{"comment_id": 13, "body": "It is important to detect and avoid type errors in parts responsible for loading `content.json`. Here is a related case in which type errors are discovered in FileServer code: [MuxZeroNet/Fuzzing/Fuzzing Log/ Round 1/README.md](https://github.com/MuxZeroNet/Fuzzing/blob/master/Fuzzing%20Log/Round%201/README.md#type-error)", "added": 1492448069, "modified": 1492448069, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/250#issuecomment-294572823", "source_type": "github"}], "1604065093_mirrored_scriptzteam_github": [{"comment_id": 14, "body": "Lots of ZeroNet gateways are running HTTPS now. Instead of using a self-signed certificate, the gateways have domain names and use certificates from Let's Encrypt. Closing?", "added": 1492448465, "modified": 1492448593, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/288#issuecomment-294574613", "source_type": "github"}], "1604065283_mirrored_iShift_github": [{"comment_id": 15, "body": "I have problems updating via ZeroUpdate. The ZeroUpdate site did not get updated, so I did not got the latest version. Showing the `rev` number and asking for confirmation can be helpful.", "added": 1483916815, "modified": 1483916815, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/428#issuecomment-271199835", "source_type": "github"}], "1604065356_mirrored_liaoran_github": [{"comment_id": 16, "body": "@liaoran [ZeroTalk](http://127.0.0.1:43110/Talk.ZeroNetwork.bit) [ZeroMe](http://127.0.0.1:43110/Me.ZeroNetwork.bit) [Comment on ZeroBlog](http://127.0.0.1:43110/Blog.ZeroNetwork.bit)\r\nYour certificate should work, when you clicked on **sign in.** Please close this issue if you don't have further questions.", "added": 1483916594, "modified": 1483916594, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/493#issuecomment-271199613", "source_type": "github"}], "1604065394_mirrored_yamenarhim_github": [{"comment_id": 17, "body": "ZeroNet is no handling non-ASCII folder names correctly. Check if your path to ZeroNet contains non-English characters. #735", "added": 1484165370, "modified": 1484165370, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/523#issuecomment-272025295", "source_type": "github"}], "1604065421_mirrored_kseistrup_github": [{"comment_id": 18, "body": "FIRST SIGNED COMMIT!", "added": 1483916013, "modified": 1483916013, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/540#issuecomment-271198980", "source_type": "github"}], "1604065425_mirrored_DaniellMesquita_github": [{"comment_id": 19, "body": "Now you can create a new site by clicking on the `...` button on the top of ZeroHello. @DaniellPlasmmer \r\nIn this way, private key is saved in users.json and you don't have to type it in.", "added": 1483916127, "modified": 1483916127, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/546#issuecomment-271199087", "source_type": "github"}], "1604065456_mirrored_unique1o1_github": [{"comment_id": 20, "body": "There are some [very aggressive](https://www.goto.info.waseda.ac.jp/~wei/file/wei-apan-v10.pdf) [NAT traversal algorithms](http://slideplayer.com/slide/693136/) designed by researchers from Waseda University. It is surprising that those algorithms are rarely put into production. They require dedicated servers to help complete the punching process.\r\n\r\nThere are some alternative methods of becoming an active peer:\r\n- Turn on Tor Always mode\r\n- Turn on I2P mode (support work in progress)", "added": 1483915880, "modified": 1483915880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/572#issuecomment-271198828", "source_type": "github"}], "1604065492_mirrored_deavmi_github": [{"comment_id": 21, "body": "@deavmi Why not make a GitHub repo so that we can send pull requests?", "added": 1484165042, "modified": 1484165042, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/592#issuecomment-272024160", "source_type": "github"}], "1604065588_mirrored_ghost_github": [{"comment_id": 22, "body": "[ZeroGo](https://github.com/G1itchZero/ZeroGo) is a minimalist Golang implementation of ZeroNet.", "added": 1484164786, "modified": 1484164786, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/658#issuecomment-272023235", "source_type": "github"}, {"comment_id": 23, "body": "zerolib (Python 3)\nhttps://github.com/MuxZeroNet/zerolib\n\nZeroGo (Go)\nhttps://github.com/G1itchZero/ZeroGo\n\n    ", "added": 1510524311, "modified": 1510524311, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/658#issuecomment-343784427", "source_type": "github"}], "1604065597_mirrored_iskradelta_github": [{"comment_id": 24, "body": "Tribler's notorious weak crypto implementation was [caught](https://lists.torproject.org/pipermail/tor-dev/2014-December/007999.html) by Yawning Angel from Tor Project. Tribler has hard-seeded random number generators, and a piece of code, I guess written in a bad way on purpose, containing an obvious security issue:\r\n```python\r\n   try:\r\n     raise ImportError()\r\n     # Dead code, this would be slightly less horrific, maybe.\r\n     from Crypto.Random.random import StrongRandom\r\n   except ImportError:\r\n     # ... Words can not describe how sad I am.\r\n     from random import Random as StrongRandom\r\n```", "added": 1483915192, "modified": 1483915192, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/686#issuecomment-271198131", "source_type": "github"}, {"comment_id": 25, "body": "@iskradelta There is an issue and a pull request discussing I2P support. Someone on ZeroNet recently asked me how to make ZeroNet use I2P (by applying a patch), but I frankly don't know...", "added": 1483915341, "modified": 1483915341, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/686#issuecomment-271198271", "source_type": "github"}], "1604065601_mirrored_antilibrary_github": [{"comment_id": 26, "body": "I got this mysterious error on someone's blog, when I clicked on the Like button. The `undefined` or `[object object]` message makes this issue impossible to debug. [Here](https://github.com/HelloZeroNet/ZeroNet/blob/e37daabb53453c7c11248d0f36830a51b2ef7b17/plugins/Sidebar/media/Sidebar.coffee#L337) is the notification. JavaScript cannot turn the `res` variable into a meaningful repr string. Perhaps @HelloZeroNet could log the `res` variable to console immediately. `console.error(res);` Logging error to ZeroNet console could also be helpful.", "added": 1488256998, "modified": 1488256998, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/689#issuecomment-282966127", "source_type": "github"}, {"comment_id": 27, "body": "The `[object object]` log is caused by the inappropriate handling of error messages. The code is shared in ZeroTalk, ZeroBlog and other official sites. Sorry, @shortcutme JavaScript doesn't have repr strings.\r\n\r\nIt may be easy to submit a patch to fix ZeroBlog, but there are many cloned sites that share the same code. It is difficult to make all of the blog writers manually update their things.\r\n\r\nI will submit a patch of `UiWebsocket` to make the program log error messages to terminal when problem occurs.", "added": 1488497928, "modified": 1488497928, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/689#issuecomment-283848810", "source_type": "github"}], "1604065627_mirrored_beardog108_github": [{"comment_id": 28, "body": "Using [`X-Frame-Options` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) for page requests that do not have wrapper nonce can be a good idea. When a request includes a valid wrapper nonce, turn off this header. Requested site should not be seeded unless the request is valid, including having a valid wrapper nonce.\r\n```\r\nX-Frame-Options: SAMEORIGIN\r\n```\r\n> The page can only be displayed in a frame on the same origin as the page itself.\r\n\r\nHowever,\r\n- `X-Frame-Options: DENY` will break all ZeroNet links that do not have a `target=_top` attribute.\r\n- `ALLOW-FROM` is [not yet supported](https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet#Defending_with_X-Frame-Options_Response_Headers) by Chrome.\r\n\r\n- This seems to be invalid. Examples from the Internet always put an __origin__ there.\r\n```\r\nX-Frame-Options: ALLOW-FROM http://127.0.0.1:43110/1SitEAdDREssYkGmy3FdyNjEb1wsDagkPb/\r\n```\r\n\r\nThe [RFC](https://tools.ietf.org/html/rfc7034) says:\r\n```\r\nALLOW-FROM  (followed by a serialized-origin [RFC6454])\r\n      A browser receiving content with this header MUST NOT display this\r\n      content in a frame from any page with a top-level browsing context\r\n      of different origin than the specified origin.  While this can\r\n\r\n\r\n\r\n\r\n\r\nRoss & Gondrom                Informational                     [Page 4]\r\n\r\n \r\nRFC 7034                     X-Frame-Options                October 2013\r\n\r\n\r\n      expose the page to risks by the trusted origin, in some cases, it\r\n      may be necessary to allow the framing by content from other\r\n      domains.\r\n\r\n   The meaning of the term \"serialized-origin\" is given in [RFC6454].\r\n   If the ALLOW-FROM value is used, it MUST be followed by a valid\r\n   origin [RFC6454] (as a subset of the URI [RFC3986]).\r\n\r\n   Any data beyond the domain address (i.e., any data after the \"/\"\r\n   separator) is to be ignored. \r\n```\r\n\r\nA good news is that, the `frame-ancestors` directive from the [`Content-Security-Policy` header](https://www.owasp.org/index.php/Content_Security_Policy_Cheat_Sheet) \"obsoletes the `X-Frame-Options` header.\" Some CSP directives only use the origin in given source list, ignoring the rest of the URI, but the `host-source` format seems to support paths.\r\n\r\n> Many CSP directives use a value consisting of a source list, defined in the ABNF grammar below.\r\n```\r\nsource-list       = *WSP [ source-expression *( 1*WSP source-expression ) *WSP ]\r\n                  / *WSP \"'none'\" *WSP\r\nsource-expression = scheme-source / host-source / keyword-source / nonce-source / hash-source\r\nhost-source       = [ scheme-part \"://\" ] host-part [ port-part ] [ path-part ]\r\npath-part         = <path production from RFC 3986, section 3.3>\r\n...\r\n```\r\n\r\n> The `default-src` directive sets a default source list for a number of directives. The syntax for the name and value of the directive are described by the following ABNF grammar:\r\n```\r\ndirective-name    = \"default-src\"\r\ndirective-value   = source-list\r\n```\r\nA list of source list formats: https://www.w3.org/TR/CSP2/#source_list\r\nA list of defined CSP directives: https://www.w3.org/TR/CSP2/#directives\r\nA `frame-ancestors` example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors", "added": 1483478829, "modified": 1483494431, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/711#issuecomment-270264374", "source_type": "github"}, {"comment_id": 29, "body": "![GREAT FAILURE for attackers](https://cloud.githubusercontent.com/assets/24784041/21629167/7520e3c2-d21d-11e6-810f-6556763fe960.png)\r\n```\r\nStarted HTTP server on port 8000\r\n\r\n127.0.0.1 - \"GET /wrapper.html HTTP/1.1\" 200 -\r\n127.0.0.1 - \"GET /site_a/?vaild_request HTTP/1.1\" 200 -\r\nContent-Security-Policy: frame-ancestors http://127.0.0.1:8000/wrapper.html http://127.0.0.1:8000/site_a/;\r\n127.0.0.1 - \"GET /site_a/?vaild_request HTTP/1.1\" 200 -\r\nContent-Security-Policy: frame-ancestors http://127.0.0.1:8000/wrapper.html http://127.0.0.1:8000/site_a/;\r\n127.0.0.1 - \"GET /site_b/ HTTP/1.1\" 200 -\r\nContent-Security-Policy: frame-ancestors http://127.0.0.1:8000/wrapper.html http://127.0.0.1:8000/site_b/;\r\n```\r\nI only allowed a site to be framed by the wrapper, and by itself. Setting it to `\"frame-ancestors http://127.0.0.1:8000/ http://127.0.0.1:8000/\" + site_name + \"/;\"`, however, does not work.\r\n\r\nWrapper source code:\r\n```html\r\n<html>\r\n<head>\r\n    <style>\r\n    #inner-iframe {\r\n        width: 80vw;\r\n        height: 80vh;\r\n    }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <iframe src=\"about:blank\" id=\"inner-iframe\" sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups\"></iframe>\r\n    <script>\r\n        document.getElementById('inner-iframe').src = 'site_a/?vaild_request';\r\n    </script>\r\n</body>\r\n</html>\r\n```\r\nNote that `host-source` will not match any IPv4 address other than 127.0.0.1, or any IPv6 address.", "added": 1483482673, "modified": 1483494374, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/711#issuecomment-270273646", "source_type": "github"}], "1604065645_mirrored_kasv_github": [{"comment_id": 30, "body": "@kasv More information needed.", "added": 1483914494, "modified": 1483914494, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/725#issuecomment-271197386", "source_type": "github"}], "1604065652_mirrored_jesusmoreno24_github": [{"comment_id": 31, "body": "I would open F12 network console to see what was failed to load. @jesusmoreno24 Could you please open the network console, press Ctrl-F5, and take a screenshot? ", "added": 1483494651, "modified": 1483494651, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/731#issuecomment-270294366", "source_type": "github"}, {"comment_id": 32, "body": "Could anyone tell [/u/GeneShuttles](https://www.reddit.com/user/GeneShuttles) about this update?\r\nhttps://www.reddit.com/r/zeronet/comments/5lzub8/not_displaying_properly/", "added": 1483580959, "modified": 1483580959, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/731#issuecomment-270563421", "source_type": "github"}], "1604065659_mirrored_MuxZeroNet_github": [{"comment_id": 33, "body": "Solves issues #131 and #298 but has homograph attacks. It may be a good idea to show a warning to show the encoded domain name, the domain public key, and whether known homographs are found in the domain name.\r\n\r\nLists of homographs:\r\nhttps://github.com/reinderien/mimic (The super evil)\r\nhttps://github.com/adam-lynch/olc (Similar super evil)\r\nhttps://github.com/MattOates/Text--Homoglyph/blob/master/lib/Text/Homoglyph.pm6\r\nhttps://github.com/codebox/homoglyph\r\nhttps://github.com/SoftwareAddictionShow/IDN-homograph-attack\r\nhttps://en.wikipedia.org/wiki/IDN_homograph_attack (a few on Wikipedia page)\r\nhttp://www.unicode.org/Public/security/latest/confusables.txt (Unicode confusables)\r\nhttp://www.unicode.org/reports/tr36/ (Unicode security considerations)\r\nhttps://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.json (Big list of naughty strings)\r\nhttps://krebsonsecurity.com/2011/09/right-to-left-override-aids-email-attacks/ (Control characters and Right-to-Left override attack)", "added": 1483587566, "modified": 1483589797, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/735#issuecomment-270575018", "source_type": "github"}, {"comment_id": 34, "body": "I decided not to make ZeroNet support IDNA domain names simply because it will make browsing IDNA sites more inconvenient.\r\n\r\nSuppose someone registered for a fancy domain name `\u2609net.bit` (the Sun symbol), and a bad guy registered for a domain name `\u2299net.bit` (the circled dot operator) for phishing.\r\n```python\r\n>>> u'\u2609' == u'\u2299'\r\nFalse\r\n>>> print repr(u'\u2609'),repr(u'\u2299')\r\nu'\\u2609' u'\\u2299'\r\n```\r\n\r\nMost fonts are not optimized for differentiating these homographs, so we want ZeroNet to display them in puny coded form.\r\n```python\r\n>>> u'\u2299net.bit'.encode('idna'), u'\u2609net.bit'.encode('idna')\r\n('xn--net-vr2a.bit', 'xn--net-gn5a.bit')\r\n```\r\nTo not to get to the phishing site, one has to memorize the full puny coded form of the innocent site's domain name. In this case, one will choose to use public keys to access these sites instead.\r\n\r\nI will create a separate pull request only to fix encoding issues.", "added": 1483912617, "modified": 1483912617, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/735#issuecomment-271194925", "source_type": "github"}, {"comment_id": 35, "body": "Closed. IDNA domains will not be supported due to security concerns. Discussion about string encoding bugs has been moved here: #765", "added": 1486400221, "modified": 1486400221, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/735#issuecomment-277794421", "source_type": "github"}], "1604065666_mirrored_adrelanos_github": [{"comment_id": 36, "body": "Related: #540 \"Please sign releases\"\r\n\r\n`--updatesite` argument https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Config.py#L149", "added": 1483580673, "modified": 1483580673, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/738#issuecomment-270563007", "source_type": "github"}], "1604065665_mirrored_MuxZeroNet_github": [{"comment_id": 37, "body": "Appears repeatedly after muting users. [Here](https://github.com/HelloZeroNet/ZeroNet/blob/38d330da1aae27198cb7496977fe8750c1eacc1d/src/Db/Db.py#L260) is the cause of assignment error.\r\n\r\n```\r\nJson merged-ZeroMe/1oranGe[...]/data/users/1[...]/content.json load error:\r\nUnboundLocalError: local variable 'json_row' referenced before assignment\r\nin SiteStorage.py line 229 > MutePlugin.py line 99 > SiteStorage.py line 74 > Db.py line 362\r\n```", "added": 1486935110, "modified": 1486935110, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/739#issuecomment-279269233", "source_type": "github"}], "1604065671_mirrored_MuxZeroNet_github": [{"comment_id": 38, "body": "Attack works in Firefox. PR #750\r\n```\r\nHost: 127.0.0.1:43110\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nOrigin: null\r\n[Irrelevant headers omitted]\r\n```\r\nWTF? AJAX without referrer header and X-Requested-With header.", "added": 1483845447, "modified": 1483849540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/742#issuecomment-271132817", "source_type": "github"}, {"comment_id": 39, "body": "WebSocket requests also have a \"valid\" Accept header: PR #749\r\n```\r\nHost: 127.0.0.1:43110\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nSec-WebSocket-Version: 13\r\norigin: http://127.0.0.1:43110\r\nConnection: keep-alive, Upgrade\r\nUpgrade: websocket\r\n[Irrelevant headers omitted]\r\n```", "added": 1483847229, "modified": 1483847858, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/742#issuecomment-271133847", "source_type": "github"}, {"comment_id": 40, "body": "OPTIONS requests made by Ajax and Fetch APIs need some attention:\r\n```js\r\nvar headers = new Headers();\r\nvar options = { method: 'GET', headers: headers };\r\n\r\nheaders.set('Accept', '*/*,fake/mime');\r\nheaders.set('X-Requested-With', 'FakeXMLHttpRequest');\r\n\r\nfetch('/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/sample-loader/files/list.json?fetch', options)\r\n.then(function(response) {\r\n  console.log(\"Done.\");\r\n});\r\n```\r\n\r\n```\r\nOPTIONS /1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/sample-loader/files/list.json?fetch\r\nAccess-Control-Request-Method: GET\r\nAccess-Control-Request-Headers: x-requested-with\r\n```", "added": 1483850909, "modified": 1483850909, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/742#issuecomment-271136062", "source_type": "github"}, {"comment_id": 41, "body": "Finally, some proposals:\r\n- Cross origin AJAX, WebSocket and Fetch requests have `origin` headers, but same origin requests can also have `origin` headers. Blocking all requests with `origin` headers will break same origin AJAX requests, but it is useful when AJAX request is strictly disallowed.\r\n- The bottom line is that, we cannot allow JavaScript programs to seed arbitrary sites.\r\n\r\nIn the paragraphs below, \"cross origin\" stands for loading files across ZeroNet sites; \"same origin\" stands for loading files in the same ZeroNet site.\r\n\r\n- When a request with a **\"cross origin\" referrer** is received, and it is asking for a non-HTML page on a random ZeroNet site, ZeroNet blocks that request automatically.\r\n- When a request with a **\"cross origin\" referrer** is received, and it is asking for an HTML page on a brand new ZeroNet site, ZeroNet may have to respond with a confirmation page. (Clicked on a link or loaded by `iframe`, or simply [redirect.html](http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/img/redirect.html?/Me.ZeroNetwork.bit/))\r\n- When a request ~~with a **\"same origin\" referrer** or~~(is it possible?) without referrer is received, and it is asking for an HTML page on a brand new ZeroNet site, ZeroNet should seed that brand new site only after the wrapper is loaded. (Various attacks that send requests without referrer and do not care about responses)\r\n- ZeroNet may have to block all AJAX, WebSocket and Fetch requests, including [\"suspicious\"](https://github.com/HelloZeroNet/ZeroNet/pull/750/files#diff-7fa31802ec08bb55f5128c3e841b5f34R100) ones, to a site that has not been saved in the computer. (Will it break ZeroCDN?)\r\n", "added": 1483851974, "modified": 1483853341, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/742#issuecomment-271137033", "source_type": "github"}, {"comment_id": 42, "body": "It seems that the Accept header of the same request is inconsistent across different browsers.\r\nThe code below issues a `POST` request:\r\n```js\r\nnavigator.sendBeacon(\"http://127.0.0.1:43110/13Lo9wpxbogHdaTQ9rGZruu9MJZnigzU3B/data/fake.html?beacon\", \"random data\");\r\n```\r\n\r\nFirefox: `Accept: text/html, ...`\r\nChrome: `Accept: */*`", "added": 1483911718, "modified": 1483911718, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/742#issuecomment-271193985", "source_type": "github"}, {"comment_id": 43, "body": "What about banning POST request? PR #751", "added": 1483913620, "modified": 1483913620, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/742#issuecomment-271196194", "source_type": "github"}], "1604065672_mirrored_simplefreelife_github": [{"comment_id": 44, "body": "Windows Sockets Error Code:\r\n```\r\nWSAETIMEDOUT\r\n10060\r\n```\r\n> **Connection timed out.**\r\n> A connection attempt failed because the connected party did not properly respond after a period of time, or the established connection failed because the connected host has failed to respond.\r\n\r\nZeroNet cannot connect to GitHub. It should have decided to download updates from another mirror.\r\n\r\nGrab a GitHub IP from here: https://asm.ca.com/en/ping.php\r\nOr specify a SOCKS proxy to use: https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Config.py#L157", "added": 1483730226, "modified": 1483730226, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/745#issuecomment-271025228", "source_type": "github"}], "1604065684_mirrored_jerry-wolf_github": [{"comment_id": 45, "body": "Get Tor Browser: https://github.com/TheTorProject/gettorbrowser", "added": 1484109120, "modified": 1484109120, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/746#issuecomment-271798285", "source_type": "github"}], "1604065685_mirrored_MuxZeroNet_github": [{"comment_id": 46, "body": "Interesting, but this issue will be approached differently.", "added": 1484164561, "modified": 1484164561, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/750#issuecomment-272022404", "source_type": "github"}], "1604065682_mirrored_kavamaken_github": [{"comment_id": 47, "body": "You need to add an Accept header:\r\n```bash\r\ncurl -H \"Accept: text/html\" http://127.0.0.1:43110/Stats\r\n```\r\n\r\n```python\r\nrequests.get('http://127.0.0.1:43110/Stats', headers = {\"Accept\": \"text/html\"}).text\r\n```\r\n\r\nZeroNet now needs this header to check for XSS requests. You can refer to #728.", "added": 1483926564, "modified": 1483927792, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/752#issuecomment-271210956", "source_type": "github"}], "1604065690_mirrored_adrelanos_github": [{"comment_id": 48, "body": "Could you please find your `TorManager.py` file and add this line under [line 158](https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Tor/TorManager.py#L158)?\r\n```python\r\nprint \"------\", repr(res_protocol)\r\n```", "added": 1484108915, "modified": 1484108915, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/756#issuecomment-271797778", "source_type": "github"}, {"comment_id": 49, "body": "I have no idea either. (Better use `repr` strings)\r\n```python\r\n>>> import socket\r\n>>> conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n>>> conn.connect(('127.0.0.1', 9151))\r\n>>> conn.sendall('authenticate c5e2d6b540e0b8ea29702e0112740e64f056751d661d03ba0d00d399262e6f77\\r\\n')\r\n>>> conn.recv(1024*32)\r\n'250 OK\\r\\n'\r\n\r\n>>> conn.sendall('getinfo version\\r\\n')\r\n>>> conn.recv(1024*32)\r\n'250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK\\r\\n'\r\n\r\n>>> raw_reply = '250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK\\r\\n'\r\n>>> raw_reply.decode('utf-8')\r\nu'250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK\\r\\n'\r\n>>> raw_reply.decode('utf-8', 'ignore')\r\nu'250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK\\r\\n'\r\n>>> raw_reply.decode('utf-8', 'ignore').strip()\r\nu'250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK'\r\n>>> decoded_reply = _\r\n>>> decoded_reply\r\nu'250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK'\r\n>>> import re\r\n>>> re.search('version=([0-9\\.]+)', decoded_reply)\r\n<_sre.SRE_Match object at 0x7fc300f3d030>\r\n>>> re.search('version=([0-9\\.]+)', decoded_reply).group(1)\r\nu'0.2.8.11'\r\n```", "added": 1484161741, "modified": 1484161741, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/756#issuecomment-272011282", "source_type": "github"}, {"comment_id": 50, "body": "To figure out what Python actually got, could you please try this?\r\n```python\r\nhex_cookie = 'your hex encoded cookie here'\r\nimport socket\r\nconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\nconn.connect(('127.0.0.1', 9151))\r\nconn.sendall('authenticate %s\\r\\n' % hex_cookie)\r\nprint repr(conn.recv(1024*32))\r\n\r\nconn.sendall('getinfo version\\r\\n')\r\nraw_reply = conn.recv(1024*32)\r\n\r\nprint repr(raw_reply)\r\n\r\ndecoded_reply = raw_reply.decode('utf-8', 'ignore').strip()\r\nprint repr(decoded_reply)\r\n\r\nimport re\r\nprint repr(re.search('version=([0-9\\.]+)', decoded_reply).group(1))\r\n```\r\nOn my computer:\r\n```\r\n'250 OK\\r\\n'\r\n'250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK\\r\\n'\r\nu'250-version=0.2.8.11 (git-31e7b47fbebe8caf)\\r\\n250 OK'\r\nu'0.2.8.11'\r\n```", "added": 1484163334, "modified": 1484163623, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/756#issuecomment-272017697", "source_type": "github"}, {"comment_id": 51, "body": "We should probably blame the control port firewall. :unlock:", "added": 1484163978, "modified": 1484163978, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/756#issuecomment-272020136", "source_type": "github"}], "1604065693_mirrored_adrelanos_github": [{"comment_id": 52, "body": "Let's merge #834 to close this issue. @shortcutme What do you think?", "added": 1491435156, "modified": 1491435156, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/758#issuecomment-292052201", "source_type": "github"}, {"comment_id": 53, "body": "The pull request has been merged!", "added": 1492448974, "modified": 1492448974, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/758#issuecomment-294576868", "source_type": "github"}], "1604065690_mirrored_HulaHoopWhonix_github": [{"comment_id": 54, "body": "4096 is the recommendation of GitHub.", "added": 1484177871, "modified": 1484177871, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/759#issuecomment-272060027", "source_type": "github"}, {"comment_id": 55, "body": "Confirmed. Fingerprint = `960F FF2D 6C14 5AA6 13E8  491B 5B63 BAE6 CB96 13AE`\r\n\r\n```bash\r\n$ gpg2 --export \"960F FF2D 6C14 5AA6 13E8  491B 5B63 BAE6 CB96 13AE\" | sha256sum\r\n1e46c22a0ab4e766637b1676b9394ac3465eb094b8deb4daeb09deb06cfa04be  -\r\n```", "added": 1491933158, "modified": 1491933158, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/759#issuecomment-293396311", "source_type": "github"}], "1604065692_mirrored_HulaHoopWhonix_github": [{"comment_id": 56, "body": "Torrent and big file support relevant issues: #7 #145 \r\nAt ZeroNet application layer: [ZeroMux](https://github.com/MuxZeroNet/ZeroMux) (WIP)", "added": 1484181127, "modified": 1484181127, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/760#issuecomment-272067077", "source_type": "github"}], "1604065704_mirrored_ysc3839_github": [{"comment_id": 57, "body": "GeoLite's website is hosted on CloudFlare, and CloudFlare blocks Tor. :-1: ", "added": 1484187465, "modified": 1484187465, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/762#issuecomment-272078479", "source_type": "github"}], "1604065708_mirrored_MuxZeroNet_github": [{"comment_id": 58, "body": "This pull request is a little bit outdated. Merging it seems to break UiRequest. However, the decoding error is still there, as of commit [`f74e939`](https://github.com/HelloZeroNet/ZeroNet/commit/f74e9397db20336835a72220321480328f4de477), rev 1861. Though we will not support IDNA domain names and non-ASCII path names, I believe it is better to return a 404 error rather than a 500 error.", "added": 1486400593, "modified": 1486400593, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/765#issuecomment-277796293", "source_type": "github"}, {"comment_id": 59, "body": "## General Guidelines\r\n- The `path` variable is URL decoded and UTF-8 encoded.\r\n\r\n- The return values of `os.path` APIs can be either in Unicode or in file system encoding. Make sure to use Unicode parameters so that the APIs will always return Unicode strings.\r\n\r\n- There cannot be Unicode strings in HTTP headers. The Gevent API `self.start_response` does not accept Unicode strings either.\r\n\r\n- Use `.decode('encoding')` to convert a binary string to a Unicode string. Use `.encode('encoding')` to convert a Unicode string to a binary string. Use `repr(a_string)` to see if a string is decoded correctly.\r\n\r\n- When testing, you have to make sure both the wrapper and the inner frame work without crashing.\r\n\r\n## Test cases\r\nURLs:\r\n```\r\nhttp://127.0.0.1:43110/Tam\u00e1s/Kocsis\r\nhttp://127.0.0.1:43110/Tam\u00e1s.bit/Kocsis/\r\nhttp://127.0.0.1:43110/Tam\u00e1s Kocsis/index.html\r\nhttp://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/fake/path/Tam\u00e1s/Kocsis.html\r\nhttp://127.0.0.1:43110/\u5b9e\u7528\u5de5\u5177\u5b58\u6863\u533a.html\r\nhttp://127.0.0.1:43110/\u5b9e\u7528\u5de5\u5177\u5b58\u6863\u533a.bit/\u5b9e\u7528\u5de5\u5177\u5b58\u6863\u533a.html\r\nhttp://127.0.0.1:43110/\u5b9e\u7528\u5de5\u5177\u5b58\u6863\u533a/ZeroMux.bit/\r\nhttp://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/?\u5b9e\u7528\u5de5\u5177\u5b58\u6863\u533a\r\n```\r\n\r\nPath encodings:\r\n\r\nSay, put ZeroNet in this directory:\r\n```\r\n/home/ubuntu/Tam\u00e1s Kocsis/ZeroNet-master\r\n```", "added": 1486401776, "modified": 1486402402, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/765#issuecomment-277801898", "source_type": "github"}], "1604065723_mirrored_JazzMaster_github": [{"comment_id": 60, "body": "Let's go through this step by step:\r\n\r\n`1. `Can you load any site?\r\n`2. `Can you go to your Stats page `http://127.0.0.1:43110/Stats` and check if it shows any peer IP?\r\n", "added": 1484944269, "modified": 1484944269, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/785#issuecomment-274207581", "source_type": "github"}], "1604065726_mirrored_PSNAppz_github": [{"comment_id": 61, "body": "ZeroNet logo improved by AceLewis\r\nhttps://acelewis.com/post/zeronet-logo-improvements-and-svg", "added": 1485638602, "modified": 1485638602, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/787#issuecomment-275884765", "source_type": "github"}], "1604065730_mirrored_JazzMaster_github": [{"comment_id": 62, "body": "Sorry, but we need more clarification.", "added": 1485225451, "modified": 1485225451, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/789#issuecomment-274714543", "source_type": "github"}, {"comment_id": 63, "body": "I wasn't aware of any hackers. The only problem I have since I have been running ZeroNet for a year, is the minor problem of file size mismatch, simply because not all peers in the network have the latest version of a file.\n\nRegarding the snapshots, a [volunteer](https://github.com/weakish/0me-hubs-snapshots) is running a script that backs up ZeroMe Hubs. Don't worry about that.\n\n", "added": 1486963449, "modified": 1486963449, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/789#issuecomment-279321630", "source_type": "github"}], "1604065740_mirrored_adrelanos_github": [{"comment_id": 64, "body": "Send a ping request to any `onion` address created by ZeroNet itself. I can't do this with Tor Browser, since the protocol is different. It would be nice if ZeroNet checks it automatically and pushes error messages to ZeroHello.", "added": 1486933825, "modified": 1486933825, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/794#issuecomment-279267506", "source_type": "github"}, {"comment_id": 65, "body": "A [descriptor](https://www.torproject.org/docs/hidden-services) must be published before a Tor Hidden Service can be considered accessible. The author of [Stem tutorial](https://stem.torproject.org/tutorials/over_the_river.html#ephemeral-hidden-services) suggests developers wait until the descriptor is published, by adding a `await_publication=True` parameter when using the [API](https://stem.torproject.org/api/control.html#stem.control.Controller.create_ephemeral_hidden_service).\r\n\r\nAwait publication is significantly slower, but TorManager runs fast. It seems that ZeroNet does not wait for descriptor publication. Waiting for it can help eliminate false positives, but can take much longer time.", "added": 1487204634, "modified": 1487204706, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/794#issuecomment-280220189", "source_type": "github"}, {"comment_id": 66, "body": "Here is my idea: when creating the \"global\" onion service, wait until publication. When creating site specific onion services, don't wait for publication. By doing so, we make sure there is at least one accessible onion service to receive the ping request, while not slowing down the startup process.\n\n", "added": 1487272720, "modified": 1487272720, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/794#issuecomment-280480530", "source_type": "github"}], "1604065755_mirrored_jerry-wolf_github": [{"comment_id": 67, "body": "Like `.gitignore`, simply include by default a RegEx in `content.json` to exclude these temporary files.\r\n\r\nhttp://127.0.0.1:43110/Talk.ZeroNetwork.bit/content.json\r\n```json\r\n\"ignore\": \"((js|css)/(?!all.(js|css))|data/users/.*db|data/users/.*/.*|data/archived|.*.py)\",\r\n```\r\nHere NoFish excluded all `.py` files from his site.\r\n\r\n```json\r\n\"ignore\": \"(([Dd]esktop\\\\.ini)|([Tt]humbs\\\\.db)|(\\\\.DS_Store))\",\r\n```", "added": 1485314513, "modified": 1485314513, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/796#issuecomment-275029098", "source_type": "github"}, {"comment_id": 68, "body": "I also wonder what is the underlying reason for the failure. @l5h5t7 Could you please test this again in Rev 2009?", "added": 1491434945, "modified": 1491434945, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/796#issuecomment-292051743", "source_type": "github"}], "1604065742_mirrored_nyancat18_github": [{"comment_id": 69, "body": "Smartphone support for ZeroNet is unofficial and experimental.", "added": 1485638670, "modified": 1485638670, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/799#issuecomment-275884804", "source_type": "github"}, {"comment_id": 70, "body": "http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:13_13Z7XxTa7JuFat3KzzMWu3onwM6biLuurJ/New+version+0+2+1+of+ZeroNet+Android+APK+released\r\n\r\nhttp://127.0.0.1:43110/0list.bit/?Topic:30_19sggoAZ4hcorrrfWoFWP9rwfpVsL29cnZ/My+list+of+Interesting+ZeroNet+Sites+List+of+ZeroNet+Sites+GitHub\r\n\r\nSmartphone support is really experimental. It may run into bugs.\r\n\r\nIn addition, as a reminder, there is a chance that your computer and your smartphone have different versions of your own content. Signing an outdated version of your content will make your newest content be discarded by the network.\r\n", "added": 1485803169, "modified": 1485907193, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/799#issuecomment-276206938", "source_type": "github"}], "1604065758_mirrored_MuxZeroNet_github": [{"comment_id": 71, "body": "How does this expiration period work?\n\n    ", "added": 1485902037, "modified": 1485902037, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/800#issuecomment-276548505", "source_type": "github"}, {"comment_id": 72, "body": "If I removed some existing optional files and signed my site. (Say I really want to remove them and free up space) Will these \"missing\" optional files be cleaned up in 24 hours?\r\n\r\n    ", "added": 1485906518, "modified": 1485906983, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/800#issuecomment-276558984", "source_type": "github"}], "1604065749_mirrored_JazzMaster_github": [{"comment_id": 73, "body": "ZeroNet will not seed an unknown site without user interaction. When you are pushing your new site to peers, make sure they want to seed your site.\r\n\r\nFor example, simply open your site on [one](https://bit.no.com:43110/138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/?Page:proxies) [of](https://zeronet.korso.win) [these](https://zeronet.iikb.org) [public](https://proxy1.zn.kindlyfire.me/) [gateways](https://zero.btnova.org/), and push your site update again.", "added": 1485801755, "modified": 1485801755, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/803#issuecomment-276200611", "source_type": "github"}], "1604065751_mirrored_JazzMaster_github": [{"comment_id": 74, "body": "Hello, newcomer! ZeroNet has a very interesting sidebar. You can see a `0` button at the top right corner of your homepage. Instead of clicking on it, you drag it to the left. The sidebar will show up. You can sign your site there.\r\n\r\nYour private key is saved in `users.json`. ZeroNet does not prompt you to type in your private key if it is saved in that file.\r\n", "added": 1485801186, "modified": 1485801186, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/804#issuecomment-276197765", "source_type": "github"}], "1604065754_mirrored_JazzMaster_github": [{"comment_id": 75, "body": "1. > The file gets re-signed every time.\r\n    \r\n    You can [include](https://zeronet.readthedocs.io/en/latest/site_development/content_json/#includes) [a separate](http://127.0.0.1:43110/1uEc35aRpkDgVmJ35jcMEHm4D2JCcEejp/motherboard/content.json) [`content.json` file](http://127.0.0.1:43110/1uEc35aRpkDgVmJ35jcMEHm4D2JCcEejp/content.json) only for things that are huge, so that if that big part does not get modified, you can choose not to sign that `content.json` file. However, the documentation on it is not very clear. You may need some time to figure it out.\r\n\r\n2. > If you have a \"name\" for your site and want to use it, that too gets overridden. You have to re-save it via the zero UI every time.\r\n    \r\n    Sorry, need more clarification.\r\n\r\n3. > If your site is huge you have two options: torrent files everywhere or everyone hosts a huge website. Jekyll sites themselves are not huge (<10mb), the \"optional content\" may be.\r\n    \r\n    You are able to define an optional file regular expression. In your `content.json`, add this key and value after the `\"modified\"` key.\r\n    ```json\r\n    \"optional\": \"(big/files/.*\\\\.mp4)\",\r\n    ```\r\n    After that, sign your site again.\r\n    \r\n    With optional files defined, everyone will not have to seed all parts of your site. For example, by clicking on a link to your site, I will seed _all_ of your _non-optional_ files, as well as the _optional_ files _I want._ My downloaded optional files will not get recycled unless I am running out of space. If I really want to remove them, I can clean them up via optional file manager.", "added": 1485908926, "modified": 1485908926, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/805#issuecomment-276563580", "source_type": "github"}], "1604065753_mirrored_liyafe1997_github": [{"comment_id": 76, "body": "Add `view-source:` to the beginning of URL and show us the page source code.", "added": 1486273692, "modified": 1486273692, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/809#issuecomment-277505485", "source_type": "github"}], "1604065775_mirrored_MuxZeroNet_github": [{"comment_id": 77, "body": "This is just some advice for debugging the UiPassword plugin. You may need to see if the UiPassword plugin is blocking the requests.\r\n\r\nClosed. Feel free to reopen if you want.\r\n", "added": 1488927068, "modified": 1488927068, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/811#issuecomment-284921141", "source_type": "github"}], "1604065797_mirrored_MuxZeroNet_github": [{"comment_id": 78, "body": "There is a [post](https://onlyzero.net/Me.Zeronetwork.bit/?Post/1oranGeS2xsKZ4jVsu9SVttzgkYXu4k9v/17H6uxjm8hQK9Rk79yHkvQYQnTkJNroA3T/1487296074) on ZeroMe with an image hosted by over one hundred peers showing ZeroNet traffic being sent out unencrypted. At least we should take about how to choose strong TLS cryptos here.\r\n\r\nAssumptions:\r\n- We are encrypting against a **passive** attacker.\r\n\r\nPrinciples:\r\n- Avoid generating extra fingerprints or patterns.\r\n- Be aware of TLS implementation bugs.\r\n\r\nSince excluding certain ciphers in handshake will result in a unique traffic fingerprint, this PoC uses the default TLS configuration and relies on Python code to check for insecure cryptos.\r\n\r\n```python\r\nimport socket\r\nimport ssl\r\n\r\n# A good peer will NEVER use these WEAK cryptos.\r\n# By using any of these weak cryptos, you will be labeled as a bad boy.\r\n\r\n# Sources: https://bettercrypto.org/blog/2014/10/14/The-POODLE-killed-it/\r\n#          https://en.wikipedia.org/wiki/LibreSSL#Old_insecure_features\r\n\r\nINSECURE_CIPHER_KEYWORDS = set([\r\n    'NULL', 'EXPORT', '-EXP-', '-LOW-', 'MEDIUM', 'Anon', 'anon', 'ANON',\r\n    'RC4', 'RC2', 'DES', 'SEED', 'KRB', 'ADH', 'SRP', 'PSK', 'DSS',\r\n    'MD5', 'MD4', 'MD2', 'SHA1', 'SHA0', 'SHA\\n',\r\n    '-64-', '-56-', '-40-',\r\n])\r\n\r\npacket = \"GET / HTTP/1.1\\r\\nHost: zeronet.io\\r\\n\\r\\n\"\r\nHOST, PORT = 'zeronet.io', 443\r\n\r\n# Create socket\r\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\nsock.settimeout(10)\r\n\r\n# Wrap socket\r\nwrapped_socket = ssl.wrap_socket(sock, ssl_version=ssl.PROTOCOL_SSLv23)\r\n\r\n# Connect and print handshake\r\nwrapped_socket.connect((HOST, PORT))\r\n\r\ntls_version = wrapped_socket.version()\r\ntls_cipher = wrapped_socket.cipher()\r\ncompression = wrapped_socket.compression()\r\n\r\nprint tls_version\r\nprint tls_cipher\r\nprint compression\r\n\r\nif not tls_cipher:\r\n    wrapped_socket.close() # No plaintext traffic (in clearnet mode)\r\n    exit()\r\n\r\ncipher_used, general_ver, key_len = tls_cipher\r\n\r\nif not tls_version.startswith(\"TLS\"):\r\n    wrapped_socket.close() # No deprecated SSL protocols\r\n    exit()\r\nfor keyword in INSECURE_CIPHER_KEYWORDS:\r\n    if keyword in (cipher_used + \"\\n\"):\r\n        wrapped_socket.close() # No insecure cryptos\r\n        exit()\r\nif key_len < 128:\r\n    wrapped_socket.close() # Weak symmetric key length\r\n    exit()\r\nif compression != None:\r\n    wrapped_socket.close() # No compression\r\n    exit()\r\n\r\n# Print reply\r\nwrapped_socket.send(packet)\r\nprint wrapped_socket.recv(4096)\r\n\r\n# CLOSE connection\r\nwrapped_socket.close()\r\n\r\n```", "added": 1490999713, "modified": 1491003998, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/830#issuecomment-290884305", "source_type": "github"}], "1604065801_mirrored_MuxZeroNet_github": [{"comment_id": 79, "body": "```bash\r\npython zeronet.py --tor always --tor_proxy 127.0.0.1:9150 --tor_controller 127.0.0.1:9151 --disable_udp\r\n```\r\n```\r\nTorManager Authenticate using Stem... 127.0.0.1:9151\r\nTorManager Tor stem connect error: SOCKS5Error: 0x01: General SOCKS server failure in TorManager.py line 213 > control.py line 998 > socket.py line 372 > socket.py line 243 > socket.py line 398 > socks.py line 681 > socks.py line 383 > socks.py line 458\r\nTorManager self-bundled Tor fallback: Tor proxy port 127.0.0.1:9150 check error: No connection\r\n```\r\n\r\n\r\nSocks Patching of ZeroNet has conflict with Stem.", "added": 1486941892, "modified": 1486941979, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/832#issuecomment-279279618", "source_type": "github"}, {"comment_id": 80, "body": "@HelloZeroNet Stem tends to route Tor Control Port traffic through the Tor Socks5 proxy, and then it failed to connect to the Control Port. Any workaround for this?\r\n", "added": 1487202617, "modified": 1487202670, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/832#issuecomment-280215041", "source_type": "github"}, {"comment_id": 81, "body": "How do I write the first lines of the plugin?\r\n```python\r\n@PluginManager.registerTo(\"TorManager\")\r\nclass TorManagerPlugin(object):\r\n```", "added": 1487277790, "modified": 1487277790, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/832#issuecomment-280501555", "source_type": "github"}], "1604065804_mirrored_MuxZeroNet_github": [{"comment_id": 82, "body": "I am not able to make it work due to gevent problems.\r\n```\r\nLoopExit: ('This operation would block forever', <Hub at 0x7f001f0c0e10 epoll pending=0 ref=0 fileno=6>)\r\n```\r\n\r\nGevent developer says \"This is (almost always) not a problem in gevent.\" gevent/gevent#933\r\n\r\nAccording to paramiko/paramiko#633, the `socket` module is monkey-patched to use gevent and therefore causes a `LoopExit` error.", "added": 1487284441, "modified": 1487284441, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-280522535", "source_type": "github"}, {"comment_id": 83, "body": "I patched the socket module by calling `monkey.patch_all()`. Stem finally works but I got the following warning:\r\n```\r\nplugins/StemPort/StemPortPlugin.py:15:\r\nRuntimeWarning: Patching more than once will result in the union of all True parameters being patched\r\n```", "added": 1487359681, "modified": 1487359681, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-280784025", "source_type": "github"}, {"comment_id": 84, "body": "http://www.gevent.org/gevent.monkey.html\r\n```\r\npatch_all(socket=True, dns=True, time=True, select=True, thread=True, os=True, \r\n    ssl=True, httplib=False, subprocess=True, sys=False, aggressive=True, Event=False, \r\n    builtins=True, signal=True)\r\n```\r\n\r\n> Changed in version 1.1: Issue a warning if this function is called **multiple times** with **different arguments**. The second and subsequent calls will only add more patches, they **can never remove** existing patches by setting an argument to False.\r\n\r\nI think the problem is, I called `patch_all` with the wrong arguments. @HelloZeroNet What do you think the parameters should be used here in order to be compatible with the other `patch_all` calls in ZeroNet?", "added": 1487628844, "modified": 1487628844, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-281217925", "source_type": "github"}, {"comment_id": 85, "body": "Now it seems to be working. Stem created hidden services. I got exit node IPs. Site updating and pushing seemed to work well. I got timeout when trying to push sites to onion peers, but it might be a network latency issue.", "added": 1487630902, "modified": 1487630923, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-281222485", "source_type": "github"}, {"comment_id": 86, "body": "> I got timeout when trying to push sites to onion peers, but it might be a network latency issue.\r\n\r\n**Nope.** The fact is `createSocket` method got overridden by mistake.\r\n\r\n[Important Update - Don't override createSocket](https://github.com/HelloZeroNet/ZeroNet/pull/834/commits/ad900479f6adede20459d4e4cf6dd881db3d670a)", "added": 1487880725, "modified": 1487881504, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-282152305", "source_type": "github"}, {"comment_id": 87, "body": "> **All checks have failed**\r\n> 1 failing check\r\n\r\nBroken WebSocket connection results in a failure of [Travis CI Tests](https://travis-ci.org/HelloZeroNet/ZeroNet/builds/204786638). Is this related to StemPort plugin?\r\n\r\n```\r\nplugins/CryptMessage/Test/TestCrypt.py::TestCrypt::testPublickey PASSED\r\nplugins/CryptMessage/Test/TestCrypt.py::TestCrypt::testEcies PASSED\r\nplugins/CryptMessage/Test/TestCrypt.py::TestCrypt::testEciesUtf8 PASSED\r\nplugins/CryptMessage/Test/TestCrypt.py::TestCrypt::testEciesAes **FAILED**\r\nplugins/CryptMessage/Test/TestCrypt.py::TestCrypt::testAes PASSED\r\nplugins/CryptMessage/Test/TestCrypt.py::TestCrypt::testAesUtf8 PASSED\r\n```\r\n\r\n```\r\n        # Decrypt using AES\r\n        aes_iv, aes_encrypted = CryptMessage.split(ecies_encrypted.decode(\"base64\"))\r\n        ui_websocket.actionAesDecrypt(0, aes_iv.encode(\"base64\"), aes_encrypted.encode(\"base64\"), aes_key)\r\n\r\n>       assert ui_websocket.ws.result == \"hello\"\r\nE       assert None == 'hello'\r\nE        +  where None = <src.Test.conftest.WsMock instance at 0x7fb0d19f09e0>.result\r\nE        +    where <src.Test.conftest.WsMock instance at 0x7fb0d19f09e0> = <Plugin.PluginManager.UiWebsocket object at 0x7fb0d19d2350>.ws\r\n\r\nplugins/CryptMessage/Test/TestCrypt.py:71: AssertionError\r\n```", "added": 1487881388, "modified": 1487881388, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-282154568", "source_type": "github"}, {"comment_id": 88, "body": "I have been using it for a while. No DNS leaks, is able to receive content from and push content to Tor Network peers, and it creates onion services quickly. Could anyone test this in Whonix? @adrelanos\r\n\r\nIn making this plugin, I assume you are always using the latest version of Tor and Tor Browser.", "added": 1488042584, "modified": 1488042584, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-282508986", "source_type": "github"}, {"comment_id": 89, "body": "First download `MuxZeroNet/patch-13` branch, and go to `plugins/` folder to enable the `StemPort` plugin. (Rename `disabled-StemPort` to `StemPort`)\r\n\r\nYou can use these parameters. (I use Tor Browser)\r\n```\r\npython zeronet.py --tor always --tor_proxy 127.0.0.1:9150 --tor_controller 127.0.0.1:9151\r\n```\r\n\r\nMake sure you have `stem` installed in your system. In my environment, I just downloaded the Git HEAD version of stem, and put the `stem` folder inside `ZeroNet/src/` directory.", "added": 1488223583, "modified": 1488223583, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-282876898", "source_type": "github"}, {"comment_id": 90, "body": "The default values are 127.0.0.1:9050 (for tor_proxy) and 127.0.0.1:9051 (for tor_controller).\r\n\r\nIf it fails to connect to 127.0.0.1:9051 it starts its own Tor and tries 127.0.0.1:49051\r\n", "added": 1488925880, "modified": 1488925880, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834#issuecomment-284917594", "source_type": "github"}], "1604065794_mirrored_jaros1_github": [{"comment_id": 91, "body": "Yes, you should definitely check that option.", "added": 1488256501, "modified": 1488256501, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/838#issuecomment-282964754", "source_type": "github"}], "1604065817_mirrored_MuxZeroNet_github": [{"comment_id": 92, "body": "I created a test case to reproduce this bug:\r\nhttp://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/bugs/\r\n\r\nIf you are using an old version of ZeroNet which doesn't support file compression, you are not affected.\r\nhttps://bit.surf:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/bugs/", "added": 1488225818, "modified": 1488225818, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/843#issuecomment-282886001", "source_type": "github"}, {"comment_id": 93, "body": "Closed with this [dirty hack](https://github.com/MuxZeroNet/ZeroMux/commit/b694e018b4c4996f868eaf690c49c9ff90969f0d?diff=split#diff-532cf85ec3b656c424293aa6eeeadf9fR106).", "added": 1490759111, "modified": 1490759111, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/843#issuecomment-289998525", "source_type": "github"}], "1604065812_mirrored_JazzMaster_github": [{"comment_id": 94, "body": "[Enhancement] A choice to see the default homepage when there is news feed.", "added": 1489042588, "modified": 1489042588, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/854#issuecomment-285306733", "source_type": "github"}], "1604065815_mirrored_pmfcdb_github": [{"comment_id": 95, "body": "## Do I need to have a port opened?\r\nIt is not required, but highly recommended.\r\n\r\n## Can I get around the NAT?\r\nTor relays serve as super nodes, so enable Tor Always mode and enjoy.\r\n```\r\nzeronet.py --tor always --tor_controller 127.0.0.1:9151 --tor_proxy 127.0.0.1:9150\r\n```\r\n\r\nAlternatively, you can route ZeroNet through any working SOCKS proxy, but then you don't have open ports.\r\n```\r\nzeronet.py --tor disable --proxy 127.0.0.1:9150 --disable_udp\r\n```\r\n", "added": 1489513673, "modified": 1489513673, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/861#issuecomment-286554729", "source_type": "github"}], "1604065830_mirrored_clamever_github": [{"comment_id": 96, "body": "1. You don't need to have an open port. NAT Firewalls will not block outbound traffic.\r\n2. You should turn on Tor Always mode. See #861 or #875 or [\"How to use Pluggable Transport with ZeroNet.\"](https://zeronet.readthedocs.io/en/latest/faq/#how-to-make-tor-work-if-my-isp-or-goverment-blocks-it) in the FAQs.\r\n3. You didn't sign and publish your content, as what happened [here](https://www.reddit.com/r/zeronet/comments/61l7ku/i_create_zite_in_the_linuxthen_i_visite_the_zite/).\r\n4. In [this thread](https://bit.surf:43110/Talk.ZeroNetwork.bit/?Topic:1_16UbJDyboDaAjW5fiZouKWpPJztpt43kEj/help+me+i+can+not+publish+my+site+becuase+i+cannot+open+port+15441), Rythyrix and Kaffie already have the answer for you:\r\n> Kaffie: You should be okay. Just check your site on something like **https://bit.surf/** before you link it. If you can see it there, then you're good to go.\r\n\r\n> Rythyrix: Firewalls tend only to stop incoming traffic, not outgoing. Initial peers for your content may be hard to get, but that's what **[New ZeroNet Sites](http://127.0.0.1:43110/1LtvsjbtQ2tY7SCtCZzC4KhErqEK3bXD4n/)** is for :D Plus you can always **go to a proxy and add your zite to their node**, but try not to flood the proxy's HDD. **Be sure to advertise your site too**, otherwise no one will know it exists.\r\n\r\n5. I believe your [Chinese FAQ](https://bit.surf:43110/NewGFWTalk.bit) is much longer than the [original English FAQ](https://bit.surf:43110/Talk.ZeroNetwork.bit/?Topic:8_1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/ZeroNet+help+FAQ).", "added": 1490758321, "modified": 1490758321, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/873#issuecomment-289996222", "source_type": "github"}], "1604065832_mirrored_zohdi11_github": [{"comment_id": 97, "body": "How to use ZeroNet with Tor Browser: https://zeronet.readthedocs.io/en/latest/faq/#how-to-make-tor-work-if-my-isp-or-goverment-blocks-it\r\n\r\n```\r\nzeronet.py --tor always --tor_proxy 127.0.0.1:9150 --tor_controller 127.0.0.1:9151\r\n```\r\n\r\nor \r\n```\r\nzeronet.py --tor disable --proxy 127.0.0.1:9150 --disable_udp\r\n```\r\n\r\n", "added": 1490757298, "modified": 1490757329, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/875#issuecomment-289993418", "source_type": "github"}, {"comment_id": 98, "body": "@zohdi11 Have you tried starting ZeroNet with the parameters I mentioned above?", "added": 1491434830, "modified": 1491434830, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/875#issuecomment-292051502", "source_type": "github"}], "1604065840_mirrored_jancborchardt_github": [{"comment_id": 99, "body": "Hi, Jan-Christoph!\r\n\r\nNoFish doesn't have a smartphone. I will help you cc. this issue to @mkg20001 \r\n", "added": 1491435321, "modified": 1491435321, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/881#issuecomment-292052539", "source_type": "github"}], "1604065842_mirrored_jancborchardt_github": [{"comment_id": 100, "body": "HelloZeroNet is Tamas, Tamas is HelloZeroNet. There is only one person. :(\r\n\r\nHe is the programmer, UI designer, support, writer and spokesperson. Everyone else you see here is one from that big list of contributors who have pull requests merged into the main branch.", "added": 1491434767, "modified": 1491434767, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/882#issuecomment-292051366", "source_type": "github"}], "1604065871_mirrored_MuxZeroNet_github": [{"comment_id": 101, "body": "Why was it skipped?\r\n```\r\nsrc/Test/TestWeb.py::TestWeb::testFileSecurity SKIPPED\r\nsrc/Test/TestWeb.py::TestWeb::testLinkSecurity SKIPPED\r\n```", "added": 1491509918, "modified": 1491509918, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/884#issuecomment-292358053", "source_type": "github"}], "1604065873_mirrored_MuxZeroNet_github": [{"comment_id": 102, "body": "Some progress: https://github.com/MuxZeroNet/Fuzzing\r\n\r\nCurrently code coverage is too low. Please help us improve its code coverage! ([ZeroNet protocol spec](https://zeronet.readthedocs.io/en/latest/help_zeronet/network_protocol/)) Be creative :-]", "added": 1491801330, "modified": 1491801330, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/885#issuecomment-292880194", "source_type": "github"}], "1604065848_mirrored_MersadBuilder_github": [{"comment_id": 103, "body": "Hi, to prevent sandbox escape, you can never get the real content of an html file unless you have a correct wrapper_nonce.\r\n\r\nWhen the user goes to a URL of an HTML file:\r\n\r\nThe UI server serves a Wrapper Page:\r\n- If ZeroNet thinks it is a valid request, it will return `a page with the wrapper`. A wrapper_nonce is included in that wrapper page.\r\n- To make sure the wrapper_nonce is not given away to malicious scripts, ZeroNet checks for a valid `Accept` header, a valid `Referrer` and some other headers to make sure it is you that actually clicked on the link.\r\n- ZeroNet bans XHR requests from loading the wrapper page by removing all `Access-Control-*` headers. ZeroNet adds other security headers to make sure your browser won't load the content of the wrapper page.\r\n\r\nThe UI server serves Real HTML Page:\r\n- The JavaScript program in the wrapper page loads the real HTML page into an `<iframe>`.\r\n- When the JavaScript program shows a valid wrapper_nonce to the server, the server returns the real content of the requested HTML page.\r\n- The nonce gets deleted. Yeah, it is a nonce. It can only be used once.\r\n\r\nSo this explains what happened:\r\n```\r\n  Address bar: http://127.0.0.1:43110/Me.ZeroNetwork.bit/index.html\r\n  \r\n ------------------------------------------------------------------------------\r\n| Your browser loads the wrapper page to _top.                            (0)  |\r\n|  --------------------------------------------------------------------------  |\r\n| |                                                                          | |\r\n| | This is the inner iframe. Its src is                                     | |\r\n| | http://127.0.0.1:43110/Me.ZeroNetwork.bit/index.html?wrapper_nonce=***** | |\r\n| |                                                                          | |\r\n|  --------------------------------------------------------------------------  |\r\n|                                                                              |\r\n|                                                                              |\r\n```\r\n\r\nWhen you click **Back**\r\n```\r\n  Address bar: http://127.0.0.1:43110/Me.ZeroNetwork.bit/index.html\r\n  \r\n ------------------------------------------------------------------------------\r\n| Your browser loads the wrapper page to _top.                            (0)  |\r\n|  --------------------------------------------------------------------------  |\r\n| |                                                                          | |\r\n| | This is the inner iframe. Its src contains the old, invalid nonce.       | |\r\n| | http://127.0.0.1:43110/Me.ZeroNetwork.bit/index.html?wrapper_nonce=***** | |\r\n| |                                                                          | |\r\n| | Server: Hey! This is an invalid (used) nonce!                            | |\r\n| | I won't show you the page you requested for.                             | |\r\n| |                                                                          | |\r\n|  --------------------------------------------------------------------------  |\r\n|                                                                              |\r\n|                                                                              |\r\n```", "added": 1491588446, "modified": 1491589546, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/887#issuecomment-292652034", "source_type": "github"}, {"comment_id": 104, "body": "> and this Show more Information\r\n\r\nYes, it displays some debug information. If this is not OK for you,\r\n\r\n@HelloZeroNet We should be able to strip console debug information by modifying the MultiUser plugin. The error page on the gateways will then look like this:\r\n```\r\nServer error\r\nErr: Exception: Here is your console in UiServer.py line 83 > ...\r\nPlease report it if you think this an error.\r\n\r\nDetails:\r\n| Well, those details are hidden on this proxy. |\r\n```", "added": 1491589408, "modified": 1491589408, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/887#issuecomment-292655347", "source_type": "github"}], "1604065879_mirrored_MuxZeroNet_github": [{"comment_id": 105, "body": "https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-PhantomJS\r\n\r\nThanks for the timely PR. Travis says PhantomJS is actually pre-installed. The error disappeared. There is another issue here:\r\n```\r\nSKIP [2] /home/travis/build/HelloZeroNet/ZeroNet/src/Test/conftest.py:181: Test requires zeronet client running: [Errno socket error] [Errno 111] Connection refused\r\n```\r\n\r\nThe UI server wasn't running.", "added": 1491606549, "modified": 1491606549, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/889#issuecomment-292687930", "source_type": "github"}], "1604065922_mirrored_HelloZeroNet_github": [{"comment_id": 106, "body": "What I know about the General SOCKS failure: Tor's SOCKS proxy will throw a General SOCKS failure if you try to connect to a LAN address via the SOCKS proxy. For instance, if you route your UPnP request through Tor's SOCKS proxy, you will get a General SOCKS failure.", "added": 1491794885, "modified": 1491794885, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/893#issuecomment-292860574", "source_type": "github"}], "1604065890_mirrored_MuxZeroNet_github": [{"comment_id": 107, "body": "More detail here: https://github.com/MuxZeroNet/Fuzzing/tree/master/Fuzzing%20Log/Round%201", "added": 1491937230, "modified": 1491937230, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/896#issuecomment-293413190", "source_type": "github"}], "1604065872_mirrored_Forbo_github": [{"comment_id": 108, "body": "I submitted a false positive report to ClamAV.", "added": 1491937025, "modified": 1491937025, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-293412420", "source_type": "github"}, {"comment_id": 109, "body": "They do have an investigation process.", "added": 1491956617, "modified": 1491957676, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-293461822", "source_type": "github"}, {"comment_id": 110, "body": "I haven't had any reply from ClamAV. Perhaps someone / Tamas should contact ClamAV via their mailing list <https://www.clamav.net/contact#ml> to get a formal reply.\r\n", "added": 1492018353, "modified": 1492018718, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/904#issuecomment-293698902", "source_type": "github"}], "1604065913_mirrored_jerry-wolf_github": [{"comment_id": 111, "body": "@l5h5t7 Could you translate the new CHANGELOG to keep this file up to date?", "added": 1498364194, "modified": 1498364194, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/916#issuecomment-310887149", "source_type": "github"}], "1604065919_mirrored_MuxZeroNet_github": [{"comment_id": 112, "body": "On the Privacy mailing list, Peter Surda wrote:\r\n\r\n> Hello and thank you for the info.\r\n> \r\n> The PyElliptic code that's in PyBitmessage is a modified version of PyElliptic (i.e. a fork). I'm not aware of any issues with it, those that existed were fixed (e.g. OpenSSL 1.1 support, library locator, using a different hash algorithm). I tested it on a broad range of operating systems.\r\n> \r\n> I'll keep it for the time being as it is.\r\n> \r\n> Peter Surda  \r\n> Bitmessage core developer\r\n\r\nBitmessage developer did fork PyElliptic and fix a few bugs, but for the long term it is worth making ZeroNet work with pyca/cryptography.", "added": 1493579245, "modified": 1493579245, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/917#issuecomment-298260513", "source_type": "github"}], "1604065891_mirrored_tongxiaofeng_github": [{"comment_id": 113, "body": "This issue seems exclusive to Chinese users. Do you have government-sponsored anti-virus software installed?", "added": 1493578701, "modified": 1493578701, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/920#issuecomment-298260030", "source_type": "github"}], "1604065894_mirrored_kzshantonu_github": [{"comment_id": 114, "body": "> If anyone could tell me how to increase the global site size limit from 10mb, would be helpful. Thanks.", "added": 1493849641, "modified": 1493849641, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/922#issuecomment-299077111", "source_type": "github"}], "1604065913_mirrored_ysc3839_github": [{"comment_id": 115, "body": ":confused: This seems creepy. Please explain.", "added": 1494196401, "modified": 1494196401, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/926#issuecomment-299752076", "source_type": "github"}, {"comment_id": 116, "body": "Regarding .bit domain features, I suggest adhering to the spec of NameCoin blockchain, instead of implementing separate features in ZeroNet.", "added": 1497922064, "modified": 1497922064, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/926#issuecomment-309641496", "source_type": "github"}], "1604065908_mirrored_zcke290_github": [{"comment_id": 117, "body": "I believe it says \"Connection Refused\" #248\r\n```\r\nTorManager Tor controller connect error: [Errno 111] Connection refused\r\n```\r\n\r\nPlease run this in terminal to check if Tor is running.\r\n```\r\nsudo netstat -lpna | grep '/tor'\r\n```", "added": 1495415477, "modified": 1495415477, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/933#issuecomment-302994980", "source_type": "github"}], "1604065947_mirrored_MuxZeroNet_github": [{"comment_id": 118, "body": "I mean if an uncaught exception is thrown in the frame of `start` method, the routine gets terminated, but no traceback is printed.", "added": 1495414635, "modified": 1495414635, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/938#issuecomment-302993630", "source_type": "github"}], "1604065966_mirrored_jerry-wolf_github": [{"comment_id": 119, "body": "Whonix developers plan to put ZeroNet into their privacy-respecting operating system. They are working on a set of Tor control port firewall rules. The current rule for ZeroNet is to allow a listening port 15441. If FileServer port is to be randomized, we should discuss this issue with @adrelanos\r\n\r\nNevertheless, this is not how Internet censorship works. Changing the FileServer port will not in any sense disguise the fact that you are using ZeroNet. I believe even the worst firewall software you currently know of examines packet payload, looking for static strings. More advanced Deep Packet Inspection techniques look for statistical features such as packet length, timing patterns and netflow directions. You should read @blanu's [Dust paper](http://www.blanu.net/Dust.pdf) to learn more about these packet inspection techniques already deployed.\r\n\r\nZeroNet network protocol is not a Pluggable Transport protocol. The protocol itself is not yet \"blocking resistant,\" as Wiley puts. Without Tor, ZeroNet does not make you anonymous, either. There are a lot of research and programming to be done. I believe Tamas does not have the funding or resources to implement Pluggable Transports or to make ZeroNet protocol indistinguishable. The community do not ignore this issue, but for the time being, the community always recommend you use Tor Always mode.", "added": 1495906138, "modified": 1495906138, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/955#issuecomment-304474854", "source_type": "github"}], "1604065940_mirrored_tiferrei_github": [{"comment_id": 120, "body": "Yes, it can.\r\n```ini\r\n[global]\r\ntor_controller = 127.0.0.1:9151\r\ntor_proxy = 127.0.0.1:9150\r\n```", "added": 1496104064, "modified": 1496104064, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/958#issuecomment-304766348", "source_type": "github"}], "1604065941_mirrored_zhhij_github": [{"comment_id": 121, "body": "\r\n![MD5](https://cloud.githubusercontent.com/assets/24784041/26566717/f1052d4c-44e4-11e7-8248-9554741d588c.png)\r\n\r\nMD5 JUST WON'T DIE", "added": 1496103956, "modified": 1496103956, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/959#issuecomment-304766201", "source_type": "github"}], "1604065947_mirrored_imachug_github": [{"comment_id": 122, "body": "> exclude by filename or folder\r\n\r\nIt's just a [Regular Expression](https://en.wikipedia.org/wiki/Regular_Expression). To exclude files by extension `.mp4`:\r\n```json\r\n{\r\n    \"optional\": \"(.*\\\\.mp4)\"\r\n}\r\n```\r\nTo exclude files in a folder `updater/`:\r\n```json\r\n{\r\n    \"optional\": \"(updater/.*)\"\r\n}\r\n```\r\nTo exclude files by a filename pattern `optional_`:\r\n```json\r\n{\r\n    \"optional\": \"(optional_.*)\"\r\n}\r\n```", "added": 1497923035, "modified": 1497923035, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/961#issuecomment-309643321", "source_type": "github"}], "1604065945_mirrored_conceivable_github": [{"comment_id": 123, "body": "_Static websites_\r\n\r\nIt is perfectly fine to create static ZeroNet sites that work without JavaScript. [Static site generators](https://www.staticgen.com/) work very well in this case.\r\n\r\n_Dynamic websites_\r\n\r\nThere is no backend. Computation, if necessary, must be done on the client side. We use JavaScript (browser side) and ZeroFrame APIs (restricted Python side computation) to make dynamic sites. It is impossible to display dynamic content while keeping things decentralized without running some algorithms on the client side to handle dynamic data.\r\n\r\n_Attack vector_\r\n\r\nYes, **JavaScript is a major attack vector.** There is no extra protection except a sandbox iframe. Seriously, you should run ZeroNet in a virtual machine or in Whonix.\r\n\r\nThere are a few people asking us to implement PHP support. Keep in mind that \"backend\" code written by someone else will be executed on your computer. ZeroNet does not and will not support Flask, PHP, Node.js etc. that allows one to run totally unsandboxed code on your computer.", "added": 1496347834, "modified": 1499300607, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/962#issuecomment-305645500", "source_type": "github"}, {"comment_id": 124, "body": "Hello!\r\n\r\nEven though dynamic websites do not work without Javascript, there are a lot of static HTML websites on ZeroNet. I would like to see those static websites load when I have Javascript disabled globally. I have a few wishes.\r\n\r\no I hope the No Javascript warning could be dismissed. There is a CSS checkbox trick to accomplish this.\r\n\r\no I would like to see the inner iframe load without Javascript. Despite awkward, a page is at least readable without Javascript. Is there a particular reason why the src attribute of the inner iframe is assigned by Javascript code?\r\n\r\no I hope the developers could adopt [CSP script nonce] and [CSP script hash] to restrict inline Javascript, [harden] the sandbox and mitigate XSS attacks.\r\n\r\no I hope the developers could encourage the use of a SSH tunnel for remote access, instead of telling people to bind the Web UI to the whole Internet. This allows CSP to work.\r\n\r\no If you probe the port ~~15441~~ 43110, you will always find some misconfigured clients opening their ports to the whole Internet. This is another reason to encourage the use of SSH tunnels.\r\n\r\n\r\n[script nonce] \"Define script execution by requiring the presence of the specified nonce on script elements\"\r\nhttps://www.w3.org/TR/CSP2/#script-src-the-nonce-attribute\r\nhttps://content-security-policy.com", "added": 1499300147, "modified": 1499300462, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/962#issuecomment-313284135", "source_type": "github"}, {"comment_id": 125, "body": "> disabled js using Content Security Policy\r\n\r\nUsing the HTML/iframe sandbox to disable JS is a good idea.", "added": 1499399376, "modified": 1499399376, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/962#issuecomment-313601763", "source_type": "github"}], "1604065972_mirrored_jarodlee_github": [{"comment_id": 126, "body": ":confused:\r\n`\"HTTP_ACCEPT\": \"image/gif, image/jpeg, image/pjpeg, application/x-ms-application, application/xaml+xml, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\"`\r\n\r\n:confused: What is this...\r\n`2345Explorer/8.6.2.15747`\r\n\r\n- - -\r\n**EDIT:** OP, could you try using another browser?", "added": 1499301153, "modified": 1499399501, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/985#issuecomment-313286026", "source_type": "github"}], "1604065986_mirrored_HulaHoopWhonix_github": [{"comment_id": 127, "body": "As far as I know, ZeroNet is using these inactive cryptolibs.\r\n\r\n- [BitcoinECC](https://github.com/HurlSly/BitcoinECCPython), removal is _in progress_ as it is only used by the outdated ZeroBoard site.\r\n- [PyElliptic](https://github.com/yann2192/pyelliptic/issues/50#issuecomment-297018932), deprecated, a fork by @PeterSurda is used in ZeroNet.\r\n\r\nThese libraries are OpenSSL bindings:\r\n- PyElliptic fork\r\n- [opensslVerify](https://github.com/Bitmessage/PyBitmessage/blob/master/src/pyelliptic/openssl.py), borrowed from Bitmessage\r\n\r\nThese features use OpenSSL:\r\n- Bitcoin signature verifying (correct me if I am wrong)\r\n- ECIES encryption of ZeroMail (from PyElliptic)\r\n- AES encryption API ([unauthenticated](https://github.com/HelloZeroNet/ZeroNet/issues/412)!!)\r\n\r\nThese features should be done in OpenSSL for better performance and better security.\r\n- Python-RSA, [not in constant time](https://github.com/HelloZeroNet/ZeroNet/issues/566), currently only used for verification purposes, proving the ownership of .onion addresses.\r\n\r\n\r\n\\#UseProper[Cryptography](https://cryptography.io)\r\n\\#MakeZeroNetUpToDateAgain", "added": 1498370805, "modified": 1498370805, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/993#issuecomment-310891419", "source_type": "github"}], "1604065984_mirrored_Lucas-Developer_github": [{"comment_id": 128, "body": "To make the sandbox hard to escape, there will always be a nonce in the query string of the inner `<iframe>`. The nonce will appear invalid if you try to reload the inner `<iframe>`. If you see this, hit the reload button on the browser address bar.", "added": 1498364046, "modified": 1498364046, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/994#issuecomment-310887046", "source_type": "github"}], "1604065988_mirrored_ohboyiloveyou_github": [{"comment_id": 129, "body": "`<a href=\"http://127.0.0.1:43110/raw/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/evil.html\" target=\"_top\">Stupid mankind</a>`\r\n", "added": 1498512074, "modified": 1498512074, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/997#issuecomment-311217506", "source_type": "github"}], "1604065996_mirrored_anoadragon453_github": [{"comment_id": 130, "body": "Some files are saved in compressed form on the disk, but are not gzipped over the cable.", "added": 1499399607, "modified": 1499399607, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1004#issuecomment-313602459", "source_type": "github"}], "1604066000_mirrored_shirishag75_github": [{"comment_id": 131, "body": "Thanks for pointing this out. Do you think you can submit a pull request to fix this?", "added": 1499139586, "modified": 1499139586, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1006#issuecomment-312793280", "source_type": "github"}], "1604066040_mirrored_DaniellMesquita_github": [{"comment_id": 132, "body": "ZeroNet fetches a list of peers from the tracker every 2 hours. Your instance may be a side effect of this.\n\no A computer has a limited amount of RAM.\n\no A computer program can handle a limited number of simultaneous connections.\n\no A majority of users browse ZeroNet for only a few hours a day and shut their nodes off, so it is a good idea to ask the trackers for a new list of peers every few hours.\n\no Some trackers are known to intentionally insert fake IPs in order to confuse DMCA bots. Those 5 \"phantom\" peers might be fake IPs inserted by the trackers.\n\no ZeroNet has a \"rating\" algorithm.\n\n\n>\n> @HelloZeroNet\n> \"Thanks but there is not real security issues\" ?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, > view it on GitHub> , or > mute the thread> .\n>     ", "added": 1510597130, "modified": 1510597130, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1016#issuecomment-344061502", "source_type": "github"}], "1604066154_mirrored_ishland_github": [{"comment_id": 133, "body": "Duplicate of https://github.com/HelloZeroNet/ZeroNet/search?q=src%2FUi%2Ftemplate%2Fwrapper.html&type=Issues&utf8=%E2%9C%93 (non resolved)", "added": 1507157002, "modified": 1507157002, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1132#issuecomment-334336313", "source_type": "github"}], "1604066212_mirrored_imachug_github": [{"comment_id": 134, "body": "> \"executable\": true\r\n\r\nAn integer could be better. \"mode\": 511 (0o777) Plus a user-controlled flag to respect or ignore the mode settings.\r\n\r\nIf the file mode is set according to the content.json manifest, a file copied out of the ZeroNet/data folder could be executable or have some other weird properties. If ZeroNet were to implement this feature, there should be a flag to ignore the mode settings, and should be set by default. If you know what you are doing (hosting a Git repo, etc.) then turn it off. However, a uninformed user will leave it on, so he will not encounter strange file properties.", "added": 1511051917, "modified": 1514068064, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1158#issuecomment-345489505", "source_type": "github"}], "1604066203_mirrored_kkkkketsu_github": [{"comment_id": 135, "body": "@kkkkketsu Please provide more information so that we can track this issue.\r\n> **Observed Results:**\r\n> What happened? This could be a screenshot, a description, log output (you can send log/debug.log file to hello@zeronet.io if necessary), etc.\r\n", "added": 1510961059, "modified": 1510961059, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1169#issuecomment-345411708", "source_type": "github"}, {"comment_id": 136, "body": "If you have the log file, you can send it to the developer <hello@zeronet.io> so that he can pinpoint the issue for you.\n\n--\n0AD8 D7E9 DCD9 5A10 5BA6 A111 6CC6 5FB9 1CE3 9BB5\n\n\n    ", "added": 1512959938, "modified": 1512959938, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1169#issuecomment-350627196", "source_type": "github"}], "1604066219_mirrored_viktorstrate_github": [{"comment_id": 137, "body": "Have you tried advertising your site? :smile: ", "added": 1510960892, "modified": 1510960892, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1181#issuecomment-345411537", "source_type": "github"}], "1604066221_mirrored_jarodlee_github": [{"comment_id": 138, "body": "@imachug \r\n```\r\n\"HTTP_ACCEPT\": \"/\",\r\n\"HTTP_USER_AGENT\": \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; Touch; rv:11.0; 2345Explorer/8.8.3.16721) like Gecko\",\r\n```\r\n\r\nThis issue showed up before. Same browser.", "added": 1510960845, "modified": 1510960845, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1182#issuecomment-345411492", "source_type": "github"}], "1604066228_mirrored_lewisxy_github": [{"comment_id": 139, "body": "[tmux](https://www.youtube.com/watch?v=5iXzqN8-34E) is recommended in this case, to avoid killing the daemon process when you log out of the SSH session.", "added": 1511224485, "modified": 1511224485, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1187#issuecomment-345906823", "source_type": "github"}], "1604066258_mirrored_0polar_github": [{"comment_id": 140, "body": "As always, show your effort before opening a feature request. Don't say \"I want this\" without thinking about how to implement the said ideas. In addition, it doesn't hurt to check your grammar.\r\n\r\n> **History and log for ZeroNet site files change** - _polar posted on Dec 18, 2017_\r\n> If someone change[d] some file, other peers should be [able to] easily know **which files [were] changed** and **what the files['] previous data [were]**.\r\n>\r\n> _gitcenter \u2501 on Dec 18, 2017_\r\n> \\> File History\r\n> Git!\r\n>\r\n> _polar \u2501 on Dec 18, 2017_\r\n> I need the built-in feature. And git is low-performance for **HUGE** amount of files.\r\n>\r\n> _gitcenter \u2501 on Dec 18, 2017_\r\n> Builtin? You mean, ZeroNet? Then, there is no such feature.\r\n> Though, there may be a service in ZeroNet that offers it, but not builtin.\r\n>\r\n> _polar \u2501 on Dec 18, 2017_\r\n> A great example: https://wiki.installgentoo.com/index.php/Lainchan\r\n> > One lainon summed up the events very nicely: \"Appleman didn't bother to change credentials on the server's control panel so when he requested a password reset Kalyx got the email instead of him. Realizing he had access to the server's control panel, Kalyx decided to be a dick and erase the server entirely, thinking appleman could just restore it from back ups. Appleman in a remarkable feat of stupidity kept lainchan's back ups on the same server it was hosted on, so those got nuked at the same time as the rest of the site.\"\r\n>\r\n> Since site owner have the all power to nuke all files AND almost all user have no backup, it is important for it built-in file history.\r\n>\r\n> _gitcenter \u2501 on Dec 18, 2017_\r\n> GitHub owners can erase all data, too. Do you know a service which has no problems?\r\n>\r\n> _polar \u2501 on Dec 18, 2017_\r\n> But we have clone, right?\r\n>\r\n> _gitcenter \u2501 on Dec 18, 2017_\r\n> Which one?\r\n>\r\n> _polar \u2501 on Dec 18, 2017_\r\n> Normal git.\r\n> If a git repo erase all data and push to remote server, we still have local copy.\r\n>\r\n> _gitcenter \u2501 on Dec 18, 2017_\r\n> What stops you from using Git for ZeroNet?\r\n>\r\n> _polar \u2501 on Dec 18, 2017_\r\n> No, I can use git on my site. But I want apply this feature on all site.\r\n>\r\n> _gitcenter \u2501 on Dec 18, 2017_\r\n> So you basically want a backup system?\r\n>\r\n> _polar \u2501 on Dec 18, 2017_\r\n> I don't use time-based job scheduler. Full-scan / full-copy all file in `/data` is low-performance.\r\n> I monitor file change: when file change, I copy the changed file to mirror folder, and mirror folder stored all old version of files since I start seeding)\r\n> But I ~~can~~ can't get the history data before I seeding, other peers can't easily read my mirror.\r\n>\r\n> _gitcenter \u2501 on Dec 18, 2017_\r\n> In git, you can force-push. You can deny force-push, but only on remote server. On ZeroNet, there is no server. So you cannot forbid anybody to force-push.", "added": 1514687667, "modified": 1514687667, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1211#issuecomment-354586328", "source_type": "github"}, {"comment_id": 141, "body": "OP was talking about a kind of archive system. When the publisher pushes new changes, the recipients should cache the old files for a while, and the user should be able to revert the changes, if necessary. I will break this down to two main components:\r\n\r\n1. Network protocol design\r\n2. Data storage challenges\r\n\r\n**Network protocol design**\r\n\r\nIt may be useful to locate old files via DHT (#57). To lookup an old file, use its hash digest as the key. Due to the fact that only the manifests (content.json) are signed, the old manifest must be retrieved first.\r\n\r\n**Data storage challenges**\r\n\r\nNo idea.", "added": 1514688925, "modified": 1514688925, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1211#issuecomment-354586959", "source_type": "github"}], "1604066263_mirrored_0polar_github": [{"comment_id": 142, "body": "It might be a good idea, but everyone will have to spend some money on the usernames.", "added": 1514687924, "modified": 1514687924, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1213#issuecomment-354586488", "source_type": "github"}, {"comment_id": 143, "body": "> **Namecoin-based ID provider?** - _polar posted on Nov 01, 2017_\r\n> ZeroNet Namecoin-based DNS works well, why not ID provider?\r\n>\r\n> _nofish \u2501 on Nov 01, 2017_\r\n> It could be possible, but namecoin registrations are expiring after ~1year, which is pretty unfortunate in user registrations.\r\n>\r\n> _polar \u2501 on Nov 02, 2017_\r\n> I don't care expiring. I want a decentralized name service, whatever how it is hard to use.\r\n> This is also important to stop the blaming about centralized name service.\r\n>\r\n> _p2p \u2501 on Nov 02, 2017_\r\n> if you consider blockchain, there is a P2P microblogging called _twister_, which uses blockchain for user name registry. In theory, you can build a ID provider which directly uses data of twister blockchain, so that people who register to twister can also use same name in ZeroNet. Unlike Namecoin-based ID provider, twister-based one does not charge coins to register, and names do not expire.\r\n>\r\n> _sksn \u2501 on Nov 02, 2017_\r\n> Twister is not safe to a 51% attack. It uses bitcoin-like PoW. But PoW works only with strong economic motivation only for cryptocurrencies with big market capitalization. For _small chains_ with _low hashrate_ the 51% attack is not theoretical it becomes practical.\r\n>\r\n> _sksn \u2501 on Nov 02, 2017_\r\n> IMO, a custom ethereum contract will be good enough for both users and zites names. It can be deployed to Ethereum or Ethereum Classic network. Or even better it is possible to create an independent private/proof-of-authority chain with [this](https://github.com/paritytech/parity/wiki/Proof-of-Authority-Chains) (Proof of Authority Chains) Partity feature. Unlike to Namecoin or Twister, Parity has a fast synchronization feature and can work as a lite client.", "added": 1514690992, "modified": 1514690992, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1213#issuecomment-354588007", "source_type": "github"}, {"comment_id": 144, "body": "\u2716 ZeroNet\n\u261e /r/Conspiracy\n\n--\n0AD8 D7E9 DCD9 5A10 5BA6 A111 6CC6 5FB9 1CE3 9BB5\n\n\n>\n> My opinion, all this crypto currency mood is a trap, a massive trap for a one world currency based on nothing.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, > view it on GitHub> , or > mute the thread> .\n>     ", "added": 1514744260, "modified": 1514744260, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1213#issuecomment-354624176", "source_type": "github"}], "1604066267_mirrored_benjin12345678_github": [{"comment_id": 145, "body": "1. Check your zip file. Does `ZeroNet-master/src/Ui/template/wrapper.html` exist?\r\n2. Check your installation. Does `ZeroNet-master/src/Ui/template/wrapper.html` exist?\r\n3. Check your anti-virus. Have you tried rebooting into \"Safe Mode\" and unpacking your zip file again?", "added": 1514068521, "modified": 1514068521, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1219#issuecomment-353759819", "source_type": "github"}], "1604066269_mirrored_ValdikSS_github": [{"comment_id": 146, "body": "The deadline is in 24 hours. @shortcutme If not started, you should start writing the application right now.", "added": 1514690525, "modified": 1514690525, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1220#issuecomment-354587776", "source_type": "github"}], "1604066287_mirrored_kofzhanganguo_github": [{"comment_id": 147, "body": "Finally we can close these duplicates. #523, #814, #920, #1132, #1219\r\n\r\nThe cause is a computer virus. @kofzhanganguo where did you download ZeroNet from?", "added": 1515101325, "modified": 1515101325, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1234#issuecomment-355439381", "source_type": "github"}], "1604066321_mirrored_tangdou1_github": [{"comment_id": 148, "body": "> proof-of-storage and proof-of-bw is really hard (impossible?)\r\n\r\nFYI, Proof of Space is possible. PoS uses hard-to-pebble graphs to ensure the prover must dedicate a certain amount of storage. It is hard to implement though. See the SpaceMint [paper](https://eprint.iacr.org/2015/528.pdf) and [source code](https://github.com/kwonalbert/spacemint).", "added": 1517071310, "modified": 1517071310, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1260#issuecomment-361009762", "source_type": "github"}], "1604066388_mirrored_MuxZeroNet_github": [{"comment_id": 149, "body": "> What is the problem we are trying to solve\r\n\r\nDAG helps keep the manifest files small. i.e. Break a large manifest file into smaller vertices and \"glue\" them together with arrows.\r\n\r\nDAG helps file archiving with minimal modification. Just make a new file and \"point\" to the older revision.\r\n\r\nLazy storage. i.e. To view a user's most recent posts, download and save manifest file `(1)` on the disk. Only when necessary, download file `(0)` to see the person's older posts.", "added": 1518481602, "modified": 1518481602, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1284#issuecomment-365139832", "source_type": "github"}], "1604066359_mirrored_guahunyo_github": [{"comment_id": 150, "body": "> [Tenda fh456 router did not open the port](https://translate.google.com/#auto/en/15441%E7%AB%AF%E5%8F%A3%E6%AD%BB%E6%B4%BB%E6%89%93%E4%B8%8D%E5%BC%80%0A%E6%9C%80%E6%96%B0%0A%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%0A%E8%85%BE%E8%BE%BEfh456%E8%B7%AF%E7%94%B1%E5%99%A8%E6%B2%A1%E5%8F%91%E5%BC%80%E7%AB%AF%E5%8F%A3)\r\n\r\n[Contact Tenda instead.](http://www.tendacn.com/en/aboutus/contact.html)", "added": 1518981174, "modified": 1518981174, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1291#issuecomment-366552674", "source_type": "github"}]}, "next_topic_id": 40, "topic": [{"topic_id": 1604065659, "title": "Fix encoding issues + IDNA support", "body": "Please test it on your own operating system and on your own locale.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483496456, "modified": 1486400227, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/735", "source_type": "github"}, {"topic_id": 1604065665, "title": "UnboundLocalError: local variable 'json_row' referenced before assignment", "body": "```\r\nSite:1MeFqF..q7nH Json merged-ZeroMe/1[...]/data/users/1[...]/content.json load error:\r\nUnboundLocalError: local variable 'json_row' referenced before assignment\r\nin SiteStorage.py line 223 > Db.py line 362\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483586039, "modified": 1486989140, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/739", "source_type": "github"}, {"topic_id": 1604065669, "title": "%2f interpreted as path separators ", "body": "Accessing\r\n```\r\nhttp://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V%2fbig/docs/\r\n```\r\nthrows a Server Error\r\n```\r\nServer error\r\nErr: AttributeError: 'NoneType' object has no attribute 'group'\r\nin UiServer.py line 81 > UiRequest.py line 80 > UiRequestPlugin.py line 22 > TranslateSitePlugin.py line 24 > UiRequest.py line 335 > UiRequestPlugin.py line 36\r\n```\r\nDetailed Information:\r\n```json\r\n\"HTTP_REFERER\": \"http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V%2fbig/docs/\", \r\n\"PATH_INFO\": \"/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/docs/\", \r\n```\r\n\r\n```html\r\n$ curl -H \"Accept: text/html\" \\\r\n  http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big%2fdocs/\r\n\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n<head>\r\n <title>ZeroBlog Lab - ZeroNet</title>\r\n <meta charset=\"utf-8\" />\r\n <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\r\n <link rel=\"stylesheet\" href=\"/uimedia/all.css?rev=1795\" />\r\n \r\n</head>\r\n<body style=\"background-color: white;\">\r\n<!-- ...... -->\r\n\r\n<!-- Site Iframe -->\r\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups \"></iframe>\r\n\r\n<!-- Site info -->\r\n<script>\r\ndocument.getElementById(\"inner-iframe\").src = \"about:blank\"\r\ndocument.getElementById(\"inner-iframe\").src = \"\\/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V\\/big\\/docs\\/\\?wrapper\\_nonce\\=005939250c59269b1c2571948336fce7d722e3dffb7cdbdd7386a7a2043962f0\"\r\naddress = \"1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V\"\r\nwrapper_nonce = \"005939250c59269b1c2571948336fce7d722e3dffb7cdbdd7386a7a2043962f0\"\r\nwrapper_key = \"6d8ca3b4f7baa67393b9f50cdbcc309bdfbeb077d503d5aad4230e487ecd099d\"\r\npostmessage_nonce_security = true\r\nfile_inner_path = \"big\\/docs\\/index\\.html\"\r\npermissions = []\r\nshow_loadingscreen = false\r\nserver_url = ''\r\n\r\nif (typeof WebSocket === \"undefined\")\r\n\tdocument.body.innerHTML += \"<div class='unsupported'>Your browser is not supported please use <a href='http://outdatedbrowser.com'>Chrome or Firefox</a>.</div>\";\r\n</script>\r\n<script type=\"text/javascript\" src=\"/uimedia/all.js?rev=1795&lang=en\"></script>\r\n\r\n</body>\r\n</html>\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483652802, "modified": 1561985813, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/741", "source_type": "github"}, {"topic_id": 1604065671, "title": "ZeroNet still seeds a site when inner iframe was not loaded.", "body": "```html\r\n<script>\r\nfunction get(url) {\r\n    var r = new XMLHttpRequest();\r\n    r.onload = function() {\r\n        console.log(r.responseText);\r\n    };\r\n    r.open(\"GET\", url);\r\n    r.send();\r\n}\r\n\r\nget(\"/13Lo9wpxbogHdaTQ9rGZruu9MJZnigzU3B/\");\r\nget(\"/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/sample-loader/files/list.json\");\r\nconsole.log(\"Request sent.\");\r\n</script>\r\n```\r\n\r\n```\r\nRequest sent.\r\n! Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://127.0.0.1:43110/13Lo9wpxbogHdaTQ9rGZruu9MJZnigzU3B/. (Reason: CORS header \u2018Access-Control-Allow-Origin\u2019 missing).\r\n```\r\n\r\nSite **still seeded** and appeared.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483656178, "modified": 1483913620, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/742", "source_type": "github"}, {"topic_id": 1604065673, "title": "Add X-Frame-Options header", "body": "**Partially** fixed #711\r\n\r\nSave this file below as `zeronet.html`:\r\n```html\r\nEscape and Seed\r\n<iframe id=\"an-iframe\" src=\"about:blank\"></iframe>\r\n<script>\r\ndocument.getElementById(\"an-iframe\").src = \"http://127.0.0.1:43110/13Lo9wpxbogHdaTQ9rGZruu9MJZnigzU3B/\"; // EmojiDay site\r\n// or any site that haven't benn saved on your computer\r\n</script>\r\n```\r\nStart `python -m SimpleHTTPServer` and go to `http://127.0.0.1:8000/zeronet.html`\r\nThe script inside the `iframe` will **escape** and redirect you to seed EmojiDay site.\r\n\r\nWith `X-Frame-Options: SAMEORIGIN` header, framing will be denied by the browser.\r\n```\r\nGET http://127.0.0.1:8000/zeronet.html\r\nGET http://127.0.0.1:43110/13Lo9wpxbogHdaTQ9rGZruu9MJZnigzU3B/\r\n\r\nLoad denied by X-Frame-Options:\r\nhttp://127.0.0.1:43110/13Lo9wpxbogHdaTQ9rGZruu9MJZnigzU3B/ does not permit cross-origin framing.\r\n```\r\n\r\nHowever, ZeroNet **still seeds** that site even when the inner iframe is not loaded by the browser. (Issue #742)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483656688, "modified": 1491796386, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/743", "source_type": "github"}, {"topic_id": 1604065681, "title": "Fix Unhandled Exception SOCKS5Error", "body": "When ZeroNet tries to route a LAN address through Tor's SOCKS5 proxy, Tor refuses to do so and sends back an error message. This error message should be handled.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483828389, "modified": 1538573388, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/748", "source_type": "github"}, {"topic_id": 1604065683, "title": "WebSocket requests not allowed", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483847831, "modified": 1491796378, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/749", "source_type": "github"}, {"topic_id": 1604065685, "title": "Detect suspicious Ajax requests", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483847980, "modified": 1538573485, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/750", "source_type": "github"}, {"topic_id": 1604065687, "title": "Only allow GET HEAD OPTIONS", "body": "Only allow GET HEAD OPTIONS to load wrapper and site media", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483913565, "modified": 1483945959, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/751", "source_type": "github"}, {"topic_id": 1604065691, "title": "Fix #752", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1483927318, "modified": 1491796371, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/753", "source_type": "github"}, {"topic_id": 1604065706, "title": "Fix extension detection", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1484187756, "modified": 1491796367, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/764", "source_type": "github"}, {"topic_id": 1604065708, "title": "Fix encoding issues", "body": "This pull request solves encoding issues only.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1484191300, "modified": 1486402873, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/765", "source_type": "github"}, {"topic_id": 1604065723, "title": "User defined content rules", "body": "Site owners can define what user content to seed, and what not to seed. We hope we can define our own rules without having to contact the site owner.\r\n```json\r\n    \"permissions\": {\r\n      \"bad@zeroid.bit\": false,\r\n      \"nofish@zeroid.bit\": { \"max_size\": 100000 }\r\n    }\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1484678976, "modified": 1583754964, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/776", "source_type": "github"}, {"topic_id": 1604065726, "title": "ZeroNet returns 500 server error when received truncated referrer ", "body": "Either this referrer policy in an HTML file\r\n```html\r\n<meta name=\"referrer\" content=\"origin-when-crossorigin\">\r\n```\r\nor this request\r\n```bash\r\ncurl 'http://127.0.0.1:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/img/avatar.png' \\\r\n     -H 'Host: 127.0.0.1:43110' -H 'Accept: */*' \\\r\n     -H 'Referer: http://127.0.0.1:43110/' -H 'Origin: null'\r\n```\r\ncan cause ZeroNet return\r\n```\r\nServer error\r\nErr: AttributeError: 'NoneType' object has no attribute 'group'\r\nin UiServer.py line 81 > UiRequest.py line 85 > UiRequest.py line 201 > UiRequestPlugin.py line 22 > TranslateSitePlugin.py line 24 > UiRequest.py line 354 > UiRequestPlugin.py line 36\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1484714001, "modified": 1491574047, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/777", "source_type": "github"}, {"topic_id": 1604065744, "title": "Downvote when peer violates localhost restriction", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1485224117, "modified": 1500661145, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/791", "source_type": "github"}, {"topic_id": 1604065747, "title": "On getFile Speed Improvement", "body": "This is an interesting but hard-to-implement idea: asking more than one peer for a big file, so file loading will not get stuck even when many peers have slow Internet.\r\n\r\n![zeronet_protocol](https://cloud.githubusercontent.com/assets/24784041/22236524/10ead87c-e1fe-11e6-8bfc-fa85328e18ab.png)\r\n\r\nWhen browser requested for a _big enough_ file, ZeroNet loads small parts of the same file form multiple peers concurrently.\r\n\r\n## Problems:\r\nSome computers in the network may have an old version of the file. We need to check for this inconsistency before marking the response as valid. (Heuristic Check)\r\n- Check if file size matches.\r\n- Add this to ~~response~~ header (Correction: should be **request** header) -  sha512sum of this file. We assume an up-to-date ZeroNet will send back an error message when checksum does not match.\r\n- Add this to ~~response~~ header (Correction: should be **request** header) - sha512sum of `content.json` that contains this file.\r\n\r\nThe hash checksum of reassembled file may still be different from what your `content.json` said. In this case, fallback to single-peer download.\r\n\r\nTo further improve this design, write your comments below.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1485229537, "modified": 1583329279, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/792", "source_type": "github"}, {"topic_id": 1604065758, "title": "Add an option to delete missing optional files via sidebar", "body": "I can choose to delete missing optional files via command line argument, but adding this option to sidebar can be even better.\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1485745554, "modified": 1485930082, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/800", "source_type": "github"}, {"topic_id": 1604065767, "title": "Pass location.hash to inner iframe?", "body": "Hello!\r\n\r\nThere is no easy way to get the `#hash` of the `top` of a page. I can set it by with `window.open` API,\r\n```js\r\nwindow.open(\"#hash\", \"_top\");\r\n```\r\nbut I am not able to get the hash. [This page](https://bit.no.com:43110/1CiDoBP8RiWziqiBGEd8tQMy66A6fmnw2V/big/docs/usage/mp4-file-format/#moov-box) doesn't work well.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1485909686, "modified": 1487257647, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/806", "source_type": "github"}, {"topic_id": 1604065773, "title": "Fix typo in login.html", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1486266798, "modified": 1491796353, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/810", "source_type": "github"}, {"topic_id": 1604065775, "title": "Add an extra header to make debugging easier", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1486267798, "modified": 1488927068, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/811", "source_type": "github"}, {"topic_id": 1604065777, "title": "UiRequest and UiPassword bugs and improvements", "body": "Some missing headers will make ZeroNet refuse to serve Web Fonts and AJAX responses. MuxZeroNet/ZeroMux#5\r\n\r\nThere are two missing headers:\r\n```\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: null\r\n```\r\n\r\nFor the Web Fonts, the original specification says Web Fonts should be fetched Anonymously, which means without Cookies and other credentials. In addition, the Referrer header of font request will be set to the URL of `.css` file. We may need to put session credential information into Referrer header or Query String.\r\n\r\nMy ideas:\r\n- Make a ZeroFrame API for getting a one-time token.\r\n- Send a 307 redirection to `.css` requests, which contain Cookie header. Redirect the request to a virtual URL that contains a one-time token. (Never tried, don't know if Referrer header will change)\r\n\r\nCons: Does not work if referrer policy is set to `no-referrer`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1486273916, "modified": 1486403283, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/812", "source_type": "github"}, {"topic_id": 1604065797, "title": "Disable insecure SSL cryptos", "body": "The default settings of `ssl` module are not considered the most secure, so Python Software Foundation wrote some [security considerations](https://docs.python.org/2/library/ssl.html#security-considerations).\r\n\r\nAccording to the security considerations, SSLv2 and SSLv3 \"are considered insecure and are therefore dangerous to use.\" The documentation provides a code snippet to disable SSLv2 and SSLv3.\r\n\r\n```python\r\ncontext = ssl.SSLContext(ssl.PROTOCOL_SSLv23)\r\ncontext.options |= ssl.OP_NO_SSLv2\r\ncontext.options |= ssl.OP_NO_SSLv3\r\n```\r\n\r\nThe current SSL patch in ZeroNet redirects `PROTOCOL_SSLv3` to `PROTOCOL_SSLv23` when SSLv3 is not available. Why not redirect `PROTOCOL_SSLv3` and `PROTOCOL_SSLv2` to `PROTOCOL_SSLv23` by default?\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1486929065, "modified": 1538690540, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/830", "source_type": "github"}, {"topic_id": 1604065801, "title": "[WIP] Porting TorManager to Stem", "body": "Use Stem if we have it", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1486937579, "modified": 1491796348, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/832", "source_type": "github"}, {"topic_id": 1604065804, "title": "[Open for more Tests] StemPort Plugin", "body": "Closes the previous Pull Request #832.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1487283520, "modified": 1491796324, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/834", "source_type": "github"}, {"topic_id": 1604065817, "title": "FilePack Pluginbug: reading files in a `folder.tar.gz` folder results in 404 not found error", "body": "```python\r\ndef actionSiteMedia(self, path, header_length=True):\r\n    # ......\r\n\r\n    match = re.match(\"^(.*\\.(?:tar.gz|tar.bz2|zip))/(.*)\", file_path)\r\n    archive_path, path_within = match.groups()\r\n    if not os.path.isfile(archive_path):\r\n        site = self.server.site_manager.get(path_parts[\"address\"])\r\n        if not site:\r\n            self.error404(path)\r\n        # Wait until file downloads\r\n        result = site.needFile(site.storage.getInnerPath(archive_path), priority=10)\r\n        # Send virutal file path download finished event to remove loading screen\r\n        site.updateWebsocket(file_done=site.storage.getInnerPath(file_path))\r\n\r\n        if not result: # XXX ignores the case in which `archive_path` is a folder XXX\r\n            return self.error404(path)\r\n    try:\r\n        file = openArchive(archive_path, path_within)\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1488042138, "modified": 1490759129, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/843", "source_type": "github"}, {"topic_id": 1604065824, "title": "Log ZeroFrame errors to terminal", "body": "What does `fileWrite error: [object Object]` mean? Don't panic. Look up the actual error message in the terminal.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1488498240, "modified": 1491796314, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/848", "source_type": "github"}, {"topic_id": 1604065829, "title": "Whoops... typo", "body": "https://github.com/HelloZeroNet/ZeroNet/blob/master/src/Ui/UiWebsocket.py#L544\r\n```python\r\n    def actionDbQuery(self, to, query, params=None, wait_for=None):\r\n        if config.debug:\r\n            s = time.time()\r\n        rows = []\r\n        try:\r\n            if not query.strip().upper().startswith(\"SELECT\"):\r\n                raise Exception(\"Only SELECT query supported\")\r\n            res = self.site.storage.query(query, params)\r\n        except Exception, err:  # Response the error to client\r\n            self.log.error(\"DbQuery error: %s\" % error) # XXX error XXX ---> err\r\n            return self.response(to, {\"error\": str(err)})\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1488746705, "modified": 1488799889, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/851", "source_type": "github"}, {"topic_id": 1604065871, "title": "Update TestWeb.py tests", "body": "", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1491509715, "modified": 1491796297, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/884", "source_type": "github"}, {"topic_id": 1604065873, "title": "Making ZeroNet ready for fuzz testing", "body": "Some codes in ZeroNet are written in Proof-of-Concept style. They are indeed very clean, but Proof-of-Concept code does not detect malicious input and report errors in a consistent manner. For example, the Web UI returns 500 server errors when it is supposed to return a 403 error. Execution of code does stop, but inconsistent output messages make automatic testing hard.\r\n\r\nWith the presence of the power of sensationalism combined with the power of trolling, any programming oversight can lead to rumor, biased representation and personal attacks, instead of solution, mitigation and plans. Given the public attention of this project, we should check for \"code quality\" by introducing more automated tests right now.\r\n\r\nThere are a few \"public doorways\" in ZeroNet. The File Server is the public doorway for anyone in the network. The web UI server is the public doorway for ZeroNet gateways. The ZeroFrame APIs are public to all potential codes a ZeroNet site can have.\r\n\r\nThese \"public doorways\" do not handle input data well. Sometimes the web UI [returns 500](https://github.com/HelloZeroNet/ZeroNet/issues/777) instead of 200 or 403. The the ZeroFrame Crypto API [raises an uncaught exception](https://github.com/HelloZeroNet/ZeroNet/blob/ee70e2f0224d1bc68565e363aa721eacd90142dc/plugins/CryptMessage/CryptMessagePlugin.py#L95) when the number parameters is unexpected.\r\n\r\nBefore we can perform future \"battle tests\" against ZeroNet, at least the error handling process of these \"public doorways\" should be improved. Error messages reported should be clear and consistent.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1491511781, "modified": 1491801330, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/885", "source_type": "github"}, {"topic_id": 1604065879, "title": "Selenium was not installed in Travis testing environment", "body": "Some Travis tests require `selenium` so that they can see what's going on inside the HTML page. These tests are skipped because you forget to pre-install `selenium` in the Travis testing box.\r\n\r\nhttps://travis-ci.org/HelloZeroNet/ZeroNet/builds/219820681\r\n```\r\nSKIP [1] /home/travis/build/HelloZeroNet/ZeroNet/src/Test/conftest.py:172:\r\nTest requires selenium + phantomjs: No module named selenium\r\n```", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1491590045, "modified": 1503139686, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/889", "source_type": "github"}, {"topic_id": 1604065890, "title": "Make sure data types are correct / expected", "body": "This pull request is a partial fix of various type assumption glitches in ZeroNet.\r\n\r\nThese corrections are made as response to a very simple fuzz testing I conducted against FileServer. (I will write about the fuzz testing soon.) That 15441 port is open to everyone in the network, so it's better to be conservative.\r\n\r\nI also make it distinguish between detected errors and unexpected errors. By making a distinction between detected errors and unexpected errors, logging noise is reduced, and more important error logs can be seen easier.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1491797436, "modified": 1491937230, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/896", "source_type": "github"}, {"topic_id": 1604065919, "title": "PyElliptic is officially deprecated. Consider using another crypto library.", "body": "Yann [announced](https://github.com/yann2192/pyelliptic/issues/50#issuecomment-297018932) that PyElliptic is officially **deprecated**.\r\n\r\nPlease consider using another wrapper or crypto library, such as [pyOpenSSL](https://pypi.python.org/pypi/pyOpenSSL), [cryptography](https://cryptography.io/en/latest/), [PyNaCl](https://pynacl.readthedocs.io/) or [pySodium](https://github.com/stef/pysodium). Here is a crypto library choice discussion among Ethereum devlopers: ethereum/pydevp2p#58\r\n\r\n[pyOpenSSL](https://pypi.python.org/pypi/pyOpenSSL) - a OpenSSL wrapper library\r\n\r\n[cryptography](https://cryptography.io/en/latest/) - the famous, actively maintained Python cryptography library. If used, it needs to be included in `requirements.txt`\r\n\r\n[PyNaCl](https://pynacl.readthedocs.io/) and [pySodium](https://github.com/stef/pysodium) are both wrappers for libsodium. PyNaCl is mentioned and recommended in cryptography's documentation. The libsodium provides Curve25519 for public key encryption, Salsa20 + Poly1305 for secret key encryption, and Ed25519 for digital signatures.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1493150759, "modified": 1576399567, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/917", "source_type": "github"}, {"topic_id": 1604065941, "title": "Please update CoffeeScript to v1.12.6", "body": "Please update [CoffeeScript compiler](https://github.com/jashkenas/coffeescript) to v1.12.6", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1494908915, "modified": 1494914199, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/934", "source_type": "github"}, {"topic_id": 1604065947, "title": "Weak password warning", "body": "Weak password warning", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1495170830, "modified": 1495434959, "source_link": "https://github.com/HelloZeroNet/ZeroNet/pull/938", "source_type": "github"}, {"topic_id": 1604066011, "title": "Regular Expression Denial of Service", "body": "[ReDoS](https://en.wikipedia.org/wiki/ReDoS) turns out to be an old and classical attack. A program is vulnerable to this attack if regular expressions are controlled by user input. There are a few possible solutions:\r\n\r\n- Use a linear complexity [RegEx library](https://github.com/facebook/pyre2/).\r\n- [Timeout](https://stackoverflow.com/questions/11901328/how-to-timeout-function-in-python-timeout-less-than-a-second) a RegEx function call.\r\n- Deprecate regular expressions. Use a shell-like matching syntax `[\"updater/*\", \"*.mp4\", \"optional_*\"]`.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1497924258, "modified": 1500034673, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/989", "source_type": "github"}, {"topic_id": 1604066021, "title": "Upgrade Bundled OpenSSL", "body": "OpenSSL 1.0.2k --> [OpenSSL 1.0.2l](https://www.openssl.org/source/)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1498347344, "modified": 1498799632, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/996", "source_type": "github"}, {"topic_id": 1604066262, "title": "Use Stealth or Basic Authentication", "body": "This is a proposal.\r\n\r\nZeroNet has an \"onion pooling\" feature, creating \"fake\" identities to resist some basic fingerprinting attacks. There is a safer way to do this -- Stealth or Basic Authentication.\r\n\r\nhttps://lists.torproject.org/pipermail/tor-talk/2017-November/043797.html\r\n\r\nUse _basic_ authentication, so that you don't need to generate additional RSA keys. For basic authentication, the acceptable passwords can be the addresses of the sites which the onion service claims to be hosting.\r\n\r\n> \\>\\>\\> Hosting?\r\n> I host `addr_1`, `addr_2` and `addr_3`.\r\n> \\>\\>\\> Give me some `addr_4` stuff!\r\n> Authentication failed. Access denied.\r\n\r\nThere is certainly \"implementation overhead.\" I recommend you use the `stem` control library. Fun fact: [it does not need any dependency](https://stem.torproject.org/faq.html#does-stem-have-any-dependencies) if you don't use its fanciest features.\r\n\r\nAPI for creating these authenticated onion services: [`stem.control.Controller.create_ephemeral_hidden_service`](https://stem.torproject.org/api/control.html#stem.control.Controller.create_ephemeral_hidden_service)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1510963829, "modified": 1511010937, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1186", "source_type": "github"}, {"topic_id": 1604066362, "title": "Implement JSON API to allow easier interfacing", "body": "### Environment\r\n\r\n  * ZeroNet version: from the future\r\n  * Operating system: All\r\n\r\n### Describe the proposal:\r\n\r\nHave an JSON API server to allow easier programmatic interaction with ZeroNet.\r\ni.e. http://127.0.0.1:43110/api/sites?access_token=fcc0a328b7060b9394a0a73267c96bbb\r\n\r\n#### Steps to reproduce:\r\n\r\n  1. Define the command set you would like to implement.\r\n  2. Write some **client side** code on a piece of paper before you start implementing anything. Since hand writing takes time, if it takes a lot of writing to use the interface, you should reconsider the API design.\r\n  3. Implement the interface, so that the example client code works.\r\n  4. Add a command line option for turning it on and off.\r\n\r\n#### Benefits:\r\n\r\nDevelopers need not simulate WebSocket requests anymore. \r\n\r\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1517072324, "modified": 1517105023, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1263", "source_type": "github"}, {"topic_id": 1604066388, "title": "Use DAG for version control", "body": "Hey, ZeroNet dev!\r\n\r\nDoing version control? Consider the following _Directed Acyclic Graph_.\r\n\r\n```\r\n   (3)  (4)\r\n  \u2199    \u2199\r\n(0) \u2190 (1) \u2190 (2) \u2190 (5)\r\n```\r\n\r\nSuppose these are your ZeroMe posts. Each file contains several posts. Each file is a _vertex_. You started with file `(0)`. You wrote a lot and file `(0)` exploded. You decided to make a new file `(1)` and continue writing. Weeks later, file `(1)` became full and you made another new file `(2)`.\r\n\r\nThen you decided to edit one of your old posts and expand it a little bit. It is contained in file `(0)`. Unfortunately, your edit cannot be saved in file `(0)` because the file hit its size limit. Using a DAG, what you need to do is to\r\n\r\na) make a new file `(3)` and put your edited post there;\r\nb) delete the old post from file `(0)`;\r\nc) draw an arrow from file `(3)` to file `(0)`.\r\n\r\nEach _vertex_ has multiple arrows going in (_in degree_), but only 1 arrow going out (_out degree_).\r\n\r\nThe earliest file is a _sink_, it has no \"out\" arrow. Newer files point to older files, letting you to go back in time.\r\n\r\nYou may ask, \"what about file name conflict?\" Short answer: This is how file systems work. To keep multiple versions of the same file, all you need to do is to name them properly.\r\n\r\n```\r\nfsfs-1.pdf    Free Software, Free Society (first edition)\r\nfsfs-2.pdf    Free Software, Free Society (second edition)\r\nfsfs-3.pdf    Free Software, Free Society (third edition)\r\n```\r\n\r\nGood luck hacking DAGs and keeping manifest files small!\r\n\r\nReferences:  \r\n[Git for Computer Scientists](http://eagain.net/articles/git-for-computer-scientists/)  \r\n[Git - Basic Branching and Merging](https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging)", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1518408846, "modified": 1521707669, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1284", "source_type": "github"}]}