{"cert_user_id": "azcoppen@github", "next_topic_id": 5, "topic": [{"topic_id": 1604065045, "title": "Content Encryption", "body": "Would it be possible to store the content being served by peers in encrypted form and decrypted on the fly when it is served?\n\nPotential scenario: \n\nPeers situated in a country that favours censorship are serving up HTTP content over SSL to other clients: transmission is protected over the wire. But what happens in the case where a peer unit (laptop, PC etc - i.e. publishers) are subject to physical seizure by hostile or state actors? For example, A Zeronet site is created to share pictures of the Tiananmen square demonstrations, curated and served by Chinese nodes. Peers are identified by IP, traced through their ISP, and the equipment used to serve the content subsequently confiscated by censors.\n\nIn this case, it's highly likely that peers would be incriminated as _publishers_ of material (more severely punishable and increasingly risky), - rather than just viewers - , if identified by IP. The Tiananmen problem given above is provocative enough that even a static JPG could put a peer at risk of a criminal offence in that jurisdiction, and the recording of the IP on the network would be incriminating.\n\nHowever, if those actors managed to isolate a machine, but were unable to access the locally-stored files being served upon physical seizure, - as they were encrypted - , it would make the process harder to show what they were publishing in the first place (save for being forced to provide their private key). The HTTP server itself would need to decrypt on the fly to serve them out, obviously, but little software exists to do it.\n\nThe solution suggested here...\nhttp://stackoverflow.com/questions/4418588/webserver-on-the-fly-decrypting\n\n...is the AES provision within G-Wan:\nhttp://gwan.com/api#crypto\n\nOr would it be wiser to take a longer-form approach like Protonmail, and serve the material for decryption exclusively on the client, to avoid the possibility of compromising the private key as part of the machine seizure?\n\nIs this a realistically achievable goal that could be included on the software's roadmap at some point?\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1454284360, "modified": 1583270206, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/252", "source_type": "github"}, {"topic_id": 1604065047, "title": "OS X Homebrew Formula + Startup plist", "body": "Is it possible to package Zeronet as a Homebrew formula (e.g. service), with startup/plist entry, instead of running it at the terminal?\n\nhttps://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/Formula-Cookbook.md\nhttp://stackoverflow.com/questions/9522324/running-python-in-background-on-os-x\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1454287982, "modified": 1458071982, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/253", "source_type": "github"}, {"topic_id": 1604065050, "title": "Standalone importable Library (e.g. libzeronet)", "body": "I'd like to be able to incorporate Zeronet into other applications so they can access the network to do API calls or basic HTTP requests. Python's great, but running an exec() process in the background requires the client have the right version, and dependencies.\n\nA neat example of this is Popcorn Time, which is built in QT, Android, and iOS. Clients being able to start their own Zeronet server in the background when the app launches, and make requests across a distributed network instead of to a central API server for their data would make them much more resilient. \n\nIt would also increase the Zeronet node count - and usage - enormously. Apt, Cocoa, or Composer packages would be incredibly useful.\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1454361900, "modified": 1492191972, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/254", "source_type": "github"}, {"topic_id": 1604065060, "title": "Zeronet Node Module", "body": "How feasible would it be to package Zeronet into an NPM module, like torrent-stream? (https://github.com/mafintosh/torrent-stream)\n\nWould be very convenient to access the Zeronet network by proxy from within Node apps from a pre-packaged mod rather than just a typical GET:\n\ne.g. app.js\n\nvar zeronet = require('zeronet');\n\nvar options = {\n  host: 'somezeronetaddr.bit',\n  path: '/foo.html'\n};\n\nzeronet.get(options, function(resp){\n  resp.on('data', function(chunk){\n    //do something with chunk\n  });\n}).on(\"error\", function(e){\n  console.log(\"Got error: \" + e.message);\n});\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1454546790, "modified": 1454568621, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/261", "source_type": "github"}], "next_comment_id": 6, "comment": {"1604065045_mirrored_azcoppen_github": [{"comment_id": 1, "body": "@bashrc My understanding as well. Makes it very interesting to see how a parallel Node.js binary could be incorporated, as in the Popcorn model where they use QT's WebView.\n\n@HelloZeroNet I was curious about this as i saw the update notes on Medium. It's almost as if it would be easier to publish the site data as an encrypted archive (.zip etc), for unzipping on the mirroring peer.\n\nAnother scenario which is related occurred to me while i was explaining to a friend today how ZeroNet worked: what happens if a site being published contains objectionable material?\n\nFor example, what if someone uses the Zeronet network to create a site of child pornography? Presumably, that site could feasibly be mirrored on my computer unwittingly - unlikely, but possible, and exploitable. In that case, i am hosting a site on my computer that could have me imprisoned, without even realising it's there. Is there any way to control what material a peer is downloading, or some kind of warning/greylisting?\n", "added": 1454360863, "modified": 1454360946, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/252#issuecomment-178267528", "source_type": "github"}, {"comment_id": 2, "body": "As silly as a question as this might sound, how do i have control over what i'm seeding? And how do i explain the same thing to someone who is less technical? One of the stated design goals of Zeronet is a simple and attractive UI, but i can't see how to do that at all.\n", "added": 1454548143, "modified": 1454548143, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/252#issuecomment-179612856", "source_type": "github"}, {"comment_id": 3, "body": "Understood: the only sites you have on your local machine are the ones you visit, so the Internet history argument comes up (if its on your machine, you deliberately visited it). Who is seriously going to search through 30 data folders to see which ones they need and those they don't?\n\nHowever, that still leaves 2 scenarios:\n\na) You're a political dissident wanting to get around DNS-level censorship; your machine is confiscated, and you don't need to be a forensics specialist to know that its very simple to prove you've not only actively been viewing Falun Gong content, but now you're automatically hosting, distributing, and publishing it.\n\nb) The author of the site you're visiting (and copying onto your local) has 2 sets of content: i) the interesting bit you're wanting to read, and ii) another part not linked to that you don't know about, containing galleries of child porn.\n\nIn its current form - and i'm not knocking the project for its innovative approach - its usable if you're comfortable running Python from the command line (a very narrow audience), regularly browse through the content folders, you're not in a country with a questionable government (getting smaller by the day), and you entirely trust the hosts you're visiting (and their authors), which is totally unknowable.\n\nObviously it's alpha days, but wouldn't it be a prudent direction to include some kind of zero-knowledge mechanism, and/or some way for the network to notify peers of malicious actors?\n", "added": 1454617672, "modified": 1454617672, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/252#issuecomment-180101421", "source_type": "github"}, {"comment_id": 4, "body": "This may not be the best example, given the context, but 4 years later, here it is: https://www.thedailybeast.com/8chan-refugees-worried-theyre-downloading-child-porn-on-peer-to-peer-site-zeronet", "added": 1583270205, "modified": 1583270205, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/252#issuecomment-594238912", "source_type": "github"}], "1604065050_mirrored_azcoppen_github": [{"comment_id": 5, "body": "That doesn't seem right. In lieu of something easier like NPM, I'm looking for a static C/C++ library i can import into something like QT which is embeddable, and doesn't involve an installation of Python or the dependencies (e.g. Msgpack).\n\nOr would it be possible to do it this way, by calling the Python code from within QT?\nhttp://pythonqt.sourceforge.net/\n", "added": 1454548249, "modified": 1454548366, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/254#issuecomment-179614247", "source_type": "github"}]}}