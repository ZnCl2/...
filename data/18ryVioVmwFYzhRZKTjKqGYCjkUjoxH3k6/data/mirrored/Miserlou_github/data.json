{"cert_user_id": "Miserlou@github", "next_topic_id": 2, "topic": [{"topic_id": 1604067632, "title": "Don't Redownload Files Upon Updates // Use CRDTs For Content Updates", "body": "Hello, all!\r\n\r\nI'm just discovering this project now, but I find it extremely exciting. There are a lot of really good decisions under the hood here, and I'm looking forward to being part of this community.\r\n\r\nFrom my initial impression, there seem to be two main technical drawbacks compared to other P2P projects (though many more advantages): dependency on trackers (which is [already under discussion here](https://github.com/HelloZeroNet/ZeroNet/issues/1998) and is not a pressing issue), and the need to re-download the entire MySQL database whenever an update occurs.\r\n\r\nIt may be better to instead use [conflict free replicated data types](https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type), as used by the `dat` and Etherpad projects, to avoid the need to resend the entire MySQL database whenever services are dynamically updated.\r\n\r\nIf my understanding of how P2P MySQL replication works is wrong, then please forgive me and treat this as a documentation bug! I'd love to know more details about how updates are negotiated and propagated across a swarm. (Surely there will be conflicts if SQL statements are shared between peers?)\r\n\r\nAnyway, hello! Thanks for reading, and thanks for this project! Looking forward to contributing here and building ZeroNet services.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1573058762, "modified": 1573133530, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292", "source_type": "github"}], "next_comment_id": 5, "comment": {"1604067632_mirrored_Miserlou_github": [{"comment_id": 1, "body": "(Thank you very much for your swift replies!)\r\n\r\nAh, that's interesting, I didn't understand that. (I don't think that's explained in the documentation!)\r\n\r\nDoes that mean that the `data.json` files are redistributed in their entirety upon content change? \r\n\r\nFor instance, imagine I am hosting a video on a \"ZeroTube\" YouTube alternative. If I'm hosting a video (I assume b64 or bencoded in my `data.json` file), if I decide to change a single pixel in the video, will the entire video be redistributed to peers? If so, then a trie/CRDT system could be implemented here to make the change propagation radically more efficient. If I'm wrong, what format do updates take?\r\n\r\nThank you for holding my hand through this!\r\n", "added": 1573059714, "modified": 1573059714, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-550477252", "source_type": "github"}, {"comment_id": 2, "body": "Ah, okay! There it is. Are they just normal diff/patch format files?", "added": 1573061071, "modified": 1573061071, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-550485216", "source_type": "github"}, {"comment_id": 3, "body": "Ah. The wikipedia article is wrong then.", "added": 1573064631, "modified": 1573064631, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-550506529", "source_type": "github"}, {"comment_id": 4, "body": "I think this issue is resolved, but I still think that this should be documented somewhere.\r\n\r\nDat has this page: https://datprotocol.github.io/how-dat-works/\r\n\r\nIt'd be great if ZN could have something similar.", "added": 1573124663, "modified": 1573124663, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/2292#issuecomment-551092664", "source_type": "github"}]}}