{"cert_user_id": "kevinlondon@github", "next_topic_id": 2, "topic": [{"topic_id": 1604064937, "title": "Sanitize input around shell=True", "body": "I'm doing a search of open source projects with [Bandit](https://github.com/openstack/bandit) and came across a potential vulnerability with using `shell=True`.\n\nHere's the scan results:\n\n```\n>> Issue: subprocess call with shell=True identified, security issue.\n   Severity: High   Confidence: High\n   Location: src/Crypt/CryptConnection.py:70\n65\n66          proc = subprocess.Popen(\n67              \"%s req -x509 -newkey rsa:2048 -sha256 -batch -keyout %s/key-rsa.pem -out %s/cert-rsa.pem -nodes -config %s\" % (\n68                  self.openssl_bin, config.data_dir, config.data_dir, self.openssl_env[\"OPENSSL_CONF\"]\n69              ),\n70              shell=True, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, env=self.openssl_env\n71          )\n\n>> Issue: subprocess call with shell=True identified, security issue.\n   Severity: High   Confidence: High\n   Location: src/Crypt/CryptConnection.py:90\n87          # Create ECC privatekey\n88          proc = subprocess.Popen(\n89              \"%s ecparam -name prime256v1 -genkey -out %s/key-ecc.pem\" % (self.openssl_bin, config.data_dir),\n90              shell=True, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, env=self.openssl_env\n91          )\n\n>> Issue: subprocess call with shell=True identified, security issue.\n   Severity: High   Confidence: High\n   Location: src/Crypt/CryptConnection.py:100\n96          # Create ECC cert\n97          proc = subprocess.Popen(\n98              \"%s req -new -key %s/key-ecc.pem -x509 -nodes -out %s/cert-ecc.pem -config %s\" % (\n99                  self.openssl_bin, config.data_dir, config.data_dir, self.openssl_env[\"OPENSSL_CONF\"]),\n100             shell=True, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, env=self.openssl_env\n101         )\n```\n\nIt looks like the values for openssl_bin and openssl_env will be controlled. config.data_dir, however, could be set to anything and, as far as I know, we're not checking if it is a directory at all. The output could be crafted by a malicious user in a way that would be harmful. It may be advisable to sanitize the input by escaping it or including a mention in the docs. Here's the [Python docs on subprocess](https://docs.python.org/2/library/subprocess.html#using-the-subprocess-module) as well as a [blog post](http://kevinlondon.com/2015/07/26/dangerous-python-functions.html) I wrote about some of the dangers. \n\nThanks!\n", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1442787924, "modified": 1442848422, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/166", "source_type": "github"}]}