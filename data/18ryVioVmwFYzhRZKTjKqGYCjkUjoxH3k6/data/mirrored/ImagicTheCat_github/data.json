{"cert_user_id": "ImagicTheCat@github", "next_topic_id": 4, "topic": [{"topic_id": 1604066009, "title": "[Feature] Allow cross-origin requests for files from already downloaded zites ", "body": "Hi, \r\nif I understood correctly the CORS security is here to prevent zites from downloading other zites without user consent, but what about already downloaded zites ? To load an image currently you need to use fileGet and convert that into a data uri, which is not very efficient, where you could just allow some resources to be loaded. No idea if it's possible and if it's easy to setup.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1499776961, "modified": 1499784182, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1014", "source_type": "github"}, {"topic_id": 1604066025, "title": "[Feature] Cross-origin permissions", "body": "Following this issue https://github.com/HelloZeroNet/ZeroNet/issues/1014 .\r\n\r\nZeroNet is about the users and their control, so it could be interesting like for the merger feature to be able to ask the user to allow cross-origin requests (and fileGet access) for a specific external zite (a permission).\r\n\r\nI think this could be a good compromise instead of disabling completely the cross-origin requests, even if this will not allow too many CORS to be done.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1500219228, "modified": 1501155667, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026", "source_type": "github"}, {"topic_id": 1604066317, "title": "[Suggestion] API to freeze specific files (prevent deletion or modification)", "body": "In some cases and particularly with Big Files, you would want to prevent the deletion of a user file or even a zite file. For example, if you seed a useful 2go image file and suddenly the user who posted it remove it, you will completely lose the file. I think even if the zite is deleted by the owner (ex: private-key compromised, all data removed), you should be able to prevent update/deletion of some files. \r\n\r\nImplementation-wise, each file indexed in content.json could have a \"frozen\" flag, but no idea about how ZeroNet will share the files between peers if they are locked at a specific version in time (and I don't know if content.json files can be \"customized\" locally). \r\nUse case: for a zite like ZeroUp, every file you seed could be frozen by default.\r\n\r\nI know there are suggestions about versioning, but you can use tools like rdiff-backup if you really want to backup a zite. It's more about trusting your files from not being deleted, as you'd expect with things like torrent.", "parent_topic_uri": "1604062980_users_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di", "added": 1516621313, "modified": 1516668695, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1256", "source_type": "github"}], "next_comment_id": 7, "comment": {"1604066025_mirrored_ImagicTheCat_github": [{"comment_id": 1, "body": "I agree that allowing all cross-site access with a single option is not the way, but instead you could have a list of accepted origins able to request the content. This is far less flexible than a permission asked directly to the user, where no sites would require any static configuration and could just ask for things as soon as they need it. The permission request is also interesting because it will confirm that the user agree to download the requested site, making things easier to understand.", "added": 1500286207, "modified": 1500286280, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-315750807", "source_type": "github"}, {"comment_id": 2, "body": "Yeah, it's not really a solution. But why not doing something hybrid, like, you have the permission system to request access to a site (download, full cross-origin requests, remote fileGet) and a set of white-list rules (paths) in the configuration of the target site. So if the site owner doesn't allow any path, no cross-origin is possible. If the user doesn't allow it in the first place too, no cross-origin possible. So users can browse without too much headache, if they don't fully trust a site they can still allow the cross-origin requests if they trust the requested site. I don't know if this could even allow iframe to embed contents, following a \"/embed\" subdirectory rule.", "added": 1500287236, "modified": 1500287264, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-315755067", "source_type": "github"}, {"comment_id": 3, "body": "Not it's a \"and\" not a \"or\", the site owner should allow some path and the user should allow access/download the site. But of course the most important feature is on the user side.", "added": 1500289663, "modified": 1500289663, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-315766313", "source_type": "github"}, {"comment_id": 4, "body": "Thanks, will test this as soon as I can.", "added": 1500470015, "modified": 1500470015, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1026#issuecomment-316438075", "source_type": "github"}], "1604066317_mirrored_ImagicTheCat_github": [{"comment_id": 5, "body": "With a sub-option or a pinned mode (frozen/unfrozen) ? \r\n", "added": 1516627908, "modified": 1516627908, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1256#issuecomment-359482274", "source_type": "github"}, {"comment_id": 6, "body": "But you would still be able to update their content (corrupt/resize/delete the data) ?\r\n\r\nEdit: I think this is a cool feature, don't know if it's possible with big files (if the file is deleted when the piecemap change or not), it allows to update big files and only the differences would be sent (doing something similar to projects like zsync but natively, which is amazing). But it's a powerful feature, if you seed a song file and listen to it regularly, the song could be completely different from the last time. You can accept to fully trust the owner of the file, but bigger is the file, seeding it shows your determination to  preserve its existence and integrity; you would want to upload it yourself to be sure that the owner will not mess with it, failing the idea of sharing the same file. \r\nOr maybe the concept of ownership of ZeroNet is not very suited for this kind of behavior, you can only trust owners to not modify the files.", "added": 1516665975, "modified": 1516668695, "source_link": "https://github.com/HelloZeroNet/ZeroNet/issues/1256#issuecomment-359660113", "source_type": "github"}]}}