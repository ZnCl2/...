{
	"posts": [
		{
			"id": "c142e7fe-d3d7-4767-80ea-27332223c1a3",
			"directory": "users/1H5YxVHvcfKM4STjJwyjYaBe8qbPyR6EZr",
			"uri": "b",
			"thread": "7d504d48-c07a-4c41-bd76-3abffb955546",
			"body": ">>7d504d48-c07a-4c41-bd76-3abffb955546\nYou could try launching zeronet as different users and setting up a script that makes a different user and location for ports and settings each time. Like, if you use linux that is, when you launch zeronet from the command line go something like\n>useradd *insertnamehere* -G *insert main zeronet file directory access group here*\n>su *your new user here*\nThis one is to remove some duplication\n>mkdir ~/zeronet && mkdir ~/zeronet/data && ln -s *your path to your main zeronet config directory here*/zeronet.conf ~/zeronet/zeronet.conf && ln -s *your path to your main zeronet logging directory here* ~/zeronet/log/\n**Do not symbolic link the data directory as that is what stores the millchan certificate and PID file which would prevent it from launching as the second user if you did so** Then launch it as another user like so\n>zeronet --config_file ~/zeronet/zeronet.conf --ui_ip *custom ip per instance here* --ui_port *custom port here* --fileserver_port *custom port here* --fileserver_ip *custom ip here* --data_dir ~/zeronet/data/ --log_dir ~/zeronet/log/\nYou would access the custom port over however you access zeronet and then bam, two concurrent zeronet instances.  I just tested it and it works with a two running instances without the symbolic links in a one liner like so\n>mkdir ~/zeronet && mkdir ~/zeronet/log && mkdir ~/zeronet/data && zeronet --config_file ~/zeronet/zeronet.conf --ui_ip 127.0.0.0 --ui_port 10 --fileserver_port 10 --fileserver_ip 127.0.0.0 --data_dir ~/zeronet/data/ --log_dir ~/zeronet/log/\nUsing this method it wouldn't all be on one page but you could just tab through all the ZeroHello page feeds in your browser. The benfit of just tabbing through it is that you don't have to click anything if each user doesn't have very many replies in order to read it all. The only problem I could see with this is if you have five zeronet instances open that it doesn't initially seed posts properly. That and if your computer is a potatoe having all those tabs open could hurt depending on how many users/zeronet instances you have open.\nEDIT:\nIf you use hundreds of users there will be so much fucking data directory duplication you would run out of storage space unless you could do something like symbolic link the PID file and the zite content.json of your user in the data directory that changes based on the user accessing it. Because then you could trick each zeronet instance into sharing the same data directory except for the PID file and the individual user.json UID, or whatever file/directory the certificate is stored in.  You can however copy+paste the data directory between users and delete the old certificate to save yourself from having to redownload the entire millchan text every time you make another user. Just check the main instance hash for its certificate and CTRL+F all those random numbers and letters to find it and delete it after you copy and paste. Someone should make a interactive shell script of this so its easy.",
			"time": 1567283650016,
			"files": "[]",
			"last_edited": 1567285754354,
			"subject": null,
			"capcode": null
		},
		{
			"id": "aaed41ec-c8e3-4dc1-89a4-9f5d9ed3cb52",
			"directory": "users/12NPW6WLFBLVivNGqijcfktARobftfLFAN",
			"uri": "test",
			"thread": "98ac7054-15b0-4b86-a83f-eeb66c5b4dff",
			"body": "test",
			"time": 1567304027207,
			"files": "[]"
		},
		{
			"id": "33fdd16a-8cee-40df-83ba-73609ef1698e",
			"directory": "users/12NPW6WLFBLVivNGqijcfktARobftfLFAN",
			"uri": "dev",
			"thread": "b79fce8b-df0d-4ab4-a89e-4c37585aa6d1",
			"body": "Whenever I try posting a jpg or png this gets spammed in the console\n[code]\n\"Unhandled promise rejection\" ReferenceError: fetch is not defined\nStack trace:\n[369]/Si</t.prototype.getImageURL/<@http://127.0.0.1:43110/1ADQAHsqsie5PBeQhQgjcKmUu3qdPFg6aA/dist/main.zip/main.js:1:786921\nO@http://127.0.0.1:43110/1ADQAHsqsie5PBeQhQgjcKmUu3qdPFg6aA/dist/vendor.zip/vendor.js:23:123547\n[369]/Si</t.prototype.getImageURL@http://127.0.0.1:43110/1ADQAHsqsie5PBeQhQgjcKmUu3qdPFg6aA/dist/main.zip/main.js:1:786843\n[369]/Si</t.prototype.onLoad@http://127.0.0.1:43110/1ADQAHsqsie5PBeQhQgjcKmUu3qdPFg6aA/dist/main.zip/main.js:1:788443\n[369]/Si</t.prototype.createImage/n.onload@http://127.0.0.1:43110/1ADQAHsqsie5PBeQhQgjcKmUu3qdPFg6aA/dist/main.zip/main.js:1:787533\n vendor.js:23:122837\nL/</e<() vendor.js:23\nt.exports() vendor.js:35\nL/<() vendor.js:23\nm/<() vendor.js:35\nm() vendor.js:35\ns() vendor.js:35\n[/code]\nOther file types work just fine though. Posting images still works on the millchan engine just not the main zite.",
			"time": 1567955147504,
			"files": "[{\"name\":\"46b0f4b6e6d30cb91f4796c4ad7339fe271abbb8d57fcd108c1ff3260c920d9a.pdf\",\"size\":58738,\"type\":\"application/pdf\",\"original\":\"bfe5608763350434813b5c16000b7d93251e6d19.pdf\",\"directory\":\"113h7wjTR1JKk59QHygoykbe4fCxQhXJkn\"}]",
			"last_edited": 1567956015819,
			"subject": null,
			"capcode": null
		},
		{
			"id": "eefe7137-bd7a-45d5-804c-7e976e143065",
			"directory": "users/12NPW6WLFBLVivNGqijcfktARobftfLFAN",
			"uri": "dev",
			"thread": "b79fce8b-df0d-4ab4-a89e-4c37585aa6d1",
			"body": ">>b2c08819-65b6-4ed7-89c7-9fb3d9e88102\nOh you were right. There was a option that toggles the fetch api and I enabled it and now it works. Have a cute picture for your efforts.",
			"time": 1567957860326,
			"files": "[{\"name\":\"0b62c0c1975bc3e8bd08f608aa62504487850e6e4fb82cc6601ccc0db86caa00.gif\",\"thumb\":\"bd1edaf5ebfe76f0b5327b9f34afba34706515cd-thumb.jpg\",\"size\":553192,\"type\":\"image/gif\",\"original\":\"bd1edaf5ebfe76f0b5327b9f34afba34706515cd.gif\",\"directory\":\"113h7wjTR1JKk59QHygoykbe4fCxQhXJkn\"}]"
		}
	],
	"boards": [],
	"modlogs": []
}