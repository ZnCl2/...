{
	"posts": [
		{
			"id": "5703037c-0384-4ae0-8660-b42758ef7547",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "504b65b8-ea6a-4fb9-83a7-7f8ff7ad6a36",
			"body": ">>03a2a8e8-c31f-4ede-a075-570e5720b8ce\nWe'll write and upload our own free software programing into the nanobots.",
			"time": 1566929589100,
			"files": "[]"
		},
		{
			"id": "974cd764-8415-41b5-a035-0548ae7325fe",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "685d8464-0a68-4b10-bfad-e5bca5474f02",
			"body": ">>4eb55ad4-85b7-4fa5-b2c9-d5057dcb6a73\nInteresting. Yeah, apparently Freenet makes no effort to hide the IPs of the nodes. So using it would be akin to using ZeroNet without Tor or a VPN.",
			"time": 1566929654100,
			"files": "[]"
		},
		{
			"id": "111d4f2d-ad32-491c-8e8f-750299827d02",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "504b65b8-ea6a-4fb9-83a7-7f8ff7ad6a36",
			"body": ">>bb405a6b-dde8-429e-b8bd-9505a219497e\nI don't think biotech software is going to be very complex. Especially if we're talking about Ray Kurzweil-style nanobots, each one of which would have just a small microcontroller running small assembly programs.\nIf we're talking about neural interfaces then probably the most difficult aspect would be getting access to the datasets to train the models to simulate and interpret the signals used in the nervous system.\nI guess safety wouldn't be that big of a deal, since there would be failsafe systems that would block the signals if it detects they're outside of the expected parameters.",
			"time": 1566930852200,
			"files": "[]"
		},
		{
			"id": "6160f7a3-6602-4eb0-a1ba-57dce28c361f",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "504b65b8-ea6a-4fb9-83a7-7f8ff7ad6a36",
			"body": "Another problem would be that the devices are designed to only run software signed with a secret key.",
			"time": 1566930957800,
			"files": "[]"
		},
		{
			"id": "c055abbc-7770-4766-84b1-a0460fe60b94",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "685d8464-0a68-4b10-bfad-e5bca5474f02",
			"body": ">>4def72e2-b7dd-4a9c-b39b-435c9f151cbf\nI suspect they can only get a probabilistic match. That would mean they can only actually convict you if they get ahold of your computer when it has the keys in RAM, or if you give them the decryption keys.\nSounds like disk encryption software with plausible deniability and turning off the computer when in risk of being arrested would've saved that man from jail. Notice they always arrest people in public locations so you don't have enough warning, or pretend to stir up a fight outside so you get out and then they arrest you while the computer is still on. In this case the article mentions he was on a \"wi-fi network\" (so probably in public) and how they managed to get the computer while it was still on.\nOf course RAM holds its contents for a few minutes. I myself have rebooted into a different operating system, installed a program to access RAM contents, and recovered the data from it after a program crashed. But few organizations are going to have the foresight to boot a core dump software to get its contents, or even boot into the BIOS until such software is available (as long as the computer is ON, the RAM contents aren't being degraded, because the DRAM modules are getting refreshed).\nOf course, this only works when you simply pull the plug or press the reset button. If you do a proper shutdown the OS might be smart enough to take a second to overwrite memory with 0s before actually turning off the machine.",
			"time": 1566931818800,
			"files": "[]"
		},
		{
			"id": "c7d81352-451d-4a17-8307-19a3db432230",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "gg",
			"thread": "7d8cf644-834b-401b-b7ea-db3a53e40153",
			"body": ">>5c39c974-1da5-41c1-b8d5-3dbf63557969\nPic? You shouldn't have open ports when using Tor, but the software shouldn't give you a warning about it either.",
			"time": 1566931948727,
			"files": "[]"
		},
		{
			"id": "5f8af267-7275-413e-a3fc-38b17300f3ec",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "504b65b8-ea6a-4fb9-83a7-7f8ff7ad6a36",
			"body": ">>bd36e2bd-4e24-4994-a8ef-08b1a7267e0c\nYeah, sure. But that has probably less to do with the software and more to do with the hardware.\nDeep brain stimulation implants causing neurons to die is a known issue.",
			"time": 1566932100827,
			"files": "[]"
		},
		{
			"id": "aa83fdd1-b4d7-422a-a83c-3dece7f73271",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>7c3ca984-36ff-4b5c-892e-37ec6e89666d\nWhat do you mean \"outright\"? Outright when attempting to post or also when receiving posts? Because if you remove 08chan from contents.json the old messages '''don't''' show up, and we want them to show up, so removing 08chan from config.js must have a different effect than removing it from content.json for it to be a useful solution.\n>I put hours into that, it's fundamentally impossible without introducing an external (centralized) server.\nI'm not so sure. Besides proof of work, you could also have clients poll their peers and ask how many megs they have received from wanna_be_poster before accepting posts from him. And you could add captchas on top of the (PoW, seed-ratio) ssytems, so users would have to solve captchas provided by trusted nodes if they aren't able to become a trusted node themselves because of computing power or bandwidth limitations (the transmission only needs to be one-way only: trusted node provides picture+hash of the solution+sign to verify the authenticity of the package, and it can be verified by everyone else with no further interaction with the providing node).\nIn a way, the holy grail of CAPTCHAs is a challenge easy for humans to pass, and hard for computers to pass, even when having insight into the process that was used to generate the challenge. I'm not sure what meets that criteria, though. Maybe some deterministic game (for example a traveler salesman problem, a 2d scroller, a roguelike, some multiplayer game with AI opponents like a fighting game, etc) where the seed is the hash of the post's contents, and the solution is the moves performed by the player. To verify the solution to this game, all a computer would need to do is to re-play the game with the seed and the specified moves and check the highscore, but to try to solve it a computer would have to run complex AI logic. It still needs to be a game where computers are worse at it than humans even when having insight about the game's internal variables, though. Maybe a specific game could be chosen from a set of games (which could be regularly changed) according to the hash too, to provide variety and defeat bots. And the high score required could be adjusted according to the current posts per hour. So when a bot tries to get through, the required effort to post becomes harder and harder.\nAnyways, I'm not crazy enough to think any of that fancy stuff is ever goign to get implemented, but it's fun to think about it.\n>It has to do with the way certificates are enforced, added and managed in ZeroNet. \nSee my reply above. It doesn't matter how ZeroNet manages certificates. You can build your own certificate system on top of ZeroNet, while for all ZeroNet knows people are still posting with self-signed certs.\n>You simply cannot compare the computational power of a smartphone with a desktop computer.\nThen you can use the trusted peer CAPTCHA approach I outlined above (before getting into the stuff about videogames).\n>Actually I took a look at it and I think 08chan certificates don't exist anymore\nOh, damn, you're right. It doesn't give out the 0 byte warning anymore, now it tries to post with a millchan cert.\nWe should get that changed along with allowing the posting of archives and maybe compiling the version with the mute button on the catalog **whenever 08admin shows up again if he hasn't been v& already**.\n>There is nothing that keeps an attacker from either forking millchan code to disable this throttle or just doing the PoW in a better performing language then JavaScript(which would be basically any other language)\nSure, the point of the throttling would be to not choke up the user's computer, not preventing spam. But let me tell you, there's not much preventing a spam attack using ZeroID at least in principle. I can generate about say 2 certs a minute and that's just using Tor. Sure, maybe if I did it continously all the exit nodes would get throttled, but then you're breaking anonymous posting which defeats the point of having an uncensorable board, because then the police can just raid people's homes until there aren't any posters left.\n>There isn't on Tor Browser, for example. All things on TBB are computed (roughly) in constant time, to specifically avoid that kind of fingerprinting.\nWell, in that case you'd just compute at 10% of whatever Tor Browser's limit is. No big deal.\n>The problem is that that is all checked and evaluated on millchan JS, but an attacker could just construct a big data.jsons and sign them manually.\nThen they can be easily muted, because all the posts on that data.json would show up as coming from a single user. People can already easily do that with ZeroID, they just haven't done it yet.\nAnother problem with the default software is that post can be sent to the future. I found this when posting with the clock set to the wrong time lol. So a spammer, unless he's blacklisted by the site or board owner, can actually post just a single time but cause new spam posts to keep constantly app",
			"time": 1566937020742,
			"files": "[]"
		},
		{
			"id": "8ed760e9-6f87-405e-958b-c384374931e4",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">You already need to supply ZeroNet with a certificate to share the data.json so all posts would still be linked to one certificate\nYeah, the system would need the board to be able to force the generation of a self-signed cert before every post. Isn't that what the anonymous posting branch of Millchan is supposed to do?\n>Another issue with this is that scanning the data.json in JS leaves millchan wide open for DDOS attacks.\n>Imagine an attacker pumping out 10MB data.json files with (let's say) 30000 wrong signatures, every millchan instance would need to go through and verify all 30000 entries(which takes time).\nNo? You only need space for one signature. If the json node supposed to be holding the signature is larger than it's supposed to be, the user gets muted without even trying to check if the signature is valid.\nIf you're worried about the parser choking up just use a separate fixed length file for the signature stuff.\n>Now make say 100 if these data.json files and nobody would be able to use millchan again, because the JS is busy validating flood of invalid signatures.\nYou can do that already. It's just the nature of the game. At least the data.jsons without a valid associated signature would hopefully not propagate too much before the owners are completely muted.",
			"time": 1566937830015,
			"files": "[]"
		},
		{
			"id": "8a1f9083-a528-4b1f-98ca-54af247e04be",
			"directory": "users/1FuDmNBcouieQ24JV21jvSbyH3kZNh1JZr",
			"uri": "test",
			"thread": "7f0ebb7e-a8da-4efd-a75c-517ea00a4817",
			"body": "worked",
			"time": 1566937868435,
			"files": "[]"
		},
		{
			"id": "abddabfb-b8ca-4c05-8913-9e8f7d3aa35f",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "cf7bbe2b-e11b-4918-af21-15573bafba7d",
			"body": ">>cf7bbe2b-e11b-4918-af21-15573bafba7d\nLame.",
			"time": 1566938057194,
			"files": "[]"
		}
	],
	"boards": [],
	"modlogs": []
}