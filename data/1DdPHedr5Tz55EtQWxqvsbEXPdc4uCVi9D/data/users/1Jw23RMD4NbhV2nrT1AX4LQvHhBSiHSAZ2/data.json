{
	"posts": [
		{
			"id": "babe4260-b39f-4d80-99b8-d8bd51120f7b",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>efb08c94-7639-4068-a7c1-ec99d2811a3c\nGreat. Do you know why huge files can be posted to this zite when the theoretical limit seems to be 5 MB in content.json?\nAnd also, how does a zite get admin permissions to be able to run Python files like ZeroID does? Is that just hardcoded into ZeroNet?",
			"time": 1566667156209,
			"files": "[]",
			"last_edited": 1566667216409,
			"subject": null,
			"capcode": null
		},
		{
			"id": "3f9b6bd0-1de9-453c-ac76-ead66bdaaada",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "843af125-8c1f-4517-8384-e6d14c97942f",
			"body": ">>d50cd4f4-03d1-43f5-8ca6-db22c0efe543\n>But for the 90% of anons that can't even accessing zeronet is difficult enough, let alone using tools like this. \nWell, it's certainly easier than installing ZeroNet on Loonix.",
			"time": 1566667679035,
			"files": "[]"
		},
		{
			"id": "de2155fa-c7b1-4485-8c56-917137547b7a",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "v",
			"thread": "6c2239f9-50bc-4273-a79d-abe4bbffb537",
			"body": "I'm working on an Arma 3 speedrun. I'm thinking of submitting it to GTA Marathon as a \"GTA clone\" but I'm not sure I'd like the responsibility of doing it live (it's my first speedrun). **inb4 dox** What /v/ related things are you working on?",
			"time": 1566668425377,
			"files": "[]",
			"last_edited": 1566668524177,
			"subject": null,
			"capcode": null
		},
		{
			"id": "005a36fc-1eea-40cc-9ce1-963e8456f4b2",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>5969ee66-b381-4af6-b616-52aa488ef5ca\nSo the content.json inside each user folder counts as a required file?",
			"time": 1566668741977,
			"files": "[]"
		},
		{
			"id": "d70cae23-edba-45cc-b56d-9a9a50f45eda",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>4ae8a122-acf8-44df-a90f-399359461f78\nOh. So do you think someone could spam self signed user folders with 0 length data.json files? If the content.json files don't count as either required or optional, then there'd be no way to stop that, right?\nZeroID seems to have an empty permissions array btw.",
			"time": 1566669299677,
			"files": "[]"
		},
		{
			"id": "e418e707-d5d4-4f84-9493-7fbb40049bc1",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>4ae8a122-acf8-44df-a90f-399359461f78\nOh. So do you think someone could spam self signed user folders with 0 length data.json files? If the content.json files don't count as either required or optional, then there'd be no way to stop that, right?\nZeroID seems to have an empty permissions array btw.\nEdit:\nMaybe those are all the shit that's in bad_files in sites.json, so they seem to be limited by max_size (or are they rejected because they include non-zero length data.json files?). In any case, why does ZeroNet even keep that list? I guess that list will keep on growing uncontrollably every time a user tries to post with a self signed cert? It's probably related to the content.json errors people have been reporting.",
			"time": 1566669301477,
			"files": "[]",
			"last_edited": 1566669771860,
			"subject": null,
			"capcode": null
		},
		{
			"id": "0715f43c-2d74-48fe-aca5-e9589e444dda",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "v",
			"thread": "6c2239f9-50bc-4273-a79d-abe4bbffb537",
			"body": ">>a786c74e-4d74-4471-a9b9-35793488e96f\nHeh. The game takes almost 6 hours to complete, so I doubt GDQ (or a spinoff, I guess) would accept it.",
			"time": 1566669489960,
			"files": "[]"
		},
		{
			"id": "78986768-6600-46cd-b902-e0faa90a532e",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "v",
			"thread": "6c2239f9-50bc-4273-a79d-abe4bbffb537",
			"body": ">>31a4545c-0e7b-4614-8365-66ada4ecb0f5\nYeah, maybe.",
			"time": 1566669839060,
			"files": "[]"
		},
		{
			"id": "2f8c9b17-aa2d-4876-a14e-4be769169dd4",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "4933343a-4bd4-49d9-9e1c-6d3d502a1398",
			"body": ">>5d93ea20-be96-4c54-86ae-e27a22c0f785\nDoubt a famous site's devs like that one are *that* incompetent. Maybe try impersonating Googlebot?",
			"time": 1566670098077,
			"files": "[]"
		},
		{
			"id": "73715841-d6ee-47d8-8c2d-df1aab274aba",
			"directory": "users/13E1NfoEM9eYfxk3mZQTLW5qYBekTp5W7v",
			"uri": "pol",
			"thread": "c7efbd2c-9a13-4386-b72d-73436fbefd25",
			"body": ">>c7efbd2c-9a13-4386-b72d-73436fbefd25\nI've figured out how ZeroID works and will be writing the script to autogen IDs now. I'm thinking Python but if anyone wants to help in a different language I'm open to suggestions.\nI'd write a browser extension but I doubt I'll be able to manipulate arbitrary files in ZeroNet folder (which we need to), so that's probably not a possibility.",
			"time": 1566671101579,
			"files": "[{\"name\":\"1.jpg\",\"thumb\":\"c43c609548ea80395bfa5622130eb81bb943c1cf-thumb.jpg\",\"size\":119086,\"type\":\"image/jpeg\",\"original\":\"c43c609548ea80395bfa5622130eb81bb943c1cf.jpg\",\"directory\":\"1Jw23RMD4NbhV2nrT1AX4LQvHhBSiHSAZ2\"}]"
		},
		{
			"id": "956a8363-0d1b-47b3-b69e-83a8bbe0de17",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>0088866d-a270-422e-81ac-8fab942dd2aa\n>As far as I know ZeroID doesn't work as a regular decentralized zite.\n>It is just a regular server running php execs to ZeroNet to issue certificates.\n>It doesn't seem like you need any additional permissions in that case.\nActually looking into the zite's data folder the signs seem to be delivered similarly to any other zite delivers its content. All recently signed users are stuffed into a users.json which is delivered and stored as any other zite. There's some clearnet stuff going on from the javascript running on the web browser, but that can be done by any zite. The actual magic is that in ZeroID's data folder there are also two Python scripts apparently in charge of extracting the sign that belongs to you from the delivered users.json into your own personal ZeroNet install's users.json. And obviously not any zite can run Python scripts, so somehow ZeroID has some special property that makes ZeroNet allow it to run those Python scripts. **Which probably means that even if you decide not to update ZeroNet itself, there's a literal backdoor to your OS still available to the developer through updating those p2p delivered Python scripts.**\nEdit: I was indeed confused about the admin stuff, unless \"admin\" referes to two different things. ZeroID seems to actually need '''more''' than just regular admin permissions.",
			"time": 1566671631785,
			"files": "[]",
			"last_edited": 1566671753285,
			"subject": null,
			"capcode": null
		},
		{
			"id": "a28914aa-ab9f-4c1e-9863-baadfd608e23",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>d21d6871-9564-43f1-93f0-60de2d8f7976\n>They appear in that list because setting max size to 0 is a hacky way of doing this.\nSure, but like why is that list needed at all? Just do the checks every time you're offered a file, I doubt a cache like that results in any noticeable time speedup. At least I hope they don't propagate from client to client, and they just resulted from people who created non-valid data themselves trying to seed that stuff to my client **which I installed just a few hours ago**. I guess I could cross reference the list with an older install and check whether they're the same.\n>A proper way would be to use the archived key to deal with them\nCool, I'll look into that.",
			"time": 1566672032285,
			"files": "[]"
		},
		{
			"id": "dbd70202-ea3e-4029-8564-51b204f2d566",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": "So actually, the .py files seem to only be used to split the delivered users.json into a separate users_archive.json when it grows too large or something to that effect. Still, why add the capability to deliver that live (two .py scripts amounting to less than 2 KB in total) rather than shipping it with ZeroNet when the hardcoded ability for ZeroID to run them AND the code to update the private users.json from the delivered stuff (which I still haven't located) apparently is. The point about it possibly being a backdoor still stands. Glowniggerish as fuck.",
			"time": 1566672900379,
			"files": "[]",
			"last_edited": 1566673294646,
			"subject": null,
			"capcode": null
		},
		{
			"id": "18ff9c6c-a16c-4f00-986f-bd3d1bf5c223",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": "To **more or less** prove that the .py files are delivered p2p\n[code]\n{\n \"address\": \"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\",\n \"background-color\": \"#3F51B5\",\n \"description\": \"Sample trusted authorization provider\",\n \"files\": {\n  \"css/all.css\": {\n   \"sha512\": \"eee7e16e3cafaa06fd6691c12cc3156ac3cf17571e8865d6f9786612ce63442f\",\n   \"size\": 76429\n  },\n  \"data/archive.py\": {\n   \"sha512\": \"ad0818adfe413ade28e9a712f841fec70170e901bdecde9290cbc1a5abcac8b7\",\n   \"size\": 309\n  },\n  \"data/split.py\": {\n   \"sha512\": \"48754e1cc1d22603ac03b717ab2e6ad7358a290ffbeea191c35084868c1db8ed\",\n   \"size\": 1036\n  },\n  \"data/users.json\": {\n   \"sha512\": \"96cf9df8ca96361f1e1b0126072bc539bccb705e2262a54758e640682e25f6b6\",\n   \"size\": 332633\n  },\n  \"data/users_archive.json\": {\n   \"sha512\": \"78f449a0ad49db4aa3681e02e3c67c5963f8012dd286fd706dc7892979826f8c\",\n   \"size\": 2877511\n  },\n  \"img/loading.gif\": {\n   \"sha512\": \"8a42b98962faea74618113166886be488c09dad10ca47fe97005edc5fb40cc00\",\n   \"size\": 723\n  },\n  \"index.html\": {\n   \"sha512\": \"b70135721211775d98236f46e3de340f985c733f56211d4beba5c898bccbdd58\",\n   \"size\": 2732\n  },\n  \"js/all.js\": {\n   \"sha512\": \"1b3e6fa9425d9d0d6e435490dce4b0c81ab57719678691efa7f06596bf033c1f\",\n   \"size\": 394989\n  },\n  \"languages/es.json\": {\n   \"sha512\": \"3f285252ed82cc46e313af6b41d31c7d6a1938785518806cd40dcffc0d2660d5\",\n   \"size\": 1439\n  },\n  \"languages/fr.json\": {\n   \"sha512\": \"39e2c4e6d16f9b6e68aa08482b7126228e703a75c014ab0832fcfead85c62cee\",\n   \"size\": 1097\n  },\n  \"languages/pl.json\": {\n   \"sha512\": \"fbac31c75233b65c40ed8d3343046fb62296275b7ac01d80cfdccd059026b36f\",\n   \"size\": 1464\n  },\n  \"languages/zh-tw.json\": {\n   \"sha512\": \"e6d70ab3c2a21b7e2e500998bffedd0bbc16524dcb0fad760cddf5e22bd58839\",\n   \"size\": 1228\n  },\n  \"languages/zh.json\": {\n   \"sha512\": \"7c5bbff8f7e956a348b407b1f348458acebc24ab66022b57dd72170a194fa337\",\n   \"size\": 1207\n  }\n },\n \"files_optional\": {\n  \"data/certs_1.json\": {\n   \"sha512\": \"1af26b70b9973d47b1fd6c5c66eb7eef5ee03b03e32c5bbc2372faf2e7673ed2\",\n   \"size\": 878320\n  },\n  \"data/certs_10.json\": {\n   \"sha512\": \"fc161825e72156625cc7a0c056f82a1ecbaac2f3b1d5dab668920f9189d96a8e\",\n   \"size\": 876740\n  },\n  \"data/certs_11.json\": {\n   \"sha512\": \"39b5a601937a8a24b9a624a2b6190fbb20f9d755dbf46211efef6d720af6bd0d\",\n   \"size\": 874093\n  },\n  \"data/certs_12.json\": {\n   \"sha512\": \"b6427ec5c7f9c9839a07513b7cf32c87eebc3204d2200b630b071a0278ef882f\",\n   \"size\": 874676\n  },\n  \"data/certs_13.json\": {\n   \"sha512\": \"e43ccd9d8dc8d08bb836e81637b9e389e139a7d19e8006327fbe9fb037d56841\",\n   \"size\": 876184\n  },\n  \"data/certs_14.json\": {\n   \"sha512\": \"702bca0b399dd76d28e948b46a5ee16f9e07c6af760ff073e003a01dfba0209e\",\n   \"size\": 875057\n  },\n  \"data/certs_15.json\": {\n   \"sha512\": \"91a66c560fbba08989a1c0073c2ef3e552fc9003f01b51790412866c85a115dd\",\n   \"size\": 876547\n  },\n  \"data/certs_2.json\": {\n   \"sha512\": \"c67bd9960462095ce53168d9ae6bbfdba33c52022ae4cf59c194a72f82d48698\",\n   \"size\": 879295\n  },\n  \"data/certs_3.json\": {\n   \"sha512\": \"5f94833fcd2be842a3cd2c83abef723bc9aea6083ccb2d4fd27ba3e37daa4720\",\n   \"size\": 878574\n  },\n  \"data/certs_4.json\": {\n   \"sha512\": \"9c527f3e1940819047fab13e477aafbf61b3bf5181159735f9079333a079c99b\",\n   \"size\": 878624\n  },\n  \"data/certs_5.json\": {\n   \"sha512\": \"ddfe0de89f29922e7ce01c6746766479358208f12760a6f2fffabd5f4e5f0fdd\",\n   \"size\": 877180\n  },\n  \"data/certs_6.json\": {\n   \"sha512\": \"a34a62970f36075d13b057341a457f73af7c7d7e78c6f09a641ecd628949d4ab\",\n   \"size\": 878734\n  },\n  \"data/certs_7.json\": {\n   \"sha512\": \"46b54e066b0e1a980dea5f61f83b0139512da8db02e563219b689f5c4982ad35\",\n   \"size\": 877376\n  },\n  \"data/certs_8.json\": {\n   \"sha512\": \"9359b562b82d72aeff3d4b3b43bfd4585b7c4aeea7aa316280a9f6017c2bccb1\",\n   \"size\": 879008\n  },\n  \"data/certs_9.json\": {\n   \"sha512\": \"bd9d03dce8b995810ebe49d963a044a4f871e730b9c0fe4b0b8c1151d3223d02\",\n   \"size\": 879339\n  }\n },\n \"ignore\": \"(js|css)/(?!all.(js|css))\",\n \"inner_path\": \"content.json\",\n \"modified\": 1566666232.136677,\n \"optional\": \"data/certs_.*\",\n \"sign\": [\n  1074305982139164137100914599042571806598975810324464243203452333702714908036,\n  106327363836376954680548226847349508162336886546002099288783806465461640933797\n ],\n \"signers_sign\": \"G7d9tTFjHbptCSR/TDr2mA1OILLhWMtVGvKZcLIwW56ut0V+kPDgrivp+hZ7/C9IUOQ6dQzVVHKJK5XBSqm+QPw=\",\n \"signs\": {\n  \"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\": \"G8hBBB+cKefphkyqCPkYQlnhAlFaL+Wb0kJ46pauiFZ79sIzN2/xW2mAHuqQTvP+J9pzQlnjw6BE0rx5RozxHOo=\"\n },\n \"signs_required\": 1,\n \"title\": \"ZeroID\",\n \"translate\": [\n  \"js/all.js\",\n  \"index.html\"\n ],\n \"viewport\": \"width=device-width, initial-scale=1.0\",\n \"zeronet_version\": \"0.4.1\"\n}\n[/code]",
			"time": 1566673116179,
			"files": "[]"
		},
		{
			"id": "b2b0ca56-26bc-4839-b1be-878f4786f7c2",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>86eeb73f-8c43-4ad8-a2eb-29f019966fbb\n>The python scripts are not run by our machine. They are maintenance scripts that nofish uses, to clean up and split one huge json file into many small ones. That script is most likely run by the ZeroID server.\nHmm. That would make sense.\n>How ZeroID works:\nSo ZeroNet just scans zite folders for users.json files and automatically integrates the signs into the user's users.json?\n>Unless you mean the python code thing, I'm not sure what you mean.\nYeah I meant the scripts.\n>No. The only way that a zite can run python code on your machine is if it's either the update zite( you can set this in a option) or if you allowed a plugin from a zite to run on your machine.\nIs the API for that documented?\n>They do. Imagine having 2000 zites or a zite with many small files, rechecking them every time zeronet is started(or possibly more often) would be taking forever (especially on slow(HDD) computers).\nYou don't have to re-check them when ZeroNet starts up. Just when another client tries to give them to you.\n>You hope correct. But it is less that the people created non-valid data and more that the 08chan admin removed the permissions for 08chan permissions after a bunch if posts with that certificate were already made, thus making them non-valid.\nNot really. Exceptions were added for self signed certs made up to hours after the switch. So probably people who created posts after the switch.",
			"time": 1566674199709,
			"files": "[]",
			"last_edited": 1566674253109,
			"subject": null,
			"capcode": null
		},
		{
			"id": "a43cb748-8251-4b8b-81ef-37843f05b28c",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>86eeb73f-8c43-4ad8-a2eb-29f019966fbb\n>If you wanted to fully prove it you could just post the whole thing. They are signed so anyone can verify(using the zite address) that that file was at one point the real deal.\nCharacter limit.\n>Not sure why either, but it's a thing that nofish always does. You can look at pretty much any of his server side reliant zites and see the maintenance scripts. Guess he does it to make the zites easier to clone or people that can't/don't want to access github.\nYou'd need the php files anyway to set up your own CA.",
			"time": 1566674572584,
			"files": "[]"
		}
	],
	"boards": [],
	"modlogs": []
}