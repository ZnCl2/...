{
	"posts": [
		{
			"id": "d21d6871-9564-43f1-93f0-60de2d8f7976",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>0088866d-a270-422e-81ac-8fab942dd2aa\nHuh, I didn't know you posted here.\nMaybe I should check in here more often.\n>It is just a regular server running php execs to ZeroNet to issue certificates.\n>It doesn't seem like you need any additional permissions in that case.\nThis is true.\n>>e418e707-d5d4-4f84-9493-7fbb40049bc1\n**Yes, someone could do this. As far as I know there is currently now way to stop this.**\n\n>or are they rejected because they include non-zero length data.json files?\nIn all likelihood this. \n>In any case, why does ZeroNet even keep that list?\nThey appear in that list because setting max size to 0 is a hacky way of doing this. A proper way would be to use the `archived` key to deal with them.\n>It's probably related to the content.json errors people have been reporting.\nMost likely.",
			"time": 1566671564428,
			"files": "[{\"name\":\"natsunagi takaki.jpg\",\"thumb\":\"117ddbf21812b917d9da333b4ac9ed82cd6eeb27-thumb.jpg\",\"size\":36727,\"type\":\"image/jpeg\",\"original\":\"117ddbf21812b917d9da333b4ac9ed82cd6eeb27.jpg\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]"
		},
		{
			"id": "86eeb73f-8c43-4ad8-a2eb-29f019966fbb",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>956a8363-0d1b-47b3-b69e-83a8bbe0de17\nThe python scripts are not run by our machine. They are maintenance scripts that nofish uses, to clean up and split one huge json file into many small ones. That script is most likely run by the ZeroID server.\nHow ZeroID works:\n[you](your `auth_address`) -> [server] - {sign `auth_address` with ZeroID private key} - {add the signature(cert) to ZeroID} - {sing and publish the ZeroID zite} - (the certificate) -> [you]\n\nAll 'user content' is actually done server site and in general no zite needs to ask permission to add a certificate, if done for the first time.\n\n> so somehow ZeroID has some special property that makes ZeroNet allow it to run those Python scripts.\nNo. The only way that a zite can run python code on your machine is if it's either the update zite( you can set this in a option) or if you allowed a plugin from a zite to run on your machine.\n>ZeroID seems to actually need more than just regular admin permissions.\nUnless you mean the python code thing, I'm not sure what you mean.\n\n>>a28914aa-ab9f-4c1e-9863-baadfd608e23\n>I doubt a cache like that results in any noticeable time speedup.\nThey do. Imagine having 2000 zites or a zite with many small files, rechecking them every time zeronet is started(or possibly more often) would be taking forever (especially on slow(HDD) computers).\n>they just resulted from people who created non-valid data themselves trying to seed that stuff to my client\nYou hope correct. But it is less that the people created non-valid data and more that the 08chan admin removed the permissions for 08chan permissions after a bunch if posts with that certificate were already made, thus making them non-valid.\n\n>>dbd70202-ea3e-4029-8564-51b204f2d566\nNot sure why either, but it's a thing that nofish always does. You can look at pretty much any of his server side reliant zites and see the maintenance scripts. Guess he does it to make the zites easier to clone or people that can't/don't want to access github.\n\n>>18ff9c6c-a16c-4f00-986f-bd3d1bf5c223\n>more or less prove\nIf you wanted to fully prove it you could just post the whole thing. They are signed so anyone can verify(using the zite address) that that file was at one point the real deal.\n\nEdit: Actually, on the topic of the `ADMIN` permission(see [docs](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/#admin-commands) for more info). It is set in the `sites.json` file and should '''never(!)''' be given to any zites. The only ones that need that permission are ZeroHello and ZeroUpdate. Similar things go for the `NOSANDBOX` permission.",
			"time": 1566673526656,
			"files": "[{\"name\":\"nisetanaka.png\",\"thumb\":\"ae236425eb3006c472de477b9185e5ad5fb1208d-thumb.png\",\"size\":241420,\"type\":\"image/png\",\"original\":\"ae236425eb3006c472de477b9185e5ad5fb1208d.png\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]",
			"last_edited": 1566674000660,
			"subject": null,
			"capcode": null
		},
		{
			"id": "8d7ee359-db75-4155-831a-f57784a251e6",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>b2b0ca56-26bc-4839-b1be-878f4786f7c2\n>So ZeroNet just scans zite folders for users.json files and automatically integrates the signs into the user's users.json?\nNo, there is a ZeroFrame cmd to do that. It's called `certAdd` ([docs](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/#certadd)) and is called by the ZeroID zite as soon as it gets the certificate. If you don't already have a certificate associated with the zite(for example ZeroID) then the cert adding will happen without notifying the user at all, if there already was one the user will be prompted to either keep the old one or replace it with the new one.\n>Is the API for that documented?\nFor writing plugins or adding plugins using ZeroFrame? If the latter is the case you can see how it's used [here](/12pPwpQ3wSoEtvN549ZVGUpj3HejtBrX3k).\n>Just when another client tries to give them to you.\nThat comes down how files are semantically labeled in ZeroNet. There are two kinds of labels `optional` and `required`. If a file is required, that means that the zite does not work/is pointless if these files are missing(like javascript files or index.html). The zite owner can declare what files are and aren't optional/required. in case of millchan all data.json files are required and, in the eyes of your client, absolutely need to be downloaded. It's not that your ZeroNet client waits until it gets offered a data.json(this, I believe, would  the case for content.json) file by another client it actively seeks them, since they are required files.\n>So probably people who created posts after the switch.\nCould also be that some where missed. In that case it's most likely that the admin didn't remove 08chan from the config.js file(which is now config.ts) and thus 08chan certs were still generated and posts punished under that certificate.\n\n>>a43cb748-8251-4b8b-81ef-37843f05b28c\n>Character limit.\nNever mind.\n>You'd need the php files anyway to set up your own CA.\n¯\\ (ツ)/¯\n\n>>52701fc4-442f-4c47-bfe1-fd8fffea1470\n>I don't see why regular zites aren't allowed to execute this.\nHave you tested if that cmd really doesn't do anything? Documentation isn't great, it could be that it just prompts the user before opening files, much like `siteClone` does.\n\n>>df2d16d7-46e7-4fad-bdb5-4cefacd17620\n>Does anyone know what this does?\nnonce = '''n'''umber '''o'''nly used on'''ce'''\nIt basically 'authenticates' the api cmds of a zite to the zeronet client.\n\n>>224121bb-9996-4fe3-86c4-01fc6e4f1fc8\n>Maybe ZeroFrame requests it.\nPretty much. You can take a look at the source code of ZeroFrame if you want more details.",
			"time": 1566759498388,
			"files": "[{\"name\":\"caramel (caramelmilk).png\",\"thumb\":\"0eb73bc172535a53215f8572e51a9e63dff6ace5-thumb.png\",\"size\":4016563,\"type\":\"image/png\",\"original\":\"0eb73bc172535a53215f8572e51a9e63dff6ace5.png\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]"
		},
		{
			"id": "7c3ca984-36ff-4b5c-892e-37ec6e89666d",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>334a478b-6ca3-4f39-8095-933fe391851e\n>If it's removed, will the old posts still show up?\nYes, it will cause millchan to refuse 08chan certificates outright.\n\n>>7626cb97-ce75-4cfb-a461-0abbeb72eef1\n>From my experience the only thing it does is displaying a prompt to the user saying \"You don't have permission to run\".\nWell end of the line then. I also don't see why regular zites shouldn't be allowed to do that. If I had to guess the reasoning is probably to protect against ZeroNet data dir leaks. Maybe nofish will change it if asked to?\n\n>>ebc75735-4d09-4be0-bf64-d83b1cb75318\n>to have anonymous posting by default\nI put hours into that, it's fundamentally impossible without introducing an external (centralized) server. It has to do with the way certificates are enforced, added and managed in ZeroNet. Unless there are changes in the ZeroNet code base or a plugin is used (I'm currently looking into that) it is not possible at all to have anonymous posts. See [this](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/issues/view/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/8@1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC) and [this](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/issues/view/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/7@1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC) GitCenter issue for more info.\nAlso everything in >>578af4ce-e67c-4eec-beba-88aac2df531b. You simply cannot compare the computational power of a smartphone with a desktop computer.\n\n>>7c5f2c25-e40b-4eb0-bece-5a56e3a67982\n>tell people they need a ZeroID rather than the 0 byte thing that pops up now\nActually I took a look at it and I think `08chan` certificates don't exist anymore, in the update the admin seems to have just pasted the precompiled code from some anon on here **security risks on that put aside for now**. It seems that that anon didn't change the `config.ts` so the self cert key that is currently on 08chan is probably the same as millchans. Further more: `@millchan` certificates are set to be allowed in the `config.ts` but not allowed in the `user/data/content.json`. Looks like the anon just compiled the code without adjusting it for 08chan.\n\n>>2c904c54-7309-42fd-a144-d1415acfc648\n>throttling the generation at approximately 10% CPU usage\nThere is nothing that keeps an attacker from either forking millchan code to disable this throttle or just doing the PoW in a better performing language then JavaScript(which would be basically any other language)\n>I'm sure there's some way to get approximate CPU usage in javascript,\nThere isn't on Tor Browser, for example. All things on TBB are computed (roughly) in constant time, to specifically avoid that kind of fingerprinting.\n>spend a few of those tickets the software has been generating\nThe problem is that that is all checked and evaluated on millchan JS, but an attacker could just construct a big data.jsons and sign them manually.\n>you can also make a custom CA work.\n>your CA server\nI am '''strongly''' opposed to introducing centralized servers to a project which focuses on being completely decentralized.\n>You just need to create a new self-signed auth_address with createCert() before every post,\nExactly this isn't possible with the current version of ZeroNet(see the GitCenter issues I mentioned above).\n>Then other clients scan the data.json for a valid signature\nYou already need to supply ZeroNet with a certificate to share the data.json so all posts would still be linked to one certificate, so no anonymity can be gained this way. Another issue with this is that scanning the data.json in JS leaves millchan __wide__ open for DDOS attacks. Imagine an attacker pumping out 10MB data.json files with (let's say) 30000 wrong signatures, every millchan instance would need to go through and verify all 30000 entries(which takes time). Now make say 100 if these data.json files and nobody would be able to use millchan again, because the JS is busy  validating flood of invalid signatures.",
			"time": 1566932252740,
			"files": "[{\"name\":\"cotrpopor.png\",\"thumb\":\"8985a6b0065d2a6e0ae977c2e29cc42edf61d9b8-thumb.png\",\"size\":3446295,\"type\":\"image/png\",\"original\":\"8985a6b0065d2a6e0ae977c2e29cc42edf61d9b8.png\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]",
			"last_edited": 1566933339740,
			"subject": null,
			"capcode": null
		},
		{
			"id": "6adee4a1-6bd3-405c-89c8-487ea2505956",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>a9a04625-af0b-4a72-ab43-796ce7e1b489\n>I am a retarded newfag\nDon't worry about it, everyone is new at some point\n>I do think actual anonymity -that did not require any action on the users end- would have a positive effect on the size of the user base here.\nSo do I, but using the  given the structure of ZeroNet right now it can't be done... (See the GitCenter issue I mentioned in >>7c3ca984-36ff-4b5c-892e-37ec6e89666d for more info on why)",
			"time": 1566933394940,
			"files": "[{\"name\":\"sayoyonsayoyo.jpg\",\"thumb\":\"2211f63210af1269fd9069dcf18a31ccd240ff36-thumb.jpg\",\"size\":109174,\"type\":\"image/jpeg\",\"original\":\"2211f63210af1269fd9069dcf18a31ccd240ff36.jpg\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]",
			"last_edited": 1566933471840,
			"subject": null,
			"capcode": null
		},
		{
			"id": "da92eeb9-952e-460f-8601-af9a1147d1ea",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>581991d6-05c5-4a21-8704-2ff08b5327ff\n>how is the anonymous branch of Millchan supposed to work then?\nThat's the problem: It doesn't.\nIt was made about a year ago, and we very quickly ran into issues. After some more spending more time then I'm willing to admit I come to the conclusion that I cannot be done. Now the branch pretty much lies dormant until it either the issue I mentioned get's resolved or the structure of ZeroNet zites changes and we can start investigating again.\n>Some kind of ZeroNet extension is required to be installed?\nThat's something I'm looking into right now, but it doesn't really seem to be practical on a plugin level. It makes way more sense when integrated into ZeroNet code base. Nothing we can really do other then waiting for nofish to implement this. '''Politely''' asking for that feature might speed things up, though.\n\n>>1af114d9-d46a-4fb8-94b4-216288cabc36\n>It is the Tor that does anonymization.\nTor anonymizes the connections you make to other ZeroNet nodes/clients. If you want to make posts or like something on ZeroNet it requires you to sign your post/like/... with a key that only you know, to guarantee that someone else doesn't alter what you wrote. ZeroNet uses the same cryptography Bitcoin does for this. That's what's referred to here as 'certificates'. The problem is that a zite, like 08chan or millchan cannot change what key you use to sign your data, it's always the same for each zite and cannot be changed at all. This means all posts you make on for example millchan are linked together and not independent of one another(have a look at your ZeroNet data directory to see that). Think of it as having one account with a random name you use to make posts here. This makes all posts pseudonymous instead of anonymous. That however is separate from the connections between ZeroNet nodes(clients) these are still anonymized by Tor** if you are in tor always mode, that is**.\n\n>>39b2f20d-b0ab-43e8-baa0-983e0d873f74\n>on Freenet (which uses a network structure largerly similar to ZeroNet's)\nNot really, the structure of Freenet is vastly different then ZeroNet, the attack is just pretty strong (as all types of correlation attacks are). They could (and are) also used against Tor and I2P for example, however both have mechanisms in place to mitigate the effectiveness of these attacks.\n\n>>f01a2a8d-d1f6-40b6-a054-da2297547e4d\n>It's possible for a state actor to break Tor,\nIt is most likely not. The state itself relies on Tor to be secure against strong attackers.\nAll arrests(at least that I know of) connected to Tor were possible due to blatant OPSec failures of the server admin and not by breaking Tor itself. However there is a real threat to Tor in the air: Quantum computing. Since it would allow to rip off the layers of encryption if a sufficiently large portion of the tor network traffic was logged.",
			"time": 1567100965593,
			"files": "[{\"name\":\"gum (vivid garden).jpg\",\"thumb\":\"61d61382191ca9d10c70d8ce869d9fb169024490-thumb.jpg\",\"size\":149405,\"type\":\"image/jpeg\",\"original\":\"61d61382191ca9d10c70d8ce869d9fb169024490.jpg\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]"
		},
		{
			"id": "3d6bec06-a837-4d67-a267-22a512428529",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "58936217-83dd-4f42-b7ab-75479dd355dd",
			"body": ">>36f61713-ce46-42bb-90ce-e15b413d23b8\n>If I want to transfer the ability to edit posts, do I just transfer the ZeroNet/data/users.json file?\nYes.\n>And If I copy users.json, does that mean I can edit the posts without ZeroID?\nYour ZeroID is stored there.",
			"time": 1567102652737,
			"files": "[]"
		},
		{
			"id": "ed6de680-bc8a-4ebc-9210-113109b4d75a",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>08bbc795-d8db-4ebe-9e62-7ca7b1c571ea\n>so that's a pretty big difference in how it works\nNot only that but also in architecture as well. Your freenet node will not just store any content you visit, but rather get assigned/assigns itself a region of file hash it will specialize in. \nThis is how content addressing works in freenet you want a file, you hash it, look what node is proficient in that or similar hashes and ask it if it has the file or directions to other nodes that might.\nZeroNet doesn't do this.\n>it would be like shooting fish in a barrel vs trying to catch fish with your bare hands from a boat.\nDefinitely ZeroNEt without Tor provides no anonymization and identity correlation protection.\nHowever ZeroNet in Tor only mode very much does. As all communication with other peers is done through hidden services **given they are v2 hidden services and thus slightly weaker as v3 ones**, so you yourself run a hidden service through which other tor only nodes can talk to you and only talk to the hidden services of other nodes as well. \n>How are the directory servers supposed to know if any given volunteer running a node is a CIA asset?\nGenerally not a easy problem(solving that would be a general solution to sybil attacks), but you can make some educated guesses, if (for example) you find, that 300 nodes that are located within the space (location lookup by IP) of a server building that might tip you off.\n>all you would need to do would be to generate ZeroIDs and spend them on posts.\nWhy use ZeroIDs you could just make self signed ones. This way we don't rely on nofishs server being online and non-discriminatory.\n >Is he generally too anal retentive about accepting contributions?\nIn a way. For example, there was a PR for adding I2P support to zeronet by one of the I2P guys and well, this PR is still open. Nofish is reluctant to accept PRs **has gotten better, though** and appears to be avoiding the question of I2P support. I'm not sure why.\n>What's the relationship between mater_seed and auth_privatekey?\n`auth_privatekey` is derived from `master_seed` and also depends on the zite address. This way all auth keys can be recovered if you only save your `master_seed`.\n>Would master_seed be cryptographically secure\nYes the should be the same solution that's used in Bitcoin wallets to generate sub-pubkeys.\n>And you know that, how?\nTor was developed and funded by the US navy as a closed source project for secure communication.\nThe sole reason it was released and open sourced was because the anonymity guarantees only where true if a wide population ran nodes/used the network. An anonymous network ran by and only used only by spies is anything but anonymous. \nThe US government has poured a lot of money into it's continued development over the years. I believe to this day this hasn't changed.\nAs for the security from the donor faq:\n>We know that both the Russian government and the NSA have tried in the past to crack Tor, and failed.\nThis as well as the incredibly low number of tor related arrests compared with the high illegal activity on tor and the way previous arrests have played out and were made possible strongly indicate that tor, at least until now, has been secure.\n**I say this in a bit specific way, because a passive observer could log all Tor connections and break the onion layers(encryption) with a quantum computer later on.**\n>They can configure their clients to only route to US owned servers\nThey most likely won't. Correlation attacks go both ways, the routing method is random, so a observer will notice these non-random routing patterns after a while. You are only anonymous, if you're exactly the same as everyone else. Everything else is an entropy leak, that can be exploited so some extend.",
			"time": 1567447921977,
			"files": "[{\"name\":\"miyata.jpg\",\"thumb\":\"01048020cc55179801b8254629c0881b327fd564-thumb.jpg\",\"size\":130564,\"type\":\"image/jpeg\",\"original\":\"01048020cc55179801b8254629c0881b327fd564.jpg\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]",
			"last_edited": 1567449260977,
			"subject": null,
			"capcode": null
		},
		{
			"id": "60705be0-520b-4b03-b9dd-83f53053432a",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "17f22a9d-8c86-440d-a727-262dcc4af749",
			"body": ">>7779e471-caf7-4eb9-9fa2-3bf324dd6ad8\n>How? What is the function or algorithm used?\nBIP32\nSee [CryptBitcoin.py](https://github.com/HelloZeroNet/ZeroNet/blob/py3/src/Crypt/CryptBitcoin.py).`hdPrivatekey(...)`(clearnet) for more.",
			"time": 1567530061796,
			"files": "[{\"name\":\"henreader.png\",\"thumb\":\"4060553b69da9b6c8639c5200289445b35478f63-thumb.png\",\"size\":5003574,\"type\":\"image/png\",\"original\":\"4060553b69da9b6c8639c5200289445b35478f63.png\",\"directory\":\"1DfrA2M9Qra6stqT6tzwNMYNweswY54KAC\"}]"
		},
		{
			"id": "ee5719f4-f268-4dfb-9a97-9b4fa1285c87",
			"directory": "users/14r48CcSSyoNo1PNhy6uWriqpopMUfqfUX",
			"uri": "tech",
			"thread": "eea01f50-6a43-4bc1-8058-1b36327d8834",
			"body": ">>eea01f50-6a43-4bc1-8058-1b36327d8834\nFrom https://blog.torproject.org/new-release-tor-browser-907\n>We are taking this precaution until we are confident recent NoScript versions successfully block Javascript execution, by default, by working around a Firefox ESR vulnerability.",
			"time": 1585074492370,
			"files": "[]"
		}
	],
	"boards": [],
	"modlogs": []
}