{
	"next_topic_id": 4,
	"topic": [
		{
			"topic_id": 1623393278,
			"title": "Documentation : Logiciels P2P",
			"body": "Accueil\n\nBienvenue sur le Wiki de p2pfr !\n\nVous trouverez sur ces pages de la documentation sur de nombreux logiciels peer-to-peer et des sujets annexes.\n\nUtilisez le menu situé à gauche pour parcourir la liste des articles (directement sur le nom de la catégorie, ou sur le symbole [+]).\n\nSi vous souhaitez connaître le principe de fonctionnement d’un wiki, consultez la section Wiki.\n\nSi pour vous l’aventure du P2P est nouvelle, jettez un oeil à l’article Introduction au Peer-to-peer\n\nLa documentation est bien avancée mais pourrait être approfondie, motivez-nous à la compléter !\n\nBonne visite,\n\nL’équipe\n\nhttps://wiki.p2pfr.com/p2p",
			"added": 1623393277
		},
		{
			"topic_id": 1626717325,
			"title": "Telegram-FOSS",
			"body": "Telegram-FOSS Клиент с открытым исходным кодом а следовательно с надежными секретными чатами E2EE RSA\n\nTelegram is a messaging app with a focus on speed and security. It’s superfast, simple and free.\nThis is an unofficial, FOSS-friendly fork of the original Telegram App for Android.\nThis version of Telegram is available on FDroid\nhttps://github.com/Telegram-FOSS-Team/Telegram-FOSS\nhttps://github.com/Telegram-FOSS-Team/Telegram-FOSS/releases\n\nhttps://drive.google.com/file/d/1IzhuI4DTO1ao-4FgPM4gFlmTb5azLEGS/view\nhttps://drive.google.com/file/d/1CpW-K1Y-nml0fCMZSQso2QkE6eellvED/view?usp=sharing",
			"added": 1626717323
		},
		{
			"topic_id": 1635660615,
			"title": "XMPP Fan club",
			"body": "monocles chat\nis an Open Source XMPP/Jabber Messenger for Android\nhttps://f-droid.org/en/packages/de.monocles.chat/\nhttps://monocles.de/\n\nblabber.im Messenger App\nEin Jabber/XMPP Client für Android Smartphones, der für ein einzigartiges mobiles Erlebnis optimiert wurde.\nhttps://f-droid.org/en/packages/de.pixart.messenger/\nhttps://blabber.im/\n\nGajim\nhttps://gajim.org/",
			"added": 1635660612
		}
	],
	"topic_vote": {
		"1615101046_1GJGEK5WyPcNoDx6LRy22CRqwB92RzPauT": 1,
		"1570989643_1HFbnmQ8wBoYBNqZy2wVfyLg19v4WWKiK1": 1,
		"1626717325_13BPoV1vrcCrka2HVvGEFwfmVdMwe6Jk1N": 1,
		"1631033012_1PxcegJ1mKoMHeS73f9MvXeUWDq8BdnSv3": 1,
		"1635660615_13BPoV1vrcCrka2HVvGEFwfmVdMwe6Jk1N": 1
	},
	"next_comment_id": 25,
	"comment": {
		"1615101046_1GJGEK5WyPcNoDx6LRy22CRqwB92RzPauT": [
			{
				"comment_id": 1,
				"body": "Putin wanted to take Navalny into sexual slavery \nПутин хотел увести Навального в сексуальное рабство",
				"added": 1617090566
			},
			{
				"comment_id": 7,
				"body": "Putin  2032\n\nhttp://127.0.0.1:43110/149EPBN4hQRpwj5TcoPETepnoXHCUXzaCN/?watch=1623730453_13BPoV1vrcCrka2HVvGEFwfmVdMwe6Jk1N",
				"added": 1623730510
			}
		],
		"2_1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj": [
			{
				"comment_id": 2,
				"body": "Test file \n\nhttp://127.0.0.1:43110/1uPLoaDwKzP6MCGoVzw48r4pxawRBdmQc/data/users/13BPoV1vrcCrka2HVvGEFwfmVdMwe6Jk1N/1617537422-%D0%9A%D0%BD%D0%B8%D0%B3%D0%B8%20%D0%BF%D0%BE%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D0%BE%D1%81%D1%82%D0%B8.zip",
				"added": 1617537849
			},
			{
				"comment_id": 14,
				"body": "http://127.0.0.1:43110/1CiXRY9ATZSoZqBzwMfXEMsKtPRt2aQoF2/data/users/13BPoV1vrcCrka2HVvGEFwfmVdMwe6Jk1N/1627277365-dem_60fd6936928c4.png",
				"added": 1626856498
			},
			{
				"comment_id": 22,
				"body": "Fediverse\nhttps://the-federation.info/\nhttps://podupti.me/\n\nDream Search - ZeroNet Поисковик в сети Zeronet\nhttp://127.0.0.1:43110/1JBFNPrAGp1nQX6RsAN6oRqCfvtoeWoion/\n\nemule\nhttps://github.com/irwir/eMule/releases/\n\n\nShadowsocks \nhttps://shadowsocks.org/en/index.html\nhttps://github.com/shadowsocks/shadowsocks-windows/releases\n\nScuttlebutt\nhttps://github.com/ssbc/patchwork/releases\nhttps://github.com/ssbc/ssb-server/wiki/pub-servers \n\nSnappy Driver Installer Origin\nhttps://www.snappy-driver-installer.org/\n\nBiglyBT\nhttps://www.biglybt.com/\n\nMuWire\nEasy anonymous file sharing using I2P technology\nMuWire is an anonymous file-sharing program. You can share, search and download files of any type.\nhttps://muwire.com/\n\nZeroNet \nhttps://zeronet.io/\n\nRats on The Boat - BitTorrent search engine\nhttps://github.com/DEgITx/rats-search/releases\n\nRetroshare\nhttps://retroshare.cc/\n\ni2p\nhttps://geti2p.net/en/\n\nManyverse is a social network mobile app with features you would expect: posts, threads, likes, profiles, etc. But it’s not running in the cloud owned by a company, instead, your friends’ posts and all your social data live entirely in your phone. This way, even when you’re offline, you can scroll, read anything, and even write posts and like content! When your phone is back online, it syncs the latest updates directly with your friends’ phones, through a shared local Wi-Fi or on the internet.\nWe’re building this free and open source project as a community effort because we believe in non-commercial, neutral, and fair mobile communication for everyone.\nhttps://github.com/staltz/manyverse\nhttps://www.manyver.se/\n\n#ssb #Manyverse #p2p",
				"added": 1634613059
			},
			{
				"comment_id": 24,
				"body": "http://127.0.0.1:43110/149EPBN4hQRpwj5TcoPETepnoXHCUXzaCN/data/users/13BPoV1vrcCrka2HVvGEFwfmVdMwe6Jk1N/Start%20Zeronet%20Tracker%20%E8%B7%9F%E8%B8%AA%E5%99%A8.webm",
				"added": 1634810226
			}
		],
		"1570989643_1HFbnmQ8wBoYBNqZy2wVfyLg19v4WWKiK1": [
			{
				"comment_id": 3,
				"body": "ABDrm0HBKQUczTm34d7tkB9TAxR5wPylcopKNsTcJ/lfVUkCDffrVwEGRXJhc2VykwYBOKjAgNaSBlfbtF6A1gQDCfcJ",
				"added": 1619057650
			},
			{
				"comment_id": 23,
				"body": "ABDrm0HBKQUczTm34d7tkB9TAxR5wPylcopKNsTcJ/lfVUkCDffrVwEGRXJhc2VykwYBOKjAbQiSBpsB6rxtCAQD7VbO",
				"added": 1634732487
			}
		],
		"1626717325_13BPoV1vrcCrka2HVvGEFwfmVdMwe6Jk1N": [
			{
				"comment_id": 15,
				"body": "Automated Symbolic Verification of\nTelegram’s MTProto 2.0\n\nhttps://drive.google.com/file/d/1CpW-K1Y-nml0fCMZSQso2QkE6eellvED/view?usp=sharing\n\nM. Miculan, N. Vitacolonna 15\nIntegrity and authentication. Each party can be confident that the messages received\nfrom the other party are authentic if the secret chat protocol (Section 6) has been executed\ncorrectly; in particular, if the clients have validated their first session key through a secure\nchannel. Under the perfect cryptography assumption of our model it is also guaranteed that\nthe messages cannot be tampered.\n8 Conclusions\nIn this paper we have presented the formalisation of the MTProto 2.0 protocol suite in the\napplied π-calculus, and its analysis using the cryptographic protocol verifier ProVerif. This\napproach adopts the symbolic Dolev-Yao threat mode: an active intruder can intercept,\nmodify, forward, drop, replay or reflect any message. Within this model, we have provided a\nfully automated proof of the soundness of MTProto 2.0’s protocols for first authentication,\nnormal chat, end-to-end encrypted chat, and re-keying mechanisms with respect to several\nsecurity properties, including authentication, integrity, confidentiality and perfect forward\nsecrecy. These properties are verified also in presence of malicious servers. Our formalization\ncovers also the behaviour of the users, when relevant; for instance, we have proved that if\nthe users do not check the fingerprints of their shared keys, a MITM attack is possible.\nIn the light of these results, we can affirm that MTProto 2.0 does not present any logical\nflaw. Vulnerabilities can arise only from the cryptographic primitives, from implementation\nflaws (e.g. insufficient checks), from side-channels exfiltration (such as timing or traffic\nanalysis), or from incorrect user behaviour. Hence, these are the aspects which deserve\nfurther investigation and particular care in the implementation and use of this protocol.\nThe basic encryption primitive of MTProto 2.0 is assumed to be a perfect authenticated\nencryption scheme (IND-CCA and INT-CTXT). Although no attack on this scheme is known\nto date, these properties need to be formally proved in order to deem MTProto 2.0 definitely\nsecure. This proof cannot be done in a symbolic model like ProVerif’s, but it can be achieved\nin a computational model, using tools like CryptoVerif or EasyCrypt [5, 2], which we leave to\nfuture work. However, even in the very unlikely case that a flaw is found in the encryption\nscheme, the results in this paper would be still valid: the protocol could be used just by\nreplacing the encryption scheme, and no other changes would be required.\nConcerning implementation flaws, our formalisation can be used as a reference for the\ncorrect implementation of MTProto 2.0 clients (and servers). Tools like Spi2Java or FS2PV\ncan be useful to this end [4, 15]. Also, particular attention must be paid to side-channel\nattacks, such as on timing or traffic analysis. A potential issue concerning the correct\nimplementation of clients is about the fact that a server can craft malicious DH parameters,\ne.g., choosing generators that make discrete logarithms significantly easier to compute [13]\nor choosing non-primes that pass the 15-round Miller-Rabin test. To prevent the first attack,\nMTProto prescribes that clients verify that the values received from the server are valid\n(see Section 5.3). However, as far as we can see, MTProto 2.0 still suffers from the latter\nvulnerability. A possible improvement is to require clients to check the proposed primes by\nmeans of deterministic primality algorithms, such as AKS and Lenstra-Pomerance [1, 14].\nCorrect user behaviour is crucial in order to prevent MITM attacks in secret chats. As\nwe have seen, to this end users must check the fingerprint of their authorization keys through\nan external safe channel (actually, this issue concerns not only MTProto 2.0 but any protocol\nwhose keys are defined by means of an insecure DH exchange—including the Signal protocol.)\nHowever, it is plausible that in practice such checks are rarely performed, or are performed\nthrough the very same (supposedly secure) chat. Hence, users seriously concerned about\nprivacy must be educated about the correct procedure to follow.",
				"added": 1626925933
			}
		]
	},
	"comment_vote": {}
}