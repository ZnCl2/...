{
	"next_topic_id": 8,
	"topic": [
		{
			"topic_id": 1526239496,
			"title": "How to deal with very big databases on ZeroNet?",
			"body": "What if my site needs a big database (let's say > 1GB of json data) to function?\nNoone would download integrally such a big amount of data locally.\nIs it possible to distribute it someway (e.g. in a DHT) or, more generally, what is the suggested way to deal with that?",
			"added": 1526239495
		},
		{
			"topic_id": 1527693186,
			"title": "How does the update of cloned sites work?",
			"body": "Let's suppose I cloned ZeroTalk and today ZeroTalk was updated.\nWhat should be the expected output for my zite?\n\nI mean, will I receive a notification with the diff of the changes or I should check periodically if something was changed and update my zite accordingly?\n\n*Edit*: And what if I changed some of the html or css files?\nI couldn't find any mention of such process in the documentation whatsoever.\n\nAlso, is there a ZeroTalk for Developers?",
			"added": 1527693184
		},
		{
			"topic_id": 1528039084,
			"title": "Sites without authenticated users",
			"body": "Every user already has a private key so I was wondering if it is possible to create a site where every one can sign without having a certification authority (e.g. zeroid.bit).\n\nIn particular, I've been following the tutorial at http://127.0.0.1:43110/Blog.ZeroNetwork.bit/?Post:99:ZeroChat+tutorial trying to set `data/users/content.json` to the following:\n```\n{\n \"files\": {},\n \"ignore\": \".*\",\n \"inner_path\": \"data/users/content.json\",\n \"modified\": 0.0,\n \"signs\": {},\n \"user_contents\": {\n  \"cert_signers\": {},\n  \"permission_rules\": {\n   \".*\": {\n    \"files_allowed\": \"data.json\",\n    \"max_size\": 10000\n   }\n  },\n  \"permissions\": {}\n }\n}\n```\n\nAt the moment I'm having other issues with the site, but **should such an approach eventually work** or do I need a CA?",
			"added": 1528039080
		},
		{
			"topic_id": 1530559794,
			"title": "Can I send my sites to others even if my port is closed?",
			"body": "For example, can you see http://127.0.0.1:43110/12PeviTvcxyEp938HoTuoEkVJ7QSmPZboy/?Home , which is my newly created blog?",
			"added": 1530559788
		},
		{
			"topic_id": 1530977864,
			"title": "Receive updates for site without seeding their content",
			"body": "Suppose I'd like to receive updates for a site (for example because I have a script that checks a list of sites to categorize them) but I don't want to seed their contents because some (many) may have illicit content.\nIs there a way (even tricky / hackish) to do it?\n\nI mean, it seems to me that if I click on \"Stop site\" from 0Hello, I will also stop receiving updates. Is this right?",
			"added": 1530977857
		}
	],
	"topic_vote": {
		"1526381316_1AHEQxyRG9s6owyJHShB4U4rg9GL5FMX5K": 1,
		"1527880907_1KaF1AU6UmZ6oUWv2GedkG73iHHJuZ4MUj": 1,
		"1528009037_1H3f2Q8pxbSVy9MuifHryzGQ9i4mmSuRsd": 1,
		"1528088389_12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu": 1,
		"1528345024_1rFttYwcvZTeYwTHDHC5iy5PsfwHhaHCi": 1,
		"1528428020_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd": 1,
		"1530629586_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd": 1
	},
	"next_comment_id": 17,
	"comment": {
		"1526239496_1NEAivkF2GyHcnRQfJjahZD5XyWfJv1a1W": [
			{
				"comment_id": 1,
				"body": "> [thunder33345](#comment_54_1AHEQxyRG9s6owyJHShB4U4rg9GL5FMX5K): Why not explain why is the 1gb of json data needed?\n\nIt is a database with large amount of objects (some hundred millions).\nIt is *not* needed for photos or videos, in case you were wondering.",
				"added": 1526288336
			},
			{
				"comment_id": 2,
				"body": "> [thunder33345](#comment_58_1AHEQxyRG9s6owyJHShB4U4rg9GL5FMX5K): you COULD store them as optional bigfiles if it's not really needed\n\nSorry, maybe I've not stated it clearly: Such data *is* necessary for the site to work properly.\n\nJust one question: If I store them as optional bigfiles will I be able to import them to the SQLite database, when the user requires it?",
				"added": 1526289843
			},
			{
				"comment_id": 3,
				"body": "> [eibriel](#comment_52_1BYU9zV786auJ29dF3HMAQYhxA2WgN4ofi): You can subdivide it in smaller pieces, with some sort of index. And make each piece optional.Then you load only the pieces needed for the user, each user will get / download a different set of pieces according to its usage. [...]\n\nThis is indeed a good way to do it.\nMay not be fully satisfying but I think I will go for it.\n\nIf I use such an optional piece, can I import it into the SQLite database at a later time?",
				"added": 1526328973
			}
		],
		"1527693186_1NEAivkF2GyHcnRQfJjahZD5XyWfJv1a1W": [
			{
				"comment_id": 4,
				"body": "> [nofish](#comment_1164_1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj): There should be an \"upgrade code\" menu item at your site's 3dot menu at ZeroHello. This will upgrade the css/js/html from the clone source site, but it will overwrite any changes you made in the source code.\n\nThanks, I didn't notice It.",
				"added": 1527710466
			}
		],
		"3_168qV1Xxp2EyszrzdECLUwXrn9wGYjDdar": [
			{
				"comment_id": 5,
				"body": "> [nullpo](#comment_17_16Szsy1UtjiXpEevWVdUDrNfNTAZ9PLbcY): I created a simple text board where you can post without an account registered at ZeroID, but with one created in the browser:http://127.0.0.1:43110/16KzwuSAjFnivNimSHuRdPrYd1pNPhuHqN [...]\n\n@nullpo : Really interesting!\nConcerning the code: how can one obtain a WIF key address from the Zite private key?\nI'd be interested in replicating that.",
				"added": 1528053304
			}
		],
		"1528039084_1NEAivkF2GyHcnRQfJjahZD5XyWfJv1a1W": [
			{
				"comment_id": 6,
				"body": "> [kaffie](#comment_611_1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh): You'd have to make your own cert for the site. Something like kaffieID if you don't want a backend server. There was a site I saw that did it. I think the chan sites here do it.\n\nI saw [the post of nullpo](http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:3_168qV1Xxp2EyszrzdECLUwXrn9wGYjDdar/NEW+WEBSITE+share+it+here#comment_17_16Szsy1UtjiXpEevWVdUDrNfNTAZ9PLbcY) in which it shows a way to do such a thing.\nThe only detail I don't yet get is how to get a WIF formatted key starting from a ZeroNet private key. Do you know how to do it?\n\n*Edit (answer)*: Turns out that the keys of ZeroNet are [already in WIF format](https://github.com/HelloZeroNet/ZeroNet/issues/263).",
				"added": 1528108123
			},
			{
				"comment_id": 7,
				"body": "> [kaffie](#comment_612_1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh): The kaffieID source code is really all you need. Should have everything in there to be able to set it up.\n\nThank you. I'll have a look.",
				"added": 1528189211
			}
		],
		"1530559794_1NEAivkF2GyHcnRQfJjahZD5XyWfJv1a1W": [
			{
				"comment_id": 8,
				"body": "Ok, so somehow it really works. ZeroHello says: Port: closed, Tor: error but I see 8 seeders for the blog.\nSo thank you all for the test.",
				"added": 1530621266
			}
		],
		"1530629586_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd": [],
		"1530977864_1NEAivkF2GyHcnRQfJjahZD5XyWfJv1a1W": [
			{
				"comment_id": 10,
				"body": "> [styromaniac](#comment_11_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd): So you want to seed code but not media? [...]\n\n@styromaniac No: I do not want to seed anything, neither site contents.\n\nI just want to be able to download some kind of files (html, js, css mostly).\nOf these files I would like to seed none (for the same reason of possibly illicit content).",
				"added": 1530978655
			},
			{
				"comment_id": 11,
				"body": "> [styromaniac](#comment_12_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd): [...] You don't want to upload any site content to peers until you know the content is good. [...]\nExactly. Do you know of ways to do it?\n\nOr, if someone has knowledge of the codebase of ZeroNet, how big of a change would ZeroNet require in order to have such an option? (Even only a download everything share nothing would be appreciated)",
				"added": 1530979554
			},
			{
				"comment_id": 12,
				"body": "> [realjohndoe](#comment_8_15tQJFZZ7KVYMX6XPUkcs138LcgDQ2zVcL): It doesn't sound like you're ready for the open internet. #Zeronet it's probably not for you. Stay on the so-called #clearnet, and be their bitch. If you're just worried about legality, use #Tor or a good non-logging #VPN. As you know, it's illegal in some stupid corrupt places to just use the #internet. Further, encrypt your zeronet data directory with on-the-fly encryption in a hidden container for plausible deniability with programs like #EDS for Android, and #Veracrypt for Windows Etc. Or just access zeronet through a proxy. Nothing to leach or seed that way..üòÅ\n@realjohndoe I'm not ready to eventually go to prison for helping in distributing illegal content \"for other's freedom\".\n\nThe project I'm working on would be a nice site for ZeroNet (something like a categorizer for each site content, which would allow oneself to take informed decisions before opening a site) and I don't like being criticized for not wanting to distribute illegal content.\n\nPlease think before answering: *I'm not ready for open Child Pornography and Drug selling, while I'm ready for liberty of speech, which the openness of the internet should be about*.",
				"added": 1530986212
			},
			{
				"comment_id": 13,
				"body": "I obtained something that seems to be working and I'd like to ask others to have a confirm that I'm not sharing my own sites: can someone please check if they can visit [http://127.0.0.1:43110/1Emeb2gK3PKqpBeCwiMTsDsZjLcoWAwJRj]() ?\n(It is only a blank innocuous site).\n\nI'd like to point out what seems to be current state of this:\n* Files with non whitelisted extensions aren't donwloaded\n* Files which locally have timestamp greater than peers' ones are *not* sent (this also means that any content that I create on e.g. ZeroTalk is not published)\n* I'm already unsure about new sites. **Can you please help me by seeing if you can visit the site above?**.\n\nThank you very much.\n\nWhat follows is the patch file based on commit `b6bf38b8` which is the actual master for ZeroNet.\nI hope it will be useful to others as well. *Please note that this is only in case someone also wants to create a classifier or another \"research project\" and you can not publish content to other peers. It is unethical to use this to act as \"leech only\"*.\n```\ndiff --git a/src/Site/Site.py b/src/Site/Site.py\nindex a395027..6c839fd 100644\n--- a/src/Site/Site.py\n+++ b/src/Site/Site.py\n@@ -26,6 +26,11 @@ from File import FileServer\n from SiteAnnouncer import SiteAnnouncer\n import SiteManager\n \n+allow_publish = False\n+allowed_extensions = [\".json\", \".html\", \".htm\", \".css\", \".js\", \".txt\", \".json-default\", \".html-default\", \".htm-default\", \".css-default\", \".js-default\", \".txt-default\"]\n+def safe_file (file_path):\n+    _, file_extension = os.path.splitext(file_path)\n+    return file_extension in allowed_extensions\n \n @PluginManager.acceptPlugins\n class Site(object):\n@@ -282,15 +287,18 @@ class Site(object):\n \n     def checkBadFiles(self):\n         for bad_file in self.bad_files.keys():\n-            file_info = self.content_manager.getFileInfo(bad_file)\n-            if bad_file.endswith(\"content.json\"):\n-                if file_info is False and bad_file != \"content.json\":\n-                    del self.bad_files[bad_file]\n-                    self.log.debug(\"No info for file: %s, removing from bad_files\" % bad_file)\n+            if not safe_file(bad_file):\n+                del self.bad_files[bad_file]\n             else:\n-                if file_info is False or not file_info.get(\"size\"):\n-                    del self.bad_files[bad_file]\n-                    self.log.debug(\"No info or size for file: %s, removing from bad_files\" % bad_file)\n+                file_info = self.content_manager.getFileInfo(bad_file)\n+                if bad_file.endswith(\"content.json\"):\n+                    if file_info is False and bad_file != \"content.json\":\n+                        del self.bad_files[bad_file]\n+                        self.log.debug(\"No info for file: %s, removing from bad_files\" % bad_file)\n+                else:\n+                    if file_info is False or not file_info.get(\"size\"):\n+                        del self.bad_files[bad_file]\n+                        self.log.debug(\"No info or size for file: %s, removing from bad_files\" % bad_file)\n \n     # Download all files of the site\n     @util.Noparallel(blocking=False)\n@@ -359,11 +367,13 @@ class Site(object):\n                 has_newer = int(modified) > my_modified.get(inner_path, 0)\n                 has_older = int(modified) < my_modified.get(inner_path, 0)\n                 if inner_path not in self.bad_files and not self.content_manager.isArchived(inner_path, modified):\n+                    if not safe_file(inner_path):\n+                        continue\n                     if has_newer:\n                         # We dont have this file or we have older\n                         modified_contents.append(inner_path)\n                         self.bad_files[inner_path] = self.bad_files.get(inner_path, 0) + 1\n-                    if has_older:\n+                    if has_older and allow_publish:\n                         self.log.debug(\"%s client has older version of %s, publishing there...\" % (peer, inner_path))\n                         gevent.spawn(self.publisher, inner_path, [peer], [], 1)\n             if modified_contents:\n@@ -469,6 +479,7 @@ class Site(object):\n \n     # Publish worker\n     def publisher(self, inner_path, peers, published, limit, diffs={}, event_done=None, cb_progress=None):\n+        return False # We do nothing here because we don't want to share sites\n         file_size = self.storage.getSize(inner_path)\n         content_json_modified = self.content_manager.contents[inner_path][\"modified\"]\n         body = self.storage.read(inner_path)\n@@ -690,6 +701,9 @@ class Site(object):\n         return self.needFile(*args, **kwargs)\n \n     def isFileDownloadAllowed(self, inner_path, file_info):\n+        if not safe_file(inner_path):\n+            self.log.debug(\"File extension not in allowed ones: %s, skipping...\" % inner_path)\n+            return False\n         if file_info.get(\"size\", 0) > config.file_size_limit * 1024 * 1024:\n             self.log.debug(\n                 \"File size %s too large: %sMB > %sMB, skipping...\" %\n@@ -717,6 +731,9 @@ class Site(object):\n         elif self.settings[\"serving\"] is False:  # Site not serving\n             return False\n         else:  # Wait until file downloaded\n+            if not safe_file(inner_path):\n+                return False\n+\n             self.bad_files[inner_path] = self.bad_files.get(inner_path, 0) + 1  # Mark as bad file\n             if not self.content_manager.contents.get(\"content.json\"):  # No content.json, download it first!\n                 self.log.debug(\"Need content.json first\")\n```",
				"added": 1531069862
			},
			{
				"comment_id": 14,
				"body": "> [thunder33345](#comment_166_1AHEQxyRG9s6owyJHShB4U4rg9GL5FMX5K): seems to be working here\n@thunder33345 what do you mean? Can you see my new site or are you talking about the patch?",
				"added": 1531072419
			},
			{
				"comment_id": 15,
				"body": "> [thunder33345](#comment_167_1AHEQxyRG9s6owyJHShB4U4rg9GL5FMX5K): my bad \"working here as in i cant see your page\"\nPerfect! Thank you!",
				"added": 1531074917
			}
		],
		"1535994338_14mSHL2TBcqcLNcfpmg5jyGVS9RZia3FiX": [
			{
				"comment_id": 16,
				"body": "It seems that I couldn't get all of the files of my site on the net.\nI'll let you know when I'll have them fixed.",
				"added": 1536058859
			}
		]
	},
	"comment_vote": {
		"66_1LybGoL99LBuYE8ZtwgJC8dxkii3UmYKpo": 1,
		"52_1BYU9zV786auJ29dF3HMAQYhxA2WgN4ofi": 1,
		"1164_1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj": 1,
		"17_16Szsy1UtjiXpEevWVdUDrNfNTAZ9PLbcY": 1,
		"612_1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh": 1,
		"123_1AHEQxyRG9s6owyJHShB4U4rg9GL5FMX5K": 1,
		"161_1AHEQxyRG9s6owyJHShB4U4rg9GL5FMX5K": 1,
		"12_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd": 1
	}
}