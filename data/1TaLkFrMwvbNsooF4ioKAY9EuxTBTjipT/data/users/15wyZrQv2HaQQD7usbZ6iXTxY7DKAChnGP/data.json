{
	"next_topic_id": 1,
	"topic": [],
	"topic_vote": {},
	"next_comment_id": 20,
	"comment": {
		"1589734049_153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k": [
			{
				"comment_id": 1,
				"body": "The Beaker is basically like ZeroNet, closest competitor to the ZeroNet, except that it is far less modular than the ZeroNet and architecturally stupid, because the only way to properly use it is to use its web browser, which in turn brings a lot of hard-to-meet dependencies to the project. For example, anything that has to do with GUI is truly laborious to port to new operating systems. ZeroNet, on the other hand, can use the operating system distribution default web browser, provided that the web browser is advanced/recent enough. That makes the ZeroNet a far more future-proof technology than anything that requires the building of a specialized web browser. \n\nImagine, if the HTML would suddenly be unsupported by all browsers like it is the case for the Adobe Flash or Java applets. All of the work on web pages that heavily depend on Adobe Flash and Java applets is wasted. The same applies to FreeNet, ZeroNet, Beaker, I2P, whatever else, if the P2P-networks suddenly stop existing. Any P2P-network stops existing the moment its nodes/servers are not available on modern hardware and operating system combinations. Hence the requirement that a P2P-network software must be easily portable to new hardware and operating system combinations. \n\nWhen it comes to porting software, then there's also the issue that not all programming languages are available. For every new CPU a compiler like the GCC or the LLVM has to be ported at least twice: one version of the ported compiler \"backend\" is for compiling for bare metal, like operating system kernels are compiled, and the other version is a fork of the bare metal version and allows to create binaries that are specific to the particular operating system on that hardware. After the two GCC/LLVM \"backends\" are available, still not all programming languages that the GCC/LLVM have \"frontends\" for, are available, because programming language stdlib implementations are often times operating system dependent. For example, the C stdlib file operations, like open a file, write to a file, close a file, have to do it through operating system calls to take advantage of the file system drivers. Therefore the C stdlib needs to be ported to a particular operating system. That's the bare minimum. For performance reasons some parts of the stdlib might later get optimized by replacing some high level functions with operating system and CPU specific assembler blocks. Supposedly that is the case with the Sun/Oracle Java virtual machine, VM. To build a web browser, all of the build tools of that web browser and its dependencies have to be available. May be not necessarily ported to the new hardware and operating system combination, if cross-compilation is used, but a build environment for a web browser can be difficult to set up even on old, very well supported, hardware and operating system combinations like Linux on year 2010 Intel hardware. I chose 2010 for this example in stead of the year 2020 to make sure that the hardware bugs have been taken to account at various software based workarounds and the hardware is still new enough that at least somebody tests on that hardware.\n\nThe way I see it, the Beaker has one serious advantage over the ZeroNet. The advantage is that it is easy to install for non-technical Windows users and it has nice features at its GUI for creating a Beaker-zite template and for publishing the new Beaker-zite. And that is the only benefit the the Beaker has. The rest is as bad as the ZeroNet is. For example, the ZeroNet is really nice for technically advanced users, who are able to write their own HTML, install python modules, work on Linux console, but as long as the ZeroNet and the Beaker are not as easy to use as the Microsoft Powerpoint or LibreOffice slide creation software, non-technical users, who are not capable of creating simple HTML pages for the traditional WWW hosting, which isn't that expensive nowadays, will never create pages for neither of them. So, from that point of view, the Beaker fails at pleasing the non-technical users and that renders its main benefit, ease of installing for non-technical users, useless. The Beaker project could win the hearts of technically inclined users by getting rid of the special web browser dependency by offering a console version of itself with a web server based management GUI like the ZeroNet has, but that would make it just another ZeroNet or FreeNet. \n\nOn top of that all P2P-systems serve content from end user machines and the disk access slows down the computer regardless of what P2P-software uses the disk. A workaround to that is a dedicated machine on LAN, may be an old laptop, but that is certainly not something that an average non-technical user is willing to set up even if they have some switched off old laptops gathering dust at some storage area.\n\nI guess that some competition between those projects might take place in terms of anonymity options. I believe that the various P2P-networks will also specialize, like the ZeroNet and the Beaker are for offline \"web page\" use and download content in the background, the various eDonkeys, Gnutella, IPFS, etc. are specialized for file name search based file sharing, BitTorrent is for downloading files, the Tor, Tox.chat and matrix.org are for real-time use, allowing real-time chat and video-conferencing, the\nhttps://bitmessage.org/\nhttps://vuvuzela.io/\nhttps://www.mixminion.net/\nare for P2P-email, etc. The more different P2P-systems there exist, the more difficult it is for the various NoSuchAgencies to produce malware and specialized breaking hardware for all of them. \n\nAll in all, the Beaker is nice, but until they come up with a console based version of it that has a WWW based management GUI like the ZeroNet and the various WiFi routers have, I won't pay too much attention to the Beaker project. According to my very subjective opinion that I explained at my current post here the ZeroNet developers got it technically right and the Beaker developers did not.\n\nThank You for reading my post.",
				"added": 1589777223
			},
			{
				"comment_id": 2,
				"body": "> [styromaniac](#comment_2167_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd): Without persistent seeding, Beaker Browser is not promising. ZeroNet is still better because of persistent seeding, not requiring that your browser remains open.\n\nThe Beaker guys and gals have one horribly expensive hosting service that aims to mitigate that issue.\nhttps://hashbase.io/\nIf its price were 50 cents per month, 11$/year, then I might consider their service to be reasonably priced. Here's an Estonian hosting service provider \nhttps://www.planet.ee/\nthat asks ~12â‚¬/year, ~14$/year, for the following parameters:\nLetsEncrypt based https, SSH access, one antivirus scanned email address like username@planet.ee, 10GiB of SSD storage for the web page, node.js, PHP7, MariaDB, upload speeds as fast as the more expensive options of the same company, the zone.ee, no need for private domain, because the hosting domain will be username.planet.ee, 1TiB web serving data transfer per month, web-FTP, self-service-portal. I guess that service by that company has been operating at least 5 years, I suspect 10 years, so it is certainly not a scam. The zone.ee is one of the most reputable web hosting companies in Estonia. A bit too corporate, they have their own failures, but they have been on the market for years and it is not a shame to work there. (I do not work there, but I know some reputable persons, who do.) Now compare that with the parameters and price of the aforementioned \nhttps://hashbase.io/\nOn top of that there are the following interesting hosting providers in France and UK with their \"price points\":\nhttps://1fichier.com/\nhttps://hostpresto.com/web-hosting/#plans\n\nBasically, the P2P-network that has a protocol extension that makes it possible to use plain WWW in addition to the P2P, will be able to take advantage of all that mirroring. Obviously the \"illegal content\" will be deleted from the mirrors, but that's not a problem, because that's why there is the P2P side of the network and the deletion of content from the plain WWW mirrors is just as if some P2P-network node had gone offline. Nothing more. Obviously the blobs at the mirrors have to be encrypted, but the decryption keys can be ~100KiB in size, which makes it feasible for a lot of P2P-nodes to host them. A hosting provider is willing to earn money and the European privacy laws make sure that a hosting provider does not have the obligation to decrypt the blobs, so the Police has to run its own servers that spider the P2P-network and download the blobs and then automatically mark the blobs for censorship, but that's mass surveillance, which is also forbidden by the European privacy laws. Another option is that the Police has to analyze the censorable material manually, to avoid the mass surveillance accusation, but even if they secretly use automated means, they have to manually file the censorship requests, which limits their rate of censorship. I emphasize, they can censor any blob, but the rate of censorship requests has to be filed manually by them. If the blob-owners can swap the encrypted blobs out automatically while the censorship requests have to be filed manually, the blob-owners can legally outrun the Police. \n\nThere's also the option that the mirrors rotate the blobs that they host. If a censorship request reaches the mirror hosting provider, the hosting provider can legally and truthfully say that they do not have that blob any more, because it has been already automatically swapped out, deleted from the mirror, and all that the hosting provider can do is to add the blob to the automated deletion list to avoid hosting it in the future. The protocol of the public WWW mirror might be such that the WWW mirrors freely exchange the blobs, so that the blobs at a given mirror are not necessarily owned by the publicly known hosting account owner. \n\nOn top of that, there's the option to use Virtual Private Servers (VPS).\nhttps://www.scaleway.com/en/pricing/\nhttps://www.pcextreme.com/cloud-servers\nhttps://www.kimsufi.com/en/\nthat can use Tor, so the Police just does not know, which hosting provider should get the censorship request. The VPS may use its server instance specific keys for encrypting and decrypting the blobs that are hosted on the cheaper plain WWW hosting accounts and that's it, as long as the 2 web services are online, the Police need a court order to get the keys that can be used for decrypting the blobs or for doing the traffic analysis based surveillance to prove the correlation between \"illegal content\" and the traffic to the encrypted blobs, which, of course, can be masked by phony downloads of the blobs by the VPS. Traffic data volume tends to be \"unlimited\" or at least pretty big nowadays anyway. Besides, it's OK for the mirror to go offline due to reaching the traffic limits, because it's just a mirror, not the sole hosting server. \n\nIn the case of the typical P2P-network anonymity model like the Tor model the node-data relation is constant, like, the data is \"at a single place\" and the DHT implementation has to figure out, where the node/server resides, nodes \"move around\" while the \"data stays at place\". In the case of the classical WWW hosting based mirroring it might be possible to reverse that idea, turn it on its head: the nodes \"are at place\", are at known locations, and the data \"moves around\". In that case the \"DHT\" analogue implementation needs to find out, where the data is, not where the node/server is. In the case of the ZeroNet the data gets copied, duplicated, not purposefully moved around. One ZeroNet node does not tell another ZeroNet node that now that I have given the data to at least N other nodes, I can delete my copy, because others already have a copy of that data. If the Police takes down one classical WWW hosting account based mirror, it's not a problem, because it's just one node in the network. The owners of the classical WWW hosting account based mirrors can be repressed the same way as any current ZeroNet node or Tor node runner can be repressed today. So, it's bad, but not necessarily worse than the current situation.\n\nI guess the various P2P-network protocols still have pretty much room for innovation. Let the competition commence!",
				"added": 1589781531
			},
			{
				"comment_id": 4,
				"body": "> [styromaniac](#comment_2174_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd): That's my point. It's all about money for them, so they don't bother making it a background service.\n\nI disagree with that statement. People can have a different world view and still mean well to others.\n\n> [styromaniac](#comment_2174_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd): I didn't read your whole comment and I never will.\n\nI'm glad that You have that freedom, but I also have the freedom to form my opinions of other people according to my observations. Thank You for reading my current text.",
				"added": 1589831966
			},
			{
				"comment_id": 5,
				"body": "> [blurhy](#comment_522_1JcHMiQxXHX9q3ZK2LF9rZjvg3MUtTpcK): I don't think highly of beaker browser and its dat protocol. Its protocol stack is even poorer than ZeroNet.\n\nAnd where can we read Your version of a near-perfect protocol? Links please. Even a blog post will do, although production quality code is always better.",
				"added": 1589832131
			}
		],
		"1589783095_1H9xEgESUhfvpYK3SLLqabc1uLT2jsmH2A": [
			{
				"comment_id": 3,
				"body": "Your use of the term \"heads up\" hints that You might be from U.S. or Canada :-D",
				"added": 1589784234
			}
		],
		"1589536277_18fPUkt6NqUxRtpYgETn1fFmseYek1sJfF": [
			{
				"comment_id": 6,
				"body": "Rape scenes and other abuse scenes are certainly not my taste, but I guess a collection of mainstream movie production clips that are such a taboo nowadays that they are censored, does make sense. Including the rape scenes of various Hollywood creations. So, that site is not really a porn site in the 2020 sense. It's more like a historic archive of mainstream movie clips that should be preserved for historical culture studies purposes. Unpleasant clips, but so are wars and concentration camp photos. Worth archiving.",
				"added": 1589833902
			}
		],
		"1589664235_16Fw7LqBDEgoFYTkiJBsywYJRtoRRTYCd3": [
			{
				"comment_id": 7,
				"body": "> [commandantecero](#comment_32_1NG5ezregpGPUFoJuJfVZLW98B2zed5yro): The poison pill was the 19th Amendment. Women are wired to give up their freedom for safety.\n\nhttps://en.wikipedia.org/wiki/Boudica\n\n\"Boudica Warrior Queen 2003 Alex Kingston English Captions\"\nhttps://www.youtube.com/watch?v=YNF7WGQYmd0",
				"added": 1589834729
			},
			{
				"comment_id": 8,
				"body": "> [styromaniac](#comment_2176_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd): Please leave ZeroNet. You do not represent us.\n\nPlease leave Earth. You do not represent us.\n\nTo be extra explicit: the ZeroNet was for free publication of materials, not for forming cults of one sort or another. The moment there is some sort of a cult, there is the question, who or what suits the cult and who or what does not suit the cult. Who represents the WWW? Who represents the telephone network? Which cultural customs will be used for determining, who gets thrown off the WWW or who is never allowed to have a phone or an email address? Oh, and please forget about network neutrality, if Your attitude is that ZeroNet should be used only by some specific cult.",
				"added": 1589834909
			},
			{
				"comment_id": 9,
				"body": "> [fabcdefgwagon](#comment_17_1AEx7ASy4xvEkpjJKweTVD2hnsKmPgvPX5): Everyone should check out the Raspberry Pi and create their own vpn server \n\nRaspberry Pi'is Raspbian Linux distribution root partition file system will corrode, if the Pi is shut down by cutting its power. A workaround to it might be to use the NilFS file system for the root partition, but the NilFS has a security flaw that one user can access the files of another user. The NilFS is fine for robotic applications, where there is only one user and no internet connection, but for anything networked the NilFS can be an issue. Root partition file system has to be available during boot time and therefore it has to be compiled into the kernel, not loaded with modprobe. Compiling a custom kernel can be a lot of work. \n\nYou may try Your luck with the ReiserFS, which does not have the kind of file system corruption antimeasures that the NilFS has, but the ReiserFS may still work pretty well in practice. The issue with the ReiserFS is that after its main author, Reiser, literally murdered his wife, many Linux distributions thew the ReiserFS support out, but it might still be available with some effort. Politically speaking, the ReiserFS was not just the work of the murderous Reiser, but a group effort and throwing the ReiserFS out of a distro is disrespectful towards the non-murderous hardworking developers, who heavily contributed to the ReiserFS. The reason, why they haven't renamed the ReiserFS to something that does not contain the word \"Reiser\" in its name is that it's a lot of work and the fork has to support various tools and be able to be used in parallel with the original ReiserFS as a \"separate type\" of file system. Testing the set of tools with the various Linux kernel versions and hardware is a lot of work that does not get funded due to the bad reputation of the Reiser.\n\nRegardless of what type of file system the Raspberry Pi uses, the fundamental issue with the Raspberry Pi is its IO bottle-neck. The Raspberry Pi was done on the cheap to allow children to build fancy robots, not for having good IO speeds through USB and Ethernet. I recommend that in stead of a Raspberry Pi some old laptop is used instead. The Intel and AMD have their own CPU-backdoor issues, but there is no guarantees that the ARM does not have them. If You want a really good solution, then You have to use an FPGA-board, like\n\n(Not all FPGA-mainboards are that expensive. A 300$ board will do and if You scroll the list, You'll find some in that price range.)\nhttps://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&CategoryNo=13&List=Simple\n\nThere are also some other FPGA-mainboard vendors:\n\nhttp://www.myirtech.com/list.asp?id=502\nhttps://shop.inventronik.de/index.php\n\nYou have to choose the FPGA carefully, because some FPGA-s can be programmed only with proprietary software that does not have any freeware version available. A truly open source solution would be to combine the FPGA-s supported by the \nhttp://www.clifford.at/icestorm/\nwith some sort of MCU-project-ethernet-card. Do not expect any good speeds from that kind of a system, unless You want to do everything Yourself, including the ethernet card part. There might be some open hardware blocks for that at the open hardware SourceForge analogue, \nhttps://opencores.org/projects\n\nYour custom FPGA-computer propably won't have that much RAM, because using RAM-modules can be quite challenging due to their minimum clock speed requirements, but You may want to consider the Antikernel idea from \n\n\"Antikernel A Decentralized Secure Hardware Software Operating System\"\nhttps://www.youtube.com/watch?v=hxvzmZcNXl4\n\nThe Antikernel idea is that many core functions that are usually implemented as part of the operating system kernel are implemented directly in hardware. With FPGA-s it's doable and the different operating system functions can all work in parallel hardware blocks in stead of being queued for CPU-time. \n\nSo there are options, but it's a lot of work.",
				"added": 1589836630
			}
		],
		"1589830520_18fPUkt6NqUxRtpYgETn1fFmseYek1sJfF": [
			{
				"comment_id": 10,
				"body": "Create Your own zite, put the big files as optional files and post the URL to this forum thread so that we can mirror it.\nNo need for any fancy \"ZeroNet app\". Just a plain zite. You can then re-use the zite HTML-project for publishing the very same home page at other networks like the Beaker, etc.\nhttps://beakerbrowser.com/\n\nhttp://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1589734049_153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/Beaker+1+0+Beta\n\n",
				"added": 1589837494
			}
		],
		"1577196707_12yk6fSLY85rKGkemD5wSDAiNvcXG9pqHe": [
			{
				"comment_id": 11,
				"body": "European at European Union here. I suggest the EU and US and UK people should try to mirror the Chinese and Russian and Iranian and other more censored regions content as much as possible.",
				"added": 1589838150
			}
		],
		"1590447717_1PPUrYcZ1E1rGkkE6PH18Qi43LRsKABo1Z": [
			{
				"comment_id": 12,
				"body": "My 3-year prediction, that is to say, (2020, 2021, 2022), is that there will be an awful inflation of prices, because the various supermafia organizations, generally called as states, sometimes called as countries, emit/print so much money right now (in 2020) that there is no other way than a price increase. In autumn 2019 the robbers/tax_collectors had a problem that due to the increase of automation people were able to get their basic needs, food, shelter, transportation, etc. satisfied relatively cheaply and placed the \"left-over\" money to savings, which explained the negative interests in banks, but taxes were collected on transactions (\"value added tax\", \"sales tax\", \"income tax\", etc.) and real estate. The tax based system has so many parasites that it suffered from a small amount of decrease in tax revenue, which they temporarily wanted to \"fix\" by encouraging the banks to give out more loans so that there would be at least temporarily more transactions and then people would also be willing to toil more and pay more \"income tax\" to pay back those nasty loans. \n\nNow, spring 2020, the supermafia corporations think that if the people did not want to walk into the loan trap, then under the disguise of \"helping the vulnerable\" they themselves take huge loans and pay the loans \"back\" with printed/emitted money, basically, money that they rob from people, who had savings. Hence the German supreme court case, where the question was raised, whether the German Government is constitutionally allowed to diminish the value of the savings of Germans to such an extent.\n\nBasically, if You have any savings, swap them to some material form OTHER THAN REAL-ESTATE or \"property\". I suggest You invest it in Your health, do the less experimental vaccines that do not contain any mercury or other heavy metals, fix Your teeth, have whatever reconstructive surgeries, buy a few deep freezers for storing food, see that Your garden supplies are fixed, reliable, not some cheap Chinese crap. May be swap out Your car for not a fancier one, but something modest and reliable, like some modest, but also gasoline saving, version of Toyota or Volvo, preferably a hybrid that is able to consume both, diesel and electricity. Install Yourself some solar panel system, because You might never now, how bad the electricity prices will be, they'll probably try to tax electricity too, so it's better if You can \"secretly\" produce Your own, specially if You have an electric car. Just try to swap out Your savings to avoiding having to buy the same stuff at a higher price later. If after that You still have some money left, then buy Yourself a small back-up electric generator that works on diesel and/or gasoline. Some welding equipment and plasma cutters will be a really good investment. Having electrical tools for woodworking is also a good idea. A nice selection of various screws for fixing things, yes, screws, NOT nails, is a very good idea. Rustproof screws can be stored for a long time. Just make sure that the screws are protected from dust and other elements that might unpleasantly dirty for use. Medical supplies that can be stored for a long time, for example, sterilization liquids, non-sterile bandages (sterile bandages can be used as nonsterile bandages after their expiration date.), might also be a nice, small, \"investment\" for the common man. Chocolate can be stored for a long time, if stored properly in metal crates that can withstand rodents. Oh yes, and the toilet paper and tissues, but the general idea is that physically small and relatively expensive goods should be preferred to relatively cheap and physically bulky goods. Tooth-brushes are small, relatively expensive and can be stored for years. It may sound silly to buy them like that, but the idea is to not to let one's savings go to waste and crates of consumables is not taxable with \"property tax\". Office supplies are also relatively small and relatively expensive. Buy a few extra cartridges for Your laser printer, because You'll be needing them at some point anyway. Some paper for the printer is also useful. Do not forget Your parents' home: fix/upgrade things there too, pay for their extra medical expenses, medical equipment, etc.\n\nDue to the massive money emissions, money printing, You'll loose Your monetary savings right now anyway and due to real estate tax You can't store it in the form of real estate. May be get Yourself a truck driving license so that You can swap Your house out for a huge, multi-wagon, truck, which can move from one region to another to be able to swap higher taxation region for some lower taxation region. \n\nThank You for reading my post.",
				"added": 1590555372
			},
			{
				"comment_id": 13,
				"body": "> [fkdkuehilhf](#comment_2_1G4bDXzgDecBgPWKafP8J9zFGNsPefuBnD): The European Union will create a new currency and\n\nIn someplace in Latin-America, where the local currency had an awful inflation, the solution was to write the prices in a virtual currency that had a conversion rate to the real currency defined so that the conversion rate took to account the inflation. The same with salaries in work contracts. In stead of having a work contract that says that the salary is xâ‚¬, the salary is described as\n\nsalary = function(conversion-rate-of-â‚¬-to-something-stable)\n\nThe \"something stable\" may be totally virtual, not even a cryptocurrency, just a fantasy unit of money. I do not remember, what the name of the inflation-compensated currency was. The banks use that scheme all the time, when they offer loans: their interest is often times not a fixed percentage, but something very volatile, for example, the Euribor, leaving most of the risks to the person, who takes the loan. \n\nThis real-money-interest-compensated virtual money unit does not solve the issue that whenever one has some money, it becomes worthless pretty quickly. In those circumstances spending funds must be done in a short time period after receiving the funds and at some point buying any consumables that are available can be a reasonable way to save at least some of the money. At some point even the consumables might be robbed/taxed. During the Soviet Union times at some time period toilet paper was not sufficiently available, because the soviet economy was that bad, and when the KGB raided dissidents' homes for political reasons, the KGB robbed/confiscated toilet paper with an excuse that there are shortages of that type of goods and an average soviet citizen should not have that big supply of toilet paper while other soviet citizens suffer from the lack of those goods.\n\nThere's an anecdote from the Soviet Union collapse era and the anecdote is that a sex-worker at a brothel screams from the top of her lungs, \"No-no-no, NOT THAT!\". The Madam of the brothel goes to see, what is happening and seeing that nothing classically bad is happening, tells the sex worker, \"My daughter-ling, there's nothing wrong here, please serve the client well.\", to which the sex worker replies: \"But he wants to pay me in the Russian rubles!\"\n",
				"added": 1590614900
			},
			{
				"comment_id": 14,
				"body": "> [fkdkuehilhf](#comment_2_1G4bDXzgDecBgPWKafP8J9zFGNsPefuBnD):  but the bank will charge an exchange fee of 9,87478434553834% :)\n\nYou have a mistake. According to the \nhttps://earth.esa.int/web/guest/-/gravity-in-detail-5728\nthe value of the gravitational acceleration is 9.80665 m/(s*s).",
				"added": 1590616254
			}
		],
		"1590616390_14g2gXnsZdEPShFJkGdh5W3eGXmKzqW6F8": [
			{
				"comment_id": 15,
				"body": "Check Your settings, including those of the various plugins  :-D",
				"added": 1590616588
			}
		],
		"1590565317_17AMQVbBa12XB3xFWKDnP2dCEx92TaiY7X": [
			{
				"comment_id": 16,
				"body": "That's currently an unsolved problem.\n\nSearch engines, \"content discovery\", \"information retrieval\" is such a vast research area that there's a whole free book about it\n\n\"Search Engines Information Retrieval in Practice\"\nhttps://ciir.cs.umass.edu/downloads/SEIRiP.pdf\n\n(Please seed its copy from\nhttp://127.0.0.1:43110/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/index.html?view:item+id:15f1_15wyZrQv2HaQQD7usbZ6iXTxY7DKAChnGP_item_1+type:book\nThank You.)\n\nIn a very broad strokes, as always, the the initial problem has to be divided to smaller sub-problems and in the case of the ZeroNet the first iteration of divide-and-conquer-the-search-problem is to distinguish between searching from locally stored zites and searching from zites that are not locally available. Obviously no person can download the \"whole Internet\", so there is no possibility to have all relevant zites available locally for text analysis. The moment any kind of interaction on some network comes to play, the whole problem set of privacy, censorship, tracking, network break-ins comes to play. Google and Microsoft with its Bing do not have that problem, because they can just create encrypted tunnels between their huge datacenters and they can always trust that their own datacenters do not apply censorship and that one datacenter does not do an intentional DDoS attack on another datacenter. With P2P-systems like Tor, file sharing networks, You name it, there is always the risk that some adversary starts to place malicious nodes into the P2P-network. Google does not need to worry that NSA places a publicly visible \"malicious gigantic datacenter\" into the Google's LAN-of-gigantic-datacenters. That is to say, not only do the big companies have more money, but they also have a fundamentally simpler problem to solve. The can basically concentrate on the problem, what in the ZeroNet terms is storing a huge ZeroNet data folder and then creating another gigantic folder outside of the data folder for custom indices about what is stored at the ZeroNet data folder. \n\nThat is to say, in the case of ZeroNet, FreeNet, I2P, Beaker, etc. the searc/content_discovery/information_retrieval has 2 components: create an index about what is stored locally and share that index with others, who do not have the same content stored locally. A Chinese malicious node of a P2P-search engine can lie to the other node, who submits a query. \n\n    ---start--of--a--sidenote-----\n    A query is a filter that is applied to all existing data.\n    In the case of Google, a query is a filter that is applied to\n    all data that google either stores or has indexed.\n    In the case of a P2P-search engine, like the badly implemented YaCy,\n    a query is a filter that is applied to all data that \n    has been indexed by the given node.\n    ---end--of--sidenote-----\n\nIn another words, making a censorship resistant P2P-search engine is far more complex task than whatever the Google and Microsoft Bing have to deal with. The Google and Microsoft Bing people can consentrate all of their effort on analysing the content, whilst P2P-search engine developers have to deal with both, content analysis and network security related matters. I have been thinking about those issues for quite some time and the best that I have came up with as of 2020 is that each P2P-search-engine node maintains a personal list of trust-ranks of other nodes and content is indexed by different, \"standard\" indexing algorithms, so that after the query submitting node downloads the actual content, it is possible to verify, whether the downloaded content actually matches with what the other P2P-search-engine-nodes told it to match. A query would be like:\n\n    \"Please give me the list of zites that have a match with \n    standard_indexing_algirhthm_001(parameter1,parameter2,parameter....)\"\n\nSome of the parameters may be word distances or synonyms as defined by that particular indexing algorihtm. As of 2020_05 I haven't had time to work on this enough to publish anything decent, but initial experimentation can be done with what already exist. Here's a few Bash lines that might help You at experimenting:\n\n\n    # To avoid accidental modification of the data experiment only \n    # as a user, who has only read-only access to the ZeroNet data folder.\n    # Create some separate experimentation user to avoid accidentally \n    # ruining Your main user's data. Better yet, do all experimentation \n    # on a machine other than Your main work machine.\n    cd <ZeroNet data folder> \n    find . -maxdepth 2 -name '*.html' | sed -e 's/\\ /\\\\\\ /g' | sed -e 's/)/\\\\)/g' | sed -e 's/(/\\\\(/g' | sed -e 's/^/grep -i the_string_that_I_am_looking_for /' | sed -e 's/$/ >> ~\\/tmp_\\/search_results.txt /' > ~/tmp_/x.bash  ; rm -f ~/tmp_/search_results.txt\n\n\nHere are a few references that You may want to consider, when creating a prototype:\n\nhttps://www.lemurproject.org/\nhttps://sourceforge.net/projects/lemur/\nhttp://www.search-engines-book.com/\n\n\nThis one is a really good one for simple experiments:\nhttp://www.seg.rmit.edu.au/zettair/\n\n\nThe various \"Apache Lucene\" and its analogues:\nhttps://github.com/dbalmain/ferret\nhttps://sphinxsearch.com/\n\n\nAt some point You may want to develop something on Your own, so in stead of using any of the Apache Lucene mess You may want to define some very precise way to query text. In that case You may want to use an ordinary SQL-database and combine it with the following idea:\n\n    this_value_goesinto_Your_index_in_the_database = Your_clever_specialized_hash_function(one_word)\n\n    this_value_is_searched_from_the_index_at_Your_database=\n        =Your_clever_specialized_hash_function(word_from_the_query)\n\nThe \"hash\" does not need to be in a classical text form. A \"hash\" can be a series of positive whole integers, like a part of a row in a relational database table, where the \"hash\" part of the rows is stored at integer storing columns. If You want to get really fancy, then You may even build Your system up from the very start by using a cluster-database like the \n\nhttps://rethinkdb.com/\n\nIt is OK for the RethinkDB implementation to use unencrypted connections between the nodes, because the RethinkDB nodes can be configured to connect to localhost ports, which can be forwarded by some encrypted tunnel creation software, for example, by using SSH-tunnels, so the actual communication encryption is then properly encrypted and the RethinkDB does not have to include the encryption algorithm implementation in itself. The same idea can be used with any other cluster setup. The modern way to connect scientific compute cluster togehter is to use sshfs for \"mounting\" remote nodes to a local node. So You may even construct some file system based communication protocol and if it is combined with the RAM-mounted tmpfs, then the plain slow disks aren't even used for that communication, and yet there is still all that comfort of using named pipes and what have You. I recommend some plain file based communication system, where XML/JSON/etc. files are written to \"disk\" as messages and the session, like session-ID, message-ID, etc. are encoded to file names. Sending something from one computer to another is a horribly snow endeavor anyway, so no need to complicate things. Try to get the speed from more careful algorithm development and parallel data processing.\n\nFor a gigantic ZeroNet data folder You may want to try out the various \"cluster file systems\", which are used in scientific computing for creating file system folders that contain more data than a single physical storage device, HDD/SSD/etc., can store. Given the P2P-nature of the ZeroNet it is and totally will be irrelevant from ZeroNet plain node development point of view, but if You are thinking of creating a Google-for-ZeroNet, then at some point You may want to use a ready-made-solution in stead of spending time on creating Your own solution from scratch.\n\nhttps://www.beegfs.io/\nhttps://tahoe-lafs.org/\nhttps://ceph.io/\nhttp://www.xtreemfs.org/\nhttps://moosefs.com/\nhttps://www.gluster.org/\nhttps://lizardfs.org/\n\nThe LustreFS\nhttp://lustre.org/\nhttp://opensfs.org/\n\n\nThe ZeroNet search-engine can not be some fancy zite that is a collection of links with fancy JavaScript based GUI. A P2P-searchengine has to have real-time communication, which is fundamentally absent from the ZeroNet. I suggest You consider some Tor-tunneled matrix.org or a Tor \"hidden service\" packaged web application with various JSON/YAML/XML API-s. Probably many real-time P2P-chat applications may also be used as tunnels for communicating withe the P2P-search engines nodes, like one node can tunnel its queries to another node through P2P-real-time-chat application. That way the P2P-chat-application handles all the anonymity, routing, encryption issues and it creates a possibility to use mesh networks that are not IPv4 overlay networks like the Tor is. The possibility to use non-IPv4 physical networks makes the system more censorship resistant. With the loss of anonymity even landline telephone network based legacy systems like the FidoNet\n\nhttp://ftsc.org/\nhttps://www.fidonet.org/\n\nor the Usenet\n\nhttps://en.wikipedia.org/wiki/Usenet\n\nmight be used for some low traffic batch querying. A batch of queries is submitted and after an hour the query submitter checks back and downloads the batch of answers that was assembled to its batch of queries. The downloading might take place automatically, in the background, like old fashioned email programs periodically check for email.\n\nAnything that has to do with operating system(hereafter: OS) API, except file system access and any features that the programming language inherently provices like threads, should be delegated to some very portable project, preferably through Your own application specific layer. For example, GUI parts and network ports should be delegated to FreePascal or Java or something else that You happen to really trust to be ported to future systems so that You never have to call the OS API Yourself. It's not a question of, whether You have the skills to use the OS API of whatever You run at Your current computer, but it's a question of, whether You are willing to update Your software 10 years from now and whether You are willing to customize Your software for operating system and hardware combinations that You do not have easy access to. Let others worry about the wide zoo of hardware and operationg system combinations. The FreePascal guys and gals advertize that their FreePascal compiles everywhere, so let them worry about that horrible mess. You just create a library in Your project that all of Your own project depends on and that library then communicates with another component that You have created at FreePascal or Java or something that You trust that handles the OS calls. Later You port Your whole application by just customizing the FreePascal or Java component, which can run in a separate OS process, that calls the OS API that is not related to the basic file system access side.\n\nPlease do not depend on some very fancy build systems that might not be available in the future. \"Write\" Your own Bash script that does the compiling and the quotes are because You may generate the code in stead of manually writing it. To make the code generation software futureproof, prepare a VirtualBox virtual appliance that includes all the build tools, so that some build steps can be run at the virtual appliance and then only the last build steps are run at the operating system and hardware combination, where the software will actually run.\n\nWell, I guess that should get You going, but it's one hell of a task and it takes a lot of experimentation. What is certain is that when You do develop something, then please do try to pay attention to the long-term availability of the dependencies of Your project, because otherwise You spend a lot of time and effort at developing it and it goes to the history trash bin simply because people can not install Your creation due to not meeting the dependencies of Your creation. My recommendation is to use only components, including programming languages, where the core development team does not maintain the component for a living or the core development team is a group of freelancers that have a diverse set of clients, because otherwise the project is dumped the moment \"seed money of the startup\" or \"grant money\" runs out or \"business is not profitable enough\". It is OK to use former business projects like the RethinkDB, if the former business project has been picked up by a group of people, who develop it out of their free time or as freelancers. When working with C++, then choose some very old, like year 2000, version of the GCC to test Your code with. No fancy new C++ features in that version of C++, but the portability of the project is a blessing. For example, even the author of the modern Ada versions, the Tucker Taft from AdaCore writes most critical parts of his code in old Ada95 to make sure that the code is as portable as possible.\n\n\n\nThe world is Your oyster. Good Luck and thank You for reading this post.",
				"added": 1590626311
			}
		],
		"1590565377_17AMQVbBa12XB3xFWKDnP2dCEx92TaiY7X": [
			{
				"comment_id": 17,
				"body": "If You have money, get Yourself a western satellite phone with a modem/LAN interface. That way You can always get at least some snail-connection to the West for email. First You have to study, whether it is \"legal\" in China, because its use is easily detectable and You will get caught using it. For download-only versions You may want to consider\n\nhttps://othernet.is/",
				"added": 1590640240
			},
			{
				"comment_id": 18,
				"body": "> [xcape2net](#comment_741_1GJc2vm4vJjAKsFoFJ2D3gGmKiRac2kfnz): If we provide a list here, how do we know someone working for the Chinese government won't see it and block the nodes on the list?\n\nThe scheme is that a Hong-Kong citizen takes a tourist trip to Japan or Australia or South-Korea, runs a Tor node there with settings of using a very long series of hops through relays and when he gets back to Hong-Kong, the list gets propagated for a little while, till it reaches other Tor nodes that are run by the Government, which will then block them all again. Ultimately all nodes will get blocked, so alternate physical connections is the only real option. A few references to some alternate physical network building attempts, which all seem to have various serious flaws, but for a short while they might be better than nothing:\n\nhttps://commotionwireless.net/\nhttps://wirelessleiden.nl/\nhttps://guifi.net/\nhttps://freifunk.net/\nhttps://www.funkfeuer.at/\n\nThere's an old fashioned, nice-for-censorship-free-environments, type of antenna mechanics building project description at \nhttps://opensourcelowtech.org/wifidish.html\n\nI guess a shoddy  compromise solution for a densely populated area like the Hong-Kong might be some cellphone based Mesh-networking system like the \n\nhttp://servalproject.org/\nhttp://developer.servalproject.org/dokuwiki/doku.php?id=content:servalmesh:releases:version_0_93\n\nbut even the Serval project's own social study at\nhttp://developer.servalproject.org/dokuwiki/lib/exe/fetch.php?media=2.25_internewswp17nigeria.r4.pdf\npoints out some of the shortcomings of the Serval project, specially the lack of security and that the range of 60m between neighboring nodes is too small for forming a properly connected mesh network, not to mention that the mesh-network traffic drains cellphone batteries. I guess the things that offer relatively private communication while offering long distances are custom optical links, which might be hidden to plain site in a form of trimmable led lighting. Should be quite cheap and easy to do with MCU-s, power-FET-s, power-LEDs. The afterglow of the phosphorous material at the lighting LED-s can be a problem, but may be not that big of a problem. The optical links might connect the different islands of the mesh networks. Any wireless network can still be jammed, but as long as the Chinese supermafia allows the use of WiFi and Bluetooth in Hong-Kong, the wireless mesh networks within Hong-Kong will work, provided that the smaller mesh networks are connected with each other through some relays, which might temporarily be even plain local ISP P2P-connections that do not go through the \"Great\"(ain't that a beauty) FireWall of China. Basically, it's not easy, there's not a single solution, but with some hard and smart work the Hong-Kong people have various options.\n\nFor organizing inspiration there's the\nhttps://air-stream.org/\n\nI forgot to mention that it is OK if the Hong-Kong becomes just a dump of the \"Great\" China, because if that's their faith, then THEY DESERVE IT! The reason, why they deserve that is that traditionally the Hong-Kong has been the banking island between the West and the rest of China, so it's a rich region, THE BUSINESS PEOPLE THERE, often times filthy rich bankers, CAN AFFORD VARIOUS SOLUTIONS, INCLUDING THEIR OWN COMMUNICATIONS SATELLITES with all the R&D that it takes to create far superior communication systems than any kind of a ZeroNet or Tor like overlay network can ever offer. If the business elite of the Hong-Kong is SO STUPID that they do not understand that the ONLY reason, why they can run their business at all in stead of being an extortion subject of the Chinese Communist Party is that they have FREEDOM OF OPERATION, which DEPENDS ON THE EXISTENCE OF WESTERN STYLE LACK OF CORRUPTION (relatively speaking) and FREEDOM OF SPEECH, then they deserve to loose their businesses, their income, their freedoms. The \"poor\" students from the filthy rich Hong-Kong families should just ask their parents that even if all \"values\" are sent down the tubes and money is the only measure, which option is PURELY MONETARILY cheaper: invest to private satellites and other communication systems and make them available to the Hong-Kong \"general population\" so that the \"general population\" of the Hong-Kong can stand against the CCP (Chinese Communist Party) and protect the family business as a side effect, or not invest to such projects and hope that Hong-Kong will not fall and even if it does, the CCP hierarchy will not rob the family of its business? \n\nSo, really, the Hong-Kong people have tough times, but they also have loads of money to fix their problems properly and we do not need to make too frantic efforts here for figuring out, how to finance some alternate solutions to keep their freedom of speech. If they TRULY want freedom of speech, then they already have ALL THE MEANS FOR TECHNICALLY GUARANTEEING THAT THEY HAVE IT.  \n\nYou might also ask Yourself, where are the job offers for western freelancers for working on the Hong-Kong ZeroNet or Tor tunneling projects? Even the various Washington bureaucrats at their think-tanks kind of wonder that why don't the Hong-Kong bankers hire more IT-staff to Hong-Kong even for mundane banking IT-systems upgrades at a time, when the EU has made it compulsory for EU banks to offer an API for independent payment service providers and the cryptocurrency schemes are roaming to the point that some mainstream banks have their own crypto-currency that has no deflation and no inflation and, as can be expected from a mainstream bank, no anonymity, just 1-to-1 correspondence to the Euro, but all of that just to make it easier to implement independent payment systems. But the Hong-Kong bankers just do not care about IT-solutions even for their core business and even before all the CCP mess started.\n\nGiven the humongous losses that the Hong-Kong bankers currently bear due to the CCP mess even 5 Ferraries for a random freedom-of-speech-enhancement project is peanuts or at least something that they won't even notice or be able to remember. So, let them suffer, if that's their own attitude to free speech. May be we should start thinking about other regions like the Taiwan and Macau instead.\n\nThank You for reading my post.",
				"added": 1590714707
			}
		],
		"1590711821_14g2gXnsZdEPShFJkGdh5W3eGXmKzqW6F8": [
			{
				"comment_id": 19,
				"body": "Write some sort of a script that calls the Debian apt-get analogue for Windows, the \nhttps://chocolatey.org/",
				"added": 1590715289
			}
		]
	},
	"comment_vote": {
		"2167_16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd": 1
	}
}