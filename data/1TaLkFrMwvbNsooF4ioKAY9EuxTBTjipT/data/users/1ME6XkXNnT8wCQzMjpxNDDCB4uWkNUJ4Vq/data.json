{
	"next_topic_id": 2,
	"topic": [
		{
			"topic_id": 1539201056,
			"title": "Bitmessage spam flood",
			"body": "Sooooooo If you're here you've noticed that bitmessage is currently being spammed by some asshole. Not super great exactly.\n\nThis is a place to discuss that. Here's a few of the most important topics:\n\n1: Basic alternatives. \n\nI know that it's possible to set up a broadcast so that it echoes back everything sent to it (i.e. acts like a chan but requires your own address)--it might work nicely to set one up with a high pow/demanded difficulty (btw does anyone know if adjusting the demanded difficulty in the settings affects chans? If it does that'd probably help but I can't seem to tell).\n\nAlso: zeronet and other tools are nice--maybe not as a replacement, but as a source of ideas, which brings us to:\n\n2: Possible improvements.\n\nMarkov chain/ Bayesian filter based spam filtering is probably possible (ironic thing about spam, it gives you so much training material), but it'd have to assign spam probability, not certainty. It'd probably move it to one of several folders labeled i.e. \"spam (<25% confidence)\" or \"spam (<50% confidence)\" etc, where marking it \"not spam\" would serve to train the filter. Torifier's [spam filter](https://github.com/torifier/PyBitmessage/tree/master/bitmessage-API/spamfilter) is a place to start.\n\nWhile we're at it, does anyone else like the idea of a datestamp inside the ciphertext to partly help with message ordering? The main client already introduces a long set of dashes when using the reply option, so I think this is hardly much more to ask, unless there's a more reliable way to do that (maybe making the datestamp somehow part of the POW?). The thread-based viewmodel that e.g. beamstat.com uses really should (I think) be more emphasized, and this would help.\n\n[other projects](https://bitmessage.org/wiki/FAQ#How_does_Bitmessage_compare_to_other_messaging_methods), whitepapers, etc may provide ideas.\n\nSomething like the ability to adjust the demanded difficulty per (receiving) address would be nice (that's not a thing right now is it?) so that messages not sent with enough pow computed simply don't appear (and, optionally, don't get resent).\n\nSo yeah. Suggestions are welcome. Just look to see that someone hasn't already thought of it.",
			"added": 1539201055
		}
	],
	"topic_vote": {},
	"next_comment_id": 1,
	"comment": {},
	"comment_vote": {}
}