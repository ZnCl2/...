{
	"next_topic_id": 23,
	"topic": [
		{
			"topic_id": 1,
			"title": "从开源时代进入到逆向时代",
			"body": "生命不熄，奋斗不止！\n&nbsp;   \n记得十年前决定开发操作系统和编译器的时候，我已经解接触了开源软件，但是接触开源代码还是后来的事。\n&nbsp;   \n开源软件产生是为了反对微软垄断和高收费，让人们用上免费软件，今天已经大功告成！进入2013年，我发现开源社区的激情似乎已经慢慢消失，推出的新的各种开源项目计划似乎已经越来越不行了，至少我在nix下面看到,gnome3,kde4.10已经不行了，漏洞百出，不堪使用。我也在今年发布了汉澳sinox2013server和sepl编译器和sepldevelop，但我也不焦急去推广它们，因为我觉得开源时代已经慢慢过去了，人类进入了逆向时代！至少对cracker来说是这样。\n&nbsp;   \n我并不是一个职业程序员，但我绝对是一个专业程序员，我在小公司跳来跳去，甚至还有自己单干，我自己单干的时间比上班还多。为什么单干还能活下来？就是去做一些程序员杂活，赚点钱。但是真正赚钱的是因为我成了逆向人员，其实就是代码破解黑客。\n&nbsp;   \n我当时去开发编译器时候知道要用汇编才能编译程序成可执行程序。不过汇编是比较可怕的事情，我大学考了3次汇编才及格，当然我不愿意作弊，我曾经考试作弊得了好分数，还得奖学金，我觉得非常可耻。不过大学不堪回首的事情我就不说了。但是编译器还是要写的，汇编还是要学的。学了一下觉得没动力了，似乎进展不大，看到网上有人找搞破解招人的，我就决定去他们那里边破解边学汇编。去那里做了不久，还是写程序的，觉得没有前途，改去一家公司上班，搞了一段时间又觉得去搞破解更有前途，后来终于会做调试分析了，还能写程序。不久我出来自己分析破解写一个程序卖给工作室，结果赚了钱，收入好高啊，还买了房子，不知房奴滋味。正如唐骏所说的，第11年一下赚回10年的钱。\n&nbsp;   \n破解与反破解，调试与反调试的斗争更加激励了。但是作为跟机器码打交道的代码调试员，幸运之手垂青，不再是苦逼程序猿，也许也不是每个黑客都那么幸运。从2003《加密与解密》发布，中国破解程序员越来越多，现在10年过去了，已经拥有数万奋斗在机器语言一线的代码挖掘黑客。黑客分成两种，网络破解黑客和程序代码破解黑客。我不是网络破解黑客，我没兴趣，我觉得他们入侵不会写程序，是工具客。我喜欢代码挖掘，在黑暗的机器语言世界里摸黑游走，找到入口和破绽。一旦找到代码，我会非常兴奋，没日没月挖掘的结果竟然这么简单，仅仅就是一个jump或者call。有时也赞叹程序算法设计之精彩，之前也未曾见过。代码挖掘者是孤独行者，置身在二进制世界里，只看到cpu,寄存器窗口，堆栈窗口，内存区，当前地址数据区，目不转睛，一对眼睛要同时看5个地方，只能慢点按 F8进入下一个机器码,实在搞不懂才按 F7进入下层函数，或者 CTRL+F9跳到上层函数。01二进制世界好黑啊，我们把它叫密界，秘密的世界。一般程序员看不到。一个程序员要成为调试黑客高手要用3到5年才成熟，因此没有公司能培养黑客，黑客要成长，可能有师傅指点，但必须自学成才。\n&nbsp;   \n金钱利益推动黑客程序员和黑客产业发展，如果没有金钱驱使，谁会去做黑客，尤其是专业程序员，引导他们的不只是兴趣。我当初学习汇编设计编译器，但是因为觉得破解有钱途我才会加入他们。黑客学习初期起早摸黑，经常熬夜，要看看你的身体能否扛得住。顶不住就做不下去了。黑客成长是痛苦的，幸运的是我是有运气的黑客，早期加入黑客公司为他们效力成长起来。现在黑客公司似乎少了。\n&nbsp;   \n因为软件保护太厉害了，甚至出现了驱动保护程序，因此调试更加艰难。我转身去破解专业软件。那些专业软件竟然没有加壳保护，有如进入无人之境，破解真是太容易了。不过这些专业软件年代久远，也不是省油的灯，竟然有win16位和win32程序共存，调试起来非常困难。16位程序调试工具差，没有内存断点。只能猜测分析函数，还好，16位程序程序段很小，程序也不大，功能大的程序需要用到dll动态链接库，他们有导出函数，这样通过函数名字逐个分析调试，找出关键代码，逐个排除，找出真正的功能代码。有时候实在没办法，只能猜。32位程序调试工具好，如果没有保护，我的天啊，这种程序简直就是开源软件，破解它们有如探囊取物。\n&nbsp;   \n二进制程序也是开源软件，机器汇编代码可以看，只要能调试，破解指日可待。有一种程序是真正的开源软件！\n&nbsp;   \njava程序其实是开源软件\n&nbsp;   \nsun设计java虚拟机的时候就有先见之明。破解java程序也可以直接用ida反汇编class文件，然后修改汇编代码直接破解掉。这个没什么惊奇的。我告诉你，用java反编译软件直接把class和jar还原出源代码，然后修改源代码重新编译后替换回去，其实也许你不要重新编译代码，而是看java代码就能逆向出算法，比如计算系列号算法，如果还是看不出来，可以修改编译调试他的代码，那就没有任何难度。java的class还不能加壳，所以java程序应该归入开源软件类别。C#也是。\n&nbsp;   \n逆向其实就是破解，一种很美化的说法，逆向和破解都免不了要反汇编和调试。不过逆向需要还原出高级语言，破解可能不需要，直接破掉就能完成任务，所以逆向比破解还要高一个等级，不过现在ida似乎可以把整个函数还原出c语言程序，不过我还是喜欢自己根据汇编思路写算法，而不是直接用。但是计算系列号算法要反过来的，并不能直接用里面的函数。比如流程 注册成功数=系列号*转换数，那么系列号=注册成功数/转换数,一些数学运算，并不能用二进制代码函数算法。\n&nbsp;   \n破解是解除软件的收费功能。如果软件很有价值，破解掉让人人能用，那开发公司就很难赚钱。破解其实还是比较容易的，有时修改一个t跳转就好。\n&nbsp;   \n逆向是破解软件功能，抽取核心算法和核心数据，然后可能模仿山寨出同样功能的软件，这个是高等级破解了。仿冒，仿造，山寨软件！核心数据和算法一但被取出和山寨，这个软件就可以被低价格仿冒者拍死。我现在做逆向就是干这种活，而不是简单破解掉其注册保护。我不会说我准备破解谁的软件，但是可能我已经破解了你的软件你还不知道！你不会求爷爷告奶奶叫我不要破解吧。\n&nbsp;   \n有一种人，苦逼程序员苦苦写出来的软件，他们就去破解逆向出他们的程序，掠夺他们的数据和算法。同是程序员，相逼何太急！这就是程序员和逆向工程师。\n&nbsp;   \n都是吃饭的干活，程序员竟然分裂成你死我活的两种人，可悲！不过大家尽可放心，我现在只是破解西方国家的软件，他们的价值连城软件就这样被破解和逆向，仿造了。\n&nbsp;   \n这就是鲁迅说的拿来主义？西方列强的东西，不要白不要。国内还没有核心技术软件要逆向吧？软件有国界。\n&nbsp;   \n随着软件保护的加强，现在出现了驱动保护，在内核保护软件让你不能调试分析。不过道高一尺魔高一丈，你有驱动，我也能写驱动，在内核废除你的保护功能。这不，游戏界出现了np,tp.xtrap,hs等驱动保护程序，现在我也开始写驱动了。没有设备驱动，游戏界都能推动黑客研究和开发驱动了。我觉得作为程序员，写破解游戏驱动保护也不是一件难事吧，我要悄悄地干活。\n&nbsp;   \n开源和逆向目的是一样的，都是金钱推动下收钱与反收钱的斗争，高价与低价的竞争，技术垄断与反垄断的斗争，一个更加诱人的行业，吸引数万密界高手在二进制机器语言黑暗世界里摸黑挖掘，寻找蛛丝马迹，挖掘出珍贵的机器代码，并还原成高级语言。何苦做破解，何必做逆向，但是都指向一个字：钱。\n&nbsp;   \n也许逆向推动中国核心软件技术发展，可能不是一个钱字能覆盖他们的功用。逆向变相促进软件开源，中国已经进入了逆向时代，另类开源时代。\n&nbsp;   \n有人说，既然这么厉害，为何不组织一个逆向团队大力挖掘？我说，这个行业并不是完全合法，还可能摧毁商业软件的根基，必须偷偷摸摸，不能做大做强，不然又要抓人了。\n&nbsp;   \n&nbsp;   \n逆向在黑暗的世界孤独挖掘，见不得光，其实你自己也一样。",
			"added": 1519982548,
			"parent_topic_uri": "19_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 2,
			"title": "ZeroNet：一个内容永生的世界",
			"body": "无数年来，人类都在追求着自己在这个世界上的印记的永存。\n&nbsp;   \n我们无法得到肉体的永生，于是我们在平原上修建宏伟的神庙，在绝壁间凿刻隽永的碑文，在宇宙间传递无尽的电波。\n&nbsp;   \n我们假借无数的载体，以期达到自己精神的永存。\n&nbsp;   \n我撒下火种，这世间的每一份火苗都是我的存续。\n&nbsp;   \n而今，当网络遍布全球，人类的边界即是网络的边界，数据流动在每一个人的智能设备中，在这个无形的新世界中，我们对不朽的期望也又了新的载体——在 Internet 中得到思想的永生。\n&nbsp;   \n然而，在这个日渐中心化的网络中，一个 Blog 的消失是多么的轻而易举，可能只是你忘记了给自己的服务器续费，亦或是你讲了一些不那么合时宜的话，你抱着将自己的思想轨迹留在这个网络世界中的理想，却愕然发现你的一切内容存留的决定权并不在自己的手上。\n&nbsp;   \n开放网络逐渐被中心化的各种大平台代替，微博，微信，Lofter，Medium，Facebook，你的一切数据，都由他们来存储，而他们也拥有着随时将你的数据修改封存的权限。\n&nbsp;   \n这是一个看起来百花齐放的荒漠。\n&nbsp;   \n还有什么能够让我们在这个网络世界中留下可以永存的足迹？如果这个平时使用的网络并不能许诺我以存续，我又有何其他选择？\n&nbsp;   \n一个去中心化，可任意访问，不受任何组织影响的网络世界。\n&nbsp;   \n是的，你需要来试试 ZeroNet。\n&nbsp;   \nZeroNet 是什么\n&nbsp;   \nZeroNet 是一个基于 Bitcoin 与 BitTorrent 技术构建的分布式 P2P 网络开源项目。\n&nbsp;   \n不同于我们日常所访问的 Internet，在 ZeroNet 中没有服务器的概念，所有网络数据都被分散在各个 ZeroNet 用户的电脑中，任何人都只需要一对非对称密钥，就能发布自己的站点。\n&nbsp;   \n所有人都可以通过发布者公布出的站点私钥在 P2P 网络中找到发布者的电脑，直接从中下载站点的数据。越来越多人访问后，发布者的站点就会被多台电脑保存，那些访问过你的网站的电脑就会开始为你的站点做种子，就像我们所熟知的 BT 种子一样，你的站点的内容就这样在无数台电脑中存续，获得了永生。\n&nbsp;   \n同样，由于要在无数人的电脑中做备份，ZeroNet 为了节约访问者的硬盘空间，限制了网站的大小，虽然这个限制是可调的，但是过大的网站势必会影响访问量，所以目前的 ZeroNet 中的网站大多是以 Blog 与 BSS 的形式存在的。在其中游览，你会有一种回到了 1990 年代的感觉，大家互相在 Blog 中交换友链，在 BSS 中热切的等待着回帖与交流，这里仍旧是一片小世界，创始者与参与者们都在努力的去扩建它。\n&nbsp;   \nZeroNet 的大门\n讲了这么多关于 ZeroNet 的背景意义，是时候来讲下如何推开 ZeroNet 的大门了。\n&nbsp;   \n相比于其他有访问方法限制的特殊网络，ZeroNet 的访问方式无比的简单，你只需要去 ZeroNet 的官网，下载一个对应系统平台的 ZeroNet 的 python 小程序。\n&nbsp;   \n对 Mac 用户，你只需要解压下载的压缩包，然后将 ZeroNet.app 拖入 终端 应用中回车执行即可。\n对 Windows 用户，解压后双击运行 ZeroNet.exe 等待完成即可。\n在运行成功后程序会自动打开一个「New ZeroHello」的页面，这里相当于是你的 ZeroNet 访问中心，你的网站缓存情况，网站信息流订阅，以及网络连接状态都会显示在这里。\n&nbsp;   \n而好玩的是这个网页本身其实也是基于 P2P 的（而非是程序的一部分），在上面你可以看到「这个站点目前由 X 个节点驱动，没有任何中心化的服务器」，尽显 ZeroNet 的核心精神。\n&nbsp;   \n从这里开始你就可以开始你的 ZeroNet 旅程了。\n&nbsp;   \n不过，请务必注意，ZeroNet 并不是一个彻底匿名的地方，如果你想彻底的保护隐私，那么在使用 ZeroNet 的基础上你还需要打开 Tor 才可以。如果你没有打开 Tor 的话，请不要随便的进行不负责任的发言3。同时，请在访问 ZeroNet 网络的时候抱着与和 Internet 上的好友互动一样的善意来进行互动。\n&nbsp;   \n下面是两个 ZeroNet 中很有用的网页地址，当你完成了上述启动步骤之后就可以访问了。\n&nbsp;   \nZeroNet 新人指导 目前 ZeroNet 最大的中文技术性论坛提供的一站式 ZeroNet新人指导 FAQ，作为深入 ZeroNet 的第一步值得一看。\nZeroNet 建站指南 用最短的时间教会你如何在 ZeroNet 中建立自己 Blog。\n当然，如果你觉得这样实在是太麻烦了，你还可以考虑使用公网代理来访问 ZeroNet，不过这种方法访问速度有限，如果你想把 ZeroNet 中的内容分享给不能用 ZeroNet 的朋友，你可以考虑这种方式。\n&nbsp;   \n下面是两个 ZeroNet 网站的公网代理访问链接，其他的 ZeroNet 网站你都可以通过这种方式直接访问。\n&nbsp;   \nZeroMe ZeroNet 上的微博，什么都有，目前处于较为初级的形态，类似早期的 Twitter。\n0net123 中文 ZeroNet 导航网站，能找到一些好玩的 Blog，不过好像很久没更新了。\nZeroNet 的意义\n很多人在体验过 ZeroNet 的之后首先想到的是「自由」，在这个中心化的社会里，这的确非常重要，但这只是从工具的角度的看法。ZeroNet 的设计的绝妙之处绝不仅在于此。它最奇妙的地方在于它提供了一种与网络一起永存的方式。\n&nbsp;   \n只要还有一台联入网络的电脑上有你的网站的种子，你的网站，你的内容就不会消失，而当这个 P2P 网络足够大的时候，你的网站与内容将无人可以完全将它删去，它将与这网络世界一起永生。\n&nbsp;   \n同样，ZeroNet 由于它 P2P 的无中央主机特性，建立网站也变得非常的简单，不需要去折腾那些令人难受的网址备案，租用主机，你需要的仅仅是通过命令生成一个随机网站地址，写好它的 HTML 代码，然后发布给其他人。\n&nbsp;   \nEveryone dies alone. But if you mean something to someone, if you help or love someone, if even a single person remembers you, then maybe … you never really die at all.\n&nbsp;   \n上面这段话来自美剧「Person of Interest」，我们在这个时代或许无法去追求那些深刻的人际关系，但我们至少能够在网络世界中找到那么一个硬盘为自己存下一些什么，延续自己与这个世界的联系。\n&nbsp;   \n如果运行 ZeroNet.exe 后一闪而过，没有自动打开页面，很可能是你的电脑没有 VS2008 运行环境，很多 Ghost 精简版系统是缺失的，需要你自己去单独安装。\n也即是洋葱路由。\n当然这也不是说你开了 Tor 就可以随便讲话了，没有万无一失。",
			"added": 1519986716,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 3,
			"title": "zeronet文章托管服务",
			"body": "",
			"added": 1519986835,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 4,
			"title": "IPFS 此物一出，天下一\"桶\"",
			"body": "如果说比特币是一家世界银行，那IPFS就是一家全球云存储公司。\n&nbsp;   \n互联网有赢家通吃的特征，IPFS也不例外。\n&nbsp;   \n支付宝和微信提供了两种支付选择，但人们上网却只使用IP协议。IPFS协议是对IP协议的补充，让整个互联网具备了原生的存储能力。\n&nbsp;   \n如果你用过P2P下载，你几乎就已经看懂了IPFS的一半，而另一半就是区块链。P2P下载是从多个电脑里获取文件的技术，可以同时下载一部电影的不同片段，这样可以加快下载速度。\n&nbsp;   \nIPFS会成立一个叫做【IPFS环球矿业】的组织，它使用区块链技术管理着由几百万台个人电脑和服务器组成的网络，它们被统称为矿工。IPFS环球矿业将分散在世界各地的矿工们组织起来，为全人类提供云存储服务。矿工们存储文件，并赚取Filecoin作为回报。（Filecoin是IPFS中存储文件要支付的货币，Filecoin 代币符号FIL。）\n&nbsp;   \n和比特币挖矿不同，IPFS不会浪费电能。\n&nbsp;   \n矿工们接到文件存储任务后，将文件写入到硬盘中，IPFS网络会不定时提问：【请告诉我，你存储的第三个文件，第18页第3段第2句写的是什么?】回答正确奖励1个FIL，回答错误扣除5个FIL。这样的验证机制会非常高效，而且让抵押了FIL的矿工们不敢作假。从矿工那里下载文件也是要收费的，但如果只是少量下载，费用可以忽略不计。\n&nbsp;   \n只要你电脑上有闲置的硬盘空间，你就可以成为IPFS矿工，把闲置资源租出去赚钱。这样的闲置资源再利用，已经是大势所趋，共享经济也早就是人们热议的话题了。\n&nbsp;   \n随着大量矿工加入【IPFS全球矿业】，存储成本也会变的非常便宜，就会吸引更多人使用。\n&nbsp;   \nIPFS就像一个无限容量的桶，它永远都不会满，用的人越多速度反而会越快。这个桶无时无刻都在你身边，最远不会超过1公里。(超级矿工们会尽可能的把桶安放在你家附近)\n&nbsp;   \nIPFS不只是云盘，它更会掀起一场互联网无盘化革命。\n&nbsp;   \n未来所有的互联网公司，都会使用IPFS技术代替原有的硬盘，因为它便宜到几乎可以忽略不计，而且还附带了热点资源自动部署机制。高级矿工们会专注于网络上的热点。哪个视频火了，他们会以非常快的速度把文件分发到你家附近，当你打开这个视频时，几乎就和访问硬盘中的电影一样快。互联网公司每天要为这种加速服务支付很多钱，而这一切IPFS天生就具备，而且会非常便宜。他们为什么不用呢？\n&nbsp;   \nIPFS淘金热会吸引一批专业矿工，他们为了降低存储成本，会想尽一切办法研究新的存储设备，就像现在的比特币矿机已经更新到了s9系列，未来的IPFS矿机也会不断更新换代，而且供不应求。传统硬盘厂商要么加入IPFS，要么淘汰出局。\n&nbsp;   \n随着网速的提高，人们几乎可以秒开各种文件，存储在本地的资料会越来越少。\n&nbsp;   \n直到有一天，人类的所有文明都会存储在IPFS这个超级大桶之中。\n&nbsp;   \nIPFS将无处不在，就像IP协议和NTFS文件系统一样，你根本察觉不到，但又无时无刻不在使用它们。\n&nbsp;   \n不用担心IPFS收费，因为大部分情况下你都是使用App和文件打交道，不是直接使用IPFS。石墨文档和简书这类写作工具会使用IPFS来存储文档，它们会替你支付FIL，然后再以其他方式盈利。免费云盘依然存在，只不过他们也把数据存到了IPFS上，然后再以广告形式赚钱。类似K播这类播放器，就更是需要IPFS。\n&nbsp;   \n在IPFS上是没人能限制你存什么内容的，你可以自己选择加密强度，甚至可以达到量子计算机都无法破译的程度。\n&nbsp;   \n随着国内各家云盘相继关闭，如果你想要备份重要资料，还是提前准备一些FIL吧。不只你需要储备FIL，各大互联网公司更是会大量囤积FIL，它是和BTC一样的硬通货。",
			"added": 1519992006,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 5,
			"title": "为什么去中心化和分布式存储对一个更好的互联网至关重要?",
			"body": "IPFS和Filecoin背后的团队解释了分布式数据存储技术的进步和市场激励的强大结合，正合力形成一个更安全、更高效的网络。\n&nbsp;  \n在不到三十年的时间里，互联网已成为人类历史上最伟大的成就之一，因为以前在科学、技术和商业领域从未出现过如此看得见的收获。这一惊人的发展在很大程度上是由技术专家们抽象出了互联网的基本复杂性所驱动的。其中一个最大的抽象是集中化的“云存储”，即数据存储在大型的集中的贮仓中，主要由盈利性公司运营。这种架构不仅使网络变得脆弱、破坏隐私、允许存储保持虚高的价格，还制造了阻止数据的创新用途的瓶颈。\n&nbsp;  \n互联网并不需要这样结构化。新兴的技术使我们改进互联网的底层协议，能够通过“是什么”而不是根据“在哪里”来定位内容。这使得网络成为一个更安全、更强大的地方，我们将减少依赖于任何一个特定的实体来提供我们所请求的数据。现在，我们不再依赖昂贵的业务来存储和传播人类的知识宝库，我们可以将数据分布到一个庞大的点对点网络中，他们付费存储彼此的数据。\n&nbsp;  \n去中心化存储使网络变得稳健且有弹性\n如今，互联网信息是由位置定位的：一个特定的内容包含一个URL——统一资源定位器（Universal Resource Locator），它包含到一个网络服务器的IP地址，该服务器在一个特定的位置上承载内容。例如前往一个URL，如https://facebook.com/mypicture.jpg，把域名(facebook.com)解析到一个IP地址(如31.13.70.36)并在那里查找照片。URL的指令是“转到31.13.70.36，请求路径/mypicture.jpg上的内容”。URL总是指向那个位置。即使该图片保存在另一个网站上，甚至是你自己的电脑上，你仍然需要连接到那个IP地址并下载它的内容。\n&nbsp;  \n在日常的人类语境中思考这个问题是很有用的。想象一下，我们只能通过一个副本的物理位置来引用书籍，而不是通过标题、作者或ISBN（国际标准书号）——仅仅是物体的位置。所以，如果有人推荐你一本书，他们会说，“嘿，你应该读这本伟大的书，它在纽约公共图书馆，第九区，第三个书柜，最顶层的那个书架，从左边数第一本。”现在你需要去那儿检查一下，然后才能得到一份拷贝。在你去到之前，你不知道它实际上是什么，你只知道它的位置。这显然是非常低效的。这也是一种不稳定的情况——如果有人移动了这本书怎么办？如果那天图书馆闭馆怎么办？或者图书馆彻底停业了怎么办？或者假使你到了第三个书柜，最顶层的那个书架，拿到了从左边数第一本书，而就在这时你意识到其实你的背包里就有一本同样的书，那又怎么办？\n&nbsp;  \n这不仅仅是一个理论上的问题。哈佛大学最近的一项研究发现，在美国最高法院意见书中，有49%引用的超链接不再有效。这些法院意见书指向的地址在过去的某段时间内都保有正确的内容，但在那个位置的内容现在已经不存在了。这是脆弱、低效、不必要的，这是一种很愚蠢的行为。\n&nbsp; \n相反，我们应该考虑一种不同的方式，考虑用“是什么”来定位信息，而不是“在哪里”。要做到这一点，我们需要使用一种不同的网络链接。我们不需要使用指向位置的链接，而是需要可以唯一描述内容本身的链接，就像指纹一样。这种内容寻址方法将“什么”和“哪里”分隔开，这样数据就能通过网络进行传输，因此就可以在任何地方为任何人所存储和服务。为了创建这些内容寻址链接，我们使用内容的加密哈希作为唯一的标识符或指纹。",
			"added": 1519992141,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 6,
			"title": "互联网需尽快推行 IPFS 协议",
			"body": "现在还不算是一项众所周知的技术，即使在硅谷科技圈内也没有多少人知道它，不过它在 开源社区内部 得到了迅速的口碑传播。很多人都非常看好它在提升互联网文件和流媒体传输速度方面的巨大前景。\n但是我个人认为 IPFS 的重要性远远不止于此。在采用了 IPFS 之后，网站将不再需要中心源服务器，所以这也许是我们完全重构整个互联网的最佳机会——在互联网被自身内部的矛盾拖垮之前。\n&nbsp;  \nIPFS 将如何重构互联网？还有为什么要重构互联网呢？在回答这些问题之前，我们需要先了解一些背景知识。\n&nbsp;  \n为什么我们会有一个缓慢、碎片化和健忘的网络\n&nbsp;  \nIPFS 是一种新的点对点超媒体协议，它的目标是为了补充（甚至是取代）目前统治互联网的超文本传输协议（HTTP）。HTTP 的问题在于：现在当你进入某个网站时，你的浏览器需要直接连接到托管这个网站的服务器，这些服务器可能会位于非常遥远的地方，而且这种方式也会消耗大量的带宽.\n数据服务商之所以具有运营成本，是因为每个网络都会有一个对等协议。每次网络跳转都需要成本，而且会浪费带宽。更糟糕的是，HTTP 每次只能从单个服务器下载一个文件，而不是同时从多台服务器获取文件各部分的内容。\n&nbsp;  \n于是，我们现在只能一直使用一个缓慢而昂贵的互联网，这点使得贪婪的互联网运营商变本加厉地提升服务收费（至少在美国是这样的）。除了缓慢和昂贵以外，它还是不可靠的。如果 HTTP 传输中的某个连接被切断了，那么整个传输就会失败。（如果某个网页或者媒体文件加载缓慢，最后可能的原因就是 HTTP 通信链上的某个连接出问题了。）\n&nbsp;  \n使用 IPFS 重构互联网\n行星际文件系统（InterPlanetary File System）这个名字出自利克莱德（J.C.R. Licklider）的“星际”（intergalactic）互联网。IPFS 的发明者胡安·贝尼特（Juan Benet）是一位墨西哥移民，毕业于斯坦福大学的计算机科学专业。他之前创立的一家公司在 2013 年被雅虎收购 ，随后他在今年的 Y Combinator 项目中成立了 Protocol Labs，这家公司现在的工作是推进 IPFS 项目，它的目标是取代我们在过去 20 年已经习以为常的互联网协议。\n&nbsp;  \nIPFS 是一个点对点的分布式文件系统，它希望将所有的计算设备都连接到同一个文件系统中。它可以从许多方面改善 HTTP，胡安最近向我指出了其中两个关键：\n&nbsp;  \n“我们使用的是内容寻址的技术，也就是说内容可以从源服务器分离出来，并永久储存。这就意味着内容可以在距离用户非常近的地方储存和托管，甚至是储存在同一个房间里面。内容寻址还可以让我们校验数据，因为其他主机可能是不受信任的。一旦内容被下载到用户的设备之后，它就可以被无限期的保存。”\n&nbsp;  \nIPFS 还可以解决困扰 HTTP 互联网多时的安全问题：内容寻址和内容签名技术可以保护基于 IPFS 的网站，并杜绝 DDoS 攻击发生的可能。IPFS 还可以归档重要的公共记录内容，避免网站终止运营所带来的损失。\n&nbsp;  \nIPFS 的最后一个核心改进是去中心化的内容分布，这点可以让人们在分散的互联网服务（甚至是离线的情况）之下获取互联网内容：“我们让网站和网页应用摆脱了源服务器的牵制，”胡安解释道，“它们可以按照比特币网络的模式进行分布。”这是 HTTP 无法做到的一点，而且对于网络条件欠佳的地方（也就是发展中地区）和市郊地区来说是一个极大的好处。\n&nbsp;  \n自从去年 2 月进入内部测试以来，IPFS 已经经过了许多早期使用者的试验。例如 为了响应 Internet Archive 关于分布式网络的号召 ，Neocities 在今年 9 月 8 日成为了首个部署 IPFS 的大型网站 。近年来，网站被弃用关停的问题已经让我们失去了许多内容（这对于我们的互联网集体记忆来说是一个不断加重的隐患），所以 IPFS 是我们走向永存网络的重要一步。\n&nbsp;  \n不过仅仅是“点对点”这个词语就已经让许多大型企业深感不安，它们的网站会不会跟随 Newcities 的步伐采用这个未经考验的协议呢？这个问题引出了我的最后一个观点。\n&nbsp;  \nIPFS与互联网公司的未来\n正如我在自己 即将出版的书 中所描述的，我们正在快速接近内容传输成本超出回报的时间点。大型互联网公司已经几乎跟不上我们对内容的需求，为了解决这一个问题，Akamai、谷歌和亚马逊这样的公司已经投入了不计其数的工程师。\n&nbsp;  \n而且它们还没有看到最糟糕的一面：由于低价智能手机的迅速普及，世界各地的消费者都会在未来十年连上互联网。物联网的发展前景只会将这个难题变得更为复杂，因为有数十亿计的设备将要抢夺我们已经在迅速劣化的网络连接。\n&nbsp;  \n这就是我提出的微奇点（micro-singularities）概念，它指的是将来某个恶性事件可能会突然导致数十亿的用户无法使用互联网，并让整个网络系统陷入停滞。（如果这个微奇点发生涉及自然灾害或者其他紧急事态的话，网络故障可能会累计许多人的生命。）所以我们急需找到避免微奇点发生的措施。\n&nbsp;  \nNetflix 最近已经开始研究 大规模点对点流媒体传输技术 。我们可以由此看出， 像 Netflix 这种体量的公司正在寻找更为先进的内容分布方式。Netflix、YouTube 和其他带宽需求较大的服务都会从 IPFS 重构的互联网中获益，大幅削减提供内容的成本和时间。\n&nbsp;  \n除了提升网络服务以外，IPFS 将会帮助互联网发展成为我们一直希望它成为的系统，但是这个目标必须通过打破现有的协议才能实现：真正能够将全世界的所有人连接到（即使是在离线的情况下）一个永久存在而持续进化的网络当中。",
			"added": 1519992191,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 7,
			"title": "无需Java使用I2P——I2Pd简单扫盲",
			"body": "什么是I2P? \n&nbsp;  \nI2P是Tor的变种，比Tor网络更加安全、更据隐蔽性，如果你不知道Tor又是什么，请戳洋葱路由Tor。 TOR和I2P共同点都是通过若干个节点将你的数据进行层层转包、加密，防止你的真实IP暴露。 (摘自谷歌)\nI2P与Tor有什么区别?\n&nbsp;  \n安全性:Tor使用单一的链路进行传输你的数据；而I2P则使用多条链路分别传输你的数据并且每条链路传输的数据量可以不一样。\n&nbsp;  \n难以封杀:I2P使用 Kad 算法来获取网络节点的信息,即不需要目录服务器且Kad算法拿到的节点信息只是整个 I2P 网络的一小部分并且每一台运行 I2P 的主机都可以成为中继。\n速度很慢:这是I2P最大的缺点了,速度很慢…根据笔者的测试,下载速度能上20k左右就谢天谢地了,平时只有10k左右…\nWTFspeed这么慢能干什么用呢?应急翻墙,在所有梯子都失效的情况下,可以使用I2P应急翻墙下载新的梯子.. /**难以封杀**/\n&nbsp;  \n什么是I2Pd,与传统的I2P有何不同?\nI2Pd与I2P最大的不同是I2Pd是一个采用C++编写的I2P网络的客户端, 而传统的I2P使用的是Java语言..也就是说你再也不用安装臃肿的JRE了… /**Java退散 **/",
			"added": 1519992283,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 9,
			"title": "有能发图片的论坛吗？",
			"body": "",
			"added": 1520004660,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 10,
			"title": "零网有哪些好的网站导航",
			"body": "",
			"added": 1520005876,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 11,
			"title": "零网有哪些搜索引擎？",
			"body": "",
			"added": 1520006007,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 12,
			"title": "零网地图",
			"body": "中文论坛：\nhttp://127.0.0.1:43110/NewGFWTalk.bit/\n\nZeroVoat：\nhttp://127.0.0.1:43110/1J1c7eML6uMwDU4uiKbKRxoqxGP6WMFMvb/\n\n知乎：\nhttp://127.0.0.1:43110/zihu.bit/\n\nv2ex：\nhttp://127.0.0.1:43110/1139zZM5AEsk3J48n75gojC9XpD318mxEB/\n\n网站导航：\nhttp://127.0.0.1:43110/Sites.ZeroNetwork.bit/\n\n0chn：\nhttp://127.0.0.1:43110/0chn.bit/\n\nBTSynChina：\nhttp://127.0.0.1:43110/btsynchina.bit/\n\n神key：\nhttp://127.0.0.1:43110/keys.bit/",
			"added": 1520006462,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 14,
			"title": "zeronet是获取信息的一种渠道",
			"body": "信息在各种圈子中交换",
			"added": 1520034429,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 15,
			"title": "Sia试用感想",
			"body": "很早之前就在想是不是有去中心化分布式的云存储产品，结果发现Sia云这个产品，试用了一下，发现问题多多。\n&nbsp;   \n首先，最大的问题在于SC COIN（下面简称SC）的价格不稳定。\nSC COIN是sia产品中使用的货币，空间购买方用来购买空间，空间出租方用来换取现金。SC的价格从去年的0.002到今年最高时候0.16，到今天（2017.07.14）的0.05左右，价格浮动巨大。\n&nbsp;   \n作为购买空间的人来说，要是在最高的时候换了SC，到今天手里就只剩下3分之一的价值，只能存3分之一的空间了。\n&nbsp;   \n作为空间出租方来说，价格一直在浮动，也比较难稳定的提供一个空间的租金档次，再加上回款的时间较长，说不定还没有收到SC，SC就贬值几倍了。\n&nbsp;   \n这哪里是在存文件，这是在买投资产品，这对于双方来说都是非常不利的。\n&nbsp;   \n其次，顶层机制设计有问题。\n先说购买空间，系统设计对空间购买者来说极其不友好，用户在上传文件之前，还需要先签一个合约，支付一定的押金，且需要为合约支付不菲的合约费用。\n&nbsp;   \n在试用过程中，本来想签一个合约试试保存文件，打算先存1000SC，发现提示不够，提示光合约费用就需要1120SC，也就是说我这个1000SC还不够一个合约的费用，按照7月1日的价格（0.1）来算，1000SC就相当于100元左右，即什么服务还没有使用就已经有100多元的固定合约费用需要支出。除去合约费用外，剩下没有使用的SC需要3个月后才会返还。\n&nbsp;   \n另外，在论坛上看到，存储的费用是不透明的，需要扣钱的时候会自动在你的押金里扣去。用户没有办法在事前知道存储的单价。论坛上看到有好几个人只存了几G的东西却被恶意存储提供商扣去了高额的费用。（据说有人设置了500000SC/T，系统居然也成交了。具体可以查看这个帖子http://forum.sia.tech/topic/1418/bad-contracts-high-fees-major-renter-losses）。。。实在没有勇气再试下去了。\n&nbsp;   \n不知道Sia为什么把文件保存过程搞得这么复杂，为什么不能存多少就支付多少，还需要搞什么押金。\n&nbsp;   \n再说出租空间，空间出租者首先需要在自己的SC钱包里充值一定数量的SC，才能提供出租服务。但是系统并没有提供一个实时平均成交的价格，出租空间者没有办法知道自己设定的价格是高还是低。按照默认的价格设定在100SC/TB左右，48小时后发现没有成交记录。不知道是购买空间者已经被高额的费用吓走了，还是设定的价格过高。\n&nbsp;   \n结论，sia云作为一个圈钱工具，基本上目标是达到了。但是作为一个基本的云存储产品，不要说beta，连alpha都算不上，只能算个简单的proto，离商业化的距离还很遥远。高昂的费用也会阻止新的用户来参与试用和完善产品。没有买家的产品，结局就很容易预料了。如果机制不改变，基本上可以宣称sia云迟早会完蛋。当然现在看起来sia云存在的唯一目的估计只是为了让SC可以一直炒下去。",
			"added": 1520035850,
			"parent_topic_uri": "19_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 16,
			"title": "区块链体验报告（二）",
			"body": "我想，此篇报告的大标题能够很清晰的说明我对Sia的态度。也许这就是爱吧！\n&nbsp;   \n先聊一件跟Sia无关的事情。大概是在三四个月前，我打开一个很久没用过的某云盘，想下载之前存储在里面的文件，突然发现无法下载，文件夹全部为空，一查才知道很多云盘被禁。想要继续用，就必须升级为企业云盘，也就意味着免费的时代已经结束，人家开始收保护费了。想了下，把文件继续存储在第三方，那么我还是存在丢失文件的风险，并且它们收费也不低，遂即作罢。\n&nbsp;   \n再把时间拉回到两个礼拜之前，我通过《通往财富自由之路》开始接触区块链，因为区块链知道了Sia——一个去中心化的云存储区块链应用。当时心里咯噔一下，这不就是我所需要的云存储服务么！\n&nbsp;   \n简单来说，Sia是利用区块链技术，使任何人都可以享受安全、优惠的云存储服务。你不必担心第三方干扰，不必担心数据丢失，并且你还可以通过提供硬盘租赁获得收益。\n&nbsp;   \n听起来真的很美好是不是！于是，我花了几天的时间，亲身体验了一把传说中的Sia。\n&nbsp;   \n铺垫了这么久，终于开始正题了。\n&nbsp;   \n一：下载Sia\n&nbsp;   \n这里提供了Sia 下载地址，点开即可根据自己的电脑操作系统，在官网上下载客户端。\n&nbsp;   \n需要说明的一个是，目前官方提供两个版本的客户端：一个是Sia-UI、一个是Sia-UI（LTS）。这两个的差别是前者有更多的测试功能，可能存在漏洞，后者相对来说其功能都是经过长期测试的，应用更稳定。\n&nbsp;   \n（我的Mac系统上下载的是Sia-UI，因为我好奇心重，哈哈哈……）\n&nbsp;   \n二：认识Sia\n&nbsp;   \n下载安装包，解压，点击Sia图标，我们看到Sia-UI的操作界面是这样的：\n&nbsp;   \n图片来自简书App\n在图中右上角可以看到一个黄色的英文字母“Synchronizing”，因为当前的钱包节点为第一次启动，正在同步SIA区块链全节点数据，所以，显示的信息为“Synchronizing:8.9%”，当达到100%时，即为完成了全节点数据的下载。\n&nbsp;   \n不同的操作系统，数据保存的地址是不一样的。以Mac系统为例，Sia文件夹的位置在：Finder／Library／ApplicationSupport／Sia-UI／sia／，关键是这个文件夹藏的很深，身为一个计算机白痴，找到它我费了不少功夫，说多了都是泪啊。\n&nbsp;   \n界面左侧从上至下依次为：\n&nbsp;   \n?Files：用户文件上传、下载与文件管理功能界面（重要）；\n&nbsp;   \n?Hosting：共享存储主机的智能合约信息设置界面；\n&nbsp;   \n?Wallet：钱包管理界面（重要）；\n&nbsp;   \n?Terminal：终端命令交互界面；\n&nbsp;   \n?About：SIA版本信息显示界面。\n&nbsp;   \n三：创建Sia钱包\n&nbsp;   \nSia的代币简称SC，在使用存储服务时，需要消耗掉一些SC用来创建智能合约以及支付提供存储服务的硬盘。\n&nbsp;   \n图片来自简书App\n点击Wallet，显示两个选项，左边的是创建新钱包，右边是导入钱包。因为是第一次使用，我创建了一个新钱包。\n&nbsp;   \n钱包创建的过程：\n&nbsp;   \n图片来自简书App\n图片来自简书App\n在这里输入上面复制的password密码即可解锁。\n&nbsp;   \n创建钱包的时候你会发现两个问题：\n&nbsp;   \n1、Seed和Password是完全一样的；\n&nbsp;   \n2、在两种钱包创建方式的下方还有一个选项：“Use custom passphrase”，这个是指用户自设密码。\n&nbsp;   \n写到这里，不得不说下我自己给自己刨的大坑。我复制完Seed后没有保存，又没有及时解锁钱包，后面复制了别的文件，再想解锁就不可能了，尝试手动输入Password，不行，重装Sia还是不行，就在这里卡了快2个小时。幸运的是，我在简书上找到了一位老师-forest21000，他也是Sia的用户，而且写了不少关于Sia的文章，尝试联系他，居然回复我了，在他的帮助下我解决了钱包解锁失败的问题，大晚上的被我打扰帮我解决，真的感激不尽！！\n&nbsp;   \n四：钱包充值\n&nbsp;   \n创建好钱包后，需要先充值一些SC才可以创建智能合约、上传文件，所以我们必须先给钱包充值。\n&nbsp;   \n目前国内可以进行SC交易的是云币网，所以直接在云币网购买一些SC，转到Sia钱包就可以啦。\n&nbsp;   \n图片来自简书App\n这里，我又发现一个小问题，每次充值，Sia生成的地址都是不一样的，但对应的钱包相同，所以也就没什么好担心的啦。\n&nbsp;   \n五：创建存储津贴\n&nbsp;   \n在上传文件之前，还有一件事情必须做，那就是创建存储津贴，否则没有硬盘提供给你使用。\n&nbsp;   \n点击Files，右上角有个“Create Allowance“（创建存储津贴）选项，点击后弹出一个界面。\n&nbsp;   \n上面的英文是合约条款。该界面中需设置Allowance（津贴）的代币总额，该值可根据自己的存储量来设置，SIA也会根据输入的SC值进行费用与相应存储的估计并显示其估计值以供参考，如果在使用过程中发现allowance值不够用时可随时增加。\n&nbsp;   \n我设置的Allowance为1200SC，因为现在提供硬盘存储的人越来越多，所以大约可存储5TB的数据量，所需费用为1144SC，以购买时的币价计算，大约，￥157（可见我当时是以多高的价格买入的SC啊！！）\n&nbsp;   \n图片来自简书App\n确认好数额后点击Accept，在弹出的对话框中再点击confirm即可。\n&nbsp;   \n六：创建合约\n&nbsp;   \n创建好津贴后，Files界面的上方中间显示“Forming Contracts……”\n&nbsp;   \n图片来自简书App\n这说明SIA-UI正在自动创建合约，该合约的创建过程中是SIA根据租赁信息在全网中寻找与租赁需求匹配的托管主机（Host），一旦寻找到合适的托管主机，软件将会从我们已分配的Allowance中扣除相应的SC币，用于与托管主机“签订”合约，该信息在合约创建过程中可从“Wallet”界面中查看到：\n&nbsp;   \n图片来自简书APP\n合约创建完成后，就可以在Files界面的左上方看到总共花费的SC币数量和余额了：\n&nbsp;   \n图片来自简书App\n七：上传文件\n&nbsp;   \n终于可以上传文件啦，不容易啊。\n&nbsp;   \n点击右上角的Upload Files，在跳出的对话框里选择需要上传的文件，我选择了一个.mp3格式的和一个.pdf格式的文件尝试下。：\n&nbsp;   \n图片来自简书App\n上图中，每个文件的右侧会显示冗余备份的状态，其初始值为0.0x，当文件自身上传完后，将会变为1.0x，并且其显示颜色将由红色变为绿色，随后SIA将会在网络中生成该文件的另2个备份，同时右侧的文件传输状态将由“Uploading”变为“Boosting Redundancy”，直至上传完成后变为“Complete”，其备份值也将变为3x，即网络中有3份备份文件了。备份文件名称可以自己修改。\n&nbsp;   \n至此，我总算完成了在Sia上传存储文件的整个步骤，总共花费了两天多的时间。说下几点感受：\n&nbsp;   \n1、Sia-UI的操作界面是英文，这对于英文不好的童鞋来说是个坎。But，现在翻译软件这么发达，看不懂英文也不是什么大事；\n&nbsp;   \n2、由于目前提供存储硬盘的用户不多，签订智能合约和上传文件的速度都很慢。But，相信只要Sia不断推广，认识她并且加入她的人会越来越多；\n&nbsp;   \n3、测试版的Sia-UI还是有一些漏洞，我在使用的过程中就遇到一个，最后不得不把软件卸载重装，然后关机重新启动才得以恢复。希望这些漏洞在Sia团队的努力下克服，让使用者体验更好。\n&nbsp;   \n4、关于代币SC，本人有个很大的疑问：因为SC既是Sia存储代币，也是投资者买卖的数字资产，如果价格波动，如何保证Sia的用户在使用存储服务时，始终处在一个合理的价格区间？如果价格稳定，投资者又如何获利？\n&nbsp;   \n以上是我对区块链应用Sia的一些使用体会，希望对你有帮助。\n&nbsp;   \n作者：几唯Kiwi\n链接：https://www.jianshu.com/p/fc6aab82e451\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。",
			"added": 1520036024,
			"parent_topic_uri": "19_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 17,
			"title": "安全可靠的匿名文件分享工具：OnionShare",
			"body": "OnionShare 是一个可以为我们提供，安全可靠的匿名文件分享的工具。通过它我们可以以匿名的方式，来共享我们任何大小的文件。它通过启动一个 Web 服务器，使其作为 Tor 洋葱服务进行访问，并且生成一个不可预测的 URL 访问，来提供文件的下载。它不需要在互联网上设置服务器，或使用第三方的文件共享服务。您只需要在自己的计算机上托管文件，并使用 Tor 洋葱服务，建立一个互联网的临时访问 URL 。其他用户只需使用 Tor 浏览器连接到该临时访问，便可下载到你的共享文件了。\n&nbsp;   \n特点：\n&nbsp;   \n1.友好的用户图形拖放界面，并适用于 Windows，Mac OS X 和 Linux 系统。\n2.能够一次性共享多个文件和文件夹。\n3.支持多人同时下载文件。\n4.自动将临时访问 URL 复制到剪贴板。\n5.显示文件传输的进度。\n6.当文件完成传输后，OnionShare 会自动关闭，以减少被攻击面。\n7.支持多种本地化语言，并支持国际通用 unicode 编码文件名。\n&nbsp;   \n“如果你使用像 Dropbox 或 Mega 或 任何其它文件共享服务，你首先必须要建立在信任它们的基础上，才能使用它们。但不幸的是，它们往往会落到执法者手中，并成为有力的证据 。而 OnionShare 则允许您绕过所有第三方，并利用 Tor 网络让你在完全匿名的环境下，安全的将你的文件共享给其他用户。”——Micah Lee\n&nbsp;   \n当用户想要发送文件时，OnionShare 程序会在 Tor 网络上，创建受密码保护的临时站点 —— 所谓的 Tor 匿名服务 —— 在其计算机上运行。他们向收件人提供该站点的 URL 地址及连接密码。（这里最好使用那些通过 PGP 或 Off-The-Record 加密的即时通讯邮件。）收件人只需在 Tor 浏览器中，访问该临时 URL，就可下载到他人所共享的文件。\n&nbsp;   \n一旦其他用户成功下载完你的共享文件，你就可以取消该 web 服务，使链接永久失效。这样任何其他人，都将无法再访问该文件！\n&nbsp;   \n1.jpg\n&nbsp;   \n如何使用\n在共享你的文件之前，你首先需要在后台，打开你的 Tor 浏览器 。这将会提供给你一个 Tor 服务，并提供给 OnionShare 以启动洋葱下的服务。\n&nbsp;   \n打开 OnionShare 并拖放你要共享的文件和文件夹，然后单击开始共享按钮 。它会回显你一个 .onion 的网址，如 http：//asxmi4q6i7pajg2b.onio/egg-cain 这样的，并将其复制到剪贴板 。这个 URL 用来下载你共享文件的私密网址。如果您希望多个用户能够下载该共享文件，那么请取消选中“自动关闭”复选框。\n&nbsp;   \n将此私密网址，发送给你想要发送文件给他的人。注意：如果你发送文件只是一般的普通文件，您可以使用正常的方式发送你的 URL，例如：发送电子邮件，发布到 Facebook 或 Twitter 上等。相反如果你发送的文件比较重要，那么你就必须要使用更加安全的方式来传送你的 URL 地址。\n&nbsp;   \n接收文件的人不需要 OnionShare。他们只需要在 Tor 浏览器，打开你发送给他们的 URL，便能够下载文件。\n&nbsp;   \n命令行下的使用\n在 Linux 下，我们只需在 terminal 终端输入： onionshare 即可 。\n&nbsp;   \n在 Windows 下，只需将 C:\\Program Files (x86)\\OnionShare 添加到 PATH 环境变量下，之后在命令行下运行: onionshare.exe 即可 。\n&nbsp;   \n在 Mac OS X 下，我们首先在 terminal 下运行: ln -s /Applications/OnionShare.app/Contents/MacOS/onionshare /usr/local/bin 这条命令，然后在 terminal 下输入： onionshare 即可 。\n&nbsp;   \n当发件人想要对收件人保持匿名时，使用 Onionshare 无疑是最佳的选择。 如果举报人可以安全地向记者发送 Onionshare URL 和密码，那么他们就可能会使用它来泄露一些秘密信息，而不会被曝光身份。例如，维基解密 和 新闻组织 使用匿名泄漏软件 SecureDrop 来为他们自己提供 Tor 隐藏服务。Onionshare 可以给告密者更有效的保障，帮助他们像那些没有匿名提交系统的记者发送秘密信息。\n&nbsp;   \nOnionShare 保护了什么\n第三方无权访问正在共享的文件。 文件直接托管在发件人的计算机上，不会上传到任何第三方服务器上 。相反，发件人的计算机则成为了文件共享服务器。这有别于传统的文件发送方式（例如：在电子邮件中或使用云托管服务）则需要信任该服务，才能访问到共享文件。\n&nbsp;   \n网络窃听者不能窥探到传输中的文件。 因为 Tor onion 服务和 Tor 浏览器之间的连接是端到端加密的。因此，当收件人进行文件的下载时，攻击者不可能截获到共享文件数据 。如果窃听者位于发送者端，接收者端，或者是恶意的 Tor 节点。那么，他们也只能探测到 Tor 的流量而已 。如果窃听者处在接收者的 Tor 客户端与发送者的 Tor  服务的交汇节点上，则通讯流量也将会被 Tor 服务密钥来进行加密传输。\n&nbsp;   \n发件人和收件人的匿名性由 Tor 提供保护。 OnionShare 和 Tor 浏览器 保护用户的匿名性。只要发件人使用 OnionShare URL 匿名地与接收者通信。那么，接收者和窃听者就不会知道发件人的真实身份。\n&nbsp;   \n即使攻击者枚举洋葱服务，共享文件仍然安全 。 目前，已经有针对 Tor 网络的攻击，可以枚举出洋葱服务。 但是即便有人发现了 OnionShare 洋葱服务的 .onion 地址，如果他们不知道 slug ，那么他们仍无法下载到共享文件。slug 是从 6800 个词的列表中，随机选出 2 个词生成的，这意味着它存在 6800 ^ 2，约 46 万种可能性 。而 OnionShare 只允许用户 20 次的错误机会，因此暴力破解的方式将会失效。除此之外 ，OnionShare 服务器还会使用常量时间字符串比较函数，来检查请求的 URI。因此，定时攻击也不能起到很好的攻击效果。\n&nbsp;   \nOnionShare 保护不了什么\nOnionShare URL 的传送方式可能并不安全 。发件人通过安全的传输渠道将 OnionShare URL 发送给接收者 。如果他们采用不安全的发送渠道（例如：通过受攻击者监控的电子邮件），那么窃听者将知道，他们正在使用 OnionShare 来发送文件。此时，如果攻击者在合法收件人之前获取到 OnionShare URL，并迅速的使用 Tor 浏览器加载。那么，他们将可以下载你所共享的文件。因此如果是重要的文件共享，请务必使用例如：加密的电子邮件，聊天或语音中来传送 URL 。\n&nbsp;   \nOnionShare URL 的传送方式可能并不安全 。 虽然 OnionShare 和 Tor 浏览器允许匿名发送文件，但是如果发件人也希望保持匿名性，那么就需要采取一些额外的措施，来发送 OnionShare URL 。例如，可以使用 Tor ，创建一个只能通过 Tor 访问的匿名电子邮件或聊天帐户，来共享你的 OnionShare URL 。",
			"added": 1520038017,
			"parent_topic_uri": "19_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 18,
			"title": "markdown源码托管",
			"body": "http://127.0.0.1:43110/1MgHVPCE1ve6QfKrgsqCURzRj72HrRWioz/?recent",
			"added": 1520038405,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 19,
			"title": "听说vim能让论坛变得活跃？",
			"body": "",
			"added": 1520039172,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 20,
			"title": "有哪些做种的网站？",
			"body": "现在新网站做种很费劲",
			"added": 1520039352,
			"parent_topic_uri": "8_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 21,
			"title": "emule一键解压使用版和迅雷极速版",
			"body": "emule一直有一个问题，就是配置麻烦，新手有时候几天都没有办法连接kad和服务器，所以我做了一个已经配置好的版本，基于emule0.50a-Xtreme8.1-upnppackzh。下载解压后，运行emule.exe，就会自动连接ed2k和kad。\n\n注意kad搜索和连接的kad节点数量有关系，所以请多挂一会这个客户端，这样搜索的资源才会更多，最好开机启动。\n\ned2k://|file|emule.2017-08-21.7z|2156714|3558920C44B4C2879A89E5985C21F965|h=RVLIQXCXYPYQ3YVVNKCRBHS3ZWZSRTOY|/|/\n\n迅雷极速版，无广告 不限速。\n\n最后一个版本:\n\ned2k://|file|%E8%BF%85%E9%9B%B7%E6%9E%81%E9%80%9F%E7%89%88%20ThunderSpeed%201.0.35.366.exe|24337480|97AD71909AB663894A9BFE686CD3B3A8|/",
			"added": 1520040829,
			"parent_topic_uri": "19_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 22,
			"title": "[转载] 浅谈离线下载的认知",
			"body": "首先说明一点：作者是我\n其次，这是写给仍然沉迷在离线下载中的人看的。如果你觉得这篇文章还需扩充或者有错误的，欢迎留言\n\n原文地址：http://blog.csdn.net/wildly_boy/article/details/79358360",
			"added": 1520041304,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		}
	],
	"topic_vote": {},
	"next_comment_id": 25,
	"comment": {
		"17_13Z7XxTa7JuFat3KzzMWu3onwM6biLuurJ": [
			{
				"comment_id": 1,
				"body": "菜单显示 TOR：可用，这是开启tor了吗?",
				"added": 1519977770
			}
		],
		"1_13Z7XxTa7JuFat3KzzMWu3onwM6biLuurJ": [
			{
				"comment_id": 2,
				"body": "> [michaelscofield](#comment_7_1eSLhdoxHCaydaqxqJaXTYjpaJZV75i6g): Can I post some pictures on this forum?\n\nno",
				"added": 1519978009
			},
			{
				"comment_id": 3,
				"body": "> [zwkbtcn1966](#comment_1_1Ebb1PBQz8KUVdan9K5mJNFN3Jg2ibf2jg): 还是不明白\n\n哪不明白？",
				"added": 1519978023
			}
		],
		"1_1DhW5omP4x5oVKtvw9sjW6MLd48qSZKZ3L": [
			{
				"comment_id": 4,
				"body": "zeronet是一个可以找到小道消息的地方",
				"added": 1519980436
			}
		],
		"3_164S7NQPD3KDoiVyU8oKx1VmsZM7z161tB": [
			{
				"comment_id": 5,
				"body": "zeromux、freenet文件托管服务",
				"added": 1519987058
			},
			{
				"comment_id": 6,
				"body": "零网上的自媒体",
				"added": 1519987317
			}
		],
		"7_164S7NQPD3KDoiVyU8oKx1VmsZM7z161tB": [],
		"6_164S7NQPD3KDoiVyU8oKx1VmsZM7z161tB": [],
		"37_13Z7XxTa7JuFat3KzzMWu3onwM6biLuurJ": [
			{
				"comment_id": 11,
				"body": "> [oldriver](#comment_1_1JMqKZtwHC47sEP3rhskMesD1froSGLkJG): 想问一个问题，如果这套系统就像是BT的运行方法一样，那会不会越热门的网站打开的越快，越冷门的网站越慢甚至直接绝种？ 而且像我现在发布评论，我看到有5个节点接收到，那大概什么时间才能扩散到版主你那里？这种聊天评论除了时间上的延迟以外，是和真正的BBS的意义一样吗？\n\n节点多可以达到实时的效果",
				"added": 1520003189
			}
		],
		"1_13KgWnGoLMe14Kb9URJBK3HG7nvKatTYo7": [
			{
				"comment_id": 12,
				"body": "有可能",
				"added": 1520003454
			},
			{
				"comment_id": 23,
				"body": "零网可能会有挖矿病毒",
				"added": 1520037774
			}
		],
		"161_1DcMmKhgdfkR1GDA6zhWhoFRreaej4wLmW": [
			{
				"comment_id": 13,
				"body": "钱",
				"added": 1520003618
			}
		],
		"1_1GTwQxk1hf4MUno2UeEXhV24p2FzydQQrV": [
			{
				"comment_id": 14,
				"body": "home键",
				"added": 1520003753
			}
		],
		"267_1DcMmKhgdfkR1GDA6zhWhoFRreaej4wLmW": [
			{
				"comment_id": 15,
				"body": "ipfs网盘\nfreenet网盘\n私有云",
				"added": 1520003897
			}
		],
		"1_1LoD9FZBfChNBbELMhGinre98Sa6YZ9C62": [
			{
				"comment_id": 16,
				"body": "ZeroVoat不能删帖",
				"added": 1520004231
			},
			{
				"comment_id": 18,
				"body": "> [longzaowuzhu](#comment_170_1N2eNZ5w1dpoBcwatsSuTaeNzHgSLjyrpU): http://127.0.0.1:43110/1J1c7eML6uMwDU4uiKbKRxoqxGP6WMFMvb/自己克隆组建兴趣贴吧\n\n原来ZeroVoat是这么玩的",
				"added": 1520004439
			},
			{
				"comment_id": 19,
				"body": "不过ZeroVoat好像有点问题，怎么联系站长",
				"added": 1520005246
			}
		],
		"1_14di5YWKmBt9x9zKef3hthF8xAJ3Lizc91": [
			{
				"comment_id": 17,
				"body": "打不开",
				"added": 1520004317
			}
		],
		"12_164S7NQPD3KDoiVyU8oKx1VmsZM7z161tB": [
			{
				"comment_id": 20,
				"body": "新人来到零网，要有一份好的地图",
				"added": 1520006879
			}
		],
		"14_164S7NQPD3KDoiVyU8oKx1VmsZM7z161tB": [
			{
				"comment_id": 21,
				"body": "上网的本质是什么？交换信息",
				"added": 1520034459
			},
			{
				"comment_id": 22,
				"body": "零网账号是通用的，不像别的网站需要注册好几个账号",
				"added": 1520034518
			}
		],
		"22_164S7NQPD3KDoiVyU8oKx1VmsZM7z161tB": [
			{
				"comment_id": 24,
				"body": "第一次写博客，写的不好请见谅\n&nbsp;   \n&nbsp;   \n离线下载是什么？\n可能很多人第一次接触的时候都感觉这个词很陌生。\n让我们来看看百科对离线下载的解释：\n离线下载其实就是下载工具的服务器代替电脑用户先行下载，多用于冷门资源。比如，电脑用户的正常下载最大速度能达到200KB/S，但是某个资源是冷门资源，下载速度只能达到10KB/S，电脑用户就得下很久，如果用户使用离线下载技术，就可以让服务商的服务器代替电脑用户下载，电脑用户就可以关掉下载工具或者机器，节约时间和电费。等到离线下好了，电脑用户再从下载工具的服务器上以200KB/S（理论上会员等级越高越快，但最高速度仍然受限制于你的本身宽带）的速度下到自己的电脑上。即使对于热门资源，离线下载也能省却许多挂机等待的时间，最重要的是能够腾出电脑宽带做其他的事情。\n简单来说，就是让服务器先帮你下载某个文件。等你需要的时候再传给你。因为服务器很多都是千兆带宽以上，所以基本上可以做到秒传。\n听起来很不错，我们来看看离线下载运用在什么地方\n离线下载运用在什么地方？\n我们看看某个网盘所提供的离线下载服务 \n&nbsp;   \n我们可以很清楚的看到：该网盘提供的离线下载不仅包括了基本的http/ftp传输协议。还包括了在中国较流行的p2p协议。 \n&nbsp;   \n可能有人就要问了：p2p是个什么东西？ \n以下是维基百科对p2p的解释\n对等式网络（peer-to-peer， \n简称P2P），又称点对点技术，是无中心服务器、依靠用户群（peers）交换信息的互联网体系，它的作用在于，减低以往网路传输中的节点，以降低资料遗失的风险。与有中心服务器的中央网络系统不同，对等网络的每个用户端既是一个节点，也有服务器的功能，任何一个节点无法直接找到其他节点，必须依靠其户群进行信息交流。 \nP2P节点能遍布整个互联网，也给包括开发者在内的任何人、组织、或政府带来监控难题。P2P在网络隐私要求高和文件共享领域中，得到了广泛的应用。使用纯P2P技术的网络系统有比特币、Gnutella，或自由网等。另外，P2P技术也被使用在类似VoIP等实时媒体业务的数据通信中。有些网络（如Napster、OpenNAP，或IRC \n@find）包括搜索的一些功能，也使用客户端-服务器结构，而使用P2P结构来实现另外一些功能。这种网络设计模型不同于客户端-服务器模型，在客户端-服务器模型中通信通常来往于一个中央服务器。\n没错，p2p就是这么厉害。它的出现推动着互联网去中心化的发展。用p2p技术进行支付的话是个较安全的做法。p2p的出现也说明了网络通讯不一定要靠服务器\n&nbsp;   \n回到主题来 \n可能有人问了：p2p和离线下载不是一类的吗\n错\n前文我们谈到，离线下载最主要的功劳是服务器。但p2p中的服务器作用几乎不大。举个例子：玩过emule（不是电驴是电骡）的都知道，现在所说的ed2k其实分为两种协议。一种是要依赖服务器才能进行文件传输的edonkey，一种是利用一个叫节点的东西进行文件传输的kademlia。在进行下载文件的时候，持有这个文件的节点叫源。这样当你进行下载的时候。一边edonkey通过服务器来帮你寻找拥有这个文件的人。一边kademlia通过hash来寻找拥有这个文件的人。这两个家伙就构成了完整的ed2k网络。\n可能有人问了：我听说emule有着一个叫排队的机制。据说那里可能会出现排队排一个星期的情况，我用离线下载帮我去排队，等排到后秒传给我，不行吗？\n当初我接触离线下载的时候也以为离线下载的好处就是这个。从来没有想到过它已经被国内的厂商变成了一个恶意工具。\n&nbsp;   \n离线下载的危害 (国内)\n我们先看一下一篇文章 \n（摘录几条）\n这里以迅雷为例，旋风与前者相同。 \n迅雷声称使用P2SP技术，在eMule方面，也就是使用eMule模块的P2P下载+http的离线下载。相应的讨论也分为两个方面。 \n提醒：官方eMule连接迅雷，显示其版本为“eMule 0.48a”，但迅雷并未开源，公布源代码。\n下文证据证明：迅雷完全是通过吸血行为获得资源供会员离线下载的。 \n《迅雷离线下载如何破坏资源分享——电驴和电骡用户必看》 \n迅雷官方客服也承认“离线下载完成后是不会做种的” \n下帖测试中也发现迅雷的eMule模块的排队系统存在问题，怀疑其具有社区吸血和其他吸血骡特征。 \n《不开反吸血下载速度测试》 \n关于研究、评论迅雷吸血行为的文章太多太多，我就不重复他们的话了，只摘文章 \n《迅雷eMule下载遭质疑 网友称其变相吸血驴》 \n《离线下载：披着节能外衣的吸血鬼》 \n《反吸血驴/吸血骡》 \n《[P2SP]迅雷好可怕》 \n《[扫盲]迅雷是流氓？》 \n《为什么说电驴爱好者和电骡爱好者要反对迅雷？》 \n《【转】试总结迅雷腾讯等是如何利用网友电骡免费上传发布的资源变为收费离线下载的》 \n《试图解迅雷等吸血软件及离线是如何抢劫垄断电骡资源让免费共享变收费下载的》 \n《为什麼连各大P2P客户端都要封锁迅雷》\n&nbsp;   \n总结\n在p2p中，离线下载是个不折不扣的违反p2p精神的软件。通过各种卑劣的手段（例如：上传很少部分却下载很多，下载完就断开连接等等）来为用户获取了较大的下载速度。却没有上传给其他正规客户端。导致了某个文件因为没有人拥有出现了没源的情况。使得一些正规客户端无法下载某些文件。并且，上传给离线下载的用户是浪费带宽，且没有积分系统的回报。久而久之，就造成了正规用户和恶意用户都无法正常下载某个文件。 \n所以，我们应当尽量不要用离线下载。除了某些特殊的情况。例如急需某个好几g的文件时我们可以考虑使用下离线下载。又或者一些国外的http/ftp文件，我们也可以适当的使用离线下载。但不要滥用。到头来可能会出现搬石头砸自己的脚的这种情况。\n",
				"added": 1520041411
			}
		]
	},
	"comment_vote": {}
}