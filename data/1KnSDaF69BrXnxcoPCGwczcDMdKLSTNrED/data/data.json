{
	"title": "请叫我谬谬",
	"description": "心理学，编程",
	"links": "- [My Blogger](https://duckhere.blogspot.com/)",
	"next_post_id": 15,
	"demo": false,
	"modified": 1484576512,
	"post": [
		{
			"post_id": 14,
			"title": "聊聊node的包",
			"date_published": 1484567148.036,
			"body": "昨天，我们对[package.json是个什么鬼](?Post:12)有了些认识，今天，我们就来聊一聊node的包，如何使用及其工作机制是什么？\n\n\n---\n\n\n####如何使用node的模块\n注意：node.Js是服务器端语言，有些不能直接被浏览器解析。你需要先安装一个构建工具，比如webpack，先把你写的nodeJs解析成普通的js，然后引入html，才能看到效果。如果你在运行下面的例子时，总是报“Uncaught ReferenceError: require is not defined”这种错误，原因就是你没有对nodeJs进行编译，就直接让它在浏览器跑起来了。注意，每次修改完代码后，都要记得编译哦。\n\n场景如下：\n```\n//circle.js\nconst PI = Math.PI;\n\nexports.calculate = {\n   area :function (r) {\n       return PI*r*r;\n   },\n   circumference:function (r) {\n       return 2 * PI * r;\n   }\n\n}\n\n```\n```\n//index.js\nvar circle = require('./circle.js');\nconsole.log(circle.calculate.area(14));\nconsole.log(circle.calculate.circumference(4));\n\n```\n你在circle.js中定义了一个router对象，然后你想在index.js中使用router的函数。那么，如上所示，你需要先把router exports出来，然后在index.js中通过require引入，然后就可以调用router的各种方法了。\n当然，还有第二种exports的方式，如下：\n```\n//circle.js\nconst PI = Math.PI;\n\nvar calculate = {\n   area :function (r) {\n       return PI*r*r;\n   },\n   circumference:function (r) {\n       return 2 * PI * r;\n   }\n};\nmodule.exports = calculate;\n```\n然后在index.js中以同样的方式引入就ok了。\n\n#### require()方法\n```\nrequire(X) from module at path Y\n1. If X is a core module,\n   a. return the core module\n   b. STOP\n2. If X begins with './' or '/' or '../'\n   a. LOAD_AS_FILE(Y + X)\n   b. LOAD_AS_DIRECTORY(Y + X)\n3. LOAD_NODE_MODULES(X, dirname(Y))\n4. THROW \"not found\"\n```\n以上这小段[摘自官方文档](https://nodejs.org/api/modules.html#modules_all_together)。require()方法会按照上述顺序依次执行，直到找到目标文件。其依赖的函数如下，也摘自官方文档。\n\n```\nLOAD_AS_FILE(X)\n1. If X is a file, load X as JavaScript text.  STOP\n2. If X.js is a file, load X.js as JavaScript text.  STOP\n3. If X.json is a file, parse X.json to a JavaScript Object.  STOP\n4. If X.node is a file, load X.node as binary addon.  STOP\n```\n```\nLOAD_AS_DIRECTORY(X)\n1. If X/package.json is a file,\n   a. Parse X/package.json, and look for \"main\" field.\n   b. let M = X + (json main field)\n   c. LOAD_AS_FILE(M)\n2. If X/index.js is a file, load X/index.js as JavaScript text.  STOP\n3. If X/index.json is a file, parse X/index.json to a JavaScript object. STOP\n4. If X/index.node is a file, load X/index.node as binary addon.  STOP\n```\n```\nLOAD_NODE_MODULES(X, START)\n1. let DIRS=NODE_MODULES_PATHS(START)\n2. for each DIR in DIRS:\n   a. LOAD_AS_FILE(DIR/X)\n   b. LOAD_AS_DIRECTORY(DIR/X)\n```\n```\nNODE_MODULES_PATHS(START)\n1. let PARTS = path split(START)\n2. let I = count of PARTS - 1\n3. let DIRS = []\n4. while I >= 0,\n   a. if PARTS[I] = \"node_modules\" CONTINUE\n   b. DIR = path join(PARTS[0 .. I] + \"node_modules\")\n   c. DIRS = DIRS + DIR\n   d. let I = I - 1\n5. return DIRS\n```\n简而言之，就是require(x)时，它会先看是不是node的核心库，如果不是，就根据X的路径去查找，如果x没有带路径或者根据路径没查到，就去node_modules/ 路径下查找。上述任何一个步骤找到后，就返回，否则，就报错：“找不到文件”。\n未完待续。\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。\n\n"
		},
		{
			"post_id": 13,
			"title": "Ask what I can do for others",
			"date_published": 1484335347.483,
			"body": "Do not ask for what others can do for you, ask what you can do for others. I heard these words for several times. But I never thought about it seriously like tonight.\n\n\n\n---\n\nYes, I always ask what others done for me, and what they can do for me.I ask those naturally. I think that they are supposed to do things for me, and also, I deserve this. However, I am wrong.\n\nNow, just turn things over. when I ask myself what I can do for others, I have a sense of responsibility, and I have more power to challenge things. I will be the happiest person when I bring happiness to others.\n\nI will try my best to do this and I believe I can make it.If you want, just join me and make your first step."
		},
		{
			"post_id": 12,
			"title": "package.json是个什么鬼",
			"date_published": 1484155135.5,
			"body": "webpack是一个很棒的构建工具。我把自己的学习经验理一理，分享给大家。这个主题我会分三个部分来讲：\n- package.json 是个什么鬼\n- 聊聊node的“包”\n- webpack的原理及使用\n\n前两部分是铺垫，也是使用webpack绕不开的两个东西。\n今天，我们先来看看第一个，package.json是个什么鬼。\n\n\n---\n\n\npackage.json文件是Node.js来描述一个项目信息的文件。\n#### 如何生成package.json文件\n进入项目根目录，输入：\n```\nnpm init\n```\n根据提示填写相应的项目信息，然后一路回车，就创建好了你的package.json文件。\n其实，package.json文件就是一个描述项目信息的json文件而已，如果你觉得上述生成太麻烦，可以自己新建一个package.json直接写下对应的信息就好。比如：\n```\n{\n  \"name\": \"webpack\",\n  \"version\": \"1.0.0\",\n  \"description\": \"learn Webpack\",\n  \"main\": \"index.js\",\n  \"keywords\": [\n    \"demo\",\n    \"webpack\"\n  ],\n  \"scripts\": {\n    \"dev\": \"webpack-dev-server --devtool eval --progress --colors\",\n    \"deploy\": \"NODE_ENV=production webpack -p\"\n  },\n  \"author\": \"Miumiu\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"babel-core\": \"6.x\",\n    \"babel-loader\": \"6.x\",\n    \"babel-preset-es2015\": \"6.x\",\n    \"babel-preset-react\": \"6.x\",\n    \"bundle-loader\": \"^0.5.4\",\n    \"css-loader\": \"0.x\",\n    \"file-loader\": \"0.x\",\n    \"history\": \"^1.17.0\",\n    \"html-webpack-plugin\": \"2.x\",\n    \"jquery\": \"3.x\",\n    \"jsx-loader\": \"~0.13.2\",\n    \"open-browser-webpack-plugin\": \"0.x\",\n    \"react\": \"15.x\",\n    \"react-dom\": \"15.x\",\n    \"react-router\": \"2.x\",\n    \"style-loader\": \"0.x\",\n    \"url-loader\": \"~0.5.6\",\n    \"webpack\": \"1.x\",\n    \"webpack-dev-server\": \"1.x\"\n  },\n  \"repository\": \"miumiu/webpack-learn\"\n}\n```\n\nso easy！接下来，再重点了解一下上述文件中几个特别的字段。\n#### package.json文件中的字段信息\n#####字段 \"name\" 和 \"version\"\nname 和 version是最重要的两个字段，如果缺失他们你的依赖包将无法安装。\n\n#####字段 \"scripts\"\n\"scripts\"字段：npm 允许在package.json文件中，用\"scripts\"字段定义脚本命令。\n\"scripts\"的每个属性，都对应一个命令行脚本。比如上述package.json文件中\"dev\"属性对应的脚本就是```\"webpack-dev-server --devtool eval --progress --colors\"```。可以通过npm run来来执行脚本。\n比如，上述文件中执行 npm run dev 就相当于执行\n```\nwebpack-dev-server --devtool eval --progress --colors\n```\n\n执行 ```npm run ```可以查看当前项目所有的npm脚本命令。\nnpm 脚本就是就是Shell脚本，任何在命令行可以执行的脚本都可以放在里面。\n此外，当前项目node_modules/.bin目录下的所有脚本，都可以直接调用，而不用加路径。因为npm run 会新建一个Shell，会将当前目录node_modules/.bin子目录加入PATH变量。执行结束后，再将PATH变量恢复。\n- 可以使用Shell通配符。比如 *.js 表示任意以.js结尾的文件；**/*.js 表示任意一层子目录下以.js结尾的文件，为了防止被转译，建议写成 ***/\\*.js。\n- 可以用--给脚本命令传参。\n比如执行下面这个脚本要加颜色：\n```\n\"scripts\": {\n    \"dev\": \"webpack-dev-server\"\n  }\n```\n可以执行：\n```\nnpm run dev --color\n```\n\n- 执行顺序\n同时执行用 & ，比如：\n```\nnpm run dev & npm run deploy\n```\n前一个成功再执行下一个用 &&, 比如：\n```\nnpm run dev && npm run deploy\n```\n- 默认值\nstart 和 install 两个属性有默认值。\n```\n\"scripts\": {\n    \"start\": \"node server.js\",\n    \"install\":\"node-gyp rebuild\"\n  }\n```\n即如果项目根目录下有server.js，```npm start``` 默认执行 ```node server.js```;\n如果项目根目录下有binding.gyp,npm 会默认将install 命令用node-gyp编译。\n- pre 和 post\n你可以为一个脚本设置两个状态，比如：\n```\n\"scripts\": {\n\t\"predev\":\"echo predev\",\n    \"dev\": \"webpack-dev-server\",\n    \"postdev\":\"echo postdev\"\n  }\n```\n这样，当你执行 ```npm run dev``` 时，会自动按顺序执行\n```\nnpm run predev && npm run dev && npm run postdev\n```\n- 简写\n\n```npm start``` 即为 ```npm run start```\n```npm stop``` 即为 ```npm run stop```\n```npm test``` 即为 ```npm run test```\n```npm restart``` 即为 ```npm run stop && npm run restart && npm run start```\n- 变量\n```\n{\n  \"name\": \"webpack\",\n  \"version\": \"1.0.0\",\n  \"description\": \"learn Webpack\",\n  \"main\": \"index.js\",\n  \"keywords\": [\n    \"demo\",\n    \"webpack\"\n  ],\n  scripts\": {\n\t\"predev\":\"echo predev\",\n    \"dev\": \"webpack-dev-server\",\n    \"postdev\":\"echo postdev\"\n  }\n}\n```\n比如，在项目的js文件中，可以通过process.env.npm_package_name 取得package.json中name字段的值”webpack“；在Bash中可以通过$npm_package_name取得package.json中name字段的值”webpack“。process.env.npm_package_script——predev 的值为\"echo predev\"其他字段同理。\n\n##### 字段 \"dependencies\"\n\n\"dependencies\" 字段：这里包含了你项目所需的全部依赖。执行以下命令可以安装所有依赖。\n```\nnpm install\n```\n当你要安装其他依赖包时，记得：\n```\nnpm install --save dev 依赖包\n```\n这样，你安装的这个依赖包的信息就会自动保存在package.json文件里面了。否则，你需要手动将安装的依赖包填进去。\n##### 字段\"description\"和\"keywords\"\n\"description\"和\"keywords\" 这两个字段会让人们通过```npm search```时找到你的包。\n#####字段\"files\"\nfiles指你项目中所包含的文件。你也可以通过在项目根目录下新建.npmignore文件，就像.gitignore文件那样，忽略你不想被追踪的文件。\n暂且介绍这些，更多详情请移步[官网](https://docs.npmjs.com/files/package.json) 。\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。\n"
		},
		{
			"post_id": 11,
			"title": "乌合之众：群体信念形成的原因",
			"date_published": 1483335318.44,
			"body": "在[上一篇](http://127.0.0.1:43110/1KnSDaF69BrXnxcoPCGwczcDMdKLSTNrED/?Post:10:%E4%B9%8C%E5%90%88%E4%B9%8B%E4%BC%97%EF%BC%9A%E7%BE%A4%E4%BD%93%E5%BF%83%E7%90%86%E7%9A%84%E7%89%B9%E5%BE%81)中，我们了解了群体的基本特征，接下来，我们将进一步分析群体的信念为什么会形成。\n\n\n---\n\n\n- 种族\n种族，决定着群体气质的特征。并且通过遗传进行延续。\n- 传统\n传统是种族综合作用的产物，它指过去的观念、欲望和感情。\n- 时间\n时间可以强化信念在群体心中的地位。\n- 政治和社会制度\n- 教育\n教育是群体信念产生的土壤。试想，从小学到大学一直死记硬背的学生们，他们如何才会具备独立思考和批判的意识呢？No,服从和愚昧，是他们学到的唯一“本领”。而在社会中，需要的是判断力、经验、个性、开拓精神。这一批批**为考试而活着**的年轻人，又能具备什么竞争力呢？\n\n\t真正的教育，应该建立在**专业课程**上。工程师应该在车间而非学校被训练出来；律师应该在律师事务所而非在学校成长起来。\n\n以上都是群体信念形成的间接因素，接下来我们讨论一下影响群体信念的直接因素。\n- 形象、词语和套话\n群体有着极强的想象力，这些想象力需要利用一些词语和套话来激活。最不明确的词语，影响可能最大。比如祖国、民主、平等、自由。这些词语的作用是让受众免去思考。当说“爱国”时，是指“爱这个政党？”，还是“爱这个种族？”，还是其他？“平等”是指“谁和谁，具体在哪些情况下，哪些事物上的平等？”我们中的大多数从来都没有思考过这些词语的真正含义，却将它们“奉为神旨”。而深谙群体心理的政客，有何尝不是总拿这些模糊的词语来愚昧民众呢？\n- 幻觉\n群体一直处在幻觉的影响之下，包括宗教幻想、政治幻象和社会幻象。供应这些幻觉的，很容易成为群体的主人；而破坏这些幻觉的，很容易成为他们的牺牲品。\n- 经验\n历史经验可以让真理在群众心中牢固生根。\n##### 群体领袖及其说服的手法。\n群体，会本能地让自己处在一个头领的统治之下。这些头领往往有着极其坚定的信念，无论这些信念有多么荒诞。同时，他们也深谙巧言令色，知道如何来取悦和说服群体。\n##### 领袖的动员手段：断言、重复和传染\n断言简单明了，不理会任何推理和证据，可以让观念迅速进入群体的大脑。而重复，则会让一个观念在群体的大脑中生根。群体的信念会因为传染而非推理得到普及。\n#####名望\n群体总是对名望俯首称臣。名望也是说服群众的一个基本因素。而名望产生的主要原因就是成功，昨日的英雄一旦遭遇失败，很可能今天就会受到侮辱。\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。"
		},
		{
			"post_id": 10,
			"title": "乌合之众：群体心理的特征",
			"date_published": 1483269539.23,
			"body": "当你一个人时，你有自己的个性和想法；当你是群体中的一员时，你又会展现出什么样的心理特征和行为特征呢？《乌合之众》，一本研究群体心理学的书籍，或许能给我们一些启发。\n\n\n---\n\n\n这本书主要讲了群体的心理特征是什么，以及为什么会产生这些心理特征，最后，向我们列举了几种不同的群体分类。\n\n###群体的一般特征\n**群体的定义：**这里的群体**不是指很多聚集在一起的个人**，而是特定条件下**组织化的群体**，更多地是指**“心理群体”**。无论这些个体的背景是否相同，当他们聚集在一起时，会表现出异于自己常态的心理和行为。也就是说，无论是由一群高智商的专家组成的群体，还是由一群教育水平较低的工人农民组成的群体，他们所做的决定和表现出来的行为**别无二致**。那为何会出现如此奇怪的现象呢？\n- 无意识的压倒性作用\n无意识是种族的先天禀性。同一种族中的个体，无论他们智力上差别有多大，他们在情感方面差别都很小。也正是这些相似的性格特征，变成了群体中的共同属性。\n- 数量\n群体的数量会赋予个体一种势不可挡的力量，使得他可以肆意发泄自己的欲望而无需对责任感有任何顾虑。\n- 暗示、传染与群体催眠\n身处群体，个体的感情和行动都会被被暗示和传染。就像被催眠了一样，有意识的人格消失了，只剩下“身不由己”。他们甚至可以为群体毫不犹豫地牺牲自己。\n\n### 群体的感情和道德观\n\n##### 群体冲动、易变、急躁\n群体总是受当前刺激因素的影响。在刺激作用下，他们可能变得残忍或豪爽，怯懦或勇猛，总是走向某一种极端。\n##### 群体易受暗示和轻信\n群体受无意识的支配，没有任何批判能力。一个人编造的故事，经传染很快就会被所有人接受。\n##### 群体情绪夸张和单纯\n群体的情绪可以是极其残暴的，也可能是最崇高的美德。但是，群体的夸张只作用于感情，对群体智力没有影响。只要存在于群体中，个体的智力就会大大下降。\n##### 群体偏执、专横、保守\n对于一种观念或建议，群体或者全盘接受，或者全盘拒绝。群体总是对强权卑躬屈膝，而不会听名于温和的“主子”。\n##### 群体的道德\n如果“道德”是指持久地尊重一定的社会习俗，不断抑制自己的冲动。那么显而易见，群体的道德水平十分低下。他们会经常放纵自己低劣的本能，也经常表现出崇高的道德行为。\n### 群体的观念、推理与想象力\n#####群体的观念\n群体的观念分为两类，一类是因暂时的环境影响产生的观念，这种观念来去匆匆，不会产生持久的影响；一类是基本观念，具有极大的稳定性。比如宗教观念，民主观念、社会主义等等。当然，这两种观念有一个共同的特点，即**采取简单明了的形式**，才会被群体所接受。虽然群体极易接受某种观念，但这种观念在群体脑中扎根却需要很久，而且一旦扎根，根除它们也需要很长的时间和努力。\n#####群体的理性\n群体所接受的判断，仅仅是强加给他们的判断。他们不推理或只会错误地推理。\n##### 群体的想象力\n**群体只会形象思维**，而且想象力很强大。比如，告诉他们在一场地震中伤亡5000人，他们可能毫无感觉；然而，给他们呈现一个鲜血淋漓的尸体，他们会瞬间意识到这个地震带来的灾害有多大。\n### 群体信仰所采取的宗教形式\n一切宗教或者政治信条之所以能使群众崇拜、服从，都是因为他们成功激起了群众的感情。群众因而会去传播这些信条，并把不接受的人列为仇敌。\n\n至此，我们已经了解了群体的基本特征，包括感情、道德、观念等，稍后，我们会继续分析这些种种产生的原因是什么。\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。"
		},
		{
			"post_id": 9,
			"title": "设计模式-开山篇",
			"date_published": 1482949145,
			"body": "你是否整日埋头编码？却忘了跳出来，思考一下如何更高效地编码？那么，是时候了，快给自己充个电，补补设计模式方面的知识吧！\n\n---\n\n\n\n### 设计模式是什么？\n**设计模式**告诉我们**如何组织类和对象以解决某种问题**。**模式不是代码**，而是设计问题的通用解决方案。也就是说，设计模式的关注点是**如何解决一个问题**，而不是具体的步骤，或者详细的实现。这意味着，我们**要针对接口编程**，**而非针对实现编程**。这到底是啥意思呢？举个例子：\n\n你刚接到了一个任务：你要完成一个问卷管理系统。等等，先别急着编码，先来想想，这个系统需要什么功能。最基本的，一个问卷管理系统需要对问卷进行添加、修改、删除、查询、展示、保存结果。所以，我们可以先定义好上述六个接口。至于每个接口的实现，就不在本文的讨论范围之内了。\n\n接下来，我们来了解几个设计原则。\n### 设计原则\n- **原则一**\n**找出应用中可能需要变化的代码，将它们独立出来，不要让它们和那些不需要变化的代码混在一起。**当你把易变的代码抽出来，保持传入值，返回值不变，不论你对它中间的实现怎么修改，都不会影响到它外部其他代码的稳定性。这样的好处是，可以大大降低代码的耦合性；同时，如果出了bug，可以帮你更快地锁定它。\n\n- **原则二**\n**针对接口编程，而非针对实现编程。**可以尝试去养成这样一个习惯，在真正编码之前，先抽出时间把问题理清楚，把接口定义好。这并非会浪费你的时间，反而会让你更轻松，更快地完成任务。\n\n- **原则三**\n**多用组合，少用继承。**这样可以使整个系统更有弹性。同时，通过动态组合对象，当有新的功能出现时，可以添加新代码来实现它，而无需修改现有的代码。这样，可以减少引入bug的几率。\n\n- **原则四**\n**为了交互对象之间的松耦合设计而努力。**“松耦合”是指对象之间的依赖性很低，即一方改变，另一方所受影响和小或几乎不受影响。\n- **原则五**\n**类应该对扩展开放，对修改关闭。**如果每修改或新增一个功能，你都要在原来的代码上“大动干戈”，极有可能会引发一系列的bug。相反，如果你新开垦了一片土地，无论你想在上面干什么，都可以保证原来的代码不会受到影响。\n\n明天，我们会切入正题，聊一聊几种设计模式。比如观察者模式，工厂方法模式等。\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。"
		},
		{
			"post_id": 8,
			"title": "话说echars的那些坑",
			"date_published": 1482767790.783,
			"body": "在[echars学习小记](http://127.0.0.1:43110/1KnSDaF69BrXnxcoPCGwczcDMdKLSTNrED/?Post:6:echars%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0)中，我们了解了如何快速有效地入门echars。今天，我们就来聊一下echars中的那些个“坑”，以及如何跳出这些“坑”。\n\n\n\n---\n\n\n\n以下聊到的这些坑主要来自于我的经验，所以这篇文章将会不断更新。也欢迎各位分享一下你们的经验，我会及时补充到文章里来。\n\n### 坑一：配置项 min 和 minInterval 不能同时生效？\n**场景**：你当前的数据很小，小于4；你想将X轴（Y轴同样）的数据设置为非负整数（0和正整数）。你设置了minInterval=1,发现有X轴出现了负数，如下。\n```\noption = {\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {\n            type : 'shadow'\n        }\n    },\n    legend: {\n        data: ['直接访问', '邮件营销']\n    },\n    xAxis:  {\n        type: 'value',\n         minInterval: 1,\n         min:1\n    },\n    yAxis: {\n        type: 'category',\n        data: ['周一','周二','周三']\n    },\n    series: [\n\n        {\n            name: '直接访问',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideLeft'\n                }\n            },\n            data: [0, 0, 3]\n        },\n        {\n            name: '邮件营销',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideLeft'\n                }\n            },\n            data: [0, 1, 0]\n        },\n    ]\n};\n```\n于是，你又设置了 min=0,发现X轴又出现了小数，如下：\n```\noption = {\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {\n            type : 'shadow'\n        }\n    },\n    legend: {\n        data: ['直接访问', '邮件营销']\n    },\n    xAxis:  {\n         type: 'value',\n         minInterval: 1,\n         min:0,\n    },\n    yAxis: {\n        type: 'category',\n        data: ['周一','周二','周三']\n    },\n    series: [\n\n        {\n            name: '直接访问',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideLeft'\n                }\n            },\n            data: [0, 0, 3]\n        },\n        {\n            name: '邮件营销',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideLeft'\n                }\n            },\n            data: [0, 1, 0]\n        },\n    ]\n};\n\n```\n发现X轴又出现了小数，苦恼，该如何双全呢？**这个问题也被官方标记为bug**， [详情](https://github.com/ecomfe/echarts/issues/4489) 。不过别急，办法还是有滴。\n**解决办法**：给X轴同时再设置一个稍大一点的max, 就ok了：\n```\n xAxis:  {\n     type: 'value',\n     minInterval: 1,\n     min:0,\n     max:5\n}\n```\n问题又来了：随着时间的推移，你的数据会越来越大，这意味着**你想要的只是当数据很小时，才设置最大值max；当数据很大时，让它自适应**。我的解决办法是，**默认不设置max，如果某option中的数据都小于5,就用js给 xAxis动态添加配置项 max:8**。\n有人可能会说：直接给X轴设一个max:'dataMax'不就ok了吗？还用这么麻烦？\n但是，当option中的最大值都小于4时，下面这种设置依然会导致X轴出现小数的情况。\n```\nxAxis:  {\n        type: 'value',\n         minInterval: 1,\n         min:0,\n         max:'dataMax'\n    },\n```\n注解：minInterval是X轴或Y轴最小单位长度；min是X轴或Y轴最小值；max是X轴或Y轴最大值。\n\n### 坑二：数据为0时会遮住Y轴文字？\n\n**场景**：假设你的数据有很多0,就有可能出现上述情况，白色的0将Y轴的文字盖住了一部分，导致文字不清晰。\n**数据**：\n```\noption = {\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {\n            type : 'shadow'\n        }\n    },\n    legend: {\n        data: ['直接访问', '邮件营销']\n    },\n    xAxis:  {\n        type: 'value'\n    },\n    yAxis: {\n        type: 'category',\n        data: ['周一','周二','周三']\n    },\n    series: [\n\n        {\n            name: '直接访问',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideRight'\n                }\n            },\n            data: [0, 0, 0]\n        },\n        {\n            name: '邮件营销',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideRight'\n                }\n            },\n            data: [0, 1, 0]\n        },\n   ]\n};\n```\n注：这是一个堆积图的option，你可以整个复制到[echars样例](http://echarts.baidu.com/demo.html#bar-y-category-stack)中，看效果。\n\n**解决办法**：将series中label的postion参数值设为“insideLeft”。每个label都要变。即为：\n```\nlabel: {\n    normal: {\n        show: true,\n        position: 'insideLeft'\n    }\n},\n\n```\n注解：label是图形上的文本标签，用于显示数据信息，比如值或名称。position是标签的位置，可以是绝对的像素值如[10, 10]，也可以是相对的百分比[10%, 10%]，或是一些默认值，如'insideLeft'。\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。\n"
		},
		{
			"post_id": 7,
			"title": "如何克服害羞",
			"date_published": 1482585669.379,
			"body": "通过上一篇<a href='1KnSDaF69BrXnxcoPCGwczcDMdKLSTNrED/?Post:5:%E4%BD%A0%E5%AE%B3%E7%BE%9E%E5%90%97%EF%BC%9F'> **你害羞吗？**</a>，我们已经了解了**害羞是什么**，**为什么会害羞**，**谁在害羞**等。既然害羞带给我们几多痛楚，几多窘迫，那么，我们又该如何克服害羞呢？\n\n\n---\n\n\n\n在谈及如何克服害羞之前，我们有必要深入一下**家庭和学校在促成害羞方面**发挥的“巨大作用”。如果你恰好是一个父母，或是一位老师，你是否也像下文中所述的那样，无意识中促成了孩子们的害羞呢？\n\n### **父母与孩子的害羞**\n\n如果**父母对孩子管教非常严厉**，经常责备孩子，**会促成孩子害羞**的性格。这一点我自己深有体会。当你努力做好事情时父母视而不见（当然也有可能是看到了却不把赞美直接表达）；只要是没做的很好时就会被严厉批评，总之，从父母那里接收到的都是负面的评价。久而久之，你就会变得害羞，自卑，而这种内向的性格又会被父母责备，然后，就成了一个死循环了。也许，这样的父母还会觉得委屈，“我都是为我孩子好呀！”。没错，你是想让你的孩子做好每一件事，成为一个有出息的人，但是，即使是孩子，他也需要最起码的尊重，他需要被表扬和认可，需要觉得自己是有价值的。否则，自卑会折磨这个孩子很久。即使他们已经和其他人一样优秀或者更优秀，但在他们自己看来，他们会觉得自己很差劲，缺乏吸引力。他们会一直自我贬低。\n\n**孩子的出生顺序**也会**影响他们的性格**。一般而言，父母对长子长女的期望值更高，因而会对他们有更多的要求。然而，调查发现，很多长子长女觉得自己很难达到父母设立的目标，他们压力更大，更容易走向害羞。\n\n### **学校与孩子的害羞**\n\n在有导向的任务中，如演讲，会让学生更容易害羞；而宽松的环境会让学生感觉更舒服。开朗的学生会积极寻求老师的帮助，从而更好地完成任务。而害羞的学生总是沉默不语，他们很容易被老师忽略。\n\n**害羞者与朋友、爱人**\n害羞者由于**担心被拒绝**，无论他们内心多想与别人交往，他们都会主动将自己从人群中孤立出来。最终，他们往往陷入人际关系的窘境。\n\n一些害羞者为了“融入社会”，他们开始酗酒。甚至，一些害羞者的愤怒等负性情绪积聚到一定程度时，会走向暴力；而另一些则会自我否定，抑郁，甚至，走向自杀。\n\n如果你已经厌倦了做一个害羞者，想要改变自己，改变生活。那就从现在开始吧。\n\n### **克服害羞**\n要克服害羞，我们需要做出改变：**改变你对自己和害羞的思考方式**，**改变你的行为方式**。\n\n**害羞的主要原因就是过度关注自我和负面评价**。\n\n首先，我们要**重新认识自己**。可以通过以下几种方式：\n- 给自己画一幅肖像。\n- 观察自己的身体。\n- 在脑海中想象一部关于你生活的电影。\n- 用合适的词语或句子形容你自己。\n- 想象自己独特、无法被复制的方面有哪些。\n- 写下你生命中最好和最差各5件事。\n- 分配你的时间。\n- 写下你的计划。\n- 写下你家庭所倡导的10条戒律。\n- 想象一下你想要的理想生活是什么。\n- 如果你生命只剩一个月，你会做什么？如果剩下几十年，你会怎么度过？\n- 写下你的遗嘱。\n- 给你自己写一封信。\n\n**其次，我们要坦然面对害羞**\n\n- 想一想，你的害羞是如何发展起来的？\n- 因为害羞，你付出了哪些代价？又有怎样的收获？\n- 写下那些你被拒绝过的事情。\n- 每周坚持做一件对你来说是“冒险”的事情。\n- 制作一个害羞日志，记录下那些让你害羞的事件。\n\n**自尊，自信**\n- 为自己选一个比较对象，朝着那个方向去努力。\n- 改变自己追求的标准，“成就、智慧、美貌”这些社会制定的标准不一定就是你的标准。做你自己。\n\n**自我肯定**\n- 客观真诚地评价你做出的努力，和你取得的成绩。\n- 尝试去做一个善于社交的人。\n- 停止过度的自我保护。\n- 制定人生的长期规划。\n\n**掌控情绪**\n- 每当意识到消极情绪又到访时，就让它“停”下来。如果自己做到了，就给自己奖励。\n- 随时记录自己的好心情。\n- 放松自己。\n\n**找出自己的特长**\n\n- 请比较信任的朋友写下你身上优秀的特质。\n- 写下你自己特长。\n\n**发展社交技能**\n\n**让你变得更加自信的最好办法就是行动**。从现在开始，不要在做与不做之间犹豫不止，行动吧！如果你仍然害怕，可以尝试角色扮演。让那个角色而不是你来帮你“出击”。你需要做的是：\n- 与自己签订合同。列出你想要做的改变，逐步实现它，记得奖励自己哦。\n- 开口说话。尝试与别人聊天。\n- 进行合适的着装和打扮，让自己看起来更加漂亮一些。\n- 遇到认识的人时，和他们进行简单的问候。\n- 通过和陌生人聊天来锻炼你的交谈技巧。\n- 每天至少给别人三次赞美。\n- 结识新的朋友。\n- 主动倾听别人。\n\n**帮助别人克服害羞**\n\n尽然你已经对害羞有了一些了解，知道了如何去克服害羞，那么你可以尝试帮助你身边那些正在被害羞困扰的人，同时你也会收获友谊和快乐。\n\n**家长和老师**\n\n如果你是家长或是老师，你要知道，你在孩子心中的地位和你对他们的影响要远远高于你想像的那样。所以，你要**帮助孩子们增强自我价值感**，减少他们所遇到的困难。同时，你要经常**赞美他们**，也要**倾听他们**。要知道，你的一个眼神或是一个不经意间的举动都会加剧孩子们的害羞。**拥抱**，**亲吻**你的孩子，这样对孩子的健康会更有利。\n\n**表达感情**\n\n在一件事情发生时，和别人交流，了解他们的态度，同时，也要表达你自己的感情和想法。\n\n**社会的责任**\n\n不同国家的个体害羞的状况也有很大差异。比如，日本的害羞文化代代相传，他们训练控制自己的情绪，抑制表达，并且专注于规则和仪式。与之相反，犹太人却有着张扬和骄傲的性格。他们每个人都关心小孩，通过鼓励自立和展示领导才能来防止害羞的出现。他们给孩子们关心、赞扬、爱、信任和安全感。在他们的文化中，害羞就是柔弱和失败。\n\n克服害羞，我们还有很长的路要走。不过，只要从现在开始行动，不用太久，你就会发现自己的改变！Good Luck :)\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。"
		},
		{
			"post_id": 6,
			"title": "echars学习小记",
			"date_published": 1482498728,
			"body": "近几天由于要做报表，接触了echars，踩了一些坑。我把自己的心得整理一下，分享给大家。\n\n对于刚接触echars的新手来说，可能会觉得它很难。No，其实，它很简单。学习它的时候千万别恋着“度娘”了，要不然会白白浪费你很多的时间。不找度娘，那该找谁呢？\n\n\n---\n\n\n\n**第一步，打开官方教程** [EChars](http://echarts.baidu.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts) ，相信我，1分钟你就上手啦。这里有一个你容易忽略的地方，就是为echars准备的**div必须是具备宽和高**的，不然你就没办法在同一个页面加载多个图表。\n\n**第二步，熟悉配置项手册\n打开[配置项手册](http://echarts.baidu.com/option.html )，所有的配置项都在这里了，你可以**花20分钟的时间把所有的配置项都浏览一遍**。如果工作中有什么需求了，都来这里查。比“度娘”靠谱好多！\n\n**第三步，向官方issues寻求解决办法**\n[官方issues](https://github.com/ecomfe/echarts/issues/ )，当你按着配置项手册走，却依然没有出现你想要的结果时，那就有可能是echars自身的bug导致的。从这些issues里搜一下，看有没有你现成的解决办法，那些被标记为bug的issues，就是echars自身的bug了，就只有等着官方来修复了。当然，你也可以自己提issues,不久就有人来给你解答啦!\n\n**最后附赠 echars调试小技巧**\n调试echars时,建议你把自己的整个option复制到官方的[样例](http://echarts.baidu.com/demo.html) ,（随便打开一个样例把你的option复制进去就行）。等调试好了再复制回你自己的文件中，这样比你每改一个配置项，就刷新页面看效果要高效多啦！\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。\n\n\n\n"
		},
		{
			"post_id": 5,
			"title": "你害羞吗？ ",
			"date_published": 1482427942,
			"body": "据调查，中国人中有一半以上的人是害羞的？那么你呢？你害羞吗？\n\n我自己的回答是肯定的。而且我也清楚，害羞曾经并正在带给我一些烦恼。那么，害羞是什么？它是好是坏？如何克服害羞带来的心理困扰？带着这些疑惑，我去读了津巴多的《害羞心理学》。在此分享给大家，尤其是那些和我一样”害羞“的小伙伴们，福利来啦！当然，有兴趣的小伙伴也可以自己去读一下原作，这是一本通俗的心理学专业书籍。\n\n这本书分为两大部分，第一部分，**害羞是什么**；第二部分，**怎么克服害羞**。\n\n\n---\n\n\n\n害羞就是害怕人。如果你是一个害羞的人，那么下面提到的这些心理体验对你来说就是家常便饭了。害羞的人很难接触别人，结交朋友；不能自信地向别人表达自己的观点和价值观；使个体过分关注自我，以及外界对自己的评价；总是滋生一些孤独、担忧等消极情绪。害羞经常伴随紧张的生理反应，比如脸红、出汗、心跳加速、大脑空白；心理上会觉得尴尬或难为情。害羞的人会试图避免任何一个让自己觉得窘迫的场合，从而进一步将自己从人群中孤立出来。\n\n那么，**谁在害羞呢？**调查表明，孩子比成人更容易害羞；处于青春期的女孩比男孩更加害羞。然而，害羞与性别之间没有直接联系。为什么会害羞呢？主要原因是缺乏自信，或者缺乏社会交往的技巧。\n\n当然，个体间害羞的程度也有差异。有人只是在特定场合下害羞，比如在众人面前讲话；但也有人因害羞导致神经衰弱，进而抑郁，甚至因害羞走向自杀。难道害羞如此”恶毒“，竟把我们逼入绝境？Ｎo。害羞，也有它积极的一面。害羞的人更加谦逊和沉稳；对待事物更冷静；性格更加温和，更容易规避人际矛盾。但不能否认，害羞带给我们更多的，是焦虑和痛苦。\n\n本书将害羞的人分为两种类型，”私下自我意识型“和”公众害羞型“。”私下自我意识型“的是指对自身过度关注的个体，总是经常自我反省，用放大镜放大自己的缺点，他们总是为内在的心理感觉不好而担忧。而”公众害羞型“个体聚焦于别人对自己的印象和评价，总是担心自己外在表现不够好。\n\n到这里，有人不禁要问，到底什么使我们害羞？调查表明，特定的他人（如陌生人、异性、权威人士）或特定的情景（如我是公众的焦点，一大堆人，处于地位较低的状态时，常见的社交场合或心场合，需要自信时，被别人评价时）都会使我们害羞。**那我们为什么会害羞呢？**\n\n**原因一：基因遗传导致害羞。**害羞者天生就对外界刺激更加敏感。比如，在噪音、光亮环境下，一些新生儿很爱哭，而另一些却总能很安静地睡觉。显然那些敏感的新生儿更容易害羞。\n\n**原因二：后天习得导致害羞。**行为学家认为害羞是后天对社会事件的恐惧性病态反应。如与人交往的负面体验，没有学会正确社会技能，自我贬低等。又如孩童总是想在成人掌控的世界里得到关注，因而害羞。\n\n**原因三：过度自我导致害羞。**比如内心非常想做某事，但由于种种顾虑或极度胆怯，压抑自己不能做，而害羞就是这种外在表现和内心想法冲突时的产物之一。\n\n**原因四：社会因素导致害羞。**研究表明，地理迁移会导致个体自我认同感下降，孤独感增强。再者，国家总是强调个人成就，使得个体强烈希望证明自身价值，总是担心自己是否做的足够好，也担心因为自己不够好而被社会抛弃。这些种种都是滋生害羞的土壤。\n\n**原因四：归因和标签导致害羞。**个体可能会采用或接受一种标签，也容易无理由地给自己贴标签。比如”我很胆小“，”我很自卑“，”我不够漂亮“等等。然而，这些形形色色的标签极有可能是错的，无意识的我们却一再寻找能证实这些标签的事而忽略其他。当面临同一窘境时，害羞者会责怪自己，不害羞者却归咎与环境。\n\n读到这里，你对害羞已经有了一个基本的认识。了解了什么是害羞，害羞的特征，以及害羞的原因。明天，我们将继续聊一聊害羞者的社会关系，以及你迫不及待想要知道的，如何克服害羞。\n\n本文首发 https://duckhere.blogspot.com/  ， 转载请注明出处。"
		},
		{
			"post_id": 4,
			"title": "一个关于“梦想论坛”的想法",
			"date_published": 1451620800,
			"body": "### 想法来源\n我发现自己有一个很大的毛病，就是经常给自己制定一些计划，却没有很好的完成。有时甚至计划写完第二天就忘得一干二净了。一段时间之后，在清理磁盘时会偶然发现，打开这些个“计划文件”，自己都不好意看下去了。。。羞残啊。一次在埋怨自己时，突然get到一枚idea，就是建一个“梦想论坛”。就是借助外界来帮助自己实现计划或梦想。\n\n\n---\n\n\n\n\n### 论坛简介\n这是一个主要用于发布计划的论坛。目前想到了以下三个大版块：\n【计划版块】人们可以注册，登陆，并发布自己的计划（短期、中期、长期）。可以更新计划完成进度。也可以关注、评论别人的计划。\n【梦想版块】可以发布自己的梦想，可以关注、评论别人的梦想。\n【实现梦想版块】在关注别人的梦想时，可以点击【帮助他实现梦想】，然后可以进行私下的沟通和交流。\n\n不知各位列官有啥建议或想法？"
		},
		{
			"post_id": 3,
			"title": "个体心理认知规律-《影响力》",
			"date_published": 1482248289,
			"body": "本书作者（罗伯特·西奥迪尼）结合生活经验，并经由心理学行为实验验证，向读者阐释了在人际交往过程中，个体的一些心理认知规律。具体如下：\n\n\n---\n\n\n## 规律一&nbsp;&nbsp;&nbsp;<b>互惠原理</b>\n互惠原理是指对他人的某种行为,你要以一种类似的行为去回报。<br>\n比如，今天某个朋友请你吃饭，吃完后你会想：啥时候把这顿饭给他请回去呢？这就是互惠原理在起作用。<br>\n商业中的应用：产品营销中给客户提供免费试用就是互惠原理的一种应用。如果想要笼络客户的心，还可以赠送他们小礼物等。这样会大大提高客户的购买几率。\n\n###互惠原理之拒绝退让策略<br>\n拒绝退让策略是指为了让对方接受你的请求B，你会先提出一个比请求B大很多的、极有可能会被拒绝的请求A，对方在拒绝了你的请求A后，会觉得请求B是你做出的一个让步，从而觉得自己也应该做出相应的让步，故会有极大的可能接受你的请求B。<br>\n商业中的应用：在对客户进行产品营销时，你可以先带他们去看特别昂贵的商品，再带他们去看你真正想卖的商品，会大大提高购买成交率。又或者在谈判时，你可以先提出一个极端的条件，然后再做出一点让步，最终达成一个对你较为有利的方案。<br>\n研究表明，拒绝退让策略还有更深远的影响。由于在对方看来，你做出了让步，所以他们会对最终的谈判结果满意度更高，同时他们会负有更高的责任感，更愿意去履行承诺。<br><br>\n##规律二&nbsp;&nbsp;&nbsp;<b>一致性原理</b><br>\n一致性原理是指当个体对某事物做出决定后，其观念和行为会与该决定保持一致。<br>\n一致性原理的产生原因：在长期的进化过程中，人类形成了这样一种普遍性的文化观念，即前后一致是一种受人尊重的品质。反之，就会被认为是不守信用，两面三刀。<br>\n一致性原理为我们节约了不少认知资源。当相似的条件发生时，我们就会条件反射般的执行特定的行为。而不会重新去考虑再行动。<br>\n商业中的应用：让客户把他们对你的公司或产品的好评记录下来，他们会更有理由相信你的公司或产品确实是很棒的。在推销商品时，先给你的客户一段试用期，经过这段试用期，他们会觉得自己已经对该商品拥有了所属权和使用权，为了保持一致，他们会更大可能地去购买该商品。<br><br>\n###一致性原理之承诺的重要性<br>\n刚开始提出一个很小的请求，对方答应后，再提出更大一点的请求，为了保持一致，对方会更大几率地同意你的请求。\n为了达到目的，刚开始可以给对方一个诱惑，这个诱惑使得对方做出了承诺。这样，当最初的诱惑被拿走之后，他们会更加信守自己的承诺。\n当对方对你的第一个回答是肯定时，他后面回答也是肯定的几率会大大增加。比如，当肯定了你的第一个问题“您今天好吗？“，当你提出你真正的请求”可以为我们的孤儿院捐款以让那些可怜的孩子健康地成长吗？“，对方会更大可能答应你的请求。<br><br>\n##规律三&nbsp;&nbsp;&nbsp;<b>社会认同原理</b><br>\n社会认同原理是指我们会参照周围其他人的行为来决定自己应该做什么。<br>\n当不确定性较大时，我们会更容易参照别人的行为做出决定。<br>\n比如，当你向周围的人求助时，应该给他提供明确的指令，哪个人具体该怎么做。这样远好过于你向一群人求助。因为当你没有明确指定时，他们会更多参考其他人的态度和行为表现来对当前状况做出判断和决定。结果大家都会静观其变，而不会主动给你提供帮助。<br>\n商业中的应用：在为产品做广告时，让普通人为你的产品代言也会产生意想不到的效果。此外，职业观众、电视节目中的假笑声，都会提高观众对这些节目的喜爱程度。<br><br>\n##规律四&nbsp;&nbsp;&nbsp;<b>喜好原理</b><br>\n喜好原理是指人们总是更愿意答应自己认识和喜爱的人提出的要求。<br>\n那么，如何让别人更喜欢自己呢？<br><br>\n### 喜好原理之外表的吸引力<br>\n个体的正面特征会主导人们对这个人的整体看法。这也叫做”光环效应“。比如，外表漂亮的人在社交方面优势更大。因为我们会不自觉地认为外表漂亮的人有更多美好的品质，会认为他们更聪明，善良等。<br><br>\n### 喜好原理之相似性<br>\n我们会更喜欢与我们相似的那些人。如观点、背景、性格、行为、年龄、信仰、习惯，甚至衣着、说话语气甚至肢体语言与我们相似的人，我们会更喜欢。<br><br>\n###喜好原理之称赞<br>\n你会更喜欢那些称赞你的人。不管那些称赞是否符合实际。<br><br>\n###喜好原理之接触与合作<br>\n我们会对自己接触过的、合作过的人更有好感，也会对自己更熟悉的事物更有好感。<br><br>\n###喜好原理之关联<br>\n当一件事物A与美好的事物B联系在一起时，对方会觉得A也很美好。比如，当对方正在经历心情美好的事情时（如宴饮），他会更乐于答应你提出的请求。广告商经常将商品与帅哥、美女明星联系在一起，会大大提高观众的购买意愿。<br>\n个体更愿意让自己与正性的事物建立联系，而急于和负性的事物撇开联系。<br><br>\n##规律五&nbsp;&nbsp;&nbsp;<b>依赖权威原理</b><br>\n依赖权威原理是指个体会顺从权威，即使仅仅是”权威的象征“，个体也会乖乖顺从。<br><br>\n###依赖权威之头衔<br>\n仅仅是一个权威的头衔，也会让个体立刻产生敬畏之感并趋于顺从。如一些骗子谎称自己是学校老师，让学生转帐缴费，达到骗取钱财的目的。<br><br>\n###依赖权威之衣着<br>\n象征权威的衣着，也能有效赢得陌生人的尊敬。衣冠楚楚的骗子就是这样骗取钱财的。<br><br>\n###依赖权威之外部标志<br>\n外部装饰也可以被视为权威的标志。比如拥有豪车的人更受人尊敬。<br><br>\n##规律六&nbsp;&nbsp;&nbsp;<b>短缺原理</b><br>\n短缺原理是指人们普遍认为”物以稀为贵“。当我们感到要失去某个东西时，我们会对它倍加珍惜。\n短缺原理产生的原因：一是我们经常根据得到某个事物的难易程度来快速判断质量的高低。而是源于个体的”心理抗拒“，即当我们的自由选择受到限制时，维护这种自由的愿望会让我们更强烈地想要拥有这种自由。\n当一件东西得而复失时，个体会比在长期缺乏这种东西的情况下更想要得到它。\n商业中的应用：在进行产品营销时，可以用”数量有限“和”截止日期“策略来激发顾客的购买兴趣。\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。"
		},
		{
			"post_id": 2,
			"title": "基本算法",
			"date_published": 1482238076.14,
			"body": "最近，补了一下数据结构和算法的基础知识。参考书籍-《算法》by Sedgewick 。现整理如下：\n\n---\n\n\n## 基础数据类型\n### 背包\nAPI 如下所示：\n```\n- Bag()\n- size();\n- isEmpty();\n- add(Item item);\n```\n\n### 队列\nAPI 如下：\n```\n- Queue();\n- enqueue();\n- dequeue();\n- size();\n- isEmpty();\n```\n\n### 下压栈\nAPI 如下：\n```\n- Stack();\n- push(Item item);\n- pop();\n- size();\n- isEmpty();\n```\n\n## 算法分析\n算法分析的指标主要有两个：\n\n```\n- 时间复杂度（增长数量级）。\n- 空间复杂度（内存）。\n```\n\n增长数量级指的是程序运行的总次数，分为一下7个等级：\n\n```\n- 常数级别  1;\n- 对数级别  logN，二分策略，如二分查找；\n- 线性级别  N，循环，如单层循环；\n- 线性对数级别 N*logN，分治，如归并排序；\n- 平方级别 N^2，双层循环;\n- 立方级别 N^3， 三层循环;\n- 指数级别 2^N，穷举查找；\n```\n\n## 基础排序算法\n### 快速排序\n原理：\n```\n- 找到一个基准数，把比他大的放在左边，比他小的放在右边。\n- 切分，递归。\n```\n\n### 插入排序\n原理：\n```\n- 从第二个数开始，如果比第一个数大，就放在第一个数的右边，否则，就与第一个数交换位置。\n- 第三个数依次它左边的数比较，并插入合适的位置。\n- 后面的数依次执行重复操作。\n```\n\n### 冒泡排序\n原理：\n```\n- 将第一个数与后面所有的数依次比较，如果大于后面的数，就交换位置。这样最大的数就浮到了最后一个。\n- 后面的数依次重复上一个步骤。\n```\n\n\n### 归并排序\n```\n- 前提是两个有序数组。\n- 将两个有序数组的第一个数相比较，将其中较小的那个拿出来，放在一个新数组中，并指向原数组中的下一个。\n- 递归。\n```\n\n## 基础查找算法\n### 快速查找\n原理：\n```\n- for循环整个数组，如果找到与目标值相等的，就返回其下标。\n```\n\n### 二分查找\n原理：\n```\n- 前提是有序数组。\n- 将数组分成两部分，如果目标值大于中间值，就在右边继续查找。若小于，就在左边继续查找。若等于，就返回其下标。\n```\n\n## 二叉查找树\n原理：\n```\n- 结点左边的数都比结点小，结点右边的数都比结点大。\n```\n\n本文原创 https://duckhere.blogspot.com/ ，转载请注明出处。"
		}
	]
}