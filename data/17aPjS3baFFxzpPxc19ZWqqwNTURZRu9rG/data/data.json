{
	"title": "DaTiZi  搭梯子",
	"description": "翻墙知识备用库",
	"links": "[Shadowsocks-go一键安装](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:1)\n\n[ShadowsocksR 一键安装](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:2)\n\n[Shadowsocks libev版 一键](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:3)\n\n[Shadowsocks Python版](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:4)\n\n[Shadowsocks （四合一）](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:5)\n\n[Kcptun一键装-加速SS利器](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:6)\n\n[为什么一定要会翻墙](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:7)\n\n[Resilio Sync分布式共享](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:8)\n\n[惹名访问-TOR浏览器](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:9)\n\n[新算法-BBR加速TCP看视频](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:10)\n\n[提升生活质量--路由器直翻](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:11)\n\n[翻墙软件合集](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/?Post:15)\n\n————友情链接---------\n[CundhiBlog@ZeroNet](http://127.0.0.1:43110/1G8pzbZbQ65dWE6Lm6N71eFfCogaobXd6S)",
	"next_post_id": 16,
	"demo": false,
	"modified": 1496556570,
	"post": [
		{
			"post_id": 15,
			"title": "翻墙软件合集",
			"date_published": 1496477804.084,
			"body": "> 总会发现好人。翻墙软件--要你命3000-来了，从浏览器到各种版本，一应俱全。（需SYNC工具）\n\n### **<font color=\"#FF2626 \" size=\"5\">RDKCZMBNPIBE2XXPMHFKS3JHASKKYMZWX </font>**"
		},
		{
			"post_id": 14,
			"title": "给零网网友们汇报一下情况",
			"date_published": 1496411338.747,
			"body": "这是今日本站的图像，也有外国友人帮助做种，感谢！外国人不用翻墙的。\n\n* * *\n\n​​​​​​​![DaTiZi 搭梯子数据图像](img/web.png)"
		},
		{
			"post_id": 13,
			"title": "翻墙九天义务教育基本完成，给大家分享一个加密通讯 项目TOX.",
			"date_published": 1496407793.457,
			"body": "Tox客户端用于运行Tox core与其他客户端通信。不同客户端的开发使得Tox可以跨平台运行。下表不完整地列出了已发布的Tox客户端。<sup id=\"cite_ref-7\">[[7]](https://zh.wikipedia.org/wiki/Tox#cite_note-7)</sup>\n\n* * *\n\n​​​​​​​\n\n| 客户端 | 适用操作系统 | 使用编程语言 |\n| --- | --- | --- |\n| Antidote<sup id=\"cite_ref-8\">[[8]](https://zh.wikipedia.org/wiki/Tox#cite_note-8)</sup> | [iOS](https://zh.wikipedia.org/wiki/IOS \"IOS\") | [Objective-C](https://zh.wikipedia.org/wiki/Objective-C \"Objective-C\") |\n| Antox<sup id=\"cite_ref-9\">[[9]](https://zh.wikipedia.org/wiki/Tox#cite_note-9)</sup> | [Android](https://zh.wikipedia.org/wiki/Android \"Android\") | [Scala](https://zh.wikipedia.org/wiki/Scala \"Scala\"), [Java](https://zh.wikipedia.org/wiki/Java \"Java\") |\n| Cyanide<sup id=\"cite_ref-10\">[[10]](https://zh.wikipedia.org/wiki/Tox#cite_note-10)</sup> | [Sailfish OS](https://zh.wikipedia.org/wiki/Sailfish_OS \"Sailfish OS\") | [C++](https://zh.wikipedia.org/wiki/C%2B%2B \"C++\") |\n| gTox<sup id=\"cite_ref-11\">[[11]](https://zh.wikipedia.org/wiki/Tox#cite_note-11)</sup> | [Linux](https://zh.wikipedia.org/wiki/Linux \"Linux\") | [C++](https://zh.wikipedia.org/wiki/C%2B%2B \"C++\") ([GTK+ 3](https://zh.wikipedia.org/wiki/GTK%2B \"GTK+\")) |\n| qTox<sup id=\"cite_ref-12\">[[12]](https://zh.wikipedia.org/wiki/Tox#cite_note-12)</sup> | [Linux](https://zh.wikipedia.org/wiki/Linux \"Linux\"), [FreeBSD](https://zh.wikipedia.org/wiki/FreeBSD \"FreeBSD\"), [OS X](https://zh.wikipedia.org/wiki/MacOS \"MacOS\"), [Windows](https://zh.wikipedia.org/wiki/Microsoft_Windows \"Microsoft Windows\") | [C++](https://zh.wikipedia.org/wiki/C%2B%2B \"C++\") ([Qt](https://zh.wikipedia.org/wiki/Qt \"Qt\")) |\n| Toxic<sup id=\"cite_ref-13\">[[13]](https://zh.wikipedia.org/wiki/Tox#cite_note-13)</sup> | [Linux](https://zh.wikipedia.org/wiki/Linux \"Linux\"), [BSD](https://zh.wikipedia.org/wiki/BSD \"BSD\"), [OS X](https://zh.wikipedia.org/wiki/MacOS \"MacOS\") | [C](https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80 \"C语言\") ([Ncurses](https://zh.wikipedia.org/wiki/Ncurses \"Ncurses\")) |\n| Toxy<sup id=\"cite_ref-14\">[[14]](https://zh.wikipedia.org/wiki/Tox#cite_note-14)</sup> | [Windows](https://zh.wikipedia.org/wiki/Microsoft_Windows \"Microsoft Windows\") | [C#](https://zh.wikipedia.org/wiki/C%E2%99%AF \"C♯\") ([WPF](https://zh.wikipedia.org/wiki/Windows_Presentation_Foundation \"Windows Presentation Foundation\")) |\n| Toxygen<sup id=\"cite_ref-15\">[[15]](https://zh.wikipedia.org/wiki/Tox#cite_note-15)</sup> | [Linux](https://zh.wikipedia.org/wiki/Linux \"Linux\"), [Windows](https://zh.wikipedia.org/wiki/Microsoft_Windows \"Microsoft Windows\") | [Python](https://zh.wikipedia.org/wiki/Python \"Python\") ([Qt](https://zh.wikipedia.org/wiki/Qt \"Qt\") via [PySide](https://zh.wikipedia.org/wiki/PySide \"PySide\")) |\n| µTox<sup id=\"cite_ref-16\">[[16]](https://zh.wikipedia.org/wiki/Tox#cite_note-16)</sup> | [Linux](https://zh.wikipedia.org/wiki/Linux \"Linux\"), [FreeBSD](https://zh.wikipedia.org/wiki/FreeBSD \"FreeBSD\"), [OS X](https://zh.wikipedia.org/wiki/MacOS \"MacOS\"), [Windows](https://zh.wikipedia.org/wiki/Microsoft_Windows \"Microsoft Windows\") | [C](https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80 \"C语言\") (Win32 API, [Xlib](https://zh.wikipedia.org/wiki/Xlib \"Xlib\")) |\n| xWinTox<sup id=\"cite_ref-17\">[[17]](https://zh.wikipedia.org/wiki/Tox#cite_note-17)</sup> | [Linux](https://zh.wikipedia.org/wiki/Linux \"Linux\"), [Solaris](https://zh.wikipedia.org/wiki/Solaris \"Solaris\"), [BSD](https://zh.wikipedia.org/wiki/BSD \"BSD\") | [C](https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80 \"C语言\")/[C++](https://zh.wikipedia.org/wiki/C%2B%2B \"C++\") ([FLTK](https://zh.wikipedia.org/wiki/FLTK \"FLTK\")) |\n\n同样存在使用Tox协议的[Pidgin](https://zh.wikipedia.org/wiki/Pidgin \"Pidgin\")<sup id=\"cite_ref-18\">[[18]](https://zh.wikipedia.org/wiki/Tox#cite_note-18)</sup>和[Miranda NG](https://zh.wikipedia.org/wiki/Miranda_IM \"Miranda IM\")<sup id=\"cite_ref-19\">[[19]](https://zh.wikipedia.org/wiki/Tox#cite_note-19)</sup>插件。\n\n------------以上是维基百科资料。大神们好人啊。---------------------\n\n推荐下载链接：\n\n[https://tox.chat/download.html](https://tox.chat/download.html)\n\n我的 TOX号： `03552B1570AE5F3DFB8962EF6FC42EE410C28C00FFA29EACD42B162025BFCB7B204BAA1A84C7`\n\n![我的TOX码](http://127.0.0.1:43110/17aPjS3baFFxzpPxc19ZWqqwNTURZRu9rG/img/qtox.png)"
		},
		{
			"post_id": 12,
			"title": "<H5>新闻：\"翻墙问答：新开发ZeroNet网络对翻墙有帮助\"<H5>",
			"date_published": 1496236496.748,
			"body": "问：最近有人开始开发所谓去中心化的互联网，并根据这个理念，开发了名为ZeroNet的网络，这是什么来的？而暂时而言，对翻墙有没有帮助或作用？\n\n* * *\n\n李建军：所谓的ZeroNet网络，就是利用BitTorrent和Bitcoin两种技术的去中心化理念所建构的去中心化互联网。以往要浏览一个网站，就必须要在指定主机取得想要的资料，但现时在P2P理念加持之下，你浏览一个网站，资料往往是来自四面八方不同的朋友。换言之，当局要封杀个别网站变得不可行，因为用户正存取不同的资料碎片。一如直至现时为止，BitTorrent仍是在不用翻墙情况下，最有效传送被封资多媒体资料的方法。\n\n但现时ZeroNet仍然是初步发展阶段，虽然现时已经有相对成熟的源程式，并且可以搭配作业系统内置的浏览器运作。只不过，ZeroNet上的内容仍然相当少，中文的内容亦相当缺乏，在用户介面方面，亦有相当多需要改善的地方。只不过，类似ZeroNet的去中心化技术，仍然会是未来反网络封锁的发展大趋势，亦相信在可见的将来，会有中文版本的ZeroNet内容出现，令中国用户可以看到更多资讯。\n\n问：那ZeroNet可以与主流的浏览器搭配使用，那可不可以与其他翻墙技术搭配使用，提高翻墙成功率，以及减少被当局跟踪的机会？\n\n李建军：现时ZeroNet在设计上，已经可以做到可以配合Tor一同使用，换言之，在Tor在ZeroNet双重配合下，翻墙成功率大增，而当局亦不容易知道你到底把那些资料传给指定人物。\n\n但VPN或其他翻墙技术能否配合ZeroNet使用就有待观察，如果你的VPN或翻墙软件可以成功连接BitTorrent档案分享的话，那你用ZeroNet都不会有问题，因为ZeroNet的本质就是一个去中心化的P2P网络，P2P能做得到的事，ZeroNet都可以做到。如果你的VPN或翻墙软件，容许你连接Tor，都可以连接ZeroNet，因为你可以透过Tor连接ZeroNet。但如果你的VPN不容忍Tor或P2P的连接的话，那你就用不了ZeroNet，因为你的VPN或翻墙软件，只容许你透过特定埠口连接互联网，令你的电脑无法连接P2P网络，实际上亦意味著你无法使用ZeroNet，而现时有部分VPN供应商为防止用家利用P2P分享档案，导致流量大增，故意阻截所有非标准埠口的通讯，这当然亦包括了技术理念相类似的ZeroNet。\n\n* * *"
		},
		{
			"post_id": 11,
			"title": " 翻墙路由器-史上最通俗易懂的OpenWrt解释 \n（老人小孩妇女儿童也要看世界--世界辣么大）",
			"date_published": 1496233464.333,
			"body": "> 编者按：作者原话：手把手教你路由器刷OpenWrt固件，自动穿越万里长城。\n\n_做为一个攻城狮，买一个49块的中档智能路由器，全家百部设备，自动翻墙，在没有用之前体验不到，利用节日我刷了三部手机，又刷了一部智能路由器，发现，原来不用太麻烦，只用刷一部路由器就可以，才花了49块钱。对于占地面积超过1000平的有钱家庭，建议买一个99 块以上的高档智能路由器，全家直翻，美的不要不要的。不瞒您说，还有20多块的，我没敢买，感觉普通路由器就是交智商税的，越是智能越便宜，一个内存芯片淘宝才几块钱，就有人改装_\n\n* * *\n\n## 本教程翻墙方案的特点\n\n放弃建立黑名单的方案吧，被墙的网站每天在大量增加，有限的人生不能在无穷的手工添加黑名单、重启路由器中渡过。\n\n大道至简，一劳永逸！\n\n*   建立国内重要网站名单，在国内进行dns查询\n*   其他网站通过 shadowsocks客户端向 shadowsocks服务端进行dns查询\n*   国内或亚洲的IP流量走国内通道\n*   其他流量通过shadowsocks服务端转发\n*   屏蔽ISP劫持相关IP\n*   屏蔽国内外的广告\n\n## 知识若不分享，实在没有意义\n\n2014年6月 Dropbox壮烈被墙。\n\n查资料发现，著名的开源路由器固件OpenWrt支持家里的路由器 TP-Link WR2543N V1 ，于是就给路由器安装了OpenWrt并设置为自动智能翻墙。\n\n自由的感觉真好:　youtube, hulu, twitter, facebook, google...\n\n什么是圣人，圣人就是得到和付出比较均衡的人。天地生我，我敬天地；父母育我，我亦养父母；网上获得知识，也要在网上分享知识。于是，花了许多天，查资料，写教程，调试固件，不知不觉一天就过去了。\n\n希望你应用本教程后，也把你的过程写下来，合并到这个项目中来:\n[https://github.com/softwaredownload/openwrt-fanqiang](https://github.com/softwaredownload/openwrt-fanqiang)\n\n## 如何编译OpenWrt shadowsocks自动翻墙固件\n\n*   首先把本项目clone到本地目录，如 ~/Downloads/openwrt-fanqiang\n*   原始配置文件\n    *   ~/Downloads/openwrt-fanqiang/openwrt/default 默认配置文件夹\n    *   ~/Downloads/openwrt-fanqiang/openwrt/wndr4300 针对特定路由器型号的配置文件，此处以wndr4300为例\n*   复制配置文件\n    *   本地建立配置文件目录，如 ~/Downloads/openwrt-wndr4300\n    *   复制默认配置文件夹下面的文件到 ~/Downloads/openwrt-wndr4300/ 下\n    *   如果有针对特定路由器的配置文件，也复制到~/Downloads/openwrt-wndr4300/，并覆盖同名文件\n*   修改配置文件，编译后就直接可以用了。否则刷上固件后登录路由器再修改。主要修改：\n    *   openwrt-wndr4300/etc/shadowsocks.json\n    *   openwrt-wndr4300/usr/bin/shadowsocks-firewall\n    *   openwrt-wndr4300/etc/uci-defaults/defaults\n*   编译自定义固件，设置FILES=~/Downloads/openwrt-wndr4300\n\n## 本项目规定的默认值\n\n```\nshadowsocks server:            1.0.9.8\nshadowsocks server_port:    1098\nshadowsocks local_port:        7654\nshadowsocks tunnel_port:    3210\nshadowsocks password:        killgfw\nshadowsocks method:            aes-256-cfb\nroot login password:        fanqiang\nWIFI password:                icanfly9876　　(for DIR-505 and TLWR2543 before 2015: wsjdw,8181)\n```\n\n## 如何使用预编译翻墙固件：\n\n*   shadowsocks 服务端按照本项目规定的默认值进行设置（除了server IP)\n*   路由器刷OpenWrt shadowsocks翻墙固件\n*   登录路由器修改server IP：\n\n    ```\n      # Modify 1.0.9.8 to your server IP address\n      vi /etc/shadowsocks.json    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　\n      # Modify 1.0.9.8 to your server IP address\n      vi /usr/bin/shadowsocks-firewall\n\n      /etc/init.d/shadowsocks restart\n    ```\n\n*   以上修改测试通过后，建议再修改 shadowsocks password, 路由器root password\n\n*   不建议修改端口号\n\n*   少数时候需要重启路由器才能使修改生效\n\n## 相关资源\n\n*   Netgear WNDR4300 预编译翻墙固件(2015-12-23):\n    [https://software-download.name/2015/netgear-wndr4300-openwrt-fanqiang-gujian/](https://software-download.name/2015/netgear-wndr4300-openwrt-fanqiang-gujian/)\n\n*   D-Link DIR-505 预编译翻墙固件(2015-12-24):\n    [https://software-download.name/2014/dlink-dir-505-openwrt-fanqiang/](https://software-download.name/2014/dlink-dir-505-openwrt-fanqiang/)\n\n*   TP-Link TLWR2543 预编译翻墙固件(2015-12-24):\n    [https://software-download.name/2014/openwrt-ar71xx-generic-tl-wr2543-v1-squashfs-sysupgrade-bin-with-shadowsocks/](https://software-download.name/2014/openwrt-ar71xx-generic-tl-wr2543-v1-squashfs-sysupgrade-bin-with-shadowsocks/)\n\n*   OpenWrt自动翻墙教程电子书下载\n    [https://software-download.name/2014/fanqiang-jiaocheng/](https://software-download.name/2014/fanqiang-jiaocheng/)\n\n*   shadowsocks-libev-polarssl_2.4.3.ar71xx.ipk (2015-12-20):\n    [https://software-download.name/2014/shadowsocks-libev-polarssl-ar71xx-ipk-latest/](https://software-download.name/2014/shadowsocks-libev-polarssl-ar71xx-ipk-latest/)\n\n## 授权许可\n\n除特别声明外，本书中的内容使用[CC BY-SA 3.0 License](http://creativecommons.org/licenses/by-sa/3.0/)（创作共用 署名-相同方式共享3.0许可协议）授权，代码遵循[BSD 3-Clause License](https://github.com/softwaredownload/openwrt-fanqiang/blob/master/LICENSE)（3项条款的BSD许可协议）。\n\n## 在线阅读OpenWrt翻墙路由器教程:\n\n*   [https://www.gitbook.com/book/softwaredownload/openwrt-fanqiang/details](https://www.gitbook.com/book/softwaredownload/openwrt-fanqiang/details)\n*   [https://github.com/softwaredownload/openwrt-fanqiang/blob/master/SUMMARY.md](https://github.com/softwaredownload/openwrt-fanqiang/blob/master/SUMMARY.md)"
		},
		{
			"post_id": 10,
			"title": "比锐速还强的 TCP拥塞控制技术 —— TCP-BBR 测试及开启教程",
			"date_published": 1496106514.598,
			"body": "这几天BBR很火的样子，我就半夜测试一下。BBR和锐速都属于TCP拥塞控制技术，虽然这类技术互联网上面不少，不过我都不是很了解。\n\n本文章仅为我个人的测试，各地区测试情况不一样，而且BBR还处于开发初期并且开源，而锐速则已经停止开发了。\n\n* * *\n\n**一键脚本安装：[『原创』Debian/Ubuntu系统 TCP拥塞控制技术 ——TCP-BBR 一键安装脚本](https://doub.io/wlzy-16/)**\n\n**注意：TCP-BBR和锐速一样，不支持Openvz，查看本教程之前，请先确定你的VPS的虚拟化技术！**\n\n```\n注意：本教程涉及到VPS更换内核，所以如果步骤错误，或者VPS不兼容最新的内核，会导致无法开机等错误，请勿用于生产环境！！！！\n```\n\n### BBR 简单介绍\n\nBBR 是一个由谷歌社区开发的 TCP拥塞控制技术，目前处于开发初期，但是前景很棒，大家可以持续关注，同时BBR是集成与Linux最新版本的内核中的。\n\n具体什么是TCP拥塞控制技术，详细的我也不懂，我就用通俗的解释一下，不一定准确，看一看理解一下就好了。\n\n> 原始的TCP流量传输技术，流量管理很乱，我们把 **TCP流量比喻成 公路上的汽车流量，而TCP传输隧道就是 公路**，那么：\n> \n> 在原始的TCP流量传输中，一条十字路口公路，很多车流量，但是却**没有红绿灯和交警，导致大家左挤右挤的堵车了**，这就是没有合理的管理导致的。\n> \n> **而BBR和锐速等TCP流量控制技术，就是红绿灯+交警**，他们就是在无人管理的十字路口，去合理指挥分配车流量，然后最大化的利用车流量，保证路面畅通。\n\n大概就是这样解释了，有什么错误请指出。\n\n## 启动步骤\n\n首先是教程，本人喜欢Debian，所以我先使用 **Debian 7 / 8 x64** 系统来做测试。Ubuntu随后考虑加上。\n\n```\n每一个步骤，我都会加上VPS中执行后的提示，本教程以64位为例。但是各个系统可能会存在差异，所以仅为参考。\n```\n\n**在 2016-12-05 21:00 更新的 4.9.0-rc8 内核已经支持了TCP-BBR，最新内核[看这里](http://kernel.ubuntu.com/~kernel-ppa/mainline/)。**\n\n```\n注意：TCP-BBR必须是 2016-12-05 21:00 更新的 4.9.0-rc8 内核及以后的版本 才能开启，而锐速并不支持这个最新的内核版本，所以TCP-BBR和锐速是不能共存的。\n```\n\n* * *\n\n**更换内核需要ROOT权限的账号**，所以如果你是普通用户 的话，需要切换到ROOT账号，如果你是ROOT账号，那就忽略这个步骤：\n\n1.  sudo su\n\n输入并回车后，会提示让你输入当前用户账号的密码，输入并回车后就可以继续下面的步骤了。\n\n* * *\n\n1.  uname -m\n\n使用这个命令会返回你的系统位数，如果是 **x86_64 那就是64位**，如果是 **i386 或 386 那就是32位**，如果是 **i686 或 686，那么不支持**。\n\n### 下载内核文件（64位系统）\n\n1.  wget -O linux-image-4.10.1-amd64.deb http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb\n\n### 下载内核文件（32位系统）\n\n1.  wget -O linux-image-4.10.1-i386.deb http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_i386.deb\n\n[点击展开 查看VPS提示](https://doub.io/wlzy-15/#)\n\n### 安装内核（64位）\n\n1.  dpkg -i linux-image-4.10.1-amd64.deb\n\n### 安装内核（32位）\n\n1.  dpkg -i linux-image-4.10.1-i386.deb\n\n[点击展开 查看VPS提示](https://doub.io/wlzy-15/#)\n\n### 列出并删除旧内核\n\n**列出VPS 除了刚才安装的内核以外的 所有内核名称：**\n\n```\n注意：这个代码是排除了刚才安装的内核，所以不会显示刚才安装的那个内核。删除了多余的内核后，就会什么都不显示！\n```\n\n1.  dpkg -l|grep linux-image | awk '{print $2}' | grep -v 'linux-image-[4-9].[0-9]*.'\n\n1.  root@bbr1:~# **dpkg -l|grep linux-image | awk '{print $2}' | grep -v 'linux-image-[4-9].[0-9]*.'**\n2.  linux-image-3.16.0-4-amd64\n3.  linux-image-amd64\n\n我使用的VPS是` 3.16.0-4-amd64 `内核的，所以删除这两个内核：`linux-image-3.16.0-4-amd64、linux-image-amd64 `。\n\n**删除旧内核：**\n\n1.  apt-get purge 旧内核名称\n\n1.  # ！！！！示例！！！！\n2.  # 比如我是有这两个内核，所以我把这两个删掉，不要照着我的这个步骤做，自己换成你VPS的内核名称！！！\n3.  apt-get purge linux-image-3.16.0-4-amd64\n4.  apt-get purge linux-image-amd64\n5.  # ！！！！示例！！！！\n\n删除旧内核的过程中会提示你是否继续，选择` Y `，然后还会提示你是否终止删除内核的行为，选择` NO `。\n\n![](https://img.mlkxs.com/wlzy-15-07.png?imageView2/1/w/2000/q/100|watermark/1/image/aHR0cDovLzd4ajh0NC5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9zaHVpeWluLnBuZw==/dissolve/70/gravity/SouthEast/dx/10/dy/10)\n\n[点击展开 查看VPS提示](https://doub.io/wlzy-15/#)\n\n### 更新 grub 系统引导文件并重启VPS\n\n1.  # 更新系统引导文件\n2.  update-grub\n3.  # 重启VPS，执行后SSH链接会断开，等十几秒再重新连接继续执行下面的启动命令。\n4.  reboot\n\n1.  # VPS提示\n\n3.  root@bbr1:~# **update-grub**\n4.  Generating grub configuration file ...\n5.  Found linux image: /boot/vmlinuz-4.10.1-040900rc8-generic\n6.  Found initrd image: /boot/initrd.img-4.10.1-040900rc8-generic\n7.  done\n\n### 开启bbr\n\n1.  echo \"net.core.default_qdisc=fq\" >> /etc/sysctl.conf\n2.  echo \"net.ipv4.tcp_congestion_control=bbr\" >> /etc/sysctl.conf\n\n执行这个保存生效更改。\n\n1.  sysctl -p\n\n1.  # VPS提示\n\n3.  root@bbr1:~# **sysctl -p**\n4.  net.ipv6.conf.all.accept_ra = 2\n5.  net.core.default_qdisc = fq\n6.  net.ipv4.tcp_congestion_control = bbr\n\n### 关闭bbr\n\n1.  sed -i '/net\\.core\\.default_qdisc=fq/d' /etc/sysctl.conf && sed -i '/net\\.ipv4\\.tcp_congestion_control=bbr/d' /etc/sysctl.conf\n2.  sysctl -p\n\n执行完上面的代码，就使用reboot重启VPS后才能关闭bbr，重启后再用下面的查看bbr状态代码，查看是否关闭了。\n\n1.  reboot\n\n### 查看bbr是否开启\n\n执行下面命令，如果结果中有**bbr**，即证明你的内核已开启bbr。\n\n1.  sysctl net.ipv4.tcp_available_congestion_control\n\n执行下面命令，看到有 **tcp_bbr** 模块，即说明bbr已启动\n\n1.  lsmod | grep bbr\n\n1.  # VPS提示\n2.  root@bbr1:~# **sysctl net.ipv4.tcp_available_congestion_control**\n3.  net.ipv4.tcp_available_congestion_control = **bbr** cubic reno\n\n5.  # ================================================\n\n7.  root@bbr1:~# **lsmod | grep bbr**\n8.  **tcp_bbr** 20480 0\n\n### 卸载BBR\n\nBBR集成于内核中，所以卸载BBR=更换内核，教程：\n\n[Debian更换内核教程 —— 4.10.x(BBR) 降低内核版本为 支持锐速的内核](https://doub.io/linux-jc6/)\n\n## 裸 SS/锐速+SS/BBR+SS 速度对比\n\n本人的测试环境是：晚上23:00点，联通运营商，美国渣渣VPS。\n\n```\n各个地区和运营商都存在差别，我的测试 速度对比仅供参考。谷歌网盘单线程下载测速地址：100MB\n```\n\n因为是半夜测试的，再加上用的美国垃圾小鸡，所以 裸SS 速度感人。\n\n使用** 锐速+SS** 后，单线程下载测速，翻了十倍，Youtube 也能看 **1080P流畅** 了。\n\n换成 **BBR+SS** 后，单线程又在 **锐速+SS** 的基础上翻了一倍，Youtube 速度有上升了一个档次 **1440P 倒是勉强，1080P可以随便拖拉**了。\n\n```\n虽然 Youtube 的数值不是很准，但是还是有点用的，数值太低同样也代表速度不行。\n```\n\n* * *\n\n总其以上，锐速(ServerSpeed)的技术已经成熟、定型，加速效果还是不错的，但是不再更新和维护了。\n\n而 TCP-BBR 属于新生的技术，处于开发初期，买没有完善成熟，未来的潜力相信还好更好。\n\n**所以总的来说：非折腾党，还是建议先使用锐速观望 TCP-BBR 一段时间，这是最稳妥的办法。**\n\n### 裸 SS\n\n![](https://img.mlkxs.com/wlzy-15-01.png?imageView2/1/w/2000/q/100|watermark/1/image/aHR0cDovLzd4ajh0NC5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9zaHVpeWluLnBuZw==/dissolve/70/gravity/SouthEast/dx/10/dy/100)\n\n![](https://img.mlkxs.com/wlzy-15-02.png?imageView2/1/w/2000/q/100|watermark/1/image/aHR0cDovLzd4ajh0NC5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9zaHVpeWluLnBuZw==/dissolve/70/gravity/SouthEast/dx/10/dy/100)\n\n### 锐速+SS\n\n![](https://img.mlkxs.com/wlzy-15-03.png?imageView2/1/w/2000/q/100|watermark/1/image/aHR0cDovLzd4ajh0NC5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9zaHVpeWluLnBuZw==/dissolve/70/gravity/SouthEast/dx/10/dy/100)\n\n![](https://img.mlkxs.com/wlzy-15-04.png?imageView2/1/w/2000/q/100|watermark/1/image/aHR0cDovLzd4ajh0NC5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9zaHVpeWluLnBuZw==/dissolve/70/gravity/SouthEast/dx/10/dy/100)\n\n### BBR+SS\n\n![](https://img.mlkxs.com/wlzy-15-08.png?imageView2/1/w/2000/q/100|watermark/1/image/aHR0cDovLzd4ajh0NC5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9zaHVpeWluLnBuZw==/dissolve/70/gravity/SouthEast/dx/10/dy/100)\n\n![](https://img.mlkxs.com/wlzy-15-06.png?imageView2/1/w/2000/q/100|watermark/1/image/aHR0cDovLzd4ajh0NC5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9zaHVpeWluLnBuZw==/dissolve/70/gravity/SouthEast/dx/10/dy/100)\n\n本文章安装步骤来自：[https://github.com/iMeiji/shadowsocks_install/wiki/开启TCP-BBR拥塞控制算法](https://github.com/iMeiji/shadowsocks_install/wiki/%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95)\n\n```\n转载请超链接注明：逗比根据地 » 比锐速还强的 TCP拥塞控制技术 —— TCP-BBR 测试及开启教程\n```\n\n```\n责任声明：本站一切资源均原创或收集自互联网，仅作交流学习之用，请勿用作商业！如造成任何后果，本站概不负责！\n```"
		},
		{
			"post_id": 9,
			"title": "惹名访问的经典——Tor浏览器的使用方法，超详细教程",
			"date_published": 1495458055.154,
			"body": "编者按：此神器平时不用，只有在重大敏感事件时才使用，同时提醒，国内的一些代理服务器早被破坏，有些是蜜罐，不安全，建议连接时使用前置代理，直接从国外进行开始链接，可实现真正惹名。当然，安全是相对的，你要搞核弹之类的，也是可以顺滕摸瓜找到你，但一般情况，成本相当高，没人会费这个劲的，也请低调使用。你了解原理之后，知道是经过N次国家的跳转，速度相应没那么快，高手曾说，你想那么快是着急去死啊。不过，等你水平高了以后，可以找到快的网桥，速度也不慢，也可以看视频。当然，本人菜鸟，偶尔使用，没深研究，反正看推特新闻之类足够了.\n\n本文摘自： [https://gochrome.info/tor-tutorial-new/](https://gochrome.info/tor-tutorial-new/) 【感谢作者的分享】\n\n* * *\n\n* * *\n\n说明\n\nTor一款高度匿名代理工具\n\n内置多款网桥，不过速度不佳\n\n本教程主要讲解如何搜索网桥，测试网桥，配置网桥，进而畅游youtube 1080P\n\n### 网桥来源\n\n*   访问 [https://bridges.torproject.org/bridges?transport=obfs2](https://gochrome.info/wp-content/themes/Begin/inc/go.php?url=https://bridges.torproject.org/bridges?transport=obfs2) 获取obfs2网桥\n*   访问 [https://bridges.torproject.org/bridges?transport=obfs3](https://gochrome.info/wp-content/themes/Begin/inc/go.php?url=https://bridges.torproject.org/bridges?transport=obfs3) 获取obfs3网桥\n*   访问 [https://bridges.torproject.org/bridges?transport=obfs4](https://gochrome.info/wp-content/themes/Begin/inc/go.php?url=https://bridges.torproject.org/bridges?transport=obfs4) 获取obfs4网桥\n*   访问 [https://bridges.torproject.org/bridges?transport=scramblesuit](https://gochrome.info/wp-content/themes/Begin/inc/go.php?url=https://bridges.torproject.org/bridges?transport=scramblesuit) 获取scramblesuit网桥\n\n给bridges@bridges.torproject.org发邮件（标题和正文都写get transport obfs3，其他类型“照猫画虎”）获取网桥。\n\n以上几种方法加起来大约可以20个网桥，然后根据以下地址测试速度。最后把400K/S以上的网桥都放到tor中（后边会说网桥往哪放）\n\n### 网桥测速地址\n\n通过 [https://atlas.torproject.org/#search/网桥的fingerprint（40位字母数字组合）](https://atlas.torproject.org/#search/网桥的fingerprint（40位字母数字组合）) 来查看带宽，最好能找到大于1M/S的网桥！！\n\n### 以上信息来源\n\n[https://cnlic.com/?p=42](https://gochrome.info/wp-content/themes/Begin/inc/go.php?url=https://cnlic.com/?p=42)\n\n### 网桥配置教程\n\n1.  点击下载[Tor浏览器5.0.6windows中文稳定版](https://gochrome.info/wp-content/themes/Begin/inc/go.php?url=https://www.torproject.org/dist/torbrowser/5.0.6/torbrowser-install-5.0.6_zh-CN.exe)（32/64兼容）（此乃官网，需要翻墙）需要其他版本请点击[Tor官网](https://gochrome.info/wp-content/themes/Begin/inc/go.php?url=https://www.torproject.org/projects/torbrowser.html.en)\n2.  安装Tor，安装在D盘即可\n3.  运行并配置Tor，详情看图\n\n    * * *\n\n    [![TOR1](https://gochrome.info/wp-content/uploads/2015/12/TOR1.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR1.png)\n\n    * * *\n\n    [![TOR2](https://gochrome.info/wp-content/uploads/2015/12/TOR2.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR2.png)\n\n    * * *\n\n    [![TOR3](https://gochrome.info/wp-content/uploads/2015/12/TOR3.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR3.png)\n\n    * * *\n\n    [![TOR4](https://gochrome.info/wp-content/uploads/2015/12/TOR4.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR4.png)\n\n    * * *\n\n    [![TOR5](https://gochrome.info/wp-content/uploads/2015/12/TOR5-1.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR5-1.png)\n\n    * * *\n\n    [![TOR6](https://gochrome.info/wp-content/uploads/2015/12/TOR6.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR6.png)\n\n    * * *\n\n    [![TOR7](https://gochrome.info/wp-content/uploads/2015/12/TOR7.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR7.png)\n\n    * * *\n\n    [![TOR8](https://gochrome.info/wp-content/uploads/2015/12/TOR8.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR8.png)\n\n4.  以后这么运行Tor呢，且往下看\n\n    * * *\n\n    [![TOR9](https://gochrome.info/wp-content/uploads/2015/12/TOR9.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR9.png)\n\n    * * *\n\n    [![TOR10](https://gochrome.info/wp-content/uploads/2015/12/TOR10.png)](https://gochrome.info/wp-content/uploads/2015/12/TOR10.png)\n\n5.  教程到此结束！！！以后可能出个怎么前置的教程，你们也可以自己摸索！！！\n\n### 看张测试图爽爽\n\n如果你看我教程连不上，但是网桥速度有不错，可能是网桥被破解\n\n请查看[Tor复活教程-安装版](https://gochrome.info/tor-revive/)"
		},
		{
			"post_id": 8,
			"title": "<h5>另一分布式共享神器-BT Sync  ，现名Resilio Sync<h5>",
			"date_published": 1495455770.956,
			"body": "适合用于大文件的分享，下载视频，成人片片，资料，梯子工具等，但你要去找一些共享链接，但一般有人主动分享的。\n\n郭文贵视频持续更新。推友【 内循环 [@**breakorcontinue**](https://twitter.com/breakorcontinue) 】持续维护整理。\n\n**<font color=\"#FF2626\" size=\"5\">B4F5YOHLAEWHNBQA5SSHDXHVYOZ3NXQGB</font>**\n\n* * *\n\n技术原理\n\nResilio Sync使用P2P协议同步软件<sup id=\"cite_ref-12\">[[12]](https://zh.wikipedia.org/wiki/Resilio_Sync#cite_note-12)</sup>。该协议用于在多个设备间传递大文件时非常有效<sup id=\"cite_ref-13\">[[13]](https://zh.wikipedia.org/wiki/Resilio_Sync#cite_note-13)</sup>，与[µTorrent](https://zh.wikipedia.org/wiki/%CE%9CTorrent \"ΜTorrent\")和[BitTorrent](https://zh.wikipedia.org/wiki/BitTorrent_(%E8%BD%AF%E4%BB%B6) \"BitTorrent (软件)\")使用的协议类似 。Resilio Sync中，用户数据并不在云端，而是存储在本地硬盘中，因此在同步数据时需要至少一台持有数据的计算机处于开机状态。Resilio Sync使用在计数模式中AES-128密钥，该密钥可随机生成，或由用户设置。在Resilio Sync中该密钥称为secret，可告知给其他用户以便共享数据。数据是直接从一台设备上发送到另一台设备中，因此需要数据所在设备在网络上可访问。如果原设备不可访问，则数据由其他节点传播，这些传播节点无需知道原先的secret，但只有知道secret的节点才能解码并查看数据。\n\n可以将secret告知给某个节点，这样就将该节点加入到同步系统中，使其可以访问数据。当创建新节点时，用户可以将原secret告知给新节点；若出于安全性考虑，也可以创建一次性使用的secret。用户还可以通过Resilio Sync客户端生成一个只读的secret，这样当新节点接收到这个secret时，只能查看文件而无法修改。\n\nResilio Sync对需要同步的文件大小没有限制，唯一的限制就是不同的同步设备中都需要有足够的空间容纳所要同步的文件<sup id=\"cite_ref-14\">[[14]](https://zh.wikipedia.org/wiki/Resilio_Sync#cite_note-14)</sup>。-摘自维基百科。\n\n* * *\n\n## -------------------------以下摘自syncfan.com-----------------\n\n## 安装\n\n1.  下载安装包。打开 [官网](https://www.getsync.com/individuals/) ，点击 Free Download 下载最新版的 Sync 安装包。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_01.jpg)\n2.  下载中。如果官网速度较慢，请使用 [国内下载地址](http://down.tech.sina.com.cn/page/57685.html) 。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_02.jpg)\n3.  下载成功。如果出现下面的提醒，请点击“保留”。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_03.jpg)\n4.  打开安装包。如果弹出安全警告，请点击“运行”。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_04.jpg)\n5.  安装 Sync ，保持选项默认即可。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_05.jpg)\n6.  弹出订阅提示，请直接忽视。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_06.jpg)\n7.  第一次运行。指定一个昵称，即在网络上显示的名称，并勾选最下面一个文字框，点击“入门”。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_07.jpg)\n8.  启动 Sync 后的界面如图所示。右上的五个按钮依次是：搜索、链接设备、历史记录、告警信息和设置。 ![](https://syncfan.com/img/01_tutorial_zhcn/1_install_08.jpg)\n\n## 设置（首选项）\n\n1.  点击右上角的齿轮进入“首选项”。在“通用”标签中，建议将“默认文件夹”设置到剩余空间比较充足的分区，其他选项保持默认即可。 ![](https://syncfan.com/img/01_tutorial_zhcn/2_option_1.jpg)\n2.  点击“高级”标签。这里可以限制上传和下载的速率，其他选项建议保持默认。 ![](https://syncfan.com/img/01_tutorial_zhcn/2_option_2.jpg)\n3.  单击最下面的“打开高级用户偏好设置”，进入高级用户偏好设置，请注意，此处仅限高级用户使用！ ![](https://syncfan.com/img/01_tutorial_zhcn/2_option_3.jpg)\n\n## 下载（同步）\n\n1.  Sync 2.0.0 及以上版本，可以直接点击网页上的分享连接，自动选择存放目录并开始下载。以“神Key”为例，点击某个分享连接以后，你会看到如下页面，点击“I already have Sync 2.0”。 ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_1.jpg)\n2.  如果您使用的是 Google Chrome 浏览器，可能会弹出“外部协议请求”，请先勾选“记住我对所有此类型链接的选择”，然后点击“启动应用。” ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_2.jpg)\n3.  选择存放文件夹。如果你前面已经指定了默认存放文件夹，这里直接点击连接即可。 ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_3.jpg)\n4.  开始接收。状态“正在接收”表示下载正在进行中，如果状态显示“正在发送”，则表示您已经下载完成并且正在上传，请保持并发扬 Sync 精神，下载完成保持客户端打开，以方便更多人下载。 ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_4.jpg)\n5.  使用秘钥下载。大多数情况下，你可能从网页上或QQ群里得到了一段类似 BCWHZRSLANR64CGPTXRE54ENNSIUE5SMO 的秘钥；点击“添加文件夹”并选择“输入秘钥或链接”； ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_5a.jpg)点“下一步”即可； ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_5b.jpg)这里与直接点击链接不同，需要手动指定存放文件夹。 ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_5c.jpg) **强烈建议你在命名文件夹时包含秘钥，以方便日后搜索。**\n6.  分享给朋友。觉得这个资源不错，想分享给朋友，你只需要把光标悬停在该资源上面，然后点击最右边出现的“共享”。总共有三种共享方法：1\\. 链接共享；2\\. 秘钥（Key）共享；3\\. 二维码共享（这三种共享方式的区别参加附录）。如下图所示 ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_6a.jpg)温馨提示：**“安全性”下面的三个选项，如无必要请勿勾选，否则每个下载的用户都需要你手动批准，并且你分享的链接、秘钥和二维码过期后将无法使用。 ![](https://syncfan.com/img/01_tutorial_zhcn/3_download_6b.jpg)![](https://syncfan.com/img/01_tutorial_zhcn/3_download_6c.jpg)**备注：因为你不是该资源的发布者，所以无法获取读写权限；即你只能下载文件夹中的资源，而不能向文件夹中添加资源。\n\n## 发布\n\n1.  你也可以发布资源让网友下载，类似于BT下载的“做种”。点击“添加文件夹”并选择“标准文件夹”。 ![](https://syncfan.com/img/01_tutorial_zhcn/4_publish_1.jpg)\n2.  选择要发布的资源。这里以《华语歌坛1200首》为例，定位到该文件夹；**请注意，Sync 发布的资源必须是一个文件夹，不能选择单独的一个或多个文件，也不能选择多个文件夹；你需要提前把需要发布到资源放到一个文件夹中。** ![](https://syncfan.com/img/01_tutorial_zhcn/4_publish_2.jpg)\n3.  开始做种。由于你尚未在网络中公开该资源的链接、秘钥或二维码，所以目前还没有人下载该资源，在线用户为0。 ![](https://syncfan.com/img/01_tutorial_zhcn/4_publish_3.jpg)\n4.  把链接、秘钥或二维码发布出去。**因为你是资源发布者，所以可以选择开放“读写”权限，这样别人可以修改、添加或删除资源，请谨慎选择。**温馨提示：**“安全性”下面的三个选项，如无必要请勿勾选，否则每个下载的用户都需要你手动批准，并且你分享的链接、秘钥和二维码过期后将无法使用。** ![](https://syncfan.com/img/01_tutorial_zhcn/4_publish_4.jpg)\n5.  直接复制共享秘钥。你也可以直接右键该资源并点击“复制只读秘钥”，即可将秘钥保存到剪贴板中，并快速分享到任何位置。 ![](https://syncfan.com/img/01_tutorial_zhcn/4_publish_5.jpg)\n6.  移除资源。如果你不打算继续做种，请右键该资源并点击“移除”，但是，和BT下载一样，如果已经有人100%下载，则他会继续做种，让后来的人也可以下载。请继承并发扬 BT 精神，做一个有种的男人。 ![](https://syncfan.com/img/01_tutorial_zhcn/4_publish_6.jpg)\n\n## 附录\n\n### 链接、秘钥和二维码分享有什么区别？\n\n1.  链接：连接中包含文件夹名，如果已经安装 Sync 2.0.0 及以上版本，可以直接点击，Sync 客户端会自动启动并帮你命名文件夹；链接适合放在自己的网站或博客上；缺点是链接太长，不是每个地方都可以发链接。\n2.  秘钥：一段随机字符，可以方便地通过微信、QQ、贴吧、论坛共享；缺点是需要手动命名文件夹，而且下载前不知道该资源的内容。\n3.  二维码：适合手机客户端扫码下载，同时，手机客户端免费支持“选择性同步”，这在桌面版上需要花钱才能使用。\n\n* * *\n\n------------------------------以下为【编程随想】所摘-----------------------致敬！他比较早关注此软件，本来想采用他的版本，但是图片是老的，我搜了新的教程，以备封锁之后使用。\n\n------------------------------------------------------------------------------------------------<a data-cke-saved-name=\"head-8\" name=\"head-8\"></a>\n\n## ★俺分享的资源\n\n　　因为今天是扫盲，就先聊最基本的功能使用。以后有空再聊高级话题——其实俺也是刚上手不久，没啥高级话题可说 :(\n\n### ◇翻墙工具\n\n　　在刚才示范的时候，已经提到——俺用 BT Sync 来分享翻墙工具，密钥如下：\n\n```\nBTLZ4A4UD3PEWKPLLWEOKH3W7OQJKFPLG\n```\n\n　　用 BT Sync 分享翻墙工具，最大的好处是——可以绕过 GFW。只要有一个【墙内的】 BT Sync 节点拿到翻墙工具，那么其它的【墙内节点】也可以同步并得到。而 GFW 是部署在天朝的国际出口。【墙内】两台电脑之间的传输，【不会】经过 GFW。\n\n### ◇电子书\n\n　　经过前几篇博文的铺垫，那些电子书爱好者估计已经跃跃欲试了。\n　　下面就是俺用 BT Sync 分享的电子书目录的密钥。每个目录的结构，跟俺的微软网盘上的目录结构，是基本一致的。\n\n```\nB7P64IMWOCXWEYOXIMBX6HN5MHEULFS4V    俺博客的“离线浏览页面”和“博客电子书制作脚本”\nBRSSYZTSAC6UGYTUOJ22L4GCO7QESPPBD    政治（含大量禁书）\nBNZ6DOA6W577O6GUNH7C3MY6DWC6FTDQB    心理学\nBSH7FXJFVWJTKWGSX5GTWX7PHZZ2D2M7Q    历史\nB2FRYA6AXCDW6CF4YJVFWKH2HAXOFICOX    经济\nB3WNBTAAFFAODFR6FQ3E3L5BBSJAFNBSJ    管理\nBZR4TTYHT25QWUIE6YNMAKWUGBHKSGLC6    社会学\nBMBB5YLBIJJAE5H6TP27OS7YCEUKCYHZK    文艺\nB6WWVBXPMZDI5IL4KED6AAHA5FO4UNKQF    哲学\nBMWWZALG4P56LREF47EE2WSWHZEM4E6BL    军事\nBUPSDXFA3TP7KCMLHALRHLIX2FEJEUJFE    IT（信息技术）\n```\n\n　　明天俺会去把“[电子书清单](https://github.com/programthink/books)”也更新了——补充上述密钥的说明。\n\n### ◇补充说明\n\n　　1.\n　　【不需要】翻墙——因为翻墙会导致你的传输速度变慢（会慢多少，取决于你用的翻墙工具）。\n　　2.\n　　大伙儿没事儿就把你的 BT Sync 开着。同时运行的节点越多，下次俺增加新书（新翻墙工具）的时候，同步速度就越快。而且运行的节点越多，朝廷越难封锁。\n\n**版权声明**\n本博客所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者[编程随想](mailto:program.think@gmail.com)和本文原始地址：\n[https://program-think.blogspot.com/2015/01/BitTorrent-Sync.html](https://program-think.blogspot.com/2015/01/BitTorrent-Sync.html)"
		},
		{
			"post_id": 7,
			"title": "为什么一定要学会翻墙",
			"date_published": 1495247406.939,
			"body": "翻墙不但是娱乐，更是得到准确的信息，逃出网络监狱。是必须要掌握的技能，实际也并不复杂。信息不对称是区别人群的重要指标，李超人能预见大陆的金融管制，早早抽身离开香港，这是因为他的渠道远超常人，而普通人能选择免受欺骗就不错了。现在有人免费告诉你这些信息，且行且珍惜，以前高级领导看内参，现在均有海外专线，耳聪目明才为聪明，翻墙不会，实在可怜。\n\n* * *\n\n​​​​​​​\n\n1.  首先要问为什么有了墙？官方对外是鼓励自由交流的。-摘自维基百科。\n\n当局一直没有正式对外承认防火长城的存在，如当有记者在外交部新闻发布会上问及互联网封锁等问题的时候，发言人的答案基本都是“中国政府鼓励和支持互联网发展，依法保障公民言论自由，包括网上言论自由。同时，中国对互联网依法进行管理，这匹配国际惯例。”[方滨兴](https://zh.wikipedia.org/wiki/%E6%96%B9%E6%BB%A8%E5%85%B4 \"方滨兴\")曾在访问中被问及防火长城是如何运作的时候，他指这是“国家机密”。不过2015年1月与官方有密切关系的《[环球时报](https://zh.wikipedia.org/wiki/%E7%8E%AF%E7%90%83%E6%97%B6%E6%8A%A5 \"环球时报\")》则发布报道曾公开宣扬其存在。<sup id=\"cite_ref-10\">[[10]](https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E#cite_note-10)</sup>可以发现到官方对墙的理解随时间发展也不断改变，从最初资讯的屏蔽与阻止流通用途，进一步到不仅止于过滤政府认为不满意的各种内容，更到了以发展中国互联网经济为名，企图透过封闭隔绝将网路[国界](https://zh.wikipedia.org/wiki/%E5%9B%BD%E7%95%8C \"国界\")化，视外资为经济渗透、干涉内政，这些墙存在意义的舆论宣传，逐步强化了设墙政策的合理性与正当性，但时至今日中国仍一直宣称是“依法管理以保障[网路主权](https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E4%B8%BB%E6%AC%8A \"网络主权\")”，如从官方媒体公开发布的报道里就曾涉及防火长城的监控，从侧面证明其的确存在<sup id=\"cite_ref-11\">[[11]](https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E#cite_note-11)</sup><sup id=\"cite_ref-12\">[[12]](https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E#cite_note-12)</sup>。\n\n2.翻墙可以娱乐。海量成人、社交网站，自由交流，不担心被删贴的感觉真好。\n\n3.关键时刻获得第一手资讯，避免个人经济和人身遭受伤害。"
		},
		{
			"post_id": 6,
			"title": "<h5>Kcptun一键安装脚本,支持多用户(作者： SUNNY856)<h5>",
			"date_published": 1494679968.144,
			"body": "_DaTiZi编者按:在搬瓦工最便宜的机器上，使用Kcptun看YOUTUBE非常爽滑，作者也是菜鸟，在看一些成人网站时，卡住时的那种感觉实在是生死不如，在这种情况下，我奋发图强，在测试无数次后，这种解决方案很不错。非常感谢作者们的分享，本站均保留作者姓名进行转载。_\n\n前排提醒，kcptun对速度的提升很明显，但同时消耗的流量也会成倍增长。\n\n理论上脚本支持：CentOS 6+、Ubuntu 12+和Debian 7+\n\n* * *\n\n安装过的可以更新脚本，执行以下命令\n\n```\n./kcptun.sh update\n```\n\n> #### 事前准备\n\n在配置之前请确认一下你的加速地址，大部分不能加速都是由于加速地址配置错误。\n\n下面以 Shadowsocks 为例，首先找到你的ss端口，比如我的ss端口为 8022，然后在命令行输入以下命令：\n\n```\nnetstat -nl | grep 8022\n```\n\n如果提示以上命令不存在，请输入：\n\n```\nss -nl | grep 8022\n```\n\n然后你会看到类似下面的结果：\n\n```\n情况1：\n  tcp6       0      0     :::8022                 :::*                    LISTEN     \n  udp6       0      0     :::8022                 :::*\n\n情况2：\n  tcp       0      0     127.0.0.1:8022                 :::*                    LISTEN     \n  udp       0      0     127.0.0.1:8022                 :::*\n\n情况3：\n  tcp       0      0     0.0.0.0:8022                 :::*                    LISTEN     \n  udp       0      0     0.0.0.0:8022                 :::*\n\n情况4（假如 10.10.10.10 是当前服务器IP）：\n  tcp       0      0     10.10.10.10:8022                 :::*                    LISTEN     \n  udp       0      0     10.10.10.10:8022                 :::*\n```\n\n若为情况1、情况2和情况3，那么你的加速地址可以为：加速 IP 127.0.0.1，加速端口 8022（你的ss端口）\n\n若为情况4，那么你的加速地址为：加速IP 10.10.10.10（你的服务器IP），加速端口8022（你的 ss端口）\n\n> #### 一键安装脚本\n\n```\nwget --no-check-certificate https://raw.githubusercontent.com/kuoruan/kcptun_installer/master/kcptun.sh\nchmod +x ./kcptun.sh\n./kcptun.sh\n```\n\n1.设置 Kcptun 的服务端端口：\n\n```\n请输入 Kcptun Server 端口 [1-65535]:\n(默认: 29900):\n```\n\n请输入一个未被占用的端口，Kcptun 运行时将使用此端口。\n\n2.设置加速的 IP：\n\n```\n请输入需要加速的 IP [0.0.0.0 ~ 255.255.255.255]:\n(默认: 127.0.0.1):\n```\n\n填入上面获取到的加速 IP。\n\n3.设置需要加速的端口：\n\n```\n请输入需要加速的端口 [1-65535]:\n(默认: 12948):\n```\n\n填入上面获取到的加速端口 8022。\n\n4.设置 Kcptun 密码：\n\n```\n请输入 Kcptun 密码:\n(如果不想使用密码请留空):\n```\n\n你可以为 Kcptun 单独设置一个密码，这个密码和 SS 的密码没有半毛钱关系。如果直接回车，默认密码是： it’s a secrect 。\n\n再提一句，Kcptun 和 Shadowsocks 没有任何关系，请不要脑补它们之间存在任何联系，Kcptun 你可以理解为一款网络加速软件，只不过它是通过将 TCP 协议转换为 UDP 协议，然后再通过大量的发送数据包，浪费了带宽以换取网速的提升。它能加速所有以 TCP 协议传输数据的软件，不单单是 Shadowsocks。只是大家都用来……你懂的。\n\n5.禁用压缩\n\n```\n是否禁用数据压缩?\n(默认: 不禁用) [y/n]:\n```\n\nKcptun 默认是启用压缩的，如果你这里设置为 y，也就是配置为 nocomp:true，那么就是禁用压缩。\n\n许多朋友这里设置的是保持默认（启用压缩），而偏偏在软件之中设置为禁用压缩，当然就连不上咯。\n\n其他配置项如果你不知道，那么直接回车使用默认参数。\n\n但是，使用默认参数，是有可能浪费大量流量的，你需要会调节参数。\n\n简易自我调优方法：\n\n1.  同时在两端逐步增大 client rcvwnd 和 server sndwnd ;\n2.  尝试下载，观察如果带宽利用率（服务器＋客户端两端都要观察）接近物理带宽则停止，否则跳转到第一步。\n\n各参数详细信息请查看：[https://github.com/xtaci/kcptun](https://github.com/xtaci/kcptun)\n\n安装之后，Kcptun 服务交由 Supervisor 管理。\n\nSupervisor 相关命令：\n\n```\nservice supervisord {start|stop|restart|status}\n```\n\nKcptun 相关命令：\n\n```\nsupervisorctl {start|stop|restart|status} kcptun\n```\n\nSupervisor 启动的时候会同时启动 Kcptun，运行 kcptun 相关命令时先确保 Supervisor 已启动。\n\n手动配置的方法请看这里：小内存福音，Kcptun Shadowsocks加速方案\n\n> #### Kcptun客户端配置\n\n1.Kcptun启动工具，[https://github.com/dfdragon/kcptun_gclient/releases](https://github.com/dfdragon/kcptun_gclient/releases)\n\n2.Kcptun客户端，[https://github.com/xtaci/kcptun/releases](https://github.com/xtaci/kcptun/releases)\n\n32位系统下载：kcptun-windows-386-20160922.tar.gz\n\n64位系统下载：kcptun-windows-amd64-20160922.tar.gz\n\n注意看红字的版本号和服务端版本一致。\n\n打开 Kcptun 启动工具，界面如下，请按序号操作。\n\n[![kcptun_gui_config-550x330](http://sunny856.xyz/wp-content/uploads/2017/01/Kcptun_GUI_config-550x330.png)](http://sunny856.xyz/wp-content/uploads/2017/01/Kcptun_GUI_config-550x330.png)\n\n1.直接导入配置文件\n\n我们可以将推荐参数保存为文件，找到如下这部分：\n\n```\n{\n \"localaddr\": \":8022\",\n \"remoteaddr\": \"10.10.10.10:29900\",\n \"key\": \"test\",\n \"crypt\": \"salsa20\",\n \"mode\": \"fast2\",\n \"conn\": 1,\n \"autoexpire\": 60,\n \"mtu\": 1350,\n \"sndwnd\": 1024,\n \"rcvwnd\": 1024,\n \"datashard\": 10,\n \"parityshard\": 3,\n \"dscp\": 0,\n \"nocomp\": false,\n \"acknodelay\": false,\n \"nodelay\": 0,\n \"interval\": 20,\n \"resend\": 2,\n \"nc\": 1,\n \"sockbuf\": 4194304,\n \"keepalive\": 10\n}\n```\n\n新建一个记事本文件，文件名随意（比如 config.txt 或者 config.json），然后将上面大括号里的内容复制到文件里边（包括大括号），确保它是标准的 json 格式（可以到这里校验格式 [http://www.json.cn/](http://www.json.cn/)）。\n\n然后勾选“使用配置文件”，选择你新建的文件即可，下面的参数区域直接留空，点击启动。\n\n2.手动配置参数\n\n手动配置的时候只需要看保存下来的提示信息上面一部分（有标红部分，非常显眼）：\n\n```\n服务器IP:10.10.10.10\n端口:29900\n加速地址:127.0.0.1:8022\n加密方式 Crypt:salsa20\n```\n\n为了规避错误，遵循较少配置原则，在配置服务端时没有修改过的选项都不需要配置。配置完毕，点击启动。\n\n几项说明：\n\n*   本地监听端口，这个端口你可以随意设置，不是必须设置为 Shadowsocsk 的端口；\n*   KCP服务器地址为你的服务器IP地址，不是 127.0.0.1，端口为服务端 Kcptun 的端口；\n*   如果你想使用IPv6协议，在填写服务器IP地址的时候需要用 [] 将IPv6地址括起来，如：[2000:0:0:0:0:0:0:1]；\n*   通信密钥是你配置的 Kcptun 密码，不是 Shadowsocks 的密码；在配置 Kcptun 的时候，不用管 Shadowsocks 的配置参数；\n*   参数区配置的时候，只需要配置你修改过的部分就行了，其他部分都不用改，除非你了解每项参数的意义；\n*   日志区非常重要，在排查问题的时候，这是必看部分；\n*   右下角为 Kcptun 最低需求版本，更新服务端之后，也需要更新本地客户端，只需要替换客户端文件即可。\n\n> #### Shadowsocks 配置\n\n1.Windows端\n\n在 Shadowsocks 客户端中添加一个选项，服务器IP固定填写 127.0.0.1，服务器端口填写 Kcptun 启动工具中配置的“本地监听端口”（即这里的 8022），密码和加密配置的是 Shadowsocks 的密码和加密方式。\n\n基本原则，配置 Kcptun 的时候不用管 Shadowsocks 的参数，配置 Shadowsocks 的时候不用管 Kcptun 的参数。\n\n2.Android端\n\nss账号正常填写，kcp配置如下：\n\n（关掉kcp是可以正常连接使用的）\n\n[![andriod-kcptun2](http://sunny856.xyz/wp-content/uploads/2016/07/andriod-kcptun2.png)](http://sunny856.xyz/wp-content/uploads/2016/07/andriod-kcptun2.png)\n\nkcp参数\n\n```\n-crypt salsa20 --key test --mtu 1350 -sndwnd 1024 --rcvwnd 1024 --mode fast2\n```\n\n> #### 其他说明\n\n```\n请使用: ./kcptun.sh <option>\n可使用的参数 <option> 包括:\n    install 安装\n    uninstall 卸载\n    update 检查更新\n    manual 自定义 Kcptun 版本安装\n    help 查看脚本使用说明\n    add 添加一个实例, 多用户使用\n    reconfig <id> 重新配置实例\n    show <id> 显示实例详细配置\n    log <id> 显示实例日志\n注: 上述参数中的 <id> 可选, 代表的是实例的序号\n    可使用 1, 2, 3 ... 分别对应 kcptun, kcptun2, kcptun3 ...\n    若不指定 <id>, 则默认为 1\n\nSupervisor 命令:\n    service supervisord {start|stop|restart|status}\n    {启动|关闭|重启|查看状态}\nKcptun 相关命令:\n    supervisorctl {start|stop|restart|status} kcptun<id>\n    {启动|关闭|重启|查看状态}\n```\n\n原文：[https://blog.kuoruan.com/110.html](https://blog.kuoruan.com/110.html)"
		},
		{
			"post_id": 5,
			"title": "<h5>Shadowsocks 一键安装脚本（四合一）(作者：秋水逸冰)<h5>",
			"date_published": 1494654157.134,
			"body": "## 本脚本适用环境\n\n系统支持：CentOS 6+，Debian 7+，Ubuntu 12+\n内存要求：≥128M\n日期　　：2017 年 02 月 24 日\n\n### 关于本脚本\n\n1、一键安装 Shadowsocks-Python， ShadowsocksR， Shadowsocks-Go， Shadowsocks-libev 版（四选一）服务端；\n2、各版本的启动脚本及配置文件名不再重合；\n3、每次运行可安装一种版本；\n4、支持以多次运行来安装多个版本，且各个版本可以共存（注意端口号需设成不同）；\n5、若已安装多个版本，则卸载时也需多次运行（每次卸载一种）；\n6、Shadowsocks-Python 和 ShadowsocksR 安装后不可同时启动（因为本质上都属 Python 版）。\n\n**友情提示：**如果你有问题，请先阅读这篇《[Shadowsocks Troubleshooting](https://teddysun.com/399.html)》之后再询问。\n\n* * *\n\n### 默认配置\n\n服务器端口：自己设定（如不设定，默认为 8989）\n密码：自己设定（如不设定，默认为 teddysun.com）\n**备注：**脚本默认创建单用户配置文件，如需配置多用户，请手动修改相应的配置文件后重启即可。\n\n### 客户端下载\n\n常规版 Windows 客户端\n[https://github.com/shadowsocks/shadowsocks-windows/releases](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\nShadowsocksR 版 Windows 客户端\n[https://github.com/shadowsocksr/shadowsocksr-csharp/releases](https://github.com/shadowsocksr/shadowsocksr-csharp/releases)\n\n### 使用方法\n\n使用root用户登录，运行以下命令：\n\n```\nwget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\nchmod +x shadowsocks-all.sh\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\n```\n\n### 安装完成后，脚本提示如下\n\n```\nCongratulations, your_shadowsocks_version install completed!\nYour Server IP        :your_server_ip\nYour Server Port      :your_server_port\nYour Password         :your_password\nYour Encryption Method:aes-256-cfb\n\nWelcome to visit:https://teddysun.com/486.html\nEnjoy it!\n```\n\n### 卸载方法\n\n若已安装多个版本，则卸载时也需多次运行（每次卸载一种）\n\n使用root用户登录，运行以下命令：\n\n```\n./shadowsocks-all.sh uninstall\n```\n\n### 启动脚本\n\n启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。\n\nShadowsocks-Python 版：\n/etc/init.d/shadowsocks-python start | stop | restart | status\n\nShadowsocksR 版：\n/etc/init.d/shadowsocks-r start | stop | restart | status\n\nShadowsocks-Go 版：\n/etc/init.d/shadowsocks-go start | stop | restart | status\n\nShadowsocks-libev 版：\n/etc/init.d/shadowsocks-libev start | stop | restart | status\n\n### 各版本默认配置文件\n\nShadowsocks-Python 版：\n/etc/shadowsocks-python/config.json\n\nShadowsocksR 版：\n/etc/shadowsocks-r/config.json\n\nShadowsocks-Go 版：\n/etc/shadowsocks-go/config.json\n\nShadowsocks-libev 版：\n/etc/shadowsocks-libev/config.json\n\n### 更新日志\n\n2017 年 02 月 24 日：\n1、恢复： 通过 Github API 自动获取 Shadowsocks-libev 的最新 release 版本的功能（v3.0.3）。\n2017 年 02 月 13 日：\n1、升级： Shadowsocks-libev 版到版本 3.0.2；\n2、升级： Shadowsocks-go 版到版本 1.2.1（基于 [Github 最新代码](https://github.com/shadowsocks/shadowsocks-go)，用 go 1.8 编译完成的 x86 和 x86_64 二进制文件）；\n3、修复：在 Debian 7 下默认没有 libudns-dev 依赖包的问题。\n2017 年 02 月 12 日：\n1、升级： Shadowsocks-libev 版到版本 3.0.1。\n2017 年 01 月 27 日：\n1、升级： Shadowsocks-go 版到版本 1.2.1 （仅适用于 x86_64 系统）\n\n### 更多单版本 Shadowsocks 服务端一键安装脚本\n\n[ShadowsocksR 版一键安装脚本（CentOS，Debian，Ubuntu）](https://shadowsocks.be/9.html)\n[CentOS 下 Shadowsocks-libev 一键安装脚本](https://teddysun.com/357.html)\n[Debian 下 Shadowsocks-libev 一键安装脚本](https://teddysun.com/358.html)\n[Shadowsocks-go 一键安装脚本（CentOS，Debian，Ubuntu）](https://teddysun.com/392.html)\n\n**注意：**以上单版本不可与该四合一版本混用。"
		},
		{
			"post_id": 4,
			"title": "<h5>Shadowsocks Python版一键(作者：秋水逸冰)<h5>",
			"date_published": 1494653918,
			"body": "**本脚本适用环境：**\n系统支持：CentOS 6，7，Debian，Ubuntu\n内存要求：≥128M\n日期：2016 年 08 月 18 日\n\n**关于本脚本：**\n一键安装 Python 版 Shadowsocks 的最新版，同时安装了 Python 包管理工具 pip。\n**友情提示：如果你有问题，请先参考这篇《[Shadowsocks Troubleshooting](https://teddysun.com/399.html)》后再问。**\n\n* * *\n\n**默认配置：**\n服务器端口：自己设定（如不设定，默认为8989）\n客户端端口：1080\n密码：自己设定（如不设定，默认为teddysun.com）\n备注：脚本默认创建单用户配置文件，如需配置多用户，安装完毕后参照下面的教程 sample 手动修改配置文件后重启即可。\n\n**客户端下载：**\n[https://github.com/shadowsocks/shadowsocks-windows/releases](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n**使用方法：**\n使用root用户登录，运行以下命令：\n\n```\nwget --no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh\nchmod +x shadowsocks.sh\n./shadowsocks.sh 2>&1 | tee shadowsocks.log\n```\n\n**安装完成后，脚本提示如下：**\n\n```\nCongratulations, shadowsocks install completed!\nYour Server IP:your_server_ip\nYour Server Port:your_server_port\nYour Password:your_password\nYour Local IP:127.0.0.1\nYour Local Port:1080\nYour Encryption Method:aes-256-cfb\n\nWelcome to visit:https://teddysun.com/342.html\nEnjoy it!\n```\n\n**卸载方法：**\n使用root用户登录，运行以下命令：\n\n```\n./shadowsocks.sh uninstall\n```\n\n**单用户配置文件 Sample（2015 年 08 月 28 日修正）：**\n配置文件路径：/etc/shadowsocks.json\n\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":8989,\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"yourpassword\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false\n}\n```\n\n**多用户多端口配置文件 Sample（2015 年 08 月 28 日修正）：**\n配置文件路径：/etc/shadowsocks.json\n\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"port_password\":{\n         \"8989\":\"password0\",\n         \"9001\":\"password1\",\n         \"9002\":\"password2\",\n         \"9003\":\"password3\",\n         \"9004\":\"password4\"\n    },\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false\n}\n```\n\n**使用命令（2015 年 08 月 28 日修正）：**\n启动：/etc/init.d/shadowsocks start\n停止：/etc/init.d/shadowsocks stop\n重启：/etc/init.d/shadowsocks restart\n状态：/etc/init.d/shadowsocks status\n\n**更多版本 Shadowsocks 服务端一键安装脚本：**\n[ShadowsocksR 版一键安装脚本（CentOS，Debian，Ubuntu）](https://shadowsocks.be/9.html)\n[CentOS 下 Shadowsocks-libev 一键安装脚本](https://teddysun.com/357.html)\n[Debian 下 Shadowsocks-libev 一键安装脚本](https://teddysun.com/358.html)\n[Shadowsocks-go 一键安装脚本（CentOS，Debian，Ubuntu）](https://teddysun.com/392.html)\n\n**参考链接：**\n[https://teddysun.com/339.html](https://teddysun.com/339.html)\n\n**更新日志：**\n（2016 年 08 月 18 日）\n1、修正：默认安装 Github 上 master 分支最新版本（目前为 2.9.0）。\n2、注意：由于原作者已经不再更新 pip 下的源代码，故不再使用 pip 安装 Shadowsocks，而是改为下载 Github 的 master 分支来安装。如果在一段时间后，版本升级了，则先卸载，并再次执行本脚本就可以升级为最新版。\n\n（2016 年 05 月 12 日）\n1、新增在 CentOS 7 下的防火墙规则设置。\n（2015 年 08 月 28 日）\n1、修正控制脚本 /etc/init.d/shadowsocks 在 CentOS 7 无法查看 status 的问题。\n（2015 年 08 月 01 日）\n1、新增自定义服务器端口功能（如不设定，默认端口为 8989）；\n（2015 年 03 月 10 日）\n1、新增在 Debian、Ubuntu 下的一键安装；\n（2015 年 01 月 21 日）\n1、修正配置文件，与官方给出的 Sample 一致；\n2、修改启动脚本，使用官方给出的后台启动和停止命令。\n（2014 年 10 月 10 日）\n跟作者[反馈](https://github.com/clowwindy/shadowsocks/issues/195)了多用户多端口问题，作者已更新 [Wiki 页面](https://github.com/clowwindy/shadowsocks/wiki/Configure-Multiple-Users)。本教程新增多用户多端口配置文件的 sample 。\n（2014 年 09 月 24 日）\n如何配置多用户？详见：[这里](https://github.com/clowwindy/shadowsocks/wiki/Configure-Multiple-Users)\n备注：Shadowsocks 已经支持多用户，在配置文件中增加不同的端口，对应不同的密码即可。\n（2014 年 07 月 12 日）\n1、修正获取公网 IP 时的一个问题。建议不要使用共享公网 IP 的 VPS 来搭建 Shadowsocks 服务。\n（2014 年 05 月 29 日）\n1、增加 chkconfig 配置，实现 service 命令。\n2、配置文件名从 /etc/config.json 改为 /etc/shadowsocks.json（与官方的命名一致）。\n3、配置文件中新增 workers ，值默认为 1（与官方配置同步）。\n（2014 年 05 月 27 日）\n1、修正开机自启动失效的问题。\n2、优化是否后台启动成功的判断逻辑。\n（2014 年 05 月 04 日）\n1、修正对增加防火墙端口逻辑的判断bug，对于已经放行 8989 端口的情况下，则无需再次增加。\n2、修正获取服务器 IP 的判断bug，对于多 IP 的 VPS 或服务器，默认只取第一个公网 IP 写到配置文件（/etc/config.json）里。\n3、加入开机自启动。\n\n转载请注明：[秋水逸冰](https://teddysun.com/) » [Shadowsocks Python版一键安装脚本](https://teddysun.com/342.html)"
		},
		{
			"post_id": 3,
			"title": " Shadowsocks libev版一键安装脚本\n(作者：秋水逸冰) --（路由器上直接用，全家手机不用重复设置软件。）",
			"date_published": 1494604800,
			"body": "本脚本适用环境：\n系统支持：CentOS、Debian/Ubuntu\n内存要求：≥128M\n日期：2017 年 02 月 24 日\n\n**关于本脚本：**\n一键安装 libev 版的 Shadowsocks 最新版本。该版本的特点是内存占用小（600k左右），低 CPU 消耗，甚至可以安装在基于 OpenWRT 的路由器上。\n\n* * *\n\n**默认配置：**\n服务器端口：自己设定（如不设定，默认为 8989）\n客户端端口：1080\n密码：自己设定（如不设定，默认为teddysun.com）\n\n**客户端下载：**\n[https://github.com/shadowsocks/shadowsocks-windows/releases](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n**使用方法：**\n使用root用户登录，运行以下命令：\n适用于 CentOS 系统\n\n```\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.sh\nchmod +x shadowsocks-libev.sh\n./shadowsocks-libev.sh 2>&1 | tee shadowsocks-libev.log\n```\n\n适用于 Debian/Ubuntu 系统\n\n```\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev-debian.sh\nchmod +x shadowsocks-libev-debian.sh\n./shadowsocks-libev-debian.sh 2>&1 | tee shadowsocks-libev-debian.log\n```\n\n安装完成后，脚本提示如下：\n\n> Congratulations, Shadowsocks-libev install completed!\n> Your Server IP:your_server_ip\n> Your Server Port:your_server_port\n> Your Password:your_password\n> Your Local IP:127.0.0.1\n> Your Local Port:1080\n> Your Encryption Method:aes-256-cfb\n> \n> Welcome to visit:[http://teddysun.com/357.html](http://teddysun.com/357.html)\n> Enjoy it!\n\n**卸载方法：**\n使用 root 用户登录，运行以下命令：\n\n```\n./shadowsocks-libev.sh uninstall\n```\n\n安装完成后即已后台启动 Shadowsocks-libev。\n本脚本安装完成后，会自动将 Shadowsocks-libev 加入开机自启动。\n\n**使用命令：**\n启动：/etc/init.d/shadowsocks start\n停止：/etc/init.d/shadowsocks stop\n重启：/etc/init.d/shadowsocks restart\n查看状态：/etc/init.d/shadowsocks status\n\n**更新日志：**\n2017 年 02 月 24 日：\n1、恢复： 通过 Github API 自动获取 Shadowsocks-libev 的最新 release 版本的功能（v3.0.3）。\n2017 年 02 月 13 日：\n1、更新：升级版本到 3.0.2。\n2017 年 02 月 12 日：\n1、更新：升级版本到 3.0.1（请下载最新的脚本来安装）。\n2016 年 11 月 05 日：\n1、新增：判断是否已安装，若已安装，则获取版本号与最新版比较，然后可以升级覆盖安装；\n2、修正：未安装时获取最新版本号的问题。\n2016 年 09 月 23 日：\n1、修正：偶尔自动获取版本号失败的问题；\n2、新增：自动判断如果 VPS 存在 IPv6 地址，则在配置文件里添加监听 IPv6 地址。\n2016 年 09 月 17 日：\n1、重构代码，自动获取 Github 上最新版来安装，不再手动修改版本号；\n2、自动检测本机是否已经安装，若已安装则正常退出（若要安装新版，则需先卸载）；\n3、改为下载 tar.gz 包来安装，不用依赖 unzip 命令。\n2016 年 09 月 12 日：\n1、更新：升级版本到 2.5.2。\n2016 年 09 月 11 日：\n1、更新：升级版本到 2.5.1。\n2016 年 08 月 29 日：\n1、更新：升级版本到 2.5.0；\n2、修正：由于安装时文件名的更新，卸载时文件名改为一致。\n2016 年 07 月 14 日：\n1、更新：升级版本到 2.4.7。\n2016 年 07 月 05 日：\n1、修正：新增的依赖 xmlto、asciidoc；\n2、修正：由于安装时文件名的更新，卸载时文件名改为一致。\n2016 年 05 月 12 日：\n1、新增：在 CentOS 7 下的防火墙规则设置。\n2015 年 08 月 01 日：\n1、新增：自定义服务器端口功能（如不设定，默认为 8989）。\n2015 年 04 月 30 日：\n1、修改配置文件 /etc/shadowsocks-libev/config.json 同时启用 IPv4 与 IPv6 支持：\n\n{\n\"server\":[\"[::0]\",\"0.0.0.0\"],\n\"server_port\":your_server_port,\n\"local_address\":\"127.0.0.1\",\n\"local_port\":1080,\n\"password\":\"your_password\",\n\"timeout\":600,\n\"method\":\"aes-256-cfb\"\n}\n\n2、Shadowsocks libev 版不能通过修改配置文件来多端口（只能开启多进程），如果你需要多端口请安装 [Python](https://shadowsocks.be/1.html) 或 [Go](https://shadowsocks.be/3.html) 版；\n\n特别说明：\n1、已安装旧版本的 shadowsocks 需要升级的话，需下载本脚本的最新版，运行卸载命令\n\n```\n./shadowsocks-libev.sh uninstall\n```\n\n然后，下载最新版脚本即可安装最新版。\n\n_参考链接：_\n[https://github.com/shadowsocks/shadowsocks-libev](https://github.com/shadowsocks/shadowsocks-libev)\n\n标签: [shadowsocks](https://shadowsocks.be/tag/shadowsocks/)\n\n### 原WEB站链接\n\n*   上一篇: [Shadowsocks Go版一键安装脚本](https://shadowsocks.be/3.html \"Shadowsocks Go版一键安装脚本\")\n*   下一篇: [关于Shadowsocks的三言两语](https://shadowsocks.be/5.html \"关于Shadowsocks的三言两语\")"
		},
		{
			"post_id": 2,
			"title": "ShadowsocksR 篇 (作者：秋水逸冰)",
			"date_published": 1494604800,
			"body": "ShadowsocksR 一键安装脚本\n\n本脚本适用环境：\n系统支持：CentOS，Debian，Ubuntu\n内存要求：≥128M\n日期：2016 年 08 月 13 日\n\n关于本脚本：\n一键安装 ShadowsocksR 服务端。\n请下载与之配套的客户端程序来连接。\n（以下客户端只有 [Windows 客户端](https://github.com/breakwa11/shadowsocks-csharp/releases)和 [Python 版客户端](https://github.com/breakwa11/shadowsocks-rss/wiki/Python-client)可以使用 SSR 新特性，其他原版客户端只能以兼容的方式连接 SSR 服务器）\n\n* * *\n\n默认配置：\n服务器端口：自己设定（如不设定，默认为 8989）\n客户端端口：1080\n密码：自己设定（如不设定，默认为teddysun.com）\n\n**客户端下载：**\n[Windows](https://github.com/breakwa11/shadowsocks-csharp/releases) / [OS X](https://github.com/shadowsocks/shadowsocks-iOS/wiki/Shadowsocks-for-OSX-Help)\n[Linux](https://github.com/librehat/shadowsocks-qt5)\n[Android](https://github.com/shadowsocks/shadowsocks-android) / [iOS](https://github.com/shadowsocks/shadowsocks-iOS/wiki/Help)\n[OpenWRT](https://github.com/shadowsocks/openwrt-shadowsocks)\n\n**使用方法：**\n使用root用户登录，运行以下命令：\n\n```\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh\nchmod +x shadowsocksR.sh\n./shadowsocksR.sh 2>&1 | tee shadowsocksR.log\n```\n\n安装完成后，脚本提示如下：\n\n> Congratulations, ShadowsocksR install completed!\n> Server IP:your_server_ip\n> Server Port:your_server_port\n> Password:your_password\n> Local IP:127.0.0.1\n> Local Port:1080\n> Protocol:origin\n> obfs:plain\n> Encryption Method:aes-256-cfb\n> \n> Welcome to visit:[https://shadowsocks.be/9.html](https://shadowsocks.be/9.html)\n> If you want to change protocol & obfs, reference URL:\n> [https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup](https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup)\n> Enjoy it!\n\n**卸载方法：**\n使用 root 用户登录，运行以下命令：\n\n```\n./shadowsocksR.sh uninstall\n```\n\n安装完成后即已后台启动 ShadowsocksR ，运行：\n\n```\n/etc/init.d/shadowsocks status\n```\n\n可以查看 ShadowsocksR 进程是否已经启动。\n本脚本安装完成后，已将 ShadowsocksR 自动加入开机自启动。\n\n**使用命令：**\n启动：/etc/init.d/shadowsocks start\n停止：/etc/init.d/shadowsocks stop\n重启：/etc/init.d/shadowsocks restart\n状态：/etc/init.d/shadowsocks status\n\n配置文件路径：/etc/shadowsocks.json\n日志文件路径：/var/log/shadowsocks.log\n代码安装目录：/usr/local/shadowsocks\n\n**多用户配置 sample：**\n\n```\n{\n\"server\":\"0.0.0.0\",\n\"server_ipv6\": \"[::]\",\n\"local_address\":\"127.0.0.1\",\n\"local_port\":1080,\n\"port_password\":{\n    \"8989\":\"password1\",\n    \"8990\":\"password2\"，\n    \"8991\":\"password3\"\n},\n\"timeout\":300,\n\"method\":\"aes-256-cfb\",\n\"protocol\": \"origin\",\n\"protocol_param\": \"\",\n\"obfs\": \"plain\",\n\"obfs_param\": \"\",\n\"redirect\": \"\",\n\"dns_ipv6\": false,\n\"fast_open\": false,\n\"workers\": 1\n}\n```\n\n如果你想修改配置文件，请参考：\n[https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup](https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup)\n\n**更新日志：**\n2016 年 08 月 13 日：\n1、新增多用户配置 sample。注意：如果你新增了端口，也要将该端口从防火墙（iptables 或 firewalld）中打开。\n\n2016 年 05 月 12 日：\n1、新增在 CentOS 下的防火墙规则设置。\n\n**_参考链接：_**\n[https://github.com/breakwa11/shadowsocks-rss](https://github.com/breakwa11/shadowsocks-rss)\n\n标签: [shadowsocks](https://shadowsocks.be/tag/shadowsocks/)\n\n### 原WEB站链接。\n\n*   上一篇: [Shadowsocks如何设置多IP](https://shadowsocks.be/7.html \"Shadowsocks如何设置多IP\")\n*   下一篇: [使用haproxy中转Shadowsocks流量一键安装脚本](https://shadowsocks.be/10.html \"使用haproxy中转Shadowsocks流量一键安装脚本\")"
		},
		{
			"post_id": 1,
			"title": "Shadowsocks-go 篇（作者：秋水逸冰）",
			"date_published": 1494633600,
			"body": "<span style=\"color: rgb(0, 0, 0); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(247, 247, 247); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;\">Shadowsocks-go一键安装脚本</span>\n\n<span style=\"font-size: 14px;\">**本脚本适用环境：**</span>\n<span style=\"font-size: 14px;\">系统支持：CentOS，Debian，Ubuntu</span>\n<span style=\"font-size: 14px;\">内存要求：≥64M</span>\n<span style=\"font-size: 14px; color: red;\">日期：2017 年 02 月 18 日</span>\n\n<span style=\"font-size: 14px;\">**关于本脚本：**</span>\n<span style=\"font-size: 14px;\">一键安装 Go 版的 shadowsocks 最新版本 1.2.1。与 Python 版不同的是，其客户端程序能使用多个服务端配置，本脚本安装的是服务端程序。</span>\n<span style=\"font-size: 14px;\">**<span style=\"color: red;\">友情提示：</span>如果你有问题，请先参考这篇《[Shadowsocks Troubleshooting](https://teddysun.com/399.html)》后再问。**</span>\n\n* * *\n\n<span style=\"font-size: 14px;\">**默认配置：**</span>\n<span style=\"font-size: 14px;\">服务器端口：自己设定（如不设定，默认为 8989）</span>\n<span style=\"font-size: 14px;\">客户端端口：1080</span>\n<span style=\"font-size: 14px;\">密码：自己设定（如不设定，默认为teddysun.com）</span>\n\n<span style=\"font-size: 14px;\">**客户端下载：**</span>\n<span style=\"font-size: 14px;\">[https://github.com/shadowsocks/shadowsocks-windows/releases](https://github.com/shadowsocks/shadowsocks-windows/releases)</span>\n\n<span style=\"font-size: 14px;\">**使用方法：**</span>\n<span style=\"font-size: 14px;\">使用root用户登录，运行以下命令：</span>\n\n```\nwget --no-check-certificate -O shadowsocks-go.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh\nchmod +x shadowsocks-go.sh\n./shadowsocks-go.sh 2>&1 | tee shadowsocks-go.log\n```\n\n<span style=\"font-size: 14px; color: blue;\">安装完成后，脚本提示如下：</span>\n\n```\nCongratulations, Shadowsocks-go install completed!\nYour Server IP:your_server_ip\nYour Server Port:your_server_port\nYour Password:your_password\nYour Local Port:1080\nYour Encryption Method:aes-256-cfb\n\nWelcome to visit:https://teddysun.com/392.html\nEnjoy it!\n```\n\n<span style=\"font-size: 14px;\">**卸载方法：**</span>\n<span style=\"font-size: 14px;\">使用 root 用户登录，运行以下命令：</span>\n\n```\n./shadowsocks-go.sh uninstall\n```\n\n<span style=\"font-size: 14px;\">**其他事项：**</span>\n<span style=\"font-size: 14px;\">客户端配置的参考链接：[https://teddysun.com/339.html](https://teddysun.com/339.html)</span>\n\n<span style=\"font-size: 14px;\">安装完成后即已后台启动 Shadowsocks-go ，运行：</span>\n\n```\n/etc/init.d/shadowsocks status\n```\n\n<span style=\"font-size: 14px;\">可以查看 Shadowsocks-go 进程是否已经启动。</span>\n<span style=\"font-size: 14px;\">本脚本安装完成后，已将 shadowsocks-go 加入开机自启动。</span>\n\n<span style=\"font-size: 14px;\">**使用命令：**</span>\n<span style=\"font-size: 14px;\">启动：/etc/init.d/shadowsocks start</span>\n<span style=\"font-size: 14px;\">停止：/etc/init.d/shadowsocks stop</span>\n<span style=\"font-size: 14px;\">重启：/etc/init.d/shadowsocks restart</span>\n<span style=\"font-size: 14px;\">状态：/etc/init.d/shadowsocks status</span>\n\n<span style=\"font-size: 14px; color: red;\">多用户多端口配置文件示例：</span>\n<span style=\"font-size: 14px;\">配置文件路径：/etc/shadowsocks/config.json</span>\n\n```\n{\n    \"port_password\":{\n         \"8989\":\"password0\",\n         \"9001\":\"password1\",\n         \"9002\":\"password2\",\n         \"9003\":\"password3\",\n         \"9004\":\"password4\"\n    },\n    \"method\":\"aes-256-cfb\",\n    \"timeout\":600\n}\n```\n\n<span style=\"font-size: 14px;\">官方版本的 sample ，详见[这里](https://github.com/shadowsocks/shadowsocks-go/blob/master/sample-config/server-multi-port.json)。</span>\n\n<span style=\"font-size: 14px;\">**更多版本 Shadowsocks 服务端一键安装脚本：**</span>\n<span style=\"font-size: 14px;\">[ShadowsocksR 版一键安装脚本（CentOS，Debian，Ubuntu）](https://shadowsocks.be/9.html)</span>\n<span style=\"font-size: 14px;\">[Shadowsocks Python 版一键安装脚本（CentOS，Debian，Ubuntu）](https://teddysun.com/342.html)</span>\n<span style=\"font-size: 14px;\">[CentOS 下 shadowsocks-libev 一键安装脚本](https://teddysun.com/357.html)</span>\n<span style=\"font-size: 14px;\">[Debian 下 shadowsocks-libev 一键安装脚本](https://teddysun.com/358.html)</span>"
		}
	]
}