{
	"title": "带emoji输入支持的ZeroBlog",
	"description": "My ZeroBlog.",
	"links": "- [Source code](https://github.com/HelloZeroNet)",
	"next_post_id": 5,
	"demo": false,
	"modified": 1491442472,
	"post": [
		{
			"post_id": 3,
			"title": "中文站点开发教程",
			"date_published": 1483667463.041,
			"body": "First of all，Thanks for @Nofish [ZeroNet site development tutorial](/Blog.ZeroNetwork.bit/?Post:46)\n\n介于中文站点开发教程还是too young too simple，我准备也来一个了。\n\n大多数新手开发者都是windows环境，因此主要介绍windows下的配置，用Linux的跟着官方教程走就好:wink:\n\n因为windows下ZeroBundle自带的coffee script编译器有BUG，经常会出现各种无法编译或者出错，为了不被这些破事折腾死自己，在这里我直接推荐windows下的开发也上nodejs原版编译器。:smiley::smiley::smiley:\n\n在本教程中，我们将用少于100行的代码中构建一个完全P2P、无需后端服务器的聊天站点。\n\n* * *\n\n## 1.​​​​​​​环境搭建\n\n1.  首先，到[nodejs官网](https://nodejs.org/en/)下载nodejs最新版本（现在最新V7.0.4）并安装，安装一路下一步确认即可。\n2.  打开命令行，如果不知道怎么快捷打开可以到开始菜单->附件->命令提示符，点击运行，之后在弹出的窗口内贴入以下命令：`npm install -g coffee-script`并回车，等待运行完毕，重新出现C:\\xxxxx>这样的文字即可。\n3.  到[这里](https://www.jetbrains.com/webstorm/)下载WebStorm并安装，安装过程一路下一步。安装好后看不惯英文界面的可以自行到[这里](http://pan.baidu.com/s/1gfjxRUF)下载汉化包，并把压缩包里lib目录下的resources_zh.jar文件放到WebStorm的lib目录下即可。(WebStorm默认安装目录为C:\\Program Files (x86)\\JetBrains下的WebStorm+版本号目录)\n4.  右键单击[这里](data/files/DebugMedia.py)另存为DebugMedia.py，覆盖自己的ZeroBundle\\ZeroNet\\src\\Debug\\DebugMedia.py，以解决中文字符在win下coffee script编译器编译失败的问题。\n5.  右键单击[这里](data/files/debug.cmd)另存为debug.cmd，保存到ZeroBundle目录下，退出ZeroNet，然后双击刚刚放到ZeroBundle目录下的debug.cmd，启动DEBUG模式的ZeroNet。\n\n现在，开发环境就已经配置好了:smiley:让我们一起来建立一个属于自己的新站点吧:smile:\n\n## 创建新网站\n\n*   点击_ZeroHello_左上角的⋮>“新建空站点”菜单项。您将被**重定向**到一个属于你的全新的空白网站，只有你对这个网站具有完整控制权哟~\n*   将**右上方的“0”按钮**拖动到左侧以显示侧边栏\n\n*   鼠标滚轮滑动到侧边栏底部，将_**站点标题**更改为“**我的ZeroChat教程**”，然后点击“**保存网站设置**”。\n\n### 聊天网站的HTML代码\n\n*   使用WebStorm打开“data/ [yoursiteaddress] /index.html”文件。\n*   编辑 **index.html** ：\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>ZeroChat</title>\n</head>\n<body>\n<input type=\"text\" id=\"message\"><input type=\"button\" id=\"send\" value=\"发送\"/>\n<ul id=\"messages\">\n    <li>欢迎来到 ZeroChat！</li>\n</ul>\n</body>\n</html>\n```\n\n## 第一个ZeroFrame API调用\n\n**Note：要禁用浏览器的缓存，请保持JavaScript控制台打开并启用禁用缓存（F12）**\n\n[ZeroFrame API](/docs.ysc3839.bit/site_development/zeroframe_api_reference/)允许您查询服务器/站点/用户信息，加载或修改文件。\n\n创建 **js** 和 **js/lib** 目录，然后下载并将[ZeroFrame.coffee](data/files/ZeroFrame.coffee)文件复制到 **js/lib** ，这有助于使用[ZeroFrame API](/docs.ysc3839.bit/site_development/zeroframe_api_reference/)\n\n*   创建包含以下内容的 **js / ZeroChat.coffee** 文件：\n\n```coffeescript\nclass ZeroChat extends ZeroFrame\n    init: ->\n        @addLine \"初始化成功\"\n\n    addLine: (line) ->\n        messages = document.getElementById(\"messages\")\n        messages.innerHTML = \"<li>#{line}</li>\"+messages.innerHTML\n\n    # Wrapper websocket 链接建立完成\n    onOpenWebsocket: (e) =>\n        @cmd \"serverInfo\", {}, (server_info) =>\n            @addLine \"服务器信息: <pre>\" + JSON.stringify(server_info,null,2) + \"</pre>\"\n        @cmd \"siteInfo\", {}, (site_info) =>\n            @addLine \"站点信息: <pre>\" + JSON.stringify(site_info,null,2) + \"</pre>\"\n\nwindow.Page = new ZeroChat()\n```\n\n此代码将在websocket连接准备就绪后查询有关网站和服务器（您的ZeroNet客户端）的所有信息，然后将结果作为json格式的文本添加到消息html节点。\n\n*   在index.html文件中添加`<script type =\"text/javascript\" src =\"js / all.js\" async> </ script>`到`</body>`之前，加入这行以让DEBUG模式下的ZeroNet自动编译和合并所有在 **js** 目录下的.coffee文件到单个all.js文件。\n\n*   如果一切顺利，它应该看起来像这样：\n\n![tutorial](data/img/tutorial-1.png)\n您应该具有以下目录结构：\n\n```\ndata / [您的网站地址]\n├─js /\n│├─lib /\n││└─ZeroFrame.coffee\n│├─ZeroChat.coffee\n│└─all.js\n├──index.html\n└──content.json\n```\n\n*   在网站上完成修改后，您必须到侧边栏最底下点击“签名”、“发布”按钮，这样他人才能在浏览您的站点时看到您的更改。\n\n## 进一步的功能实现\n\n我们将其扩展为使用SQLite数据库接受，存储和查询消息，并使用ZeroID来标识用户名。\n\n## 添加ZeroID用户选择器\n\n添加一个新的链接到 **index.html** ，这将允许我们选择我们要使用的ZeroID身份：\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>ZeroChat</title>\n</head>\n<body>\n<a href=\"#Select+user\" id=\"select_user\" onclick='return Page.selectUser()'>选择用户</a>:\n<input type=\"text\" id=\"message\"><input type=\"button\" id=\"send\" value=\"发送\"/>\n<ul id=\"messages\">\n    <li>欢迎来到 ZeroChat！</li>\n</ul>\n<script type=\"text/javascript\" src=\"js/all.js\" async></script>\n</body>\n</html>\n```\n\n要使其工作添加一个函数到**js/ZeroChat.coffee**显示证书选择对话框给用户：\n\n```coffeescript\n    selectUser: =>\n        Page.cmd \"certSelect\", [[\"zeroid.bit\"]]\n        return false\n```\n\n作为参数，您应该包括接受的证书提供程序名称。 （在这里使用zeroid.bit）\n\n如果您进行刷新并单击“选择用户”，则应该会看到对话框，但在选择zeroid证书时没有任何更改。\n\n## 显示用户当前的ZeroID帐户\n\n当更改影响网站（新内容到达，用户更改等）的内容时，websocket事件将被推送到您的浏览器。\n（格式与查询[setSiteInfo](/docs.ysc3839.bit/site_development/zeroframe_api_reference/#siteinfo)命令相同）\n\n要处理此事件，请添加此函数：\n\n```coffeescript\n    route: (cmd, message) ->\n        if cmd == \"setSiteInfo\"\n            if message.params.cert_user_id\n                document.getElementById(\"select_user\").innerHTML = message.params.cert_user_id\n            else\n                document.getElementById(\"select_user\").innerHTML = \"选择用户\"\n            @site_info = message.params ＃ 保存网站信息数据以允许稍后访问\n```\n\n此代码将实时更新用户当前选择的用户名。\n\n要在页面加载时更新用户名，请修改**onOpenWebsocket** 函数：\n\n```coffeescript\n    onOpenWebsocket: (e) =>\n        @cmd \"serverInfo\", {}, (server_info) =>\n            @addLine \"serverInfo response: <pre>\" + JSON.stringify(server_info,null,2) + \"</pre>\"\n        @cmd \"siteInfo\", {}, (site_info) =>\n            @addLine \"siteInfo response: <pre>\" + JSON.stringify(site_info,null,2) + \"</pre>\"\n            ＃ 更新当前选择的用户名\n            if site_info.cert_user_id\n                document.getElementById(\"select_user\").innerHTML = site_info.cert_user_id\n            @site_info = site_info  ＃ 保存网站信息数据以允许以后访问\n```\n\n## 设置用户内容权限\n\n要允许用户在我们的网站上发布，我们必须定义第三方内容的规则。\n\n创建一个**data/users** 目录，并在其中创建一个 **data/users/content.json** 文件：\n\n```json\n{\n  \"files\": {},\n  \"ignore\": \".*\",\n  \"modified\": 0.0,\n  \"signs\": {},\n  \"user_contents\": {\n    \"cert_signers\": {\n      \"zeroid.bit\": [ \"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\" ]\n    },\n    \"permission_rules\": {\n      \".*\": {\n        \"files_allowed\": \"data.json\",\n        \"max_size\": 10000\n      },\n      \"bitmsg/.*@zeroid.bit\": { \"max_size\": 15000 }\n    },\n    \"permissions\": {\n      \"bad@zeroid.bit\": false,\n      \"nofish@zeroid.bit\": { \"max_size\": 100000 }\n    }\n  }\n}\n```\n\n*   `\"ignore”：\".*\"`：当网站所有者签署这个content.json时，没有添加任何文件，它们将被用户签名。\n*   `cert_signers`：我们接受* @zeroid.bit用户，他们必须带有一个证书，必须由`1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz`地址签名。\n*   `permission_rules`：我们给每个用户10kbytes的空间（如果是使用bitmessage注册的用户则给15kb）\n*   `permissions`：每用户权限：禁止用户 bad@zeroid.bit 登录以及允许用户nofish@zeroid.bit有100k存储空间。 （ ZeroNet 的开发者 : ) ）\n\n在我们保存此文件后，我们必须修改我们**站点根目录下的 content.json 文件** ，以便忽略此目录中的文件，并加载包含规则的文件：\n\n```json\n  ...\n  \"ignore\": \"data/.*\",\n  \"includes\": {\n    \"data/users/content.json\": {\n      \"signers\": [],\n      \"signers_required\": 1\n    }\n  },\n  ...\n```\n\n> **注意：**您可以通过向“签名者”列表添加地址，向其他用户授予审核权限。\n\n*   现在，通过按下网页侧边栏的**“签名”**按钮**签名content.json** 来保存修改。\n*   然后保持侧边栏打开，将“content.json”更改为“**data/users/content.json**”，然后再次按“**签名**”按钮！\n\n## 添加消息到我们的json文件\n\n当点击**发送**按钮时，将消息添加到**data.json**文件，签名，然后发布到其他用户。\n\n*   首先添加`onclick =\"return Page.sendMessage()\"`事件监听器来发送输入按钮html标签。\n\n*   然后在 **ZeroChat.coffee** 中创建一个新函数：\n\n```coffeescript\n\n    sendMessage: =>\n        if not Page.site_info.cert_user_id  # 未选择帐户，显示错误\n            Page.cmd \"wrapperNotification\", [\"info\", \"请选择您的账户\"]\n            return false\n\n        inner_path = \"data/users/#{@site_info.auth_address}/data.json\"  # 这是我们的数据文件\n\n        # 加载当前的消息\n        @cmd \"fileGet\", {\"inner_path\": inner_path, \"required\": false}, (data) =>\n            if data  # Parse if already exits\n                data = JSON.parse(data)\n            else  # Not exits yet, use default data\n                data = { \"message\": [] }\n\n            # 将消息添加到数据\n            data.message.push({\n                \"body\": document.getElementById(\"message\").value,\n                \"date_added\": (+new Date)\n            })\n\n            # 将数据数组编码为utf8 json文本\n            json_raw = unescape(encodeURIComponent(JSON.stringify(data, undefined, '\\t')))\n\n            # 将文件写入磁盘\n            @cmd \"fileWrite\", [inner_path, btoa(json_raw)], (res) =>\n                if res == \"ok\"\n                    # 将文件发布给其他用户\n                    @cmd \"sitePublish\", {\"inner_path\": inner_path}, (res) =>\n                        document.getElementById(\"message\").value = \"\"  # 将输入框清空\n                else\n                    @cmd \"wrapperNotification\", [\"error\", \"文件写入错误: #{res}\"]\n\n        return false\n```\n\n*   完成后在消息输入框内写点什么，然后点击发送按钮，您应该在data / users / [your auth address] /data.json 文件中看到该消息。\n\n该教程未翻译完，有空再更。"
		},
		{
			"post_id": 2,
			"title": "New blog post",
			"date_published": 1483443637.104,
			"body": "​​​​​​​:kissing_closed_eyes::stuck_out_tongue_closed_eyes::stuck_out_tongue::nerd_face::hugging_face::no_mouth::kissing::heart_eyes::yum::upside_down_face::blush::innocent::sweat_smile::smiley::joy::grimacing::grinning::grin::smile::laughing::wink::slightly_smiling_face::relaxed::relieved::kissing_heart::kissing_smiling_eyes::smirk::sunglasses::money_mouth_face::stuck_out_tongue_winking_eye:​​​​​​​:flag-ch::clock930::arrow_up::accept::door::railway_track::mountain::oncoming_police_car::sun_with_face::waning_gibbous_moon::frog::construction_worker::sleuth_or_spy::angel::bride_with_veil::runner::boy::older_man::man_with_gua_pi_mao::speaking_head_in_silhouette::bust_in_silhouette::eye::ear::lips::point_up::point_down::the_horns::writing_hand::muscle::hand::v::facepunch::+1::heart_eyes_cat::kissing_cat::clap::smile_cat::robot_face::ghost::japanese_goblin::imp::sob::astonished::mask::zzz::sweat::disappointed_relieved::anguished::hushed::fearful::pensive::slightly_frowning_face::persevere::tired_face::triumph::rage::worried::flushed::face_with_rolling_eyes::expressionless::neutral_face::unamused::thinking_face::disappointed::angry::open_mouth::weary::confounded::white_frowning_face::confused::scream::cold_sweat::frowning::cry::sleepy::face_with_head_bandage::hankey::sleeping::face_with_thermometer::zipper_mouth_face::dizzy_face::smiling_imp::japanese_ogre::skull::alien::crying_cat_face::smiley_cat::wave::pouting_cat::raised_hands::scream_cat::smirk_cat::joy_cat::-1::fist::ok_hand::point_right::open_hands::pray::middle_finger::spock-hand::raised_hand_with_fingers_splayed::point_left::point_up_2::nail_care::tongue::nose::man::eyes::busts_in_silhouette::woman::man_with_turban::person_with_blond_hair::older_woman::girl::baby::walking::princess::cop::santa::guardsman::beetle::last_quarter_moon_with_face::baby_chick::beers::monkey_face::police_car::sunrise::motorway::bellhop_bell::white_flower::leftwards_arrow_with_hook::flag-sb::black_medium_small_square::flag-se::black_joker:"
		},
		{
			"post_id": 1,
			"title": "Congratulations!",
			"date_published": 1433033779.604,
			"body": ":smiley: :smiley: :smiley: :smiley: :smiley:"
		}
	]
}