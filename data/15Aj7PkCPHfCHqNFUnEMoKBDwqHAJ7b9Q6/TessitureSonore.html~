<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
<head>
<!-- 2020-12-28 lun 19:48 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=true" />
<title>TessitureSonore</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="SchiZo SchiZo" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<link rel="stylesheet" type="text/css" href="https://www.inventati.org/noviglob/org/org.css" />
<link rel="stylesheet" type="text/css" href="https://www.inventati.org/noviglob/org/org.css" />

<script type="text/javascript" src="org-info.js">
/**
 *
 * @source: org-info.js
 *
 * @licstart  The following is the entire license notice for the
 *  JavaScript code in org-info.js.
 *
 * Copyright (C) 2012-2020 Free Software Foundation, Inc.
 *
 *
 * The JavaScript code in this tag is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 *
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 *
 * @licend  The above is the entire license notice
 * for the JavaScript code in org-info.js.
 *
 */
</script>

<script type="text/javascript">

/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/

<!--/*--><![CDATA[/*><!--*/
org_html_manager.set("TOC_DEPTH", "1");
org_html_manager.set("LINK_HOME", "");
org_html_manager.set("LINK_UP", "");
org_html_manager.set("LOCAL_TOC", "1");
org_html_manager.set("VIEW_BUTTONS", "0");
org_html_manager.set("MOUSE_HINT", "underline");
org_html_manager.set("FIXED_TOC", "0");
org_html_manager.set("TOC", "0");
org_html_manager.set("VIEW", "showall");
org_html_manager.setup();  // activate after the parameters are set
/*]]>*///-->
</script>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">TessitureSonore
<br />
<span class="subtitle">appunti di Rumorismo Tessile</span>
</h1>
<div id="table-of-contents">
<h2>Indice</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org705300b">Live Coding</a></li>
<li><a href="#org81e1bc3">Explore the Sound of Islands That Never Existed</a></li>
<li><a href="#orgc3c4ad4"><span class="done DONE">DONE</span> Boodler</a></li>
<li><a href="#org68b6229">Musique d'ameublement</a></li>
<li><a href="#orgf766957">David Cope</a></li>
</ul>
</div>
</div>
<div class="org-center">
<p>

</p>

<p>
<b>“Non torneremo alla normalità, perché la normalità era il problema”.</b>
</p>
</div>

<div id="menus">
    <ul id="menu_css_orizzontale"><li class="homenu"><a class="home" title="home" href="./index.html">Home</a></li>
      <!-- li><a class="menu" href="./hubzilla.html">Canale Schizo HubZilla</a></li -->
      <!-- li><a class="menu" href="./tua.html">Tessitura Urbana d'Assalto</a></li>
      <li><a class="menu" href="./TelaioDAmare.html">TelaioDAmare</a></li>
      <li><a class="menu" href="./SculturEffimere.html">SculturEffimere</a></li -->
      <li><a class="menu" href="./MeditazioneTessile.html">MeditazioneTessile</a></li>
      <!-- li><a class="menu" href="./Schize.html">Schize (lavori)</a></li -->
      <li><a class="menu" href="./Lavori.html">Lavori</a></li>
      <!-- li><a class="menu" href="./casa33.html">Casa33</a></li -->
      <!-- li><a class="menu" href="./noteZ.html">annoTAZioni</a></li -->
      <!-- li><a class="menu" href="./Telegraph.html">pubblicazioni su Telegraph (lavori)</a></li -->
      <!-- li><a class="menu" href="./immagini/miniature/miniature.html">Scatti</a></li -->
      <!-- li><a class="menu" href="./articoli.html">articoli</a></li -->
      <!-- li><a class="menu" href="http://127.0.0.1:43110/1KBU33HRPExBsFa1F7osPDBzKhsiTjYoDo/">SchiZero (0 blog)</a></li -->
    </ul>
</div>

<div id="outline-container-org705300b" class="outline-2">
<h2 id="org705300b">Live Coding</h2>
<div class="outline-text-2" id="text-org705300b">
</div>

<div id="outline-container-org1459047" class="outline-3">
<h3 id="org1459047">Cos’è il live coding? Una breve introduzione</h3>
<div class="outline-text-3" id="text-org1459047">
<blockquote>
<p>
&#x2026; il live coding non è un genere musicale. Viene impiegato principalmente in musica, ma non può essere categorizzato come genere, in quanto per mezzo di esso possiamo ottenere tutta una serie di diversi generi e pratiche, dalla musica d’avanguardia sperimentale al noise, per finire alla dance music. Il live coding, infatti, può essere utilizzato in una sala da concerto, in discoteca o in un club di musica dal vivo. Nel caso della performance musicale, il musicista scrive dal vivo il codice sorgente in forma di algoritmi, spesso visibile anche al pubblico grazie all’uso di proiezioni video. Quando l’algoritmo è completo, il performer esegue il codice che viene decodificato dalla macchina e produce un risultato sonoro. La performance musicale, quindi, consiste in un dialogo continuo tra uomo e macchina, in una sorta di rapporto direttore/esecutore in cui il primo non ha mai un pieno controllo sul secondo. Inoltre, il codice sorgente viene continuamente modificato dal musicista per variare i risultati musicali. Il live coder, di conseguenza, per il fatto di essere sul palco di fronte a un pubblico – che spesso può anche leggere ciò che sta scrivendo – è il vero e proprio artefice del prodotto finale&#x2026;
</p>

<p>
&#x2026; un&#x2026; assaggio di cosa è possibile ottenere attraverso il live coding è l’attività di Kate Sicchio, una coreografa statunitense che utilizza questa tecnica per programmare dal vivo alcune periferiche indossabili dai danzatori per far in modo che chi le indossa abbia delle istruzioni in tempo reale su come svolgere una coreografia.
</p>

<p>
Forse vale la pena menzionare un altro progetto partecipato da Alex McLean aka Yaxu, in cui il codice va a formare dei pattern visivi che vengono poi impiegati per la creazione di tessuti. Il progetto si chiama Penelope e raccoglie diversi tipi di ricerca sull’arte tessile. Maggiori informazioni sono disponibili sul sito del progetto: <a href="https://penelope.hypotheses.org/">https://penelope.hypotheses.org/</a>
</p>
</blockquote>
<p>
sulla pagina <a href="https://www.musicaelettronica.it/cose-il-live-coding-breve-introduzione/">https://www.musicaelettronica.it/cose-il-live-coding-breve-introduzione/</a> sono presenti alcuni collegamenti della galassia del live coding, rappresentata dalla sigla <a href="https://toplap.org/">TOPLAP</a>, acronimo che sta per Temporary Organisation for the Promotion of Live Algorithmic Programming.
</p>
</div>
</div>

<div id="outline-container-org7336c64" class="outline-3">
<h3 id="org7336c64">Overtone</h3>
<div class="outline-text-3" id="text-org7336c64">
<p>
sono finalmente riuscito a padroneggiare <a href="http://overtone.github.io/">Overtone</a>
</p>

<p class="verse">
Overtone has been designed and engineered for live coding&#x2026;<br />
</p>

<p class="verse">
Overtone is an audio programming library useing the Supercollider syntheizer engine via the expressive programming language Clojure. It combines the power of Supercollider and Clojure enabeling many artistic endeavors&#x2026;<br />
</p>
</div>

<div id="outline-container-org69c037b" class="outline-4">
<h4 id="org69c037b">ho impostato il tutto per essere gestito da Emacs</h4>
<div class="outline-text-4" id="text-org69c037b">
<p>
pur non installando <i>Emacs Live</i> che ho trovato piuttosto ostico nella sua configurazione (con tutti i comandi troppo personalizzati e quindi diverso dal comportamento standard)
</p>
</div>

<ul class="org-ul">
<li><a id="org696e595"></a>la procedura base per Emacs<br />
<div class="outline-text-5" id="text-org696e595">
<p>
dopo aver generato il file project.clj si crea un file clj, lo si intesta con le librerie da utilizzare e, con lui aperto, si lancia Alt-x <i>cider-jack-in</i> (<a href="https://github.com/clojure-emacs/cider">This will start an nREPL server with all the project dependencies loaded in and CIDER will automatically connect to it.</a>)
</p>

<p>
all'avvio del server si gli si impartisce il comando <i>(use 'overtone.live)</i>
</p>

<p>
al che si può caricare il clj (come buffer o come altro file) ed eseguire il codice
</p>
</div>
</li>
</ul>
</div>

<div id="outline-container-orgd84dbcf" class="outline-4">
<h4 id="orgd84dbcf">ho utilizzato <i>JACK Audio Connection Kit</i> tramite <i>QjackCtl</i></h4>
<div class="outline-text-4" id="text-orgd84dbcf">
<p>
e, attraverso questo, sono riuscito a dirigere l'audio verso <i>ffmpeg</i> con uscita verso <i>icecast</i> (quindi a rendere tutto trasmissibile via radio!)
</p>
</div>
</div>

<div id="outline-container-org2a72abd" class="outline-4">
<h4 id="org2a72abd">&#x2026; e mi sono sbizzarrito</h4>
<div class="outline-text-4" id="text-org2a72abd">
<p>
a manipolare le prime righe di codice presenti negli <a href="https://github.com/overtone/overtone/tree/master/src/overtone/examples/getting_started">esempi di programmazione</a>
</p>
</div>
</div>

<div id="outline-container-org0a26cf5" class="outline-4">
<h4 id="org0a26cf5">0vertone</h4>
<div class="outline-text-4" id="text-org0a26cf5">
<p>
su ZeroNet è attivo un <a href="http://127.0.0.1:43110/1KFZQXgPiS3WouWnSYXNMXwt3pm9zyHRXU/index.html">Riproduttore delle SperimentAzioni Phoniche in Overtone</a> descritte qui di seguito
</p>

<p>
<b>+Kaos</b>
</p>
</div>

<ul class="org-ul">
<li><a id="org272b3f1"></a>Fase 1 e Fase 2<br />
<div class="outline-text-5" id="text-org272b3f1">
<p>
durante l'isolamento da contagio ho sperimentato con campioni realizzati da me, tratti da film famosi; ho registrato due sessioni, una per Fase:
</p>

<ul class="org-ul">
<li><p>
<b>Fase 1:</b> Alberto Sordi da "<i>Accadde al penitenziario</i>" - 1955
</p>

<p>
(in chiaro, attraverso proxy) <a href="https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/solo.mp3">https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/solo.mp3</a> 
</p>

<p>
(in locale) <a href="http://schizo.homepc.it:8080/solo.mp3">http://schizo.homepc.it:8080/solo.mp3</a>
</p>

<p>
(ZeroNet - IFS) <a href="http://127.0.0.1:43110/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/solo.mp3">http://127.0.0.1:43110/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/solo.mp3</a>
</p></li>

<li><p>
<b>Fase 2:</b> Olga sul prato da "<i>Ecce Bombo</i>" - 1978
</p>

<p>
(in chiaro, attraverso proxy) <a href="https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/giro-vedo_gente.mp3">https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/giro-vedo_gente.mp3</a>
</p>

<p>
(in locale) <a href="http://schizo.homepc.it:8080/giro-vedo_gente.mp3">http://schizo.homepc.it:8080/giro-vedo_gente.mp3</a>
</p>

<p>
(ZeroNet - IFS) <a href="http://127.0.0.1:43110/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/giro-vedo_gente.mp3">http://127.0.0.1:43110/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/giro-vedo_gente.mp3</a>
</p></li>
</ul>
</div>
</li>

<li><a id="orgfdffa02"></a>Zona Rossa Milano<br />
<div class="outline-text-5" id="text-orgfdffa02">
<p>
durante la <i>Seconda Ondata</i> sono proseguite le sperimentazioni con <i>Overtone</i>
</p>

<ul class="org-ul">
<li><p>
<b>Deriva Granulare 301120</b>
</p>

<p>
durante una deriva urbana, mi sono piazzato all'incrocio tra <i>c.so di Porta Romana</i> e <i>via Santa Sofia</i> e ho iniziato a registrare il traffico: ho creato tre file che poi ho utilizzato con <i>GrainStorm</i> in una <b>Composizione Granulare</b> sul luogo, con il sottofondo del traffico stesso.
</p>

<p>
Con le registrazioni, attraverso <i>Overtone</i>, ne ho fatto una composizione; questa:
</p>

<p>
(in chiaro, attraverso proxy) <a href="https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/deriva_granulare.mp3">https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/deriva_granulare.mp3</a>
</p>

<p>
(in locale) <a href="http://schizo.homepc.it:8080/deriva_granulare.mp3">http://schizo.homepc.it:8080/deriva_granulare.mp3</a>
</p>

<p>
(ZeroNet - IFS) <a href="http://127.0.0.1:43110/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/index.html?view:item+id:15f1_153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k_item_23+type:audio">http://127.0.0.1:43110/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/index.html?view:item+id:15f1_153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k_item_23+type:audio</a>
</p></li>

<li><p>
<b>Messa in Overtone</b>
</p>

<p>
registrazione di una sessione dal vivo in <i>Overtone</i> 
</p>

<p>
durante la quale è stata utilizzata la registrazione della <b>Messa in Latino</b> @ <i>Basilica di Sant'Ambrogio</i> - Milano <span class="timestamp-wrapper"><span class="timestamp">&lt;2020-12-13 dom&gt; </span></span> 
</p>

<p>
(in chiaro, attraverso proxy) <a href="https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/Messa_in_Overtone.ogg">https://zeronet.now.im/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/merged-CDN/15fDN4wasXuyS8krtKvrxEVmWWLz6Qh518/data/users/153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k/Messa_in_Overtone.ogg</a>
</p>

<p>
(in locale) <a href="http://schizo.homepc.it:8080/Messa_in_Overtone.ogg">http://schizo.homepc.it:8080/Messa_in_Overtone.ogg</a>
</p>

<p>
(ZeroNet - IFS) <a href="http://127.0.0.1:43110/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/index.html?view:item+id:15f2_153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k_item_29+type:audio">http://127.0.0.1:43110/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/index.html?view:item+id:15f2_153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k_item_29+type:audio</a>
</p></li>
</ul>
</div>
</li>
</ul>
</div>
</div>

<div id="outline-container-orgba9e8aa" class="outline-3">
<h3 id="orgba9e8aa">Csound</h3>
<div class="outline-text-3" id="text-orgba9e8aa">
<p>
Csound is a sound and music computing system which was originally developed by Barry Vercoe in 1985 at MIT Media Lab. Since the 90s, it has been developed by a group of core developers. A wider community of volunteers contribute examples, documentation, articles, and takes part in the Csound development with bug reports, feature requests and discussions with the core development team.
</p>

<p>
Although Csound has a strong tradition as a tool for composing electro-acoustic pieces, it is used by composers and musicians for any kind of music that can be made with the help of the computer. Csound has traditionally been used in a non-interactive score driven context, but nowadays it is mostly used in in a real-time context.
</p>

<p>
<a href="https://csound.com/">https://csound.com/</a>
</p>
</div>
</div>

<div id="outline-container-org28b224f" class="outline-3">
<h3 id="org28b224f">Sintesi granulare</h3>
<div class="outline-text-3" id="text-org28b224f">
<p>
La sintesi granulare è un metodo base della sintesi del suono che opera con degli elementi acustici elementari chiamati microsound o grani.
</p>

<p>
La sintesi granulare è spesso basata sullo stesso principio del campionamento ma include anche tecnologie di tipo analogico. L'idea è quella di creare suoni
complessi a partire da una grossa quantità di suoni semplici. I grani sono di durata compresa tra 1 e 50 millisecondi e possono essere combinati e riprodotti
insieme a velocità, fase e ampiezza variabili. Il risultato non è un unico tono, ma una nuvola di suoni che viene manipolata in maniera differente da qualsiasi
altro suono naturale o da qualsiasi altro metodo di sintesi&#x2026;
</p>

<ul class="org-ul">
<li><a href="https://it.m.wikipedia.org/wiki/Sintesi_granulare">https://it.m.wikipedia.org/wiki/Sintesi_granulare</a></li>
<li><a href="https://en.wikipedia.org/wiki/Granular_synthesis">https://en.wikipedia.org/wiki/Granular_synthesis</a></li>
<li><a href="https://granularsynthesis.com/index.php">https://granularsynthesis.com/index.php</a></li>
<li><a href="https://sonus.ca/artiste/CP-1811/Barry_D_Truax">https://sonus.ca/artiste/CP-1811/Barry_D_Truax</a></li>
</ul>
</div>
</div>

<div id="outline-container-org43e0b7c" class="outline-3">
<h3 id="org43e0b7c">alcuni spunti per il Livecoding&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="tec">tec</span></span></h3>
<div class="outline-text-3" id="text-org43e0b7c">
</div>

<div id="outline-container-org3eed5c8" class="outline-4">
<h4 id="org3eed5c8">All things live coding Awesome</h4>
<div class="outline-text-4" id="text-org3eed5c8">
<p>
<b>A curated list of live coding languages and tools</b>
</p>

<p>
This list was created with the intention of giving a quick-glance over the many possibilities to engage in this practice. For further information, head over to <a href="https://toplap.org/">https://toplap.org/</a> &#x2026;
</p>

<p>
<a href="https://github.com/toplap/awesome-livecoding">https://github.com/toplap/awesome-livecoding</a>
</p>
</div>
</div>

<div id="outline-container-org25a9d2e" class="outline-4">
<h4 id="org25a9d2e">Emacs Live</h4>
<div class="outline-text-4" id="text-org25a9d2e">
<p>
An opinionated set of defaults for getting started with a specific focus on live coding with Overtone and Quil. However, it's not just a one trick pony. It also happens to be:
</p>

<ul class="org-ul">
<li>a jolly good generic Clojure hacking config</li>
<li>a nice structured approach to organising your Emacs config</li>
<li>modular in that functionality is organised by discrete packs</li>
<li>a decent starting point for live coding in general</li>
<li>a goldmine of config snippets to plunder and add to your own config</li>
</ul>

<p>
So, wherever you are in the multiverse, Emacs Live is ready to join you in battle against the evil friction of poor text editor workflows.
</p>

<p>
<a href="https://github.com/overtone/emacs-live">https://github.com/overtone/emacs-live</a>
</p>
</div>
</div>

<div id="outline-container-org90961e1" class="outline-4">
<h4 id="org90961e1">Collaborative Programmable Music</h4>
<div class="outline-text-4" id="text-org90961e1">
<p>
Overtone is an open source audio environment designed to explore new musical ideas from synthesis and sampling to instrument building, live-coding and collaborative jamming. We combine the powerful SuperCollider audio engine, with Clojure, a state of-the-art lisp, to create an intoxicating interactive sonic experience.
</p>

<p>
<a href="http://overtone.github.io/">http://overtone.github.io/</a>
</p>
</div>
</div>

<div id="outline-container-org11eff75" class="outline-4">
<h4 id="org11eff75">Come funzionano i rumorini erotici&#xa0;&#xa0;&#xa0;<span class="tag"><span class="campioni">campioni</span></span></h4>
<div class="outline-text-4" id="text-org11eff75">
<blockquote>
<p>
<b>Autonomous Sensory Meridian Response:</b> questa è la sigla dell'<b>ASMR</b>. Su Youtube ci sono canali che contano milioni di fan che passano letteralmente ore ad ascoltare persone che emettono piccoli suoni delicati con la bocca, come sussurro o masticazione, oppure nell'incontro tra mani e superfici di vario tipo, pacchetti, involucri. Picchettamenti, sfregamenti, sussurri: sono suoni che entrano sottopelle e, a sentire da coloro che sono soggetti all'ASMR, provocano perfino una sottile eccitazione.
</p>
</blockquote>
</div>
</div>
</div>
</div>

<div id="outline-container-org81e1bc3" class="outline-2">
<h2 id="org81e1bc3">Explore the Sound of Islands That Never Existed</h2>
<div class="outline-text-2" id="text-org81e1bc3">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-07-20 ven&gt;</span></span>
</p>
<p>
AS A COMPOSER, <a href="https://soundcloud.com/pekler">ANDREW PEKLER</a> aims to make music that uses synthetic sounds to build real-seeming places. With electronic instruments, he creates the sound of wind, waves, bird calls, and insects.
</p>
</div>
</div>

<div id="outline-container-orgc3c4ad4" class="outline-2">
<h2 id="orgc3c4ad4"><span class="done DONE">DONE</span> Boodler&#xa0;&#xa0;&#xa0;<span class="tag"><span class="python">python</span></span></h2>
<div class="outline-text-2" id="text-orgc3c4ad4">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-25 gio&gt; </span></span> fatto!<br />
dopo diversi tentativi andati a vuoto sono riuscito,
</p>
<p>
seguendo il suggerimento per Ubuntu in <a href="http://boodler.org/wiki/show/Installation%20Information%20For%20Various%20Platforms/">Installation Information For Various Platforms</a>,
</p>
<p>
a far funzionare nuovamente <a href="http://boodler.org/">Boodler</a>.
</p>

<blockquote>
<p>
Boodler is a tool for creating soundscapes &#x2013; continuous, infinitely varying streams of sound. Boodler is designed to run in the background on a computer, maintaining whatever sound environment you desire.
</p>

<p>
Boodler is extensible, customizable, and modular. Each soundscape is a small piece of Python code &#x2013; typically less than a page. A soundscape can incorporate other soundscapes; it can combine other soundscapes, switch between them, fade them in and out. This package comes with many example soundscapes. You can use these, modify them, combine them to arbitrary levels of complexity, or write your own.
</p>
</blockquote>
</div>

<div id="outline-container-org81d53c8" class="outline-3">
<h3 id="org81d53c8">b00dler</h3>
<div class="outline-text-3" id="text-org81d53c8">
<p>
su ZeroNet è attivo un <a href="http://127.0.0.1:43110/13bQ7EdkHBf42CmwJTbVMGATDqydrzW678">Riproduttore dei CicloAmbienti Sonori elaborati con Boodler</a> descritti qui di seguito 
</p>
</div>

<div id="outline-container-org79af827" class="outline-4">
<h4 id="org79af827">Rumori Ciclici</h4>
<div class="outline-text-4" id="text-org79af827">
<p>
ai tempi della Massa Critica avevo generato qualche Ciclo Ambiente Sonoro:
</p>

<p>
in sostanza, tramite "effetti" (che non sono altro che piccoli programmi in python) boodler utilizza campioni in formato wav|aiff e li elabora in loop generando un ambiente sonoro continuo &amp; mutevole.
io non ho fatto altro che utilizzare gli effetti distribuiti come esempi (con licenza GPL) con delle campionature di campanelli di bici (No(C)).
</p>

<p>
<b>InternAzionalNeoIsmo CicloPlagiarista</b>
</p>
</div>

<ul class="org-ul">
<li><a id="orga6b344e"></a>blop.EchoWorld "tock noises everywhere"<br />
<div class="outline-text-5" id="text-orga6b344e">
<ul class="org-ul">
<li><a href="./audio/blop.EchoWorld.mp3">44.1 khz, 128 kbps, stereo, 3.255Mb</a></li>
</ul>
<audio controls autoplay="autoplay" loop="loop"><source src="./audio/blop.EchoWorld.mp3" type="audio/mp3">Your browser does not support the audio element.</audio>
<ul class="org-ul">
<li><a href="http://xoomer.virgilio.it/concatenamento/rumoriciclici/mp3/blop.EchoWorld-m.mp3">16 khz, 24 kbps, mono, 610Kb</a></li>
</ul>
</div>
</li>

<li><a id="orgc16c91b"></a>cavepool.Cavern "rockpool at mountain's root"<br />
<div class="outline-text-5" id="text-orgc16c91b">
<ul class="org-ul">
<li><a href="./audio/cavepool.Cavern.mp3">44.1 khz, 128 kbps, stereo, 3.311Mb</a></li>
</ul>
<audio controls autoplay="autoplay" loop="loop"><source src="./audio/cavepool.Cavern.mp3" type="audio/mp3">Your browser does not support the audio element.</audio>
<ul class="org-ul">
<li><a href="http://xoomer.virgilio.it/concatenamento/rumoriciclici/mp3/cavepool.Cavern-m.mp3">16 khz, 24 kbps, mono, 620Kb</a></li>
</ul>
</div>
</li>

<li><a id="org407a595"></a>drumbeat.DualDrums "two mutating drum tracks, one on each side"<br />
<div class="outline-text-5" id="text-org407a595">
<ul class="org-ul">
<li><a href="./audio/drumbeat.DualDrums.mp3">44.1 khz, 128 kbps, stereo, 3.178Mb</a></li>
</ul>
<audio controls autoplay="autoplay" loop="loop"><source src="./audio/drumbeat.DualDrums.mp3" type="audio/mp3">Your browser does not support the audio element.</audio>
<ul class="org-ul">
<li><a href="http://xoomer.virgilio.it/concatenamento/rumoriciclici/mp3/drumbeat.DualDrums-m.mp3">16 khz, 24 kbps, mono, 595Kb</a></li>
</ul>
</div>
</li>

<li><a id="orgc27eceb"></a>fire.Bonfire "varying bonfire"<br />
<div class="outline-text-5" id="text-orgc27eceb">
<ul class="org-ul">
<li><a href="./audio/fire.Bonfire.mp3">44.1 khz, 128 kbps, stereo, 3.836Mb</a></li>
</ul>
<audio controls autoplay="autoplay" loop="loop"><source src="./audio/fire.Bonfire.mp3" type="audio/mp3">Your browser does not support the audio element.</audio>
<ul class="org-ul">
<li><a href="http://xoomer.virgilio.it/concatenamento/rumoriciclici/mp3/fire.Bonfire-m.mp3">16 khz, 24 kbps, mono, 719Kb</a></li>
</ul>
</div>
</li>

<li><a id="org4580798"></a>frogs.FrogPond "a pondful of frogs"<br />
<div class="outline-text-5" id="text-org4580798">
<ul class="org-ul">
<li><a href="./audio/frogs.FrogPond.mp3">44.1 khz, 128 kbps, stereo, 3.427Mb</a></li>
</ul>
<audio controls autoplay="autoplay" loop="loop"><source src="./audio/frogs.FrogPond.mp3" type="audio/mp3">Your browser does not support the audio element.</audio>
<ul class="org-ul">
<li><a href="http://xoomer.virgilio.it/concatenamento/rumoriciclici/mp3/frogs.FrogPond-m.mp3">16 khz, 24 kbps, mono, 642Kb</a></li>
</ul>
</div>
</li>
</ul>
</div>
</div>

<div id="outline-container-org04ce1a5" class="outline-3">
<h3 id="org04ce1a5"><span class="todo TODO">TODO</span> sarebbe bello fare qualcosa con la tessitura</h3>
<div class="outline-text-3" id="text-org04ce1a5">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-25 gio&gt;</span></span>
</p>

<p>
che ne so,<br />
anche solo la generazione di <b>Ambienti Sonori Tessili</b> a partire dalle armature dei telai;
</p>

<p>
sarebbe una buona occasione per sporcarsi i polpastrelli con <i>python</i>
</p>
</div>
</div>
<div id="outline-container-org49dc059" class="outline-3">
<h3 id="org49dc059"><span class="todo TODO">TODO</span> Cartoons</h3>
<div class="outline-text-3" id="text-org49dc059">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-27 sab&gt;</span></span>
</p>
<p>
<a href="https://musicformaniacs.blogspot.it/2012/06/screwy-cartoon-sampling-of-david-shea.html">come fatto da <i>David Shea</i> nell'album "i"</a><br />
vorrei programmare qualche ambiente sonoro con campionature di cartoni animati
</p>

<p>
giusto per appuntare qualcosa:
</p>
<ul class="org-ul">
<li><a href="https://archive.org/embed/Q2_COMEDYCARTOON">Cartoon Music</a> su Archive.org</li>
</ul>
<ul class="org-ul">
<li><a href="http://www.pianetagratis.it/audio/cartoons/">AUDIO SUONERIE CARTOONS</a></li>
<li>&#x2026;</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org68b6229" class="outline-2">
<h2 id="org68b6229">Musique d'ameublement</h2>
<div class="outline-text-2" id="text-org68b6229">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-12-19 mar&gt;</span></span>
</p>

<p>
Musique d'ameublement è un'espressione coniata dal compositore francese <i>Erik Satie</i> per designare l'ultima fase della sua produzione (1916-1925). Letteralmente significa "<i>musica da arredamento</i>" e
viene talvolta tradotta con "<i>musica da tappezzeria</i>". Lo stesso Satie la definisce come "musica che non ha bisogno di essere ascoltata", suscitando presso i suoi contemporanei numerose polemiche&#x2026;
</p>

<p>
Un giorno Satie, seduto ad un caffè', disse al suo compagno <i>Fernand Léger</i>: 
</p>
<blockquote>
<p>
«Sai, bisognerebbe creare della musica d'arredamento, cioè una musica che facesse parte dei  rumori dell'ambiente in cui viene diffusa, che ne tenesse conto. Dovrebbe essere melodiosa, in  modo da coprire il suono metallico dei coltelli e delle forchette senza però cancellarlo  completamente, senza imporsi troppo. Riempirebbe i silenzi, a volte imbarazzanti, dei  commensali. Risparmierebbe il solito scambio di banalità. Inoltre, neutralizzerebbe i rumori della  strada che penetrano indiscretamente dall'esterno.»
</p>
</blockquote>

<p>
<a href="https://it.wikipedia.org/wiki/Musique_d'ameublement">https://it.wikipedia.org/wiki/Musique_d'ameublement</a>
</p>

<p>
La musica spiegata ai miei figli - <a href="http://www.raiplayradio.it/audio/2017/12/LA-MUSICA-SPIEGATA-AI-MIEI-FIGLI-0116f9c7-4a03-4324-9af8-dc387147688c.html">puntata del 19-12-2017</a>
</p>
</div>
</div>

<div id="outline-container-orgf766957" class="outline-2">
<h2 id="orgf766957">David Cope&#xa0;&#xa0;&#xa0;<span class="tag"><span class="lisp">lisp</span></span></h2>
<div class="outline-text-2" id="text-orgf766957">
<p>
David Cope (born May 17, 1941 in San Francisco, California) is an American author, composer, scientist, and former professor of music at the University of
California, Santa Cruz. His primary area of research involves artificial intelligence and music; he writes programs and algorithms that can analyse existing
music and create new compositions in the style of the original input music. He taught a summer Workshop in Algorithmic Computer Music that was open to the
public (but not free) as well as a general education course entitled Artificial Intelligence and Music for enrolled UCSC students. Cope is also cofounder and
CTO Emeritus of Recombinant Inc, a music technology company.
</p>
<p>
<a href="https://en.wikipedia.org/wiki/David_Cope">https://en.wikipedia.org/wiki/David_Cope</a>
</p>
</div>

<div id="outline-container-org72d7fe2" class="outline-3">
<h3 id="org72d7fe2">Biography</h3>
<div class="outline-text-3" id="text-org72d7fe2">
<p>
David Cope is Dickerson Emeriti Professor at the University of California at Santa Cruz    
(howell@ucsc.edu) where he teaches theory and composition, and Honorary Professor of    
Computer Science at Xiamen University (China). He also teaches regularly in the annual    
Workshop in Algorithmic Computer Music (WACM) held in June-July at UC Santa Cruz. He was    
born in San Francisco, California on May 17, 1941. Following early study on piano (including an    
extensive performance career) and violoncello, he completed degrees in composition at Arizona    
State University and the University of Southern California studying with George Perle, Halsey    
Stevens, Ingolf Dahl and Grant Fletcher. His over seventy published compositions have    
received thousands of performances throughout the U.S. and abroad, including those by the    
Vermont, Pittsburgh, Indianapolis, Cabrillo Festival, and Santa Cruz Symphony Orchestras, as    
well as numerous university orchestras and wind ensembles. His compositions include 9    
symphonies, 6 string quartets, and 4 piano sonatas. Thirty-six of Cope's works appear on    
recordings including Variations (piano and wind orchestra; Cornell University), Re-Birth (concert    
band), Concert (piano and orchestra, Mary Jane Cope, soloist) and Threshold and Visions    
(orchestra). Complete albums of his music have appeared on Folkways (2), Opus One and Epoc    
Music (24) and include a wide diversity of works from large ensembles (his nine symphonies),    
to string quartets (six), to soloists with electronic and computer-generated tape.     
</p>

<p>
Steven Mamula writes about Cope's work in a definitive article in the American Record Guide    
(May, 1982):    
</p>

<blockquote>
<p>
"David Cope is unquestionably one of this generation's most ambitious, prolific    
and multifarious composers. His music in a large measure is marked by tension,    
achieved through sharply dissonant, sustained tonal clusters, sporadic and    
impulsive phrasing, and wide skips in the linear movement. His textures are    
transparent, though not always sparse, and rhythms seem to fall at extremes:    
either subtle and almost not pulsating, or fiercely aggressive with frequent    
juxtapositions of both. David Cope's Concert For Piano and Orchestra (1980)    
exemplifies much of this essence. The work contains several passages that are a    
multilayering of single note drones played in succession by individual    
instruments. A crescendo builds as each instrument enters, creating an anxiety    
that approaches the teeth-grinding level. Much as in serial music, repose is    
achieved here not by succeeding dissonance with consonance, but rather by    
succeeding dissonance with lesser degrees of dissonance. The piano serves a    
minimal but judicious role, delivering angular, single line statements marked    
with huge leaps, and brief, repeated arpeggiations in the upper register that    
together produce a striking antithesis to the orchestral fabric. During the work's    
latter half, a furious, single note figure erupts at the piano's bottom end, which    
churns in syncopation soon imitated by numerous percussion instruments,    
followed by powerful crescendos in brass lines.     
</p>

<p>
"For the past three years Cope has also been involved with creating a massive    
work (two hours) for single performer. The composer became interested in    
finding a place that he loved and that fascinated him, exploring its history, lore,    
religions, etc., and then creating a piece from that intimacy. Canyon de Chelley in    
Arizona has been such a place for him. He began by studying all published    
material on the Canyon's archaeological roots and art history (Anasazi art,    
petroglyphs primarily), as well as learning as much of the Navajo language as    
possible, then went to live for a time in the Canyon, exploring it thoroughly and    
continuously sketching musical ideas from the mountain of research. Also, during    
this time he built many instruments (not as a craftsman but as a composer, i.e.,    
instruments not beautiful or masterful, since some contained only one note).    
Some were made with materials such as prayer stones and sheepbone mallets,    
though very few artifacts were removed and all with permission. Cope declares    
'&#x2026;slowly but surely a piece is emerging, one so personal and intensely real that    
'performance' hardly describes the results.' The title of his cosmically ambitious    
work is THE WAY."    
</p>
</blockquote>
<p>
<a href="http://artsites.ucsc.edu/faculty/cope/biography_page_2.htm">NEXT PAGE</a>&#x2026;    
</p>
</div>

<div id="outline-container-org27d0345" class="outline-4">
<h4 id="org27d0345">Emily Howell</h4>
<div class="outline-text-4" id="text-org27d0345">
<p>
Emily Howell is a computer program created by David Cope, a music professor at the University of California, Santa Cruz. Emily Howell is an interactive
interface that "hears" feedback from listeners, and builds its own musical compositions from a source database, derived from a previous composing program called
Experiments in Musical Intelligence (EMI). Cope attempts to “teach” the program by providing feedback so that it can cultivate its own "personal" style. The
software appears to be based on latent semantic analysis.
</p>

<p>
Emily Howell’s first album was released in February 2009 by Centaur Records (CRC 3023). Titled From Darkness, Light, this album contains her Opus 1, Opus 2, and
Opus 3 compositions for chamber orchestra and multiple pianos. Her second album Breathless was released in December 2012 by Centaur Records (CRC 3255).
</p>
<p>
<a href="https://en.wikipedia.org/wiki/Emily_Howell">https://en.wikipedia.org/wiki/Emily_Howell</a>
</p>
</div>
</div>

<div id="outline-container-org89d74f1" class="outline-4">
<h4 id="org89d74f1">mp3</h4>
<div class="outline-text-4" id="text-org89d74f1">
<p>
<a href="http://artsites.ucsc.edu/faculty/cope/mp3page.htm">http://artsites.ucsc.edu/faculty/cope/mp3page.htm</a>
</p>
</div>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Autore: SchiZo SchiZo</p>
<p class="email">Email: <a href="mailto:schizo@autistici.org">schizo@autistici.org</a></p>
<p class="date">Created: 2020-12-28 lun 19:48</p>
<p class="creator">Creato con <a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.2.2 (<a href="http://orgmode.org">Org</a> mode 9.0.9)</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
