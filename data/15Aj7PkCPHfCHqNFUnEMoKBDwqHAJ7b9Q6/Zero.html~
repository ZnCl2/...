<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
<head>
<!-- 2020-06-21 dom 17:27 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=true" />
<title>0</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="SchiZo SchiZo" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<link rel="stylesheet" type="text/css" href="https://www.inventati.org/noviglob/org/org.css" />
<link rel="stylesheet" type="text/css" href="https://www.inventati.org/noviglob/org/org.css" />

<script type="text/javascript" src="org-info.js">
/**
 *
 * @source: org-info.js
 *
 * @licstart  The following is the entire license notice for the
 *  JavaScript code in org-info.js.
 *
 * Copyright (C) 2012-2020 Free Software Foundation, Inc.
 *
 *
 * The JavaScript code in this tag is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 *
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 *
 * @licend  The above is the entire license notice
 * for the JavaScript code in org-info.js.
 *
 */
</script>

<script type="text/javascript">

/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/

<!--/*--><![CDATA[/*><!--*/
org_html_manager.set("TOC_DEPTH", "1");
org_html_manager.set("LINK_HOME", "");
org_html_manager.set("LINK_UP", "");
org_html_manager.set("LOCAL_TOC", "1");
org_html_manager.set("VIEW_BUTTONS", "0");
org_html_manager.set("MOUSE_HINT", "underline");
org_html_manager.set("FIXED_TOC", "0");
org_html_manager.set("TOC", "0");
org_html_manager.set("VIEW", "showall");
org_html_manager.setup();  // activate after the parameters are set
/*]]>*///-->
</script>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
        displayAlign: "center",
        displayIndent: "0em",

        "HTML-CSS": { scale: 100,
                        linebreaks: { automatic: "false" },
                        webFont: "TeX"
                       },
        SVG: {scale: 100,
              linebreaks: { automatic: "false" },
              font: "TeX"},
        NativeMML: {scale: 100},
        TeX: { equationNumbers: {autoNumber: "AMS"},
               MultLineWidth: "85%",
               TagSide: "right",
               TagIndent: ".8em"
             }
});
</script>
<script type="text/javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML"></script>
</head>
<body>
<div id="content">
<h1 class="title">0
<br />
<span class="subtitle">appunti sparsi</span>
</h1>
<div id="table-of-contents">
<h2>Indice</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org1688f9b">alcuni spunti per il Livecoding</a></li>
<li><a href="#org77f465a">RadiAzioni</a></li>
<li><a href="#org80ab683">Rumori Ciclici</a></li>
<li><a href="#org2266574">Un nuovo forum per la comunità italiana su ZeroNet</a></li>
<li><a href="#org9638fbd">request.el &#x2013; an elisp HTTP library</a></li>
<li><a href="#orge4ea389">Eco No Mia</a></li>
<li><a href="#org06c1477">PaesaggiSonori</a></li>
<li><a href="#org5ba0429">FeedBot-ZeroBlog</a></li>
<li><a href="#org19fc802">Beaker</a></li>
<li><a href="#org9027487">San Martino</a></li>
<li><a href="#orgca1805f">NoSocial</a></li>
<li><a href="#org34824a4">ZeroMe Mastodon Bridge</a></li>
<li><a href="#org10c3277">feed2toot</a></li>
<li><a href="#orgecd8b12"><span class="todo TODO">TODO</span> Proxy ZeroNet Privato</a></li>
<li><a href="#org4f89360"><span class="todo TODO">TODO</span> Cmdline Support For ZeroNet And Zites</a></li>
<li><a href="#org7adbdc9">Git Center</a></li>
<li><a href="#orga269124">Federazione</a></li>
<li><a href="#org43247b3">Socccial</a></li>
<li><a href="#org597bcba">Tessiture Sonore</a></li>
<li><a href="#org1f65bc5"><span class="done DONE">DONE</span> Rete locale</a></li>
<li><a href="#org52f4df4"><span class="done DONE">DONE</span> Version Control</a></li>
<li><a href="#org69620ec"><span class="done DONE">DONE</span> Pensierini</a></li>
<li><a href="#org547f1c7"><span class="todo TODO">TODO</span> SchizoGizmo</a></li>
<li><a href="#org4f99dfa"><span class="done DONE">DONE</span> Boodler</a></li>
<li><a href="#orgcf4bdf1"><span class="done DONE">DONE</span> Feedbot</a></li>
<li><a href="#org2907878"><span class="todo TODO">TODO</span> Fancy HTML5 export</a></li>
<li><a href="#org5572dd0"><span class="todo TODO">TODO</span> Fortune</a></li>
<li><a href="#org09be08a">Happy hacking!</a></li>
<li><a href="#org867865e"><span class="done DONE">DONE</span> Telegra.ph</a></li>
<li><a href="#org67fbfd6"><span class="done DONE">DONE</span> PUBDATE</a></li>
<li><a href="#orga458b88"><span class="done DONE">DONE</span> Fasi per la pubblicazione di Schiz0</a></li>
<li><a href="#orgf96fd51"><span class="todo TODO">TODO</span> Webdav</a></li>
<li><a href="#orgcdfdbcb"><span class="todo TODO">TODO</span> All Interconnected</a></li>
<li><a href="#orge2edeb2"><span class="todo TODO">TODO</span> Telegram emacs ERC bitlbee purple</a></li>
<li><a href="#orgcd56c14"><span class="done DONE">DONE</span> ID</a></li>
<li><a href="#orgf2cbd2d"><span class="done DONE">DONE</span> How to fetch all posts using tumblr API</a></li>
<li><a href="#orgf6ed61f"><span class="todo TODO">TODO</span> Accessing JSON data in elisp</a></li>
<li><a href="#org6174c1b"><span class="todo TODO">TODO</span> ubuntu 17.10</a></li>
<li><a href="#org1547e0f"><span class="done DONE">DONE</span> Telegra.ph</a></li>
<li><a href="#orgedb8164"><span class="done DONE">DONE</span> Finalmente! JavaScript</a></li>
<li><a href="#orgbc6b715"><span class="done DONE">DONE</span> Titolo</a></li>
<li><a href="#org3724cc5">Embedding Youtube videos with org-mode links</a></li>
<li><a href="#orgb6148e0"><span class="todo TODO">TODO</span> MobileOrg</a></li>
</ul>
</div>
</div>
<div class="org-center">
<p>

</p>

<p>
<b>“Non torneremo alla normalità, perché la normalità era il problema”.</b>
</p>
</div>

<div id="menus">
    <ul id="menu_css_orizzontale"><li class="homenu"><a class="home" title="home" href="./index.html">Home</a></li>
      <!-- li><a class="menu" href="./hubzilla.html">Canale Schizo HubZilla</a></li -->
      <!-- li><a class="menu" href="./tua.html">Tessitura Urbana d'Assalto</a></li>
      <li><a class="menu" href="./TelaioDAmare.html">TelaioDAmare</a></li>
      <li><a class="menu" href="./SculturEffimere.html">SculturEffimere</a></li -->
      <li><a class="menu" href="./MeditazioneTessile.html">MeditazioneTessile</a></li>
      <!-- li><a class="menu" href="./Schize.html">Schize (lavori)</a></li -->
      <li><a class="menu" href="./Lavori.html">Lavori</a></li>
      <!-- li><a class="menu" href="./casa33.html">Casa33</a></li -->
      <!-- li><a class="menu" href="./noteZ.html">annoTAZioni</a></li -->
      <!-- li><a class="menu" href="./Telegraph.html">pubblicazioni su Telegraph (lavori)</a></li -->
      <!-- li><a class="menu" href="./immagini/miniature/miniature.html">Scatti</a></li -->
      <!-- li><a class="menu" href="./articoli.html">articoli</a></li -->
      <!-- li><a class="menu" href="http://127.0.0.1:43110/1KBU33HRPExBsFa1F7osPDBzKhsiTjYoDo/">SchiZero (0 blog)</a></li -->
    </ul>
</div>

<div class="org-center">
<p>
<b>Emacs + org-mode = Zero</b>
</p>

<p>
Un sito realizzato con <i>Emacs</i> + <i>org-mode</i>
</p>

<p>
e pubblicato su <a href="http://127.0.0.1:43110/15Aj7PkCPHfCHqNFUnEMoKBDwqHAJ7b9Q6/">ZeroNet</a> e su <a href="https://www.inventati.org/noviglob/">A/I</a>
</p>
</div>

<div id="outline-container-org1688f9b" class="outline-2">
<h2 id="org1688f9b">alcuni spunti per il Livecoding&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-org1688f9b">
</div>

<div id="outline-container-org6ef32c1" class="outline-3">
<h3 id="org6ef32c1">All things live coding Awesome</h3>
<div class="outline-text-3" id="text-org6ef32c1">
<p>
<b>A curated list of live coding languages and tools</b>
</p>

<p>
This list was created with the intention of giving a quick-glance over the many possibilities to engage in this practice. For further information, head over to <a href="https://toplap.org/">https://toplap.org/</a> &#x2026;
</p>

<p>
<a href="https://github.com/toplap/awesome-livecoding">https://github.com/toplap/awesome-livecoding</a>
</p>
</div>
</div>

<div id="outline-container-org7519b71" class="outline-3">
<h3 id="org7519b71">Emacs Live</h3>
<div class="outline-text-3" id="text-org7519b71">
<p>
An opinionated set of defaults for getting started with a specific focus on live coding with Overtone and Quil. However, it's not just a one trick pony. It also happens to be:
</p>

<ul class="org-ul">
<li>a jolly good generic Clojure hacking config</li>
<li>a nice structured approach to organising your Emacs config</li>
<li>modular in that functionality is organised by discrete packs</li>
<li>a decent starting point for live coding in general</li>
<li>a goldmine of config snippets to plunder and add to your own config</li>
</ul>

<p>
So, wherever you are in the multiverse, Emacs Live is ready to join you in battle against the evil friction of poor text editor workflows.
</p>

<p>
<a href="https://github.com/overtone/emacs-live">https://github.com/overtone/emacs-live</a>
</p>
</div>
</div>

<div id="outline-container-orgbf868d7" class="outline-3">
<h3 id="orgbf868d7">Collaborative Programmable Music</h3>
<div class="outline-text-3" id="text-orgbf868d7">
<p>
Overtone is an open source audio environment designed to explore new musical ideas from synthesis and sampling to instrument building, live-coding and collaborative jamming. We combine the powerful SuperCollider audio engine, with Clojure, a state of-the-art lisp, to create an intoxicating interactive sonic experience.
</p>

<p>
<a href="http://overtone.github.io/">http://overtone.github.io/</a>
</p>
</div>
</div>
</div>

<div id="outline-container-org77f465a" class="outline-2">
<h2 id="org77f465a">RadiAzioni&#xa0;&#xa0;&#xa0;<span class="tag"><span class="aggiornamenti">aggiornamenti</span></span></h2>
<div class="outline-text-2" id="text-org77f465a">
<p>
è stata creata la pagina <a href="./RadiAzioni.html">RadiAzioni</a> nella quale verranno pubblicate sperimentazioni radio
</p>
</div>
</div>

<div id="outline-container-org80ab683" class="outline-2">
<h2 id="org80ab683">Rumori Ciclici</h2>
<div class="outline-text-2" id="text-org80ab683">
<p>
ho reso immediatamente disponibili all'ascolto i <i>Rumori Ciclici</i> all'interno delle <a href="./TessitureSonore.html">TessitureSonore</a>
</p>
</div>
</div>

<div id="outline-container-org2266574" class="outline-2">
<h2 id="org2266574">Un nuovo forum per la comunità italiana su ZeroNet&#xa0;&#xa0;&#xa0;<span class="tag"><span class="rete">rete</span>&#xa0;<span class="tec">tec</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-org2266574">
<p>
<b><a href="https://zeronet.link/1F7TpbhQiKbERqvuYm92yg7uapy5Qb7qrD/">ZeroTalkItalia++</a></b>
</p>

<p>
visto che <i>sifr</i>, l'amministratore del forum italiano ufficiale, è irraggiungibile e risulta impossibile sia incrementare il quantitativo di dati relativo alle
utenze sia aggiornare il software ho pensato di creare un nuovo forum (<a href="https://zeronet.link/1F7TpbhQiKbERqvuYm92yg7uapy5Qb7qrD/">ZeroTalkItalia++</a>) utilizzando <a href="https://zeronet.link/1EgyL4nj9DmeSSQg3fytxGJjihxtmMon5y/">ZeroTalk++</a> che, tra l'altro, ha tutta una serie di interessanti
funzionalità  come linkare immagini, filmati, audio, silenziare utenze sgradite&#x2026; (vedi <a href="https://zeronet.link/1EgyL4nj9DmeSSQg3fytxGJjihxtmMon5y/?Topic:1549373688_1GooUE19488nDwG3TdkM8seYAHct4gjkq4/ZeroTalk+forum+engine">ZeroTalk++ forum engine</a>)
</p>

<p>
sul forum ho attivato il <a href="https://zeronet.link/1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/?Post:33">Feedbot for ZeroTalk</a> di BinChan che permette di pubblicare feed in formato xml fornendo così una funzionalità <i>newsreader</i>
</p>

<p>
per chi fosse interessat' può indicare gli indirizzi di feed che desidera vengano riverberati qui su (sono da escludersi contenuti fascisti, razzisti, sessisti e altre sgradevolezze del genere)
</p>
</div>
</div>

<div id="outline-container-org9638fbd" class="outline-2">
<h2 id="org9638fbd">request.el &#x2013; an elisp HTTP library&#xa0;&#xa0;&#xa0;<span class="tag"><span class="lisp">lisp</span>&#xa0;<span class="rete">rete</span>&#xa0;<span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-org9638fbd">
<p class="verse">
Uses curl as its backend or emacs's native url.el library if curl is not found.<br />
<br />
The default encoding for requests is utf-8. Please explicitly specify :encoding 'binary for binary data.<br />
<br />
</p>

<p>
<a href="https://github.com/tkf/emacs-request">https://github.com/tkf/emacs-request</a>
</p>

<p>
l'ho installata perché penso possa essermi utile nella strasformazione dello stream da hubzilla
</p>

<p>
(vedi <i>~/bin/hubzilla-channel-stream.el</i>)
</p>
</div>
</div>

<div id="outline-container-orge4ea389" class="outline-2">
<h2 id="orge4ea389">Eco No Mia&#xa0;&#xa0;&#xa0;<span class="tag"><span class="rete">rete</span></span></h2>
<div class="outline-text-2" id="text-orge4ea389">
<p>
sto cercando di provare a mettere in rete il commercio delle mie realizzazioni però mi trovo un po' in difficoltà, tra portali come <i>etsy</i> (particolare per
l'autoproduzione artigianale) e altri più generalisti come <i>ebay</i> oppure applicativi che, come <i>openbazaar</i>, danno la possibilità di gestire in maniera autonoma
il proprio spazio, non riesco a trovare un buon compromesso tra visibilità e auto(nomia|gestione) e così mi vien da pensare che, sì, siam sempre tutt qua a
cercare di assaltare il cielo per rivoluzionare l'esistente, ma rimaniamo sempre vincolati da una nostra dipendenza economica dal sistema che vorremo lasciarci
alle spalle; ecco, penso che anche in ambito di "movimento" dovremmo cercare invece di favorire la proliferazione di microECOnomie diffuse che al tentativo di
sostentamento affianchino la visione di un'esistenza e una creatività diverse, rivolte al superamento della condizione attuale di schiavitù, quindi cercare, ad
esempio, di impostare luoghi, anche in rete, dove poter valorizzare questi nostri tentativi: (aggreg|valorizz)atori di esperienze
</p>

<p>
quindi, ad esempio, mi sentirei di proporre una revisione della <i>policy</i> di Autistici/Inventati che prevede come principio la "non commercialità":
</p>
<p class="verse">
Spazi e servizi di questo server non vengono destinati ad attività (direttamente o indirettamente) commerciali&#x2026;<br />
</p>
<p>
e, invece, aprire uno spazio per la pubblicità di attività ecobiosociocompatili
</p>
</div>
</div>

<div id="outline-container-org06c1477" class="outline-2">
<h2 id="org06c1477">PaesaggiSonori</h2>
<div class="outline-text-2" id="text-org06c1477">
<p>
sull'Intergalactic File Server ho creato il canale <a href="http://127.0.0.1:43110/12MVkvYGcRW6u2NYbpfwVad1oQeyG4s9Er/index.html?view:channel+id:1Mz1_153dW34Ng5fVUZ5D5NcZRfAbvRQS1jYC1k">PaesaggiSonori</a> nel quale ho caricato le registrazioni audio effettuate durante il <a href="https://www.ferrarabuskers.com/it/">Buskers Festival</a> del 2016 @ <a href="./Lugo.html">Lugo</a>
</p>
</div>
</div>

<div id="outline-container-org5ba0429" class="outline-2">
<h2 id="org5ba0429">FeedBot-ZeroBlog&#xa0;&#xa0;&#xa0;<span class="tag"><span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-org5ba0429">
<p>
in
</p>
<ul class="org-ul">
<li>FeedBot-N0blogs-ZeroBlog</li>
<li>FeedBot-XXX-ZeroBlog</li>
</ul>

<p>
ho aggiunto
</p>

<div class="org-src-container">
<pre class="src src-python">
<span style="color: #5f615c; font-style: italic;"># </span><span style="color: #5f615c; font-style: italic;">inserimento del titolo del feed come tag del post</span>
<span style="color: #5f615c; font-style: italic;">#</span>
            <span style="color: #b35000;">bot_data</span>[<span style="color: #5c3566;">'tag'</span>] += [{
                <span style="color: #5c3566;">'post_id'</span>: bot_data[<span style="color: #5c3566;">'tag'</span>][-1][<span style="color: #5c3566;">'post_id'</span>] + 1,
                <span style="color: #5c3566;">'value'</span>: entry[<span style="color: #5c3566;">'feed_title'</span>]
            }]
<span style="color: #5f615c; font-style: italic;">#</span>
<span style="color: #5f615c; font-style: italic;">#</span>
</pre>
</div>

<p>
così com'è in <i>FeedBot-Fluss0-ZeroBlog</i>
</p>
</div>
</div>

<div id="outline-container-org19fc802" class="outline-2">
<h2 id="org19fc802">Beaker&#xa0;&#xa0;&#xa0;<span class="tag"><span class="rete">rete</span></span></h2>
<div class="outline-text-2" id="text-org19fc802">
<p>
ho appena installato <a href="https://beakerbrowser.com/">Beaker</a>:
</p>
<p class="verse">
Beaker is an experimental peer-to-peer browser with support for the dat:// protocol<br />
</p>

<p>
permette di navigare siti p2p che utilizzano il protocollo / dat:// /
</p>
</div>

<div id="outline-container-org5393048" class="outline-3">
<h3 id="org5393048">i miei siti:</h3>
<div class="outline-text-3" id="text-org5393048">
</div>

<div id="outline-container-org1007435" class="outline-4">
<h4 id="org1007435">SchiZero</h4>
<div class="outline-text-4" id="text-org1007435">
<ul class="org-ul">
<li>dat://schizero.hashbase.io/</li>
<li>dat://8ddfd9c1667a1d4fbe69a8c3c8a22dd55655a36bcbff3be3286f10519391dd47/</li>
<li><a href="https://schizero.hashbase.io/">https://schizero.hashbase.io/</a></li>
</ul>
</div>
</div>

<div id="outline-container-orge843362" class="outline-4">
<h4 id="orge843362">Schizzi</h4>
<div class="outline-text-4" id="text-orge843362">
<ul class="org-ul">
<li>dat://schizzi.hashbase.io/</li>
<li>dat://701f6cec08c620a98665a0fa7d59da7a289e19b23b2f8f4fb06bfe9775798e85/</li>
<li><a href="https://schizzi.hashbase.io/">https://schizzi.hashbase.io/</a></li>
</ul>
</div>
</div>

<div id="outline-container-org3892d94" class="outline-4">
<h4 id="org3892d94">schizo-rotonde</h4>
<div class="outline-text-4" id="text-org3892d94">
<ul class="org-ul">
<li>dat://schizo-rotonde.hashbase.io/</li>
<li>dat://f74896d02b3703ba7e24ed45ecb35d2ec4398f4e73ebef1bf4acb6a10044f498/</li>
<li><a href="https://schizo-rotonde.hashbase.io/">https://schizo-rotonde.hashbase.io/</a></li>
</ul>
</div>
</div>

<div id="outline-container-org2b183d0" class="outline-4">
<h4 id="org2b183d0">schizo-fritter</h4>
<div class="outline-text-4" id="text-org2b183d0">
<ul class="org-ul">
<li>dat://schizoutenzafritta.hashbase.io/</li>
<li>dat://3e6f6d526276a7e69efdedbf60e42d886bedb7ada3112569a555d07763c5e037/</li>
<li><a href="https://schizoutenzafritta.hashbase.io/">https://schizoutenzafritta.hashbase.io/</a></li>
<li>dat://fritter.hashbase.io/</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org4648323" class="outline-3">
<h3 id="org4648323">dat://</h3>
<div class="outline-text-3" id="text-org4648323">
<p>
eventualmente si potrebbe anche solo utilizzare, ad esempio, la <i>cli</i> dat con la quale è possibile <a href="http://beakerbrowser.com/docs/guides/publish-a-peer-to-peer-website">pubblicare un sito p2p</a> indicizzabile attraverso <i>Hashbase</i> e
quindi navigabile anche in chiaro attraverso l'indirizzo <i>sito.hashbase.io</i>
</p>

<p>
<b>figata</b>
</p>
</div>
</div>
</div>

<div id="outline-container-org9027487" class="outline-2">
<h2 id="org9027487">San Martino&#xa0;&#xa0;&#xa0;<span class="tag"><span class="aggiornamenti">aggiornamenti</span></span></h2>
<div class="outline-text-2" id="text-org9027487">
<p>
ho aggiunto la pagina <a href="./SanMartino.html">SanMartino</a> dedicata al <b>Festival di arte, design e artigianato del filo e della tessitura</b> organizzato a San Martino di Castrozza (TN) al quale partecipo con alcune mie creazioni
</p>
</div>
</div>
<div id="outline-container-orgca1805f" class="outline-2">
<h2 id="orgca1805f">NoSocial&#xa0;&#xa0;&#xa0;<span class="tag"><span class="rete">rete</span></span></h2>
<div class="outline-text-2" id="text-orgca1805f">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-07-11 mer&gt;</span></span>
</p>

<p>
sto provando a collegare il nuovo account su #Mastodon con ZeroMe attraverso <i>ZeroMe Mastodon Bridge</i>
</p>
</div>
</div>
<div id="outline-container-org34824a4" class="outline-2">
<h2 id="org34824a4">ZeroMe Mastodon Bridge&#xa0;&#xa0;&#xa0;<span class="tag"><span class="mastodon">mastodon</span>&#xa0;<span class="rete">rete</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-org34824a4">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-07-11 mer&gt;</span></span>
</p>

<p>
sto provando ad utilizzare <a href="http://127.0.0.1:43110/1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/?Post:23">ZeroMe Mastodon Bridge</a>
</p>

<p>
queste sono le grezze modifiche che ho apportato allo script per farlo funzionare, ovviamente bisognerebbe saperle integrare nel codice in maniera decente 
</p>

<p class="verse">
in "%Y-%m-%dT%H:%M:%S.%fZ" sotituisco Z con %z ed elimino la T sostituendola con uno spazio<br />
poi, essendo la timezone scritta senza i due punti (+0000)<br />
<br />
ce la metto direttamente io a forza, perché non so fare in altro modo, per adattare il tutto<br />
<br />
"%Y-%m-%d %H:%M:%S.%f+00:00"<br />
<br />
strptime() argument 1 must be str, not datetime.datetime<br />
<br />
quindi bisogna fare argomento<sub>da</sub><sub>passare</sub> = str(argomento<sub>da</sub><sub>passare</sub>)<br />
</p>

<p>
visto che mi ci sono scornato più volte, dato che quando lancio lo script per la prima volta non mi genera mai il file <i>last<sub>timestamps.txt</sub></i> me ne appunto il
formato:
</p>

<p class="verse">
1571670531<br />
1571670547.699<br />
<br />
</p>

<p>
utilizzando la documentazione di <a href="https://mastodonpy.readthedocs.io/en/stable/">Mastodon.py</a> in <i>zerome<sub>mastodon</sub><sub>bridge.py</sub></i>, in particolare nella funzione
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #346604;">def</span> <span style="color: #a40000;">MastodonToZeroMe</span>(mastodon, zerome_data):
</pre>
</div>

<p>
ho modificato
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #5c3566;">'body'</span>: html2text(item[<span style="color: #5c3566;">'content'</span>]),
</pre>
</div>

<p>
in
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #5c3566;">'body'</span>: html2text(item[<span style="color: #5c3566;">'content'</span>] + <span style="color: #5c3566;">'\n\n '</span> + item[<span style="color: #5c3566;">'url'</span>]),
</pre>
</div>

<p>
in questo modo per ogni post inviato su <i>ZeroMe</i> avrà il riferimento a quello <i>Mastodon</i> d'origine
</p>
</div>
</div>

<div id="outline-container-org10c3277" class="outline-2">
<h2 id="org10c3277">feed2toot&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span>&#xa0;<span class="rete">rete</span></span></h2>
<div class="outline-text-2" id="text-org10c3277">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-06-21 gio&gt;</span></span>
</p>

<p>
finalmente sono riuscito a far funzionare <a href="https://gitlab.com/chaica/feed2toot/">feed2toot</a> (non so cosa non andasse, so solo che con <i>sudo</i> sia nell'installazione che nella configurazione iniziale tutto è andato a buon fine)
</p>

<p>
adesso inizierò a postare prevalentemente sul mio sito principale attraverso emacs e i vari feed che lo compongono verranno pubblicati ovunque: zeronet, hubzilla, mastodon e&#x2026; twitter, addirittura, dove ho aperto un account (ancora per poco) poco prima che venisse annuciata l'apertura dell'istanza mastodon <a href="https://mastodon.bida.im/">https://mastodon.bida.im/</a>
</p>

<p>
però è un po' un pacco: se metto l'elemento {summary} rischia di superare spesso i 500 caratteri e lui non lo taglia automaticamente, lo segnala come errore, del resto solo {title} {link} sono decisamente pochini
</p>
</div>
</div>
<div id="outline-container-orgecd8b12" class="outline-2">
<h2 id="orgecd8b12"><span class="todo TODO">TODO</span> Proxy ZeroNet Privato&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-orgecd8b12">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-06-19 mar&gt;</span></span>
</p>

<p>
mi annoto qualche discussione che possa tornarmi utile nel caso mi capiti di provare a impostare un proxy privato per i miei siti su ZeroNet
</p>
</div>

<div id="outline-container-orga51f3e3" class="outline-3">
<h3 id="orga51f3e3">zerocat.eu undergoing DDoS attack &amp;&amp; || getting hacked.</h3>
<div class="outline-text-3" id="text-orga51f3e3">
<p>
<i>quantumkitty</i>
</p>

<blockquote>
<p>
I won't run a proxy again. As I said, there's a vulnerability in ZeroNet public proxies that allows attackers to list the directory of server site folders, and possibly steal private keys and masterseeds. You wake up one morning, server is down, and the SSH terminal TMUX session shows ZeroHello directory files.
</p>

<p>
Luckily, they only seem to have listed the directory of ZeroHello. I don't know what they were doing there.. it would be interesting to create a honeypot. It may have just been an attempt to shut down the ZeroNet client i.e. DDoS.
</p>

<p>
My proxy is now running privately.
</p>
</blockquote>

<p>
<a href="http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1526789823_1NZftAz9VSawGF5JgMYGFv4ByoKEaQbNZu">http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1526789823_1NZftAz9VSawGF5JgMYGFv4ByoKEaQbNZu</a>
</p>
</div>
</div>

<div id="outline-container-orge6b3edb" class="outline-3">
<h3 id="orge6b3edb">Zero proxies vulnerability</h3>
<div class="outline-text-3" id="text-orge6b3edb">
<blockquote>
<p>
ZeroNet proxies do not disable Stats plugin.
Any people can get access /Benchmark tools externally.
</p>

<p>
I suppose, it is vulnerability for (D)DOS attack.
</p>
</blockquote>

<p>
<a href="http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1_1LJP7tDoGnWNppUGJoNS8cJbmYTS1TecCC">http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1_1LJP7tDoGnWNppUGJoNS8cJbmYTS1TecCC</a>
</p>
</div>
</div>

<div id="outline-container-org8fe9865" class="outline-3">
<h3 id="org8fe9865">Setup A Clearnet Proxy for ZeroNet</h3>
<div class="outline-text-3" id="text-org8fe9865">
<p>
I've set up a clearnet proxy, currently for personal use, may open it for everyone later.
</p>

<p>
<a href="http://127.0.0.1:43110/1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/?Post:44">http://127.0.0.1:43110/1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/?Post:44</a>
</p>
</div>
</div>

<div id="outline-container-org3ea4c7e" class="outline-3">
<h3 id="org3ea4c7e">Deploy ZeroNet to Heroku as a Public or Private ZeroNet Proxy Service</h3>
<div class="outline-text-3" id="text-org3ea4c7e">
<p>
Note: due to formatting issues, some bash commands below have incomplete display. Just copy and paste the bash code block somewhere for the complete commands.
Introduction
</p>

<p>
This is a tutorial on deploying ZeroNet to Heroku as a Python web app. You can host a (1) public or (2) private ZeroNet proxy, or only host (3) your personal zsites (ZeroNet site) statically (with all your zsite contents there) or dynamically (as an open gate to the clearnet and fetch your zsite contents from the zero network) on Heroku&#x2026;
</p>
<p>
<a href="http://bruce-lab.blogspot.com/2017/11/deploy-zeronet-to-heroku-as-proxy.html">http://bruce-lab.blogspot.com/2017/11/deploy-zeronet-to-heroku-as-proxy.html</a>
</p>
</div>

<div id="outline-container-orgb8feae1" class="outline-4">
<h4 id="orgb8feae1"><span class="todo TODO">TODO</span> ProxySchizo</h4>
<div class="outline-text-4" id="text-orgb8feae1">
<p>
ho attivato il proxy personale su HEROKU
</p>
<p>
<a href="http://proxyschizo.herokuapp.com/">http://proxyschizo.herokuapp.com/</a>
</p>

<p>
ma non funziona, devo vedere dai log quale è il problema&#x2026;
</p>
</div>
</div>
</div>
<div id="outline-container-org48e79a3" class="outline-3">
<h3 id="org48e79a3">Running a ZeroProxy</h3>
<div class="outline-text-3" id="text-org48e79a3">
<p>
You might have noticed I just started to host two new ZeroProxies
</p>

<p>
In this post, I will teach you how to host your own.
</p>

<p>
<a href="http://127.0.0.1:43110/kindlyfire.bit/?Post:9:Running+a+ZeroProxy">http://127.0.0.1:43110/kindlyfire.bit/?Post:9:Running+a+ZeroProxy</a>
</p>

<p>
#+BEGIN<sub>COMMENT</sub>
First things first, you need :
</p>

<p>
A domain name pointing to your server (I will refer to it as domain.net)
A VPS running Debian 8 (You can get one at DigitalOcean (ClearNet))
</p>

<p>
Connect to your VPS, on Linux and MAC this would be:
</p>

<p>
$&gt; ssh root@server<sub>ip</sub>
</p>

<p>
Update it:
</p>

<p>
$&gt; apt update
$&gt; apt upgrade
</p>

<p>
Setup the domain name
</p>

<p>
The domain name you want to use, here domain.net, needs to have an A record pointing to server<sub>ip</sub>. You can check this with dig:
</p>

<p>
$&gt; dig domain.net
</p>

<p>
; &lt;&lt;&gt;&gt; DiG 9.9.5-3ubuntu0.8-Ubuntu &lt;&lt;&gt;&gt; domain.net
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 32341
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1
</p>

<p>
;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;domain.net.            IN    A
</p>

<p>
;; ANSWER SECTION:
domain.net.        253    IN    A    164.132.6.35    &lt;=== THIS IS IT
</p>

<p>
;; Query time: 23 msec
;; SERVER: 127.0.1.1#53(127.0.1.1)
;; WHEN: Fri Jun 17 23:02:44 CEST 2016
;; MSG SIZE  rcvd: 58
</p>

<p>
Refer to your domain name provider for help on how to set it up. If you use CloudFlare as DNS provider, make sure CloudFlare protection is disabled for the A record.
Get ZeroNet up and running
</p>

<p>
We will have to download, extract and make ZeroNet run with forever. Let's start:
</p>

<p>
$&gt; wget <a href="https://github.com/HelloZeroNet/ZeroBundle/raw/master/dist/ZeroBundle-linux64.tar.gz">https://github.com/HelloZeroNet/ZeroBundle/raw/master/dist/ZeroBundle-linux64.tar.gz</a>
$&gt; tar -xvf ZeroBundle-linux64.tar.gz
$&gt; rm ZeroBundle-linux64.tar.gz
$&gt; wget -qO- <a href="https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh">https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh</a> | bash
$&gt; . ~/.nvm/nvm.sh
$&gt; nvm install 5
$&gt; npm install forever -g
</p>

<p>
Now we have both ZeroBundle and forever installed, let's launch it once:
</p>

<p>
\(> cd ZeroBundle
ZeroBundle/\)&gt; ./ZeroNet.sh
</p>

<p>
Once you see the following (underneath), hit CTRL + C.
</p>

<p>
[14:12:02] Ui.UiServer ---------------------------------&#x2013;&#x2014;
[14:12:02] Ui.UiServer Web interface: <a href="http://127.0.0.1:43110/">http://127.0.0.1:43110/</a>
[14:12:02] Ui.UiServer ---------------------------------&#x2013;&#x2014;
</p>

<p>
Now that ZeroBundle downloaded ZeroNet, we can enable the Multiuser plugin.
</p>

<p>
ZeroBundle/\(> cd ZeroNet/plugins/
ZeroBundle/ZeroNet/plugins/\)&gt; mv disabled-Multiuser/ Multiuser/
ZeroBundle/ZeroNet/plugins/$&gt; cd ../..
</p>

<p>
ZeroNet is installed and we are not going to let it run yet. Before, install Tor using these instructions (ClearNet). After that, you can run ZeroNet :
</p>

<p>
ZeroBundle/$&gt; forever start -c bash "ZeroNet.sh"
</p>

<p>
You can check the status of scripts running with forever using forever list.
Generate an SSL certificate
</p>

<p>
No, you're not going to pay for it. We'll use certbot by LetsEncrypt, it's free ! You will have to renew your certificate every 90 days though (edit: this is now done automatically thanks to a cron job added by certbot).
</p>

<p>
$&gt; echo "deb <a href="http://ftp.debian.org/debian">http://ftp.debian.org/debian</a> jessie-backports main" &gt; /etc/apt/sources.list.d/backports.list
$&gt; apt update
$&gt; apt install certbot -t jessie-backports
$&gt; certbot certonly -d domain.net &#x2013;standalone
</p>

<p>
Carefully read the message returned by the last command, and if it didn't worked then fix the issues it pointed out. If you get a success message, note the file it gives you !
Finally, install nginx
</p>

<p>
Nginx is like Apache, but faster and just overall better. My friend angristan made an easy installation script:
</p>

<p>
$&gt; wget <a href="https://raw.githubusercontent.com/Angristan/nginx-autoinstall/master/nginx-autoinstall.sh">https://raw.githubusercontent.com/Angristan/nginx-autoinstall/master/nginx-autoinstall.sh</a>
$&gt; chmod +x nginx-autoinstall.sh
$&gt; ./nginx-autoinstall.sh
</p>

<p>
You should follow it as I did:
</p>

<p>
Welcome to the nginx-autoinstall script.
</p>

<p>
What do you want to do?
</p>
<ol class="org-ol">
<li>Install Nginx</li>
<li>Uninstall Nginx</li>
<li>Update the script</li>
</ol>

<p>
Select an option [1-3]: 1
</p>

<p>
This script will install Nginx 1.11.1 (mainline) with some optional famous modules.
</p>

<p>
Please tell me which modules you want to install.
If you select none, Nginx will be installed with its default modules.
</p>

<p>
Modules to install :
       PageSpeed 1.11.33.2 [y/n]: n
       Brotli [y/n]: n
       Headers More 0.30 [y/n]: n
       GeoIP [y/n]: n
       Cloudflare's HTTP/2 + SPDY patch [y/n]: y
       Cloudflare's TLS Dynamic Record Resizing patch [y/n]: n
</p>

<p>
Choose your OpenSSL implementation :
</p>
<ol class="org-ol">
<li>System's OpenSSL (default)</li>
<li>OpenSSL 1.0.2h from source</li>
<li>LibreSSL 2.4.1 from source</li>
</ol>

<p>
Select an option [1-3]: 1
</p>

<p>
Nginx is ready to be installed, press any key to continue&#x2026; &lt;press enter&gt;
</p>

<p>
Once that's done, we'll have to create a vhost for nginx.
</p>

<p>
\(> cd /etc/nginx/
/etc/nginx/\)&gt; nano nginx.conf
</p>

<p>
Find the line include <i>etc/nginx/conf.d/*.conf; and add include /etc/nginx/sites/*.conf; behind (or the line after it, just make sure it comes before }). CTRL + X then Y to save. We can now put our vhost in sites</i>:
</p>

<p>
/etc/nginx/\(> cd sites
/etc/nginx/sites/\)&gt; nano domain.net.donf
</p>

<p>
Dont forget the .conf suffix, or the file won't load.
</p>

<p>
Enter this in it:
</p>

<p>
server {
    listen 80;
    server<sub>name</sub> domain.net;
    rewrite ^ <a href="https://$server_name$request_uri">https://$server_name$request_uri</a>? permanent;
}
</p>

<p>
server {
    listen 443 ssl http2;
</p>

<p>
server<sub>name</sub> domain.net;
</p>

<p>
ssl<sub>certificate</sub> /etc/letsencrypt/live/domain.net/fullchain.pem;
ssl<sub>certificate</sub><sub>key</sub> /etc/letsencrypt/live/domain.net/privkey.pem;
ssl<sub>trusted</sub><sub>certificate</sub> /etc/letsencrypt/live/domain.net/chain.pem;
</p>

<p>
ssl<sub>protocols</sub> TLSv1.2;
ssl<sub>ecdh</sub><sub>curve</sub> secp384r1;
ssl<sub>ciphers</sub> EECDH+AESGCM:EECDH+AES;
ssl<sub>prefer</sub><sub>server</sub><sub>ciphers</sub> on;
ssl<sub>stapling</sub> on;
ssl<sub>stapling</sub><sub>verify</sub> on;
resolver 80.67.169.12 80.67.169.40 valid=300s;
resolver<sub>timeout</sub> 5s;
ssl<sub>session</sub><sub>cache</sub> shared:SSL:10m;
ssl<sub>session</sub><sub>timeout</sub> 5m;
ssl<sub>session</sub><sub>tickets</sub> off;
</p>

<p>
location / {
    proxy<sub>pass</sub> <a href="http://127.0.0.1:43110">http://127.0.0.1:43110</a>;
	proxy<sub>set</sub><sub>header</sub> Host $host;
	proxy<sub>set</sub><sub>header</sub> X-Real-IP $remote<sub>addr</sub>;
	proxy<sub>set</sub><sub>header</sub> X-Forwarded-For $proxy<sub>add</sub><sub>x</sub><sub>forwarded</sub><sub>for</sub>;
	proxy<sub>set</sub><sub>header</sub> X-Forwarded-Proto $scheme;
}
</p>

<p>
location /Websocket {
    proxy<sub>pass</sub> <a href="http://127.0.0.1:43110">http://127.0.0.1:43110</a>;
    proxy<sub>http</sub><sub>version</sub> 1.1;
    proxy<sub>read</sub><sub>timeout</sub> 1h; #for long live websocket connetion
    proxy<sub>set</sub><sub>header</sub> Upgrade $http<sub>upgrade</sub>;
    proxy<sub>set</sub><sub>header</sub> Connection "upgrade";
}
</p>

<p>
    client<sub>max</sub><sub>body</sub><sub>size</sub> 20M;
}
</p>

<p>
Don't forget to replace all domain.net with your domain !
</p>

<p>
nginx -s reload to reload the nginx configuration and you're all set. You should be able to see your proxy by going to domain.net, all good.
</p>

<p>
If you have any questions, my contact info is in the sidebar.
</p>
</div>
<div id="outline-container-org1c53e8b" class="outline-4">
<h4 id="org1c53e8b">2 Comments:</h4>
<div class="outline-text-4" id="text-org1c53e8b">
</div>
<ul class="org-ul">
<li><a id="orgdcf49c1"></a>ssdifnskdjfnsdjk ━ on Jan 19, 2018<br />
<div class="outline-text-5" id="text-orgdcf49c1">
<p>
It not worked for me.
</p>

<p>
The "forever" not worked on CentOS7. Result: -bash: forever: command not found
During installation (npm install forever):
npm WARN optional Skipping failed optional dependency /chokidar/fsevents:
npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.1.3
npm WARN enoent ENOENT: no such file or directory, open '/root/package.json'
</p>

<p>
When i launched ZeroNet.sh it shown no error and log file was updated with various connections, yet i was unable to visit <a href="http://myvpsip">http://myvpsip</a> (timeout)
</p>

<p>
&#x2013;
WHAT WORKED for me was this: in directory where is zeronet.py located, create new file zeronet.conf and inside add:
[global]
ui<sub>ip</sub> = *
ui<sub>port</sub> = 80
</p>

<p>
Then run "screen" command and inside run zeronet.py by command: "python zeronet.py", detach screen by (Ctrl+a and "d" key), to re-attach, do command: screen -r
</p>
</div>
</li>
<li><a id="org9974510"></a>darkdevel ━ on Sep 13, 2016<br />
<div class="outline-text-5" id="text-org9974510">
<p>
 dyn dns is ok too
#+END<sub>COMMENT</sub>
</p>
</div>
</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org4f89360" class="outline-2">
<h2 id="org4f89360"><span class="todo TODO">TODO</span> Cmdline Support For ZeroNet And Zites&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-org4f89360">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-06-19 mar&gt;</span></span>
</p>

<p>
mi appunto questa discussione e il relativo codice prodotto sino ad ora con la speranza di poter integrare un po' più di funzionalità di <i>ZeroNet</i> all'interno di <i>Emacs</i>
</p>

<p>
<a href="http://127.0.0.1:43110/1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/?Post:77:Idea:+Add+More+Cmdline+Support+For+ZeroNet+And+Zites">http://127.0.0.1:43110/1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/?Post:77:Idea:+Add+More+Cmdline+Support+For+ZeroNet+And+Zites</a>
</p>

<p>
la cosa bella sarebbe un <i>zerome-mode</i> per <i>Emacs</i> tipo <i><a href="https://www.emacswiki.org/emacs/Identica-mode">identica-mode</a></i>
</p>
</div>
</div>
<div id="outline-container-org7adbdc9" class="outline-2">
<h2 id="org7adbdc9">Git Center&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-org7adbdc9">
<p>
ho clonato i mei due siti principali su ZeroNet,<br />
i due repo sono rispettivamente:
</p>

<ul class="org-ul">
<li>Schiz0</li>
</ul>
<p class="verse">
git clone $path<sub>to</sub><sub>data</sub>/1B8RwkM5KhH1g6WZqskx3J1jjeno7xRa7F/schiz0.git was copied to the clipboard.<br />
Replace $path<sub>to</sub><sub>data</sub> with correct path to ZeroNet's data folder.<br />
<br />
</p>
<ul class="org-ul">
<li>SchizzI</li>
</ul>
<p class="verse">
git clone $path<sub>to</sub><sub>data</sub>/1BhXhBiBqedot2vLVkv9zsVQLn9f2ov6qT/schizzi.git<br />
Replace $path<sub>to</sub><sub>data</sub> with correct path to ZeroNet's data folder.<br />
<br />
</p>

<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-06-20 mer&gt; </span></span> ho spostato entrambi i repo su <i>Git-Center</i>
</p>
</div>
</div>

<div id="outline-container-orga269124" class="outline-2">
<h2 id="orga269124">Federazione&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-orga269124">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-07-11 mer&gt; </span></span> sto creando ponti tra le varie piattaforme:
</p>

<ul class="org-ul">
<li><a href="https://www.inventati.org/noviglob/index.html">Clearnet (A/I)</a> e il relativo <a href="https://www.inventati.org/noviglob/schizo.rss">feed</a></li>
<li><a href="http://127.0.0.1:43110/15Aj7PkCPHfCHqNFUnEMoKBDwqHAJ7b9Q6/">ZeroNet</a></li>
<li><a href="https://nosocial.org/@schizo">Mastodon</a></li>
<li><a href="https://hub.mrjive.eu/channel/schizo">Hubzilla</a></li>
<li><del><a href="https://twitter.com/schiz02">twitter</a>, addirittura! (anche se mi sa che tra un po' eliminerò il neonato account)</del></li>
</ul>
</div>
</div>
<div id="outline-container-org43247b3" class="outline-2">
<h2 id="org43247b3">Socccial&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-org43247b3">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-06-01 ven&gt; </span></span> ho fatto un po' d'integrazione tra le varie piattaforme:
</p>

<p>
<del>dopo aver aperto una finestra su <i>twitter</i> ho installato <b><a href="http://twmode.sf.net/">twittering-mode.el</a></b> (is a major mode for Twitter) in <i>Emacs</i></del> ho pure iniziato a provare alcuni modi
(prevalentemente applet su <a href="https://ifttt.com/">IFTTT</a>) per importare il feed generale di questo sito&#x2026; anche su <i>tumblr</i> e i canali <i>telegram</i>
</p>
</div>
</div>
<div id="outline-container-org597bcba" class="outline-2">
<h2 id="org597bcba">Tessiture Sonore&#xa0;&#xa0;&#xa0;<span class="tag"><span class="aggiornamenti">aggiornamenti</span></span></h2>
<div class="outline-text-2" id="text-org597bcba">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-26 ven&gt; </span></span> è stata creata la nuova pagina <a href="./TessitureSonore.html">Tessiture Sonore</a><br />
nella quale vengono approfondite tematiche di <i>Rumorismo Tessile</i>
</p>
</div>
</div>
<div id="outline-container-org1f65bc5" class="outline-2">
<h2 id="org1f65bc5"><span class="done DONE">DONE</span> Rete locale</h2>
<div class="outline-text-2" id="text-org1f65bc5">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-25 gio&gt;</span></span>
</p>

<p>
tutto gira intorno all'hotspot attivato nel computer collegato alla rete tramite cavo ethernet:
</p>
<ul class="org-ul">
<li>l'ip che viene assegnato a tale macchina viene utilizzato per distribuire ZeroNet in locale,<br /></li>
</ul>
<p>
lanciando zeronet con il comando:
</p>
<div class="org-src-container">
<pre class="src src-sh">$ python2 /path/to/zeronet/zeronet.py --ui_ip MY_Local_static_ip
</pre>
</div>
<ul class="org-ul">
<li>con webdav rendo accessibile, sempre su quell'indirizzo,<br /></li>
</ul>
<p>
la mia home sul "server"
</p>
<ul class="org-ul">
<li>sempre tramite webdav metto in relazione gli aggiornamenti su i vari dispositivi e la <i>repo</i> caricata su AI</li>
</ul>
</div>
</div>

<div id="outline-container-org52f4df4" class="outline-2">
<h2 id="org52f4df4"><span class="done DONE">DONE</span> Version Control&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-org52f4df4">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-25 gio 09:41&gt;</span></span>
</p>

<p>
seguendo le indicazioni <a href="https://orgmode.org/worg/org-tutorials/org-vcs.html">Putting Your org Files Under Version Control</a><br />
ho creato una <i>repo</i> dei file in org su AI con <i>git</i> in modo tale da poter effettuare modifiche da qualsiasi postazione<br />
ed avere l'aggiornamento di tali variazioni su qualsiasi dispositivo
</p>
</div>
<div id="outline-container-org1b0c824" class="outline-3">
<h3 id="org1b0c824"><span class="done DONE">DONE</span> Surface</h3>
<div class="outline-text-3" id="text-org1b0c824">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-25 gio&gt;</span></span>
</p>

<p>
ho fatto un clone pure su Surface&#x2026;
</p>
</div>
</div>
</div>
<div id="outline-container-org69620ec" class="outline-2">
<h2 id="org69620ec"><span class="done DONE">DONE</span> Pensierini&#xa0;&#xa0;&#xa0;<span class="tag"><span class="aggiornamenti">aggiornamenti</span></span></h2>
<div class="outline-text-2" id="text-org69620ec">
<p>
ho aggiunto la pagina <a href="./Pensierini.html">Pensierini</a>&#x2026; il nome è tutto un programma
</p>
</div>
</div>
<div id="outline-container-org547f1c7" class="outline-2">
<h2 id="org547f1c7"><span class="todo TODO">TODO</span> SchizoGizmo&#xa0;&#xa0;&#xa0;<span class="tag"><span class="firefox">firefox</span></span></h2>
<div class="outline-text-2" id="text-org547f1c7">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-18 gio&gt;</span></span>
</p>

<p>
qualche anno fa accrocchiai un programmino in perl che leggeva la cache di firefox vi cercava file html e immagini, poi analizzava gli html e quando trovava
l'url di un'immagine la andava a sostituire con una presa a caso tra quelle presenti nella cache;<br />
lo chiamai SchizoGizmo&#x2026; ora l'ho perso nel corso del tempo e delle memorie digitali dimenticate&#x2026;
</p>
</div>

<div id="outline-container-org8b063ef" class="outline-3">
<h3 id="org8b063ef"><span class="todo TODO">TODO</span> Read FireFox Cache with Python&#xa0;&#xa0;&#xa0;<span class="tag"><span class="firefox">firefox</span>&#xa0;<span class="python">python</span></span></h3>
<div class="outline-text-3" id="text-org8b063ef">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-18 gio&gt;</span></span>
</p>

<blockquote>
<p>
I had to write a program that does similar thing (locate and read firefox cache and show cache data) in Python. First I tried to automate the about:cache mechanism, but couldn't make it. Later I went for processing raw cache data&#x2026;
</p>
</blockquote>

<blockquote>
<p>
But interestingly I didn't need to use all these knowledge. Just used regular expression to parse the data :-)
</p>
</blockquote>

<p>
<a href="http://love-python.blogspot.it/2008/04/read-firefox-cache-with-python.html">Read FireFox Cache with Python</a>
</p>
</div>

<div id="outline-container-orgfa97448" class="outline-4">
<h4 id="orgfa97448">Programmatically reading firefox cache</h4>
<div class="outline-text-4" id="text-orgfa97448">
<p>
My idea on how to painstakingly read the firefox cache&#x2026;
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #346604;">import</span> glob, re  

<span style="color: #b35000;">cache_folder</span> = r<span style="color: #5c3566;">"~/.cache/mozilla/firefox/[]/cache2\*"</span>  
<span style="color: #b35000;">urls</span> = <span style="color: #75507b;">set</span>()  

<span style="color: #346604;">for</span> cache_filename <span style="color: #346604;">in</span> glob.glob(cache_folder):  
    <span style="color: #346604;">with</span> <span style="color: #75507b;">open</span>(cache_filename, <span style="color: #5c3566;">'rb'</span>) <span style="color: #346604;">as</span> file_cache:  
        <span style="color: #b35000;">data</span> = file_cache.read()  
        <span style="color: #b35000;">urls</span> |= <span style="color: #75507b;">set</span>(re.findall(<span style="color: #5c3566;">"(http.*?)\x00"</span>, data))  

<span style="color: #346604;">for</span> url <span style="color: #346604;">in</span> urls:  
    <span style="color: #346604;">print</span> url  
</pre>
</div>

<p>
<a href="https://stackoverflow.com/questions/32307941/programmatically-reading-firefox-cache">python - Programmatically reading firefox cache - Stack Overflow</a>
</p>

<p>
<a href="http://grokbase.com/t/python/python-list/082k368rmd/firefox-cache-python">firefox cache &amp; Python</a>
</p>
</div>
</div>
</div>
</div>

<div id="outline-container-org4f99dfa" class="outline-2">
<h2 id="org4f99dfa"><span class="done DONE">DONE</span> Boodler&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-org4f99dfa">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2018-01-25 gio&gt; </span></span> fatto!<br />
dopo diversi tentativi andati a vuoto sono riuscito,
seguendo il suggerimento per Ubuntu in <a href="http://boodler.org/wiki/show/Installation%20Information%20For%20Various%20Platforms/">Installation Information For Various Platforms</a>,<br />
a far funzionare nuovamente <a href="http://boodler.org/">Boodler</a>.
</p>

<p>
ai tempi della Massa Critica avevo generato qualche Ciclo Ambiente Sonoro:<br />
</p>
<ul class="org-ul">
<li>blop.EchoWorld.mp3</li>
<li>cavepool.Cavern.mp3</li>
<li>drumbeat.DualDrums.mp3</li>
<li>fire.Bonfire.mp3</li>
<li>frogs.FrogPond.mp3</li>
</ul>
<p>
bene,<br />
</p>
</div>
<div id="outline-container-orge51e86e" class="outline-3">
<h3 id="orge51e86e"><span class="todo TODO">TODO</span> sarebbe bello fare qualcosa con la tessitura</h3>
<div class="outline-text-3" id="text-orge51e86e">
<p>
che ne so,<br />
anche solo la generazione di <b>Ambienti Sonori Tessili</b> a partire dalle armature dei telai;
</p>

<p>
sarebbe una buona occasione per sporcarsi i polpastrelli con <i>python</i>
</p>
</div>
</div>
</div>
<div id="outline-container-orgcf4bdf1" class="outline-2">
<h2 id="orgcf4bdf1"><span class="done DONE">DONE</span> Feedbot&#xa0;&#xa0;&#xa0;<span class="tag"><span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-orgcf4bdf1">
<p>
attarverso il <b>Feedbot</b> realizzato da <i>Binchan</i>, oltre a importare le notizie dalla "clearnet" direttamente in <i>zeronet</i> (in ziti specifici e in <i>ZeroHello</i>), gestisco
anche gli aggiornamenti su i siti realizzati con <i>org-mode</i> pubblicandoli, in questo modo, anche su <i>ZeroBlog</i>
</p>
</div>

<div id="outline-container-orgd1fa470" class="outline-3">
<h3 id="orgd1fa470"><span class="done DONE">DONE</span> problemi con "no<sub>marker</sub><sub>feeds.json</sub>" e "rssAddresses.txt"</h3>
<div class="outline-text-3" id="text-orgd1fa470">
<p>
di tanto in tanto si azzera il contenuto di entrambe i file;
</p>

<p>
nel primo caso il contenuto originale ' "{}" mentre quello del secondo è da rigenerare dai backup eventuali che son stati fatti
</p>
</div>
</div>

<div id="outline-container-orgb7ab413" class="outline-3">
<h3 id="orgb7ab413"><span class="todo TODO">TODO</span> appuntare le modifiche fatte per l'adattamento al "template" ZeroBlog</h3>
<div class="outline-text-3" id="text-orgb7ab413">
</div>
</div>
<div id="outline-container-org2dd04a5" class="outline-3">
<h3 id="org2dd04a5"><span class="todo TODO">TODO</span> azzerare il contenuto del campo tag prima di scriverci in automatico</h3>
<div class="outline-text-3" id="text-org2dd04a5">
</div>
</div>
</div>

<div id="outline-container-org2907878" class="outline-2">
<h2 id="org2907878"><span class="todo TODO">TODO</span> Fancy HTML5 export&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="orgmode">orgmode</span></span></h2>
<div class="outline-text-2" id="text-org2907878">
<p>
testare <i>:html-html5-fancy</i>
</p>
</div>
</div>
<div id="outline-container-org5572dd0" class="outline-2">
<h2 id="org5572dd0"><span class="todo TODO">TODO</span> Fortune&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="orgmode">orgmode</span></span></h2>
<div class="outline-text-2" id="text-org5572dd0">
<p>
sto cercando di mettere una citazione automatica ogni volta che viene salvata una pagina&#x2026; un po' alla volta&#x2026;<br />
</p>
</div>
</div>
<div id="outline-container-org09be08a" class="outline-2">
<h2 id="org09be08a">Happy hacking!&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="lisp">lisp</span>&#xa0;<span class="orgmode">orgmode</span>&#xa0;<span class="rete">rete</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-org09be08a">
<p>
È sempre una questione di fili che s'intrecciano,<br />
Di tessiture,<br />
Di reti&#x2026;
</p>
</div>

<div id="outline-container-org009fd72" class="outline-3">
<h3 id="org009fd72"><span class="todo TODO">TODO</span> EmacsPP0 (Emacs - Punto Presenza 0)</h3>
<div class="outline-text-3" id="text-org009fd72">
<p>
<b>una normale giornata Emacsiana nel quartiere ZeroNet</b>
</p>
</div>
<div id="outline-container-org20f08bb" class="outline-4">
<h4 id="org20f08bb">In Scrittura</h4>
<div class="outline-text-4" id="text-org20f08bb">
</div>
<ul class="org-ul">
<li><a id="org3b0ff4d"></a>sudo mount /home/schizo/AI<br />
<div class="outline-text-5" id="text-org3b0ff4d">
</div>
</li>
<li><a id="org1ae2c52"></a>python /dove/è/installata/ZeroBundle/ZeroNet/zeronet.py<br />
<div class="outline-text-5" id="text-org1ae2c52">
<p>
è possibile avviare zeronet senza lanciare il browser?<br />
ovviamente!<br />
basta lanciare lo script <i>zeronet.py</i> piuttosto che <i>start.py</i> che generalmente viene lanciato da <i>ZeroNet.sh</i>
</p>
</div>
</li>
<li><a id="org4bd108f"></a>M-x gnus<br />
<div class="outline-text-5" id="text-org4bd108f">
</div>
</li>
<li><a id="org3616d88"></a>M-x elfeed-update<br />
<div class="outline-text-5" id="text-org3616d88">
<p>
dopo aver riprovato <i>newsticker</i>:
</p>
<blockquote>
<p>
Newsticker provides a newsticker for Emacs.  A newsticker is a thing
that asynchronously retrieves headlines from a list of news sites,
prepares these headlines for reading, and allows for loading the
corresponding articles in a web browser.
</p>
</blockquote>
<p>
integrato in <i>Emacs</i>
</p>

<p>
e RSS feeds
</p>
<blockquote>
<p>
Org can add and change entries based on information found in RSS feeds
and Atom feeds.  You could use this to make a task out of each new
podcast in a podcast feed.  Or you could use a phone-based
note-creating service on the web to import tasks into Org.
</p>
</blockquote>

<p>
mi son trovato di fronte <i><a href="https://github.com/skeeto/elfeed">elfeed</a></i>! oserei dire che non c'è un paragone con gli altri:<br />
essenziale, veloce&#x2026;<br />
c'è pure <i>elfeed-org</i>:
</p>
<blockquote>
<p>
Maintaining tags for all rss feeds is cumbersome using the regular
flat list where there is no hierarchy and tag names are duplicated
a lot.  Org-mode makes the book keeping of tags and feeds much
easier.  Tags get inherited from parent headlines.  Multiple files
can be specified to separate your private from your work feeds for
example.  You may also use tagging rules to tag feeds by entry-title
keywords.  
</p>
</blockquote>
<p>
See <a href="https://github.com/remyhonig/elfeed-org">https://github.com/remyhonig/elfeed-org</a> for usage.
</p>
</div>
</li>

<li><a id="org52c8f40"></a>eww<br />
<div class="outline-text-5" id="text-org52c8f40">
</div>
</li>
<li><a id="org6506713"></a>M-x du-w<br />
<div class="outline-text-5" id="text-org6506713">
</div>
</li>
<li><a id="org029167e"></a>M-x org-capture<br />
<div class="outline-text-5" id="text-org029167e">
</div>
</li>
<li><a id="orge04875c"></a>M-x org-publish<br />
<div class="outline-text-5" id="text-orge04875c">
</div>
</li>
<li><a id="orgdd414e5"></a>rawdog -uw<br />
<div class="outline-text-5" id="text-orgdd414e5">
</div>
</li>
<li><a id="org81b7f7e"></a>Feedbot<br />
<div class="outline-text-5" id="text-org81b7f7e">
</div>
<ul class="org-ul">
<li><a id="orgddbdd88"></a>versione ZeroBlog<br />
<div class="outline-text-6" id="text-orgddbdd88">
</div>
</li>
<li><a id="orgfa982ce"></a>versione ZeroMe<br />
<div class="outline-text-6" id="text-orgfa982ce">
</div>
</li>
</ul>
</li>
</ul>
</div>
<div id="outline-container-org8df527c" class="outline-4">
<h4 id="org8df527c">In Lettura</h4>
<div class="outline-text-4" id="text-org8df527c">
<p>
&#x2026;
</p>
</div>
</div>
</div>
<div id="outline-container-org9526946" class="outline-3">
<h3 id="org9526946"><span class="todo TODO">TODO</span> XMLtoSQL</h3>
<div class="outline-text-3" id="text-org9526946">
<p>
cercare un convertitore xml &gt; DB per elaborare un feeding su ZeroHello di qualsiasi Zito che produca feed
</p>
</div>
</div>

<div id="outline-container-orgacf5ad7" class="outline-3">
<h3 id="orgacf5ad7"><span class="todo TODO">TODO</span> 0ERC</h3>
<div class="outline-text-3" id="text-orgacf5ad7">
<p>
manca un client IRC che si possa interfacciare a ZeroMe
</p>
</div>
</div>

<div id="outline-container-org0e7ccdd" class="outline-3">
<h3 id="org0e7ccdd"><span class="todo TODO">TODO</span> ASCIICAM</h3>
<div class="outline-text-3" id="text-org0e7ccdd">
<p>
indagare sulla nostra presenza, almeno supposta, davanti a i monitor: porre un ulteriore livello di [pre|assenza]
</p>
</div>

<div id="outline-container-org85ecfcc" class="outline-4">
<h4 id="org85ecfcc">HasciiCam :: ASCII art for the masses</h4>
<div class="outline-text-4" id="text-org85ecfcc">
<p>
<b>Introduction</b> <img src="https://www.dyne.org/wp-content/uploads/2011/12/jaromil-hascii-sm.png" alt="jaromil-hascii-sm.png" />
</p>

<blockquote>
<p>
HasciiCam makes it possible to have live ascii video on the web. It captures video from a tv card and renders it into ascii letters, formatting the output into an html page with a refresh tag, or in a live ascii window, or in a simple text file. It gives the possiblity to anybody that has a bttv card, a unix box and a cheap modem line to show live (h)ascii video can be viewed without any need for extra applications, plugins, java etc.
</p>
</blockquote>

<p>
<a href="https://www.dyne.org/software/hasciicam/">https://www.dyne.org/software/hasciicam/</a>
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-org867865e" class="outline-2">
<h2 id="org867865e"><span class="done DONE">DONE</span> Telegra.ph&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="lisp">lisp</span>&#xa0;<span class="orgmode">orgmode</span>&#xa0;<span class="telegraph">telegraph</span></span></h2>
<div class="outline-text-2" id="text-org867865e">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-23 gio&gt; </span></span> sono riuscito a trasformare le pagine di <i>Telegra.ph</i> in formato <i>json</i> in modo tale da poterle acquisire attraverso <i>org-mode</i>;<br />
il tutto viene gestito da questo piccolo script in <i>elisp</i>:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">telegraph.el</span>

(<span style="color: #346604;">provide</span> '<span style="color: #204a87; font-weight: bold;">telegraph-json-page</span>)

(<span style="color: #346604;">defun</span> <span style="color: #a40000;">telegraph-json-page</span> ()

  (<span style="color: #346604;">interactive</span>)

  (<span style="color: #346604;">setq</span> json-page (substring-no-properties (nth 0 kill-ring)))

  (shell-command
   (format <span style="color: #5c3566;">"cd \"/tmp\"; wget \"https://api.telegra.ph/getPage/%s\?return_content\=true\"; mv \"%s\?return_content\=true\" \"%s\.json\""</span> json-page json-page json-page)
   )

  (<span style="color: #346604;">setq</span> json-file (concat <span style="color: #5c3566;">"/tmp/"</span> json-page <span style="color: #5c3566;">".json"</span>))

  (print json-page (get-buffer <span style="color: #5c3566;">"*scratch*"</span>))

                                        <span style="color: #5f615c; font-style: italic;">;  </span><span style="color: #5f615c; font-style: italic;">(print (json-encode (json-read-file json-file)) (get-buffer "*scratch*"))</span>

  (<span style="color: #346604;">setq</span> json (json-encode (json-read-file json-file)))

  (print json (get-buffer <span style="color: #5c3566;">"*scratch*"</span>))

  (<span style="color: #346604;">let</span> ((case-fold-search t)) <span style="color: #5f615c; font-style: italic;">; </span><span style="color: #5f615c; font-style: italic;">or nil</span>

    (goto-char (point-min))
    (<span style="color: #346604;">while</span> (search-forward <span style="color: #5c3566;">"\\\""</span> nil t)
      (replace-match <span style="color: #5c3566;">"\""</span>))
    )

    (goto-char (point-min))
    (<span style="color: #346604;">while</span> (search-forward <span style="color: #5c3566;">"\\n"</span> nil t)
      (replace-match <span style="color: #5c3566;">"\ "</span>))
    )

)
</pre>
</div>

<p>
sicuramente malissimamente codificato, ma orgogliosamente funzionante!
</p>

<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-24 ven&gt; </span></span> &#x2026; e questa invece è una versione che, pur essendo sempre raffazzonata è mooolto migliore: non si appoggia più all'elaborazione del <i>json</i> a
<i>javascript</i> perché tutti i dati necessari vengono estrapolati direttamente in <i>lisp</i> e presentati bell'e pronti per essere catturati da <i>org-mode</i> e inseriti
nella formazione del nuovo post, senza bisogno di una trasformazione al volo durante il caricamento della pagina <i>html</i>&#x2026; un bel passo avanti!
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #5f615c; font-style: italic;">;</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">telegraph_2.el</span>
<span style="color: #5f615c; font-style: italic;">;</span>

(<span style="color: #346604;">provide</span> '<span style="color: #204a87; font-weight: bold;">telegraph-json-page-2</span>)

(<span style="color: #346604;">defun</span> <span style="color: #a40000;">telegraph-json-page-2</span> ()

  (<span style="color: #346604;">interactive</span>)

  (<span style="color: #346604;">setq</span> json-page (substring-no-properties (nth 0 kill-ring)))

  (shell-command
   (format <span style="color: #5c3566;">"cd \"/tmp\"; wget \"https://api.telegra.ph/getPage/%s\?return_content\=true\"; mv \"%s\?return_content\=true\" \"%s\.json\""</span> json-page json-page json-page)
   )

  (<span style="color: #346604;">setq</span> json-file (concat <span style="color: #5c3566;">"/tmp/"</span> json-page <span style="color: #5c3566;">".json"</span>))

  (<span style="color: #346604;">setq</span> json-prova (json-read-file json-file))
  (<span style="color: #346604;">setq</span> json-list (cdr (assoc 'result json-prova)))
  (print <span style="color: #5c3566;">"#+BEGIN_CENTER"</span> (get-buffer <span style="color: #5c3566;">"*scratch*"</span>))
  (print (concat <span style="color: #5c3566;">"[["</span> (cdr (assoc 'image_url json-list)) <span style="color: #5c3566;">"]]"</span>) (get-buffer <span style="color: #5c3566;">"*scratch*"</span>))
  (print <span style="color: #5c3566;">"#+END_CENTER"</span> (get-buffer <span style="color: #5c3566;">"*scratch*"</span>))
  (print (cdr (assoc 'description json-list)) (get-buffer <span style="color: #5c3566;">"*scratch*"</span>))
  (print (concat <span style="color: #5c3566;">"[["</span> (cdr (assoc 'url json-list)) <span style="color: #5c3566;">"]]"</span>) (get-buffer <span style="color: #5c3566;">"*scratch*"</span>))

  (<span style="color: #346604;">let</span> ((case-fold-search t)) <span style="color: #5f615c; font-style: italic;">; </span><span style="color: #5f615c; font-style: italic;">or nil</span>

    (goto-char (point-min))
    (<span style="color: #346604;">while</span> (search-forward <span style="color: #5c3566;">"\""</span> nil t)
      (replace-match <span style="color: #5c3566;">"\ "</span>))
    )

  )
</pre>
</div>
</div>
<div id="outline-container-org3f74bc3" class="outline-3">
<h3 id="org3f74bc3"><span class="todo TODO">TODO</span> interazione e attenzione</h3>
<div class="outline-text-3" id="text-org3f74bc3">
<p>
adesso lo script:
</p>
<ul class="org-ul">
<li>si prende come nome della pagina <i>telegra.ph</i> da scricare ciò che viene memorizzato nella prima posizione del <i>kill-ring</i> di <i>emacs</i>, quindi se</li>
</ul>
<p>
ci si sbaglia si va a creare dei file assurdi, anche se nella directory <i>tmp</i>
</p>
<ul class="org-ul">
<li>a seconda del <i>current-buffer</i>, in cui ci si trova, il ciclo di ricerca/sostituzione elimina le virgolette, quindi è opportuno lanciarlo dal buffer <b>scratch</b>
dove viene scritto il risultato dell'elaborazione e da dove di eseguirà un bel <i>org-capture</i></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org67fbfd6" class="outline-2">
<h2 id="org67fbfd6"><span class="done DONE">DONE</span> PUBDATE&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="orgmode">orgmode</span></span></h2>
<div class="outline-text-2" id="text-org67fbfd6">
<p>
nell'impostazione di un template di cattura in <i>org-capture-templates</i><br />
ho aggiunto
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #75507b;">:PROPERTIES:</span>
<span style="color: #75507b;">:PUBDATE:</span>  %t
<span style="color: #75507b;">:END:</span>
</pre>
</div>
<p>
in modo tale da automatizzare l'inserimento della data di pubblicazione<br />
utilizzata nella generazione del feed <i>xml</i>
</p>
</div>
</div>
<div id="outline-container-orga458b88" class="outline-2">
<h2 id="orga458b88"><span class="done DONE">DONE</span> Fasi per la pubblicazione di Schiz0&#xa0;&#xa0;&#xa0;<span class="tag"><span class="ai">ai</span>&#xa0;<span class="emacs">emacs</span>&#xa0;<span class="orgmode">orgmode</span>&#xa0;<span class="xml">xml</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-orga458b88">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-17 ven&gt;</span></span>
</p>

<p>
per pubblicare il sito Schiz0 su A/I e ZeroNet insieme ai file <i>xml</i> dei vari feed<br />
queste sono le operazioni in sequenza
</p>

<ul class="org-ul">
<li>pubblicare NoviglobRss</li>
<li>lanciare rawdog</li>
<li>pubblicare Noviglob e SchiZero</li>
<li>eseguire segnatura e pubblicazione di Schiz0</li>
</ul>

<p>
tradotto in un semplice script in <i>elisp</i> da lanciare da emacs&#x2026;
</p>
</div>
<div id="outline-container-orga052849" class="outline-3">
<h3 id="orga052849"><span class="done DONE">DONE</span> (provide 'schiz0-pubblicazione)&#xa0;&#xa0;&#xa0;<span class="tag"><span class="orgmode">orgmode</span></span></h3>
<div class="outline-text-3" id="text-orga052849">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #346604;">provide</span> '<span style="color: #204a87; font-weight: bold;">schiz0-pubblicazione</span>)

(<span style="color: #346604;">defun</span> <span style="color: #a40000;">schiz0-pubblicazione</span> ()
  (<span style="color: #346604;">interactive</span>)
  (org-publish-project <span style="color: #5c3566;">"NoviglobRss"</span>)
  (shell-command <span style="color: #5c3566;">"rawdog -uw"</span>)
  (org-publish-project <span style="color: #5c3566;">"Noviglob"</span>)
  (org-publish-project <span style="color: #5c3566;">"Schizero"</span>)
  (shell-command <span style="color: #5c3566;">"python /directory/di/ZeroBundle/ZeroNet/zeronet.py siteSign "</span>indirizzo<span style="color: #5c3566;">" "</span>password<span style="color: #5c3566;">" --publish;"</span>)
  )
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgf96fd51" class="outline-2">
<h2 id="orgf96fd51"><span class="todo TODO">TODO</span> Webdav&#xa0;&#xa0;&#xa0;<span class="tag"><span class="ubuntu">ubuntu</span></span></h2>
<div class="outline-text-2" id="text-orgf96fd51">
<p>
in <i>Nautilus</i> collegandomi al server con:
</p>
<div class="org-src-container">
<pre class="src src-sh">davs://www.autistici.org/dav/nome_utente
</pre>
</div>

<p>
riesco a montare il filesystem senza problemi d'autenticazione<br />
<b>però</b> viene montato in una sottodirectory <i>run inaccessibile in scrittura durante le fasi di aggiornamento del sito<br />
<b>per cui</b> sono costretto a continuare ad usare /davfs</i>
</p>

<p>
questo comporta che ogni volta che eseguo il "<i>sudo mount directory</i>" dovevo rispondere con un <b>y</b> a:
</p>
<div class="org-src-container">
<pre class="src src-sh">/sbin/mount.davfs: the server certificate is not trusted
  issuer:      Let<span style="color: #5c3566;">'s Encrypt, US</span>
<span style="color: #5c3566;">  subject:     autistici.org</span>
<span style="color: #5c3566;">  identity:    autistici.org</span>
<span style="color: #5c3566;">  fingerprint: 20:91:af:b1:e8:62:fd:b6:3d:0d:2b:68:05:37:f9:f6:1d:85:79:75</span>
<span style="color: #5c3566;">You only should accept this certificate, if you can</span>
<span style="color: #5c3566;">verify the fingerprint! The server might be faked</span>
<span style="color: #5c3566;">or there might be a man-in-the-middle-attack.</span>
<span style="color: #5c3566;">Accept certificate for this session? [y,N]</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgcdfdbcb" class="outline-2">
<h2 id="orgcdfdbcb"><span class="todo TODO">TODO</span> All Interconnected&#xa0;&#xa0;&#xa0;<span class="tag"><span class="orgmode">orgmode</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-orgcdfdbcb">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-16 gio&gt;</span></span>
</p>
</div>

<div id="outline-container-orgbda3260" class="outline-3">
<h3 id="orgbda3260">Feeds</h3>
<div class="outline-text-3" id="text-orgbda3260">
</div>

<div id="outline-container-orgedada5c" class="outline-4">
<h4 id="orgedada5c"><span class="done DONE">DONE</span> generare feed per SchiZero</h4>
<div class="outline-text-4" id="text-orgedada5c">
<p>
e elencarli in una pagina relativa;
</p>

<p>
probabilmente potrebbe avere senso crere due progetti in org:
</p>
<ul class="org-ul">
<li>uno per la generazione di feed interni a Zeronet</li>
<li>uno per la generazione di feed relativi ad A/I</li>
</ul>
</div>

<ul class="org-ul">
<li><a id="org5eac04f"></a><span class="done DONE">DONE</span> aggiungere anche, tramite symlink, il file n0te.org<br />
<div class="outline-text-5" id="text-org5eac04f">
</div>
</li>

<li><a id="org74e4b77"></a><span class="todo TODO">TODO</span> provare a vedere se è possibile includere l'xml<br />
<div class="outline-text-5" id="text-org74e4b77">
</div>
</li>

<li><a id="org5e3d531"></a><span class="done DONE">DONE</span> collegarlo all'utenza Fluss0<br />
<div class="outline-text-5" id="text-org5e3d531">
</div>
</li>
</ul>
</div>

<div id="outline-container-orgcfab04e" class="outline-4">
<h4 id="orgcfab04e"><span class="done DONE">DONE</span> Feedbot-Schiz00</h4>
<div class="outline-text-4" id="text-orgcfab04e">
<p>
attivare un feedbot che pubblichi gli aggiornamenti dei vari xml nel sito Schiz00
</p>
</div>
</div>
</div>
</div>

<div id="outline-container-orge2edeb2" class="outline-2">
<h2 id="orge2edeb2"><span class="todo TODO">TODO</span> Telegram emacs ERC bitlbee purple&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="telegram">telegram</span></span></h2>
<div class="outline-text-2" id="text-orge2edeb2">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-15 mer&gt;</span></span>
</p>

<p target="_blank">
vorrei provare ad accedere a Telegram con ERC;<br />
<i><a href="https://www.bitlbee.org/" target="_blank">bitlbee</a></i>, attraverso la libreria <i><a href="https://wiki.bitlbee.org/HowtoPurple">libpurple</a></i>, offre il plugin <i><a href="https://github.com/majn/telegram-purple">telegram-purple</a></i>
</p>

<p target="_blank">
<a href="https://www.bitlbee.org/user-guide.html" target="_blank">BitlBee User Guide</a>
</p>
</div>
</div>
<div id="outline-container-orgcd56c14" class="outline-2">
<h2 id="orgcd56c14"><span class="done DONE">DONE</span> ID&#xa0;&#xa0;&#xa0;<span class="tag"><span class="orgmode">orgmode</span></span></h2>
<div class="outline-text-2" id="text-orgcd56c14">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-15 mer&gt;</span></span>
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #75507b;">:PROPERTIES:</span>
<span style="color: #75507b;">:ID:</span> id
<span style="color: #75507b;">:END:</span>
</pre>
</div>
<p>
questa proprietà (<i>ID</i>) che genero con la funzione <i>org-id-get-create</i> rendono il post non linkabile nell'elenco generato attraverso <i><a href="http://orgmode.org/worg/code/org-info-js/">org-info.js</a></i>
</p>

<p>
quello di generare l'id (su tutti gli elementi) è un tentativo che ho fatto a fronte del fatto che quando provo a pubblicare il feed <i>rss</i> con <i><a href="https://emacs-doctor.com/blogging-from-emacs.html">ox-rss.el (RSS
2.0 Back-End for Org Export Engine)</a></i> mi viene riportato l'errore
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">save-current-buffer: Symbol&#8217;s function definition is void: org-icalendar-create-uid
</pre>
</div>

<p>
a questo proposito&#x2026;
</p>

<p>
mi rendo conto che è una modifica da lamerone pazzesco però, dopo aver visto la patch <a href="https://lists.gnu.org/archive/html/emacs-orgmode/2014-07/msg00597.html">Fix id generation in ox-rss.el</a>, ho provato semplicemente a commentare la
riga <i>(org-icalendar-create-uid filename 'warn-user)</i> in
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">  (<span style="color: #346604;">let</span> ((bf (get-file-buffer filename)))
    (<span style="color: #346604;">if</span> bf
          (<span style="color: #346604;">with-current-buffer</span> bf
            (org-rss-add-pubdate-property)
            (write-file filename)))
      (find-file filename)
<span style="color: #5f615c; font-style: italic;">;      </span><span style="color: #5f615c; font-style: italic;">(org-icalendar-create-uid filename 'warn-user)</span>
      (org-rss-add-pubdate-property)
      (write-file filename) (kill-buffer))
  (org-publish-org-to
   'rss filename (concat <span style="color: #5c3566;">"."</span> org-rss-extension) plist pub-dir))
</pre>
</div>

<p>
adesso l'<i>xml</i> viene generato
</p>
</div>
</div>
<div id="outline-container-orgf2cbd2d" class="outline-2">
<h2 id="orgf2cbd2d"><span class="done DONE">DONE</span> How to fetch all posts using tumblr API&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tumblr">tumblr</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-orgf2cbd2d">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-15 mer&gt;</span></span>
</p>

<p>
You can put this code in your html or php.
</p>
<div class="org-src-container">
<pre class="src src-js">&lt;script type=<span style="color: #5c3566;">"text/javascript"</span> src=<span style="color: #5c3566;">"http://YourTumblrName.tumblr.com/js?start='post'&amp;num='posts-total'"</span>&gt;&lt;/script&gt;
</pre>
</div>
<p>
It fetches the content of your tumblr into a page, but it not very flexible. I'm still trying to get the dates and tags fetched. And the image quality is not as good as in Tumblr&#x2026; 
</p>
<p target="_blank">
<a href="https://stackoverflow.com/questions/13266515/how-to-fetch-all-posts-using-tumblr-api-or-tumblr-rss-feed" target="_blank">https://stackoverflow.com/questions/13266515/how-to-fetch-all-posts-using-tumblr-api-or-tumblr-rss-feed</a>
</p>

<ul target="_blank" class="org-ul">
<li><a href="https://www.tumblr.com/docs/en/api/v1">Tumblr API v1</a></li>
</ul>
<ul target="_blank" class="org-ul">
<li><a href="https://www.tumblr.com/docs/en/api/v2">Tumblr API</a></li>
</ul>
</div>

<div id="outline-container-org9ab6d18" class="outline-3">
<h3 id="org9ab6d18">How to parse tumblr JSON feed</h3>
<div class="outline-text-3" id="text-org9ab6d18">
<p>
visto che nel JSON file sono presenti solo 20 post preferisco la soluzione precedente, anche se meno bella
</p>
<div class="org-src-container">
<pre class="src src-js">&lt;script type=<span style="color: #5c3566;">"text/javascript"</span> src=<span style="color: #5c3566;">"http://ordine-complicato.tumblr.com/api/read/json"</span>&gt;&lt;/script&gt;

&lt;script type=<span style="color: #5c3566;">"text/javascript&gt;</span>

<span style="color: #5c3566;">var tumblr_api_read = {</span>
<span style="color: #5c3566;">    "</span>tumblelog<span style="color: #5c3566;">": {</span>
<span style="color: #5c3566;">        "</span>title<span style="color: #5c3566;">": "</span>First Title<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>description<span style="color: #5c3566;">": "",</span>
<span style="color: #5c3566;">        "</span>name<span style="color: #5c3566;">": "</span>clintonbeattie<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>timezone<span style="color: #5c3566;">": "</span>US/Eastern<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>cname<span style="color: #5c3566;">": false,</span>
<span style="color: #5c3566;">        "</span>feeds<span style="color: #5c3566;">": []</span>
<span style="color: #5c3566;">    },</span>
<span style="color: #5c3566;">    "</span>posts<span style="color: #5c3566;">": [{</span>
<span style="color: #5c3566;">        "</span>id<span style="color: #5c3566;">": null,</span>
<span style="color: #5c3566;">        "</span>url<span style="color: #5c3566;">": "",</span>
<span style="color: #5c3566;">        "</span>url-<span style="color: #346604;">with</span>-slug<span style="color: #5c3566;">": "",</span>
<span style="color: #5c3566;">        "</span>type<span style="color: #5c3566;">": "</span>regular<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>date-gmt<span style="color: #5c3566;">": "</span> GMT<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>date<span style="color: #5c3566;">": "</span>Wed, 31 Dec 1969 19:00:00<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>bookmarklet<span style="color: #5c3566;">": null,</span>
<span style="color: #5c3566;">        "</span>mobile<span style="color: #5c3566;">": null,</span>
<span style="color: #5c3566;">        "</span>feed-item<span style="color: #5c3566;">": "",</span>
<span style="color: #5c3566;">        "</span>from-feed-id<span style="color: #5c3566;">": 0,</span>
<span style="color: #5c3566;">        "</span>unix-timestamp<span style="color: #5c3566;">": 1333622193,</span>
<span style="color: #5c3566;">        "</span>format<span style="color: #5c3566;">": "</span>html<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>reblog-key<span style="color: #5c3566;">": "</span>TmN3ujDJ<span style="color: #5c3566;">",</span>
<span style="color: #5c3566;">        "</span>slug<span style="color: #5c3566;">": "",</span>
<span style="color: #5c3566;">        "</span>regular-title<span style="color: #5c3566;">": "",</span>
<span style="color: #5c3566;">        "</span>regular-body<span style="color: #5c3566;">": ""</span>
<span style="color: #5c3566;">    }]</span>
<span style="color: #5c3566;">};</span>

<span style="color: #5c3566;">&lt;/script&gt;</span>
</pre>
</div>

<p target="_blank">
<a href="https://pastebin.com/qfdtwzju" target="_blank">https://pastebin.com/qfdtwzju</a>
</p>
</div>
</div>
<div id="outline-container-org290ad39" class="outline-3">
<h3 id="org290ad39">Use tumblr<sub>api</sub><sub>read</sub>.</h3>
<div class="outline-text-3" id="text-org290ad39">
<div class="org-src-container">
<pre class="src src-js">&lt;script src=<span style="color: #5c3566;">"http://ordine-complicato.tumblr.com/bio/json"</span>&gt;&lt;/script&gt;

&lt;script&gt;

  alert(tumblr_api_read.tumblelog.title); <span style="color: #5f615c; font-style: italic;">// </span><span style="color: #5f615c; font-style: italic;">Shows "First Title"</span>

  alert(tumblr_api_read.posts.length); <span style="color: #5f615c; font-style: italic;">// </span><span style="color: #5f615c; font-style: italic;">numero di post</span>

  <span style="color: #346604;">for</span> (<span style="color: #346604;">var</span> <span style="color: #b35000;">i</span>=0;i&lt;tumblr_api_read.posts.length;i++) {
                                                   <span style="color: #346604;">var</span> <span style="color: #b35000;">thisPost</span> = tumblr_api_read.posts[i];

<span style="color: #5f615c; font-style: italic;">//                                                 </span><span style="color: #5f615c; font-style: italic;">alert("This post was created at " + thisPost.date);</span>

                                                   photourl = <span style="color: #5c3566;">"&lt;img style='display: block; border:0px;' src='"</span> + tumblr_api_read[<span style="color: #5c3566;">"posts"</span>][i][<span style="color: #5c3566;">"photo-url-400"</span>] + <span style="color: #5c3566;">"' /&gt;"</span>; 

                                                   document.write(photourl);
                                                   }
&lt;/script&gt;

&lt;script type=<span style="color: #5c3566;">"text/javascript"</span> src=<span style="color: #5c3566;">"http://ordine-complicato.tumblr.com/api/read/json"</span>&gt;&lt;/script&gt;

&lt;script type=<span style="color: #5c3566;">"text/javascript"</span>&gt;
<span style="color: #346604;">var</span> <span style="color: #b35000;">posts</span> = tumblr_api_read[<span style="color: #5c3566;">'posts-total'</span>] <span style="color: #5f615c; font-style: italic;">// </span><span style="color: #5f615c; font-style: italic;">total posts</span>
<span style="color: #346604;">var</span> <span style="color: #b35000;">totalposts</span> = <span style="color: #5c3566;">"&lt;b&gt;Total posts:&lt;/b&gt; "</span>;
document.write(totalposts)
document.write(posts)
&lt;/script&gt;

&lt;script type=<span style="color: #5c3566;">"text/javascript"</span>&gt;
  nmax = 50;
  n = tumblr_api_read[<span style="color: #5c3566;">"posts-total"</span>];
  <span style="color: #346604;">if</span> (n &gt; nmax) n = nmax;
  <span style="color: #346604;">for</span> (i = 0; i &lt; n; i++) {

                  photourl = <span style="color: #5c3566;">"&lt;img style='display: block; border:0px;' src='"</span> + tumblr_api_read[<span style="color: #5c3566;">"posts"</span>][i][<span style="color: #5c3566;">"photo-url-400"</span>] + <span style="color: #5c3566;">"' /&gt;"</span>;  

                  document.write(photourl);

                  }
&lt;/script&gt;

&lt;script type=<span style="color: #5c3566;">"text/javascript"</span>&gt;
    <span style="color: #5f615c; font-style: italic;">// </span><span style="color: #5f615c; font-style: italic;">The variable "tumblr_api_read" is now set.</span>
    document.write(
        <span style="color: #5c3566;">'&lt;a href="'</span> + tumblr_api_read[1][0][<span style="color: #5c3566;">'url'</span>] + 
        <span style="color: #5c3566;">'"&gt;Most recent Tumblr post&lt;/a&gt;'</span>
    );
&lt;/script&gt;
</pre>
</div>

<p target="_blank">
(boh! non ricordo da dove ho tirato fuori questi esempi, penso da <a href="https://pastebin.com" target="_blank">https://pastebin.com</a>)
</p>
</div>
</div>
</div>
<div id="outline-container-orgf6ed61f" class="outline-2">
<h2 id="orgf6ed61f"><span class="todo TODO">TODO</span> Accessing JSON data in elisp&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="json">json</span>&#xa0;<span class="orgmode">orgmode</span>&#xa0;<span class="zeronet">zeronet</span></span></h2>
<div class="outline-text-2" id="text-orgf6ed61f">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-14 mar&gt; </span></span> 
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #346604;">require</span> '<span style="color: #204a87; font-weight: bold;">json</span>)  

(<span style="color: #346604;">let*</span> ((json-object-type 'hash-table)  
       (json-array-type 'list)  
       (json-key-type 'string)  
       (json (json-read-file <span style="color: #5c3566;">"test.json"</span>)))  
  (car (gethash <span style="color: #5c3566;">"projects"</span> json)))  
</pre>
</div>

<p>
The let* is required because otherwise the call to json-read-file will not see the previously bound values as let sets them in parallel&#x2026;  
</p>

<p>
As for the access functions, gethash retrieves a value by key from a hash table, whereas car returns the first list element. If you need a different  
one, you can use nth with an index.  
</p>


<p>
<a href="https://emacs.stackexchange.com/questions/27407/accessing-json-data-in-elisp">https://emacs.stackexchange.com/questions/27407/accessing-json-data-in-elisp</a>
</p>
</div>

<div id="outline-container-orgcf448e6" class="outline-3">
<h3 id="orgcf448e6">Introducing json.el</h3>
<div class="outline-text-3" id="text-orgcf448e6">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-14 mar&gt; </span></span> JSON is a lightweight data interchange format based on a subset of JavaScript. You can read all about JSON at json.org. json.el is a JSON parser and generator for Emacs Lisp, which can produce an Emacs Lisp data structure from a JSON object and vice-versa. It’s been Included with Emacs since February 2008.
</p>

<p>
Using it is pretty straightforward; <a href="http://tess.oconnor.cx/2006/03/json.el">here are some examples</a>.
</p>
</div>

<div id="outline-container-org7616e09" class="outline-4">
<h4 id="org7616e09"><span class="todo TODO">TODO</span> org-json.el &#x2014; conversion between org and json</h4>
<div class="outline-text-4" id="text-org7616e09">
<p target="_blank">
<a href="https://www.emacswiki.org/emacs/org-json.el" target="_blank">https://www.emacswiki.org/emacs/org-json.el</a>
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">Usage:</span>

<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">1. call (org-json-encode) to convert org(in current buffer) to json,</span>
<span style="color: #5f615c; font-style: italic;">;;    </span><span style="color: #5f615c; font-style: italic;">return convert json.</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">2. call (org-json-decode json) to convert json to org,</span>
<span style="color: #5f615c; font-style: italic;">;;    </span><span style="color: #5f615c; font-style: italic;">return converted text.</span>

<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">Example:</span>

<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* i1 [2,3,4]</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* i2 3.4</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* i3 "fdsafs"</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">=&gt; (("i1" . [2,3,4]) ("i2" . 3.4) ("i3" . "fdsafs"))</span>
<span style="color: #5f615c; font-style: italic;">;;</span>

<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* i1</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">[2,3,4]</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* i2</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">3.4</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">=&gt; (("i1"  . [2,3,4]) ("i2" 3.4)).</span>

<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* lv1_1</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">** lv2a 1</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">** lv2b 2</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* lv1_2 "tt"</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">=&gt; (("lv1_1" . (("lv2a" . 1) ("lv2b" . 2))) ("lv1_2" . "tt"))</span>

<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* vect</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">** 0 "idx0"</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">** 1 1.23</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">** 2</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">[5.2, "2.3t", 1]</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">=&gt; (("vect" . ["idx0" 1.23 [5.2 "2.3t" 1]]))</span>

<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">* long_src</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">+begin_src</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">line1</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">line2</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">+end_src</span>
<span style="color: #5f615c; font-style: italic;">;; </span><span style="color: #5f615c; font-style: italic;">=&gt; (("long_src" . "line1\nline2\n"))</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-org6174c1b" class="outline-2">
<h2 id="org6174c1b"><span class="todo TODO">TODO</span> ubuntu 17.10&#xa0;&#xa0;&#xa0;<span class="tag"><span class="ubuntu">ubuntu</span></span></h2>
<div class="outline-text-2" id="text-org6174c1b">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-11-14 mar&gt; </span></span> 
</p>
<ul class="org-ul">
<li>viene segnalata la possibile mancanza di firmware, raven (amdgpu)</li>
<li>ricordarsi di vedere se e possibile eliminare <i>texlive</i>&#x2026; è troppo pesante!</li>
</ul>
</div>
</div>
<div id="outline-container-org1547e0f" class="outline-2">
<h2 id="org1547e0f"><span class="done DONE">DONE</span> Telegra.ph</h2>
<div class="outline-text-2" id="text-org1547e0f">
<p target="_blank">
sono riuscito ad impostare una pagina dove pubblico ciò che attraverso <a href="http://telegra.ph" target="_blank">http://telegra.ph</a> faccio confluire su i miei canali <i>telegram</i>
</p>

<p target="_blank">
il processo è piuttosto stupido e laborioso,<br />
ognuno c'ha i suoi limiti. . .
e quello che ora passa il convento è sulla pagina. . . <a href="./Telegraph.html" target="_blank">Telegraph</a>
</p>
</div>

<div id="outline-container-orgdd2e677" class="outline-3">
<h3 id="orgdd2e677"><span class="todo TODO">TODO</span> Telegraph API</h3>
<div class="outline-text-3" id="text-orgdd2e677">
<p target="_blank">
sicuramente sarebbe bello poter sfruttare le <a href="http://telegra.ph/api" target="_blank">API di Telegraph</a><br />
e quindi bisognerebbe provare a capirci qualcosinina di JavaScript
</p>
</div>
</div>
</div>

<div id="outline-container-orgedb8164" class="outline-2">
<h2 id="orgedb8164"><span class="done DONE">DONE</span> Finalmente! JavaScript&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-orgedb8164">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-01-15 dom&gt;</span></span>
</p>

<p target="_blank">
sono riuscito a far funzionare lo script <a href="http://orgmode.org/worg/code/org-info-js/" target="_blank">org-info.js</a><br />
ed ora la rappresentazione di lunghi file contenenti molti argomenti non è più un problema. . . anzi
</p>
</div>
</div>

<div id="outline-container-orgbc6b715" class="outline-2">
<h2 id="orgbc6b715"><span class="done DONE">DONE</span> Titolo</h2>
<div class="outline-text-2" id="text-orgbc6b715">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-01-16 lun&gt;</span></span>
</p>

<p>
c'è voluto molto per capire che ciò che bloccava lo script era la mancanza di un titolo!
</p>

<p>
più specificatamente,<br />
i miei file "org" contenevano sia un #+TITLE che un #+SUBTITLE<br />
e proprio quest'ultimo scomponeva la riga "html" d'esportazione:<br />
in sostanza è necessario avere
</p>
<p class="verse">
&lt;h1 class=title&gt;titolo&lt;/h1&gt;<br />
</p>
<p>
altrimenti lo script non funziona
</p>
</div>

<div id="outline-container-org0724375" class="outline-3">
<h3 id="org0724375"><span class="done DONE">DONE</span> Timestamp</h3>
<div class="outline-text-3" id="text-org0724375">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-01-16 lun 09:19&gt;</span></span>
</p>

<p>
perché una sezione possa essere collegabile dalla lista ottenuta per tag è necessario anche inserire una data attiva nella prima riga dopo il titolo (anche prima di una sezione
delle <i>PROPERTIES</i>), cosa che può essere ottenuta dall'annotazione <i>CLOSED</i> quando si passa da <i>TODO</i> a <i>DONE</i> o da i template di <i>org-capture</i>
</p>
</div>
</div>
</div>

<div id="outline-container-org3724cc5" class="outline-2">
<h2 id="org3724cc5">Embedding Youtube videos with org-mode links&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-org3724cc5">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2017-01-12 gio 10:27&gt;</span></span>
</p>

<p>
un interessantissimo articolo
</p>

<p target="_blank">
<a href="http://endlessparentheses.com/embedding-youtube-videos-with-org-mode-links.html" target="_blank">http://endlessparentheses.com/embedding-youtube-videos-with-org-mode-links.html</a>
</p>
<div class="org-center">
<p>
<iframe width="640" height="480" src="https://www.youtube.com/embed/ookGv44MMd4" frameborder="0" allowfullscreen></iframe>
</p>
</div>
</div>
</div>

<div id="outline-container-orgb6148e0" class="outline-2">
<h2 id="orgb6148e0"><span class="todo TODO">TODO</span> MobileOrg&#xa0;&#xa0;&#xa0;<span class="tag"><span class="emacs">emacs</span>&#xa0;<span class="tec">tec</span></span></h2>
<div class="outline-text-2" id="text-orgb6148e0">
<p>
<span class="timestamp-wrapper"><span class="timestamp">&lt;2016-12-25 dom&gt;</span></span>
</p>

<p>
verificare l'avanzamento delle nuove versioni
</p>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Autore: SchiZo SchiZo</p>
<p class="email">Email: <a href="mailto:schizo@autistici.org">schizo@autistici.org</a></p>
<p class="date">Created: 2020-06-21 dom 17:27</p>
<p class="creator">Creato con <a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.2.2 (<a href="http://orgmode.org">Org</a> mode 9.0.9)</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
