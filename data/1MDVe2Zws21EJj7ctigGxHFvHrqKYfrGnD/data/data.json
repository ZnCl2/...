{
	"title": "molk blog",
	"description": "Welcome, here I will post some cool interesting news",
	"links": "- [Source code](https://github.com/HelloZeroNet)",
	"next_post_id": 5,
	"demo": false,
	"modified": 1499917669,
	"post": [
		{
			"post_id": 4,
			"title": "Fedora 26 Is Released",
			"date_published": 1499917607.221,
			"body": "_**Brief**: Popular Linux distribution Fedora has a new release. Latest version Fedora 26 brings out GNOME 3.24.2 for the visual changes and packs several other changes under the hood. Fedora 26 also introduces a new Fedora spin based on Lxqt._\n\n[Fedora 26 is here](https://fedoramagazine.org/fedora-26-is-here/)! And for a change, it’s been released on the promised date. I don’t remember the last time when a Fedora version was released on schedule so this is definitely a welcome change.\n\nIf you don’t know already, Fedora is one of the most popular and widely used Linux distribution. It is a community driven project by Red Hat, the billion dollar Open Source company. Fedora comes in three versions namely Workstation (for desktop), Server and Atomic (for containers).\n\nFedora Workstation uses GNOME as the default desktop environment but provides other spins based on KDE, Xfce, Cinnamon, MATE etc.\n\nLet’s look at the new features Fedora 26 brings for us.\n\n## Fedora 26 features\n\nHere are the important new changes in Fedora 26:\n\n*   Default desktop environment GNOME 3.24.2 brings nightlight feature to Fedora. Weather information is in the notification area.\n*   Linux Kernel 4.11.8\n*   GCC 7 (though not all packages have been compiled with GCC 7)\n*   Other major package updates: DNF 2.5, Python 3.6, Golang 1.8, Ruby 2.4, Boost 1.63, OpenSSL 1.1.0\n*   New [Fedora spin based on Lxqt](https://spins.fedoraproject.org/lxqt/)\n*   [Python Classroom](https://labs.fedoraproject.org/python-classroom/): A special Fedora spin for teachers and instructors to use Fedora in their classrooms or workshops for teaching Python\n*   Chinese input improvement\n*   Improved systemd integration\n*   SSSD fast caching is now enabled by default\n*   many under-the-hood improvements, like better caching of user and group info and better handling of debug information\n\nThe complete changelog of Fedora 26 can be found [here](https://fedoraproject.org/wiki/Releases/26/ChangeSet).\n\nUpgrading to Fedora 26 from Fedora 25\n\nIf you are already using Fedora 25, you should be getting a notification about the availability of Fedora 26.\n\nOtherwise, you can manually upgrade to Fedora 26\\. Read the instructions here on [how to manually upgrade to Fedora 26](https://fedoramagazine.org/upgrading-fedora-25-fedora-26/)."
		},
		{
			"post_id": 3,
			"title": "cmus: The Ultimate Music Player",
			"date_published": 1499917509.656,
			"body": "_**Brief**: Listening to music in Linux terminal? Why not? Nothing is impossible when it comes to Linux terminal._\n\nThere is no shortage of music players on Linux. Almost all of them comes with a GUI or Graphical User Interface. Some of them looks really nice and some not so much. Just a while back we published an article about lesser known music players. If you are interested you can take a look at that: all of them are graphical. What about, us, terminal lovers? Do we not deserve a treat?\n\nWell, today I am going to introduce **cmus**. If you are a music enthusiast and love the terminal too, you will have to look no further!\n\nThe official site for cmus describes it perfectly:\n\n> cmus is a small, _fast_ and powerful console music player for Unix-like operating systems.\n\nIt is written in C programming language. So the performance is outstanding and it’s not resource-hungry at all. It is also extensible via external scripts. Check out the [cmus Wiki](https://github.com/cmus/cmus/wiki) on GitHub for more information.\n\nLet’s take a look at the features.\n\n### cmus Features\n\nEvery essential feature a music player needs is present in cmus. Some of the basic ones are:\n\n*   **Supported Formats**: Almost every audio formats are supported on cmus, including the most popular ones – mp3, flac, wav, aac etc.\n*   **Music Library**: cmus is capable of presenting your music collection in a well-organized library. And it is totally intuitive and easy to navigate through. You can search and filter through the tracks seamlessly. It supports Playlists and Play Queue. There is also an integrated file browser if you want to play tracks from outside your library.\n*   **Gapless Playback**: Keep on listening without any break. It can cycle through the whole music library.\n*   **Keybindings**: cmus comes with sensible keyboard shortcuts for performing various actions. And the great thing is — all of those are completely customizable.\n*   **Themes & Customizability**: You can select from pre-defined themes that come with cmus. Or you can create your own! Every little details are customizable in cmus.\n*   **Speed**: Even you have thousands of tracks in your library, it doesn’t affect the startup-time of cmus.\n\nIn short, if you love to use the terminal, there’s no way that you will be disappointed by cmus. That’s how cool cmus is.\n\n### Installation on Ubuntu\n\ncmus is available via the official Ubuntu repository. So, installing is as easy as typing a single command:\n\n```\nsudo apt install cmus\n```\n\nThat’s all! However, if you want to compile it from source you can take a look at the [README](https://github.com/cmus/cmus/blob/master/README.md) file.\n\n### Getting started with cmus\n\nBeing a console application, it takes a little while to get used to cmus. But once you do, it’s totally worth it. The first thing you will want to do after installation is run this command:\n\n```\nman cmus-tutorial\n```\n\nThis will show you a basic tutorial for using cmus. For further details, try:\n\n```\nman cmus\n```"
		},
		{
			"post_id": 2,
			"title": "Difference Between apt vs apt-get Explained",
			"date_published": 1499917438.608,
			"body": "_**Brief**: This article explains the **difference between apt and apt-get** commands of Linux. It also lists some of the most commonly used apt commands that replace the older apt-get commands._\n\nOne of the noticeable [new features of Ubuntu 16.04](https://itsfoss.com/features-ubuntu-1604/) was the ‘introduction’ of apt command. The reality is that the first stable version of apt was released in the year 2014 but people started noticing it in 2016 with the release of Ubuntu 16.04.\n\nIt became common to see `apt install package` instead of the usual `apt-get install package`. Eventually, many other distributions followed Ubuntu’s footsteps and started to encourage users to use apt instead of apt-get.\n\nYou might be wondering what’s the difference between apt-get and apt? And if they have a similar command structure, what was the need for the new apt command? You might also be thinking if apt is better than apt-get? Should you be using the new apt command or stick with the good old apt-get commands?\n\nI’ll explain all these questions in this article and I hope that by the end of this article, you’ll have a clearer picture.\n\n## apt vs apt-get\n\nBefore we see the _difference between apt and apt-get_, let’s go into the backdrop of these commands and what exactly they try to achieve.\n\n### Why apt was introduced in the first place?\n\n[Debian](https://www.debian.org/), mother Linux of distributions like Ubuntu, Linux Mint, elementary OS etc, has a robust packaging system and every component and application is built into a package that is installed on your system. Debian uses a set of tools called [Advanced Packaging Tool](https://wiki.debian.org/Apt) (APT) to manage this packaging system. Don’t confuse it with the command apt, it’s not the same.\n\nThere are various tools that interact with APT and allow you to install, remove and manage packages in Debian based Linux distributions. apt-get is one such command-line tool which is widely popular. Another popular tool is [Aptitude](https://wiki.debian.org/Aptitude?action=show&redirect=aptitude) with both GUI and command-line options.\n\nIf you have read my [guide on apt-get commands](https://itsfoss.com/apt-get-linux-guide/), you might have come across a number of similar commands such as apt-cache. And this is where the problem arises.\n\nYou see, these commands are way too low level and they have so many functionalities which are perhaps never used by an average Linux user. On the other hand, the most commonly used package management commands are scattered across apt-get and apt-cache.\n\nThe [apt commands](https://manpages.debian.org/jessie/apt/apt.8.en.html) have been introduced to solve this problem. apt consists some of the most widely used features from apt-get and apt-cache leaving aside obscure and seldom used features. It can also manage [apt.conf](https://linux.die.net/man/5/apt.conf) file.\n\nWith apt, you don’t have to fiddle your way from apt-get commands to apt-cache. apt is more structured and provides you with necessary options needed to manage packages.\n\nBottom line: apt=most common used command options from apt-get and apt-cache.\n\nDifference between apt and apt-get\n\nSo with apt, you get all the necessary tools in one place. You won’t be lost under tons of command options. The main aim of apt is to provide an efficient way of handling package in a way “pleasant for end users”.\n\nWhen Debian says “pleasant for end users”, it actually means that. It has fewer but sufficient command options but in a more organized way. On top of that, it enables a few options by default that is actually helpful for the end users.\n\nFor example, you get to see the progress bar while installing or removing a program in apt.\n\napt also prompts you with the number of packages that can be upgraded when you update the repository database.apt shows the number of packages that can be upgraded\n\nYou can achieve the same with apt-get as well if you use additional command options. apt enables them by default and takes the pain away."
		},
		{
			"post_id": 1,
			"title": "Hello world",
			"date_published": 1433033779.604,
			"body": "Well, zeronet is cool"
		}
	]
}