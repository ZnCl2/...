{
	"title": "Ansho Rei",
	"description": "(暗証零)\nContact me on ZeroMail: <anshorei@zeroid.bit>\nor in [the ZeroNet Matrix chatroom ](https://matrix.to/#/!hqPCbJufgVqRCHxgTD:matrix.org?via=amorgan.xyz&via=matrix.org)\n\n### Sitemap\n[My Projects](/13T79X7tG8Fi3EZCev3xU1wYTtFHHnqWGQ/?Post:12)\n[Project Statuses](/13T79X7tG8Fi3EZCev3xU1wYTtFHHnqWGQ/?Post:17)\n[Recommended Zites](/13T79X7tG8Fi3EZCev3xU1wYTtFHHnqWGQ/?Post:10:Ansho+Rei+Recommends)",
	"links": "- [Source code](https://github.com/HelloZeroNet)",
	"next_post_id": 24,
	"demo": false,
	"modified": 1623887935,
	"post": [
		{
			"post_id": 23,
			"title": "Logging in to Facebook",
			"date_published": 1623884149.469,
			"body": "I've been more or less gone from Facebook since 2015\\. I did sign in during November 2019 to test some things that I'd read about, but that was it. With the lockdowns (maybe?) coming to an end, I thought it'd be a good time to catch up with old friends. So I looked up my password in my Keepass database and filled in the log-in form.\n\nThat was two weeks ago.\n\nTo my surprise I was greeted by a message telling me to “Verify [my] identity”.\n\n“Ok, sure I thought,” not realizing just how long it would take me to get my account back.\n\nThree options were offered:\n\n- Verify by e-mail (ending in scarlet.be)\n\n- Verify by phone (+32***90)\n\n- Verify by phone (+44***72)\n\nTo those who are not aware: scarlet is defunct, so that e-mail address that I had used to create my account back in the 2000's was off the table. The phone number ending in 90 is my old Belgian SIM card from before I went to the UK and the other one is my old UK number. Both are defunct.\n\nThat wasn't looking too good.\n\nWhat was sorely missing from the list of recovery options was my gmail address - despite it having been configured as my _**primary**_ e-mail address in the Facebook settings (if you happen to have sent any mails there I'm sorry to say they've likely been lost in an unfathomable deluge of spam). Rather to my surprise I was still free to reset my account's password as many times as I liked using that e-mail address, but any log-in attempt would be met with the same cold “Verify your identity” (and no amount of warmth would have made it any more agreeable, don't you get any funny ideas you crazy UX designers).\n\n“How do I get in contact with someone at Facebook to help me get my account back?”\n\nThe answer: you don't.\n\nNo postbox to write to. No number to call. No address to e-mail to.\n\nPerusing at length the FAQ on the Facebook help page I did read some interesting tips that could help me out. One such suggestion was to (I'm paraphrasing here, a tad too lazy to find the exact quote): “log in from a known device, or access your account from a device where you're already logged in.”\n\nAnd that honestly sounded like a great idea. It just so happens I have several old backups lying around, including backups of my browser profiles, some of which go back maybe ten years - certainly since before I quit Facebook. So I booted from some old hard drives, and wouldn't you know it, before long I was logged in ... kinda.\n\nI could see how many messages I had (not many, in case anyone was wondering) and then I got logged out. Without knowledge of the inner workings of Facebook it's hard to say what the exact reason for this is, it's possible that I never even got to see the actual message count and it was just a glimpse of some 6+ year old browser cache before it got discarded by the new Javascript code). Maybe it would've been fine if only I hadn't reset my password, thereby invalidating the old session I was hoping to resurrect. In hindsight it would've been a miracle if this had worked out, but I was nevertheless happy to have ventured into those old drives.\n\nFor some, as of yet, unexplainable reason there was a fourth option, but it's a little bit shy. When I clicked any of the recovery options and then clicked “back”, a new option would appear: “Ask your friends for help.”\n\nGreat!\n\n> Since you haven't selected any trusted friends, five random accounts have been selected from among your friend list. Call three of these friends, or talk to them in person. Ask them to visit the recovery page. Each friend will give you a code. Enter them below.\n\nLet's just hope none of them quit Facebook or died...\n\nIt was very reassuring to see a _severe_ over-representation of Muziekampers in the list, they've always been a very friendly bunch and I was eager to get back in touch.\n\nAt this point we're coming to a close, but there's one last bit of fun to be told to round it all off. But before I do that I want to thank those who helped me get my account back. I still don't like Facebook and I won't be using it a lot, but I am glad to retain control (in as far as Facebook gives a user control) of my account. Thank you all!\n\nWhen it came to contacting this random selection of friends I used my sister's account to send them all a short message and a screenshot of the recovery instructions. And then I realized that this looked like a scam. If I had received a message like that, there would have been no conclusion for me to draw other than: “_this is a scam._ _She's been hacked and they're asking for some codes from my facebook account? Better not respond to that.”_\n\nSo we hurriedly made a short video of ourselves and sent that as well to prove that she had not been hacked and we were serious. But since we thought the whole situation was so ridiculous we couldn't stop laughing and it probably looked more like a prank at that point. Sadly we didn't show a newspaper to prove the date, but in the end All's Well."
		},
		{
			"post_id": 22,
			"title": "1773",
			"date_published": 1622801384.697,
			"body": "'t Was winter when Rotch docked his barge\nIt's quantity of tea quite large\nA deal was made, 't was far from lean\nAnd part of it was for the queen.\n\nHooded men in th'midst of night\nBoarded the ship without a fight\nAnd woe then, &nbsp;&nbsp;&nbsp; what dire fate\nThey unburdened it of every crate.\n\nLeft to float and left to sink\nNow only for the fish to drink\nWere lost three hundred forty-two\nAnd there was nothing he could do."
		},
		{
			"post_id": 21,
			"title": "What Orwell Got Wrong",
			"date_published": 1621515160.944,
			"body": "Nearly everyone has come across some version of the George Orwell quote that goes like this:\n\n> Freedom is the freedom to say that two plus two make four. If that is granted, all else follows.\n\nAlthough I do not think he was wrong when he wrote that, I believe it was wrong _of_ him to write that.\n\n## The Real Meaning\n\nThe meaning behind the quote is quite clear in context: in the totalitarian state lead by Big Brother under whose dictatorship Winston Smith lives people find themselves in a state of doublethink.\n\n## The Danger"
		},
		{
			"post_id": 20,
			"title": "Rewriting ZeroGallery From Scratch",
			"date_published": 1614554805,
			"body": "Back in November of 2020 I started rewriting the project that started my developers journey through ZeroNet more than 2 years ago: ZeroGallery. If you want to know more about the history of that project I recommend reading the open letter that I wrote to the original developer, also available on this blog: [Where is Sorasumi now?](http://localhost:43110/13T79X7tG8Fi3EZCev3xU1wYTtFHHnqWGQ/?Post:19:Where+is+Sorasumi+Sayo+now+).\n\n![0-gallery.jpg (1200x711)](data/img/post_20_0-gallery.jpg)\n\n_The original ZeroGallery frontend \"0-gallery\", developed by Sorasumi in 2017._\n\n* * *\n\nI've never been happy with how my ZeroGallery frontend 1+Gallery turned out, but it's a zite that is in active use and one of which I'm very familiar with the implementation details. The performance of ZeroGallery has been improved enormously since the days of Sorasumi, mostly due to two events.\n\nThe first was the realization that all the file hashes in the entire hub had to be recalculated on every sign. This was avoided by giving every gallery it's own `content.json` file in the new gallery hubs.\n\nThen in the summer of 2019 I received a complaint that the hubs were slowing down drastically as they grew in size, so I rewrote a lot of the GalleryHub code so it would no longer use a `fileQuery` and instead use a `dirList`.\n\nAs I've been working on my Rust implementation of ZeroNet itself over the past year I've published several libraries related to site development as well (e.g. zeroframe-rs, zero-yew-components and void-css). There's been a need to test these libraries out \"in production\" (as far as any ZeroNet hobby project can be considered to be as such).\n\n![1pgallery_v1.2.1.jpg (1200x663)](data/img/post_20_1pgallery_v1.2.1.jpg)\n\n_The latest version of my 0-gallery fork \"1+Gallery v1.2.1\"_\n\nThe result of this is that I started rewriting the entire ZeroGallery frontend from scratch. I will fully admit that Rust is the wrong choice for a frontend project such as this, but that's not something that will dissuade me from trying. Had I used Svelte instead, as I've done with several other projects of mine, this project would have been a lot easier. I've thoroughly enjoyed the challenge to write this project with the Yew framework though.\n\nI wanted to use [Mogwai](https://lib.rs/crates/mogwai) at first, as it tries to apply the core design principles of Svelte in a Rust web framework (which should result in better performance), but the project is missing too many features for me to use it effectively. [Yew](https://yew.rs/) has so far fulfilled all of my needs, even though I've had to use some bandages while [waiting for bugfixes](https://github.com/yewstack/yew/pull/1529). It is still a little rough and certainly much more verbose, but I've really grown to like it already and I'm confident it will get even better.\n\nBy the end of December I had the layout and most of the passive features ready (searching and browsing). And over the past two months I've gradually been adding some interactive features as well (favourites, comments and bookmarks). If you want, you can [give it a try already](/1PGaLLNiadMzrmw6MMMnpZnskwFcdgZoS4/wasm), if you've already downloaded [1+Gallery](/1PGaLLNiadMzrmw6MMMnpZnskwFcdgZoS4) you won't even have to download a new site as it's co-hosted at the same address. The project is an almost 1-to-1 drop-in replacement for the old 1+Gallery which supports all of the query filters and URL's that you might be used to.\n\n![g4z_v0.1.1.jpg (946x448)](data/img/post_20_g4z_v0.1.1.jpg)\n\n_The current homepage of the \"g4z\" ZeroGallery frontend v0.1.1_\n\n# Design Goals\n\n*   Drop-in replacement for 1+Gallery\n*   Intuitive keyboard navigation\n*   Minimalist and pleasing interface\n*   Support for ZeroNet Dark/Light themes\n*   All-in-one user and administrator frontend\n\n## Drop-in Replacement for 1+Gallery\n\nAt some point I'd like to fully replace 1+Gallery with g4z in-place, so it's important to me that URL's pointing to the old site remain valid. Luckily I think Sayo did a good job with the routes and the query system, so apart from new features like the `hub:` and `lang:` filters or negation `!:tag`, I've never felt the need to change anything there.\n\nI've had to implement my own yew router component - which I would've had to anyway because the official one does not even work with ZeroNet. So this was a good opportunity to make it similar to the Vue-router that Sayo had used.\n\nAll of the old routes will remain valid and equivalent in g4z.\n\n## Intuitive Keyboard Navigation\n\nAlthough I've never gotten into DE's like [Ratpoison](https://www.nongnu.org/ratpoison/), I have for a long time shared their dislike for mice. A clearnet website that has done a good job supporting keyboard navigation is [Duckduckgo](https://help.duckduckgo.com/duckduckgo-help-pages/features/keyboard-shortcuts/). I want the same to be true for this ZeroGallery frontend.\n\nThe shortcuts that are currently supported or planned can be found on the [about page of the beta](/1PGaLLNiadMzrmw6MMMnpZnskwFcdgZoS4/wasm/?!/about). Some of these are still subject to change.\n\n## Minimalist and Pleasing Interface\n\nI like a lot of the design choices that Nofish went with for some of his sites, particularly ZeroBlog, ZeroTalk and ZeroMe. So in December I spent a lot of my holidays working on Void-CSS which aims to offer a developer experience similar to that of Bulma with ZeroNet's aesthetics in mind. This also means built-in support for Dark/Light themes.\n\nVoid-CSS is still very much a work-in-progress at this point, I've only focused on parts of it that I needed as I was working on this project. There's some [rough documentation available on the Git Center site](/1Voidkg555KCaeXERBWbsWg1LD3fdaFCB/docs/). This documentation is generated automatically from the source code, so it should always be up-to-date.\n\n![void-css.png (1322x572)](data/img/post_20_void-css.png)\n\n_Documentation for the Void-CSS styling framework_\n\n## All-in-one User and Administrator Frontend\n\nSo far most of my focus has been on the user's experience, but the idea is to also improve that of the hub owners by offering them better tools to manage their hubs. This includes everything from creating, updating and removing galleries to banning and increasing storage allocation for users.\n\nDue to ZeroGallery's architecture it's hard for users to discover what hubs are available. This was an informed design choice, and it's still one that I never want to revert, but I think there's room for some built-in discovery features.\n\nI realized this was a problem very early on, and tried the most primitive of solutions: people could send me their hubs and I would add them if I considered them to be \"safe\". Initially this was done by checking that the content of the site was legal by the standards of Western countries, but after considering that some may wish to host child-friendly content on the site this was soon changed to content that fell within a general understanding of what is considered SFW. This solution introduces several new problems:\n\n1.  It makes me as developer a necessary part of the site's functioning.\n2.  It makes me as developer responsible for content linked on the site.\n3.  People needed to send me their hubs to opt in.\n\nThe nature of censorship resistant networks is such that unsavory content that one would rather avoid will inevitably be available. I'm a strong believer that proper site architecture makes it so that a user should only encounter that which they are looking for.\n\nBy limiting the content on ZeroGallery to that of the hubs one has downloaded and thanks to the nature of hubs as 'single-owner' kingdoms, as long as you trust the owners of your downloaded hubs to stick to their hub's mission statements you will never be unpleasantly surprised.\n\nThe best model for content discovery in a decentralized system is one based on a Web-of-Trust (WOT), which in the case of my primitive solution that I mentioned earlier consisted of you - the user - trusting me to only add \"safe\" sites. Seeing as the architecture of ZeroGallery already assumes that the user trusts the owners of hubs they have downloaded, it seems like an obvious idea to allow hub owners to add recommendations, a bit like the old \"_Our friends_\" lists that you used to find on sites before Silicon Valley conquered the clearnet.\n\nHere's how it would work: On the Hub management page owners can add links to other hubs they have downloaded to a list. When a user downloads their hub, they will also download this list of recommended hubs and these will will be displayed on a new Discovery tab on the [Hubs](/1PGaLLNiadMzrmw6MMMnpZnskwFcdgZoS4/wasm/?!/l) page where you will see which hubs recommend which hubs that you have not downloaded yet.\n\nBy implementing it this way discovery will form a natural web of related hubs, without input or responsibility required from my part. The vision I have for this feature is one where communities form naturally around shared interests. This, of course, will all depend on hub owners actually using the new features when they are ready."
		},
		{
			"post_id": 19,
			"title": "Where is Sorasumi Sayo now?",
			"date_published": 1588450181,
			"body": "This open letter addressed to Sorasumi Sayo was posted May 2, 2020 on ZeroTalk. In January 2021 I decided to copy it to my personal blog, where I think it will be of more value. I also backdated it to when I initially posted it. Spelling errors were left uncorrected on purpose.\n\n* * *\n\n*   15th of July 2017 [Sorasumi Sayo](/sorasumi.bit/) joins [ZeroMe](/Me.ZeroNetwork.bit/?Profile/1GrEenUGRWnzaNZjR3XsQa6dQgdPDTyt7i/1JVxDWmnkRf72L1z5EfJofptZYodRw7R2h/jdfq@zeroid.bit) and the day after advertizes his new zite 0-gallery.\n\n*   December 2nd 2017 Sorasumi Sayo puts the source code to his Zite 0-gallery on Git Center.\n\n*   November 2018 I fork his zite and created [1+Gallery](/1PGaLLNiadMzrmw6MMMnpZnskwFcdgZoS4/) which I'm still regularly improving to this day.\n\n*   Because Sayo never published the source code to his cloneable Gallery Hubs, I built my own from scratch: GalleryHub+\n\nWhenever I've added new features, are changed the design, I've asked myself what Sayo would think of where I've taken his little project. I've ironed out some bugs he probably never knew about, made a more unified interface (although it could still use a lot of love), and added more new features than I can remember (grid view, filtering options, bookmarks, language flags, favourites, paging, fullscreen mode, image preloading, chapters, etc.). And there's a lot more in store for the project.\nI don't often advertise it anymore because I just don't think it's ready, I haven't even announced any of the updates I've made since last summer and that one was because I needed to tell hub owners to update.\n\nSayo was last active on ZeroMe on 28th of November 2018, and seeing as I first discovered ZeroNet during the summer earlier that year, our time on ZeroNet overlaps, but I don't believe we ever interacted in those couple of months.\n\nDoes anyone know where he's still active today? One day I'd like to thank him for the project I inherited and ask him whether he's proud of what it has become.\n\nSayo,\nIf your read this:\nThank you!\n\nYours Sincerely,\nAnsho"
		},
		{
			"post_id": 18,
			"title": "The Scalability of ZeroNet and Zites",
			"date_published": 1610318733,
			"body": "With the fallout of the recent Silicon Valley purges and their worrying take-down of Parler there have been questions about the scalability of ZeroNet that I thought I should address.\n\nWhen I first discovered ZeroNet about 3 years ago I saw a lot of value in it, but there were also two problems that immediately stood out to me, and one of these was scalability (the other one was moderation, read my earlier blog posts to know more about that). These issues actually held me from joining the network for a while, but I'm very glad that I did decide to join in the end.\n\nThere are some things ZeroNet is good at, and there's others that it is not. Therefore it doesn't make much sense to talk about the scalability of ZeroNet itself. The focus should instead be on the scalability of specific types of site. That said there are some things worth mentioning about the whole of ZeroNet as well.\n\n* * *\n\n# Bottlenecks in ZN's Design\n\nThere are some bottlenecks in ZeroNet: trackers and certificate providers. Just as with bittorrent, trackers are used to help peers find one another. These trackers are a \"central\" part in the decentralized network that could be overloaded or attacked. In practice there's a lot of them, and it'd be costly to DDOS them all, but it can be done. There is are some solutions to this problem:\n\n1\\. As the network grows, so will the amount of people willing to run trackers for it.\n\n2\\. If a developer adds support for DHT (Distributed Hash Table), ZeroNet will no longer depend solely on trackers for peer discovery.\n\n# Scalability for Specific Use-cases\n\n## Highly Scalable ZeroNet Use-cases\n\n*   Blogs (e.g. ZeroBlog)\n\n*   Personal websites\n\n*   Small communities\n\n*   Repositories\n\nBecause hosting capacity and demand grow together with the number of peers a site has, any site that has fairly constant content and a low-ish amount of interaction can scale indefinitely.\n\n## Somewhat Scalable ZeroNet Use-cases\n\n*   Some-to-many Publishing (e.g. ZeroGallery)\n\n*   Indexing sites (e.g. Git Center)\n\nSites that use mergers can scale very well because users don't have to download everything to use the site, each user only downloads the parts they want. In the case of Git Center users download the repositories they are interested in, and in the case of ZeroGallery they download the gallery hubs they want to follow.\n\nThese can not scale indefinitely, there's a number of repositories or hubs beyond which the performance of the site will suffer, but it is too early to say where that point lies, and I also have no doubt that when we find it we will be able to move that point further along by improving the software, but we won't be able to do so forever.\n\n## Poorly Scalable ZeroNet Use-cases\n\n*   Social networks (e.g. ZeroMe)\n\n*   Youtube clones (e.g. KopyKate)\n\nBasically anything that is supposed to grow until everyone uses it, and that keeps data forever. That's not to say it's not possible to create Youtube-likes or social networks that scale far, but the current ones that exist will not scale far enough. KxoVid was an attempt to make video hosting on ZeroNet more scalable, but the developer moved on to do other things.\n\n# How to Improve Zite Scalability\n\n*   Split the zite into smaller sub-communities that do not need to download each other's content. E.g. **ZeroTalk** splits by language, **ZeroGallery** splits by hub, **Git Center** splits by repository, **MCE** splits by board. There's two major ways to do it, the first is by having separate sites for each community (ZeroTalk), the other is to have one merger site with the content spread over separate sites that are purely content hosts (ZeroGallery, Git Center, MCE).\n\n*   Make files optional: This is mostly one for personal sites, but something Revolution Pirate Radio struggled a lot with. ZeroNet will refuse to download a site whose required files are over 10MB, the user will first be asked whether they want to allow the site to download more than that. Sometimes you can't fit the required files for your site in 10MB, and that's not a problem, but try to slim it down as much as possible.\n\n*   Smart use of content.json inclusion: This is good for sites with a lot of optional content growth. Instead of having a single content.json in your site's root folder, have a directory tree with smaller collections with their own content.json, this will make updating the site faster.\n\n# Conclusion\n\nOverall I'm not worried about the scalability of ZeroNet. I've been developing sites for the network on and off for about two years now and thanks to some of the problems and solutions that I discovered during that time I have become more confident about it's scalability. When I initially took over the development on ZeroGallery (0-gallery/1+Gallery/g4z) from Sayo the site experienced some very serious scaling issues that were noticeable at under a hundred galleries. Thanks to the cooperation of Nofish and my updates to the ZeroGallery software we're now in a very different place. The last time I received an update from the biggest host on ZeroGallery (sometime during summer 2020), he had uploaded over 10,000 galleries and reported no issues (well, not with scaling at least, there's some open tickets that I haven't fixed because I'm in the process of a full rewrite, my sincerest apologies to those who reported them). How far can it really scale? I'm not sure, but it's something we can only find out by trying."
		},
		{
			"post_id": 17,
			"title": "CI Statuses",
			"date_published": 1601721445,
			"body": "The images will only show up if you have downloaded the corresponding Git Center repository.\n\n* * *\n\n**Zerucrypt**: Cryptography helper for ZeroNet.\n[![build](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d/img/build.svg) ![tests](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d/img/tests.svg)](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d) [![coverage](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d/img/coverage.svg)](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d/coverage) [![documentation](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d/img/doc.svg)](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d/doc)\n\n**ZeroNet Protocol**: Async Rust implementation of the ZeroNet Protocol.\n[![build](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn/img/build.svg) ![tests](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn/img/tests.svg)](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn) [![coverage](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn/img/coverage.svg)](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn/coverage) [![documentation](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn/img/doc.svg)](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn/doc)\n\n**ZeroNet Tracker**: A standalone tracker for ZeroNet.\n[![build](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG/img/build.svg) ![tests](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG/img/tests.svg)](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG) [![coverage](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG/img/coverage.svg)](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG/coverage) [![documentation](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG/img/doc.svg)](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG/doc)\n\n**ZeroFrame-rs**: A ZeroFrame library for Rust WASM projects.\n[![build](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe/img/build.svg) ![tests](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe/img/tests.svg)](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe) [![coverage](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe/img/coverage.svg)](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe/coverage) [![documentation](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe/img/doc.svg)](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe/doc)"
		},
		{
			"post_id": 16,
			"title": "Publishing an Oxygengine Project on ZeroNet",
			"date_published": 1603394860.169,
			"body": "I've been playing with WASM projects on ZeroNet for a while and I've been figured out how to do so with _wasm-bindgen_ a while ago. But now I've taken it another step further by building the Oxygengine Pokemon Demo project and publishing it on ZeroNet.\n\nThere is a number of interesting game engines written in Rust e.g. the very modular Piston, the glossy Amethyst, the minimalist ggez or the refreshingly simple Bevy. Only a few support compiling for WASM right now: Quicksilver, Gate and Oxygengine (fill me in if I'm missing any).\n\n* * *\n\nIn the end I decided upon Oxygengine. Getting the demo's to work outside of ZeroNet took no work at all, everything worked out of the box. Great!\n\nWhen the time came to try it in a zite I could simply reuse my old [wasmget.js](./data/wasm/oxygengine-pokemon/wasmget.js) script. After that all that is needed is the following snippet in your html page:\n\n```\n<body>\n  <canvas\n    id=\"screen\"\n    style=\"margin: 0; padding: 0; position: absolute; width: 100%; height: 100%;\"\n  ></canvas>\n  <script type=\"module\">\n    import init from \"./index.js\"\n    import { getWASM, frame } from \"./wasmget.js\"\n    var buffer = getWASM(`./index_bg.wasm`)\n    init(buffer)\n  </script>\n  <script src=\"./ZeroFrame.js\"></script>\n</body>\n```\n\nYou may need to replace some filenames:\n\n*   `index.js` is the bindings generated by wasm-bindgen\n\n*   `index_bg.wasm` is the WASM file itself\n\n*   `ZeroFrame.js` is the zeroframe library **with cmdp**\n\nYou will also need to disable the `oxygengine-editor-tools/web` feature in Oxygengine, otherwise you will see complaints about WebIPC. (Simply clone Oxygengine and comment out the line from the `web` features)\n\nThis should show you a black screen and some errors in the console log. That's not exactly as it should be, but it's very promising!\n\nIn the past I've had a lot of trouble getting Godot's WASM export to work in ZeroNet, the only way I've found required the \"NOSANDBOX\" permission (highly discouraged), and even then it was rather unstable and would only start once every two tries. So this Oxygengine project starting and crashing every single time was actually looking pretty promising at this point.\n\n## Assets\n\nThe reason nothing is showing is that the default WebFetchEngine in Oxygengine tries to load via a fetch request, which will be blocked by ZeroNet.\n\nTo get around this I've developed my own [ZeroFetchEngine](/146ErZeEWsWbveMYnNkrDKTsRe8yE4JYWa) which uses my [zeroframe-rs library](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe) to fetch resources with a ZeroFrame `fileGet` request. It's also available from the Cratez registry for easy use in Rust projects.\n\nJust add oxygengine-zerofetchengine to your `Cargo.toml` file, import it in `src/lib.rs` with `use oxygengine_zerofetchengine::ZeroFetchEngine;` and then replace `WebFetchEngine::default()` with `ZeroFetchEngine::default()` further down the file. Now you should be able to put everything together in your zite.\n\nYou can [try the demo for yourself here](/13T79X7tG8Fi3EZCev3xU1wYTtFHHnqWGQ/data/wasm/oxygengine-pokemon/).\n\n![oxygengine-pokemon.png (885x924)](data/img/post_16_oxygengine-pokemon.png)"
		},
		{
			"post_id": 15,
			"title": "Using ZeroNet to Build a Point of Sale System",
			"date_published": 1601915607,
			"body": "So, I built a Point of Sale system using ZeroNet, but it's worth going over a little backstory before getting into the details.\n\nAbout three years ago I installed two Point of Sale systems at a small grocery store. The set-up consisted of two Raspberry Pi 3B's, each connected to an UWE ASEP-15 weighing scale, an Epson receipt printer, a touchscreen and a barcode scanner.\n\nWhat surprised me was that Odoo had very little support for weighing scales out of the box. This may have improved since then, but in order to get the set-up to work I had to add support for the scale by implementing the serial communication in Python myself. Apart from that, both me and my client were very happy with the features offered by Odoo. But there were some issues.\n\n* * *\n\nThe main problem was how slow it was. Of course if it had been running on anything other than a Raspberry Pi this would have been far less of a problem, and it didn't help that we imported the entire catalog of products offered by one of the suppliers (some 11k products, 8k of which were never stocked). As it stood, reloading the cache took about half an hour. Fortunately this only had to be done once a week when the prices and inventory were brought up to date.\n\nOther actions like closing a session and generating reports could take anything from five minutes to half an hour. Luckily these too were only used occasionally.\n\n![odoo-pos.gif (1600x895)](data/img/post_15_odoo-pos.gif)​​​​​​​\n_A screenshot of Odoo's Point of Sale interface_\n\nThe Point of Sale itself worked great... Until it stopped working.\n\n*   No connection to the internet.\n\n*   No connection to the printer.\n\nA quick diagnosis showed that it wasn't a hardware fault in the Pi and it wasn't a change in the configuration or due to an update. All I could think of was that it was due to the SD card failing.\n\nLuckily there was a backup system in place, so it would be easy to restore. And while we're at it, why not update Odoo to a newer version?\n\nBecause it doesn't work. I tried with 13.0, 12.0, 11.0 and then I asked myself whether it wouldn't be easier to just write my own Point of Sale software.\n\nThey didn't need a lot of the features offered by Odoo, and a stripped down Point of Sale system would run much smoother, fixing the main gripe they had with their old system.\n\nAs with just about any problem these days, I tend to try to fix them with ZeroNet and/or Rust. So here's what I came up with.\n\n![zeropos-small.png (1600x900)](data/img/post_15_zeropos-small.png)​​​​​​​\n_A screenshot of the ZeroPOS interface_\n\n### ZeroPOS is Point of Sale in a Zite\n\n*   The products and orders are encrypted before being published.\n\n*   Communication is done via a PointOfSale plugin for ZeroNet.\n\n*   Each Point of Sale station can be authenticated individually.\n\n*   Owner of the zite can aggregate closed sessions.\n\n*   With 3k products loading times are so short that the fade-in animation takes longer than the actual loading, even on a Raspberry Pi.\n\n![pos-demo-anon.webp (1296x972)](data/img/post_15_pos-demo.webp)\n_A photo of ZeroPOS in use at the grocery store_\n\nAdding a new workstation or replacing a defective one is very easy. With a standard Raspberry OS image with ZeroNet installed, all that is left to do is visit the zite and install the plugin when prompted. (depending on the devices connected it's possible the pi user still needs to be added to certain groups)\n\nThanks to ZeroNet the Point of Sale also handles internet connection problems effortlessly, since all of the data required during operation is stored locally.\n\nLast weekend the system went into use and the only problems reported were about convenience. So I've streamlined the user experience for the shopkeepers over the weekend and I'm very happy with the result.\n\nOn the administration side of things (closing sessions, generating reports, etc.) there's still a lot of work. These were far less urgent, but as soon as I'm done with them I'll write another post going into more detail about the inner workings of the software. And I'll publish the source code on Git Center so others can use it if they want! Stay tuned."
		},
		{
			"post_id": 14,
			"title": "The Strange Story of Flame-resistant Baby Clothes and U.S. Pajama Regulations",
			"date_published": 1597644894.808,
			"body": "Lately I've enjoyed watching videos by the channel The King of Random, originally started by the late (and great) Grant Thompson. In one of the recent videos made by his successors, “Will An Iron Actually Burn Your Clothes?”, Calli dropped a line that set me on an unexpected path investigating U.S. clothing regulations.\n\n> Cotton will burn [...] I would actually say it's probably more likely to catch fire and here's why: baby clothes actually are no longer allowed to be made out of any sort of natural fiber: cotton or anything like that. They can't do that, at least in the U.S., they're all polyester-made now because it's safer. It's a fire hazard for them to be natural fibers.\n\nAnd I can now confirm that this is true, or at least the regulatory part is[1].\n\n* * *\n\nIn the 1940's a number of children's clothing items were made out of rayon fabric, a cellulose fiber manufactured from wood and agricultural products. Apart from being very versatile in the textures that can be produced, the material is also easy to ignite and capable of flash burning - a phenomenon in which the fire spreads very fast throughout the fabric. After a number of deaths attributed to such clothing items drew outrage, the Flammable Fabrics Act was passed in 1953\\. This act requires children's pajamas and mattresses to be made from flame-resistant fabrics.\n\nThis new act set the bar for safety too high, as is demonstrated by the loophole that was introduced in 1996\\. The act banned the use of a number of fabrics that did not have the risk of flash burns and had not been to blame for the deaths that lead to the regulatory change in the first place.\n\nThe introduction of the loophole was the result of a series of scandalous findings by researchers: In order to meet the flame resistance demanded by the new law companies had been experimenting with fire-retardant chemicals. From 1977 onward more and more of these chemicals were shown to harm children[2] and with that the demand for re-legalization of natural fibers increased.\n\nIn response to this demand the Consumer Product Safety Commission introduced a loophole: pajamas didn't need to be made of fire-resistant fabrics if they were tight-fitting, as these have less surface exposure to oxygen and should therefore burn slower.\n\n[1]: Source: [Clothing Business Guidance](https://www.cpsc.gov/Business--Manufacturing/Business-Education/Business-Guidance/Clothing/)\n[2]: Source: [Brominated and Chlorinated Flame Retardants: The San Antonio Statement](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3002201/)"
		},
		{
			"post_id": 13,
			"title": "How I Learned to Stop Caring and Love the Void",
			"date_published": 1594606930.266,
			"body": "Analytics are everywhere these days. Nearly every little site you visit out on the clearnet includes multiple scripts that track you. This is sold to the owner of the website as a way to help the owner understand their demographic and find out what works, but it is unlikely that this data is not then used by the company providing these analytics tools for other purposes.\n\nShould the act of tracking your users without their consent be considered as inherently sinful?\n\n* * *\n\nOn the one hand these metrics help content creators cater to their audience, this also entails a constraining effect on their creative expression. But if this makes the difference between making a living out of your passion that may be a trade-off you're willing to make.\n\nOn the other hand these metrics help content creators find the sweet spot for when to release new content, maximizing visibility and interactions upon release.\n\nFor a ZeroNet site (aka. zite) it would not be hard to track your users as long as you're willing to stoop to old-net shenanigans. A script that telephones home with browser fingerprints would could perform data collection on anyone not using the Tor Browser, or a similarly locked-down browser.\n\nThis approach would fail within a p2p-web ecosystem, however as a zite has no backend that exclusively the owner has access to. Therefore, should the owner include such a script in an otherwise popular site, there is no reason someone couldn't set up their own clone of it with the data collecting part removed.\n\nAt this very moment there are already blocklists available that aim to keep track of sites containing hidden cryptominers and privacy compromising scripts. While similar lists do exist for the clearnet, these end up blocking so much of the internet that you have little left to work with and one cannot simply clone these oldnet sites and remove the scripts."
		},
		{
			"post_id": 12,
			"title": "My Projects",
			"date_published": 1593555922,
			"body": "All repositories are hosted on [Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t), Rust libraries are published to [Cratez](/1CRAteZVBUYrnx8jj9x87A1zCnptrWFhPH).\n\nIf you've downloaded the Git Center repositories you can also use the [project status page](/13T79X7tG8Fi3EZCev3xU1wYTtFHHnqWGQ/?Post:17) to have an overview of build, tests, coverage, etc.\n\n* * *\n\n# Zerunet\n\nA Rust implementation of ZeroNet\n\n*   [Zerunet Main Repo](/14mVJrvB1XqtC4Aq55BmXyf9yXUN9iWwd8) _(in development)_\n*   [Zerucrypt](/1M4Wwi5x5RUN1QJoS6CcnQh515FMtRNg1d): Cryptography helper for ZeroNet.\n*   [ZeroNet Protocol](/1H3ct93gHL9BgtTnyrqJrkjn4NdociFFTn): Async Rust implementation of the ZeroNet Protocol.\n*   [ZeroNet Tracker](/1EtS177qrqicnGtGzktcMPEeL13FeLKJEG): A standalone tracker for ZeroNet.\n*   [ZeroFrame-rs](/19aDztXdkcR9YAKGoWwB58oCinmWqHwQwe): A ZeroFrame library for Rust WASM projects.\n*   [Void CSS](/1Voidkg555KCaeXERBWbsWg1LD3fdaFCB): A CSS Framework for ZeroNet\n\n# ZeroCommerce\n\n*   [ZeroMarket](/1DVCk535spQowx2TwTvnkDcJCrL9vBnANq): An E-commerce platform for ZeroNet. _(on hiatus)_\n*   ZeroPOS: A Point of Sale packet. _(pre-release)_\n\n# 1+Gallery\n\nThe continuation of Sorasumi's 0-gallery: a merger/hub framework for photo albums, mangas, comics or drawings.\n*   [g4z](/1G4ZST6Bc6ByGquHrMDQrwi9NyUZ22cGAp): Rust WASM ZeroGallery Frontend _(in development)_\n*   [1+Gallery](/191JBSmjUStVdF6zxqujN2MZUk1KaphEPe): Repository for the merger site. _(maintained)_\n*   [GalleryHub+](/114AZoCSLsZu6Ktfnfu64Uoh8pcdVYFhSX): Repository for the hub site. _(maintained)_\n*   [Rust0gal](/1KJquoRGNoC3sZWj56WEtSaLKg9hYupnX9): Toolkit for maintaining gallery hubs. _(in development)_\n*   [Coma-D](/1NiZXNcqDCtpDh9c4t8dbQknLCHr4GWkPR): Downloader for MangaDex. _(in development)_\n\n# Games\n\n*   [Oxygengine-ZeroFetchEngine](/146ErZeEWsWbveMYnNkrDKTsRe8yE4JYWa): A FetchEngine for Oxygengine that uses ZeroFrame-rs to fetch assets. (_released_)\n*   [Ryneverse](/18H4VczfkHAwcgWUnyyz7fGhbqhQzny4r1): Empty :-// maybe some day I'll have time to spend on this fun project! _(hiatus)_\n\n*   Provinces of the New Coast: _(in development)_"
		},
		{
			"post_id": 11,
			"title": "From Git Center Repositories to Rust Registries",
			"date_published": 1594404610,
			"body": "There's one thing that has annoyed me to no end with the Rust environment, and that is Github.\n\n“Oh, so you want to publish your library to crates.io? Here's a link to the Github registration page.”\n\nYou don't have to publish to crates.io, of course. It's trivial to [link the git repository in Cargo.toml](https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html):\n\n```toml\n[dependencies]\nhello_world = { git = \"http://gitlab.com/hello_world\" }\n# And you can even specify a branch, tag or revision\nau_revoir = { git = \"http://gitlab.com/au_revoir\", tag = \"v0.1.0\" }\n```\n\nIf that's not enough, you could [set up your own registry...](https://doc.rust-lang.org/cargo/reference/registries.html), it's really not that complicated to set up a basic registry without Web API and crates.io is open source in case you're a bit lazy.\n\n> Ah, but you wouldn't be making this blog post just about that. Right?\n\n* * *\n\nYou are correct, my dear reader. Here on ZeroNet we're all about taking things just one step further.\n\n# Git Center Repositories\n\nI've wondered why cloning and pulling from a Git Center repository doesn't work over HTTP for a long time and taken multiple endeavours to find out. Repeatedly in vain, until earlier today when I encountered - during an unrelated git frenzy - the command `git update-server-info`.\n\nSetting up a post-receive hook for `update-server-info` (before publishing the repository on ZeroNet of course) allows read-only git over HTTP access at the ZeroNet address.\n\nThat's pretty neat, huh? Now our little Cargo.toml looks like this:\n\n```toml\n[dependencies]\nhello_world = { git = \"http://localhost:43110/1ADDRESS/hello_world.git\" }\n```\n\nUnfortunately we've now included ZeroNet address and port into our Cargo.toml, this is not ideal, but let's try it out first!\n\n```console\n$: cargo check\n    Updating git repository `http://localhost:43110/1ADDRESS/hello_world.git`\nerror: failed to get `hello_world` as a dependency of package `zeronet_tracker v0.1.3 (/home/anshorei/Programs/hello_world)`\n\nCaused by:\n  failed to load source for dependency `hello_world`\n\nCaused by:\n  Unable to update http://localhost:43110/1ADDRESS/hello_world.git\n\nCaused by:\n  failed to fetch into: /home/anshorei/.cargo/git/db/hello_world-b2132a25b55ca3c8\n  If your environment requires git authentication or proxying, try enabling `git-fetch-with-cli`\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  invalid content-type: 'application/octet-stream'; class=Http (34)\n$:\n```\n\nWhat a disappointment. That wasn't what we were hoping for, but the error message already points us to a potential solution:\n\n```toml\n# Append these lines to your '~/.cargo/config'\n\n[net]\n# Use the external 'git' executable instead of the built-in library\ngit-fetch-with-cli = true\n```\n\nAnd now:\n\n```console\n$: cargo check\n[...]\n    Checking hello_world v0.1.0 (http://localhost:43110/1ADDRESS/hello_world.git#s0m3h45h)\n    Finished dev [unoptimized + debuginfo] target(s) in 4.20s\n$:\n```\n\nYes. But why stop here?\n\n# Cargo Registries\n\nWhat is a registry? If you've followed the second link you may have seen that all that is required for a registry is\n\n> a git repository that contains an index, and a server that contains the compressed .crate files.\n\nNow that we've already figured out how to fetch from git repositories in hoster on ZeroNet, it should be trivial to make an [entire registry hosted on ZeroNet](/1CRAteZVBUYrnx8jj9x87A1zCnptrWFhPH), right?\n\n![cratez_with_logo.png (916x566)](data/img/post_11_cratez_with_logo.png)​​​​​​​\n\nThis eliminates the downside of linking Git Center repositories in Cargo.toml. All the user needs to do is add the registry to their `~/.cargo/config` file.\n\n```\n# Append this to your '~/.cargo/config' file\n[registries]\ncratez = { index = \"http://localhost:43110/1CRAteZVBUYrnx8jj9x87A1zCnptrWFhPH/index\" }\n```\n\nNow there's only one url to replace when you change the url or port of your ZeroNet instance.\n\n_[ERRATUM: This is not true. The url is hardcoded in the the Cratez registry's `config.json`. I'm not sure how this can be solved.]_\n\nIn the registry zite's folder you should start a new git repo with `git --bare init`. Then you should add a config file to the repo called `config.json`:\n\n```json\n{\n \"dl\": \"http://localhost:43110/1ADDRESS/crates/{crate}/{crate}-{version}.crate\"\n}\n```\n\nThere's a handy utility called [cargo-index](https://crates.io/crates/cargo-index) which you can use to publish to a local registry, but don't forget to package your library and copy the .crate file to the appropriate location in the registry! (I will probably develop a tool to streamline this)\n\n**What are the limitations?**\n\n*   The registry will read-only to all but the owner.\n*   There's no tool to publish your crates to a ZeroNet registry _yet_.\n*   There's a small amount of configuration to do for the end-user."
		},
		{
			"post_id": 10,
			"title": "Ansho Rei Recommends",
			"date_published": 1590530789.028,
			"body": "Blogs and Personal Sites:\n[Richi's Blog](/1EwAh4KUfGgRw1re7uyrmTUWKZYV9SHVcW)\n[Ivanq's Blog](/1FwH89xyniDgy3t6fCWrggLs22MnGPZ5K5)\n[MayVaneDay](/1MeeJWbbQHArbqD6UUHSjh9EVycvnTUBFa) & [Blog](/1MrwmugtdphP3CfYxXEgdefyjJV3LKMsW2)\n[Blinking Prompt Times](/12zNqmKW8bLAhAASydBAYvo9Csy2ppQEqq)\n[Caryo's Blog](/1MCoA8rQHhwu4LY2t2aabqcGSRqrL8uf2X)\n[Grindalokk's Blog](/13XQMFYXt5YSdm5eqCgCqpL7Ee8wTF3ejD)\n[Thunder's Blog](/1648uDJu8HaSjiYR6p8KJMGtKGQyUdFNqS)\n[Ulrichard's Blog](/1EwAh4KUfGgRw1re7uyrmTUWKZYV9SHVcW)\n[Eibriel's Blog](/1EMcXwk7qQdY3pbj86A98gZHjDBNRrscdL)\n\nNews:\n[ZeroTalk Tech](/1EfLnw7GDXbZfJmGNoXGQ4XkuHGWkRZTMq)\n[ZeroNet in the Eyes of the Media](/1NEwsvyrAoEWU64ZozwdfgEUQhwxiCrh1t) _(run by me)_\n[Revolution Pirate Radio](/13b33nBwzxVzW2tFaDYSZ686ZEcN5DQBaJ)\n\nEntertainment\n[1+Gallery](/1PGaLLNiadMzrmw6MMMnpZnskwFcdgZoS4) _(run by me)_\n[KopyKate](/big.kopykate.bit)\n[Caryo's Music](/1FiHm91tcDdjkiGkHZH2xoMc7Qmzrh8sv3)\n[Incantata](/19xqgCi5YTsdTxY97Pferz9GuQERzSSVFe) (printable card game)\n\nSoftware​​​​​​​\n[Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t)\n[Peer Message](/1CeEXxqemr5CcVQAAmrW13QYwZV4kAkQz6)\n[ZeroNet Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1)\n[Cratez Rust Crate Registry](/1CRAteZVBUYrnx8jj9x87A1zCnptrWFhPH) _(run by me)_"
		},
		{
			"post_id": 9,
			"title": "Thaïs, a Musical Short Film",
			"date_published": 1588444947,
			"body": "With the lockdown I've been able to free some time to make an amateur shortfilm.\n\n![thais.jpg (1200x675)](data/img/post_9_thais.jpg)\n\nI've included the video below.\n\n* * *\n\n![:video](./data/video/2020_Thais/Thais_Shortfilm_small.mp4)\n\n# Credits\n\nComposition: Jules Massenet\nViolin: Helblindi\nViola: Ansho Rei\n\nOur sincerest thanks to our Violin teachers, past and present, for all of their effort and support."
		},
		{
			"post_id": 8,
			"title": "Building an E-Commerce Solution with ZeroNet",
			"date_published": 1584652942,
			"body": "For the past week I've spent all of my free time working on an e-commerce solution for small businesses. It has specifically been designed for Mom-and-Pop shops that need to transition to delivery or collection of orders during the SARS-CoV-2 pandemic, but there is no reason you have to stop using it when the pandemic is over, it will always remain completely free to use (and I couldn't stop you even if I wanted)!\n\n* * *\n\n## Features\n\n*   All-purpose clean interface with limited customization options.\n\n*   Manage products, categories and taxes.\n\n*   Manage your customer's contact details and addresses.\n\n*   Receive and handle orders.\n\n*   Offer shipping options or collection points with different rates.\n\n*   View total stock required to fulfill all unhandled orders.\n\n## What are the Advantages of a ZeroNet-based E-Commerce Platform?\n\n1.  **No upfront costs. No recurring costs.** There's many great e-commerce solutions available, but when launching your business into the internet era, there's always a tough decision to be made between:\n\n    *   Paying for your own hosting plus lengthy process of searching for and setting up the right plug-ins.\n    *   Paying monthly for an expensive package that often has essential features locked away behind hidden costs.\n\n    ZeroMarket allows you to build and host your webshop for free, indefinitely.\n\n2.  **Keep It Simple Stupid.** Most big e-commerce solution rely on the financial contributions of large companies. These companies ask for other features than those that the owner of a small shop needs, resulting in a bloated product that takes more time to set up and maintain.\n\n3.  **King of your own kingdom.** You have complete control over how you build and use your webshop. Do you wish to take financial transaction in cash upon delivery? It's up to you to communicate with your customers how the exchange will take place. The source-code will be made publicly available on Git Center upon release of the beta version.\n\n## When NOT to use ZeroMarket\n\nSome of these features may be added later.\n\n*   You want automatic verification of payments.\n\n*   You want in-depth visual customization.\n\n*   You want integrated performance analysis tools.\n\n*   You need multiple users with administration privileges.\n\n## How is Privacy Ensured?\n\nWhile designing the data model for transactions through ZeroMarket I've made privacy of data, including metadata, the number one concern.\n\nZeroMarket uses ZeroNet's built-in ECIES and AES encryption functionality to encrypt all sensitive data. All information-sharing transactions are either Customer-to-Shopkeeper or Shopkeeper-to-Customer. Whenever a piece of data is AES-encrypted it may be assumed that the encryption key is ECIES-encrypted with the other party's public key.\n\n*   Personal information: AES-encrypted.\n\n*   Orders placed by user: Padded with random data and AES-encrypted. Orders that have been handled are copied and signed by the shopkeeper's key. Upon submission of a new order, the customer's original copy is removed to make space in the padded object.\n    This padding serves to obscure the size and number of orders placed by a user as well as whether a registered user has placed any orders at all.\n\n*   Customer's Verified/Denied status: AES-encrypted.\n\n*   Order status as updated by shopkeeper: AES-encrypted.\n\n*   (OPTIONAL) Shop's inventory: The shop's owner can set their inventory to private. This is done by AES-encrypting the list of products, after which the key is individually ECIES-encrypted for each verified customer.\n    Whenever a user is blocked the list is re-encrypted with a different AES key.\n\n### What Data is NOT Private?\n\n*   The public key used during the registration process.\n\n*   The date at which a user last submitted data to the site."
		},
		{
			"post_id": 7,
			"title": "Using WASM in ZeroNet (with yew-rs)",
			"date_published": 1578619182.903,
			"body": "This is how I got it to work, it's a dirty way to do it, but it maybe it will lead to better ways of doing this.\n\n* * *\n\n```\nvar Base64Binary = {\n    _keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n    /* will return a  Uint8Array type */\n    decodeArrayBuffer: function(input) {\n        var bytes = (input.length/4) * 3;\n        var ab = new ArrayBuffer(bytes);\n        this.decode(input, ab);\n\n        return ab;\n    },\n\n    removePaddingChars: function(input){\n        var lkey = this._keyStr.indexOf(input.charAt(input.length - 1));\n        if(lkey == 64){\n            return input.substring(0,input.length - 1);\n        }\n        return input;\n    },\n\n    decode: function (input, arrayBuffer) {\n        //get last chars to see if are valid\n        input = this.removePaddingChars(input);\n        input = this.removePaddingChars(input);\n\n        var bytes = parseInt((input.length / 4) * 3, 10);\n\n        var uarray;\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        var j = 0;\n\n        if (arrayBuffer)\n            uarray = new Uint8Array(arrayBuffer);\n        else\n            uarray = new Uint8Array(bytes);\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        for (i=0; i<bytes; i+=3) {    \n            //get the 3 octects in 4 ascii chars\n            enc1 = this._keyStr.indexOf(input.charAt(j++));\n            enc2 = this._keyStr.indexOf(input.charAt(j++));\n            enc3 = this._keyStr.indexOf(input.charAt(j++));\n            enc4 = this._keyStr.indexOf(input.charAt(j++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            uarray[i] = chr1;            \n            if (enc3 != 64) uarray[i+1] = chr2;\n            if (enc4 != 64) uarray[i+2] = chr3;\n        }\n\n        return uarray;    \n    }\n}\n```\n\nLoading the wasm can then be done using:\n\n```\nlet frame = new ZeroFrame();\n\nvar file = frame.cmdp(\"fileGet\", [\"wasm/yew-app.wasm\", true, \"base64\"]);\nvar wasm_instance = file\n  .then( function( contents ) {\n    var buffer = new Uint8Array(Base64Binary.decodeArrayBuffer(contents))\n    var i = 0\n    while (buffer[buffer.length-i-1] === 0) {\n      i++\n    }\n    return WebAssembly.compile( buffer.slice(0, -i))\n  })\n  .then( function ( mod ) { return WebAssembly.instantiate( mod, instance.imports ) } );\n\n            return wasm_instance\n                .then( function( wasm_instance ) {\n                    var exports = instance.initialize( wasm_instance );\n                    console.log( \"Finished loading Rust wasm module 'yew_app'\" );\n                    return exports;\n                })\n                .catch( function( error ) {\n                    console.log( \"Error loading Rust wasm module 'yew_app':\", error );\n                    throw error;\n                });\n        }\n```"
		},
		{
			"post_id": 3,
			"title": "The Benefits of Separating Data and Interface in a Young Network",
			"date_published": 1537722760,
			"body": "Work in progress"
		},
		{
			"post_id": 4,
			"title": "A Musical Interlude",
			"date_published": 1569236400,
			"body": "Straying somewhat from the usual technology-focused posts on this blog, I’d like to spend some time musing on one of my hobbies.\n\n![sonata6maldere.jpg (920x320)](data/img/post_4_sonata6maldere.jpg)\n\nThere’s little music I’ve listened to in my life that comes anywhere close to the beauty of baroque counterpoint.\n\n> **John Rahn:** It is hard to write a beautiful song. It is harder to write several individually beautiful songs that, when sung simultaneously, sound as a more beautiful polyphonic whole.\n\nThis is particularly outspoken in fugues. One such piece can be listened to in the Trio Sonata VI by Maldere included below, but there’s far more impressive examples to be found in e.g. Bach’s organ works.\n\n* * *\n\nFirst and foremost it’s music that I never get tired of. Of course I won’t claim I wouldn’t get tired of listening to a single piece over and over again, though it would take a long time. Each voice is interesting to listen to, and when played together it can be hard discern how each voice’s own melody goes. The ‘ascendant’ melody, the one you’ll be humming or whistling along with while doing mundane chores, runs over the many voices. It’s a mesmerizing game of catch where the players just keep passing the ball without fail, and with such elegance (if all goes well).\n\nIt’s also a game where everyone gets to play, in contrast to the later classical music which tended to have a heavy focus on the soloist, take for example Mozart, or Paganini. In baroque music a lot of freedom was given to the accompaniment (the *basso continuo*), who could show their mastery through ornamentation and improvisation.\n\nThere’s a particular element to baroque counterpoint that I particularly like. It’s most easy to notice in slow pieces, such as the Grave’s and Largo’s. I'm talking about the use of dissonants that are then resolved. This build-up of tension which has a physically strong effect on the body of the listener when it is lifted. Often these are encountered as staircases of dissonant, resolution, dissonant, resolution, etc. alternating between two of the voices. Some beautiful examples of this can be found in the 1st and 3rd pieces of Maldere’s trio sonata IV included below.\n\n## Three Summer Recordings\n\nAll of these were played on authentic 18th century instruments and rehearsed within a one week course by hobby musicians in the Summer of 2019\\. May we be forgiven for our imperfections.\n\n### Pulchra es Amica Mea (Palestrina, 16th Century)\n\nThis is a piece for choir, so here’s the Latin text:\n\n> Pulchra es, amica mea,\n> suavis et decora sicut Jerusalem,\n> terribilis ut castrorum acies ordinata.\n> Averte oculos tuos a me\n> quia ipsi me avolare fecerunt.\n\nAnd the English translation (from the Douay-Rheims Bible):\n\n> Thou art beautiful, O my love,\n> sweet and comely as Jerusalem,\n> terrible as an army set in array.\n> Turn away thy eyes from me,\n> for they have made me flee away\n\nWe did our best to phrase the song, which meant singing it a lot!\n![audio:](./data/music/2019_Summer/Canzone_a_5_voix-consort_cordes.mp3)\n\n### Op. 3 Sonata IV (A. Corelli, 17th Century)\n\nOnly the Largo - Vivace.\n\n![audio:](./data/music/2019_Summer/Corelli.mp3)\n\n### Trio Sonata VI (P. Van Maldere, 18th Century)\n\nGrave - Fuga - Largo - Presto\n\n![audio:](./data/music/2019_Summer/Sonate_P_Van_Maldere.mp3)\n\n## Bonus composition\n\nThis is an unnamed composition from Summer 2018\\. It follows some of the exercise guidelines students received in the baroque period when learning counterpoint, but I also took a lot of liberty. I’d like to give my sincere thanks to the professor of composition who reviewed the draft.\n![audio:](./data/music/2018_Summer/Compo.mp3)\nExcuse the poor performance, this is a recording from a performance the day after writing it. The two other musicians had little time to rehearse. I’d like to record the piece again with more preparation!"
		},
		{
			"post_id": 6,
			"title": "ZeroNet, Bitcoin Cryptography and a consideration of different ICA/DNS systems within the network",
			"date_published": 1567185987,
			"body": "For newcomers to this network it’s often hard to understand a lot of what ZeroNet does. And one particular where I think this matters is when dealing with identities, certificates and domains.\n\n## The Twin-Doored Safe\n\nZeroNet does not use Bitcoins, it does not use any cryptocurrencies (although you can use Namecoin for fancy domain names, something which I personally discourage for reasons I’ll get into later). In essence ZeroNet only uses the cryptography used by the Bitcoin network to generate addresses and their corresponding private keys.\n\n* * *\n\nThere’s an analogy that I’d like to present which may help understand this cryptography for people unfamiliar with digital security. Imagine a safe with two doors, each corresponding to a different key. The owner of the safe has a key to open one door, the _private key_. The key to the other door on the other hand he’ll give a copy of to anyone who asks for one, this is the _public key_. When you open the safe with the public key however, you find that behind the door is a thick sheet of glass. You can see what is in the safe, but you cannot take anything out or put anything in. What’s more is that you can say with absolute certainty that what is inside the safe was put there by the owner (or at least someone with access to the owner’s private key).\n\nZeroNet works in much the same way. A Zite is such a twin-doored safe with it’s address being the public key and the private key safely in the hands of the owner. The owner can put things into the Zite, while other people can only look through the glass at what’s inside.\n\n## What About User Content?\n\n**“How then am I able to post to zites like ZeroTalk, ZeroMe, KopyKate and a plethora of others?” you may ask.**\n\nTo continue with our previous analogy: it’s safes all the way down. The owner of the site has added a shelf under the safe (usually labeled `users/` or `userdata/`) where other people can place their own little twin-doored safes.\n\n**“How can a zite owner ban a user?”**\n\nThe owner places a note in their safe telling people: “Hey, don’t listen to these guys!” with a list of addresses or identities. The ZeroNet client of visitors will then refuse to open (_download_) their safes.\n\n**“Can a zite owner edit my posts?”**\n\nYes. They have _absolute power_ over their zite. _**But**_ they cannot open your safe to put anything inside of it! What they can do is look in your safe, copy everything and put it in another safe with their own key, then put that safe back on the shelf where your safe was.\n\n**Important note**: If you then use the zite again it is possible that your client will sign the content with your own key. This is a vulnerability that can be exploited to put words in someone else’s mouth.\n\n## Addresses\n\nAs explained above, everything posted to ZeroNet is signed by a Bitcoin private key. This is true for user content as much as it is true for zites.\n\nThe problem with Bitcoin addresses, like my very own `13T79X7tG8Fi3EZCev3xU1wYTtFHHnqWGQ` is that... well it should be pretty obvious. Who would name their kid `13T9a9ajT3pNG6qabQh7GSuZd98WZrrvGQ` or anything like it? But does that matter?\n\n### Identity\n\nBefore we start looking for alternatives it would be a good idea to think about what we by identity.\n\nOften it used to refer to that which makes me me, you you and separates me and you from each other. A set of properties that make each one of us unique. A set of traits that can be used to distinguish one thing from others.\n\nBitcoin addresses are without a doubt unique, but they’re also complex, and that could be a problem. The human mind works in a fuzzy way. We think fuzzily, we math fuzzily and we remember fuzzily. Complex strings of characters are not as unique to a fuzzy mind as we’d like them to be. In our heads the address of this blog tends to become “that random string of characters starting with 13T79X”, if it’s even that many!\n\nThis is could be dangerous if you relied upon it for distinguishing websites, it took me all of 1.168 seconds to generate another address `13T79XhFWgW8KeFw2r8e3A1vzxc6JiV3nY` that follows this pattern. You could beat the odds by remembering more characters, but how many people are actually going to do so?\n\n### Vanity\n\nApart from being a sin, it’s also a great way of personalizing your Bitcoin address. Because these cryptographic keypairs are so quick to generate, your computer - even your mobile phone - can generate millions of them in a second.\n\nThe open source software Vanitygen will generate addresses and throw them away until it finds one that matches the pattern you want. For anything up to 6 characters (first has to be a 1 though) this is trivial to do, but 8 characters can take weeks.\n\nAlthough this is great, it doesn’t actually solve our problem. Users are likely to only remember the “human readable” part of your address, or if careful, somewhat more.\n\n### NameCoin\n\nNot reinventing the wheel is something we can probably all agree is a good idea. Why not use a decentralized DNS alternative that has proven itself to work?\n\nNameCoin uses a blockchain to communicate how an address should be resolved. You have to buy an address using cryptocurrency to be able to set it’s destination. These addresses will eventually expire, which clashes with ZeroNet’s core philosophy of “as long as someone cares to seed, a website will never go down.”\n\nWithin ZeroNet the website won’t go down when a domain name expires, but links to that website using the ‘.bit’ address will be broken. Worse yet, they could be replaced by malicious pages, be it trolling, phishing, impersonation or any other kind.\n\nThis is why for zites likely to be ephemeral, such as blogs or one-person projects, I strongly advise against the use of ‘.bit’ addresses.\n\nThat is not to say that there isn’t a place for NameCoin in the network. I see a lot of potential for zites run by a community, organization or even company to make use of this feature because it allows for handing over the project without having to share the private key. This is very important because there is no way to prove whether the original owner of the private key “destroyed” his copy of it.\n\n### Certificates\n\nThe way in which you’re most likely to have experienced an identification system within ZeroNet is it’s certificate authorities. If you’ve posted content to a zite you’ve probably gone to ZeroID, or a similar site, to generate a certificate.\n\nA ZeroNet CA is a zite which accepts requests from users to give them a human-readable name at that authority. ZeroID has the NameCoin domain “zeroid.bit” and I’ve made a request for the username “anshorei”. The _centralized server_ that runs behind ZeroID receives this request, checks its validity and adds an entry to the ID index linking “[anshorei@zeroid.bit](mailto:anshorei@zeroid.bit)” to my public address.\n\nSome ZNCA’s work slightly differently:\n\n*   ZeroID: Request is sent over normal internet connection to a central server.\n*   KxoID: Request is sent via peermessage to central server. (Requires peermessage plugin)\n*   KaffieID: People sign their own ID (this results in non-unique names)\n\nThere’s other CA’s I don’t know much about: Millchan, ZeroVoat, PolarID and CryptoID. If you do, please let me know!\n\n### DNS Plugins (Name.Yo)\n\nWhile ZeroNet’s CAs are only used for user identities, the same system would work for the identity of zites. Name.Yo is a plugin that does exactly this: it’s backed by a centrally owned index of domain-address relations which can be used to resolve human-readable addresses to Bitcoin addresses.\n\nThis solves one of the problems with NameCoin, namely the expiration of domain names, which is absolutely critical for a persistent network the likes of ZN and Freenet. It does bring with it the problems any system with a central authority has. That’s not to say we should abandon the idea entirely. Instead I suggest we take a look how I2P handles domain resolution with it’s address books and see what we can learn from them.\n\n### Address Books\n\nWhile ZN uses Bitcoin addresses, I2P uses Base32 addresses like `udhdrtrcetjm5sxzskjyr5ztpeszydbh4dpl3pl4utgqqw2v4jna.b32.i2p`, something which looks considerably more scary, and it is no wonder then that users and devs of the network have looked into giving navigation more of a friendly appearance.\n\nEach user runs their own DNS in the form of an address book. There's a couple of big registries that you can subscribe to, adding their sites to your address book. Or you could, as most do, just use them for referrals when encountering unknown domains. I2P does this really well, the client itself will ask you which of the referrers you wish to use. Whenever you visit an eepsite (the I2P equivalent of a zite) you can choose to add it's domain name to your address book so you can visit it again using the human-friendly address.\n\nAn easy way for users to choose, switch and even combine entries from DNS/referrers is needed in the long term to keep these centralized hubs in check if we’re going to rely on them. It does not make for an ideal solution, but I do think we could draw inspiration from this implementation to improve Name.Yo.\n\n## One Last Note\n\nIdeally, we would not be using Name.Yo for linking either, because it introduces a unnecessary separately lifetimed relation.\n\n`Link<'a> ⇒ Name.Yo<'b> ⇒ Dest<'c>`\n\n(Read as: “‘Dest’ living to c is referred to through ‘Name.Yo’ living to b by ‘Link’ living to a”)\n\nEach separately lifetimed relation is a potential point of failure in a semi-permanent network, and that makes having unnecessary ones a bad idea.\n\nThis does not mean I will refuse to use it, quite to the contrary: surmounting the technical and philosophical issues I have with the current implementation are a challenge that I enjoy. And I already have propositions to help mitigate this problem as well, but I’m afraid they’ll have to be delayed until my next blog post as this one has taken me long enough as is. And this was supposed to be an explanatory blog post, not a development-oriented one!\n\n(This post was started more than a week before Name.Yo came out!)"
		},
		{
			"post_id": 5,
			"title": "Addressing some of the Rampant Disinformation spread about ZeroNet in these past couple of days",
			"date_published": 1565290374.547,
			"body": "Over the past week the amount of users of ZeroNet has exploded, then settled back down again. A few days ago I could see literally see over 9,000 peers for sites such as ZeroHello, ZeroID and ZeroTalk. As always it's hard to make an estimate of how many users there were during this time, but there's no doubt that we've hit a new height in the numbers of _concurrent_ users this week. I've been following the recent surge of interest in ZeroNet attentively, but refrained from commenting much while it was going on.\n\n![it__s_over_9000_.png (580x435)](data/img/post_5_it__s_over_9000_.png)​​​​​​​\n\n* * *\n\nAlthough I welcome and laud anyone who wishes to build a platform away from the ever-encroaching tyranny of governments, I'm not too stoked on a large and infamous community such as that of 8Chan becoming the public face of ZeroNet in western media.\n\nDue to this event I've temporarily taken an interest in the discourse on platforms the like of Twitter and Reddit, looking through the ZeroNet hashtag and mentions on both of them. One of the most things that stood out to me the most is the amount of disinformation being spread by people with little to no knowledge of the inner workings of this network, or of computers and the internet for that matter.\n\nMaybe that's a good thing. The misinformation seems to have scared away a lot of the extremists, or at least driven them to places that I do not visit. ZeroTalk seems on course to settle down to something that resembles the—mostly—civil (how are you Duende?) forum that I was used to before the influx.\n\nNow that calm is returning I've decided to write a blog post in which I will go through one of the better misinformation pieces that I've come across and point out mistakes where I should find them.\n\nIn the process of doing so I'll be talking about both existing ZeroNet features, such as _blocklists_, as well as the unimplemented but feasible traditional moderation hierarchies for individual zites (eg. Admins, Mods, Jennies).\n\nEmphasis in italics are mine, bold are the authors.\n\n> [...]\n> \n> But if you thought that things were bad, you have not seen anything yet.\n> \n> Not until, ZeroNet.\n\nOh! How scary! Let's have a look at why this is according to our dear friend.\n\n> I had never seriously looked into ZeroNet until the recent events of the last several days. I do NOT recommend using it, especially for forum-based websites, such as the Chans. It is my opinion that upon thoroughly investigating it, _ZeroNet does not provide safety_, but is a potential vehicle for the mass entrapment of people for things they did not do as well as _providing for a level of direct surveillance even worse than what already exists on the regular mainstream Internet_.\n\nThose are two interesting claims. One of the great acclaims of ZeroNet is that it has allowed (a small group of tech-literate) dissidents in China and under other repressive regimes to speak their minds freely without fear of fines, confiscation, imprisonment or torture.\n\nBut I'll let him explain.\n\n> Now the concept behind ZeroNet is very noble and good and it CAN work in many cases. The idea is that with ZeroNet, there is no per se set “server” that exists for a website, but rather a network of computers that provide for the service in cyberspace. In this way, it works in the exact same manner that file torrenting does- as long as there are computers connected to it, the site stays online, and those who participate in the website are also helping it to stay online and distribute it to others- a concept called “seeding” in torrenting.\n> \n> This is a really good idea, it would seem. And it is an EXCELLENT idea so long as the website is not one that does not do user contributions through input- such as a forum board like 8Chan.\n\nSo far so good. I'll skip his short history about CP posting on the chans, because I'd much rather focus on ZeroNet.\n\n> [...] In spite of the media sensationalism about them, the boards are relatively well-monitored, and the websites are known to work with police to help catch criminals if evidence on the board can be shown that such activity was taking place.\n> \n> Now let’s consider ZeroNet.\n> \n> The first problem with ZeroNet is that _there is **no moderation**_. Without moderators, it is a matter of time before people start posting such material because any concept of “absolute free speech” always leads to absolute anarchy and chaos of the worst sort.\n\nThat's not actually true.\n\nMany sites on ZeroNet do indeed function without moderation. In some cases this is because the sites do not require moderation, as is the case with ZeroTalk, which only allows text. Others have no moderation because their owners are against moderation, or because they have either died or abandoned their zites.\n\nThis absence of moderation is not an intrinsic property of a zite. The only censorship resistance that is guaranteed is at the equivalent level of what DNS is for clearnet. And in a sense IP as well: either through sheer numbers (the “can't-catch-’em-all”, although ZeroNet is not really mainstream enough for that to work) or (much more reliably) through Tor.\n\nThere are existing methods of moderation on ZeroNet.\n\nThe first is **zite-level blocking**. This consists of adding the address of a user to a blocklist in the zite's JSON files and then publishing that. This informs any client downloading the zite which users were banned by the owner and therefore the client will not download their files. As long as you've downloaded the official ZeroNet application this is how your client will function.\n\nLet me put it this way: **Users can be banned from sites, sites cannot be banned from the network.**\n\nThe second method is optional voluntary moderation through blocklists. These are opt-in lists of zite addresses and user addresses, generally grouped thematically (eg. “arseholes”, “pornographic”, “terrorist”, “pedo” or maybe “weebs”, why not?) Right now these blocklists are generally made by one user and shared publicly for anyone to download and use. When new zites or users are added to the blocklist your client will automatically update the list. You can unsubscribe from blocklists at any time if you feel they’re too restrictive or the owner has gone rogue and added innocent zites/users.\n\nIdeally we’ll be seeing more community-run initiatives as the network grows. This could be achieved through a multi-signed blocklist where a board of owners can ‘vote’ on whether to accept changes to the list. Or more zites could implement a moderation like the one that the Millchan owner is building. According to what he says the zite owner will be able to appoint moderators and janitors, as well as remove them should they turn out to be corrupt.\n\nI hope that I've been able to explain why most of the concerns about lack of moderation on ZeroNet are misplaced.\n\n> Second, and the most important and dangerous one, any site you visit is **automatically seeded** by Zeronet while you are on it.\n> \n> Think about that last point. When you are on, in this case 8Chan via ZeroNet, that site (8Chan) stay on because your presence on it as a visitor is also supporting the connection of the website to be on the Internet.\n> \n> Your personal connection- through your computer -is also acting as a distribution point for the website.\n> \n> Now let’s take a very sinister scenario- say that somebody wanted to distribute child sexual abuse material on 8Chan. Somebody goes to the website, posts a picture- just one -and leaves.\n> \n> Now people from all over the world go to 8Chan. These people have zero intention or desire of accessing, seeing, or\n> distributing such abusive material. While on the board, none of them see or encounter in any way that photo. They go about their business and then leave. In fact, they never had any idea that such an awful thing was there.\n> \n> But this is the sinister nature of ZeroNet, because (as I am able to understand from my reading) as long as you are on that website, it does not matter what you see or do not see, because the fact is your connection to it is serving as a seeding point for other people’s connections.\n\nNow _**this**_ is a load of codswallop if I ever saw one.\n\n> In other words, it is theoretically possible- I could not see if it could be proved definitively -that your personal Internet connection could be transformed into a pipeline by which other people could distribute such materials. This would make the individual user a “distributor” of child sexual abuse material even if he had no idea that it was happening, and thus make him potentially under law liable for prosecution.\n\nNo. No. And once more: No. This is not how ZeroNet works, but where to start pointing out the falsehoods?\n\nA website is a bunch of files. The same is true for zites on ZeroNet. The difference here is that the files are divided in two categories “_Required_” and “_Optional_”.\n\nWhen you visit a zite your client will download a file called content.json which will inform it on what to do next. Your client will look through the file and find a list of _required_ files and look for peers to download these immediately. These are generally the html, css and javascript files that the webzite requires to run. There might also be _Includes_ listed in there, these are additional content.json files describing other parts of the webzite, such as the structure of user submissions. _Optional_ files are only downloaded when the webzite or your browser tells ZeroNet that it needs them to render the page. This could be because you visited a page with optional images, or because you clicked play on a video or sound file.\n\nIs it possible that you came across an illegal file and your client downloaded it without you realizing it? Yes, that is possible. Just as it is on the clearnet. When you browse and come across an illegal image, your browser will cache it, storing it on your computer without your consent. It is highly unlikely that nobody would notice the illegal file over any considerable amount of time. Sooner or later the user will end up on the appropriate blocklists, and as long as you're subscribed to them you will be safe.\n\n> People on 4Chan have also looked into this and have been pointing this out as well, such as in this thread [here](http://archive.is/eIXi9).\n> \n> Now, let’s say that one goes to a website on ZeroNet that would have a very low likelihood of having any of such material on it (such as a non-forum) website. One is still “safe” because the site exists by connections, correct?\n> \n> Remember that the website itself is sustained by the mutual connections of others.\n> \n> Let’s say that the content of the site is not illegal, but contains material that might be considered socially or politically unacceptable.\n> \n> What additional level of protection does such a network provide? that one’s regular Internet connection cannot, as one can still be tracked through his connection. In fact, it is arguable that because one’s connection is not merely accessing the website, but is also sustaining it, that it makes a person able to be monitored and traced even easier.\n\nThere's ways around that, such as VPN's. Or Tor. Don't tell me you haven't heard of Tor before?\n\n> ZeroNet does not provide more security. Arguably, it provides more ways to be monitored and drawn into a scenario where somebody is accused of something he did not do but unintentionally did because he did not understand the technical nuances of how the software works. I am not a computer specialist, but it took me time to understand and to fully thing through how this program works and the potential consequences it could have. It is far more dangerous than anything on the so-called “darkweb” that one can access through a TOR browser.\n\nOh, you have! Marvelous. Maybe you should try accessing ZeroNet through Tor then, if you're so paranoid?\n\n> **It is out of the concern for the safety of the public that they should be aware that this “next generation” of the Internet, as it is being touted, most likely poses a serious danger and should avoid it.**\n> \n> ZeroNet is NOT the future of the Internet unless the future is “back to the future,” and specifically to 1984.\n\nConsidering China is the closest thing we have to Oceania ... except for Britain maybe ;-) and ZeroNet is successfully being used by Chinese to circumvent their censorious government, I beg to disagree strongly.\n\nNo closing remarks from me, may you have a free Friday!"
		},
		{
			"post_id": 2,
			"title": "Bridging the Gap in P2P",
			"date_published": 1564775412,
			"body": "I'm a firm believer in P2P technology and have advocated the adoption of networks such as RetroShare, FreeNet, ZeroNet, IPFS and Dat for years. During this time there were several moments where I thought: “This is it! Now it will take off!” But, as you are probably well aware, it never did.\n\nOther networks did. Somewhat. Unfortunately those networks were centralized, or federalized at best. Take Vidme, Minds, DLive, Mastodon, Gab, Bitchute, Voat, Diaspora, to mention just a few. It's great to see new platforms rise to challenge the established titans, and finding a modest amount of success. Or in the case of Vidme: short-lived marginal success. I do not wish to attack any of these projects, to the contrary! Several of these websites have presented laudable innovative technologies and decisions: DLive uses the steem blockchain to handle micropayments, Bitchute improves streaming speeds using webrtc, Minds is working on decentralization, Diaspora and Mastodon are federalized, Gab brought the - mostly dead idea of the - comment section of the internet back to life. Vidme and Voat have done little new technology-wise. The first had an innovative public relations department that stood in stark contrast to Youtube's cold shoulder and the second an iron stance on freedom of speech.\n\n* * *\n\nOver these years I've often caught myself participating only passively for lengthy periods of time. Why would this be? It's not that I'm spending this time on the traditional platforms. I've quit Facebook. My Twitter is locked because I refuse to give them my telephone number, the same is true for my old Reddit account. My Youtube was blocked for months over a false complaint I've refused to fight (it has been reinstated).\n\nThere often just isn't much going on here. With a quick look through ZeroTalk and ZeroMe I feel like I've gotten up to date and there's not enough happening in my life that I think is worth talking about to strangers on a bus.\n\nMaybe that's a good thing. It certainly boosts my productivity over those people who do spend hours going through social media.\n\n## Data Duplification\n\nI've talked about the problem of _Data Duplification_ on the ZeroNet network several times in various places, and - I know it may sound a little off-topic, but do let me carry on - it's still an important and unsolved issue.\n\nConsider the two webzites 1DEF and 1CoN. Both have a very interesting (but imaginary) file called NoFishatDEFCON2019.ogv.\n\n```\n~/ZeroNet/data/ > tree ./\n.\n├── 1CoN\n│   ├── content.json\n│   └── NoFishatDEFCON2019.ogv\n└── 1DEF\n    ├── content.json​\n​​​​​​​​​​​​​    └── NoFishatDEFCON2019.ogv\n```\n\nYou want to download this file from the network, but you're only aware of the webzite whose address starts with 1CoN. Unfortunately for you the seeders of that address are offline. Unbeknownst to you the exact same file (same filename, same hash) is still available from 1DEF, but your ZeroNet client has no way of figuring this out.\n\nIt should be obvious why this is something we'd want to solve and I will present some ideas later in this post, but first I want to demonstrate another related problem.\n\nWe continue our search for NoFish's imaginary talk when you come across the 1DEF address in a ZeroTalk thread and successfully download the file. It's a 4K recording at 1.4GB.\n\nSome time after this seeders for 1CoN come back online and you successfully download that file as well. But wait! This means you now have two copies of the same file taking up 2.8GB of your hard drive, what a waste! (This is only true if you have a file system without built-in deduplification)\n\n## Deduplification\n\n### A ZeroNet Plugin\n\nSome time ago I made a ZeroNet (py2) Deduplification plugin. Here's a quick overview how it worked:\n\n1.  ZeroNet downloads a file.\n2.  The plugin check the filesize, if it's over 10MB (default, configurable)\n3.  If it's not the plugin does nothing and the file is downloaded normally\n4.  Otherwise the plugin looks up the hash in a local database\n5.  If it finds the hash, it gets a path from the database to the local file\n6.  Otherwise it downloads the file and adds it to the database\n\nThis worked fine for downloading, but you could only serve a single copy, that's definitely something that could be fixed though.\n\n### IPFS\n\nWhy not use something that already exists? IPFS is a hash-addressable distributed file system. Perfect for the job, no?\n\nNot exactly.\n\nWhile ZeroNet uses SHA512 hashes to address content, IPFS uses a far less straightforward algorithm. They use something called CID's, these could be considered to be hashes that describe themselves. From the first characters a program can decipher how it should interpret the remainder. For now IPFS uses CIDv1 with SHA2-256\\. This makes for a real headache because there's no way for us to turn one hash into another. We either need to have the original file and generate the hash ourselves, or have some reliable way of getting information about linked hashes from someone else.\n\nI've been stuck thinking about this for weeks when blurHY posted something interesting.\n\n### IPZN\n\nThat something was called IPZN and it's still very much a proof of concept. This is the kind of thing I was looking for. On top of solving our duplification problem, it offers something even crazier.\n\n## Bridging the Gap\n\nWe've got all of these amazing networks to use, why not share data between them? When you're looking up a file, why not try ZeroNet, IPFS, Dat, etc. until you find it. And if you have a file, why not seed it to others using all of these networks too? This would result in more seeders on all networks, higher file availability and a more resilient network overall.\n\nNot everyone would have to use IPZN to benefit from its existence. We can imagine decentralized applications that work on multiple networks, maybe as different apps that share the same data storage format. This would mean that someone posting on ZeroMe can communicate with someone posting on its (imaginary) counterparts IPMe, DatMe and any others - even clearnet ones potentially - as long as there is one person running IPZN who downloads their files.\n\nThere's already a project called Solid that promises to standardize how such applications should store their data. It's probably not the only proposal, and I won't claim it's the best either, but I do think Solid is the one most likely to gain traction due to the names attached to it and the attention it has gotten in media.\n\n### Relevant Projects:\n\n[IPZN](https://github.com/blurHY/IPZN) - Inter-Planetary ZeroNet\n\n[IPFS](https://ipfs.io/) - Peer-to-peer hypermedia protocol\n\n[Dat](https://dat.foundation/) - Community-driven distributed data synchronization\n\n[Solid](https://solid.inrupt.com/) - Separating data from the applications that use it\n\n### References:\n\n[ZeroNet uses SHA512](https://zeronet.readthedocs.io/en/latest/) ZeroNet documentation\n\n[IPFS uses CID](https://docs.ipfs.io/guides/concepts/cid/) - IPFS documentation\n\n[CID inspector](https://cid.ipfs.io/#QmY7Yh4UquoXHLPFo2XbhXkhBvFoPwmQUSa92pxnxjQuPU) - really useful when trying to understand CID's"
		},
		{
			"post_id": 1,
			"title": "Hello world!",
			"date_published": 1564275379,
			"body": "Your zeronet blog has been successfully created!"
		}
	],
	"tag": [
		{
			"value": "Random",
			"post_id": 1
		},
		{
			"value": "Decentralization",
			"post_id": 2
		},
		{
			"value": "P2P",
			"post_id": 2
		},
		{
			"value": "ZeroNet",
			"post_id": 2
		},
		{
			"value": "IPFS",
			"post_id": 2
		},
		{
			"value": "IPZN",
			"post_id": 2
		},
		{
			"value": "Deduplication",
			"post_id": 2
		},
		{
			"value": "Dat",
			"post_id": 2
		},
		{
			"value": "Solid",
			"post_id": 2
		},
		{
			"value": "ZeroNet",
			"post_id": 5
		},
		{
			"value": "Disinformation",
			"post_id": 5
		},
		{
			"value": "Clearnet",
			"post_id": 5
		},
		{
			"value": "8Chan",
			"post_id": 5
		},
		{
			"value": "Moderation",
			"post_id": 5
		},
		{
			"value": "Censorship",
			"post_id": 5
		},
		{
			"value": "Blocklists",
			"post_id": 5
		},
		{
			"value": "Cryptography",
			"post_id": 6
		},
		{
			"value": "ZeroNet",
			"post_id": 6
		},
		{
			"value": "Bitcoin",
			"post_id": 6
		},
		{
			"value": "ZeroID",
			"post_id": 6
		},
		{
			"value": "Certificates",
			"post_id": 6
		},
		{
			"value": "Domains",
			"post_id": 6
		},
		{
			"value": "Identity",
			"post_id": 6
		},
		{
			"value": "I2P",
			"post_id": 6
		},
		{
			"value": "Music",
			"post_id": 4
		},
		{
			"value": "Baroque",
			"post_id": 4
		},
		{
			"value": "Violin",
			"post_id": 4
		},
		{
			"value": "Music",
			"post_id": 9
		},
		{
			"value": "Violin",
			"post_id": 9
		},
		{
			"value": "Video",
			"post_id": 9
		},
		{
			"value": "Shortfilm",
			"post_id": 9
		},
		{
			"value": "Zites",
			"post_id": 10
		},
		{
			"value": "Programming",
			"post_id": 12
		},
		{
			"value": "Development",
			"post_id": 12
		},
		{
			"value": "Zites",
			"post_id": 12
		},
		{
			"value": "Social",
			"post_id": 13
		},
		{
			"value": "Analytics",
			"post_id": 13
		},
		{
			"value": "Metrics",
			"post_id": 13
		},
		{
			"value": "Interaction",
			"post_id": 13
		},
		{
			"value": "ZeroNet",
			"post_id": 13
		},
		{
			"value": "Clothing",
			"post_id": 14
		},
		{
			"value": "Regulation",
			"post_id": 14
		},
		{
			"value": "USA",
			"post_id": 14
		},
		{
			"value": "Random",
			"post_id": 14
		},
		{
			"value": "WIP",
			"post_id": 3
		},
		{
			"value": "Corona",
			"post_id": 8
		},
		{
			"value": "Covid",
			"post_id": 8
		},
		{
			"value": "E-Commerce",
			"post_id": 8
		},
		{
			"value": "Webshop",
			"post_id": 8
		},
		{
			"value": "Wuhan",
			"post_id": 8
		},
		{
			"value": "ZeroNet",
			"post_id": 8
		},
		{
			"value": "Commerce",
			"post_id": 8
		},
		{
			"value": "Commerce",
			"post_id": 15
		},
		{
			"value": "Odoo",
			"post_id": 15
		},
		{
			"value": "Python",
			"post_id": 15
		},
		{
			"value": "Raspberry",
			"post_id": 15
		},
		{
			"value": "Svelte",
			"post_id": 15
		},
		{
			"value": "ZeroNet",
			"post_id": 15
		},
		{
			"value": "Development",
			"post_id": 15
		},
		{
			"value": "Cargo",
			"post_id": 11
		},
		{
			"value": "Cratez",
			"post_id": 11
		},
		{
			"value": "Rust",
			"post_id": 11
		},
		{
			"value": "ZeroNet",
			"post_id": 11
		},
		{
			"value": "Development",
			"post_id": 11
		},
		{
			"value": "Rust",
			"post_id": 7
		},
		{
			"value": "WASM",
			"post_id": 7
		},
		{
			"value": "Yew",
			"post_id": 7
		},
		{
			"value": "Development",
			"post_id": 7
		},
		{
			"value": "Games",
			"post_id": 16
		},
		{
			"value": "Development",
			"post_id": 16
		},
		{
			"value": "ZeroNet",
			"post_id": 16
		},
		{
			"value": "Oxygengine",
			"post_id": 16
		},
		{
			"value": "Bindgen",
			"post_id": 16
		},
		{
			"value": "WASM",
			"post_id": 16
		},
		{
			"value": "ZeroNet",
			"post_id": 18
		},
		{
			"value": "Scalability",
			"post_id": 18
		},
		{
			"value": "ZeroGallery",
			"post_id": 19
		},
		{
			"value": "ZeroNet",
			"post_id": 19
		},
		{
			"value": "ZeroGallery",
			"post_id": 20
		},
		{
			"value": "g4z",
			"post_id": 20
		},
		{
			"value": "Rust",
			"post_id": 20
		},
		{
			"value": "WASM",
			"post_id": 20
		},
		{
			"value": "ZeroNet",
			"post_id": 20
		},
		{
			"value": "Orwell",
			"post_id": 21
		},
		{
			"value": "Speech",
			"post_id": 21
		},
		{
			"value": "Poetry",
			"post_id": 22
		},
		{
			"value": "Facebook",
			"post_id": 23
		},
		{
			"value": "Clearnet",
			"post_id": 23
		}
	]
}