{
	"next_topic_id": 69,
	"topic": [
		{
			"topic_id": 1633399719,
			"title": "自定义板块",
			"body": "",
			"added": 1633399718,
			"parent_topic_uri": "1571187322_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9",
			"type": "group"
		},
		{
			"topic_id": 1633399740,
			"title": "玩物得志",
			"body": "",
			"added": 1633399738,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633399757,
			"title": "打发时间",
			"body": "",
			"added": 1633399754,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633399831,
			"title": "linux下怎么获得查看gpt分区表",
			"body": "接下来在终端中执行如下命令:\n\nsudo dd if=/dev/sda of=gpt.bin bs=512 count=32\n\n说明：\n\nsudo:后面使用的dd命令需要有root权限\n\ndd:此命令可以直接从硬盘中复制扇区\n\nif:dd命令的参数，表示输入，这里以第一块硬盘为输入设备\n\nof:dd命令参数，表示输出，输出为gpt.bin的文件。\n\nbs:是一次操作多少个字节，这里是512，即硬盘的一个扇区。\n\ncount:是次数，gpt标准的结构是32个扇区，所以这里要操作32次，即依次读取第一块硬盘的0~31扇区。\n\n虽然GPT标准中的结构是32扇区，每个扇区是512字节，共计16KB，可以查看一下文件，正好是16KB。\n\nlinux下怎么获得查看gpt分区表\n接下来就可以使用16进制查看器来查看导出的GPT分区表了。\n\nlinux下怎么获得查看gpt分区表\n首先开头的是一个保护性的MBR，为的是兼容，和早期的MBR类似，以55AA作为结束。\n\nlinux下怎么获得查看gpt分区表\n接下来是GPT头，以UEFI PART作为头标识字符。更多的结构知识，可以慢慢借助获得的二进制GPT数据进行学习。",
			"added": 1633399827,
			"parent_topic_uri": "1631265455_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633399934,
			"title": "玄学问题",
			"body": "",
			"added": 1633399929,
			"parent_topic_uri": "1631265294_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633399952,
			"title": "强力修复",
			"body": "",
			"added": 1633399946,
			"parent_topic_uri": "1631265294_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633402753,
			"title": "今日思考",
			"body": "",
			"added": 1633402746,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633403036,
			"title": "权重 （汉语词语）",
			"body": "权重是一个汉语词语，读音为quán zhòng，一指某一因素或指标相对于某一事物的重要程度，其不同于一般的比重，体现的不仅仅是某一因素或指标所占的百分比，强调的是因素或指标的相对重要程度，倾向于贡献度或重要性。通常，权重可通过划分多个层次指标进行判断和计算，常用的方法包括层次分析法、模糊法、模糊层次分析法和专家评价法等；二指贡献度；三指权利、大权。",
			"added": 1633403028,
			"parent_topic_uri": "1632906434_1P2j5UayjHRj9MYGFiiHBAvC22Rzu8zN4M"
		},
		{
			"topic_id": 1633403137,
			"title": "搜索引擎优化 （搜索优化）",
			"body": "SEO（Search Engine Optimization）：汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。目的是让其在行业内占据领先地位，获得品牌收益。很大程度上是网站经营者的一种商业行为，将自己或自己公司的排名前移。",
			"added": 1633403128,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633403187,
			"title": "微服务 （SOA架构的一种变体）",
			"body": "什么是微服务？\n维基上对其定义为：一种软件开发技术- 面向服务的体系结构（SOA）架构样式的一种变体，它提倡将单一应用程序划分成一组小的服务，服务之间互相协调、互相配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务于服务间采用轻量级的通信机制互相沟通（通常是基于HTTP的RESTful API）。每个服务都围绕着具体业务进行构建，并且能够独立地部署到生产环境、类生产环境等。另外，应尽量避免统一的、集中式的服务管理机制，对具体的一个服务而言，应根据上下文，选着合适的语言、工具对其进行构建。",
			"added": 1633403177,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633403278,
			"title": "什么是K8S",
			"body": "k8s全称kubernetes，这个名字大家应该都不陌生，k8s是为容器服务而生的一个可移植容器的编排管理工具，越来越多的公司正在拥抱k8s，并且当前k8s已经主导了云业务流程，推动了微服务架构等热门技术的普及和落地，正在如火如荼的发展。那么称霸容器领域的k8s究竟是有什么魔力呢？\n\n首先，我们从容器技术谈起，在容器技术之前，大家开发用虚拟机比较多，比如vmware和openstack，我们可以使用虚拟机在我们的操作系统中模拟出多台子电脑（Linux），子电脑之间是相互隔离的，但是虚拟机对于开发和运维人员而言，存在启动慢，占用空间大，不易迁移的缺点。举一个我亲身经历过的场景吧，之前在vmware中开发了一个线下平台，为了保证每次能够顺利使用，我们就把这个虚拟机导出为OVF，然后随身携带，用的时候在服务器中部署，这里就充分体现了虚拟机的缺点。\n\n接着，容器化技术应运而生，它不需要虚拟出整个操作系统，只需要虚拟一个小规模的环境即可，而且启动速度很快，除了运行其中应用以外，基本不消耗额外的系统资源。Docker是应用最为广泛的容器技术，通过打包镜像，启动容器来创建一个服务。但是随着应用越来越复杂，容器的数量也越来越多，由此衍生了管理运维容器的重大问题，而且随着云计算的发展，云端最大的挑战，容器在漂移。在此业务驱动下，k8s问世，提出了一套全新的基于容器技术的分布式架构领先方案，在整个容器技术领域的发展是一个重大突破与创新。\n\n那么，K8S实现了什么？\n\n从架构设计层面，我们关注的可用性，伸缩性都可以结合k8s得到很好的解决，如果你想使用微服务架构，搭配k8s，真的是完美，再从部署运维层面，服务部署，服务监控，应用扩容和故障处理，k8s都提供了很好的解决方案。\n\n具体来说，主要包括以下几点：\n\n服务发现与调度\n负载均衡\n服务自愈\n服务弹性扩容\n横向扩容\n存储卷挂载\n总而言之，k8s可以使我们应用的部署和运维更加方便。\n\n最后，我们看下k8s的架构：\n\n\nk8s集群由Master节点和Node（Worker）节点组成。\n\nMaster节点\n\nMaster节点指的是集群控制节点，管理和控制整个集群，基本上k8s的所有控制命令都发给它，它负责具体的执行过程。在Master上主要运行着：\n\nKubernetes Controller Manager（kube-controller-manager）：k8s中所有资源对象的自动化控制中心，维护管理集群的状态，比如故障检测，自动扩展，滚动更新等。\nKubernetes Scheduler（kube-scheduler）： 负责资源调度，按照预定的调度策略将Pod调度到相应的机器上。\netcd：保存整个集群的状态。\nNode节点\n\n除了master以外的节点被称为Node或者Worker节点，可以在master中使用命令 kubectl get nodes查看集群中的node节点。每个Node都会被Master分配一些工作负载（Docker容器），当某个Node宕机时，该节点上的工作负载就会被Master自动转移到其它节点上。在Node上主要运行着：\n\nkubelet：负责Pod对应的容器的创建、启停等任务，同时与Master密切协作，实现集群管理的基本功能\nkube-proxy：实现service的通信与负载均衡\ndocker（Docker Engine）：Docker引擎，负责本机的容器创建和管理",
			"added": 1633403267,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633403346,
			"title": "Docker Compose",
			"body": "Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。\n\n如果你还不了解 YML 文件配置，可以先阅读 YAML 入门教程。\n\nCompose 使用的三个步骤：\n\n使用 Dockerfile 定义应用程序的环境。\n\n使用 docker-compose.yml 定义构成应用程序的服务，这样它们可以在隔离环境中一起运行。\n\n最后，执行 docker-compose up 命令来启动并运行整个应用程序。",
			"added": 1633403334,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633403454,
			"title": "再见 Docker，是时候拥抱下一代容器工具了",
			"body": "Linux 容器是由 Linux 内核所提供的具有特定隔离功能的进程，Linux 容器技术能够让你对应用及其整个运行时环境（包括全部所需文件）一起进行打包或隔离。从而让你在不同环境（如开发、测试和生产等环境）之间轻松迁移应用的同时，还可保留应用的全部功能。\n\nLinux 容器还有利于明确划分职责范围，减少开发和运维团队间的冲突。这样，开发人员可以全心投入应用开发，而运维团队则可专注于基础架构维护。由于 Linux 容器基于开源技术构建，还将便于你在未来轻松采用各类更新、更强的技术产品。包括 CRI-O、Kubernetes 和 Docker 在内的容器技术，可帮助你的团队有效简化、加速和编排应用的开发与部署。\n\n什么是 Docker？\nDocker 是一个开源的应用容器引擎，属于 Linux 容器的一种封装，Docker 提供简单易用的容器使用接口，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上。容器是完全使用沙箱机制，相互之间不会有任何接口。\n\nDocker 是目前最流行的 Linux 容器解决方案，即使 Docker 是目前管理 Linux 容器的一个非常方便的工具，但它也有两个缺点：\n\nDocker 需要在你的系统上运行一个守护进程。\n\nDocker 是以 root 身份在你的系统上运行该守护程序。\n\n这些缺点的存在可能有一定的安全隐患，为了解决这些问题，下一代容器化工具 Podman 出现了 。\n\n什么是 Podman ？\n图片\nPodman 是一个开源的容器运行时项目，可在大多数 Linux 平台上使用。Podman 提供与 Docker 非常相似的功能。正如前面提到的那样，它不需要在你的系统上运行任何守护进程，并且它也可以在没有 root 权限的情况下运行。\n\nPodman 可以管理和运行任何符合 OCI（Open Container Initiative）规范的容器和容器镜像。Podman 提供了一个与 Docker 兼容的命令行前端来管理 Docker 镜像。\n\nPodman 官网地址：https://podman.io/\n\nPodman 项目地址：https://github.com/containers/libpod\n\n安装 Podman\nPodman 目前已支持大多数发行版本通过软件包来进行安装，下面我们来举几个常用发行版本的例子。\n\nFedora / CentOS\n\n$ sudo yum -y install podman\nUbuntu\n\n$ sudo apt-get update -qq\n$ sudo apt-get install -qq -y software-properties-common uidmap\n$ sudo add-apt-repository -y ppa:projectatomic/ppa\n$ sudo apt-get update -qq\n$ sudo apt-get -qq -y install podman\nMacOS\n\n$ brew cask install podman\nRHEL 7\n\n$ sudo subscription-manager repos --enable=rhel-7-server-extras-rpms\n$ sudo yum -y install podman\nArch Linux\n\n$ sudo pacman -S podman\n更多系统的安装方法，可参考官方文档：https://github.com/containers/libpod/blob/master/install.md\n\n使用 Podman\n使用 Podman 非常的简单，Podman 的指令跟 Docker 大多数都是相同的。下面我们来看几个常用的例子：\n\n运行一个容器\n$ podman run -dt -p 8080:8080/tcp  \\\n-e HTTPD_VAR_RUN=/var/run/httpd  \\\n-e HTTPD_MAIN_CONF_D_PATH=/etc/httpd/conf.d \\\n-e HTTPD_MAIN_CONF_PATH=/etc/httpd/conf \\\n-e HTTPD_CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/httpd/ \\\nregistry.fedoraproject.org/f27/httpd /usr/bin/run-httpd\n列出运行的容器\n$ podman ps -a\n分析一个运行的容器\n$ podman inspect -l | grep IPAddress\\\":\n\"SecondaryIPAddresses\": null,\n\"IPAddress\": \"\",\n查看一个运行中容器的日志\n$ sudo podman logs --latest\n10.88.0.1 - - [07/Feb/2018:15:22:11 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.55.1\" \"-\"\n10.88.0.1 - - [07/Feb/2018:15:22:30 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.55.1\" \"-\"\n10.88.0.1 - - [07/Feb/2018:15:22:30 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.55.1\" \"-\"\n10.88.0.1 - - [07/Feb/2018:15:22:31 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.55.1\" \"-\"\n10.88.0.1 - - [07/Feb/2018:15:22:31 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.55.1\" \"-\"\n查看一个运行容器中的进程资源使用情况\n$ sudo podman top <container_id>\n  UID   PID  PPID  C STIME TTY          TIME CMD\n    0 31873 31863  0 09:21 ?        00:00:00 nginx: master process nginx -g daemon off;\n  101 31889 31873  0 09:21 ?        00:00:00 nginx: worker process\n停止一个运行中的容器\n$ sudo podman stop --latest\n删除一个容器\n$ sudo podman rm --latest\n以上这些特性基本上都和 Docker 一样，Podman 除了兼容这些特性外，还支持了一些新的特性。\n\n给容器设置一个检查点\n$ sudo podman container checkpoint <container_id>\n需要 CRIU 3.11 以上版本支持，CRIU 项目地址：https://criu.org/\n\n根据检查点位置恢复容器\n$ sudo podman container restore <container_id>\n迁移容器\nPodman 支持将容器从一台机器迁移到另一台机器。\n\n首先，在源机器上对容器设置检查点，并将容器打包到指定位置。\n\n$ sudo podman container checkpoint <container_id> -e /tmp/checkpoint.tar.gz\n$ scp /tmp/checkpoint.tar.gz <destination_system>:/tmp\n其次，在目标机器上使用源机器上传输过来的打包文件对容器进行恢复。\n\n$ sudo podman container restore -i /tmp/checkpoint.tar.gz\n配置别名\n如果习惯了使用 Docker 命令，可以直接给 Podman 配置一个别名来实现无缝转移。你只需要在 .bashrc 下加入以下行内容即可：\n\n$ echo \"alias docker=podman\" >> .bashrc\n$ source .bashrc\nPodman 如何实现开机重启容器\n由于 Podman 不再使用守护进程管理服务，所以不能通过守护进程去实现自动重启容器的功能。那如果要实现开机自动重启容器，又该如何实现呢？\n\n其实方法很简单，现在大多数系统都已经采用 Systemd 作为守护进程管理工具。这里我们就可以使用 Systemd 来实现 Podman 开机重启容器，这里我们以启动一个 Nginx 容器为例子。\n\n首先，我们先运行一个 Nginx 容器。\n\n$ sudo podman run -t -d -p 80:80 --name nginx nginx\n然后，在建立一个 Systemd 服务配置文件。\n\n$ vim /etc/systemd/system/nginx_container.service\n\n[Unit]\nDescription=Podman Nginx Service\nAfter=network.target\nAfter=network-online.target\n\n[Service]\nType=simple\nExecStart=/usr/bin/podman start -a nginx\nExecStop=/usr/bin/podman stop -t 10 nginx\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n接下来，启用这个 Systemd 服务。\n\n$ sudo systemctl daemon-reload\n$ sudo systemctl enable nginx_container.service\n$ sudo systemctl start nginx_container.service\n服务启用成功后，我们可以通过 systemctl status 命令查看到这个服务的运行状况。\n\n$ sudo systemctl status nginx_container.service\n● nginx_container.service - Podman Nginx Service\n   Loaded: loaded (/etc/systemd/system/nginx_container.service; enabled; vendor preset: disabled)\n   Active: active (running) since Sat 2019-08-20 20:59:26 UTC; 1min 41s ago\n Main PID: 845 (podman)\n    Tasks: 16 (limit: 4915)\n   Memory: 37.6M\n   CGroup: /system.slice/nginx_container.service\n           └─845 /usr/bin/podman start -a nginx\n\nAug 20 20:59:26 Ubuntu-dev.novalocal systemd[1]: Started Podman Nginx Service.\n之后每次系统重启后 Systemd 都会自动启动这个服务所对应的容器。\n\n其它相关工具\nPodman 只是 OCI 容器生态系统计划中的一部分，主要专注于帮助用户维护和修改符合 OCI 规范的容器镜像。其它的组件还有 Buildah、Skopeo 等。\n\nBuildah\n图片\n\n虽然 Podman 也可以支持用户构建 Docker 镜像，但是构建速度比较慢。并且默认情况下使用 VFS 存储驱动程序会消耗大量磁盘空间。\n\nBuildah 是一个专注于构建 OCI 容器镜像的工具，Buildah 构建速度非常快并使用覆盖存储驱动程序，可以节约大量的空间。\n\nBuildah 基于 fork-exec 模型，不以守护进程运行。Buildah 支持 Dockerfile 中的所有命令。你可以直接使用 Dockerfiles 来构建镜像，并且不需要任何 root 权限。Buildah 也支持用自己的语法文件构建镜像，可以允许将其他脚本语言集成到构建过程中。\n\n下面是一个使用 Buidah 自有语法构建的例子。\n\n图片\n\nBuildah 和 Podman 之间的一个主要区别是：Podman 用于运行和管理容器， 允许我们使用熟悉的容器 CLI 命令在生产环境中管理和维护这些镜像和容器，而 Buildah 主用于构建容器。\n\n项目地址：https://github.com/containers/buildah\n\nSkopeo\n图片\n\nSkopeo 是一个镜像管理工具，允许我们通过 Push、Pull和复制镜像来处理 Docker 和符合 OCI 规范的镜像。\n\n项目地址：https://github.com/containers/skopeo\n\n延伸阅读\n什么是 OCI？\nOCI (Open Container Initiative)，是一个轻量级，开放的治理结构（项目）。在 Linux 基金会的支持下成立，致力于围绕容器格式和运行时创建开放的行业标准。\n\nOCI 项目由 Docker、CoreOS 和容器行业中的其它领导者在 2015 年 6 月的时候启动，OCI 的技术委员会成员包括 Red Hat、Microsoft、Docker、Cruise、IBM、Google、Red Hat 和 SUSE 等。\n\n什么是 CRI？\nCRI（Container Runtime Interface）是 Kubernetes v1.5 引入的容器运行时接口，它将 Kubelet 与容器运行时解耦，将原来完全面向 Pod 级别的内部接口拆分成面向 Sandbox 和 Container 的 gRPC 接口，并将镜像管理和容器管理分离到不同的服务。\n\n图片\n什么是 CNI？\nCNI（Container Network Interface）是 CNCF 旗下的一个项目，是 Google 和 CoreOS 主导制定的容器网络标准。CNI 包含方法规范、参数规范等，是 Linux 容器网络配置的一组标准和库，用户可以根据这些标准和库来开发自己的容器网络插件。CNI 已经被 Kubernetes、Mesos、Cloud Foundry、RKT 等使用，同时 Calico、Weave 等项目都在为 CNI 提供插件。\n\n图片\n总结\n本文介绍三个了符合 CRI 标准的容器工具 Podman、 Buildah 和 Skopeo。这三个工具都是基于 *nix 传统的 fork-exec 模型，解决了由于 Docker 守护程序导致的启动和安全问题，提高了容器的性能和安全。",
			"added": 1633403441,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633404235,
			"title": "旧版软件",
			"body": "安装包",
			"added": 1633404221,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633404661,
			"title": "需求分析",
			"body": "你有哪些需求？",
			"added": 1633404646,
			"parent_topic_uri": "1631265294_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633405535,
			"title": "苍蝇反应为什么这么快,苍蝇反应是人类的几倍",
			"body": "苍蝇反应为什么这么快,苍蝇反应是人类的几倍\n2020-07-05 11:04:13 分类：团团随笔 阅读(2031) 评论(0)\n苍蝇反应为什么这么快,苍蝇反应是人类的几倍插图\n\n对于我们大多数人来说，想拍打到苍蝇非常困难的，似乎苍蝇的反应时间几乎是瞬间的。\n\n苍蝇的反应速度这么快，是因为苍蝇对时间的感知和我们人类有着非常大的区别。\n\n苍蝇反应为什么这么快,苍蝇反应是人类的几倍插图(1)\n\n我们和苍蝇对时间的感知的差异在于眼睛的速度，其实就就是大脑处理视觉信息的速度。\n\n大脑处理图像的速度叫做闪烁融合频率。\n\n有点抽象对不对，我们可以想象一下，我们观察一个每秒闪烁2次的LED灯，可以很轻易地知道这个灯在闪烁。\n\n那每秒闪烁10次，20次，30次呢？\n\n苍蝇反应为什么这么快,苍蝇反应是人类的几倍插图(2)\n\n随着闪烁速度的加快，人眼想看出这个灯在闪烁变得越来越困难，到最后我们就只能看到一个常亮的LED灯。\n\n不同的人闪烁融合频率是存在差异的，有些人可以感知到非常快的闪烁，而另一些人则并不会认为在闪烁。\n\n一般来说，人眼可以识别变化速度小于24帧/秒的连续图像，大约为42毫秒。\n\n苍蝇反应为什么这么快,苍蝇反应是人类的几倍插图(3)\n\n达到或者超过这个速度的连续变化图像，我们看上去就是平滑连续的视觉效果，也就产生了所谓的视觉延迟现象。\n\n这是因为人眼感知到外界信息，将信息传输给大脑，大脑对信息进行处理，再转化为相应的行动，这都需要一定的时间。\n\n如果大脑不能以同样的速度处理信息，那么我们的眼睛以更高的频率向大脑发送信息就没有任何价值。\n\n苍蝇反应为什么这么快,苍蝇反应是人类的几倍插图(4)\n\n而苍蝇的大脑处理视觉信息的时间就要比人类短得多，它每秒可以处理的图像大概为400帧（不同种类的苍蝇情况不同）。\n\n这也就能解释，我们所认为的瞬间的拍打，对苍蝇来说是非常非常慢的动作，它想逃跑简直是轻而易举。\n\n在苍蝇眼里，我们就相当于一只蜗牛的移动速度。\n\n苍蝇反应为什么这么快,苍蝇反应是人类的几倍插图(5)\n\n所以动物在很小的尺度上对时间的感知能力，决定了能不能快速有效躲避外界带来的伤害。\n\n苍蝇具有这种独特的能力，这也是为什么我们老是达不到苍蝇的原因。",
			"added": 1633405519,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633406334,
			"title": "不同的物种，相同的总心跳？才没那么准",
			"body": "流言：\n“哺乳动物一生心跳有8亿次”，“动物不论种类和大小，在其有限的寿命中，心跳次数基本上都在15亿次左右” ，“所有哺乳动物的心跳次数都近乎十亿次，只不过老鼠用了750天，大象用了75年”……类似这样的说法，网上就能找到不少，它们都传递着这样一个信息：“动物一辈子的心跳数总是差不多”。\n\n真相：\n这心跳数字一会儿一变，还有没有点准谱？还真没有……哺乳动物一生的心跳总数可能确实有些规律，但这规律可远没有准到可以用“8亿”或是“10亿”去总结。\n\n图片来自：shutterstock\n\n相同的心跳？规律远没那么准\n个头大小、寿命千差万别的动物们会有相似的心跳总数吗？需要承认的是，至少在哺乳动物里面，确实有研究发现过类似的规律，但实际上数字远没有那么准。\n\n比如说，1997年的一篇论文就对多种哺乳动物的心跳数据进行过分析，其中包括猫狗、猴子、大象、鲸等等。结果发现，虽然这些动物的寿命之间可以相差到40倍之多，但它们一生中平均的心跳总数却大约处在同一个数量级上（7.3±5.6×108，也就是说，平均值是7.3亿）。\n\n从数据上就能看出，这最多只能说是同一个数量级上的规律。而且在下结论之前，我们还要注意两个问题：第一，还有很多种动物的心跳数没有统计在其中；第二，测量野生动物的心跳并不容易，研究者们能测到的个体不多，而且有时候还只能在五花大绑或是麻醉的条件下测量，这样估算的心跳总数准不准也不好说。这样看来，至少用一个确数（无论这个数是多少）来总结动物一生的心跳肯定是不靠谱的。\n\n另外值得一提的是，人类在这里可是被排除在外的“异类”。现在全球人类的平均预期寿命有70岁以上，不少地方人们的预期寿命还超过了80岁，如此算来，人类一生的心跳总数预期值可以达到30亿次，这个数字比起其他常见哺乳动物的心跳-寿命拟合曲线要偏离出去很多。看起来，这得感谢科技和医疗的进步。\n\n人类——“心跳-寿命曲线”上的异类。图片来自：参考文献1\n\n心跳的规律是怎么来的？\n一般来说，个头小的哺乳动物心跳快、寿命短，而个头大的动物则心跳更慢、寿命更长。老鼠的小心脏以每分钟600~700次的速度奔腾，而大象和鲸体内的心脏则以每分钟30多次的频率慢条斯理地跳着。对这种现象的一个常见解释是，小个头的动物相对表面积大，热量散失更厉害，所以为了保持体温稳定，就需要更高的代谢率，而高心跳就是高代谢率的伴随产物。但是这也不绝对，比如啮齿类里著名的“奇葩”裸滨鼠（Heterocephalus glaber），它们个头不大，体重也才几十克，但心跳却比老鼠们慢得多（每分钟才200多次），寿命也长得出奇（裸滨鼠能活二三十岁，这是实验室小鼠寿命的十倍）。\n\n裸滨鼠从各个方面看都是奇葩。图片来自：University of Rochester\n\n那么“奔腾的心”为什么和较短的寿命联系了起来？研究认为，加快的心跳会带来一系列不利于心脏功能的因素，比如说舒张期缩短会减少心肌的供血，动物实验还发现加快的心跳加剧了动脉硬化、氧化应激和炎症反应。心跳快慢可能就是通过影响心脏健康从而和寿命产生了关联。\n\n减慢心跳，能让人长寿吗？\n当然，在“动物冷知识”之外，我们还是更关心这些数据和人类的关系。要让心跳慢一些，是不是能更加长寿？\n\n人类的心跳总数超出了其他哺乳动物一大截，不过在人身上，研究者们确实也观察到了心跳和寿命的相关性。从流行病学的统计数据来看，心跳慢（在正常范围内偏慢）的人似乎确实寿命更长些。在排除掉血压等因素的影响之后，较快的静息心率（比如安静时心率每分钟90次以上）依然被视为一个独立的风险因素。\n\n那为让心脏健康工作更久，人们是不是要赶紧吃点减慢心率的药物了？这可不一定。在冠心病、心力衰竭的患者身上，控制心率的好处是比较明确的。他们的心脏已经生病了，较慢的心跳可以让心脏“减负”，同时更长的舒张期也有助于改善心肌供血。而在那些还没有患上心脏病的人身上，进行减慢心跳的“预防治疗”是不是真有好处就不好说了。\n\n不过，你至少可以去运动——运动时心跳加快，但坚持锻炼则会减慢静息心率，而且运动对改善健康的作用非常靠谱。\n\n运动有益心脏健康，是的我们又回到这个老生常谈的话题，快去锻炼吧。图片来自：shutterstock\n\n结论：\n流言部分破解。哺乳动物心跳和寿命的规律确实有研究支持，但这规律远没那么准，更不能说心脏跳完多少次之后就要“报废”。想让自己的心脏更健康就多锻炼吧。（编辑：Ent）",
			"added": 1633406317,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633407186,
			"title": "老鼠跑步速度有多快？",
			"body": "一个晚上在客厅看电视的时候，背后传来窸窸窣窣的声音，家里住的是十几年的老房子了，楼下有几家不怎么卫生的餐厅，老鼠进屋里来最近是好平常的事情了。留意了一下，进屋的两只老鼠似乎不那么怕人，不过让我比较郁闷的是看它们飞快地从眼前跑开，不无夸张的说几乎跟汽车速度差不多，亏得体积小，不然真是个人间祸害。\n\n老鼠跑得比人还快么？这种哺乳动物的奔跑速度是不是都会比人要快？",
			"added": 1633407168,
			"parent_topic_uri": "1571187471_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9"
		},
		{
			"topic_id": 1633417386,
			"title": "LISP是不是最强大的编程语言?",
			"body": "经常听到LISP的扩展能力几乎是无限的，而且可以实现任何编程语言中的任何功能，所以没有一个编程语言可以和LISP比较，包括Haskell。",
			"added": 1633417367,
			"parent_topic_uri": "1631265873_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633420701,
			"title": "如何有效地输入lisp，括号如此之多？",
			"body": "我试着尽可能地把手指放在家里。 键入所有括号使我离开那里一点点。 我用Emacs;括号本身没问题，我对它们很满意。而且我不喜欢自动为我输入的模式。 我想过将方括号重新映射到圆括号，反之亦然。这是一个好主意吗？其他人都做了什么？",
			"added": 1633420681,
			"parent_topic_uri": "1631265873_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633426511,
			"title": "你的Linux系统是否经常更新呢？",
			"body": "不知道大家是否有这样的习惯呢？当某60或某讯的软件管家提醒你有软件需要升级时，根本不看新版本有哪些内容，也不会看这些功能是否需要，总之一定要点全部升级，使用上最新的版本，而这些新版本为我们带来了哪些新的功能、好处，一概不知！\n\n以上可能是很多人使用windows系统的习惯，而linux系统和windows系统有很大的不同，比如软件管理方面，windows某些软件升级后，需要重启才能使用。而linux几乎所有软件升级，都是安装即生效的。\n\n既然升级这么方便，那你的Linux系统是否会经常更新呢？\n\n我们来交流意见吧，请把你的系统版本，是否经常更新，原因留在下面，按照以下格式留言：\n\n系统版本：\n\n是否更新：\n\n原因备注：",
			"added": 1633426490,
			"parent_topic_uri": "1631265873_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633426528,
			"title": "linux 有必要升级吗?",
			"body": "",
			"added": 1633426506,
			"parent_topic_uri": "1631265873_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633426711,
			"title": "升级体验",
			"body": "是否值得升级",
			"added": 1633426688,
			"parent_topic_uri": "1631265294_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi",
			"type": "group"
		},
		{
			"topic_id": 1633426726,
			"title": "[社区新闻] 深度操作系统20.2.4发布",
			"body": "",
			"added": 1633426702,
			"parent_topic_uri": "1633426711_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633426867,
			"title": "坚持不更新系统",
			"body": "看谁坚持时间长",
			"added": 1633426842,
			"parent_topic_uri": "1631265294_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi",
			"type": "group"
		},
		{
			"topic_id": 1633426894,
			"title": "系统版本：deepin15.5",
			"body": "是否更新：大概4个月一次更新",
			"added": 1633426868,
			"parent_topic_uri": "1633426867_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633426976,
			"title": "消耗流量少的发行版",
			"body": "系统升级，软件升级",
			"added": 1633426974,
			"parent_topic_uri": "1632837414_14FAgfMruqxP9SM3BjEG9PyB6mzNsyjred"
		},
		{
			"topic_id": 1633429787,
			"title": "元数据发行版",
			"body": "安装更新软件一共消耗多少流量\n软件更新次数",
			"added": 1633429759,
			"parent_topic_uri": "1632837414_14FAgfMruqxP9SM3BjEG9PyB6mzNsyjred"
		},
		{
			"topic_id": 1633432078,
			"title": "linux 批评家",
			"body": "你对linux还有哪些不满意的地方？",
			"added": 1633432049,
			"parent_topic_uri": "1631265294_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633432463,
			"title": "输入法问题",
			"body": "",
			"added": 1633432433,
			"parent_topic_uri": "1631265294_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi",
			"type": "group"
		},
		{
			"topic_id": 1633432478,
			"title": "小鹤双拼",
			"body": "",
			"added": 1633432447,
			"parent_topic_uri": "1633432463_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633432492,
			"title": "导入词库",
			"body": "",
			"added": 1633432460,
			"parent_topic_uri": "1633432463_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633434763,
			"title": "空耳",
			"body": "",
			"added": 1633434730,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA",
			"type": "group"
		},
		{
			"topic_id": 1633434792,
			"title": "我在东北玩泥巴 - 歌曲",
			"body": "",
			"added": 1633434758,
			"parent_topic_uri": "1633434763_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633479298,
			"title": "最后的晚餐",
			"body": "未知的明天\n\n等等党的胜利\n零氪党的胜利\n捷径\n开发者模式\n上帝模式\n\n精力管理，随时应对突发的事件\n干货分享平台",
			"added": 1633479283,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633479392,
			"title": "捷径",
			"body": "掌握捷径，快人一步",
			"added": 1633479356,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633479458,
			"title": "今天应该作什么",
			"body": "",
			"added": 1633479421,
			"parent_topic_uri": "1633399719_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA",
			"type": "group"
		},
		{
			"topic_id": 1633479468,
			"title": "了解世界",
			"body": "",
			"added": 1633479430,
			"parent_topic_uri": "1633479458_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633479553,
			"title": "了解自己掌握的资源",
			"body": "运用自己掌握的资源\n\n拥有一个健康的身体",
			"added": 1633479612,
			"parent_topic_uri": "1633479458_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633480003,
			"title": "了解生活需求",
			"body": "物质需求\n精神需求\n信息需求",
			"added": 1633479997,
			"parent_topic_uri": "1633479458_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633480053,
			"title": "低成本变现",
			"body": "",
			"added": 1633480012,
			"parent_topic_uri": "1633479458_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633480071,
			"title": "拥有保护自己的武器",
			"body": "",
			"added": 1633480029,
			"parent_topic_uri": "1633479458_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633481043,
			"title": "Rust 所有权",
			"body": "计算机程序必须在运行时管理它们所使用的内存资源。\n\n大多数的编程语言都有管理内存的功能：\n\nC/C++ 这样的语言主要通过手动方式管理内存，开发者需要手动的申请和释放内存资源。但为了提高开发效率，只要不影响程序功能的实现，许多开发者没有及时释放内存的习惯。所以手动管理内存的方式常常造成资源浪费。\n\nJava 语言编写的程序在虚拟机（JVM）中运行，JVM 具备自动回收内存资源的功能。但这种方式常常会降低运行时效率，所以 JVM 会尽可能少的回收资源，这样也会使程序占用较大的内存资源。\n\n所有权对大多数开发者而言是一个新颖的概念，它是 Rust 语言为高效使用内存而设计的语法机制。所有权概念是为了让 Rust 在编译阶段更有效地分析内存资源的有用性以实现内存管理而诞生的概念。\n\n所有权规则\n所有权有以下三条规则：\n\n>Rust 中的每个值都有一个变量，称为其所有者。\n>一次只能有一个所有者。\n>当所有者不在程序运行范围时，该值将被删除。\n\n这三条规则是所有权概念的基础。",
			"added": 1633481093,
			"parent_topic_uri": "1633054172_15d73VXHUQrQ248bdcCpMNCP3CR16suhb7"
		},
		{
			"topic_id": 1633481232,
			"title": "理论上 flatpak 更开放",
			"body": "而 snap 能让 flatpak 有竞争\n\nlatpak 和 snap 都是用 Linux 命名空间等机制来达到类似 chroot 和隔离、共享的目的，但具体实现不太一样，\n\n以及 snap 默认软件包文件存在于只读压缩磁盘镜像里，需要先挂载才能用；\n而 flatpak 安装时就把文件们解压进系统了。\n理论上 snap 会占用磁盘空间小些，而 flatpak 冷启动运行开销会小一些。",
			"added": 1633481188,
			"parent_topic_uri": "1633054172_15d73VXHUQrQ248bdcCpMNCP3CR16suhb7"
		},
		{
			"topic_id": 1633498235,
			"title": "世界之大",
			"body": "一口大锅炖不下",
			"added": 1633498190,
			"parent_topic_uri": "1571187322_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9",
			"type": "group"
		},
		{
			"topic_id": 1633498264,
			"title": "这才是咪蒙被封杀的真实原因！",
			"body": "惊闻咪蒙被封杀，而且是全网全平台封杀。一些媒体用了“不得转世”这种吓人的词语。而对于咪蒙的封杀，又引发了巨大的讨论，支持者和反对者都有。下面，简单谈谈我的看法。\n\n1\n\n咪蒙的成长史。\n\n有一篇《我在山东大学的学姐—咪蒙》讲述了马凌（咪蒙真名）在山大读本科和硕士的经历，他硕士读的是魏晋文学史，毕业论文写的是《玄学本体论与阮籍诗歌》，还获了奖。\n\n马凌的偶像是文学批判家金圣叹。她曾给韩寒《独唱团》写过一篇文章，题目叫《好疼的金圣叹》，里面有这样一句话：“他属于中国历代文人中有趣、任性又精神分裂的稀有物种。”\n\n金圣叹一生恃才傲物，又死的很悲惨。有兴趣，可以搜下金圣叹的故事。\n\n她在文章还这样写道:\n\n“社会表彰活着的顺从者和死去的叛逆者,而文人不过是时代的点缀而已。金圣叹将死之时,才真正意识到这一点,他借着死亡做出了最后一场表演。”\n\n那么金圣叹最后一场表演是什么呢？据说，他被押去法场的路上，两个儿子莲和梨痛哭流涕。金圣叹说，别哭了，我出个对联，你们对一下。上联：莲子心中苦。\n\n儿子们已经痛哭流涕，不能自已，哪有心思作答。金圣叹接着又说了下联：梨儿腹内酸。\n\n莲与“怜”同音，意思是可怜两个儿子，内心十分痛苦；梨与离同音，意思是离开两个儿子，我内心酸楚难耐。\n\n尔虞我诈、烽烟四起、兵荒马乱的魏晋南北朝历史以及她对金圣叹的崇拜，让批判和叛逆写入了她的骨髓，为她写批判的文风埋下了种子。\n\n\n而马凌13岁时就亲眼见到父亲出轨，母亲被小三毒打的狗血剧。她在内心中一定痛恨男权，希望女权战胜男权。\n\n所以在许多文章中，她都在替那些认为在家里受委屈的女性呐喊，让她们大胆去做自己想做的事，去和老公干架，去争取自由，去“睡小鲜肉”......\n\n而马凌从报社离职后，为了自己的导演梦、剧作家梦创办影视公司，很快亏掉400万元。这个经历让她发誓，再创办公司一定只为了赚钱，梦想统统滚蛋。\n\n搞文字工作的人都知道，只有没被厂商充值的文章，作者才能更自由的发挥，才能写出自己感觉满意的文字。好文章与赚钱本来就是矛盾的，否则报社里的记者们也不会纷纷离职去做自媒体了。\n\n如何解决这个矛盾呢？就是要让文章具有足够的煽动性、传播性，让读者忽略广告的存在。\n\n当把创办自媒体公司的唯一目标定为赚钱之后，马凌就不需要当那个人格分裂的作者，不需要扭曲自我了。怎么有流量，怎么赚钱，就怎么来。文章仅仅是赚钱的工具，这个工具是什么，有什么价值，已经不再重要了。\n\n2\n\n封杀的正反面。\n\n2017年6月，我曾写过批判咪蒙的文章，那是在一篇她关于大学生嫖娼的文章发布后。我说她太坏，说她为了赚钱不择手段，甚至诅咒微信、微博、新媒体全平台封杀她。\n\n结果，一语成谶。当她真的被封掉后，在看到“不得转世”的文字，感觉非常凄凉。同为码字的人，我看得懂她写文章的手法，一直认为她是古斯塔夫·勒庞的好学生，深刻领悟并完美运用了《乌合之众》。\n\n每个人都有表达的自由，只要在法律允许的范围内。她想要靠文章赚钱，是她的自由。我看不惯她，骂她，诅咒她被封杀，是我的自由。\n\n现在限制了她的自由，作为同行的我，也同样感到窒息。谁都懂唇亡齿寒的道理，这是我站在一个自媒体的立场来看的。\n\n\n但是站在社会的立场，或是监管的立场，又有不同看法。\n\n我感觉咪蒙被封杀的真实原因，或许并不是她写得文章的价值观多么的不正，她多么的唯利是图，多么的伤风败俗。最重要的是，她已经依靠制造焦虑和恐慌的文字，成为千万乌合之众的领袖，成为“咪蒙教主”。\n\n这才是问题的核心。互联网时代的社群影响力、传播力和渗透力，是任何传统媒体所无法企及的。监管不担心咪蒙制造怎样的内容，担心的是无数家庭，被咪蒙扭曲的，错误的女权思维洗脑，导致一系列的家庭问题、社会问题。\n\n不要说，这是小题大做。咪蒙的影响力，已经超越一家省级电视台，比湖南台都有传播力。\n\n而且，咪蒙不仅仅有一批追随者，还有一批批想要成为咪蒙，想要靠戳中人性弱点，制造煽动内容而赚钱的自媒体。这种榜样效应，也同样是监管担忧的。\n\n所以，全面封杀咪蒙，有道理，也没道理，更没有什么对错可言，无非是所站的立场不同罢了。",
			"added": 1633498218,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633498303,
			"title": "听懂掌声",
			"body": "“听懂掌声”这个词语是来自于一个培训视频，在视频里面做培训的人叫做枭哥，培训的内容属于是比较激励人心的那种。在枭哥说完一段话的时候，枭哥就会说出四个字，就是听懂掌声，并询问大家是否能听懂，这四个字的意思其实就是这段话如果听懂了那么就鼓掌，其实就是表示认可的一种方式。\n但是因为在视频里面大家发现听懂掌声这个词语出现的频率太多了，而且每次说的时候都让人感觉非常的魔性，所以听懂掌声就变成了一个流行梗。比如说现在在和别人讲一件事情的时候，后面就可以加上听懂掌声这个词语，表示的意思就是在询问别人是否听懂，听懂了那么鼓掌就完了。",
			"added": 1633498256,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633498349,
			"title": "手机群控",
			"body": "群控，分为线控及云控。可以用一台电脑控制上百部手机，实现上百部手机同时同步操作。\n企业级硬件管理系统和自动化营销系统，让软件解放双手，一台电脑控制百部手机，同时操作微信达到电脑群控手机的效果，极大程度上节省人工成本，提高办公和微信营销效率。",
			"added": 1633498301,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633498431,
			"title": "冲动消费",
			"body": "冲动消费是指顾客在外界因素促发下所进行的事先没有计划或者意识的购买行为，冲动消费具有事前无意识、无计划，以及外界促发下形成的特点。\n\n-----------------------/*********------\n类型\n\n纯冲动型\n顾客事先完全无购买愿望，没有经过正常的消费决策过程，临时决定购买。购买时完全背离对商品和商标的正常选择，是一种突发性的行为，出于心理反应或情感冲动而“一时兴起”或“心血来潮”，或是“图新奇”、“求变化”。\n\n刺激冲动型\n顾客在购物现场见到某种产品或某些广告宣传、营业推广，提示或激起顾客尚未满足的消费需求，从而引起消费欲望，而决定购买，是购物现场刺激的结果。\n\n计划冲动型\n顾客具有某种购买需求，但没有确定购买地点和时间。如得知某超市要让利销售，专门到该超市购物，但没有具体的购物清单，因而买“便宜货”是有计划的，买何种“便宜货”则是冲动的。",
			"added": 1633498382,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633498511,
			"title": "挟用户而令诸侯 微信美梦难成",
			"body": "春节将至，深谙营销之道的各大互联网巨头们，自然不会放过这一年难得的营销机会：用极低的成本吸金又吸用户。而年底的首场互联网巨头大战，便是由阿里和腾讯引发：在微信和支付宝在红包大战上打得不可开交之时，微信从2月2日开始出台多张封杀令，杀得利用微信庞大社交网络扩大活动范围的阿里旗下多类产品连连败退，一场吐槽微信封杀行为的活动随之火热起来。\n\n当微信在2月4日将虾米音乐和天天动听、网易云音乐三大音乐类产品阻拦在微信社交生态圈之外，却给QQ音乐引流之时，微信终于触及了用户们的底线。短短数个小时，吐槽微信的言论鱼贯而来，微信顿时备受舆论指责。微信作为一款拥有8亿多用户的平台，其此番上演的这场“挟天子而令诸侯”的好戏，实则是“挟用户而令诸侯”。在代表天子的用户们对于微信封杀之举并不买账的情况下，微信能摆出“挟用户而令诸侯”之势，却难以用“挟用户而令诸侯”之威，真正地封杀竞争对手，进而强化自家产品的竞争优势。\n\n微信妄图挟用户而令诸侯 用户却并不买单\n\n当新版微信强制在朋友圈信息流中推荐广告之后，新一轮的微信吐槽活动其实就已经酝酿，但这场吐槽活动迎来的并非是微信更优质的商业化计划，而是微信将我们需要的应用封杀，却强制推荐大家使用腾讯旗下自家的垂直产品，这便让吐槽微信的活动进一步发酵。\n\n当年3Q大战之时，360和腾讯借助各自在垂直领域的用户优势，让用户面临了一次“有360就没有腾讯”的艰难选择，最终却因为用户反抗而带来了极大的负面影响。水能载舟亦能覆舟，微信取得如今的地位离不开广大用户的支持，但这样未经用户授权的情况下就将用户需要的诸多垂直产品上赶出生态圈，却让自家的产品在生态圈中一家独大，这一招“挟用户而令诸侯”的活动看似恢弘霸道，充满了斗气，却会引起用户的极为强烈的反感。\n\n3Q大战的结果在证明着，古人挟天子以令诸侯虽能成，但在现今的互联网生活中，想要挟用户而令诸侯却并非易事：微信自己并非真命天子，微信他要挟的天子是用户，用户作为一个群体，是不可能被微信所挟持的，一切打着用户的名头所采取的不当行为，终归都会受到用户这位天子的批判。因此，由于用户不买单，微信这次挟用户而令诸侯只能以美梦破碎收尾，至多也就是震慑下竞争对手。\n\n三连杀：暴露微信对外部社交力量的恐惧感\n\n要说震慑，微信三连杀的确把不少垂直社交应用都吓到了。据新浪科技报道，微信不仅在2号开始阻止支付宝红包在微信上分享内容，3号之后微信微店也不得已再使用支付宝作为支付渠道，更令人诧异的是，2月4日，微信除却封杀了阿里系的两大音乐类产品——虾米音乐和天天动听，还将似乎与微信无冤无仇的网易云音乐给拒绝在微信社交网络之外。\n\n连续三日，微信接连将直接竞争对手旗下的直接竞品阻拦在微信生态圈之外，结合腾讯与阿里之间如今极大的竞争关系，微信封杀支付宝显得情有可原。但微信竟然还从在垂直领域下手，将干爹并非是阿里的网易云音乐也阻拦在微信生态圈之外，此举被很多人看来便是在为腾讯自家产品扫清微信生态圈中的敌人，着实有些不合常理，但实际上，网易云音乐高调转型成移动音乐社区，已经具备社交属性，微信为防患于未然将网易云音乐封杀，也并不是没有道理的。\n\n在过去的几年时间里，虽然微信的用户数量还在不断地上升，但微信却在商业化进程上相当谨慎，一直以用户体验为中心更新迭代产品，甚至直到如今微信都没能形成自己独有的商业化优势。也正是基于微信以用户体验为第一发展要素的原因，微信得以从一款社交软件，深受广大网民的支持，成长为今日的移动互联网生活大平台。\n\n按理而言，支付宝和微信钱包，作为阿里和腾讯在支付大战上最重要的两大工具，两者视对方如敌人一般，是直接的竞争对手。支付宝在此次的红包大战中，如若通过微信的社交网络，让红包活动得以成功地扩散出去，支付宝将因此积累大量的社交关系，补足自身在社交上的短板，人们基于支付宝的这一社交网络，也将会让电子红包拥有支付宝的一席之地。因此，微信对于支付宝的红包活动进行一定的压制，实属自卫之举。\n\n但是，微信近日三连杀之举却令大家很是费解。微信选择对音乐领域下手，将阿里旗下的虾米音乐和天天动听进行封杀本还有些情有可原，但当微信将素来并无恩怨的网易云音乐也给封杀之后，却留下QQ音乐成为微信多次推荐的音乐类产品，难免落下口舌。\n\n但细细一观察，你会发现网易云音乐压根就不是一个简简单单的音乐工具，它并不安分。私信聊天功能、粉丝好友功能、还能导入SNS和熟人通讯录里的社交关系，移动互联网的发展让一款简单的音乐工具都已经开始走向社区化。既然天天动听、网易云音乐都已经开始染指微信的垂直社交领域，微信本身就有用封杀的网易云音乐的理由，适逢封杀阿里系多款产品的时候，微信顺带将网易云音乐拒绝在微信墙门之外也不难费解。\n\n虽然有封杀竞品的理由，但一向重视用户体验的微信做出这样的举动，还是令人短时间内难以接受。通过这一次封杀行动也透露出一则非常重要的信息：垂直社交作为一股新兴力量，正通过微信这种大社交平台病毒性的发散，腾讯对于这种想要动自己奶酪的产品容忍度可能要比一般的产品更低。在微信的商业价值还未能完全释放出来之时，微信对外部社交力量似乎相当恐惧。微信害怕微信被对手赶超，而微信用户又何尝不害怕微信离自己最喜欢的社交生活平台越远了呢？\n\n微信赶走了需要的应用 却带来了遥不可及的广告\n\n之所以微信“挟用户而令诸侯”行为深受用户吐槽，这个问题最直接的诱因便源自于微信最近上线了朋友圈广告系统，微信将可以在朋友圈中强制地推送广告信息，这对于已经习惯了微信无广告的用户而言，会形成很大的落差。\n\n在新版本让用户已经形成一定落差之后，单个天天动听、虾米音乐、网易云音乐可能都不足以满足所有微信用户对于音乐APP的需求，但当天天动听和虾米音乐作为阿里系重要的音乐产品，被微信赶走之后，在2014年发展非常迅猛的网易云音乐也要被赶走，这便让用户觉得移动互联网时代的APP们都还无法满足他们的音乐APP需求。\n\n在这样的情况下，加上微信突然之间上线微信朋友圈的广告，令不少不知内情的微信用户们对微信留下了非常不好的印象，微信此次三连杀之举便让用户们感觉更加心寒。\n\n之所以微信能够从一款普通的社交聊天工具，成长为中国最大的移动互联网生活平台，离不开网易云音乐、天天音乐、虾米音乐这些音乐垂直应用给微信生态圈提供的优质内容，也更不开微信始终以简单纯粹的产品设计体验，满足用户对于移动互联网诸多应用的追求。\n\n因此，在微信赶走了用户需要的很多APP之后，微信新版本广告功能所投发的豪华品牌广告，让人会感觉遥不可及。对于这种遥不可及的广告，用户实在是难以产生好感。当用户对微信都没有太大好感的时候，用户也不再会如此鼎力地支持微信这个移动互联网生活平台，那么微信借助着其所拥有的8亿多用户上演的这场挟用户而令诸侯的好戏，由于用户这些天子们并不支持，终归只是一场很难实现的春梦。",
			"added": 1633498461,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633498894,
			"title": "如何评价宝塔面板？",
			"body": "",
			"added": 1633498843,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633498983,
			"title": "如何看待phpstudy即将上线的Linux面板（小皮面板）?",
			"body": "如题，是否会对宝塔带来冲击？而且连新域名都走了宝塔的路子，结合官网底部的『永久公益免费』来看，会推出商业版的吗",
			"added": 1633498931,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633499054,
			"title": "为什么国内各大云存储服务都不支持 WebDAV？",
			"body": "",
			"added": 1633499001,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633499174,
			"title": "OBS Studio",
			"body": "OBS Studio 是一款免费且开源的用于视频录制以及直播串流的软件，提供实时高性能的视频/音频捕捉与混合，以及无限的场景模式帮助用户通过自定义实现无缝转换。\n\nOBS Studio 27.1.1 已发布，更新内容如下。",
			"added": 1633499120,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633512650,
			"title": "物品使用率",
			"body": "查话费 每周\n钥匙1 每天\n钥匙2 每月",
			"added": 1633512595,
			"parent_topic_uri": "1633227532_1Hk3cidLXjVpubLgoeVW16aYC5Y5omixD7"
		},
		{
			"topic_id": 1633513182,
			"title": "轻松一刻",
			"body": "",
			"added": 1633513126,
			"parent_topic_uri": "1631265873_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi",
			"type": "group"
		},
		{
			"topic_id": 1633513211,
			"title": "[桌面] 建议在桌面右键菜单加入刷新功能",
			"body": "建议在桌面右键菜单加入刷新功能，这样Windows系统转过来的用户更习惯些。",
			"added": 1633513154,
			"parent_topic_uri": "1633513182_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633513296,
			"title": "[经验分享] 解除在vi中鼠标左键无法复制，鼠标右键无法粘贴的方法",
			"body": "konsole 大法好",
			"added": 1633513238,
			"parent_topic_uri": "1633513182_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633531933,
			"title": "我的小岛",
			"body": "言论合理性检查\n行为合理性检查\n兼职\n礼貌礼仪\n生活经历和收获\n\n原理，成果\n填鸭式教育，应试教育\n接触大佬的机会\n信息质量高的社区\n占有欲，控制欲\n\n超出能力范围\n自律\n学历，和追求的层次，物质和精神\n有价值的信息丢失了\n话术\n有人打字不断句\n城市活动\n\n\n归档区\n不允许新增帖子\nipfs创建博客\n本地博客\n低学历生活\n\n\n\n需要经常维护的东西\n寄人篱下的生活\n月光族\n常备药物\n人际关系\n社区人气值\n\n\n不需要经常维护的东西\n软件\n机械",
			"added": 1633531935,
			"parent_topic_uri": "1633054172_15d73VXHUQrQ248bdcCpMNCP3CR16suhb7"
		},
		{
			"topic_id": 1633570952,
			"title": "已经部署的方案",
			"body": "",
			"added": 1633570892,
			"parent_topic_uri": "1632800121_14FAgfMruqxP9SM3BjEG9PyB6mzNsyjred"
		},
		{
			"topic_id": 1633571104,
			"title": "互联网设备",
			"body": "手机软件\n锤子便签\n口袋写作\n纯纯写作\n一木记账",
			"added": 1633571043,
			"parent_topic_uri": "1633570952_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633582012,
			"title": "软件价格",
			"body": "matlab 价格 – MATLAB中文论坛\n教育版2万多，商业版6万多。（不带任何工具箱）\n\n工具箱的价格从2万起，最贵的有几十万的。\n\n一套完整的商业版，估计需要200万人民币左右。\n\n通常情况下，一般只需要1-5个工具箱，20万人民币左右吧。\n\n如果是学校、科研单位，可以买几个授权。",
			"added": 1633581950,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633587179,
			"title": "Linux Ctrl+Z的使用方法",
			"body": "假设你发现前台运行的一个程序需要很长的时间,但是需要干其他的事情,你就可以用 Ctrl-Z ,终止这个程序,然后可以看到系统提示:\n\n    [1]+ Stopped /root/bin/rsync.sh\n\n    然后我们可以把程序调度到后台执行:(bg 后面的数字为作业号)\n\n    #bg 1\n\n    [1]+ /root/bin/rsync.sh &\n\n    用 jobs 命令查看正在运行的任务:\n\n    #jobs\n\n    [1]+ Running /root/bin/rsync.sh &\n\n    如果想把它调回到前台运行,可以用\n\n    #fg 1\n\n    /root/bin/rsync.sh\n\n    这样,你在控制台上就只能等待这个任务完成了.\n\n    & 将指令丢到后台中去执行\n\n    [ctrl]+z 将前台任务丢到后台中暂停\n\n    jobs 查看后台的工作状态\n\n    fg %jobnumber 将后台的任务拿到前台来处理\n\n    bg %jobnumber 将任务放到后台中去处理\n\n    kill 管理后台的任务\n\n    命令运行时使用CTRL+Z，强制当前进程转为后台，并使之停止。\n\n    1. 使进程恢复运行（后台）\n\n    （1）使用命令bg\n\n    Example：\n\n    ：~/unp/tcpcliserv$ ./tcpserv01\n\n    *这里使用CTRL+Z，此时serv01是停止状态*\n\n    [1]+ Stopped ./tcpserv01\n\n    ：~/unp/tcpcliserv$ bg\n\n    [1]+ ./tcpserv01 & *此时serv01运行在后台*\n\n    ：~/unp/tcpcliserv$\n\n    （2）如果用CTRL+Z停止了几个程序呢？\n\n    Example：\n\n    ：~/unp/tcpcliserv$ jobs\n\n    [1]- Running ./tcpserv01 &\n\n    [2]+ Stopped ./tcpcli01 127.0.0.1\n\n    ：~/unp/tcpcliserv$ bg %1\n\n    bash： bg：任务 1 已转入后台 *后台运行*\n\n    2. 使进程恢复至前台运行\n\n    Example：\n\n    ：~/unp/tcpcliserv$ ./tcpserv04\n\n    [1]+ Stopped ./tcpserv04\n\n    ：~/unp/tcpcliserv$ fg\n\n    。/tcpserv04\n\n    总结：\n\n    （1） CTRL+Z停止进程并放入后台\n\n    （2） jobs 显示当前暂停的进程\n\n    （3） bg %N 使第N个任务在后台运行（%前有空格）\n\n    （4） fg %N 使第N个任务在前台运行\n\n    默认bg，fg不带%N时表示对最后一个进程操作！",
			"added": 1633587116,
			"parent_topic_uri": "1631265455_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633587290,
			"title": "常用命令行软件",
			"body": "linux系统下键盘按键的重新映射——xmodmap工具和xev工具\nncdu\ncfdisk\nzsh + omz",
			"added": 1633587226,
			"parent_topic_uri": "1631265455_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633587901,
			"title": "什么是 PeaZip 免费文件归档实用程序",
			"body": "PeaZip 是一个免费的文件归档实用程序，基于 7-Zip、p7zip、Brotli、FreeArc、PAQ、Zstandard 文件压缩工具的开源技术，以及安全文件压缩和加密PEA 项目。\n跨平台、功能齐全但用户友好的 WinRar、WinZip 和类似通用存档管理器应用程序的替代品，可打开和提取 200 多种存档格式：001、7Z、ACE(*)、ARC、ARJ、BR、BZ2、CAB 、DMG、GZ、ISO、LHA、PAQ、PEA、RAR(**)、TAR、UDF、WIM、XZ、ZIP、ZIPX、ZST。查看支持 存档和提取的存档文件格式的完整列表。\n\n作为存档管理器实用程序，PeaZip 为 7Z、ARC、Brotli、BZ2、GZ、PEA、TAR、WIM、Zstandard 和 ZIP 存档（写入支持的格式）提供快速、高压缩率的多格式存档，并用作打开器/提取器工具适用于 200 多种档案类型，包括 ACE、ISO、RAR、ZIPX 文件，包括管理支持格式的加密档案的能力。\n\n该软件部署了强大而完整的文件管理器，用于编辑、查看、浏览和搜索存档文件，具有广泛的数据安全功能：强加密（AES、Twofish、Serpent）、加密密码管理器、可选的两因素身份验证（加密/ 用密码和密钥文件解密），安全删除, 和文件散列工具。\n有关与其他流行的文件归档工具相比的归档创建和提取性能的更多信息，请阅读文件压缩和解压缩基准 页面。\n\n开源软件的安全\nPeaZip 是免费软件，采用了来自 7-Zip、p7zip、Brotli、FreeArc、PAQ、PEA、Zstandard 开源文件压缩和归档项目的技术。\n该软件是在开源 GNU LGPLv3 copyleft 许可下发布的：该应用程序可免费用于任何用途（私人和专业）。\n所有 PeaZip 包都是安全下载的，不包含广告或有害软件，并使用官方 dowenload 站点上发布的加密安全 SHA256 哈希进行标识。\n下载便携包的优点\n可用于 Linux 和 Windows 操作系统的便携式软件包作为可安装软件包的替代品，不需要安装：只需提取和使用应用程序即可最大程度地简化部署。",
			"added": 1633587836,
			"parent_topic_uri": "1633498235_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		},
		{
			"topic_id": 1633590700,
			"title": "为什么有些人拒绝使用包格式？",
			"body": "你们知道为什么有些公司/开发者坚持通过抛出一堆脚本和二进制文件而不是仅仅使用 Appimage 或 Flatpak 来发布他们的 Linux 程序？当其他系统上的相同软件作为单个可执行文件出现时，这种方法是一个大问题。",
			"added": 1633590634,
			"parent_topic_uri": "1631265873_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi"
		},
		{
			"topic_id": 1633654081,
			"title": "土星智库",
			"body": "天才在左，疯子在右",
			"added": 1633654014,
			"parent_topic_uri": "1571187408_1MvkYQf2rLUspQvPSo18pdJsujt2aXbXB9",
			"type": "group"
		},
		{
			"topic_id": 1633654122,
			"title": "软件属性",
			"body": "价格\n大小\n上次更新时间\n寿命",
			"added": 1633654054,
			"parent_topic_uri": "1633654081_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA"
		}
	],
	"topic_vote": {
		"1615725013_17QBMHKJ5TqxqfXPjC75bdo3JV2T96iULp": 1
	},
	"next_comment_id": 24,
	"comment": {
		"1633404661_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 1,
				"body": "使用daemon less软件，后台程序费电\n安卓软件解决方案\n按键映射软件",
				"added": 1633432751
			}
		],
		"1631265524_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi": [
			{
				"comment_id": 2,
				"body": "The most recent version of SBCL is 2.1.9, released September 27, 2021.\n\nBinary\tabcl-bin-1.8.0.tar.gz (pgp)\tabcl-bin-1.8.0.zip (pgp)\tabcl-contrib-1.8.0.jar (pgp)\nSource\tabcl-src-1.8.0.tar.gz (pgp)\tabcl-src-1.8.0.zip (pgp)\tabcl-contrib source\n\nEmacs 27.2 发布 2021-03-30\n如何评价 vim 8.2？\nvscode 1.60\nGNU nano 5.9 发布，支持 YAML 语法高亮显示\n",
				"added": 1633590356
			}
		],
		"1633417386_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 3,
				"body": "LISP 是结构最简单的语言",
				"added": 1633417392
			}
		],
		"1631265356_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi": [
			{
				"comment_id": 4,
				"body": "这条评论体现vim的精髓，强烈要求置顶，我现在习惯将大写Q映射为退出命令map <unique> Q <ESC>:q<CR> 按下Q就退出了，非常方便\n\nEmacs：我已经十年没有按过保存按键了（附带 auto-save.el 源码解析）",
				"added": 1633586592
			}
		],
		"1631265455_17eygZWLfGupqABZe2GxmHnq6WWaMGQtWi": [
			{
				"comment_id": 5,
				"body": "Jupyter Notebook是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。——Jupyter Notebook官方介绍\n\n简而言之，Jupyter Notebook是以网页的形式打开，可以在网页页面中直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示。如在编程过程中需要编写说明文档，可在同一个页面中直接编写，便于作及时的说明和解释。",
				"added": 1633420474
			},
			{
				"comment_id": 6,
				"body": "JupyterLab是Jupyter主打的最新数据科学生产工具，某种意义上，它的出现是为了取代Jupyter Notebook。不过不用担心Jupyter Notebook会消失，JupyterLab包含了Jupyter Notebook所有功能。\n\nJupyterLab作为一种基于web的集成开发环境，你可以使用它编写notebook、操作终端、编辑markdown文本、打开交互模式、查看csv文件及图片等功能。\n\n你可以把JupyterLab当作一种究极进化版的Jupyter Notebook。原来的单兵作战，现在是空陆空联合协作。",
				"added": 1633420528
			},
			{
				"comment_id": 7,
				"body": "分区管理器，调整大小\n\n向前扩容，需要移动文件\n向后扩容",
				"added": 1633425537
			},
			{
				"comment_id": 10,
				"body": "我觉得系统更新和软件更新分开比较好！！！\n\n这样还是好一些。系统更新针对deepin系统本身进行bug修复和优化。软件更新就是针对第三方软件的更新。两者分开来，更好一点。\n\n安卓手机里，系统升级都是有单独的系统升级app，而软件更新则一般是去应用商店里更新第三方软件。",
				"added": 1633427412
			}
		],
		"1633420701_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 8,
				"body": "我用xmodmap重新映射[]到（）并且喜欢它。习惯于在使用[]的语言中编写代码有点奇怪，但是就像任何改变一样，你会习惯它。在Lisp中使用未移位的parens比在其他语言中没有未移位的括号更好，所以它可以解决。 无论如何，这是我的美国键盘必需的xmodmap咒语：\n!! swap () and []\nkeycode  18 = 9 bracketleft\nkeycode  19 = 0 bracketright\nkeycode  34 = parenleft braceleft\nkeycode  35 = parenright braceright",
				"added": 1633425602
			},
			{
				"comment_id": 9,
				"body": "一键输入管道\nkeycode  51 = bar",
				"added": 1633425648
			}
		],
		"1633432078_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 11,
				"body": "没有数据恢复软件",
				"added": 1633432071
			}
		],
		"1633054172_15d73VXHUQrQ248bdcCpMNCP3CR16suhb7": [
			{
				"comment_id": 12,
				"body": "1 申请资源\n2 调动资源\n3 释放资源",
				"added": 1633480913
			}
		],
		"1603289575_17dUNg4a58GuFLcDbiaw634TxxeBbSTYMo": [
			{
				"comment_id": 13,
				"body": "Firefox 93 现已可供下载，默认启用 AVIF 支持",
				"added": 1633499492
			}
		],
		"1633571104_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 14,
				"body": "手机技巧\n使用小白点锁屏，关机，减少物理按键的使用",
				"added": 1633571238
			}
		],
		"1633582012_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 15,
				"body": "正版photoshop cs6价格\n简体中文windows平台 ￥5,499.00 .ps cc一月19美元\n滴答清单    高级会员         一年高级会员只需￥139（每月仅￥11.6）\n百度网盘\t超级会员\t298/年",
				"added": 1633584582
			},
			{
				"comment_id": 16,
				"body": "微软 Office 2021 消费者版定价 149.99 美元\nLispWorks 7.1 (64-bit) for Windows + 1 year maintenance       €1840       €2760\nParallels Desktop                               适合家庭和学生使用RMB 498 起\nCrossOver for Linux 21 简体中文【标准版 + Linux】       售价￥99.00\nTotal Commander                                                                     1300 元",
				"added": 1633582896
			}
		],
		"1633590700_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 17,
				"body": "用户头像\n1级\n萨亚纳里吉特\n·\n18小时\n我想是因为包装格式太多了，很难选择使用哪种。Imo 开发人员通常希望更多地专注于创建东西，并期望来自不同社区的用户打包并维护他们自己的工具版本，以满足他们自己的需求。\n\n一些开发人员可能希望在打包上花费额外的时间，可能是他们使用/喜欢的系统和格式。但是从我自己的角度来看，如果一个社区不愿意通过以他们喜欢的格式打包和分发项目来贡献 alteast，那么对于开发人员自己来说，也许不值得这样做。\n\n\n7\n\n\n回复\n\n分享\n\n\nUser avatar\n2级\n对讲机\n操作\n·\n18小时\n\nUser avatar\n1级\nnopcodex90x90\n·\n19小时\n因为我们中的一些人审查了源代码。此外，在大多数情况下，与 flatpak 或 snaps 相比，编译和安装会产生更好的运行时间。此外，Cmake 现在非常聪明，因此它可以提高标记以优化特定设置的代码，使其性能更好。此外，pkgs 通常适用于特定地区。并非所有发行版都是 100% 相似的。Ubuntu 与 Suse 或 Fedora 大不相同，因此文件夹架构可能不同，因此需要包格式。\n\n\n28\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n艾文迪尔\n·\n19小时\n·\n编辑了19小时\n人们可以从二进制文件/资源​​文件的 tar.xz 中创建一个 flatpak。但是让 flatpak 的内容在没有 flatpak 支持的发行版上运行它（编辑：或者对于不想使用 flatpak 的人）更具挑战性。\n\n\n12\n\n\n回复\n\n分享\n\n\nUser avatar\n2级\n葡萄球菌\n·\n18小时\n不过，大多数发行版都支持 flatpak。\n\n\n5\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n艾文迪尔\n·\n18小时\n我认为我的推理更多是“并非所有发行版都支持 flatpak，所以无论如何你都必须提供 tar.xz 或类似的通用包。生产 flatpak 是一个额外的步骤，并非每个项目都需要（因为它是有效的），第三方可以已经从提供的文件创建了一个 flatpak”。这是关于项目必须提供的最低公分母（这是否适用于英语？）。\n\n\n9\n\n\n回复\n\n分享\n\n\nUser avatar\n4级\nTiZ_EX1\n·\n18小时\n如果发行版不支持 Flatpak，那就是发行版的问题。这也是一个危险信号；无论如何，无论您发布什么，都极有可能在该发行版上崩溃。\n\n\n-3\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\ncla_ydoh\n·\n19小时\n老实说，这是更多的工作。更多的东西需要设置和构建，更多的东西需要测试和检查。\n\n也许一个开发人员或一家制作不适合一般桌面用户的东西的公司不想打扰它。Flatpak 和 appimages 并非在所有预期情况下都有用。\n\n也许该项目处于早期阶段。看上面。\n\n也许它没有从一般用户那里获得足够的吸引力或兴趣来鼓励某人自愿创建这样的包。\n\n\n4\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n德泽尔\n·\n16小时\nFortressOne 开发者在这里。我发布 .zip 文件是因为我的用户大多是 windows 或 linux 上的游戏玩家，他们都知道如何解压缩和执行二进制文件。\n\n我查看了 flatpak（我运行 Fedora atm），它不会是一个 15 分钟的工作，所以我忘记了它。\n\n这样做我会得到什么好处？\n\n\n5\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n米曲洛尔\n·\n18小时\n我用哪一个？我只有一个预算。AppImage、Flatpak 还是 snap？\n\n或者我可以创建一个本地程序并让它在更多系统中工作。这是因为我们需要脚本来确定在安装过程中要使用的运行时，例如您使用的音频守护程序、gpu 驱动程序和其他各种东西。\n\n意识到像这样的打包程序并没有解决任何问题。他们只是将打包问题从当前的本机环境中取出，并将其放在另一个环境中，在那里所有完全相同的问题都会发生（抽象泄漏）。就像在程序中具有兼容的 GPU 驱动程序（或音频守护程序）一样，它们将同时在 x-windows 和内核中工作。这是因为所有的包装仍然很糟糕。\n\n这也是为什么很多应用程序，如 discord、spotify、slack、vscode 只是在这样一个抽象的环境（浏览器）中传送，然后将整个环境传送到另一个模拟实际环境的环境中。\n\n是的......它实际上完全搞砸了。\n\n\n10\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n吉赞尔\n·\n19小时\n当您获得我的软件时，您将能够自己下载代码并构建它，或者为我非常关心支持创建包的某些操作系统/发行版下载二进制包。\n\n我认为（就个人而言）Appimage、Flatpack 或 snaps 之类的东西/可怕/应该死在一个巨大的火球中。\n与容器化的东西一样，分发具有数十兆依赖项的几兆二进制文件/库是非常低效的。",
				"added": 1633590789
			},
			{
				"comment_id": 18,
				"body": "在我使用 Linux 的 20 多年里，我认为我从未见过这样做过。通常，公司会发布 Flatpak，或者过去发布的自解压 tarball。我从未见过有人发布“一堆脚本和二进制文件”。我见过的最糟糕的可能是一个带有已形成目录结构的 tarball，它可以放置在 /usr/local/share 或 /opt 之类的地方。但即便如此，还是有一个清晰的结构和发布的安装步骤。\n\n\n7\n\n\n回复\n\n分享\n\n\nUser avatar\n2级\n对讲机\n操作\n·\n19小时\n一些示例：Twine、Typora、Esrgan、Visual Paradigm 甚至 Davinci Resolve。\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n守护企鹅\n·\n18小时\n那很有意思。我听说过其中任何一个。\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n4级\n对讲机\n操作\n·\n18小时\n·\n编辑15小时\n你不知道达宁奇？\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n医生\n·\n19小时\n不要忘记 Eclipse。或 AMD 驱动程序。\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n4级\n扎蒙达\n·\n8小时\n我认为很明显为什么驱动程序不作为 flatpak 运送......\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n5级\n医生\n·\n8小时\n我更多地考虑的是他们提供了二进制文件和 shell 脚本，而不是 deb/rpm/etc。\n\n\n0\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n迈克尔姆罗斯\n·\n16小时\n通常它是您放入 opt 的单个目录\n\n\n1\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n来自荒野\n·\n18小时\n存在维护、测试和定位各种架构的负担。提供完善的测试基础设施/CICD 也是经常性成本。作为一个包维护者也有很多责任。\n\n\n3\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n弗莱博伊特\n·\n18小时\n这可能不是很有代表性，但我没有看到我应该为我的用例使用 Appimage 或 Flatpak 等解决方案的任何理由。也许其他用户也有同样的感觉，因此对此类解决方案的需求还不够高。如果我是一名软件开发人员，我只会在有足够的需求时才做这项工作。一些开发人员还认为创建包是发行版的工作。\n\n\n9\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n戴夫-阿尔瓦拉多\n·\n14小时\n听起来他们的目标市场是发行版维护者，而不是最终用户。当您可以发布您的应用程序并让维护人员做任何他们需要做的事情来使用他们选择的打包实用程序时，为什么还要锁定一个或另一个发行版？\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n马夫克\n·\n19小时\n太习惯Windows方式，对Linux没有很多使用经验/不了解社区。",
				"added": 1633590848
			},
			{
				"comment_id": 19,
				"body": "实际上我使用 Linux 作为我的主要操作系统 7 年。但是当我开始毕业时，我意识到了这个问题。过去，如果一个程序以 tar 或非标准安装程序的形式发布，我根本不会使用它并搜索作为包发布的程序。但现在在某些情况下我别无选择。\n\n\n0\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n马夫克\n·\n19小时\n我说的是那些像你描述的那样部署应用程序的人。\n\n\n6\n\n\n回复\n\n分享\n\n\nUser avatar\n4级\n对讲机\n操作\n·\n19小时\n哦，我的不好\n\n\n1\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n编号3124\n·\n16小时\nFlatpack 和 Appimage 不是包格式。它们充满依赖项，占用太多空间并且运行速度太慢。另外，我必须安装 Flathub 或任何第三方“包”管理器 Appimage 使用的任何东西。\n\n我拒绝使用它们。我宁愿从源代码编译。我不希望多个依赖项副本阻塞我的系统。我不希望第三方“包”管理器与我的发行版的包管理器发生冲突。我不希望我的系统上的软件不受我的发行版的包管理器管理。如果我使用 Debian 或基于 Debian 的发行版，我希望我的所有软件包都由 apt 管理。如果我使用 Arch，我希望它全部由 pacman 管理。等等。\n\nAppimage 和 flatpack 一团糟。他们走得越早，我就越高兴。\n\n\n4\n\n\n回复\n\n分享\n\n\nUser avatar\n2级\n知乎\n·\n16小时\n我大部分时间都和你在一起。但实际上 AppImage 不需要任何第三方工具如 flathub 来运行。我确实更喜欢发行版软件包 - 主要是出于性能和兼容性原因。但是，如果我的发行版存储库中缺少一个包，如果开发人员也有可用的 AppImage，我真的很高兴 - 特别是如果它是一个您不经常运行的应用程序，或者甚至只是打算在它非常有用时使用它。一切都在一个 blob 中 - 无需提取、安装或任何需要。尽管尤其是较差的性能和磁盘使用情况会让我无法为您经常使用的应用程序提倡这一点。\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n编号3124\n·\n15小时\nTBH，我宁愿一个tarball。CMake 效果很好。如果我确实喜欢这个程序并且确实想使用它，那么从带有 CMake 的 tarball 构建的包（假设它不在我使用的示例中的 AUR 或 PPA 中）是一个很好的日常使用包。Appimage 不是。不过我确实知道你来自哪里。Appimage 对于使用和丢弃程序来说比从源代码构建更方便。\n\n\n-2\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\nwhatisaman97\n·\n15小时\n发行版打包者的工作是将软件置于用户消费的形式中。开发人员的角色是制作他们的软件。通常，开发人员试图使构建他们的软件变得容易，因此它很少比./configure; make; make install.\n\nAppImage 和 Flatpak 是为易于开发和分发而设计的容器技术，但它们不是非常可审计的，并且允许许多坏习惯，因为“哈哈，我们是孤立的，没关系”。\n\n我通过 Git 存储库分发，如果我使用的语言可以轻松分发与系统无关的包，我将提供一个，例如使用 Python 的 pip。我觉得容器更适用于希望成为不透明的依赖项和数据块的类似公司的软件。\n\n\n3\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n可靠的嵌入式系统\n·\n18小时\ndeb rpm 和 ipk 可能是最常用的包格式。如果您使用 flatpack 之类的东西，就像交付每个加上它的依赖项一样。这意味着需要维护大量重复的东西以及每个包及其依赖项。比经典的包管理器更多的工作\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n2级\n对讲机\n操作\n·\n18小时\n是的，但我要说的是他们根本不使用包。它只是一个装有东西的文件夹。\n\n\n-1\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n电脑机\n·\n13小时\n是的，但问题是它甚至不使用计算机。这只是电力和东西。\n\n\n1\n\n\n回复\n\n分享\n\n\nUser avatar\n3级\n可靠的嵌入式系统\n·\n10小时\n这一切都取决于提供“可执行文件和依赖项”的人的背景。许多 Python 程序员倾向于把他们的 .py 弄得一团糟，甚至不知道打包。另一个奇怪的事情是像柯南这样的 C++ 包管理器，它提供（默认情况下静态链接）二进制文件。我倾向于喜欢可交叉编译的 Cmake 项目或我可以自己构建的自动工具项目。",
				"added": 1633590874
			},
			{
				"comment_id": 20,
				"body": "诶，怎么了？您将其拆开/opt并使用。预编译二进制文件非常传统。有很多发行版，我个人并不关心 99% 是否被覆盖，因为我不使用 Debian/Ubuntu/Fedora。\n\n现在当有 deb 和 rpm 包，但没有二进制 tarball 和从源代码构建的说明很难理解时，情况会更糟。\n\n\n2\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n砂\n·\n7小时\n我会提出一个问题，为什么有些公司/开发者坚持创造新的方式来分发软件（appimage、flatpak 或 snap），而不是使用已经存在并工作了几十年的久经考验的真实方法？\n\n这种方法是一个大问题，尤其是当存在需要发行版支持或安装它的依赖项时。或者他们需要 systemd，并非每个发行版都使用它，并且不应该在包分发中需要它。\n\n\n1\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n阿尔达隆·劳\n·\n4小时\n这些评论......为什么每个人都讨厌Flatpak？他们显然固执己见，根本不了解这项技术。Flatpak 是 Linux 应用程序分发的未来。我想那些拒绝包格式的人和评论里的人一样，都是有误解和固执的。\n\n首先，Flatpak 为您的应用程序提供了一个不会根据发行版而改变的环境，这使得您可以在针对许多操作系统时避免细微的错误。\n\n其次，Flatpak 不会安装大型臃肿的应用程序——运行时在同一 Flatpak 安装上的应用程序之间共享。\n\n第三，对于 3rd 方应用程序，沙箱是好的，即使它并不完美。\n\n最后，安装 Flatpaks 既简单又有趣（使用漂亮的 flathub），并且不能运行任意脚本，这些脚本会在安装和卸载时损坏您的操作系统。\n\n没有其他包装商或分发系统可以比得上丝毫。人们只是被误导和没有受过教育 - 使用 FLATPAK！\n\n\n1\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\nVortex Acherontic\n·\n18小时\n也许他们只是不知道\n\n\n1\n\n\n回复\n\n分享\n\n\nUser avatar\n1级\n范思哲_琼斯\n·\n18小时\n我只是在想昨晚看 k3s 的安装脚本 - 比如，wtf，它只是抓取一个二进制文件并将其粘贴在我的路径中？不用担心包或任何东西，甚至连开发人员自己维护的代表都没有？\n\n\n1\n\n\n回复\n\n分享\n\n\nUser avatar\n2级\n可靠的嵌入式系统\n·\n10小时\n这取决于；) 如果您喜欢自定义 Linux 发行版，您可以使用 yocto 项目并构建 k3s rpm/deb/ipk，我很确定那里有 k3s 软件包。",
				"added": 1633590903
			}
		],
		"1577836120_1MityxAx6QVFTYWjzSJFc6nCX6eyT5W5yQ": [
			{
				"comment_id": 21,
				"body": "家长一天不知道在想什么，无法沟通",
				"added": 1633606942
			}
		],
		"1633227052_1Hk3cidLXjVpubLgoeVW16aYC5Y5omixD7": [
			{
				"comment_id": 22,
				"body": "平均按键频率，不要总使用一个按键，还有备用按键",
				"added": 1633653878
			}
		],
		"1633531933_1NvJAxwds4o5FpbubqQY1BNWutGCeK7vdA": [
			{
				"comment_id": 23,
				"body": "有趣的东西\n了解别人的生活\n社交方法\n交朋友\n扩大圈子\n增强能力\n极简注意\n效率软件\n人性化，用户体验，社交软件\n免打扰\n去中心化\n需求分析，数据分析\n信息传播学\n营销套路\n软件自动化\n人力资源\n社区管理，人气值\n乐器\n锻炼身体\n退休养老\n理财",
				"added": 1633669493
			}
		]
	},
	"comment_vote": {}
}