{
	"posts": [
		{
			"id": "aea2ebdc-9dd7-4aab-bd88-2e52d240b877",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": "After an update to the millchan site the main, non hub, oriented millchan site stopped loading for me and just display a reload if this appears page. Anyone else have this problem? I have updated it and nothing changes and in the console logs for the browser it doesn't display anything out of the ordinary using the py2 or py3 version of zeronet. But hubs and the millchan hub website still loads fine.",
			"time": 1565940984885,
			"files": "[{\"name\":\"25c8ae6369429bcab7ce3504942e7c231076e64992a6d7c6104efdf236214ec7.gif\",\"thumb\":\"673b76b7636648e4a1e7d507d78435803c522e29-thumb.jpg\",\"size\":732577,\"type\":\"image/gif\",\"original\":\"673b76b7636648e4a1e7d507d78435803c522e29.gif\",\"directory\":\"16LfNukmFMx5Hf2JKkCHhoPkwK2HjbfkBk\"}]"
		},
		{
			"id": "1b46f49b-8596-4929-9e58-f2bf27a993a0",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>3328e9e3-c8f0-4cd2-9b5d-1ac560be256c\nThe browser previously worked with millchan without a problem so it is not that. The answer is a EMCA 6 semi-compliant browser that is configured similiarly to the tor browser.\nEDIT:\nIf you  are trying to replicate it then use firefox 26 or palemoon 27",
			"time": 1566010819566,
			"files": "[]",
			"last_edited": 1566010939600,
			"subject": null,
			"capcode": null
		},
		{
			"id": "f767a2d7-8118-487d-86e9-190486a85f8e",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>2b0ad430-2a78-4f0b-b8a2-463d26529fdd\n>>669f6bcf-c886-4d90-9921-c29ca14d2f1a\nDid someone hack mcdev? Everything was working perfectly before and now many things are broken for some reason...\nAnyways the website displays now. But posts in threads don't display text but display for the body of every post\n>Loading...\nWith this spammed in the console\n>\"[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill\"\nIf you need a tor friendly version of the above link see http://archivecaslytosk.onion/xouOG\n>Adding the polyfill to your site The examples below show various ways to add the IntersectionObserver polyfill to your site. Be sure to include the polyfill prior to referencing it anywhere in your JavaScript code.\n>Legacy support is also possible in very old browsers by including a shim for ES5 as well as the window.getComputedStyle method. The easiest way to load the IntersectionObserver polyfill and have it work in the widest range of browsers is via polyfill.io, which will automatically include dependencies where necessary:\n\nWhy is mcdev making javascript a dependency to browse text? Before I could copy+paste the millchan website directory on my local storage device and browse it without javascript. But now I can't browse it even with javascript.\nI can't see text on the catalog or an index either with the same thing listed in console. I can see pictures/webm's/pdf/etc file attatchments along with thumbnails and I can see the subject line for posts and the thread's OP within the thread, but without the thread in the catalog/index I see nothing. I wonder if glowniggers got to mcdev. Is there a way of rejecting/blacklisting updates/content.json's from whoever is spamming this new version of the website? To revert it to the old version that is.\nEDIT:\nThe offending javascript code is located in vendor.js on everypage for the main millchan website. Thats what is causing the log spam for me.\nEDIT2:\nI can post and make threads but zeronet.py spams me with this\n>Internal error: TypeError: 'NoneType' object is not subscriptable\nUiWebsocket.py line 85 > UiWebsocket.py line 232 > MergerSite/MergerSitePlugin.py line 207 > MergerSite/MergerSitePlugin.py line 201 > UiWebsocket.py line 468 > MergerSite/MergerSitePlugin.py line 204 > MergerSite/MergerSitePlugin.py line 201 > OptionalManager/UiWebsocketPlugin.py line 40 > UiWebsocket.py line 417\nEDIT3:\nSeems text is displayed again and everything works fine. Very nice.",
			"time": 1566160745968,
			"files": "[{\"name\":\"35eeb3e9d78a149b6d742779a348b996dbbd0adaabfd348759154961e9398e4f.jpg\",\"thumb\":\"f652d759abf665ecc8d209a4990bfbe520188cc0-thumb.jpg\",\"size\":13470,\"type\":\"image/jpeg\",\"original\":\"f652d759abf665ecc8d209a4990bfbe520188cc0.jpg\",\"directory\":\"16LfNukmFMx5Hf2JKkCHhoPkwK2HjbfkBk\"}]",
			"last_edited": 1566165233237,
			"subject": null,
			"capcode": null
		},
		{
			"id": "c912b9e5-238e-491a-83f0-6449569e6914",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>f767a2d7-8118-487d-86e9-190486a85f8e\nIt looks like the intersection observer API is another chrome invention that was never standardized and just comes down to copy+pasting chrome source code as it is in the browsers that support it. Ugh, I am not adding support for more chrome botnet to the browser I use. So fuck that. The idea behind zeronet and millchan is to get away from centralization so stop using a browser with centralized **or any** forms of backdoors and calling home to the central spying service of your nation/jewgle/pozzilla/*insert drop in boogyman controlled by kikes here*\n\nWhy does zeronet and millchan use a browser anyways? Just require the latest botnet and propietary version of chrome with systemd and windows 10 **because you can have all of that together now** and be done with it. Till chrome changes something for no reason of technical merit again. Because like a slut, you can never know the ways of the chrome devs as they are ever changing.",
			"time": 1566163800308,
			"files": "[{\"name\":\"ca12924e9cd2e76d929248226f75eb29dee96843dab92da63c9f714161a8fc74.webm\",\"thumb\":\"35c6fa7f4dc5119bc75e31c9ca1daa900d09592b-thumb.jpg\",\"size\":8807040,\"type\":\"video/webm\",\"original\":\"35c6fa7f4dc5119bc75e31c9ca1daa900d09592b.webm\",\"directory\":\"16LfNukmFMx5Hf2JKkCHhoPkwK2HjbfkBk\"}]"
		},
		{
			"id": "31d68f52-850a-4a24-ba32-fb4fa2e0214c",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>603a5126-7493-4096-8c12-a60aab2bc7f8\nYes I still get that error when posting even with the latest zeronet py3 version. But I think that is a zeronet issue and not a millchan issue. I  am getting a weird error when I go to select the millchan certificate both here and on the main website It pulls up a new page displaying\n>Not Found /millchan\nBut on the main website if I select no certificate, the option that is, it posts fine. But here on a hub I have to use a zeroid to post. Just a weird quirk. Not anything that can't be circumvented by deleteting certificates before every post with a new ID.",
			"time": 1566167339411,
			"files": "[]"
		},
		{
			"id": "e86902c4-53bb-49df-a021-233010f8bb8a",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>603a5126-7493-4096-8c12-a60aab2bc7f8\n>Performance reasons. Loading large threads was impractical with the old scheme.\nThat's weird. I could browser millchan on large threads with less then 350MB of ram on the old scheme. Now I need like 450 for small threads, most of which I assume is from the javascript. It is always faster to let the browser parse and display text using the native html/C functions then some interpreted/JIT'd javascript that is just the equievelent of a virtual machine to display some text. Maybe you should run some comparisons between different methods on different virtual machines before implementing the latest node.js functions or recomendations...",
			"time": 1566167721228,
			"files": "[]"
		},
		{
			"id": "5f7017e5-7c51-4135-988a-ac0f902131b9",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>4a02fd4d-756d-438b-9e9b-c35be5682688\nI am going to call bullshit on that. I searched and found nothing about tests for native html vs native or polyfilled IntersectionObserver for ondemand text. If you did private tests then feel free to report the results in a reproducable manner for all to see. The way I tested it was using a heavily customized version of firefox with the browser configured similiarly to the tor browser. Simply open a older version of millchan and a newer version and click on a big thread in /b/. With the older version my whole OS used 350MB with tor, zeronet, and a tor bridge open with the browser itself using 70MB. With a newer version of the website and the exact same conditions the browser uses 150MB and the whole OS uses about 450MB of ram. My proccessor usage has remained the same with old and new at 1% to 4% browsing. Now polyfilled or not the previous way was better. All the ram measurements are taken using the total ram reported by lxtask when showing ram used by cache as free while also comparing the results against free -m for whichever result reports a higher amount of RAM.\n>~1 second for things to became interactive.\nBefore interaction was instantaneous for me on large threads. Now I experience the same as you, a second of delay before I can do anything.\n>In the way things were, opening a threads with 500+ replies on Tor was resulting in ~600MiB of resident memory\nYou are talking about 600MB for your whole OS, right? If you are using 600MB or even 150MB of ram for just your web browser, then you need to get a better web browser.\nEDIT:\nIf you are going to test this make sure to disable javascript JIT in your web browser or else the results won't be reproducable as a JIT engine for javascript produces inherently different results compared to a interpreted language.",
			"time": 1566171641840,
			"files": "[]",
			"last_edited": 1566172665325,
			"subject": null,
			"capcode": null
		},
		{
			"id": "c7575cd1-c3a3-496f-a7a3-138bdbe9b256",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>d71efe23-b762-4a15-a01c-474dc8f66a42\nI can not find a way to rollback the zeronet site short of copy+pasting the appropriate files from the commit hash you mentioned. Which I could do once everything redownloads, again as I couldn't find any zeroframe API commands to rollback to a specific zite state. I can not and am unable to test the tor browser itself because it uses dbus/glibc/fontconfig as mandatory dependencies even when compiled from source. Although the musl patches might have came from upstream but dbus/fontconfig are still forced upon you.\n>Also, try testing with Tor in the highest security settings\nI use much more thorough security settings then the tor browser along with the latest public and applicable patches. **Such as not having SPNEGO/webassembly/webrtc/cookies/browsing history/etc compiled in whatsoever. Or using the strictest GCC/clang options for security i.e fstack-protector-strong -fPIC -z,noexecstack -Wl,-z,relro,-z,now -mindirect-branch=thunk -mmitigate-rop -fstack-clash-protection which reduces the performance moreso then not using them also see the manpages. There's also the addons neccessary to spoof all the information to look exactly like the tor browser. Then there's the extra stuff to fix the shit the tor browser ignores like viruses from image/video libraries, font fingerprinting, and random screen sizes for example** Then theres, you know what? If you want to understand browser insecurity and performance then do the research yourself. Suffice it to say all modern browsers are shit because of being written in C and we are just comparing polished turds.",
			"time": 1566179336382,
			"files": "[]",
			"last_edited": 1566179569574,
			"subject": null,
			"capcode": null
		}
	],
	"boards": [],
	"modlogs": []
}