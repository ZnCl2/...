{
	"posts": [
		{
			"id": "3328e9e3-c8f0-4cd2-9b5d-1ac560be256c",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>aea2ebdc-9dd7-4aab-bd88-2e52d240b877\nWhich browser you're using?",
			"time": 1565999330190,
			"files": "[]"
		},
		{
			"id": "2b0ad430-2a78-4f0b-b8a2-463d26529fdd",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>1b46f49b-8596-4929-9e58-f2bf27a993a0\nI could reproduce it in Palemoon 28.\nIt should be fixed soon.",
			"time": 1566013807014,
			"files": "[]"
		},
		{
			"id": "669f6bcf-c886-4d90-9921-c29ca14d2f1a",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>1b46f49b-8596-4929-9e58-f2bf27a993a0\nIt should be working fine now.",
			"time": 1566017214028,
			"files": "[]"
		},
		{
			"id": "603a5126-7493-4096-8c12-a60aab2bc7f8",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>f767a2d7-8118-487d-86e9-190486a85f8e\n>Did someone hack mcdev?\nNo.\n\n>\"[vue-observe-visibility] IntersectionObserver API is not available in your browser\nI couldn't reproduce in Palemoon 28.\nI tested and everything was apparently working fine there without a polyfill.\nEither way a polyfill has been added. Things should be working fine now.\n\n>Why is mcdev making javascript a dependency to browse text?\nPerformance reasons. Loading large threads was impractical with the old scheme.\nWith posts being lazily loaded the performance should be significantly better now.\n\n>Seems text is displayed again and everything works fine\nGood to hear that. Thanks for reporting.\n\nAre you still getting \"NoneType' object is not subscriptable\" when posting?",
			"time": 1566166129514,
			"files": "[{\"name\":\"1566165776.jpg\",\"thumb\":\"25414775d4d5b363c9f739a009a221a305481dfe-thumb.jpg\",\"size\":77992,\"type\":\"image/jpeg\",\"original\":\"25414775d4d5b363c9f739a009a221a305481dfe.jpg\",\"directory\":\"users/1H5YxVHvcfKM4STjJwyjYaBe8qbPyR6EZr\"}]",
			"last_edited": 1566166224580,
			"subject": null
		},
		{
			"id": "4a02fd4d-756d-438b-9e9b-c35be5682688",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>e86902c4-53bb-49df-a021-233010f8bb8a\n>It is always faster to let the browser parse and display text using the native html/C functions then some interpreted/JIT'd javascript that is just the equievelent of a virtual machine to display some text.\nJust use a modern browser which will implement those functions natively instead of having to rely on polyfills then.\nIntersectionObserver is already supported by most browsers.\n\n>Maybe you should run some comparisons between different methods\nIt was already tested ad nauseam. It has nothing to do with using the latest trendy APIs.\nIn the way things were, opening a threads with 500+ replies on Tor was resulting in ~600MiB of resident memory and 20+ seconds until the main thread was released.\nWith the recent modifications opening the same threads results in ~150MiB of resident memory and ~1 second for things to became interactive.",
			"time": 1566169832980,
			"files": "[]"
		},
		{
			"id": "d71efe23-b762-4a15-a01c-474dc8f66a42",
			"thread": "08962af7-9fe8-4694-9dba-2ecc67e64d0e",
			"body": ">>5f7017e5-7c51-4135-988a-ac0f902131b9\n>a big thread in /b/\n/b/ doesn't have any big threads.\nTry testing using the ~700 replies thread on /volk/ or manually create a 1000+ replies lorem ipsum thread and then compare your results with Millchan checked out to 30f239ca67b0fa32d0b432ed5a5a23342e39e041.\n\nAlso, try testing with Tor in the highest security settings instead of your heavily customized Firefox since the former is what most people are using and that has a plethora of optimization restraints that  can severally affect the browsing experience.",
			"time": 1566174441373,
			"files": "[]"
		}
	],
	"boards": [],
	"modlogs": []
}