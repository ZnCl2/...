{
	"next_comment_id": 13,
	"comment": [
		{
			"comment_id": 1,
			"body": "Хорошая статья. Думаю можно и на хабр положить :)\n\nПосмотрите еще в сторону таких языков как REBOL и Red, лучше всего на rossetacode\n\nМинималистичней некуда, но при этом читаемо. В отличие от примера с \"северным лисом\" :D",
			"post_id": 16,
			"date_added": 1525688647
		},
		{
			"comment_id": 2,
			"body": "> [geekless](#comment_8_1GooUE19488nDwG3TdkM8seYAHct4gjkq4): Хорошо, когда язык позволяет писать лаконично, но плохо, когда он не позволяет писать максимально многословно, с максимальным недоверием к себе. Во многих языках заметно это стремление автора: либо сделать всё лаконично, либо наоборот, сделать всё максимально «по-армейски». Существует ли золотая середина?\n\nВ том же Red и REBOL это сделано как расширение языка. Так называемые DSL - для каждого уровня разработки свой (Red/System для системных задач (типа управления памятью или вычисления MD5, либо высшие - управляюще-скриптовые)\nПри этом синтаксическая база остается таже, но появляются доп. уточняющие конструкции.\n",
			"post_id": 16,
			"date_added": 1525688929
		},
		{
			"comment_id": 3,
			"body": "Я раньше тоже думал что Python это верх лаконичности пока не увидел Ruby, а точнее Crystal. На Nim немного писал, но Crystal лучше на мой взгляд.\n\nНо есть еще REBOL и Red-lang, которые тоже заслуживают внимания, особенно REBOL как первый язык для Internet приложений, жалко что его автор забросил и в свое время не открыл код. Постепенно я думаю все языки придут к виду REBOL для разработки приложений уровня пользователя.",
			"post_id": 18,
			"date_added": 1525934203
		},
		{
			"comment_id": 4,
			"body": "Красиво выглядит CoffeeScript, поскольку я больше всего писал на Python мне как-то он ближе :D \nПопробую что-нибудь написать на нем.... наверное экспорт твитов из твиттера для начала.",
			"post_id": 18,
			"date_added": 1525934400
		},
		{
			"comment_id": 5,
			"body": "> [geekless](#comment_10_1GooUE19488nDwG3TdkM8seYAHct4gjkq4): Язык прямо таки подталкивает зафигачить последовательности .map{}-ов, .reduce{}-ов и прочих .select{}-ов, типа, мы тут в функциональном стиле пишем чуть ли всю программу. Потом такой код практически невозможно читать.\n\nСамое страшное, что такой код невозможно отлаживать в пошаговом режиме. Именно это и не дает повсеместного распространения ФП-языков. Хотя многие их \"полезности\" перетекают в императивные языки.",
			"post_id": 18,
			"date_added": 1525943683
		},
		{
			"comment_id": 6,
			"body": "> [balancer73](#comment_7_1PniNzyi8fygvwyBaLpA9oBDVWZ5fXuJUw): ИМХО, JS боль после почти любого языка :D\n\nЭто точно :)\n\n> [balancer73](#comment_6_1PniNzyi8fygvwyBaLpA9oBDVWZ5fXuJUw): ИМХО, сильно зависит от концепции программирования. Например, Форт, в принципе, позволяет отлаживать код пошагово.\n\nХоть я на форте дальше \"хэлло ворлд\" не заходил, но смотрел его внутренности (реализацию на FPGA :D ). Поэтому там пошагово отлаживать можно. Если в одной функции беда, то портится стэк и программа ведет себя дальше не предсказуемо. Несомненный плюс это компактность кода, но согласитесь чужой код там нечитаемый. И если вдруг рефакторинг, то там этот ребус разгадывать крайне нудно.\n\nЦепочку map -> filter -> reduce пошагово не отладишь, я вот что имел ввиду, это в любом языке так.",
			"post_id": 18,
			"date_added": 1526048067
		},
		{
			"comment_id": 7,
			"body": "> [balancer73](#comment_9_1PniNzyi8fygvwyBaLpA9oBDVWZ5fXuJUw): Так и я пишу, что можно :) Но на практике с таким никогда не сталкивался. Ибо при обычных паттернах программирования оно не нужно. Слова в 5-9 других слов легко «отлаживаются в уме» :)\n\nЯ так понял на форте Вы много писали, где то видел на форуме что движок (или часть) игры написана на форте? И как оно? Какие профиты были?\n",
			"post_id": 18,
			"date_added": 1526107923
		},
		{
			"comment_id": 8,
			"body": "Как мне кажется, ведь не обязательно именно так писать код (то есть переносить вредные привычки из классического JS в современный).\nГлядя на эту простую логику вы по сути запускаете в первом случае последовательно пачку асинхронных функций, а во втором -  параллельно, но дожидаетесь всех. Для этих типичных задач были разработанные давно несколько библиотек. Самая приятная на мой вкус, это async - вся эта \"мошна\" превратится в однострочник (практически).",
			"post_id": 31,
			"date_added": 1539435757
		},
		{
			"comment_id": 9,
			"body": "Тоже порой кажется что всё зашло слишком далеко... Наверное потому что всё пишется делается не инженерами, а менеджерами продаж.",
			"post_id": 36,
			"date_added": 1539435918
		},
		{
			"comment_id": 10,
			"body": "А после установки соединения пролагов нет? Как там mc быстро перерисовывается?",
			"post_id": 26,
			"date_added": 1539436271
		},
		{
			"comment_id": 11,
			"body": "> [geekless](#comment_26_1GooUE19488nDwG3TdkM8seYAHct4gjkq4): На тот момент не было, а вот в последнее время замечаю лаги. mc и htop подлагивают.\n\nПохоже ваш провайдер таким образом борется с проксями работающими поверх ssh. Т.е. тупо полосу режет по 22-му порту.",
			"post_id": 26,
			"date_added": 1539436654
		},
		{
			"comment_id": 12,
			"body": "Все мы рабы legacy",
			"post_id": 31,
			"date_added": 1539436815
		}
	],
	"comment_vote": {},
	"post_vote": {
		"16": 1,
		"18": 1
	}
}