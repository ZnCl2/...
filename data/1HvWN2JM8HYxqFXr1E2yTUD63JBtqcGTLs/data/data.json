{
	"title": "技术大杂烩",
	"description": "技术专题Blog",
	"links": "- [Source code](https://github.com/HelloZeroNet)",
	"next_post_id": 20,
	"demo": false,
	"modified": 1494435439,
	"post": [
		{
			"post_id": 19,
			"title": "kcp协议",
			"date_published": 1494435283.326,
			"body": "众所周知，骨干网对TCP链接限速的方式是丢包。\n\n突破限速的方法就是用UDP来传输。\n\nkcp就是一种高效的RUDP实现。参考实现很多有 C语言的    \n\n[https://github.com/liudf0716/xkcptun](https://github.com/liudf0716/xkcptun)\n\n也有C#和Java的。"
		},
		{
			"post_id": 18,
			"title": "微软的TypeScript",
			"date_published": 1493217536.349,
			"body": "很长的时间，我是直接忽略微软的技术的。\n\n主要是微软的东西太封闭，又经常大变。\n\n最近用了下vscode，应该是比较好的编辑器了，尤其是插件比较多。\n\n再了解了下，原来vscode是主要用TypeScript开发的。原来如此！\n\n看来对微软要更新下认识了。"
		},
		{
			"post_id": 17,
			"title": "为何PHP能在网站开发领域流行这么多年？",
			"date_published": 1488475165.917,
			"body": "我想最主要的原因是PHP非常的简单，容易学习；而且还很容易部署；\n\n对于大部分业余开发人员来说，没什么比PHP更容易建好一个个人网站了。\n\n尤其是有了大量的PHP开源项目以后，更是如此。\n\nPHP的扩展多是用C直接编写，反而简化了很多设计问题。而且用C编写性能也得到了保障。\n\n相比Python，PHP少了很多通用的用途，诸如机器学习，图像处理等领域，PHP也没多少人用。\n\n但是，Python虽然在Web开发上有那么多的库，缺反而分散了社区力量，各种框架争论不休，外加Python3的不兼容Python2。。。\n\nRuby虽然火了一小段时间，但是由于门槛太高，语法过于复杂，结果还是被逐渐淘汰了。\n\nnodejs由于js的设计问题，火了几天就没人用了。\n\n其它的竞争者，更是没有流行多久。。。\n\n从人力资源角度，PHP优势更大，学校科班出身的人会Java较多，但是半路出家的，基本都是学PHP/MySQL的多。外加一些速成培训班，和几个好用的PHP论坛，PHP在招人方面有巨大的优势。\n\n最终，PHP胜出。"
		},
		{
			"post_id": 16,
			"title": "CoffeeScript笔记",
			"date_published": 1485417264.636,
			"body": "1\\. 函数调用可以省略括号\n\n`console.log \"Hello, world!\"`\n\n2\\. 字符串用双引号引起来的可以用插值语法\n\n`hi = (name) -> (\"hi~ #{name}\")`\n\n3\\. lambda定义时，如果没有参数可以省略\n\n4\\. do 表示调用后面的这个函数\n\n`console.log do -> 'Hello, closure!'`\n\n5\\. # 后接注释\n\n6\\. 直到表达式末尾，隐式括号才会闭合\n\n所以，括号不要省了，多用少BUG。\n\n7\\. 问号类似groovy的语法，叫吸收符号\n\n`console?.log \"hi~\"`\n\n如果console是null，也不会报错。这个很方便。\n\n8\\. 不要用js的arguments对象\n\n9\\. is关键字等价于js中 ===\n\n10\\. ==在CoffeeScript中等价于js中的===\n\n11\\. 『注意』CoffeeScript中{}只有一种用途，定义一个JSON风格的对象；\n\n其余的js要用{}的地方都用缩进来表达。\n\n12\\. throw e unless a 是一个很好的惯用法\n\n13\\. ++运算符是支持的\n\n14\\. CoffeeScript作用域规则：\n\na) 每个函数一个作用域\n\nb) 变量在最外层的作用域定义，赋值时定义\n\nc) 变量在其作用域外不可见\n\n以上即 词法作用域------简单来说就是 第一赋值定义，处函数访问就不可见，函数内定义的函数可以见。\n\n15\\. this是表示当前的context\n\n16\\. 每次函数调用的时候，this context都可能会不同\n\n17\\. @是this的简写\n\n`@name === this.name`\n\n18\\. [1...3] 三个点表示不包含结束的3\n\n19\\. coffee的列表解析语法和python很像"
		},
		{
			"post_id": 15,
			"title": "CoffeeScript",
			"date_published": 1485313910.31,
			"body": "写起来确实很舒心。"
		},
		{
			"post_id": 14,
			"title": "继续学习前端技术",
			"date_published": 1485100757.394,
			"body": "计划在过年的这段时间好好学习下es6还有coffee-script。\n\nAtom 编辑器的大部分源码是CoffeeScript写的。"
		},
		{
			"post_id": 11,
			"title": "Dart的函数没有校验返回值类型",
			"date_published": 1484973053.27,
			"body": "在非严格模式下：\n\n// Define a function.\nfinal int i =100;\nfinal int x = int.parse(\"1000\");\nint printNumber(num aNumber) {\nprint('The number is $aNumber.'); // Print to console.\nprint('i=$i 🇨🇳');\nprint('x=$x 🇪🇺');\nreturn [x,i];// 这样居然可以\n}\n\n// This is where the app starts executing.\nmain() {\nvar number = 42; // Declare and initialize a variable.\nint x=printNumber(number); // 返回不是int，也可以运行。。。\nprint(x);\n}"
		},
		{
			"post_id": 10,
			"title": "Atom编辑器",
			"date_published": 1484969942.233,
			"body": "注意到，Atom编辑器的源码大部分是Coffee-Script，小部分是js。"
		},
		{
			"post_id": 9,
			"title": "DartPad做的很不错",
			"date_published": 1484966220.475,
			"body": "[https://dartpad.dartlang.org/b51ea7c04322042b582a](https://dartpad.dartlang.org/b51ea7c04322042b582a)\n\n可用性比Golang的那个类似的线上沙盒好多了。"
		},
		{
			"post_id": 8,
			"title": "Dart的_开头表示private和Go语言的一个提议一样",
			"date_published": 1484931817.346,
			"body": "有人提议Go语言把所有中文字符视为大写，而把所有的下划线开头的视为小写。\n\n嗯，不错的提议。"
		},
		{
			"post_id": 7,
			"title": "Google的Dartlang貌似要重新火起来了",
			"date_published": 1484931509.118,
			"body": "今天花费了一点儿时间了解了下。\n\n感觉设计的不错，可能以后Android开发可以用这个语言吧。\n\n至少可以写点小工具。"
		},
		{
			"post_id": 6,
			"title": "因为想看ZeroNet源码开始学CoffeeScript",
			"date_published": 1484782371.535,
			"body": "初步了解下来，似乎很简单。\n\n虽然TypeScript似乎更流行。"
		},
		{
			"post_id": 5,
			"title": "ZeroNet的最大推广障碍",
			"date_published": 1484394379.504,
			"body": "没有一个事件来引爆。"
		},
		{
			"post_id": 4,
			"title": "ZeroNet的依赖的GEvent简介",
			"date_published": 1484324999.302,
			"body": "GEvent是Python的一个协程库，可以几乎不用改动代码的情况下，无缝的在启用GEvent和关闭GEvent间切换。\n\n推荐用 monkey pacth功能一次性替换Python的标准库。在大部分IO密集的应用中，这么做可以极大的提升性能。"
		},
		{
			"post_id": 3,
			"title": "简单的提升Python项目性能的方案",
			"date_published": 1483881854.796,
			"body": "Cython：可以用来改写项目中性能瓶颈的部分，然后用Cython编译成.so。即可大大提速。\n\nNuitka：可以无脑的把整个项目的.py源码都编译成C++再自动编译成模块。\n\nPyPy：如果项目是纯Python的，那么最简单的还是改用PyPy。对于纯Python的项目并没有实用第三方扩展的话，不需要对源码做什么改动。"
		},
		{
			"post_id": 2,
			"title": "Nuitka",
			"date_published": 1483880860.097,
			"body": "[Nuitka](https://gitlab.com/kayhayen/Nuitka)--优秀的成熟可用的Python 编译器。\n\n可以把纯Python代码编译到C++然后用Clang/GCC/VC++等编译成Python的模块。\n\n经过测试可以编译ZeroNet。"
		},
		{
			"post_id": 1,
			"title": "ZeroNet",
			"date_published": 1433033779.604,
			"body": "非常的优秀的项目。准备好好读一读。"
		}
	]
}