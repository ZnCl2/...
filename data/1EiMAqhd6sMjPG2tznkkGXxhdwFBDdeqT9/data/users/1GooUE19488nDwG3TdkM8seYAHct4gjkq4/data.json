{
	"next_comment_id": 3,
	"comment": [
		{
			"comment_id": 1,
			"body": "> [tvax](#comment_1_128dbVaHobAMsFW25rUVyFxwdCvvfkidzT): Do you think there's any way doing that using the Zeronet Docker image?\n\nI didn't try it, but I think, it is totally possible to run nginx + ZeroNet as 2 linked docker containers.\n\nThe only thing specific for that setup is how to *proxy_pass* the ZeroNet container by its hostname.\n\nYou should probably google \"nginx proxy_pass to a linked docker container\" or something similar. Maybe this discussion helps: https://stackoverflow.com/questions/28028789/nginx-proxy-pass-to-a-linked-docker-container",
			"post_id": 44,
			"date_added": 1526002762
		},
		{
			"comment_id": 2,
			"body": "IMO, it is better to have the content-addressable storage at the ZeroNet engine level, which effectively eliminates need of CDN services. ZeroNet knows sha-sum of every file it loads, but now it does not try to check sha-sums of already present files to reuse the same file from the disk.\n\nSo, if we have `http://127.0.0.1:43110/15mSYzsDxzarssqtV1pFPKqoCTaLdjVB2f/js/all.js` and `http://127.0.0.1:43110/1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/js/all.js`, which are the same, the data are downloaded twice. With content-addressable storage, it will be possible to download only unique data (`content.js`, `data.js`, images etc) for a zite.",
			"post_id": 90,
			"date_added": 1528602736
		}
	],
	"comment_vote": {},
	"post_vote": {
		"44": 1,
		"93": 1,
		"100": 1
	}
}