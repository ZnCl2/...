{
	"title": "Jita",
	"description": "Information wants to be free, let's free it together !",
	"links": "*   ![site_jita.jpg (266x150)](data/img/site_site_jita.jpg)\n\n*   [Source code](https://github.com/HelloZeroNet)",
	"next_post_id": 9,
	"demo": false,
	"modified": 1497167737,
	"post": [
		{
			"post_id": 8,
			"title": "Shadowsocks, on Windows this time",
			"date_published": 1497167100,
			"body": "Following my [article about shadowsocks on Linux](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:7:A+primer+on+the+Shadowsocks+SOCKS+5+proxy), I was asked if I could do the same on Windows since it is still by far the dominant OS in China, ask and you shall receive indeed !\n\nFirst, let's grab the latest [shadowsocks-win client](https://github.com/shadowsocks/shadowsocks-windows/releases) which is version 4.0.4 as the time of writing, it consist of a single exe in a zip file, unpack and run and you should see it's UI :\n\n![image.png (482x380)](data/img/post_8_image.png)\n\nNext, fill it with your shadowsocks credentials, this was again the tricky part for me since I'm not aware of good, reliable shadowsocks servers.\n\nThe haoboji.com server which worked yesterday didn't worked today for some reasons, perhaps too much load since it's the middle of the afternoon in Singapore ? All in all, the Windows vs Linux configuration is pretty much the same if you abstract the UI, as expected.\n\nAfter this step, configure Firefox like we did on the Linux article :\n\nAlt -> Edit -> Preferences -> Advanced -> Network -> Settings -> **tick \"Manual Proxy configuration\"**\n\nand fill `127.0.0.1` on the SOCKS host field and `1080` on the port field, **tick SOCKS v5** and **tick Proxy DNS when using SOCKS v5**\n\nRestart Firefox\n\nSo it's quite easy to get started with shadowsocks as a program, really nothing too technical and according to the few reports I read, it still better than a VPN when connecting from China since the GFW use machine learning algorithm to recognize VPN connections and throttle them (clearnet ! [[link](https://news.ycombinator.com/item?id=10101653)] [[link2](https://yro.slashdot.org/story/12/12/20/1456251/vpn-providers-say-china-blocks-encryption-using-machine-learning-algorithms)]) but the devil is in finding a proper server that you can trust or building a shadowsocks server yourself, something I want to try now :)\n\nAlso worth mentioning that if you're on such a country which spies on it's citizen with such high stakes if you get caught doing something deemed illegal, it's well worth investing some time installing/configuring a proper Linux / BSD instead of using Windows.\n\nSafe surfing !\n\n<span id=\"result_box\" class=\"short_text\" lang=\"zh-CN\"><span class=\"\">寻找这篇文章的中文翻译 // Looking for Chinese translation of this article !</span></span>"
		},
		{
			"post_id": 7,
			"title": "A primer on the Shadowsocks SOCKS 5 proxy",
			"date_published": 1497114900,
			"body": "Living in Europe, I never really had to worry about bypassing any firewall to browse Internet, merely using a VPN to somehow gain a bit more of anonymity.\n\nHere in Zeronet I discovered that many Chinese users are in need of a solution to bypass the Great Firewall, one of the usually mentioned one is shadowsocks, I thought I would give a look at it and try to make it work.\n\nFirst, I installed the `shadowsocks-libev-3.0.6` since I'm using Linux and that's the one available on the repository of my distro.\n\nThe configuration file on my system is located at `/etc/shadowsocks-libev/shadowsocks.json` and looks like this by default :\n\n```\n{\n    \"server\":\"my_server_ip\",\n    \"server_port\":8388,\n    \"local_port\":1080,\n    \"password\":\"barfoo!\",\n    \"timeout\":600,\n    \"method\":\"aes-256-cfb\"\n}\n```\n\nNext, you'll have the difficult task to find a Public Shadowsocks proxy server that you can trust or you can build yours on a VPS, for the sake of this test, I choose the 1st option and tried with the one from [https://streisand.haoboji.com/shadowsocks/](https://streisand.haoboji.com/shadowsocks/)\n\n**/!\\ Big disclaimer /!\\** I do not vouch for this shadowsocks proxy security/trustworthyness ! This is a PoC, I'm sure experienced shadowsocks users might have a better overview of the public proxy landscape or other solutions. I will update this article if I can gather more info.\n\nAfter configuring the JSON file we mentioned earlier with the information on this page, the program itself can be started like a regular unix service :\n\n`service shadowsocks.client start`\n\nNext, configure Firefox to browse through the proxy :\n\nAlt -> Edit -> Preferences -> Advanced -> Network -> Settings -> **tick \"Manual Proxy configuration\"**\n\nand fill `127.0.0.1` on the SOCKS host field and `1080` on the port field, **tick SOCKS v5** and **tick Proxy DNS when using SOCKS v5**\n\nRestart Firefox, If you check your IP before/after starting Shadowsocks on [https://www.iplocation.net/](https://www.iplocation.net/) you should see the difference, in my case, my HTTP connection were routed from my VPN provider through Singapore.\n\n![before-after.png (640x180)](data/img/post_7_before-after.png)\n\nI'm still discovering this software so I cannot guarantee the security is top notch but hey, it works !\n\nI'm open to ALL criticism, I know having difficulties/risk accessing a non-controlled internet is a real deal for many persons.\n\n<span id=\"result_box\" class=\"short_text\" lang=\"zh-CN\"><span class=\"\">寻找这篇文章的中文翻译 // Looking for Chinese translation of this article !</span></span>"
		},
		{
			"post_id": 6,
			"title": "Articles Index",
			"date_published": 1497167640,
			"body": "[](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:8)★ [Shadowsocks, on Windows this time](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:8)\n\n★ [A primer on the Shadowsocks SOCKS5 proxy](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:7)\n\n★ [Getting Chinese characters displayed properly in Firefox | 中文在 Firefox](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:5B8%AD%E6)\n\n★ [Youtube channels about science, engineering and vulgarization](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:4)\n\n★ [Gaming in a Windows VM through VFIO](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:3)\n\n★ [An overview of some Linux backups methods](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:2)\n\n★ [Saltstack 0 : What is configuration management anyway ?](http://127.0.0.1:43110/1JVYSqFg6q4TH1UntZK9XsXywh2qsmKD6v/?Post:1)\n\nThe idea to have an index of article as a \"pinned\" post has been taken from [东先生的ZeroBlog](http://127.0.0.1:43110/mydf.bit/) Thank you (<span id=\"result_box\" class=\"short_text\" lang=\"zh-CN\"><span class=\"\">谢谢</span></span>) !"
		},
		{
			"post_id": 5,
			"title": "Getting Chinese characters displayed properly in Firefox | 中文在 Firefox",
			"date_published": 1497027440.188,
			"body": "Depending on your computer OS/setup you man not have the Chinese characters displayed properly out of the box on your browser, leading an incomprehensible stream of the standard Unicode block character.\n\nFortunately, this can easily be fixed by installing a font which support Chinese, in this case, **noto-cjk** did the trick perfectly.\n\nIt's should be available on most Linux distros repos, it's also available there : [https://www.google.com/get/noto/help/cjk/](https://www.google.com/get/noto/help/cjk/)\n\nIf for some reasons it doesn't work, take a look at about:preferences#content -> Advanced -> Fonts for Simplified Chinese and select **Noto Sans CJK SC** for Sans & Sans-Serif\n\n![image.png (601x508)](data/img/post_5_image.png)\n\nHappy reading ! 快乐阅读 !"
		},
		{
			"post_id": 4,
			"title": "Some Youtube channels about science, engineering and vulgarization",
			"date_published": 1496081296.044,
			"body": "![hertzme.jpg (625x299)](data/img/post_4_hertzme.jpg)\n\nThere's a lot of interesting Youtube channels around, here's some I really like, mainly about science, applied science, philosophy and vulgarization, the list will hopefully grow over time, feel free to suggest some !\n\n**English-speaking**\n\n_Kurzgesagt_ : Various topics in a nutshell, well presented and documented : [https://www.youtube.com/user/Kurzgesagt](https://www.youtube.com/user/Kurzgesagt)\n\n_Crashcourse_ : Computer science, Sociology, History and much more in crash course format : [https://www.youtube.com/user/crashcourse](https://www.youtube.com/user/crashcourse)\n\n_Computerphile_ : Computer history and computer engineering deep dive, a must for any computer lover ! : [https://www.youtube.com/user/Computerphile](https://www.youtube.com/user/Computerphile)\n\n**French Speaking**\n\n_E-penser_ : Réflexions et explications sur progression de la science à travers l'histoire, mécanique quantique : [https://www.youtube.com/user/epenser1](https://www.youtube.com/user/epenser1)\n\n_Dany caligula_ : Philosophie, question de société actuelles, travail, tout y passe ! : [https://www.youtube.com/user/DanyCaligula](https://www.youtube.com/user/DanyCaligula)\n\n_Science Etonnante_ : Topics scientifiques variés exposés avec brio et beaucoup de mesure :\n\n[https://www.youtube.com/user/ScienceEtonnante](https://www.youtube.com/user/ScienceEtonnante)\n\n_Paf le geek_ : Informatique, sécurité et vie privée, chiffrement et réseaux décentralisés : [https://www.youtube.com/channel/UCCSHWqosFfYJY5v2WqbTLhg](https://www.youtube.com/channel/UCCSHWqosFfYJY5v2WqbTLhg)\n\nFeedback welcome, please share these channels around you if you like them, they need our support :)"
		},
		{
			"post_id": 3,
			"title": "Gaming in a Windows VM through VFIO",
			"date_published": 1495383300,
			"body": "![vfio2.jpg (1200x675)](data/img/post_3_vfio2.jpg)\n\n> This post is not a tutorial, merely some notes sharing about a working setup I've made in 2016 and maintain since. Feel free to let me know if something needs to be added/corrected :)\n\nWindows has been _the_ PC gaming platform for more than two decades and while Linux games are on the rise, including AAA titles like Shadow of Mordor, Tomb Raider, the XCOM series, Rocket League or Total War, many titles remains Windows-only.\n\nMaintaining a dual-boot system is often still the go-to solution to play Windows games, you may have some luck with Wine but not all games are supported.\n\nThere's however a third option to play Windows games from Linux : VFIO which stands for _Virtual Function I/O_ and allows you to give a piece of hardware like a GPU or a NIC to a Windows Virtual Machine.\n\nAssuming you met the prerequisites, you can with a bit of work get an extremely good performance out of such a setup, around 95% of a comparable bare-metal Windows install.\n\nFor that, you'll need :\n\n*   An Intel processor with VT-x and VT-d instructions or AMD-Vi\n\n*   A compatible motherboard\n\n*   2 GPUs (one discrete for the VM and one integrated for the host for instance)\n\n*   enough spare RAM anc CPU juice to run both a Linux host and the Windows VM\n\nIn this blog post, I'll document some of the steps I've taken to get a working setup.\n\n_These notes focus on Intel CPU and Nvidia GPU as I don't own another type of hardware, that being said, some parts are hardware agnostic._\n\n_These notes use the most \"recent\" KVM VGA passthrough method which is OVMF + vfio-pci (compared to Seabios + pci-stub) and requires a GPU with EFI ROM_\n\nSoftware :\n\n```\nGentoo amd64, Linux kernel >= 4.6.x\nQEMU >= 2.5.1 + KVM\nvirt-manager >= 1.3.2 & libvirt >= 1.3.5\nOVMF\nWindows 10 Pro VM\n```\n\nHardware :\n\n```\nIntel Core i5-3470\nASRock B75 Pro3\nIntel HD (IGP)\nNvidia GTX 750 Ti (Discrete GPU)\n16 GB RAM\n```\n\n### **Part 1 : Host system setup**\n\n**Kernel configuration**\n\n```\nCONFIG_VFIO_IOMMU_TYPE1=m\nCONFIG_VFIO_VIRQFD=m\nCONFIG_VFIO=m\nCONFIG_VFIO_PCI=m\nCONFIG_VFIO_PCI_VGA=y\nCONFIG_VFIO_PCI_MMAP=y\nCONFIG_VFIO_PCI_INTX=y\nCONFIG_VFIO_PCI_IGD=y\nCONFIG_KVM_VFIO=y\nCONFIG_IOMMU_HELPER=y\nCONFIG_VFIO_IOMMU_TYPE1=m\nCONFIG_IOMMU_API=y\nCONFIG_IOMMU_SUPPORT=y\nCONFIG_INTEL_IOMMU=y\nCONFIG_INTEL_IOMMU_SVM=y\nCONFIG_INTEL_IOMMU_DEFAULT_ON=y\nCONFIG_INTEL_IOMMU_FLOPPY_WA=y\n```\n\nFor easier sound handling, I've found than compiling `snd_hda_intel` in kernel rather than as a module works perfectly (no need to unload/reload the kernel module)\n\n**Kernel boot options**\n\nedit `/etc/default/grub` and add to GRUB_CMDLINE_LINUX\n\n```\nintel_iommu=on\n```\n\nThen regenerate grub2 menu with\n\n```\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n\n#### **Check IOMMU groups**\n\n> This command should report the various IOMMU groups from your machine (An IOMMU group is the smallest set of physical devices that can be passed to a virtual machine.)\n> \n> if there's nothing it means IOMMU is not properly enabled.\n\n```\n#!/bin/bash\n\nfor iommu_group in $(find /sys/kernel/iommu_groups/ -maxdepth 1 -mindepth 1 -type d);\n        do echo \"IOMMU group $(basename \"$iommu_group\")\";\n    for device in $(ls -1 \"$iommu_group\"/devices/);\n        do echo -n $'\\t'; lspci -nns \"$device\";\n    done;\ndone\n```\n\n#### **Isolating the GPU with vfio-pci**\n\nGet your vendor-id :\n\n```\nlspci | grep -i vga\n```\n\n> note down the first number, it is the slot number i.e 01:00.0\n\n```\nlspci -nns 01:00.0\n```\n\n> Note down the last number between \"[]\", this is the vendor-id, i.e 10de:1380\n\n```\nlspci -nnk -d vendor-id\n```\n\nEdit `/etc/modprobe.d/vfio.conf` with the vendor-id from your GPU you want to isolate gathered from the previous command, in this **example**, the vendor-id is **10de:13c2** for the GPU and **10de:0fbb** for the audio\n\n```\noptions vfio-pci ids=10de:13c2,10de:0fbb\n```\n\nAdd these modules to `/etc/conf.d/modules` (Gentoo/OpenRC specific)\n\n```\nmodules=\"vfio vfio-pci vfio_iommu_type1 vfio_virqfd\"\n```\n\nmodule loading at boot is enabled by\n\n`rc-update add modules boot`\n\nIf you were using the `nvidia` proprietary Unix driver before, you need to blacklist module loading at boot time by settings up the blacklist in `/etc/modprobe.d/blacklist.conf`\n\n`blacklist nvidia`\n\n`blacklist nvidia_drm`\n\nReboot, your computer need to be able to run Xorg on top of the Intel IGP to be able to proceed for the rest of the setup.\n\n#### **Check that your GPU is correctly isolated**\n\n```\n$ dmesg | grep -i vfio\n[    0.329224] VFIO - User Level meta-driver version: 0.3\n[    0.341372] vfio_pci: add [10de:13c2[ffff:ffff]] class 0x000000/00000000 <-- Good\n\n$ lspci -nnk -d <VENDOR_ID>\nKernel driver in use: vfio-pci <-- Good\n```\n\nSame check for your sound card\n\nIf `lspci -nnk -d` reports a \"Kernel driver in use\" which is not `vfio-pci`, there's something wrong.\n\nMake sure these modules are present when you run `lsmod`\n\n```\n$ lsmod\nvfio\nkvm\nkvm_intel\nvfio-pci\n```\n\n**QEMU/KVM/libvirt**\n\nBelow example is for Gentoo & OpenRC, adjust for your distro.\n\n```\n# emerge --ask qemu virt-manager libvirt git\n# rc-update add libvirt-guests\n# rc-update add libvirtd# service libvirt-guests start\n# service libvirtd start\n```\n\n#### If you plan to user `virt-manager`, make sure your user is part of the libvirt group so that you don't need to type the root password each time your start it.\n\n`usermod your_username -a -G libvirt`\n\n#### **OVMF setup**\n\nGet OVMF firmware via [https://www.kraxel.org/repos/jenkins/edk2/](https://www.kraxel.org/repos/jenkins/edk2/) and choose the\n\n`edk2.git-ovmf-x64-[_some_date_] RPM.`\n\nUnpack it and copy `OVMF-pure-efi.fd` and `OVMF_VARS-pure-efi.fd` to `/usr/share/ovmf/x64/`, creating the directory if needed.\n\nAdd this line to `/etc/libvirt/qemu.conf` :\n\n```\nnvram = [\n        \"/usr/share/ovmf/x64/ovmf_x64.bin:/usr/share/ovmf/x64/ovmf_vars_x64.bin\"\n]\n```\n\nCreate a new machine with virt-manager and check \"edit settings\" before finishing the setup, change firmware from BIOS to UEFI (or to \"Custom: /usr/share/ovmf/x64/ovmf_x64.bin\").\n\nAt this point you should be able to install Windows through the VGA console.\n\n> If you're dropped to an EFI shell, make sure the ISO you wish to boot is correct, try with a recent Ubuntu release for instance.\n\n**Part 2 : Guest VM setup**\n\nThe XML configuration of the VM is located at `/etc/libvirt/qemu`, should you edit it, do it with `virsh edit` <vm_name>, do NOT edit with your editor directly since XML validation is done by virsh (and you want it)</vm_name>\n\nWhen the Windows install is done, shutdown the VM and give it the GPU through the virt-manager GUI.\n\nBoot the VM with standard virtualized VGA adapter and install the nvidia drivers (tested with Nvidia Geforce driver 368.81 WHQL)\n\n#### **Networking**\n\nOne effortless way is to get an USB WiFi adapter and passing-through the USB device to Windows directly using virt-manager, otherwise, best to look at bridging.\n\n**Bugs**\n\n*   nvidia code 43\n\nRecent nvidia drivers block the driver if it runs on top of an hypervisor, the workaround is to hide KVM and enable some hyper-v-related tweaks :\n\n> Qemu 2.5+ supports the hv_vendor_id flag that lets you change the vendor ID. It was discovered that this is whats used by the nvidia drivers to detect hyper-v, so changing the vendor ID allows you to use all the enlightenments without upsetting nvidia\n\nvia libvirt :\n\n> edit your VM XML definition with `virsh edit your_vm_name`<vm_name></vm_name>\n\n```\n<domain type='kvm'>\n...\n  <features>    <acpi/>    <apic/>    <hyperv>      <relaxed state='on'/>      <vapic state='on'/>      <spinlocks state='on' retries='8191'/>      <vendor_id state='on' value='whatever'/>    </hyperv>    <kvm>      <hidden state='on'/>    </kvm>  </features>...\n</domain>\n```\n\n*   Prevent Windows to install nvidia drivers\n\nYou might need to set this up so that Windows doesn't try to update your nvidia driver unattended, as newer drivers are sometimes more locked down or require workaround to work on a VM, we prefer to update them manually (with a VM snapshot as a safety net !)\n\n![prevent_driver.PNG (1080x697)](data/img/post_3_prevent_driver.PNG)\n\n**Resources**\n\nThe best resource I know is the VFIO subreddit at [https://www.reddit.com/r/vfio](https://www.reddit.com/r/vfio) and this Arch Wiki page **[https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF](https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF)**\n\n**Footnotes**\n\nVFIO is not a silver bullet ! When it works, it's pretty great but it can be kind of a pain (bugs/regression, slow I/O if you don't use the VM often or on an HDD rather than an SSD, maintaining Windows, ...)\n\nI believe we must strive to vote with our wallet when buying games, Linux as an open gaming platform is still a work in progress, let's make sure we support it !\n\nThe video which started it all for me :\n\n[https://www.youtube.com/watch?v=37D2bRsthfI](https://www.youtube.com/watch?v=37D2bRsthfI)"
		},
		{
			"post_id": 2,
			"title": "An overview of some Linux backup methods",
			"date_published": 1495292220,
			"body": "Inspired by a post on ZeroMe, I thought I would write an overview of some Linux backups methods I personally use (meaning I can talk a bit about it without bullshitting you, dear reader), it's thus not meant to be exhaustive by any means (there'll be links at the bottom for that) but can hopefully give you some easy to implement ways to saveguard the data you care about\n\n1.  **File-level**\n\n**1.1 tar**\n\nThe good old tar was born in 1979 when Unix was still a Bell Labs project. It has become the defacto archive format on *nix ever since.\n\n`tar` can create archives of files scattered around on your system easily if you feed it a list of the files/folders you wish to backup :\n\n`tar -T files_list.txt -czf /backups/archive-20170520.tar.gz`\n\nWhere `files_list.txt` needs to be on this format, one line per folder/file :\n\n/home/user/Documents\n\n/home/user/file1\n\nFor proper security, you may encrypt your archive at a later stage with gpg such as\n\n`gpg -o /backups/archive-20170520.tar.gz.gpg -c /backups/archive-20170520.tar.gz`\n\n> Beware that the encryption doesn't remove your original file, you wave to remove it yourself if you wish to.\n\n**1.2 rsync**\n\n`rsync` is a smarter `cp`, it can understand which files are already on the destination location and process delta between them.\n\nIt has a huge list of options which will be too much to cover in this overview and can be used over SSH.\n\nOne simple invocation could be :\n\n`rsync -av /home/user/Documents /backups/Documents`\n\n**2\\. Block/inode/filesystem-level**\n\n**2.1 xfsdump**\n\n> XFS is a high performance filesystem which originates from the 80's/90's IRIX operating system, the same company (SGI) created the open-source 2D/3D API OpenGL which powers many games and software. Kudos !\n\nIf you're using it, `xfsdump` is a no-brainer for very fast live (with filesystem mounted !) backups, two years or so ago, I moved my system from ext4 to XFS just to get this feature and it has been good to me, including 2 full systems restore since I'm good at breaking stuff apparently :)\n\n`xfsdump -F -M myFSlabel -L sessionLabel -l 0 - / | pigz --fast > $destination.gz`\n\nThis create a `gzip2` compressed xfsdump archive in a bunch of minutes of your XFS filesystem. The compression ratio is usually pretty good at -310% on a random archive I made recently.\n\nIf you want to encrypt the backups, you may pipe the stream to `gpg` it's usually preferable to do it at backup time due to the size of the backup and the length it takes to do it.\n\nRestoring it is just a matter of\n\n*   booting a liveCD/USB\n\n*   mounting the partition where you want your backup to be restored (has to be an XFS filesystem of course, can be a recently formatted one)\n\n`mount /dev/sda1 /restore_destination`\n\n*   Unpack the xfsdump file from the gz archive\n\n`gzip -d Gentoo-root-20052017.xfsdump`\n\nand then run\n\n`xfsrestore -f Gentoo-root-20052017.xfsdump /restore_destination`\n\n**tl;dr** : Do backups and make sure you can restore them, there's plenty of options and when run frequently, they are very worth the initial effort.\n\n**3\\. Links**\n\nThe Arch Wiki has en extensive list of backup and sync programs at [https://wiki.archlinux.org/index.php/Synchronization_and_backup_programs](https://wiki.archlinux.org/index.php/Synchronization_and_backup_programs)\n\nAlso worth taking a look is [https://wiki.archlinux.org/index.php/disk_cloning](https://wiki.archlinux.org/index.php/disk_cloning)"
		},
		{
			"post_id": 1,
			"title": "Saltstack 0 : What is configuration management anyway ?",
			"date_published": 1495216200,
			"body": "If you've ever used a Unix-like system like Linux or *BSD, you may know that most of the system is represented as files, allowing you to easily read and (if you know what you're doing !) tweak your system configuration using only your trusty text editor.\n\nBut you do you maintain and keep track of these configuration changes over time ? Or across different machines ? Possibly with different operating systems ? On 1, 3, 10, 100 or 1000 machines ?\n\nEnter configuration management tools such as Ansible, Chef, Puppet or **Saltstack** which will be the focus of this blog post.\n\nSaltstack (or Salt) allows you to represent your computer configuration as ... code or pseudo-code to be exact, referring a particular system configuration as a _state_.\n\nAs a simple example, let's say you have a specific firewall configuration with port 15441 open to use ZeroNet that you may want to handle.\n\nIt involve making sure you have the proper software installed, configuring it via a specific file, and restarting the service.\n\nDoing so in Salt could be represented with this pseudo-code (NB : sorry for the image but the multi-lines code editor looks horribly broken on ZeroBlog)\n\n![image.png (298x200)](data/img/post_1_image.png)\n\nThis basically says :\n\n1.  Make sure iptables is installed (Gentoo format here)\n\n2.  Make sure the contents of `/var/lib/iptables/rules-save` are the one I defined on the `salt://files/iptables_rules` file (salt:// being a \"shortcut\" for a specific folder on your system from where Salt operates)\n\n3.  Reload the iptables service and make sure it's enabled at boot time\n\nOnce you've applied your state (more on that later), saving it on a remote location like a Git repository allows you to keep track of your current system configuration and to re-apply/change in a reliable manner it along the lifetime of your system(s)\n\n**This post is just an introduction on a subject I like to babble about, feel free to give me your feedback and keep seeding ! :)**"
		}
	]
}