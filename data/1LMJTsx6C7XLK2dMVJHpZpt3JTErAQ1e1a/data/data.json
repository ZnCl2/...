{
	"title": "CHNP2P.bit",
	"description": "随手记录的小黑板.",
	"links": "- [Source code](https://github.com/HelloZeroNet)",
	"next_post_id": 9,
	"demo": false,
	"modified": 1477019448,
	"post": [
		{
			"post_id": 8,
			"title": "推荐几个刚发现的资源站点",
			"date_published": 1475737824.054,
			"body": "\nTORRENT - http://127.0.0.1:43110/ZeroTorrent.bit/\nPLAY - http://127.0.0.1:43110/1PLAYgDQboKojowD3kwdb3CtWmWaokXvfp/\nZeroTV - http://127.0.0.1:43110/1BEJbnufyav7TK23ADTs2Qi2UJeKSGDzw6/\nBWOI Music - http://127.0.0.1:43110/1f7FYxZWSZ5YG7Nd8sGsHcWEQgvdnVvQF/\nNinja Beats Music - http://127.0.0.1:43110/15F9LYs6c17NUXv3MxpJSGbpWxyHTEbzMk/\nSEARCH SITES - http://127.0.0.1:43110/kaffiene.bit/\nZEROTUBE - http://127.0.0.1:43110/1FUQPLXHimgCvYHH7v3bJXspJ7bMBUXcEb/\nZEROWIKI - http://127.0.0.1:43110/138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/\nTV EPISODES - http://127.0.0.1:43110/tvepisodes.bit/\nTORRENT FREAK - http://127.0.0.1:43110/1JNqdTGVATFWRLzzYwVu19CuWYus5VmoUS/"
		},
		{
			"post_id": 7,
			"title": "Windows下Zeronet建站小技巧",
			"date_published": 1475729451.414,
			"body": "# Zeronet建站\n下载\nhttps://github.com/HelloZeroNet/ZeroBundle/raw/master/dist/ZeroBundle-win.zip\n例如ZeroNet的路径是\n`C:\\ZeroBundle\\ZeroNet`\n打开命令行：\n```python\ncd C:\\ZeroBundle\\ZeroNet\n..\\python\\python.exe zeronet.py siteCreate\n```\n会得出例如：\n```python\n- ----------------------------------------------------------------------\n- Site private key: 23DKQpzxhbVBrAtvLEc2uvk7DZweh4qL3fn3jpM3LgHDczMK2TtYUq\n-                   !!! ^ Save it now, required to modify the site ^ !!!\n- Site address:     13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n- ----------------------------------------------------------------------\n```\n`13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2`就是站点地址\n在`C:\\ZeroBundle\\ZeroNet\\data`会生成`13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2`目录\n`Site private key`这个必须自己保存记录，以后修改站点就是靠这个`key`来`Sign`\n# Clone站点\n在ZeroHello页面左侧点击需要Clone的站点\n例如：\n![image alt](files/clone001.png)\n生成\n`http://127.0.0.1:43110/13LEv8nMKtoNApMRcrBfAx6s3csjtxirSm`\n打开资源管理器：\n`C:\\ZeroBundle\\ZeroNet\\data\\13LEv8nMKtoNApMRcrBfAx6s3csjtxirSm`\n选择（除了**content.json**不要复制）\n![image alt](files/clone002.png)\n复制到可管理站点目录内，例如上面示例中有private key的站点：\n`C:\\ZeroBundle\\ZeroNet\\data\\13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2`\n\n# 关闭站点Clone属性\n`C:\\ZeroBundle\\ZeroNet\\data\\13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\\content.json`\n```python\n{\n \"address\": \"13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\",\n \"cloneable\": false,\n```\n在\"address\"下一行添加\n`\"cloneable\": false,`\n同理打开Clone属性就是ture\n\n# 免费只用一年xxx.bit域名\n实例：\nhttp://127.0.0.1:43110/chnp2p.bit\nhttps://bit.no.com:43110/chnp2p.bit/\n\n首先查询你需要注册的.bit是否被使用过\nhttps://dotbit.me/\n\n发送Bitmessage（比特信）\n目标地址：\n`BM-2cVddUzqe4DWCGorpXUXAUh2SwyD5S9ByU`\n标题：\n`want chnp2p.bit domain`\n内容：\n```python\ndomain:chnp2p.bit\nZeroNet site: 1LMJTsx6C7XLK2dMVJHpZpt3JTErAQ1e1a\n```"
		},
		{
			"post_id": 5,
			"title": "下载视频方法",
			"date_published": 1475663498.565,
			"body": "##下载youtube-dl\nhttps://github.com/rg3/youtube-dl/releases\n##下载ffmpeg\nhttps://ffmpeg.org/download.html\n##youtube-dl添加代理实例\n```python\ncd c:\\lolo\nyoutube-dl.exe --proxy localhost:1080 -f bestvideo+bestaudio \"URL\"\n```\n`c:\\lolo`目录内放置`ffmpeg.exe`\n\n##国内站点下载you-get\nhttps://github.com/soimort/you-get/releases\n##you-get实例\n```python\nyou-get -i 'https://www.youtube.com/watch?v=jNQXAC9IVRw'\nyou-get --itag=18 'https://www.youtube.com/watch?v=jNQXAC9IVRw'\nyou-get -x 127.0.0.1:8087 'https://www.youtube.com/watch?v=jNQXAC9IVRw'\nyou-get -i 'http://www.panda.tv/s6'\n```"
		},
		{
			"post_id": 4,
			"title": "windows端口映射",
			"date_published": 1475663395.293,
			"body": "添加192.168.11.1的80端口到本地端口8080\n```python\nnetsh interface portproxy add v4tov4 8080 192.168.11.1 80\n```\n删除本地映射端口8080\n```python\nnetsh interface portproxy delete v4tov4 listenport=8080\n```"
		},
		{
			"post_id": 3,
			"title": "Haproxy手工安装设置",
			"date_published": 1475663234.694,
			"body": "##安装haproxy\n```python\nwget 'https://github.com/haproxy/haproxy/archive/v1.7-dev3.tar.gz'\ntar zxvf v1.7-dev3.tar.gz\ncd haproxy-1.7-dev3\nmake TARGET=linux2628 PREFIX=/usr/local/haproxy\nmake install PREFIX=/usr/local/haproxy\n```\n编辑配置文件\n`vi /usr/local/haproxy/haproxy.cfg`\n\n```python\nglobal\n    ulimit-n    51200\n    log         127.0.0.1 local2\n    chroot      /var/lib/haproxy\n    pidfile     /var/run/haproxy.pid\n    user        haproxy\n    group       haproxy\n    daemon\n\ndefaults\n    mode                    tcp\n    log                     global\n    option                  dontlognull\n    timeout connect         5s\n    timeout client          1m\n    timeout server          1m\n\nfrontend ss-443\n        bind *:443\n        default_backend ss-443\nbackend ss-443\n        server server1 远端服务器地址:443 maxconn 20480\n```\n运行\n`\n/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n`\n自运行\n`vi /etc/rc.local`，在文档最后添加：\n`/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg`\n\n\n\n"
		},
		{
			"post_id": 2,
			"title": "翻墙工具VPS服务器安装一览",
			"date_published": 1475663084.518,
			"body": "#OpenConnect server(ocserv) 一键脚本 for deibian 7+\n```python\napt-get update && apt-get upgrade -y\nwget http://git.io/p9r8 --no-check-certificate -O ocservauto.sh && bash ocservauto.sh\nwget git.io/ocservauto -O- --no-check-certificate|bash -\n```\n客户端下载：\nIOS\nApp Store搜索CISCO Anyconnect\nwindows \nhttps://software.cisco.com/download/release.html?mdfid=286281283&softwareid=282364313&release=4.3.02039&relind=AVAILABLE&rellifecycle=&reltype=latest\n\n#shadowsocks-libev一键安装脚本\nDebian/Ubuntu\n```python\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev-debian.sh\nchmod +x shadowsocks-libev-debian.sh\n./shadowsocks-libev-debian.sh 2>&1 | tee shadowsocks-libev-debian.log\n```\n\n卸载\n```python\n./shadowsocks-libev-debian.sh uninstall\n```\n\n使用命令：\n启动：`/etc/init.d/shadowsocks start`\n停止：`/etc/init.d/shadowsocks stop`\n重启：`/etc/init.d/shadowsocks restart`\n状态：`/etc/init.d/shadowsocks status`\n\n#ShadowsocksR一键安装脚本\n```python\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh\nchmod +x shadowsocksR.sh\n./shadowsocksR.sh 2>&1 | tee shadowsocksR.log\n```\n卸载\n`./shadowsocksR.sh uninstall`\n编辑配置文件\n`vi /etc/shadowsocks.json`\n```python\n{\n    \"server\":\"0.0.0.0\",\n    \"server_ipv6\":\"::\",\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"port_password\":{\n        \"21\":{\"password\":\"password1\", \"obfs\":\"http_simple\", \"obfs_param\":\"189.cn\"},\n        \"80\":{\"protocol\":\"auth_aes128_md5\", \"password\":\"password2\", \"obfs\":\"tls1.2_ticket_auth\", \"obfs_param\":\"189.cn\"},\n        \"443\":{\"password\":\"password3\"}\n    },\n    \"timeout\":300,\n    \"method\":\"chacha20\",\n    \"protocol\": \"auth_sha1_v4\",\n    \"protocol_param\": \"\",\n    \"obfs\": \"tls1.2_ticket_auth\",\n    \"obfs_param\": \"cloudfront.com\",\n    \"redirect\":[\"bing.com\", \"cloudflare.com:443\"],\n    \"dns_ipv6\": false,\n    \"fast_open\": false,\n    \"workers\": 1\n}\n```\n启动：`/etc/init.d/shadowsocks start`\n停止：`/etc/init.d/shadowsocks stop`\n重启：`/etc/init.d/shadowsocks restart`\n状态：`/etc/init.d/shadowsocks status`\n\n客户端下载：\nhttp://127.0.0.1:43110/shadowsocksr.bit/\nhttps://bit.no.com:43110/shadowsocksr.bit/\n\n\n#安装Nghttp2+Squid\n```python\nsudo apt-get update\nsudo apt-get install g++ make binutils autoconf automake autotools-dev libtool pkg-config \\\n  zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev libevent-dev libjansson-dev \\\n  libjemalloc-dev cython python3-dev python-setuptools\n```\n\n###安装spdylay\n```python\nwget 'https://github.com/tatsuhiro-t/spdylay/releases/download/v1.4.0/spdylay-1.4.0.tar.xz'\ntar xpf spdylay-1.4.0.tar.xz && cd spdylay-1.4.0 && ./configure\nmake && make install\nldconfig\n```\n\n###安装nghttp2\n```python\napt-get install libev-dev libjansson-dev libjemalloc-dev python-dev cython\nwget https://github.com/nghttp2/nghttp2/releases/download/v1.15.0/nghttp2-1.15.0.tar.xz && tar xpf nghttp2-1.15.0.tar.xz && cd nghttp2-1.15.0 && ./configure\nmake && make install\nldconfig\n```\n###安装squid 3.5.12\n```python\nsudo apt-get install squid\n```\n编辑Squid的配置文件\n```python\nvi /etc/squid/squid.conf\n```\n添加密码：不需要\n`touch /etc/squid/passwd`\n`htpasswd -m /etc/squid/passwd user  #squid 不支持MD5验证`\n\n1.增加用户\n`htpasswd  /etc/squid/user.pass lookwest`\n2.修改用户密码：\n`htpasswd -d /etc/squid/user.pass lookwest`\n3.删除用户：\n`htpasswd -D /etc/squid/user.pass lookwest\n`\n\n###安装supervisor\n`sudo apt-get install supervisor`\n配置文件\n`vi /etc/supervisor/supervisord.conf`\n\n配置nghttpx\n\n```python\nnghttpx -s -D --conf=/root/nghttp2-1.4.0/nghttpx.conf /root/certs/www_xxx_com.key /root/certs/www_xxx_com.crt\n```\n关闭\n```python\npkill nghttpx\n```\n\n配置supervisor\n```python\nvi /etc/supervisor/supervisord.conf\n```\n添加内容\n```python\n[program:nghttpx]\ncommand=nghttpx -s -D --conf=/root/nghttp2-1.4.0/nghttpx.conf /root/certs/www_xxx_com.key /root/certs/www_xxx_com.crt\nautorestart=true\nuser=root\n```\n客户端\nchrome设置https代理\n可以下载插件Proxy SwitchyOmega"
		}
	]
}