{
	"title": "Sth.",
	"description": "ZeroNet version of https://v2bv.win",
	"links": "*   [Main Site](https://v2bv.win)\n*   [Mastodon](https://s.brined.fish)\n*   [GitHub](https://github.com/RedL0tus)",
	"next_post_id": 15,
	"demo": false,
	"modified": 1501914615,
	"post": [
		{
			"post_id": 14,
			"title": "Using IBM RT3200 on modern Linux systems",
			"date_published": 1501513183,
			"body": "I just bought a IBM SpaceSaver II RT3200 (P/N: 37L0888) on [Taobao](https://item.taobao.com/item.htm?id=19702143286) for just 129 CNY (about 20 USD) instead on making my own mechanical keyboard.\n\n* * *\n\nIt was announced in the middle of 1999, and here is the official [info](http://ps-2.kev009.com/pcpartnerinfo/ctstips/10762.htm).\n\nI choose it because of:\n\n*   It has UltraNav.\n*   Most mechanical keyboard DIY kits doesn't include trackpoint.\n*   Those kits like TEX Yoda which has trackpoint support are tooooooooooooo expensive to me.\n*   Modern ThinkPad keyboards' keys are too \"soft\" for me.\n*   Classic ThinkPad keyboards includes palm rests which I don't need.\n\nAnd here is how it looks:\n![RT3200](https://img.vim-cn.com/7b/f4675db0fd01ef0756cbb6a52715333839b7ab.jpg)\n(I use a sticker from AOSCC 2017 to cover up Windows logo.)\n(Ugh... Looks like a Windows 2000 logo.)\n\nIt comes in good shape and looks just like normal 80% keyboard with UltraNav, isn't it?\n\n* * *\n\nIt is a pretty good keyboard but with several problems:\n\n*   It uses **two** PS/2 ports (one for keyboard it self and one for UltraNav) which are rare to see on modern laptops (Of course at that time most keyboards and mice use PS/2 ports). It means you have to buy a USB to PS/2 adapter in order to use it.\n*   Sometimes the CapLocks key is too hard to press (Maybe it's just my own problem).\n*   It's UltraNav has little differences from modern ones. It's left and right keys are softer than modern ones and it use a classic \"cat-tongue\" TrackPoint cap.\n\nAnd after I connect to my X220, everything works fine except the middle button of UltraNav, it doesn't simulate wheel like the modern ones. It probably because it's connected using an adapter so Linux cannot recognize keyboard correctly.\n\n![\"Barcode reader\"](https://img.vim-cn.com/7d/396a9f0de5220d5ca8f3571f27add704c04a39.png)\n\n(An interesting thing is Linux recognize one of my adapters as a barcode reader... Orz)\n\nAs I said before, it's hard to identify between the keyboards connected with adapters, so I think the best solution I could find is to enable wheel emulation on all of the pointing devices that connected to this computer.\n\nAfter searching on the Internet, I found a solution from [Felix Yan](https://felixc.at/) on [Arch Linux Forums](https://bbs.archlinux.org/viewtopic.php?id=133298):\n\nJust modify XOrg's config to make all pointing devices use evdev drivers and enable wheel emulation:\n\n```\nSection \"InputClass\"\n        Identifier \"evdev pointer catchall\"\n        MatchIsPointer \"on\"\n        MatchDevicePath \"/dev/input/event*\"\n        Driver \"evdev\"\n        Option      \"EmulateWheel\"      \"true\"\n        Option      \"EmulateWheelButton\"    \"2\"\n        Option      \"XAxisMapping\"      \"6 7\"\n        Option      \"YAxisMapping\"      \"4 5\"\nEndSection\n```\n\nAfter this, just restart XOrg and everything will be fine :)\n\n(If you have any better idea, please comment below :)\n\n* * *\n\nAnyway, it is a really a **GREAT** keyboard for a low price, it's old but not obsolete. ~~If you like it, you can go and get one from eBay or other places, it's not rare and expensive until now, but maybe several years later it will be another IBM Model M~~ XD"
		},
		{
			"post_id": 13,
			"title": "A quick look at V2Ray",
			"date_published": 1497542690,
			"body": "A normal way to escape from censorship or blockage of access to information is to use proxy.\n\nThere are several different proxy protocols and software. And today I'm gonna talk about V2Ray.\n\n* * *\n\nIt's home page is [https://www.v2ray.com](https://www.v2ray.com).\n\nIt's written in Golang, with these features:\n\n1.  It supports several protocols (SOCKS, HTTP, Shadowsocks, VMess)(And VMess is it's own protocol).\n2.  Built-in routing support.\n3.  Cross-platform support.\n\nBut these features also causes it's a bit hard for newbies to configure it.\n\nBut in fact, if you just need basic proxy features, it could be very easy to use.\n\nFirst, V2Ray use JSON as the format of configuration file. A basic configuration of V2Ray can be split to several parts: `inbound`, `outbound` and `routing`.\n\n`inbound` is just about how others connect to V2Ray software.\n`outbound` is about how V2Ray connect to the web or other V2Ray servers.\n`routing` is the part to configure the route of packages.\n\nAlso there are `inboundDetour`/`outboundDetour` and parts about how to transport packages.\n\n### **In the part `inbound`:**\n\nFor servers, inbound have to be the protocol and ports that clients will connect. As an example:\n\n```\n\"inbound\": {\n  \"port\": 37192, // port\n  \"protocol\": \"vmess\",    // main inbound protocol\n  \"settings\": {\n    \"clients\": [\n      {\n        \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",  // User ID\n        \"level\": 1  // User level \n      }\n    ]\n  }\n}\n```\n\nIn the example, `port` will be the port that clients will connect; `protocol` is the protocol it gonna use; `settings` are the parameters of inbound protocols.\n\nFor more detailed information about VMess and it's settings, please visit: [https://www.v2ray.com/chapter_04/03_vmess.html](https://www.v2ray.com/chapter_04/03_vmess.html)\n\nFor clients, inbound have to be the settings of how other applications connects to it. For example:\n\n```\n\"inbound\": {\n  \"port\": 1080, // port\n  \"protocol\": \"socks\",\n  \"settings\": {\n    \"auth\": \"noauth\",\n    \"udp\": false\n  }\n}\n```\n\n`port` is the port that other applications will connect; `protocol` is the protocol it will use. For now V2Ray supports SOCKS5 and HTTP.\n\nFor detailed information, please visit: [https://www.v2ray.com/chapter_04/03_vmess.html](https://www.v2ray.com/chapter_04/03_vmess.html)\n\n### **In the part `outbound`:**\n\nFor servers, this part is about how V2Ray communicates with the web.\n\n```\n\"outbound\": {\n  \"protocol\": \"freedom\",  \n  \"settings\": {}\n}\n```\n\nIn this example, traffics will use a protocol called `freedom`. In fact, it's just about to make normal TCP/UDP connections to the web.\n\nFor more detailed information about `freedom`, please visit: [https://www.v2ray.com/chapter_02/protocols/freedom.html](https://www.v2ray.com/chapter_02/protocols/freedom.html)\n\nFor clients, this part is about how V2Ray communicates with V2Ray on the server.\n\n```\n\"outbound\": {\n  \"protocol\": \"vmess\",\n  \"settings\": {\n    \"vnext\": [\n      {\n        \"address\": \"8.8.8.8\", // Server IP\n        \"port\": 17173,  // Server port\n        \"users\": [\n          {\n            \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // User ID\n            \"security\": \"aes-128-gcm\", \n            \"alterId\": 128\n          },\n        ]\n      }\n    ]\n  }\n}\n```\n\nNote that in this part, all of the settings **must** be the same with the server.\n\nFor more detailed information about VMess and it's settings, please visit: [https://www.v2ray.com/chapter_04/03_vmess.html](https://www.v2ray.com/chapter_04/03_vmess.html)\n\n### **In the part `routing`:**\n\nAbsolutely it's about routing of packages.\n\nFor detailed information, please visit: [https://www.v2ray.com/chapter_02/03_routing.html](https://www.v2ray.com/chapter_02/03_routing.html)\n\nHere is an example about `routing`:\n\n```\n\"routing\": {\n  \"strategy\": \"rules\",\n  \"settings\": {\n    \"rules\": [\n      {\n        \"type\": \"field\",\n        \"ip\": [\n          \"0.0.0.0/8\",\n          \"10.0.0.0/8\",\n          \"100.64.0.0/10\",\n          \"127.0.0.0/8\",\n          \"169.254.0.0/16\",\n          \"172.16.0.0/12\",\n          \"192.0.0.0/24\",\n          \"192.0.2.0/24\",\n          \"192.168.0.0/16\",\n          \"198.18.0.0/15\",\n          \"198.51.100.0/24\",\n          \"203.0.113.0/24\",\n          \"::1/128\",\n          \"fc00::/7\",\n          \"fe80::/10\"\n        ],\n        \"outboundTag\": \"blocked\"\n      }\n    ]\n  }\n}\n```\n\nP.S. \"outboundTag\" determines which route the traffics that meets the rules above will go. It's about inboundDetor/outboundDetor, please visit official manual.\n\n### **Here is the basic config:**\n\n**Server:**\n\n```\n{\n  \"inbound\": {\n    \"port\": 12138,\n    \"protocol\": \"vmess\",\n    \"settings\": {\n      \"clients\": [\n        {\n          \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n          \"level\": 1,\n          \"alterId\": 128\n        }\n      ]\n    }\n  },\n  \"outbound\": {\n    \"protocol\": \"freedom\",\n    \"settings\": {}\n  },\n  \"outboundDetour\": [\n    {\n      \"protocol\": \"blackhole\",\n      \"settings\": {},\n      \"tag\": \"blocked\"\n    }\n  ],\n  \"routing\": {\n    \"strategy\": \"rules\",\n    \"settings\": {\n      \"rules\": [\n        {\n          \"type\": \"field\",\n          \"ip\": [\n            \"0.0.0.0/8\",\n            \"10.0.0.0/8\",\n            \"100.64.0.0/10\",\n            \"127.0.0.0/8\",\n            \"169.254.0.0/16\",\n            \"172.16.0.0/12\",\n            \"192.0.0.0/24\",\n            \"192.0.2.0/24\",\n            \"192.168.0.0/16\",\n            \"198.18.0.0/15\",\n            \"198.51.100.0/24\",\n            \"203.0.113.0/24\",\n            \"::1/128\",\n            \"fc00::/7\",\n            \"fe80::/10\"\n          ],\n          \"outboundTag\": \"blocked\"\n        }\n      ]\n    }\n  }\n}\n```\n\n**Client:**\n\n```\n{\n  \"inbound\": {\n    \"port\": 1080,\n    \"protocol\": \"socks\",\n    \"settings\": {\n      \"auth\": \"noauth\",\n      \"udp\": true\n    }\n  },\n  \"outbound\": {\n    \"protocol\": \"vmess\",\n    \"settings\": {\n      \"vnext\": [\n        {\n          \"address\": \"8.8.8.8\",\n          \"port\": 12138,\n          \"users\": [\n            {\n              \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n              \"alterId\": 128,\n              \"security\": \"aes-128-gcm\"\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"outboundDetour\": [\n    {\n      \"protocol\": \"freedom\",\n      \"settings\": {},\n      \"tag\": \"direct\"\n    }\n  ],\n  \"routing\": {\n    \"strategy\": \"rules\",\n    \"settings\": {\n      \"rules\": [\n        {\n          \"type\": \"field\",\n          \"ip\": [\n            \"0.0.0.0/8\",\n            \"10.0.0.0/8\",\n            \"100.64.0.0/10\",\n            \"127.0.0.0/8\",\n            \"169.254.0.0/16\",\n            \"172.16.0.0/12\",\n            \"192.0.0.0/24\",\n            \"192.0.2.0/24\",\n            \"192.168.0.0/16\",\n            \"198.18.0.0/15\",\n            \"198.51.100.0/24\",\n            \"203.0.113.0/24\",\n            \"::1/128\",\n            \"fc00::/7\",\n            \"fe80::/10\"\n          ],\n          \"outboundTag\": \"direct\"\n        }\n      ]\n    }\n  }\n}\n```"
		},
		{
			"post_id": 12,
			"title": "Introduce the SFaaS",
			"date_published": 1491021296,
			"body": "Introduce the SFaaS - SaltedFish as a Service\n\n* * *\n\nSFaaS is a revolution of cloud computing services.\n\nOur team found that SaltedFish can work as a kind of processor. It has following unique features:\n\n*   Higher performance than all of the existing computers.\n*   Lower cost on power.\n*   Lower cost on deploying applicaion.\n\nOur team had setup data centers all around the world and build SaltedFish Network that can connect every SaltedFish together and access the Internet. So you can deploy yours in seconds with a low fee.\n\nBut please note that not every kind of SaltedFish can be a node in the network. To maintain the SaltedFish Network, you must have SaltedFish Certified Engineer Certification. Also please don't touch or eat SaltedFish at the data center, they are the SaltedFish that will burn your house down!\n\n* * *\n\nHere is a example instance:\n[https://v2bv.win/sfaas/](https://v2bv.win/sfaas/)\n\nYou can find answers of all the exsiting problems in the world here.\n\nJust have a try!\n\n~~**NOTE: IT'S A JOKE OF APRIL FOOL'S DAY**~~"
		},
		{
			"post_id": 11,
			"title": "Introducing Jekyll theme \"Biu\"",
			"date_published": 1497460151,
			"body": "Link: [https://github.com/RedL0tus/Biu-Jekyll-Theme](https://github.com/RedL0tus/Biu-Jekyll-Theme)\nLicense: MIT\n\n* * *\n\nYes, this is the theme this blog is using.\n\nIt's a fork of [Alex Carpenter](https://github.com/alexcarpenter)'s [Butane-jekyll-theme](https://github.com/alexcarpenter/butane-jekyll-theme).\n\nIt looks quite same but with several difference:\n\n1.  Changed fonts to Inconsolata ([All hail monospaced fonts!](https://github.com/RedL0tus/Biu-Jekyll-Theme/commit/6d08203aefdb36e7f172d1a15dc47b5df89cde96)).\n2.  Modified headers in post pages.\n3.  Modified footers.\n4.  Add Google Analytics support\n5.  Add Structured Data support.\n6.  Add Accelerated Mobile Pages support.\n7.  Add a random fortune at footer.\n\nP.S. There are some slight difference between the version in the theme's repo and the version I'm using right now. Such as Service Worker and Progressive Web APP's manifest. That's because the service worker I'm using right now is written by others :)\n\nHow to deploy:\n\n```\n$ git clone https://github.com/RedL0tus/Biu-Jekyll-Theme.git  \n$ cd Biu-Jekyll-Theme  \n$ rm -rf CHANGELOG.md README.md\n$ nano  _config.yml #Or any other editor you prefer   \n$ jekyll serve # Please deploy Jekyll first.\n```"
		},
		{
			"post_id": 10,
			"title": "MultiROM on Nexus 5X",
			"date_published": 1490624920,
			"body": "As a no-zuo-no-die-solaris, I want to install multi systems (a.k.a ROMs) on my Nexus 5X (bullhead).\n\n* * *\n\nBut I just searched for a long time, I found there are two ways to multi boot on Android devices: MultiROM & EFIDroid.\n\nBut both of MultiROM and EFIDroid don't have official support to Nexus 5X.\n\nAfter several times of searching, I found that there is a people who already done porting of MultiROM to Nexus 5X.\n\nYou can get source code here: [@jollaman999/multirom at GitHub](https://github.com/jollaman999/multirom)\nAnd modified version of TWRP's source code: [@jollaman/Team-Win-Recovery-Project at GitHub](https://github.com/jollaman999/Team-Win-Recovery-Project)\n\nI've tested on my device and it can work correctly.\n\nIn order to use it, the easiest way is download the modified version of MultiROM Manager. You can find it at [here](https://github.com/jollaman999/MultiROMMgr/tree/master/MultiROMMgr).\n\nOnce you open the MultiROM Manager and give it root access, you can use it as the normal MultiROM manager.\n\nHave fun!"
		},
		{
			"post_id": 9,
			"title": "My new AP (hAP AC Lite)",
			"date_published": 1488788444,
			"body": "Finally my new AP arrived :) (From Latvia)\n\n---\n\nThe reason I buy a new AP is the router here at my host family is totally a garbge.(Doesn't support 802.11AC; latency while pinging an address in local network can reach 1000ms; Some times even cannot assign IP address to connected devices...)\n\nSo I ask for some advice about which AP worth to buy in AOSC's group, then BroncoTc suggest MikroTik's hAP ~~(In fact I didn't heard anything about MikroTik before)~~.\n\nAfter searching on eBay, I found that hAP AC is too expensive so I decide to buy hAP AC Lite (RB952Ui-5ac2nD-TC). After about half an month, I receive the package.\n\n![Box](https://img.vim-cn.com/09/b9515458ece6371c7d10f01dab12df1e707b5b.jpg)\nJust a small box with signs printed on it.\n\n\n![Open](https://img.vim-cn.com/56/7abef3f0c9aa95ce2c8a10d7b37c00f48dbd22.jpg)\nThere are only a few things in the box: hAP itself, power adapter and a plastic mount.\n(Ignore the ThinkPad logo behind, please)\n\n![Router](https://img.vim-cn.com/44/6f8a54f3cb354126ad58aab0286c9edd9d3ce6.jpg)\nIt's pretty tiny that only a little bit bigger than my hand. ~~(cute)~~\n(Ignore my ThinkPad again, please)\n\nI place it at living room and near the original router :)\n![Desk](https://img.vim-cn.com/e7/d9face3c9f77ce9448c44f439a8f62b4f4cbb7.jpg)\n\nAnd... It workds fine, much much better than the original one from xfinity.\n\nFor detailed performance information, please read other's post :)"
		},
		{
			"post_id": 8,
			"title": "My custom mechanical keyboard",
			"date_published": 1488802596,
			"body": "~~I want to build a custom mechanical keyboard by my self.~~\n**Bought a IBM SpaceSaver II (RT3200), details: [link](https://v2bv.win/2017/using-ibm-rt3200-on-modern-linux-systems.html)**\n\n* * *\n\n~~And here is all I need:~~\n\n*   ~~Soldering Iron Kit (Bought,[Amazon](https://www.amazon.com/gp/product/B01JZ6HNB8))~~\n*   ~~Solder (Bought,[Amazon](https://www.amazon.com/gp/product/B00068IJPO))~~\n*   ~~Switches (Planning, Cherry MX Brown+Blue/Green)~~\n*   ~~PCB (Waiting for Massdrop, XD60)~~\n*   ~~Keycaps (Planning, may be blank PBT ?) (Or this on [Massdrop](https://www.massdrop.com/buy/dan-ink-pbt-all-over-dye-subbed-keycap-set))~~\n*   ~~Case (Planning, may be Aluminum or Acrylic ?)~~\n*   ~~Keyboard plate (Planning)~~\n*   ~~Carrying bag/case (Planning)~~\n*   ~~Stabilizers (Planning)~~\n*   ~~...~~\n\n~~2017-03-06:~~\n\n*   ~~Bought soldering iron kit and solder on Amazon, planning to arrive at 2017-03-07.~~\n*   ~~XD60 PCB may be on Massdrop at middle of this month.~~\n\n~~**TO BE CONTINUED...**~~\n\n2017-07-31:\n\n*   Bought a IBM SpaceSaver II (RT3200), details: [link](https://v2bv.win/2017/using-ibm-rt3200-on-modern-linux-systems.html)"
		},
		{
			"post_id": 7,
			"title": "Unofficial LineageOS build (SFMod)",
			"date_published": 1483949319,
			"body": "Several days ago, Cyngn shut down all services for CyanogenMod, and those developers created a fork of CyanogenMod called [LineageOS](https://lineageos.org). And at now, though we can visit their download site but they didn't start build official builds yet (2017.01.09). So I built a build from their [source code on GitHub](https://github.com/LineageOS) for my Nexus 5X(bullhead) -- Of course, with some changes.\n\n* * *\n\n```\nChanges:\n1\\. Change default kernel to flar2's ElementalX-4.04.\n2\\. Add Brevent(3.1.2).\n3\\. Change color theme to blue, just like Pixel (From Pure Nexus Project)\n4\\. Add Masquerade and Substratum.\n5\\. System embedded Magisk Manager\n```\n\nAnd... I call it SFMod, you can find source code [here](https://github.com/SFMod)\n\n(The reason why I stop using Pure Nexus is that the maintainer of Pure Nexus allways reset repo's HEAD and `git push -f` so when I merge from those repo, it always make many conflicts; And always fail to build it from source.)\n\nHere is the download link: [Google Drive](https://drive.google.com/file/d/0B5BS_3kBfTlkLWRZaENGOHN1NTg/view?usp=sharing)\n\n![About](https://img.vim-cn.com/8e/85681240d1c07a4f410de749592faa05c81cc3.png)"
		},
		{
			"post_id": 6,
			"title": "Pure Nexus - SFMod",
			"date_published": 1483347204,
			"body": "These days I was working on compiling and modifying Android system.\n\n* * *\n\nAt first I want to use [CyanogenMod](https://cyanogenmod.org) as base of my Mod.\n\nAh... As you know, Cyngn [shut down CM Project and all of its services](https://cyngn.com/blog/cyanogen-services-shutting-down). Those developers went to a new project called [Lineage OS](https://lineageos.org).\n\nThen I heard about [SlimROMs](https://slimroms.org) form [PeterCxy](https://typeblog.net). After I compile their source code, I found that SlimROM may not support Google's Project Fi (Baseband works fine but it cannot identify my Project Fi SIM card).\n\nFinally I try to build [Pure Nexus](https://github.com/PureNexusProject) (Because my phone is Nexus 5X and other Nexus users had recommend me about the Pure Nexus Project). I also tried their official build and I found it supports Project Fi. But at the first time I was trying to get the source code of it, I don't know what's wrong with [GitLab](https://gitlab.com), I cannot acces Pure Nexus Project's repo on it. I sent issues to both GitLab and Pure Nexus Project on GitHub. Though nobody answered me but one day later I can successfully access the repo.\n\nAfter I got their source code, I started modify it. I added support for [liudongmiao](https://github.com/liudongmiao)'s [Brevent](https://piebridge.me/pr/) and Change the default kernel (PureKernel) to [flar2(Aaron Segaert)](https://github.com/flar2)'s [ElementalX](https://elementalx.org) (Because I bought [EXKM](https://play.google.com/store/apps/details?id=flar2.exkernelmanager) and I don't want to waste my mondy :D )\n\nFinally it works. But I found there is still a small problem: Some application will crash due to `AndroidRuntime: java.lang.SecurityException: Permission Denial: XXXXXXXXXX; this requires android.permission.INTERACT_ACROSS_USERS_FULL`\n\nSource code manifest: [https://github.com/RedL0tus/manifest](https://github.com/RedL0tus/manifest)\n\nHere is the download link of my build: [Google Drive](https://drive.google.com/file/d/0B5BS_3kBfTlkV1paTEk5OVpCc1E/view?usp=sharing)\n\nHere are the screenshots:\n![PixelLauncher](https://img.vim-cn.com/c7/6e0094f94e74c3fd0f4ebef52f39e71b210bc4.png)\n(It use Pixel Launcher as default launcher)\n![LockScreen](https://img.vim-cn.com/f3/193b647dc7bd68cb5ea4d77380dd0bd523294b.png)\n(The carrier info can be modify via Pure Settings)\n![Brevent](https://img.vim-cn.com/09/ce180a4f17b2454ee2233ccfe3e9e56730e120.png)\n(Brevent's working)\n![About](https://img.vim-cn.com/a5/22737efef28c510d6ab9cc33678ce03122259b.png)\n(PureNexus-SFMod :D )"
		},
		{
			"post_id": 5,
			"title": "Gabe, shut up and take my money!",
			"date_published": 1482490872,
			"body": "Gabe, shut up and take my money!\n\n* * *\n\n![Steam1](https://img.vim-cn.com/29/052ced758175ba426cb78292a99a368239e947.png)\n![Steam2](https://img.vim-cn.com/b0/e660dd0c1ab634f2d7b2237e0689d3beade0fb.png)\n![Steam3](https://img.vim-cn.com/c3/fbbcac96073933cc516b467c8c6df6cd93a484.png)\n\n![Gabe](http://img.vim-cn.com/3b/037a58691a64f6c7b8459524dfe416122ed325.jpg)"
		},
		{
			"post_id": 4,
			"title": "Federal SaltedFish",
			"date_published": 1482153681,
			"body": "LOL (\n\n---\n\n![Federal SaltedFish](https://img.vim-cn.com/fb/28a4012a87d78f5d5f6963a32d559e10b5e779.png)"
		},
		{
			"post_id": 3,
			"title": "I'm back (Again)",
			"date_published": 1481081892,
			"body": "I can't remember how many times I've rebuild my blog.\n\n* * *\n\nAnd this time, it's because I lost my _config.yaml of the Hexo theme AGAIN...\n(I sat the theme as a submodule by mistake.)\n\nNow I switched to Jekyll and use Prose.io to write posts.\nAnd the theme I'm using now is modified from Brutane and you can find it on my GitHub.\n\nLOL"
		},
		{
			"post_id": 1,
			"title": "Congratulations!",
			"date_published": 1433033779.604,
			"body": "Your zeronet blog has been successfully created!"
		}
	]
}