{
	"next_topic_id": 1,
	"topic": [],
	"topic_vote": {},
	"next_comment_id": 3,
	"comment": {
		"3_19S7f5QwP5pRdk6BdNV9rXL3w7PeQu7xfV": [
			{
				"comment_id": 1,
				"body": "## 我从orange大牛的博客上找到了关于这个漏洞的说明\n`http://blog.orange.tw/2016/04/bug-bounty-uber-ubercom-remote-code_7.html`\n对于漏洞的出现的解释是\n```\n額外一提的是在引用模組中看到 Celery，因此可以猜測網站大致架構應該是：\n\n從 Riders.uber.com 這個進入點修改姓名後存進資料庫\n\n不過為了寄送簡訊以及信件等耗時的工作，使用 Asynchronous Task 機制交給後方的 Worker\n\n而當 Worker 再從資料庫抓出姓名產生模板時使用串接的方式直接將模板產生所以導致了這次遠端代碼執行 :P\n\n寫到這，最後廢言一下，對我來說，其實玩 Bug Bounty 獎金什麼都是額外的，最主要的是可以找出別人找不出、別人發現不了的漏洞，回報並且讓別人也認同你的發現，這其中得到的成就感才是最爽的XD\n```\n哦！原来是产生模版时用了串接的方法，所以如果内容符合模板语法，在下一步的渲染中语句就会被执行了。\n最后，通过遍历可以找到os之类的模块以执行系统命令了。只是此处由于有长度限制，可能没办法执行那么长的语句，有点可惜，怪不得大牛在漏洞报告中加了一个“可能执行”。\n另外，最新的jinja2好像修复了这样的模板漏洞，默认开启了更强的沙盒。",
				"added": 1484393962
			}
		],
		"2_1Mog4vhVRzKKqtyQ23rzWDgvZwHs8yHV6d": [
			{
				"comment_id": 2,
				"body": "初来乍到，表示支持！希望可以长久发展，希望大家自律！",
				"added": 1484394044
			}
		]
	},
	"comment_vote": {}
}