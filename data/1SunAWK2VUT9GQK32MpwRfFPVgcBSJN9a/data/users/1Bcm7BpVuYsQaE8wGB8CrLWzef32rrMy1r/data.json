{
	"next_post_id": 8,
	"next_comment_id": 10,
	"next_follow_id": 3,
	"avatar": "generate",
	"user_name": "Vwv",
	"hub": "1SunAWK2VUT9GQK32MpwRfFPVgcBSJN9a",
	"intro": "新 ZeroNet 用户",
	"post": [
		{
			"post_id": 1,
			"date_added": 1537616994,
			"body": "你好 ZeroMe!"
		},
		{
			"post_id": 1537617030,
			"body": "我能想到的最安全的通信方式\n首先需要两个手机，一部普通用的手机，另一个用淘汰的旧手机就可以了。\n旧手机恢复出厂设置，不要插手机卡也不要连接任何的wifi或者网络，并且打开飞行模式。\n动手能力强的可以把旧手机刷上第三方的系统。\n接下来用一个例子说明如何安全通信：\n例如 甲 要给 乙 发一条消息 甲先在旧手机上把要发送的消息加密。\n然后通过二维码程序把 加密之后的消息 生成为一个二维码。\n之后通过另外一个手机扫一下这个二维码，把加密的消息读取出来。\n最后就可以把加密的消息发送给乙了。\n乙收到消息同样通过二维码程序生成一个二维码。\n然后用旧手机扫一下二维码，把加密消息读取到旧手机。\n最后通过旧手机里的应用程序把加密的消息解密出来就可以了。\n\n关键之处在于 发送消息的一方利用不联网的手机加密\n接收消息的一方也用不联网的手机解密\n大家说说这个方法是否可行",
			"date_added": 1537617028
		},
		{
			"post_id": 1537617198,
			"body": "ZeroTalk 的中文页：\nhttp://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topics:10_1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/Chinese+language+topics",
			"date_added": 1537617195
		},
		{
			"post_id": 1537618245,
			"body": "translate by : https://translate.google.com\n\nThe safest way to communicate I can think of\nFirst, you need two mobile phones, one for ordinary mobile phones, and the other for old mobile phones that are eliminated.\nThe old phone is restored to the factory settings, do not plug in the phone card and do not connect any wifi or network, and open the flight mode.\nHands-on ability to brush old phones to third-party systems.\nNext, use an example to illustrate how to communicate securely:\nFor example, A wants to send a message to B. first A encrypts the message to be sent on the old phone.\nThe encrypted message is then generated into a QR code by a QR code program.\nThen scan the QR code with another mobile phone and read the encrypted message.\nFinally, the encrypted message can be sent to B.\nB receives the message and also generates a QR code through the QR code program.\nThen use the old phone to scan the QR code and read the encrypted message to the old phone.\nFinally,  decrypt the encrypted message in the old mobile phone.\n\nThe key point is that A encrypts message by a non-networked mobile phone.\nand B decrypts message by a non-networked mobile phone too.\nEveryone talks about whether this method is feasible.",
			"date_added": 1537618241
		},
		{
			"post_id": 1538030722,
			"body": "我搞不懂为什么好多币圈的中国人希望比特币扩容\n国内网络上一大片批判闪电网络并抬高扩容方案的文章\n在我看来扩容方案并不能一次性解决问题\n你今天扩容到2M 过两年又会拥堵又要扩容到4M\n再过几年可能要扩容到8M 如果比特币市场一直扩大\n这个过程可能要一直持续 但是每次扩容都要面临一次硬分叉\n很多中文币圈的文章都说硬分叉不可怕\n因为比特币已经经历过好多次硬分叉了\n但是以前的硬分叉目的都是分出一个新品种的加密币\n比特币持有者都把这种分叉当成是派发糖果\n而如果你要通过硬分叉来解决网络拥堵问题\n意味着需要用新分叉出来的品种代替比特币\n这期间如果出了问题无疑会带来前所未有的混乱\n我的想法是如果要硬分叉就要一次性解决问题\n比如使用动态区块容量的技术 这是一种很成熟的技术\n好多很成熟的加密币都在使用这种技术\n网络拥堵的时候区块自动增大 网络空闲的时候区块自动减小\n除此之外我们还要为比特币准备更多的成熟的新技术\n通过单次的硬分叉把多种技术更新一次完成\n这样新分出来的品种就会极大方便用户使用\n这样大家才会放弃旧的比特币统一使用新比特币 硬分叉才能顺利完成\n\n如果用一点阴谋论的想法的话 我看到的事实是\n刚好在比特币即将进行2M扩容之前 比特币现金横空出世\n也许有人预估到硬分叉扩容会给比特币带来混乱\n于是想让比特币现金在混乱中替代比特币 从中捞取利益\n当然这纯粹是猜测并没有真实证据\n\n对于闪电网络我也不认为它能解决拥堵问题\n但是起码不用进行草率的硬分叉\n而且确实可以在不增加网络负担的情况下扩大比特币的应用范围\n我举个例子 比如你去超市购物 如果你刷银行卡付款\n假设银行效率很低每次刷卡都要等很长时间才能到账\n而且还要收较高的手续费 这种情况下你可以办一张超市的会员卡\n这样结账的时候就不需要经过银行了 既快速又不收手续费\n但是会员卡的方法不能解决银行效率低的问题\n会员卡只能在你经常消费的地方办\n有好多单次消费的场景下都用不了 还是要通过银行\n闪电网络就类似于会员卡业务\n甲乙双方在比特币主网络签一个合约 并在合约里面存一点比特币\n之后双方的交易就可以私下完成 到最后双方所有交易都完成了\n再到主网络结算一下 真正的技术会比我描述的要更复杂一点\n有人认为可以通过跨合约转账的方法让闪电网络替代主网络\n我个人认为不可行 再举个例子 好比你欠了张三100块钱\n然后你把手里一张超市会员卡给张三抵账\n会员卡里面有100块余额 而张三本人正好打算到那家超市办会员卡\n这样一来你和张三之间的结算就不需要通过银行转账了\n会员卡的本质是你和超市之间的合约\n当你把会员卡转移给张三之后 就变成了张三和超市之间的合约\n显然这个办法也可以减少银行负担 但是无法代替银行的功能\n\n大家帮我看看哪里有错误 谢谢",
			"date_added": 1538030717
		},
		{
			"post_id": 1540886017,
			"body": "windows系统  通过源代码运行zeronet的方法\n1： 通过下面的链接下载python\nhttps://www.python.org/ftp/python/2.7.15/python-2.7.15.msi\n2：双击下载到的文件，然后一路点击Next安装好python\n3：通过下面的链接下载zeronet的源代码\nhttps://github.com/HelloZeroNet/ZeroNet/releases\n上面的链接打开网页之后找到Source code (zip)然后点击它一下就可以下载到最新的zeronet源代码了\n4：在D盘新建一个文件夹并命名为ZeroNet-win-dist\n5：通过解压缩软件，解压第3步下载到的zeronet的源代码文件\n6：将解压出来的文件夹重命名为core然后剪切并粘贴到D盘的ZeroNet-win-dist文件夹内\n7：通过互联网搜索“如何显示文件后缀名”按网上的方法把你电脑上的文件后缀名显示出来\n8：在D盘的ZeroNet-win-dist文件夹内新建一个文本文档并将如下的内容复制到文档里面然后保存并关闭文档\nC:\\Python27\\python D:\\ZeroNet-win-dist\\core\\start.py\n9：将 新建文本文档.txt 重命名为 ZeroNet-win.bat \n最后双击ZeroNet-win.bat就可以启动ZeroNet",
			"date_added": 1540886011
		},
		{
			"post_id": 1545891466,
			"body": "（更新，此文有重大错误，请看评论区重新写的文章）\n谈一谈我对tls1.3的一些理解，可能有错误，请在评论里指出来，谢谢\n第一个任务是要在一个不安全的网络环境里面让通信双方得到一个相同的密码用于加密和解密\n椭圆曲线上取一个点再配合一个整数去求曲线上另一个点是很容易的\n但是反过来知道了那两个点去求解那个整数却很困难\n椭圆曲线密码就是利用了这个特点进行加密和解密的\n在tls1.3中客户端的浏览器会生成一个随机的大整数\n我们把这个整数暂时记作a\n然后会调用将要访问的网站的证书\n所谓的证书其实就是椭圆曲线上的某个点，证书也称作公钥\n我们把证书的这个点暂时记作c\n之后就是通过整数a和网站的证书去求椭圆曲线上的另一个点\n我们把求得的这个点暂时记作p\n然后浏览器把点p发送给服务器，假设服务器里面只运营了一个网站\n接下来服务器也生成一个大整数\n我们把这个整数暂时记作b，然后调用网站的私钥\n所谓私钥在椭圆曲线密码里面也是曲线上的一个点，我们把这个点暂记作d\n点d与证书的那个点c，是成对出现的就好像河里的鸳鸯一公一母\n他们之间有一些神秘的联系，下面会说到这种联系\n服务器通过整数b和私钥的点d求取椭圆曲线上另一个点q\n然后把点q发给浏览器，上面提到过“神秘的联系”要派上用场了\n浏览器通过整数a和点q去求取另一个点x\n服务器通过整数b和点p去求取另一个点y\n总是可以得到点x与y其实是同一个点\n之后就可以利用这个相同的点作为通信密码来加密数据了\n第三方只能监听到浏览器发出的点p和服务器发出的点q\n但是并不能根据点p或者点q求解出整数a或者整数b\n自然也就无法得到通信密码\ntls1.2的时候握手需要两个来回，而且服务器需要向浏览器发送证书\n发送证书的时候还不能加密，浏览器收到证书还要验证\n如今浏览直接调用证书与一个随机整数求出一个点\n服务器只需要调用与证书对应的私钥与一个随机整数求出一个点\n然后握手就完成了，不仅不需要直接发送证书，连证书验证的过程都省了\n\n最后的问题就是所谓SNI了，一个服务器里面不可能只运营一个网站\n所以浏览器向服务器发送握手请求的时候必须携带网站的域名\n服务器根据这个域名调用相应网站的私钥进行握手\ntls1.2的时候域名的发送是不能加密的，这也带来了一点点安全问题\n如今的解决办法是通过DNS服务器查询域名的IP地址的时候\n顺便也可以查到服务器的公钥，记住这个公钥并不是网站的证书\n然后可以使用这个公钥把域名加密起来发送给服务器进行握手\n\n大家可以看到tls1.3连接里面，证书不会暴露、SNI里面的域名也可以加密\n唯一暴露的就是IP地址了，如果网站使用CDN服务的话IP也可以隐藏\n所以封锁一个网站唯一的办法就是DNS投毒了，不知道我说的对不对\n\n附上路线图：\n浏览器 a * c = p ------>服务器 b * p = y\n服务器 b * d = q ------>浏览器 a * q = x\nx = y",
			"date_added": 1545891459
		}
	],
	"post_like": {},
	"comment": [
		{
			"comment_id": 2,
			"body": "@Mybowknot2: 即使硬件有后门只要手机不联网，后门应该无法发挥作用吧？用电脑有点麻烦，而且如果不联网也还是有问题的话，内存卡或者U盘也可以传播病毒，linux的病毒也不是完全没有",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1537617030",
			"date_added": 1537618832
		},
		{
			"comment_id": 3,
			"body": "不知道有没有办法把旧手机拆开然后把主板上的网络模块破坏掉（或者把发射天线破坏掉） 有人知道这方面的技术吗？",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1537617030",
			"date_added": 1537622459
		},
		{
			"comment_id": 4,
			"body": "@Anx: 你照着做一遍就会发现一点都不复杂",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1540886017",
			"date_added": 1541296295
		},
		{
			"comment_id": 5,
			"body": "@Anx: 优点是安全性可能会加强，防止恶意代码的侵害",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1540886017",
			"date_added": 1541296434
		},
		{
			"comment_id": 6,
			"body": "@Rain222: 如果你是个喜欢折腾的人，你会发现自备python并通过源代码运行zeronet之后心情变得很好",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1540886017",
			"date_added": 1541297464
		},
		{
			"comment_id": 7,
			"body": "上面的文章有严重错误因此重写：\n首先从数学运算的乘法说起\n           a 乘以 b 等于 c    则：b 等于 c 除以 a    这个大家都知道\n例如：2 乘以 3 等于 6    则：3 等于 6 除以 2 \n但是数学家在椭圆曲线上面发明了一种特殊的乘法：\n椭圆曲线上的点 a 用这种特殊的乘法乘以一个整数 b 算出结果是点 c\n但是把点 c 和点 a 告诉你 让你去算整数 b 这个计算量会大到出乎你的想象\n普通的数学运算中乘法还有另一个特点：\n           a 乘以 b 等于 c 并且 a 乘以 e 等于 f   则：c 乘以 e 等于 f 乘以 b\n例如：2 乘以 3 等于 6 并且 2 乘以 4 等于 8  则：6 乘以 4 等于 8乘以 3\n在这一点上椭圆曲线上面特殊的乘法也具有同样的特点：\n点a 乘以 整数b 等于 点c 并且 点a 乘以 整数e 等于 点f   则：点c 乘以 整数e 等于 点f 乘以 整数b\n公式：a X b = c   且  a X e = f  则  c X e = f X b\n搞这么复杂有毛用啊？哈哈 用处很大哦\n如果两个人相隔很远要传递私密信息 那就需要把信息加密起来\n但是问题是收信人需要密码才能解密 怎么才能把密码安全的交付到收信人手上呢？上面的特殊乘法可以帮忙\n首先双方需要在椭圆曲线上取一个共同的 点 a 这个点可以公开不需要保密\n然后发信人生成一个随机整数b 收信人生成一个随机整数e  这两个整数需要保密除了自己不能让任何人知道\n记得这个公式吧：a X b = c   且  a X e = f  则  c X e = f X b\na是共用的 b是发信人私有的 e是收信人私有的\n然后发信人使用 a X b 算出 c 收信人使用 a X e 算出 f 双方再互换 c 和 f\n由于 c X e = f X b 所以收信人 利用手里的 整数e 和 点c 算出来的值\n与发信人 利用手里的 整数b 和 点f 算出来的值 是 相等的 这个值就可以作为密码 来 加密 以及 解密 信息\n如果有人窃听他们的通信，他只能在 收发双方 互换 c 和 f 的时候窃听到 \n c 和 f 还有 a是公开的 窃听者无法通过 c 和 a 算出 b 也无法通过 f 和 a 算出 e 进而 无法算出 c X e = ? 或者 f X b = ?\n\ntls1.3中，浏览器 和 网站服务器 也是使用这种办法加密通信的\n浏览器计算：a X b = c 把 c 发给服务器\n服务器收到 c 之后 用 c X e 作为密码 把 数字签名 以及 网站证书 加密起来\n并且计算：a X e = f 最后把 f 连同 加密之后的 数字签名 以及 网站证书 一起 发送给浏览器\n浏览器再计算：f X b 利用计算结果作为密码 解密 数字签名和网站证书 并验证数字签名和网站证书的可靠性\n至此所谓的 tls握手 就结束了 只需要一个来回\n\n我还是不能保证重写的文章没有错误\n如果你发现了错误请指出来，谢谢",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1545891466",
			"date_added": 1546084840
		},
		{
			"comment_id": 8,
			"body": "@Eaglex: tls1.2的时候可以定点封锁，不喜欢谁就封谁\ntls1.3的时候只能成片封锁，喜欢的和不喜欢的，只能一起封",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1545891466",
			"date_added": 1546085042
		},
		{
			"comment_id": 9,
			"body": "@Eaglex: 你说的是对的，但我的思考方向有一点不同\ntls1.3技术理论上只要有一个境外IP可以连接就可以为所有人提供代理\n所以如果要封就要全部封死\n翻墙的目的是什么？很多人说是要了解外面的消息。其实真正想要了解外面的人不能翻墙他也可以了解，大部分人不会翻墙他也对外面的事情不关心。\n我觉得真正大局域网的时代其实是翻墙的胜利。墙的目的是阻止它不喜欢的放过它喜欢的或无所谓的。而因为翻墙一直在进步，\n墙一直在退守，退无可退才会搞彻底大局域网。\n在它承认失败之前至少还是会为了它存在的目的继续努力奋斗一阵的",
			"post_uri": "1Bcm7BpVuYsQaE8wGB8CrLWzef32rrMy1r_1545891466",
			"date_added": 1546138437
		}
	],
	"follow": [
		{
			"follow_id": 2,
			"hub": "1SunAWK2VUT9GQK32MpwRfFPVgcBSJN9a",
			"auth_address": "1HuxEpnWQBMk2HkD7DobuwQnqHjqHy4psJ",
			"user_name": "Lchh",
			"date_added": 1538102511
		}
	]
}