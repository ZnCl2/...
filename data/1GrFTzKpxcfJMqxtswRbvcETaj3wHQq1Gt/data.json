{
	"title": "Transmission",
	"description": "Thoughts of a decentralisation enthusiast.\n\nBased on a demo for decentralized, self publishing blogging platform.",
	"links": "[Source code](https://github.com/HelloZeroNet)\n\n[ZeroTalk](http://127.0.0.1:43110/1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ)\n\n[NoFish's ZeroNet DevBlog](http://127.0.0.1:43110/1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8)\n\n[Contact me](http://127.0.0.1:43110/1GrFTzKpxcfJMqxtswRbvcETaj3wHQq1Gt/?Post:2:Tell+me+I+am+wrong)\n\nDonate to ZeroNet:\n[![NoFish's Donation Address](img/zn-donate.png)](https://blockchain.info/address/1QDhxQ6PraUZa21ET5fYUCPgdrwBomnFgX)",
	"next_id": 11,
	"demo": false,
	"modified": 1427407499,
	"posts": [
		{
			"id": 10,
			"title": "Dear nice BitMessage person",
			"posted": 1427407414.794,
			"edited": false,
			"body": "I'm not sure who you are, but you sent me a message a bit back that was really nice. I meant to respond to you, but I lost the message :(\n\nSay hi sometime and I promise to reply this time! :)"
		},
		{
			"id": 9,
			"title": "Subscribe to get updates on new posts",
			"posted": 1426197084.621,
			"edited": false,
			"body": "If you'd like to get a note when I post a new post, you can subscribe here:\n\n> BM-2cUzeFoz8kB7oasHC5ZsDRfQ3L3FDAVD5F"
		},
		{
			"id": 8,
			"title": "Have you heard of ReactOS?",
			"posted": 1426195504.861,
			"edited": false,
			"body": "![ReactOS screenshot](img/reactos-screen.png)\nIf you've never head of it before, here's a snippet from their site:\n> ReactOS is a free open source operating system based on the best design principles found in the Windows NT architecture\n> Written completely from scratch, ReactOS is not a Linux based system, and shares none of the UNIX architecture.\n\nIt's more or less what it says on the tin, really. Reverse-engineered in a clean-room fashion from Windows, ReactOS is everything I could want from an OS.\nAs much as I dislike running Windows which is almost completely closed-source, I never really made friends with Linux. This is mainly just because whilst there are open source alternatives to most of the software I use, I often find that the market leader is the Windows version. There are other reasons, too, but lets not get bogged down.\n\nReactOS as they say, is not just a Linux flavour, it's a ground-up implementation of something very much like Windows. This means, *in theory* that you can install Windows binaries to it, and it'll just work, right out of the box. This is really something I'd love, and maybe I'd even develop stuff for it - I'm certainly going to try and shoehorn ZeroNet onto it.\n\nAt the moment, it's at version 0.3.17, and it's a demo, at best. The bundled \"Internet Explorer\" works, just about. Load times for everything are generally longer than you'd expect, an graphically, it's got it's glitches.\nBut these guys are building *Windows* from the ground up, so the fact that they've got this far is a huge achievement.\n\nCheck out the virtual image at [ReactOS.org](https://www.reactos.org/)"
		},
		{
			"id": 7,
			"title": "A JSON caching layer for quicker development and running of ZeroNet sites",
			"posted": 1426110772.885,
			"edited": false,
			"body": "If you haven't visited the ZeroNet [Subreddit](http://www.reddit.com/r/zeronet/), give it a look. It's where I often hang out, and there are some great discussions that go down.\n\nOne such example is [this thread](http://www.reddit.com/r/zeronet/comments/2vj4f3/now_that_we_have_the_ability_for_users_to_add/). The idea is as follows:\n\n> Once changes have been published and verified, we could make site design easier, and the resulting sites more efficient, by building & updating an SQLite database, and querying that.\n\nFull disclosure, I created the thread, so I'm just talking about an idea I had here. Here's an example of why I think it's a better way to do data access.\nIf we wanted to do something like a post up/down voting system, then to work out the 'score' of each post, we'd have to look at the votes.json (for example) in each user's individual directory.\nIf we have 100 users, and each has each voted on, say, 20 posts each, and we want to get the votes for those 25 posts on the front page, that's 50,000 checks we have to do just for that one page.\n\nBut we could do it a quicker way, by doing all that in one go (and in smaller chunks on updates), we could reduce that to 1 lookup per post, by using a caching layer.\n\nHere's my vague idea. In the standard model created by NoFish (the lead developer of ZeroNet), each user has a directory that they can sign in order to publish changes without the need of a central authority. Great.\nIn this directory, there should be one JSON formatted file, each containing an array of objects that are essentially transactions with a database table.\nSo a user would have a posts.json, comments.json, votes.json, and so on.\nHere's an example I nicked from ZeroTalk:\n\n    {\n      \"comments\": [\n        {\n          \"post_id\": 1,\n          \"comment_id\": 1,\n          \"body\": \"Markdown test:\\n - 1\\n - 2\\n - 3\",\n          \"added\": 1423439749\n        },\n        {\n          \"post_id\": 24,\n          \"comment_id\": 2,\n          \"body\": \"UTF8 teszt: Árvíztűrőtükörfúrógép\",\n          \"added\": 1423441224\n        }\n      ]\n    }\n\nSo, from this example, I'd say that the comments table should have 5 columns, *post_id*, (an int), *comment_id* (an int), *body* (a text), and *added* (a long).\nNot seen in the above JSON, but it'd need to be user_id. \n\nOn first load, all of this data should be loaded into the SQLite database, and then this can be queried as a trustable, single source of data.\n\nHow the database is constructed\n-------------------------------\n\nIn the root of the site, in the control of the designer of the site, would be a JSON file specifying the structure of each table, and its data source, like so:\n\n    {\n      \"tables\": [\n        {\n          \"tableName\": \"comments\",\n          \"dataSource\": \"\\\\data\\\\users\\\\[\\\\w{34}]\\\\comments.js\",\n          \"fields\": [\n            {\n              \"fieldName\": \"user_id\",\n              \"primaryKey\": false,\n              \"dataType\": \"INT\",\n              \"nullable\": false\n            },\n            {\n              \"fieldName\": \"comment_id\",\n              \"primaryKey\": true,\n              \"dataType\": \"INT\",\n              \"nullable\": false\n            },\n            {\n              \"fieldName\": \"post_id\",\n              \"primaryKey\": false,\n              \"dataType\": \"INT\",\n              \"nullable\": false\n            },\n            {\n              \"fieldName\": \"body\",\n              \"primaryKey\": false,\n              \"dataType\": \"INT\",\n              \"nullable\": false\n            },\n            {\n              \"fieldName\": \"comment_id\",\n              \"primaryKey\": false,\n              \"dataType\": \"INT\",\n              \"nullable\": false\n            }\n          ]\n        }\n      ]\n    }\n\nFrom this, ZeroNet can go through the site's directory, finding all the comments.json files detailed in the *dataSource* field that match the included regex in the [brackets], if they exist, and populate the table.\nWhen updates are published, those changes can be added to the table, minimising work.\n\nIn short, I think it could be a pretty cool way to work, and just as exciting, it'd mean that a developer wouldn't have to start from scratch when developing for ZeroNet.\n\n[Let me know what you think](http://127.0.0.1:43110/1GrFTzKpxcfJMqxtswRbvcETaj3wHQq1Gt/?Post:2:Tell+me+I+am+wrong)\n\nPS Notes:\n\n* If this does work, we could probably save a lot of space by using flat binary files instead of JSON\n* This doesn't stop people editing their own history, you'd need some kind of hashing for that\n* You'd be best off having an event model that allowed users to override the insertion SQL of records so they could add checks/validation\n* It'd also be good to allow preload/postload custom SQL scripts"
		},
		{
			"id": 6,
			"title": "Tip jar",
			"posted": 1426105044.446,
			"edited": false,
			"body": "Someone suggested I should have a tip jar, so now I have a tip jar, if you're so inclined :)\n\n[![Transmission's Donation Address](img/me-donate.png)](https://blockchain.info/address/1A24so3HtWTQu5kSTVmCFQkNXxT48Vv6XG)"
		},
		{
			"id": 5,
			"title": "How about a distributed YouTube?",
			"posted": 1425588040.828,
			"edited": false,
			"body": "One of the really fun things about ZeroNet is that taking the central server out of the equation, forces you to re-examine how multi-user websites work. Maybe that's just me, though.\n\nAnyway, part of this is that I've been thinking about how you'd create a distributed version of YouTube, which comes with its own list of features and potential headaches.\nThe simplest of these is easily overcome. You'd need the ability for users with unique identities, with all the standard trappings of a multi-user website: comments, voting and submitting. This bit can easily be poached from the way that [ZeroTalk](http://127.0.0.1:43110/1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ) works, if you're doing it simply.\n\nHere's the bit that might get sticky: the videos themselves. Arguably the bulk of the data (by a wide margin), you certainly wouldn't want terabytes of video needed to be stored on each client, because you probably wouldn't care about 90% of the video content on the site.\nI think a good way round this is to use a third-party library like [MediaElement.js](http://mediaelementjs.com/), and to point it at a video stored on another site.\nWith an address space of 2^160, spinning up a new address per video isn't a loss, and this way videos are shared among those people who want to watch them, rather than *everyone*.\n\nEven more sticky, is the issue of community policy enforcement. Or, to put it another way, censorship. Generally when I hear that word I just start to get incensed right off the bat, so believe me when I say I don't suggest it lightly.\nSome kind of community censorship would need to exist, for the good of all of the users. This is to combat spam like misleading content, scams, shock content, and illegal content. I'm not so sure how that could be done fairly, outside of a voting system.\n\nThis problem could be slightly mitigated by the idea of proof-of-donation. As [discussed over on /r/ZeroNet](http://www.reddit.com/r/zeronet/comments/2werx9/proofofwork_for_distributed_identity_creation/), a user wanting to join a site like this could be required to transfer a small donation to either the site's owner, or one of a list of charities. Once the site creator validates the user's donation/s, the user is given a directory that can be used to publish on the site. This idea invests users, quite literally, in the site and their identity.\nIf a user starts consistently posting content that violates the community rules, their user account can be deleted or frozen, and to rejoin, they'd have to pay again. This incidentally makes it more of a pain to do sockpuppeting.\n\nThese are really just thoughts, but I might take a look at putting together a distributed video sharing site sometime soon.\n\n[Let me know what you think](http://127.0.0.1:43110/1GrFTzKpxcfJMqxtswRbvcETaj3wHQq1Gt/?Post:2:Tell+me+I+am+wrong)"
		},
		{
			"id": 4,
			"title": "Having your digital cake and eating it: DRM, piracy and personal media",
			"posted": 1424299294.904,
			"edited": false,
			"body": "![Angry DRM Man](img/1.png \"Angry DRM Man is angry\")\nYou don't need telling that DRM is terrible, but it's true.\n\nOver the past couple of months I've been building up a CD collection so that I can move away from streaming services like Spotify. This is for three reasons:\n\n* Quality: CDs can be imported in FLAC\n* Availability: because it's offline, I can take my ripped collection wherever I am, and use tools to put it in whatever format I want.\n* Flexibility: because it's essentially just a pile of data files, I can do whatever I want with it, no questions asked, no DRM.\n* Choice: I'm not limited by what Spotify has available, I can dig out CDs from anywhere, even rarer, hard-to-find ones.\n\nThis has gone really well, so naturally the next step for me, I thought, was to apply that approach to movies: buy legally, rip for convenience, job done.\nAs you'd imagine, there's a catch. Though there have been some steps toward [making DRM-free movies available](http://lifehacker.com/can-i-get-drm-free-movies-and-tv-shows-without-pirating-477555875), Hollywood would still prefer to stick their fingers in their ears and hum loudly.\n\nWithout breaking a sweat, Blu-Ray is the dominant format for physical HD media, a place it earned through a bloody format war that lasted about two years.\nThe problem with this is that Blu-Ray is locked down, tight. Three regions divide the world:\n![Blu-Ray regions](img/Blu-ray_regions_with_key.png)\n\nRegion free BluRay players are expensive, and whilst hacks are available, none of these have matured like their DVD counterparts. PC playback is possible, but difficult, and USB drives are locked down, too.\n\nIn short, if you want to pay for, own, and watch films legally, <i>tough</i>.\n\nHowever, for all the region locking and DRM in the world, pirates don't give a damn, and digital copies of most media are [freely available online](http://127.0.0.1:43110/16rELcbeZ7GY7X8teezU2EVSdpQpc7WPjF).\n\nSo here's the problem:\n\n* I want to acquire media legally\n* I don't want DRM on my media\n* I do want a physical copy\n\nOne of these things has to give. In a bit, I'll go through my potential solutions to these, but it seems for now, I'm a bit tied for options.\n\n[Let me know what you think](http://127.0.0.1:43110/1GrFTzKpxcfJMqxtswRbvcETaj3wHQq1Gt/?Post:2:Tell+me+I+am+wrong)"
		},
		{
			"id": 3,
			"title": "The first question people ask: Why?",
			"posted": 1424036485.027,
			"edited": false,
			"body": "Christ, that title reads like a [Grauniad ](http://www.urbandictionary.com/define.php?term=grauniad) headline.\n\nAnyway. Whenever I'm explaining the cool new decentralised and/or privacy-focused <i>thing</i> that I've found, the first question anyone asks is usually: why?\n\nI mean, it's a decent point, if websites already exist, why reinvent the wheel? Sometimes, this can even be a thinly veiled 'why would you need to hide?', which breaks down to nothing to hide/nothing to fear, which I'll talk about in another post.\n\nThe best answer that I can give is that in the wake of the NSA/Snowden revelations, it's become clear that we can no longer trust our communications to go untapped, or censored in some way.\n\nAt this point, the way some people look at me makes me check I'm not wearing a tin foil hat.\nThis is a scary reaction to get. It means that even though dragnet surveillance is widely reported, some still don't see the need for change.\n\nBut with decentralised networks, it becomes much more difficult to stop people communicating, because there's no hub to take out of the wheel, there's just a bunch of computers talking to each other.\n\nSurveillance in a decentralised network like ZeroNet isn't too hard right now. All a [Three Letter Agency](http://www.urbandictionary.com/define.php?term=Three-letter+Agencies&defid=4019062) would need to do would be to keep an eye on the torrents shipping sites around, and they'd have the IPs of those broadcasting, seeding and downloading (if I've understood ZN right).\n\nIn short, decentralisation is good because it defends freedom of speech, which sounds a little grand, but it's true. It's the internet evolving into something safer, and that's damn exciting."
		},
		{
			"id": 2,
			"title": "Tell me I am wrong",
			"posted": 1424036240.233,
			"edited": false,
			"body": "This is the internet, everyone's wrong sometimes.\n\nBitmessage:\n\n    BM-2cUUjK6C54PtPnPpFqAA8sxUhiMqennge8"
		}
	]
}