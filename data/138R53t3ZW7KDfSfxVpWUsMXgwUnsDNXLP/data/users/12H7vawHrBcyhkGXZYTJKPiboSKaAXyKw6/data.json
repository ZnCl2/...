{
	"pages": [
		{
			"id": "81f2b1a0-be4f-11e8-9093-494d095614cc",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nHowever, for what we are doing from the above list we probably only require clang, libllvm\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  1. Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n\n    apt-get install python # The python 3 package may not be required.\n    apt-get install python2\n    apt-get install python2-dev\n\n## 2. Install the non python dependencies for termux\n    apt-get install libcrypt-dev # Required for gevent\n    apt-get install libcrypt #Installed due to being a dependency of libcrypt-dev\n    apt-get install libgcrypt #Might already be installed as a dependency of GnuPG\n    apt-get install libmsgpack # Maybe not necessary\n    apt-get install libmsgpack-dev\n## 3. Then install the python dependencies\n    apt-get install openssl #One might want to install this package before python\n    pip install --upgrade pip # Probably not necessary\n    pip2 install -upgrade pip # \n    pip2 install greenlet\n    pip2 install gevent\n    pip2 install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget -O https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## 3. Using ZeroNet as a Tor Hidden Service on ZeroNet\n\nOne of the main reason to install ZeroNet on an android Linux environment that doesn't require root is so for proper Tor integration. For TermMux to work as intended with Tor ZeroNet must be able to read the authentication cookie of the Tor Hidden Service. However, because android sandboxes applications from each other. Also even if you install ZeroNet somewhere were both the Tor Ap and Zero Net Ap have read premissions, without one can not add ZeroNet to group Tor.\n\nWhen both Tor and ZeroNet are installed in Termux both applicaitons will have the same user id and therefore this premission issue doesn't exist. To install Tor in termux type\n    apt-get install tor\nmake sure nano is installed:\n    dpkg -l | grep nano\nand if it is not installed then install it by typing\napt-get install nano\n\nNow edit the torrc file as follows:\n    nano $PREFIX/etc/tor/torrc\nUncomment the line which says \"SOCKSPort 9050\", this is done be deleting the pound sign at the beginning of the line (around line 19, the line number can be shown by pressing cntrl-c)\n\nUncomment the line that says \"ControlPort 9051\" (around line 57) and finally uncomment the line that says \"CookieAuthentication 1\". Press cntrl-o and then enter to save the file. Then press cntrl-x to exit nano. Type\n    tor\nto start tor. Now unless you commented out the line that says \"RunAsDaemon 1\" you will have to open a new window on termux. To do this swipe from left to right on the left edge of the window. The advantage of not running tor as a deamon is that the shell output from the tor process can help people troubleshoot issues with tor.  Now one can start ZeroNet in the same way as discussed above. \n\n## Other Tor Options\nOn the latest version of TerMux there is a setting in the configuration menu to connect to trackers via a proxy. This will help hide the fact that one is using ZeroNet and will have minimal impact on the speed at which ZeroNet Runs. One of the options is to specify tor but if this doesn't work then select custom and put in the following ip address:\n    127.0.0.1:9050\nand this will also proxy connections to trackers via Tor.  One can also select from the ZeroNet web interface EnableTor for every connection but this seems to mess with the browsers proxy settings. If one is using either the android firefox or tor browser then the proxy settings can be changed back in about:config. For zeronet to work properly with the browser localhost should be excluded from the proxy unless one wants to connect to zeronet using a remote onion address. If a browser doesn't support excluding local host from the proxy, one could use privoxy as the proxy instead of using tor directly. Privoxy can be installed in termux. Note that not all browsers support onion addresses because the browser might assume that the onion address doesn't exist if the dns address lookup fails. However, such a browser is leaking dns info. A browser with a properly functioning socks 5 or socks 4a proxy will let the proxy handle the dns lookup rather then using the operating system to fetch the DNS address.\n\n\n# Troubleshooting\n\n## No pip2 command\n\nOn termux python3 must be installed prior to installing python2. Python 3 is installed in termux as follows:\n    apt-get install python\nIf python2 is installed first then certain libriers for checksums will not exist, and python2 will improperly install. This can be fixed as follows:\n    apt-get install --reinstall python2\n    apt-get install --reinstall python2-dev\n\n# External Links\n- [How to Install and run ZeroNet on a Rasberi Pi](../16Go5kc2U9Ff4jeaY8kYiDEgpMYdgyboPY/?Topic:2_1L4dZcDF2maSKHDy788yhxpYnBWnXadUtS/How+to+Install+and+run+Zeronet+on+a+Raspberry+Pi)\n- [Tutorial: Run ZeroNet in Android Linuxdeploy](../1EiMAqhd6sMjPG2tznkkGXxhdwFBDdeqT9/?Post:73)",
			"date_added": 1537610932666,
			"slug": "termux"
		},
		{
			"id": "3c3b35c0-be4e-11e8-83e1-ebdb65bb9067",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nHowever, for what we are doing from the above list we probably only require clang, libllvm\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  1. Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n\n    apt-get install python # The python 3 package may not be required.\n    apt-get install python2\n    apt-get install python2-dev\n\n## 2. Install the non python dependencies for termux\n    apt-get install libcrypt-dev # Required for gevent\n    apt-get install libcrypt #Installed due to being a dependency of libcrypt-dev\n    apt-get install libgcrypt #Might already be installed as a dependency of GnuPG\n    apt-get install libmsgpack # Maybe not necessary\n    apt-get install libmsgpack-dev\n## 3. Then install the python dependencies\n    apt-get install openssl #One might want to install this package before python\n    pip install --upgrade pip # Probably not necessary\n    pip2 install -upgrade pip # \n    pip2 install greenlet\n    pip2 install gevent\n    pip2 install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget -O https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## 3. Using ZeroNet as a Tor Hidden Service on ZeroNet\n\nOne of the main reason to install ZeroNet on an android Linux environment that doesn't require root is so for proper Tor integration. For TermMux to work as intended with Tor ZeroNet must be able to read the authentication cookie of the Tor Hidden Service. However, because android sandboxes applications from each other. Also even if you install ZeroNet somewhere were both the Tor Ap and Zero Net Ap have read premissions, without one can not add ZeroNet to group Tor.\n\nWhen both Tor and ZeroNet are installed in Termux both applicaitons will have the same user id and therefore this premission issue doesn't exist. To install Tor in termux type\n    apt-get install tor\nmake sure nano is installed:\n    dpkg -l | grep nano\nand if it is not installed then install it by typing\napt-get install nano\n\nNow edit the torrc file as follows:\n    nano $PREFIX/etc/tor/torrc\nUncomment the line which says \"SOCKSPort 9050\", this is done be deleting the pound sign at the beginning of the line (around line 19, the line number can be shown by pressing cntrl-c)\n\nUncomment the line that says \"ControlPort 9051\" (around line 57) and finally uncomment the line that says \"CookieAuthentication 1\". Press cntrl-o and then enter to save the file. Then press cntrl-x to exit nano. Type\n    tor\nto start tor. Now unless you commented out the line that says \"RunAsDaemon 1\" you will have to open a new window on termux. To do this swipe from left to right on the left edge of the window. The advantage of not running tor as a deamon is that the shell output from the tor process can help people troubleshoot issues with tor.  Now one can start ZeroNet in the same way as discussed above. \n\n## Other Tor Options\nOn the latest version of TerMux there is a setting in the configuration menu to connect to trackers via a proxy. This will help hide the fact that one is using ZeroNet and will have minimal impact on the speed at which ZeroNet Runs. One of the options is to specify tor but if this doesn't work then select custom and put in the following ip address:\n    127.0.0.1:9050\nand this will also proxy connections to trackers via Tor.  One can also select from the ZeroNet web interface EnableTor for every connection but this seems to mess with the browsers proxy settings. If one is using either the android firefox or tor browser then the proxy settings can be changed back in about:config. For zeronet to work properly with the browser localhost should be excluded from the proxy unless one wants to connect to zeronet using a remote onion address. If a browser doesn't support excluding local host from the proxy, one could use privoxy as the proxy instead of using tor directly. Privoxy can be installed in termux. Note that not all browsers support onion addresses because the browser might assume that the onion address doesn't exist if the dns address lookup fails. However, such a browser is leaking dns info. A browser with a properly functioning socks 5 or socks 4a proxy will let the proxy handle the dns lookup rather then using the operating system to fetch the DNS address.\n\n\n# Troubleshooting\n\n## No pip2 command\n\nOn termux python3 must be installed prior to installing python2. Python 3 is installed in termux as follows:\n    apt-get install python\nIf python2 is installed first then certain libriers for checksums will not exist, and python2 will improperly install. This can be fixed as follows:\n    apt-get install --reinstall python2\n    apt-get install --reinstall python2-dev\n",
			"date_added": 1537610386204,
			"slug": "termux"
		},
		{
			"id": "0256f560-be4e-11e8-83e1-ebdb65bb9067",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nHowever, for what we are doing from the above list we probably only require clang, libllvm\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  1. Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n\n    apt-get install python # The python 3 package may not be required.\n    apt-get install python2\n    apt-get install python2-dev\n\n## 2. Install the non python dependencies for termux\n    apt-get install libcrypt-dev # Required for gevent\n   apt-get install libcrypt #Installed due to being a dependency of libcrypt-dev\n    apt-get install libgcrypt #Might already be installed as a dependency of GnuPG\n    apt-get install libmsgpack # Maybe not necessary\n    apt-get install libmsgpack-dev\n## 3. Then install the python dependencies\n    apt-get install openssl #One might want to install this package before python\n    pip install --upgrade pip # Probably not necessary\n    pip2 install -upgrade pip # \n    pip2 install greenlet\n    pip2 install gevent\n    pip2 install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget -O https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## 3. Using ZeroNet as a Tor Hidden Service on ZeroNet\n\nOne of the main reason to install ZeroNet on an android Linux environment that doesn't require root is so for proper Tor integration. For TermMux to work as intended with Tor ZeroNet must be able to read the authentication cookie of the Tor Hidden Service. However, because android sandboxes applications from each other. Also even if you install ZeroNet somewhere were both the Tor Ap and Zero Net Ap have read premissions, without one can not add ZeroNet to group Tor.\n\nWhen both Tor and ZeroNet are installed in Termux both applicaitons will have the same user id and therefore this premission issue doesn't exist. To install Tor in termux type\n    apt-get install tor\nmake sure nano is installed:\n    dpkg -l | grep nano\nand if it is not installed then install it by typing\napt-get install nano\n\nNow edit the torrc file as follows:\n    nano $PREFIX/etc/tor/torrc\nUncomment the line which says \"SOCKSPort 9050\", this is done be deleting the pound sign at the beginning of the line (around line 19, the line number can be shown by pressing cntrl-c)\n\nUncomment the line that says \"ControlPort 9051\" (around line 57) and finally uncomment the line that says \"CookieAuthentication 1\". Press cntrl-o and then enter to save the file. Then press cntrl-x to exit nano. Type\n    tor\nto start tor. Now unless you commented out the line that says \"RunAsDaemon 1\" you will have to open a new window on termux. To do this swipe from left to right on the left edge of the window. The advantage of not running tor as a deamon is that the shell output from the tor process can help people troubleshoot issues with tor.  Now one can start ZeroNet in the same way as discussed above. \n\n## Other Tor Options\nOn the latest version of TerMux there is a setting in the configuration menu to connect to trackers via a proxy. This will help hide the fact that one is using ZeroNet and will have minimal impact on the speed at which ZeroNet Runs. One of the options is to specify tor but if this doesn't work then select custom and put in the following ip address:\n    127.0.0.1:9050\nand this will also proxy connections to trackers via Tor.  One can also select from the ZeroNet web interface EnableTor for every connection but this seems to mess with the browsers proxy settings. If one is using either the android firefox or tor browser then the proxy settings can be changed back in about:config. For zeronet to work properly with the browser localhost should be excluded from the proxy unless one wants to connect to zeronet using a remote onion address. If a browser doesn't support excluding local host from the proxy, one could use privoxy as the proxy instead of using tor directly. Privoxy can be installed in termux. Note that not all browsers support onion addresses because the browser might assume that the onion address doesn't exist if the dns address lookup fails. However, such a browser is leaking dns info. A browser with a properly functioning socks 5 or socks 4a proxy will let the proxy handle the dns lookup rather then using the operating system to fetch the DNS address.\n\n\n# Troubleshooting\n\n## No pip2 command\n\nOn termux python3 must be installed prior to installing python2. Python 3 is installed in termux as follows:\n    apt-get install python\nIf python2 is installed first then certain libriers for checksums will not exist, and python2 will improperly install. This can be fixed as follows:\n    apt-get install --reinstall python2\n    apt-get install --reinstall python2-dev\n",
			"date_added": 1537610289078,
			"slug": "termux"
		},
		{
			"id": "c8c0d500-be4d-11e8-83e1-ebdb65bb9067",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nHowever, for what we are doing from the above list we probably only require clang, libllvm\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  1. Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n\n    apt-get install python # The python 3 package may not be required.\n    apt-get install python2\n    apt-get install python2-dev\n\n## 2. Install the non python dependencies for termux\n    apt-get install libcrypt-dev # Required for gevent\n   # apt-get install libcrypt #Installed due to being a dependency of libcrypt-dev\n    apt-get install libgcrypt #Might already be installed as a dependency of GnuPG\n    apt-get install libmsgpack # Maybe not necessary\n    apt-get install libmsgpack-dev\n## 3. Then install the python dependencies\n    apt-get install openssl #One might want to install this package before python\n    pip install --upgrade pip # Probably not necessary\n    pip2 install -upgrade pip # \n    pip2 install greenlet\n    pip2 install gevent\n    pip2 install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget -O https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## 3. Using ZeroNet as a Tor Hidden Service on ZeroNet\n\nOne of the main reason to install ZeroNet on an android Linux environment that doesn't require root is so for proper Tor integration. For TermMux to work as intended with Tor ZeroNet must be able to read the authentication cookie of the Tor Hidden Service. However, because android sandboxes applications from each other. Also even if you install ZeroNet somewhere were both the Tor Ap and Zero Net Ap have read premissions, without one can not add ZeroNet to group Tor.\n\nWhen both Tor and ZeroNet are installed in Termux both applicaitons will have the same user id and therefore this premission issue doesn't exist. To install Tor in termux type\n    apt-get install tor\nmake sure nano is installed:\n    dpkg -l | grep nano\nand if it is not installed then install it by typing\napt-get install nano\n\nNow edit the torrc file as follows:\n    nano $PREFIX/etc/tor/torrc\nUncomment the line which says \"SOCKSPort 9050\", this is done be deleting the pound sign at the beginning of the line (around line 19, the line number can be shown by pressing cntrl-c)\n\nUncomment the line that says \"ControlPort 9051\" (around line 57) and finally uncomment the line that says \"CookieAuthentication 1\". Press cntrl-o and then enter to save the file. Then press cntrl-x to exit nano. Type\n    tor\nto start tor. Now unless you commented out the line that says \"RunAsDaemon 1\" you will have to open a new window on termux. To do this swipe from left to right on the left edge of the window. The advantage of not running tor as a deamon is that the shell output from the tor process can help people troubleshoot issues with tor.  Now one can start ZeroNet in the same way as discussed above. \n\n## Other Tor Options\nOn the latest version of TerMux there is a setting in the configuration menu to connect to trackers via a proxy. This will help hide the fact that one is using ZeroNet and will have minimal impact on the speed at which ZeroNet Runs. One of the options is to specify tor but if this doesn't work then select custom and put in the following ip address:\n    127.0.0.1:9050\nand this will also proxy connections to trackers via Tor.  One can also select from the ZeroNet web interface EnableTor for every connection but this seems to mess with the browsers proxy settings. If one is using either the android firefox or tor browser then the proxy settings can be changed back in about:config. For zeronet to work properly with the browser localhost should be excluded from the proxy unless one wants to connect to zeronet using a remote onion address. If a browser doesn't support excluding local host from the proxy, one could use privoxy as the proxy instead of using tor directly. Privoxy can be installed in termux. Note that not all browsers support onion addresses because the browser might assume that the onion address doesn't exist if the dns address lookup fails. However, such a browser is leaking dns info. A browser with a properly functioning socks 5 or socks 4a proxy will let the proxy handle the dns lookup rather then using the operating system to fetch the DNS address.\n\n\n# Troubleshooting\n\n## No pip2 command\n\nOn termux python3 must be installed prior to installing python2. Python 3 is installed in termux as follows:\n    apt-get install python\nIf python2 is installed first then certain libriers for checksums will not exist, and python2 will improperly install. This can be fixed as follows:\n    apt-get install --reinstall python2\n    apt-get install --reinstall python2-dev\n",
			"date_added": 1537610192464,
			"slug": "termux"
		},
		{
			"id": "1a71b960-be4d-11e8-9fb3-2935049de72d",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nHowever, for what we are doing from the above list we probably only require clang, libllvm\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  1. Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n\n    apt-get install python # The python 3 package may not be required.\n    apt-get install python2\n    apt-get install python2-dev\n\n## 2. Install the non python dependencies for termux\n    apt-get install libcrypt-dev # Required for gevent\n   # apt-get install libcrypt #Installed due to being a dependency of libcrypt-dev\n    apt-get install libgcrypt #Might already be installed as a dependency of GnuPG\n    apt-get install libmsgpack # Maybe not necessary\n    apt-get install libmsgpack-dev\n## 3. Then install the python dependencies\n    apt-get install openssl #One might want to install this package before python\n    pip install --upgrade pip # Probably not necessary\n    pip2 install -upgrade pip # \n    pip2 install greenlet\n    pip2 install gevent\n    pip2 install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget -O https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## 3. Using ZeroNet as a Tor Hidden Service on ZeroNet\n\nOne of the main reason to install ZeroNet on an android Linux environment that doesn't require root is so for proper Tor integration. For TermMux to work as intended with Tor ZeroNet must be able to read the authentication cookie of the Tor Hidden Service. However, because android sandboxes applications from each other. Also even if you install ZeroNet somewhere were both the Tor Ap and Zero Net Ap have read premissions, without one can not add ZeroNet to group Tor.\n\nWhen both Tor and ZeroNet are installed in Termux both applicaitons will have the same user id and therefore this premission issue doesn't exist. To install Tor in termux type\n    apt-get install tor\nmake sure nano is installed:\n    dpkg -l | grep nano\nand if it is not installed then install it by typing\napt-get install nano\n\nNow edit the torrc file as follows:\n    nano $PREFIX/etc/tor/torrc\nUncomment the line which says \"SOCKSPort 9050\", this is done be deleting the pound sign at the beginning of the line (around line 19, the line number can be shown by pressing cntrl-c)\n\nUncomment the line that says \"ControlPort 9051\" (around line 57) and finally uncomment the line that says \"CookieAuthentication 1\". Press cntrl-o and then enter to save the file. Then press cntrl-x to exit nano. Type\n    tor\nto start tor. Now unless you commented out the line that says \"RunAsDaemon 1\" you will have to open a new window on termux. To do this swipe from left to right on the left edge of the window. The advantage of not running tor as a deamon is that the shell output from the tor process can help people troubleshoot issues with tor.  Now one can start ZeroNet in the same way as discussed above. \n\n## Other Tor Options\nOn the latest version of TerMux there is a setting in the configuration menu to connect to trackers via a proxy. This will help hide the fact that one is using ZeroNet and will have minimal impact on the speed at which ZeroNet Runs. One of the options is to specify tor but if this doesn't work then select custom and put in the following ip address:\n    127.0.0.1:9050\nand this will also proxy connections to trackers via Tor.  One can also select from the ZeroNet web interface EnableTor for every connection but this seems to mess with the browsers proxy settings. If one is using either the android firefox or tor browser then the proxy settings can be changed back in about:config. For zeronet to work properly with the browser localhost should be excluded from the proxy unless one wants to connect to zeronet using a remote onion address. If a browser doesn't support excluding local host from the proxy, one could use privoxy as the proxy instead of using tor directly. Privoxy can be installed in termux. Note that not all browsers support onion addresses because the browser might assume that the onion address doesn't exist if the dns address lookup fails. However, such a browser is leaking dns info. A browser with a properly functioning socks 5 or socks 4a proxy will let the proxy handle the dns lookup rather then using the operating system to fetch the DNS address.\n\n\n# Troubleshooting\n\n## No pip2 command\n\nOn termux python3 must be installed prior to installing python2. Python 3 is installed in termux as follows:\n    apt-get install python\nIf python2 is installed first then certain libriers for checksums will not exist, and python2 will improperly install. This can be fixed as follows:\n    apt-get install --reinstall python2\n    apt-get install --reinstall python2-dev\n",
			"date_added": 1537609900022,
			"slug": "zerowikisandbox"
		},
		{
			"id": "e0211c40-be44-11e8-9fb3-2935049de72d",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nHowever, for what we are doing from the above list we probably only require clang, libllvm\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  1. Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n\n    apt-get install python # The python 3 package may not be required.\n    apt-get install python2\n    apt-get install python2-dev\n\n## 2. Install the non python dependencies for termux\n    apt-get install libcrypt-dev # Required for gevent\n   # apt-get install libcrypt #Installed due to being a dependency of libcrypt-dev\n    apt-get install libgcrypt #Might already be installed as a dependency of GnuPG\n## 3. Then install the python dependencies\n    apt-get install openssl #One might want to install this package before python\n    pip install --upgrade pip # Probably not necessary\n    pip2 install -upgrade pip # \n    pip2 install greenlet\n    pip2 install gevent\n    pip2 install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-v0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## 3. Using ZeroNet with Tor on TermMux\n\n# Troubleshooting\n\n## No pip2 command\n\nOn termux python3 must be installed prior to installing python2. Python 3 is installed in termux as follows:\n    apt-get install python\nIf python2 is installed first then certain libriers for checksums will not exist, and python2 will improperly install. This can be fixed as follows:\n    apt-get install --reinstall python2\n    apt-get install --reinstall python2-dev\n",
			"date_added": 1537606366214,
			"slug": "zerowikisandbox"
		},
		{
			"id": "ade46ce0-be36-11e8-9fb3-2935049de72d",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  1. Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n    apt-get install python2\n    apt-get install python2-dev\n\n## 2. Install the dependencies for termux\n\n    pip install gevent\n    pip install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-v0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## 3. Using ZeroNet with Tor on TermMux",
			"date_added": 1537600268974,
			"slug": "zerowikisandbox"
		},
		{
			"id": "848d3c00-be36-11e8-9fb3-2935049de72d",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n    /data/data/com.termux/files/usr/bin/sh\n    /data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n    $ echo $PREFIX\n    /data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n    echo $LD_PRELOAD\n    /data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n    apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n    # Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n    apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n    pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\n    coreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\n    sed silversearcher-ag tar wget pkg-config\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n    apt-get upgrade\n    apt-get install python2\n    apt-get install python2-dev\n\n##Install the dependencies for termux\n\n    pip install gevent\n    pip install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-v0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## Using ZeroNet with Tor on TermMux",
			"date_added": 1537600199616,
			"slug": "zerowikisandbox"
		},
		{
			"id": "3d6327e0-be36-11e8-9fb3-2935049de72d",
			"body": "# Introduction\nTermux is an android terminal emulator that is also a miniature version of linux that runs within the android operating system. It does not require root and coexists with the native android system because it is a prefixed system. Since it is a prefixed system. As a prefixed system the shell interpreters life in non standard places. For instance the paths for sh and bash are\n```/data/data/com.termux/files/usr/bin/sh\n/data/data/com.termux/files/usr/bin/bash\n\none can print the prefix as follows:\n```$ echo $PREFIX\n/data/data/com.termux/files/usr/\n\nOne however, can run scripts without changing the script provided they don't change the variable LD_PRELOAD\n```echo $LD_PRELOAD\n/data/data/com.termux/files/usr/lib/libtermux-exec.so\n\nThe library libtermux-exec.so  (AKA [Termux-exec](https://wiki.termux.com/wiki/Termux-exec)) allows scripts to be run without changing the shebang from the standard location. However, sometimes this environment variable must be unset. One such case is if one wants to run a version of linux (e.g. [debian](https://wiki.termux.com/wiki/Debian) ) in a proot environment, which can be done under termux. The [proot](https://wiki.termux.com/wiki/PRoot) method of running linux distributions in android is used by several android apps such as [GNURoot](https://play.google.com/store/apps/details?id=champion.gnuroot) and [Debian noroot](https://play.google.com/store/apps/details?id=com.cuntubuntu). When LD_PRELOAD is unset then the scripts will only run if the shebang is fixed, which can be done by the [fix-she-bang](https://wiki.termux.com/wiki/Termux-fix-shebang) or alternatively if one had root permissions they might be able to install the interpreters in the standard places that they would be in a linux system. One way that one might accomplish the latter approach is with the android busybox ap. \n\n# More Than just a Terminal Emulator\nWhile termux is a terminal emulator it is powerful enough to run GUI applications. One can either use a VNC server (e.g. [tigerVNC](https://github.com/termux/x11-packages/tree/master/packages/tigervnc) or [tightVNC](https://packages.debian.org/source/stretch/tightvnc). Alternatively one can run an XServer such as [XServer XSDL](https://play.google.com/store/apps/details?id=x.org.server). One can either do this in native Termux or with in a full linux distribution run in a proot environment with termux. It is worth trying both approaches for running GUI applications in case one has difficulty getting one of the methods to work. \n\nInstructions for installing X11 packages on native termux can be found both on the [termux-wiki](https://wiki.termux.com/wiki/Package_Management#By_xeffyr:) and also on the [xeffry github repo](https://github.com/xeffyr/termux-extra-packages). The steps are as follows:\n\n## 1. Add the repository\n\n* 1. Get PGP key for this repository. You may need to install 'dirmngr' package.\n\n```apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0\n\n* 2. Add this to your sources.list:\n\n```# Xeffyr's Extra packages\ndeb https://termux.xeffyr.ml extra main\n\n* Then do apt update to update package lists.\n\n## 2. Install the desired X11 application\n\ne.g.\n```apt-get instal tigervnc\n\n# Installing ZeroNet on Termux\n\n## Prerequisits\nTermux is designed to be a rather minimal version of linux out of the box so that it acts mostly like a terminal emulator but one can quite esiely beef it up into a more complete version of Linux. The package managment section of the termux wiki recommends the following as [a starting point if one wants to compile packages on termux](https://wiki.termux.com/wiki/Package_Management#Compiling_packages_on_device):\n\n```pkg upgrade && pkg install autoconf automake bison bzip2 clang cmake \\\ncoreutils diffutils flex gawk git grep gzip libtool make patch perl  \\\nsed silversearcher-ag tar wget pkg-config\n\nZeronet is based on python2. PIP will be required for some of the dependencies and furthermore pip will have to compile some native libraries to meet the necessary dependencies for termux at least some of the apove packages will be required to install ZeroNet in termux and if one has a reasonably modern device then the above list of packages won't take up too much space on the device. Some packages are likely not necessary (e.g. perl) but since perl is very common in linux it is still recommended. \n\nOne should also go through the package management section of the termux wiki and add any repository that they think will be helpful to them. The necessary repositories to install termux will be in one of these repositors. The root-packages repository is not required because roor premission is not necessary to install Zeronet.\n\n**Note that as an alternative to install ZeroNet in native termux one could install it in one of the proot distributions for termux. In which case one should refer to the the specific instructions for the chosen linux distribution.\n\n# Installing Termux\n##  Install Python2\nAssuming that one has the necessary repositories installed one can proceed to installing termux.\nFirst install python2\n```apt-get upgrade\napt-get install python2\napt-get install python2-dev\n\n##Install the dependencies for termux\n\npip install gevent\npip install msgpack-python\n\n**Note that pip is included with python in termux. pip2 is the package manager for python2 in termux and pip is the package manager for python3 in termux. In termux the python3 package is simply called python.\n\n## Download the Termux Source Code and Run Termux\n\nZeroNet is written in python and since python is an intepreted language it happens to be very portable from one operating system and or architecture to another but some of the packages use native binaries such as gevent and msgpack-python. Therefore, one can use the sourcecode without having to build very much of the software from source and the parts that are built from source can be built using the python package manager (AKA pip), rember that in termux pip2 refers to the package manager for python2. Sometimes termux is bundled with the binaries and this makes it so that termux can be installed at any place in the linux file system without worying about dependencies but there is no such bundle from the ZeroNet Website. \n\nThe latest source can be found at github. For a linux version of termux it is recommended that one download the tar.gz versions since the .zip versions my use windows instead of linux line endings and this could mess with the interpreter, unless the line endings were fixed with the dos2unix command. At the time of writing this the latest version of ZeroNet could be downloaded with the command:\n\n    wget https://github.com/HelloZeroNet/ZeroNet/archive/v0.6.2.tar.gz\n    tar xvf v0.6.2.tar.gz -f ZeroNet-v0.6.2\n    cd ZeroNet-v0.6.2\n    python2 zeronet.py\n\n## Using ZeroNet with Tor on TermMux",
			"date_added": 1537600080222,
			"slug": "zerowikisandbox"
		}
	]
}