{
    "article": [
        {
            "title": "XNU",
            "text": "{{Use mdy dates|date=October 2013}}\n{{Infobox OS\n| name                   = XNU kernel\n| logo                   = <!-- filename only (no wikilink, no Image:/File:) -->\n| logo caption           = \n| logo size              = \n| logo alt               = \n| screenshot             = <!-- filename only (no wikilink, no Image:/File:) -->\n| caption                = \n| screenshot_size        = \n| screenshot_alt         = \n| collapsible            = \n| version of             = <!-- For articles about releases of operating systems ONLY -->\n| developer              = [[Apple Inc.]]\n| family                 = [[Unix-like]], [[Unix]]\n| working state          = Current\n| source model           = [[Open-source software|Open-source]]\n| released               = {{Start date and age|1996|12}}\n| discontinued           = <!-- DON'T use this for articles about releases of operating systems -->\n| RTM date               = <!-- {{Start date and age|YYYY|MM|DD}} ONLY for articles about OS releases -->\n| GA date                = <!-- {{Start date and age|YYYY|MM|DD}} ONLY for articles about OS releases -->\n| latest release version = \n| latest release date    = <!-- {{Start date and age|YYYY|MM|DD}} -->\n| latest preview version = \n| latest preview date    = <!-- {{Start date and age|YYYY|MM|DD}} -->\n| marketing target       = \n| programmed in          = [[C (programming language)|C]], [[C++]]\n| language               = English, others\n| update model           = <!-- APT, etc. -->\n| package manager        = <!-- dpkg, rpm, etc. -->\n| supported platforms    = [[IA-32]], [[x86-64]], [[ARM architecture|ARM]]\n| kernel type            = [[Hybrid kernel|Hybrid]]\n| userland               = \n| ui                     = \n| license                = [[Apple Public Source License]] 2.0\n| preceded by            = \n| succeeded by           =\n| website                = {{URL|opensource.apple.com/source/xnu}}\n| support status         = <!-- For articles about releases of operating systems ONLY -->\n| other articles         = \n}}\n'''XNU''' is the computer [[operating system]] [[kernel (computer science)|kernel]] developed at [[Apple Inc.]] since December 1996 for use in the [[macOS]] operating system and released as [[free and open-source software]] as part of the [[Darwin (operating system)|Darwin]] operating system. It is also used as the kernel for the [[iOS]], [[tvOS]], and [[watchOS]] operating systems.  ''XNU'' is an abbreviation of ''X is Not [[Unix]]''.<ref>{{cite web |year=2005 |url=https://developer.apple.com/library/content/documentation/Porting/Conceptual/PortingUnix/glossary/glossary.html |title=Porting UNIX/Linux Applications to Mac OS X: Glossary |publisher=Apple Computer |accessdate=June 7, 2017}}</ref><!-- Please read the footnote before making changes to the last line. XNU is NOT a recursive abbreviation, and it does NOT stand for \"XNU is not Unix.\"-->\n\nOriginally developed by [[NeXT]] for the [[NeXTSTEP]] operating system, XNU was a [[hybrid kernel]] combining version 2.5 of the [[Mach kernel]] developed at [[Carnegie Mellon University]] with components from [[Berkeley Software Distribution#4.3BSD|4.3BSD]] and an [[Objective-C]] API for writing drivers called Driver Kit.{{citation needed|date=September 2014}}\n\nAfter Apple acquired NeXT, the Mach component was upgraded to [[OSFMK]] 7.3 from OSF,<ref name=\"wwdc-2000-session-106\">{{cite av media|url=https://www.youtube.com/watch?v=ggnFoDqzGMU|author=Jim Magee|title=WWDC 2000 Session 106 - Mac OS X: Kernel|minutes=14}}</ref> the BSD components were upgraded with code from the [[FreeBSD]] project, and the Driver Kit was replaced with a [[C++]] API for writing drivers called [[I/O Kit]].{{citation needed|date=September 2014}}\n\n[[File:XNU v2.svg|275px|thumb|right|The XNU Kernel]]\n==Kernel design==\nXNU is a [[hybrid kernel]], containing features of both [[monolithic kernel]]s and [[microkernel]]s, attempting to make the best use of both technologies, such as the [[message passing]] ability of microkernels enabling greater modularity and larger portions of the OS to benefit from [[memory protection]], and retaining the speed of monolithic kernels for some critical tasks.\n\nAs of 2007, XNU runs on [[ARM architecture|ARM]],<ref>[https://www.engadget.com/2007/07/01/iphone-processor-found-620mhz-arm/ iPhone processor found: 620MHz ARM CPU] (July 1, 2007) Retrieved January 6, 2008</ref> [[IA-32]], and [[x86-64]] processors, both one processor and [[symmetric multiprocessing]] (SMP) models. [[PowerPC]] support is removed as of version 10 (i.e., [[Mac OS X 10.6]]).\n\n===Mach===\nThe basis of the XNU kernel is a heavily modified (hybrid) [[OSFMK]] 7.3 kernel.<ref name=\"wwdc-2000-session-106\"/> As such, it is able to run the core of an operating system as separated processes, which allows a great flexibility (it could run several operating systems in parallel above the Mach core), but this often reduces performance because of time consuming kernel/user mode context switches and overhead stemming from mapping or copying messages between the address spaces of the kernel and that of the service daemons. With Mac OS X, the designers have attempted to streamline some tasks and thus [[BSD]] functionality was built into the core with Mach. The result is a heavily modified (hybrid) OSFMK 7.3 kernel, Apple licensed OSFMK 7.3, which is a microkernel,<ref>{{cite web|url=https://pdfs.semanticscholar.org/03ac/1296f530719497b49d7580b55a2d9b8353ab.pdf|title=A Trusted, Scalable, Real-Time Operating System Environment|author=Douglas M. Wells}}</ref> from the OSF. (OSFMK 7.3 includes applicable code from the University of Utah Mach 4 kernel and applicable code from the many Mach 3.0 variants that sprouted off from the original Carnegie Mellon University Mach 3.0 microkernel.)\n\n===BSD===\nThe [[Berkeley Software Distribution]] (BSD) part of the kernel provides the [[POSIX]] [[application programming interface]] (API, BSD system calls), the [[Unix]] process model atop Mach tasks, basic security policies, user and group ids, permissions, the [[protocol stack|networking protocols]], the [[virtual file system]] code (including a filesystem independent [[journaling file system|journaling]] layer), several local file systems such as [[Hierarchical File System|HFS]]/[[HFS+]], the [[Network File System]] (NFS) client and server, cryptographic framework, [[UNIX System V]] [[inter-process communication]] (IPC), audit subsystem, [[mandatory access control]], and some of the locking primitives.<ref>{{cite mailing list|url=http://lists.freebsd.org/pipermail/freebsd-advocacy/2008-August/003674.html|title=Re: freebsd-advocacy Digest, Vol 248, Issue 1|last=Watson|first=Robert|authorlink=Robert Watson (computer scientist)|mailinglist=freebsd-advocacy|date=August 2, 2008|accessdate=October 24, 2013}}</ref> The BSD code present in XNU came from the [[FreeBSD]] kernel. Although much of it has been significantly modified, code sharing still occurs between Apple and the FreeBSD Project.<ref>{{cite web|url=http://www.freebsd.org/news/status/report-2009-04-2009-09.html#Grand-Central-Dispatch---FreeBSD-port|title=FreeBSD Quarterly Status Report (Grand Central Dispatch - FreeBSD port)|date=April 2009|accessdate=October 24, 2013}}</ref>\n\n===K32/K64===\n\n{{Update|section|reason=Does not describe any changes since 10.6|date=December 2017}}\n\nXNU in [[Mac OS X Snow Leopard]], v10.6, ([[Darwin (operating system)|Darwin]] version 10) and later comes in two varieties, a [[32-bit]] version called ''K32'' and a [[64-bit computing|64-bit]] version called ''K64''.<ref>[https://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/5 Mac OS X 10.6 Snow Leopard: the Ars Technica review, page 5]</ref> K32 can run 64-bit applications in [[Userland (computing)|userland]].<ref>{{cite web|url=https://arstechnica.com/apple/2009/08/mac-os-x-10-6/5/|title=Mac OS X 10.6 Snow Leopard: the Ars Technica review|author=John Siracusa|date=August 31, 2009|website=[[Ars Technica]]|quote=Finally, this is worth repeating: please keep in mind that you do not need to run the 64-bit kernel in order to run 64-bit applications or install more than 4GB of RAM in your Mac. Applications run just fine in 64-bit mode on top of the 32-bit kernel, and even in earlier versions of Mac OS X it's been possible to install and take advantage of much more than 4GB of RAM.}}</ref> What was new in Mac OS X 10.6 was the ability to run XNU in 64-bit [[kernel space]]. K32 was the default kernel for 10.6 ''Server'' when used on all machines except [[Mac Pro]] and [[Xserve]] models from 2008 onwards<ref>[http://support.apple.com/kb/HT3770 Mac OS X Server v10.6: Macs that use the 64-bit kernel]</ref> and can run 64-bit applications.  K64 has several benefits compared to K32:<ref>[https://developer.apple.com/mac/library/releasenotes/MacOSX/WhatsNewInOSX/Articles/MacOSX10_6.html What's New in Mac OS X: Mac OS X v10.6]</ref>\n\n* Can manage more than 32&nbsp;GB RAM, as the memory map would consume a disproportionately large area of the 32-bit kernel space.\n* Cache buffer sizes can be larger than what the 32-bit kernel space allows, potentially increasing I/O performance.\n* Performance is increased when using high-performance networking devices or multiple [[graphics processing unit]]s (GPUs), as the kernel can map all of the devices in 64-bit space even if several have very large [[direct memory access]] (DMA) buffers.\nBooting while holding down ''6'' and ''4'' forces the machine to boot K64 on machines supporting 64-bit kernels.<ref>[http://support.apple.com/kb/HT3773 Mac OS X Server v10.6: Starting up with the 32-bit or 64-bit kernel]</ref> K64 will run 32-bit applications but it will not run 32-bit [[Loadable kernel module|kernel extensions]] (KEXTs) so these must be ported to K64 to be able to load.\n\n===I/O Kit===\n[[I/O Kit]] is the [[device driver]] framework, written in a subset of [[C++]] based on [[Embedded C++]].<ref>[http://osxbook.com/book/bonus/ancient/whatismacosx/arch_xnu.html I/O Kit uses a restricted subset of C++]</ref> Using its [[object-oriented programming|object-oriented]] design, features common to any class of driver are provided within the framework, helping device drivers be written in less time and code. The I/O Kit is multi-threaded, [[symmetric multiprocessing]] (SMP)-safe, and allows for hot-pluggable devices and automatic, dynamic device configuration.\n\nMany drivers can be written to run from [[user space]], which further enhances the stability of the system. If a user-space driver crashes, it will not crash the kernel. However, if a kernel-space driver crashes it will crash the kernel. Examples of kernel-space drivers include disk adapter and network adapter drivers, graphics drivers, drivers for Universal Serial Bus ([[USB]]) and [[FireWire]] [[Host controller interface (USB, Firewire)|host controllers]], and drivers for [[virtual machine]] software such as [[VirtualBox]], [[Parallels Desktop for Mac]], and [[VMware Fusion]].\n\n==Protecting shared resources==\nTo run safely on multiprocessor machines, access to shared resources (files, data structures etc.) must be serialized so that threads or processes do not attempt to modify the same resource at the same time. [[Atomic operations]], [[spinlock]]s, [[critical section]]s, [[mutual exclusion]]s (\"mutexes\"), and [[serializing tokens]] are all possible methods that can be used to prevent concurrent access. Like recent versions of [[Linux]] and [[FreeBSD]], XNU, as of Mac OS X 10.4 and Darwin 8.0, employs a fine-grained mutex model to achieve higher performance on [[Multiprocessing|multiprocessor]] systems.{{Citation needed|date=July 2008}}\n\n==See also==\n{{Portal|Free software}}\n\n* [[Kernel (operating system)]]\n* [[A/UX]]\n* [[mkLinux]]\n* [[OSF/1]]\n* [[Darwin (operating system)]]{{snd}} open source operating system released by Apple, Inc., with XNU as kernel\n* [[macOS]]{{snd}} operating system released by Apple, Inc., with XNU as kernel\n\n==References==\n* {{cite web|url=http://www.db.opengroup.org/ar/technologies/mk-dbleplus/white_paper.htm|title=MK++: A High Performance, High Assurance Microkernel|author=Keith Loepere}}\n{{Reflist|30em}}\n\n==External links==\n* [http://opensource.apple.com/source/xnu/ Apple Open Source Browser{{snd}} XNU]\n* [https://github.com/apple/darwin-xnu/ Official mirror of XNU at GitHub]\n* [http://osxbook.com/book/bonus/ancient/whatismacosx/arch_xnu.html XNU: The Kernel]{{snd}} an overview of the components of XNU, written by Amit Singh in December 2003\n* [http://www.derchris.eu/ccc/24C3/mp4/24c3-2303-en-inside_the_macosx_kernel-COMPATIBLE.mp4 Inside the Mac OS X Kernel]{{snd}} \"This talk intends to clear up the confusion by presenting details of the Mac OS X kernel\"\n{{Mobile operating systems}}\n{{macOS}}\n\n{{DEFAULTSORT:Xnu}}\n[[Category:Mach (kernel)]]\n[[Category:Monolithic kernels]]\n[[Category:MacOS]]\n[[Category:Software using the Apple Public Source License]]",
            "slug": "xnu",
            "date_updated": 1520462068675,
            "imported": "https://en.wikipedia.org/wiki/XNU"
        }
    ]
}