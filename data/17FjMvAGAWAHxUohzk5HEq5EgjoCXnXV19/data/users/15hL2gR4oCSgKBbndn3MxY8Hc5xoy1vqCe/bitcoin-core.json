{
    "article": [
        {
            "title": "Bitcoin Core",
            "text": "Bitcoin Core is a reference client of bitcoin. Initially, the software was published by Satoshi Nakamoto under the name Bitcoin, then Bitcoin-Qt and later renamed to Bitcoin Core.[1][not in citation given] It is also known as the Satoshi client. It is a full client used by bitcoin nodes that create the bitcoin network. Through the changes to Bitcoin Core, its developers make changes to the underlying bitcoin protocol. As of 2016, Bitcoin Core repositories are maintained by Wladimir J. van der Laan.\n\nThe MIT Digital Currency Initiative funds some of development of Bitcoin Core. The project also maintains the cryptography library libsecp256k1.\n\nFeatures\nIt includes a transaction verification engine and connects to the bitcoin network as a full node. Moreover, a wallet, which can be used to transfer funds, is included by default. The wallet allows for the sending and receiving of bitcoins. It does not facilitate the buying or selling of bitcoin. It allows users to generate QR codes to receive payment.\n\nThe software validates the entire blockchain, which includes all bitcoin transactions ever. This distributed ledger which has reached more than 110 gigabytes in size must be downloaded or synchronised before full participation of the client may occur. A command line-based daemon with a JSON-RPC interface, bitcoind, is bundled with Bitcoin Core. It provides access to testnet, a global testing environment that imitates the bitcoin main network or Mainnet. It uses an alternative blockchain where real bitcoin are not used and the blockchain cannot be adversely affected. Regtest or Regression Test Mode creates a private blockchain which is used as a local testing environment. bitcoin-cli is the third program included. It allows users to send RPC commands to bitcoind.\n\nCheckpoints have been hard coded into the client. These maintain data integrity by keeping a part of the block chain data in the source code where it is able to be compared to the blockchain when its downloading is complete.[9] A one megabyte block size limit was added in 2010 by Satoshi Nakamoto as a temporary anti-spam measure. This limited the maximum network capacity to about three transactions per second. Since then, some minor changes to the software have improved network capacity incrementally. A network alert system was included by Satoshi Nakamoto as a way of informing users of important news regarding bitcoin. In November 2016 it was retired. It had become obsolete as news on bitcoin is now widely disseminated. Miners are able to signal their decision on the incorporation of new features by voting.\n\nA powerful scripting language is used to define transactions. This Forth-like language is part of one of three distinct application programming interfaces. It can enable various transaction parameters. The script uses reverse Polish notation for validation. ScriptPubKey is used to \"lock\" transactions based on a set of future conditions. scriptSig is used to meet these conditions or \"unlock\" a transaction. Operations on the data are performed by various OP\\_Codes. Two stacks are used - main and alt. Looping is forbidden.\n\nDevelopment[edit]\nThe original creator of the bitcoin client has described their approach to the software's authorship as it being written first to prove to themselves that the concept of purely peer-to-peer electronic cash was valid and that a paper with solutions could be written. While the majority of peers on the network may use Bitcoin Core, the developers' influence on bitcoin is limited by the choice of which implementation people voluntarily decide to use. The lead developer is Wladimir J. van der Laan, who took over the role on 8 April 2014. Gavin Andresen was the former lead maintainer for the software client. Andresen left the role of lead developer for bitcoin to work on the strategic development of its technology.[15] He left because he didn't want to get involved with trivial decision-making.\n\nThe code was originally stored at Sourceforge before being available on GitHub. Because there is no formal structure, development is based around Bitcoin Improvement Proposals or BIPs, which are similar to Request for Comments. Public mailing lists are used to vet initial expressions of ideas. If enough support is displayed a BIP document is written. This is the standard for sharing ideas and gaining community feedback on improving bitcoin and was initiated by Amir Taaki in 2011.\n\nThe roadmap for the client includes data link layer solutions for scalability. Core developers view bitcoin as a settlement layer. Bitcoin Core is one of several full node client implementations that are actively deployed. Alternatives include Bitcoin XT, Bitcoin Classic and Bitcoin Unlimited. All are derived from Bitcoin Core and contain implementation of hard fork proposals. These software forks allow bitcoin miners to demonstrate their vote on the direction of bitcoin's development.\n\nExternal video\n Visualization of code changes during 2015\nCore developers prefer to gradually, not rapidly enlarge bitcoin's transaction handling capabilities. Core developers believe in the premise that barriers to running a full node should be kept low as possible so that the blockchain layer at the very lowest level remains highly decentralized.[18] Core has reputation for tending for being risk averse. This is demonstrated by the reluctance of Core developers to increase the network’s ability to process transactions.\n\nVersion history\nBitcoin 0.1 was released on 9 January 2009 by Satoshi Nakamoto with only Windows supported.[20] This was followed by some minor bug fixing versions. On 16 December 2009 Bitcoin 0.2 was released. It included a Linux version for the first time and made use of multi-core processors for mining. In version 0.3.2 Nakamoto included checkpoints as a safeguard. After the release of version 0.3.9 Satoshi Nakamoto left the project[20] and shortly after stopped communicating on online forums. By this time development of the software was being undertaken by a wide group of independent developers which is referred to as a community, many of whom had various ideas on how to improve bitcoin.[20]\n\nBetween 2011 and 2013 new versions of the software were released at Bitcoin.org. Developers wanted to differentiate themselves as creators of software rather than advocates for bitcoin and so now maintain bitcoincore.org for just the software.\n\nBitcoin-Qt version 0.5.0 was released on 1 November 2011. It introduced a front end that uses the Qt user interface toolkit. The software previously used Berkeley DB for database management. Developers switched to LevelDB in release 0.8 in order to reduce blockchain synchronization time. The update to this release resulted in a minor blockchain fork on the 11 March 2013. The fork was resolved shortly afterwards. Seeding nodes through IRC was discontinued in version 0.8.2. In this release transaction fees, also known as relay fees, were reduced from 50,000 satoshis to 10,000 satoshis. From version 0.9.0 the software was renamed to Bitcoin Core. Transaction fees were reduced again by a factor of ten as a means to encourage microtransactions. Although Bitcoin Core does not use OpenSSL for the operation of the network, the software did use OpenSSL for remote procedure calls. Version 0.9.1 was released to remove the network's vulnerability to the Heartbleed bug.\n\nRelease 0.10 was made public on 16 February 2015. It introduced a consensus library which gave programmers easy access to the rules governing consensus on the network. The developers have stated that for consensus on soft forks a super-majority of 95\\<tt> of hash power is required for agreement. In version 0.11.2 developers added a new feature which allowed transactions to be made unspendable until a specific time in the future.[28] Bitcoin Core 0.12.1 was released on April 15, 2016 and enabled multiple soft forks to occur concurrently. Around 100 contributors worked on Bitcoin Core 0.13.0 which was released on 23 August 2016. It introduced more than ten significant changes.\n\nIn July 2016, the CheckSequenceVerify soft fork activated.\n\nIn October 2016, Bitcoin Core’s 0.13.1 release featured a soft fork that included a scaling improvement aiming to optimize the bitcoin blocksize. 35 developers were engaged to deploy the patch which was originally finalised in April. This release featured Segregated Witness (SegWit) which aimed to place downward pressure on transaction fees as well as increase the maximum transaction capacity of the network.[34] Estimates place the total block size using SegWit at about 1.7 mb. The 0.13.1 release endured extensive testing and research leading to some delays in its release date. Segwit aims to prevent various forms of transaction malleability. Segwit cannot be activated until \\~95\\</tt> of miners using Bitcoin Core concurrently agree to its use.",
            "slug": "bitcoin-core",
            "date_updated": 1533693717574,
            "imported": "zerowiki://bitcoin-core"
        }
    ]
}