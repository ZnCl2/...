{
    "article": [
        {
            "title": "IPv6",
            "text": "{{Update|part=RFC 8200 and RFC 8201|date=July 2017}}\n{{Use dmy dates|date=September 2012}}\n{{IPstack}}\n'''Internet Protocol version 6''' ('''IPv6''') is the most recent version of the [[Internet Protocol]] (IP), the [[communications protocol]] that provides an identification and location system for computers on networks and routes traffic across the [[Internet]]. IPv6 was developed by the [[Internet Engineering Task Force]] (IETF) to deal with the long-anticipated problem of [[IPv4 address exhaustion]]. IPv6 is intended to replace [[IPv4]].<ref name=\"ipv6nz\">{{Cite web|url=http://www.ipv6.org.nz/ipv6-faqs/|title=FAQs|author=New Zealand IPv6 Task Force|accessdate=26 October 2015}}</ref>\n\nEvery device on the Internet is assigned a unique [[IP address]] for identification and location definition. With the rapid growth of the Internet after commercialization in the 1990s, it became evident that far more addresses would be needed to connect devices than the IPv4 address space had available. By 1998, the [[Internet Engineering Task Force]] (IETF) had formalized the successor protocol. IPv6 uses a [[128-bit]] address, theoretically allowing 2<sup>128</sup>, or approximately {{val|3.4|e=38}} addresses. The actual number is slightly smaller, as multiple ranges are reserved for special use or completely excluded from use. The total number of possible IPv6 addresses is more than {{val|7.9|e=28}} times as many as IPv4, which uses 32-bit addresses and provides approximately 4.3 billion addresses. The two protocols are not designed to be [[interoperable]], complicating the transition to IPv6. However, several [[IPv6 transition mechanisms]] have been devised to permit communication between IPv4 and IPv6 hosts.\n\nIPv6 provides other technical benefits in addition to a larger addressing space. In particular, it permits hierarchical address allocation methods that facilitate [[route aggregation]] across the Internet, and thus limit the expansion of [[routing table]]s. The use of multicast addressing is expanded and simplified, and provides additional optimization for the delivery of services. Device mobility, security, and configuration aspects have been considered in the design of the protocol.\n\nIPv6 addresses are represented as eight groups of four [[hexadecimal]] digits with the groups being separated by colons, for example 2001:0db8:0000:0042:0000:8a2e:0370:7334, but methods to abbreviate this full notation exist.\n\n{{toc level|3}}\n\n==Main features==\n[[File:Ipv6 address leading zeros.svg|thumb|300px|Decomposition of the [[IPv6 address]] representation into its binary form]]\nIPv6 is an [[Internet Layer]] protocol for [[Packet switching|packet-switched]] [[internetworking]] and provides end-to-end [[datagram]] transmission across multiple IP networks, closely adhering to the design principles developed in the previous version of the protocol, [[IPv4|Internet Protocol Version 4]] (IPv4). IPv6 was first formally described in [[Internet standard]] document {{IETF RFC|1883}}, published in December 1995.<ref name=rfc1883>{{Citation|rfc=1883|title=Internet Protocol, Version 6 (IPv6) Specification|authorlink=Steve Deering|author=S. Deering|author2=R. Hinden|publisher=[[Internet Engineering Task Force]] (IETF)|date=December 1995}}</ref>\nThat RFC was obsoleted and replaced by {{IETF RFC|2460}}, published in December 1998.<ref name=\"rfc2460\">{{Citation|title=Internet Protocol, Version 6 (IPv6) Specification|date=December 1998|author=S. Deering|author2=R. Hinden|authorlink=Steve Deering|publisher=[[Internet Engineering Task Force]] (IETF)|rfc=2460}} Obsoletes RFC 1883.</ref>\nIn July 2017 this specification was obsoleted and replaced by RFC 8200.<ref name=\"rfc8200\">{{Citation|title=Internet Protocol, Version 6 (IPv6) Specification|date=July 2017|author=S. Deering|author2=R. Hinden|authorlink=Steve Deering|publisher=[[Internet Engineering Task Force]] (IETF)|issn=2070-1721|rfc=8200}} Obsoletes RFC 2460.</ref>\n\nIn addition to offering more addresses, IPv6 also implements features not present in IPv4. It simplifies aspects of address assignment ([[IPv6 address#Stateless address autoconfiguration|stateless address autoconfiguration]]), network renumbering, and router announcements when changing network connectivity providers. It simplifies processing of packets in routers by placing the responsibility for packet fragmentation into the end points. The IPv6 [[subnetwork|subnet]] size is standardized by fixing the size of the host identifier portion of an address to 64 bits to facilitate an automatic mechanism for forming the host identifier from [[link layer]] addressing information ([[MAC address]]). [[Network security]] was a design requirement of the IPv6 architecture, and included the original specification of [[IPsec]].\n\nIPv6 does not specify interoperability features with IPv4, but essentially creates a parallel, independent network. Exchanging traffic between the two networks requires translator gateways employing one of several transition mechanisms, such as [[NAT64]], or a [[tunneling protocol]] like [[6to4]], [[6in4]], or [[Teredo tunneling|Teredo]].\n\n==Motivation and origin==\n\n===IPv4===\n[[Image:Ipv4 address.svg|right|300px|thumb|Decomposition of the quad-dotted [[IPv4 address]] representation to its binary value]]\n[[IPv4|Internet Protocol Version 4]] (IPv4) was the first publicly used version of the [[Internet Protocol]]. IPv4 was developed as a research project by the [[DARPA|Defense Advanced Research Projects Agency]] (DARPA), a [[United States Department of Defense]] [[government agency|agency]], before becoming the foundation for the [[Internet]] and the [[World Wide Web]]. It is currently described by [[IETF]] publication {{IETF RFC|791}} (September 1981), which replaced an earlier definition ({{IETF RFC|760}}, January 1980). IPv4 included an addressing system that used numerical identifiers consisting of 32 bits. These addresses are typically displayed in [[quad-dotted notation]] as decimal values of four octets, each in the range 0 to 255, or 8 bits per number. Thus, IPv4 provides an addressing capability of 2<sup>32</sup> or approximately 4.3 billion addresses. Address exhaustion was not initially a concern in IPv4 as this version was originally presumed to be a test of DARPA's networking concepts.<ref>{{cite video|title=Google IPv6 Conference 2008: What will the IPv6 Internet look like?|url=https://www.youtube.com/watch?v=mZo69JQoLb8|time=13:35}}</ref> During the first decade of operation of the Internet, it became apparent that methods had to be developed to conserve address space. In the early 1990s, even after the redesign of the addressing system using a [[Classless Inter-Domain Routing|classless network]] model, it became clear that this would not suffice to prevent [[IPv4 address exhaustion]], and that further changes to the Internet infrastructure were needed.<ref name=rfc1752>{{cite IETF |title= The Recommendation for the IP Next Generation Protocol|rfc=1752 |first=S.|last=Bradner|first2=A.|last2=Mankin|year=1995|month= January|publisher=[[Internet Engineering Task Force|IETF]]}}</ref>\n\nThe last unassigned top-level address blocks of 16 million IPv4 addresses were allocated in February 2011 by the [[Internet Assigned Numbers Authority]] (IANA) to the five [[Regional Internet registry|regional Internet registries]] (RIRs). However, each RIR still has available address pools and is expected to continue with standard address allocation policies until one /8 [[Classless Inter-Domain Routing]] (CIDR) block remains. After that, only blocks of 1024 addresses (/22) will be provided from the RIRs to a [[local Internet registry]] (LIR). As of September 2015, all of [[Asia-Pacific Network Information Centre]] (APNIC), the [[RIPE NCC|Réseaux IP Européens Network Coordination Centre]] (RIPE_NCC), [[Latin America and Caribbean Network Information Centre]] (LACNIC), and [[American Registry for Internet Numbers]] (ARIN) have reached this stage.<ref>{{cite web|last=Rashid|first=Fahmida|title=IPv4 Address Exhaustion Not Instant Cause for Concern with IPv6 in Wings|url=http://www.eweek.com/c/a/IT-Infrastructure/IPv4-Address-Exhaustion-Not-Instant-Cause-for-Concern-with-IPv6-in-Wings-287643/|publisher=eWeek|accessdate=23 June 2012}}</ref><ref>{{cite web|last=Ward|first=Mark|title=Europe hits old internet address limits|url=http://www.bbc.co.uk/news/technology-19600718|publisher=BBC|accessdate=15 September 2012}}</ref><ref>{{cite web|last=Huston|first=Geoff|title=IPV4 Address Report|url=http://www.potaroo.net/tools/ipv4/}}</ref> This leaves [[AFRINIC|African Network Information Center]] (AFRINIC) as the sole regional internet registry that is still using the normal protocol for distributing IPv4 addresses.\n\n===Working-group proposals===\nBy the beginning of 1992, several proposals appeared for an expanded Internet addressing system and by the end of 1992 the IETF announced a call for white papers.<ref>{{cite web|rfc=1550|title=IP: Next Generation (IPng) White Paper Solicitation|first=S.|last=Bradner|first2=A.|last2=Mankin|date=December 1993|url=http://tools.ietf.org/html/rfc1550}}</ref> In September 1993, the IETF created a temporary, ad-hoc ''IP Next Generation'' (IPng) area to deal specifically with such issues. The new area was led by [[Allison Mankin]] and [[Scott Bradner]], and had a directorate with 15 engineers from diverse backgrounds for direction-setting and preliminary document review:<ref name=rfc1752/><ref>{{cite web|url=http://grnlight.net/index.php/programming-articles/103-history-of-the-ipng-effort|publisher=Sun|title=History of the IPng Effort}}</ref> The working-group members were [[J. Allard]] (Microsoft), [[Steven M. Bellovin|Steve Bellovin]] (AT&T), Jim Bound (Digital Equipment Corporation), Ross Callon (Wellfleet), [[Brian Carpenter (Internet engineer)|Brian Carpenter]] (CERN), [[David D. Clark|Dave Clark]] (MIT), [[John Curran (businessman)|John Curran]] (NEARNET), [[Steve Deering]] (Xerox), Dino Farinacci (Cisco), Paul Francis (NTT), Eric Fleischmann (Boeing), Mark Knopper (Ameritech), Greg Minshall (Novell), Rob Ullmann (Lotus), and [[Lixia Zhang]] (Xerox).<ref>{{cite web|rfc=1752|title=The Recommendation for the IP Next Generation Protocol – Appendix B|url=http://tools.ietf.org/html/rfc1752#appendix-B}}</ref>\n\nThe Internet Engineering Task Force adopted the IPng model on 25 July 1994, with the formation of several IPng working groups.<ref name=rfc1752/> By 1996, a series of [[Request for comments|RFCs]] was released defining Internet Protocol version 6 (IPv6), starting with {{IETF RFC|1883}}. (Version 5 was used by the experimental [[Internet Stream Protocol]].)\n\nIt is widely expected that the Internet will use IPv4 alongside IPv6 for the foreseeable future. Direct communication between the IPv4 and IPv6 network protocols is not possible; therefore, intermediary trans-protocol systems are needed as a communication conduit between IPv4 and IPv6 whether on a single device or among [[Node (networking)|network nodes]].\n\n==Comparison with IPv4==\nOn the Internet, data is transmitted in the form of [[network packet]]s. IPv6 specifies a new [[IPv6 packet|packet format]], designed to minimize packet header processing by routers.<ref name=rfc2460/><ref name=rfc1726>{{cite web|rfc=1726|title=Technical Criteria for Choosing IP The Next Generation (IPng)|last=Partridge|first=C.|last2=Kastenholz|first2=F.|date=December 1994|url=http://www.ietf.org/rfc/rfc1726.txt}}</ref> Because the headers of IPv4 packets and IPv6 packets are significantly different, the two protocols are not interoperable. However, in most respects, IPv6 is an extension of IPv4. Most transport and application-layer protocols need little or no change to operate over IPv6; exceptions are application protocols that embed Internet-layer addresses, such as [[File Transfer Protocol]] (FTP) and [[Network Time Protocol]] (NTP), where the new address format may cause conflicts with existing protocol syntax.\n\n===Larger address space===\nThe main advantage of IPv6 over IPv4 is its larger address space. The length of an IPv6 address is 128 bits, compared with 32 bits in IPv4.<ref name=rfc2460/> The address space therefore has 2<sup>128</sup> or approximately {{val|3.4|e=38}} addresses.\n\nIn addition, the IPv4 address space is poorly allocated; in 2011, approximately 14% of all available addresses were utilized.<ref>{{cite web|url=http://news.cnet.com/8301-30685_3-20030482-264.html|title=Moving to IPv6: Now for the hard part (FAQ)|publisher=CNET News|work=Deep Tech|accessdate=3 February 2011}}</ref> While these numbers are large, it was not the intent of the designers of the IPv6 address space to assure geographical saturation{{clarify|date=September 2016}} with usable addresses. Rather, the longer addresses simplify allocation of addresses, enable efficient [[route aggregation]], and allow implementation of special addressing features. In IPv4, complex [[Classless Inter-Domain Routing]] (CIDR) methods were developed to make the best use of the small address space. The standard size of a subnet in IPv6 is 2<sup>64</sup> addresses, the square of the size of the entire IPv4 address space. Thus, actual address space utilization rates will be small in IPv6, but network management and routing efficiency are improved by the large subnet space and hierarchical route aggregation.\n\nRenumbering an existing network for a new connectivity provider with different routing prefixes is a major effort with IPv4.<ref>{{cite web|rfc=2071|title=Network Renumbering Overview: Why would I want it and what is it anyway?|first=P.|last=Ferguson|first2=H.|last2=Berkowitz|date=January 1997|url=http://tools.ietf.org/search/rfc2071}}</ref><ref>{{cite web|rfc=2072|title=Router Renumbering Guide|first=H.|last=Berkowitz|date=January 1997|url=http://tools.ietf.org/html/rfc2072}}</ref> With IPv6, however, changing the prefix announced by a few routers can in principle renumber an entire network, since the host identifiers (the least-significant 64 bits of an address) can be independently self-configured by a host.<ref name=rfc4862>{{cite web|rfc=4862|title=IPv6 Stateless Address Autoconfiguration|first=S.|last=Thomson|first2=T.|last2=Narten|first3=T.|last3=Jinmei|date=September 2007|url=http://tools.ietf.org/html/rfc4862}}</ref>\n\n===Multicasting===\n[[Multicast]]ing, the transmission of a packet to multiple destinations in a single send operation, is part of the base specification in IPv6. In IPv4 this is an optional although commonly implemented feature.<ref name=rfc1112>{{IETF RFC|1112}}, ''Host extensions for IP multicasting'', S. Deering (August 1989)</ref> IPv6 multicast addressing shares common features and protocols with IPv4 multicast, but also provides changes and improvements by eliminating the need for certain protocols. IPv6 does not implement traditional [[Broadcast IP address|IP broadcast]], i.e. the transmission of a packet to all hosts on the attached link using a special ''broadcast address'', and therefore does not define broadcast addresses. In IPv6, the same result can be achieved by sending a packet to the link-local ''all nodes'' multicast group at address ff02::1, which is analogous to IPv4 multicasting to address 224.0.0.1. IPv6 also provides for new multicast implementations, including embedding rendezvous point addresses in an IPv6 multicast group address, which simplifies the deployment of inter-domain solutions.<ref name=rfc3956>{{IETF RFC|3956}}, ''Embedding the Rendezvous Point (RP) Address in an IPv6 Multicast Address'', P. Savola, B. Haberman (November 2004)</ref>\n\nIn IPv4 it is very difficult for an organization to get even one globally routable multicast group assignment, and the implementation of inter-domain solutions is arcane.<ref>{{IETF RFC|2908}}, ''The Internet Multicast Address Allocation Architecture'', D. Thaler, M. Handley, D. Estrin (September 2000)</ref> Unicast address assignments by a [[local Internet registry]] for IPv6 have at least a 64-bit routing prefix, yielding the smallest subnet size available in IPv6 (also 64 bits). With such an assignment it is possible to embed the unicast address prefix into the IPv6 multicast address format, while still providing a 32-bit block, the least significant bits of the address, or approximately 4.2 billion multicast group identifiers. Thus each user of an IPv6 subnet automatically has available a set of globally routable source-specific multicast groups for multicast applications.<ref>{{IETF RFC|3306}}, ''Unicast-Prefix-based IPv6 Multicast Addresses'', B. Haberman, D. Thaler (August 2002)</ref>\n\n===Stateless address autoconfiguration (SLAAC)===\n{{See also|IPv6 address#Stateless address autoconfiguration|l1=IPv6 address § Stateless address autoconfiguration}}\n\nIPv6 hosts can configure themselves automatically when connected to an IPv6 network using the [[Neighbor Discovery Protocol]] via [[Internet Control Message Protocol version 6]] (ICMPv6) router discovery messages. When first connected to a network, a host sends a [[link-local address|link-local]] router solicitation multicast request for its configuration parameters; routers respond to such a request with a router advertisement packet that contains Internet Layer configuration parameters.<ref name=rfc4862/>\n\nIf IPv6 stateless address auto-configuration is unsuitable for an application, a network may use stateful configuration with the [[DHCPv6|Dynamic Host Configuration Protocol version 6]] (DHCPv6) or hosts may be configured manually using static methods.\n\nRouters present a special case of requirements for address configuration, as they often are sources of autoconfiguration information, such as router and prefix advertisements. Stateless configuration of routers can be achieved with a special router renumbering protocol.<ref name=rfc2894>{{IETF RFC|2894}}, ''Router Renumbering for IPv6'', M. Crawford, August 2000.</ref>\n\n===Network-layer security===\n[[IPsec|Internet Protocol Security (IPsec)]] was originally developed for IPv6, but found widespread deployment first in IPv4, for which it was re-engineered. IPsec was a mandatory specification of the base IPv6 protocol suite,<ref name=rfc2460/><ref name=rfc4301>{{IETF RFC|4301}}, \"IPv6 Node Requirements\", J. Loughney (April 2006)</ref> but has since been made optional.<ref name=rfc6434>{{IETF RFC|6434}}, \"IPv6 Node Requirements\", E. Jankiewicz, J. Loughney, T. Narten (December 2011)</ref>\n\n===Simplified processing by routers===\nIn IPv6, the packet header and the process of packet forwarding have been simplified. Although IPv6 packet headers are at least twice the size of IPv4 packet headers, packet processing by routers is generally more efficient, because less processing is required in routers due to the headers being aligned to match common [[Word (computer architecture)|word sizes]]<ref name=rfc2460/><ref name=rfc1726/>. Moreover, IPv6 doesn't implement a [[IPv4 header checksum|header checksum]], in contrast to IPv4. This furthers the [[end-to-end principle]] of Internet design, which envisioned that most processing in the network occurs in the leaf nodes. \n\nThe packet header in IPv6 is simpler than the IPv4 header. Many rarely used fields have been moved to optional header extensions.\n\nIPv6 routers do not perform [[IP fragmentation]]. IPv6 hosts are required to either perform [[path MTU discovery]], perform end-to-end fragmentation, or to send packets no larger than the default [[Maximum transmission unit]] (MTU), which is 1280 [[octet (computing)|octets]].\n\nThe IPv6 header is not protected by a [[checksum]]. Integrity protection is assumed to be assured by both the link layer or error detection and correction methods in higher-layer protocols, such as TCP and UDP. In IPv4, UDP may actually have a checksum of 0, indicating no checksum; IPv6 requires a checksum in UDP. Therefore, IPv6 routers do not need to recompute a checksum when header fields change, such as the [[time to live]] (TTL) or [[hop count]].\n\nThe ''TTL'' field of IPv4 has been renamed to ''Hop Limit'' in IPv6, reflecting the fact that routers are no longer expected to compute the time a packet has spent in a queue.\n\n===Mobility===\nUnlike mobile IPv4, [[mobile IPv6]] avoids [[triangular routing]] and is therefore as efficient as native IPv6. IPv6 routers may also allow entire subnets to move to a new router connection point without renumbering.<ref name=rfc3963>{{IETF RFC|3963}}, ''Network Mobility (NEMO) Basic Protocol Support'', V. Devarapalli, R. Wakikawa, A. Petrescu, P. Thubert (January 2005)</ref>\n\n===Options extensibility===\nThe IPv6 packet header has a minimum size of 40 octets. Options are implemented as extensions. This provides the opportunity to extend the protocol in the future without affecting the core packet structure.<ref name=rfc2460/> However, a study in 2015 indicated that there was still widespread dropping of IPv6 packets containing extension headers.<ref name=draft-ietf-v6ops-ipv6-ehs-in-real-world-01>{{cite web|work=draft-ietf-v6ops-ipv6-ehs-in-real-world-01|title=Observations on the Dropping of Packets with IPv6 Extension Headers in the Real World|first=F.|last=Gont|first2=J.|last2=Linkova|first3=T.|last3=Chown|first4=S.|last4=Liu|date=October 2015|url=https://tools.ietf.org/html/draft-ietf-v6ops-ipv6-ehs-in-real-world-01}}</ref>\n\n===Jumbograms===\nIPv4 limits packets to 65,535 (2<sup>16</sup>−1) octets of payload. An IPv6 node can optionally handle packets over this limit, referred to as [[jumbogram]]s, which can be as large as 4,294,967,295 (2<sup>32</sup>−1) octets. The use of jumbograms may improve performance over high-[[Maximum transmission unit|MTU]] links. The use of jumbograms is indicated by the Jumbo Payload Option header.<ref name=rfc2675>{{IETF RFC|2675}}, ''IPv6 Jumbograms'', D. Borman, [[Steve Deering|S. Deering]], R. Hinden (August 1999)</ref>\n\n===Privacy===\nLike IPv4, IPv6 supports globally unique [[IP address]]es by which the network activity of each device can potentially be tracked. The design of IPv6 intended to re-emphasize the end-to-end principle of network design that was originally conceived during the establishment of the early Internet. In this approach each device on the network has a unique address globally reachable directly from any other location on the Internet.\n\nNetwork prefix tracking is less of a concern if the user's ISP assigns a dynamic network prefix via DHCP.<ref>[ftp://ftp.cuhk.edu.hk/pub/doc/ipng/html/ipv6-address-privacy.html Statement on IPv6 Address Privacy], Steve Deering & Bob Hinden, Co-Chairs of the IETF's IP Next Generation Working Group, 6 November 1999.</ref><ref>{{cite web|url=http://www.spiegel.de/netzwelt/web/0,1518,729340,00.html|title=Neues Internet-Protokoll erschwert anonymes Surfen|publisher=Spiegel.de|accessdate=19 February 2012}}</ref> Privacy extensions do little to protect the user from tracking if the ISP assigns a static network prefix. In this scenario, the network prefix is the unique identifier for tracking and the interface identifier is secondary.\n\nIn IPv4 the effort to conserve address space with [[network address translation]] (NAT) obfuscates network address spaces, hosts, and topologies. In IPv6 when using address auto-configuration, the Interface Identifier ([[MAC address]]) of an interface port is used to make its public IP address unique, exposing the type of hardware used and providing a unique handle for a user's online activity.\n\nIt is not a requirement for IPv6 hosts to use address auto-configuration, however. Yet, even when an address is not based on the MAC address, the interface's address is globally unique, in contrast to NAT-masqueraded private networks. Privacy extensions for IPv6 have been defined to address these privacy concerns,<ref>{{cite IETF | RFC = 3041 | title = Privacy Extensions for Stateless Address Autoconfiguration in IPv6 | first1 = T | last1 = Marten | first2 = R | last2 = Draves | month = January | year = 2001 }}</ref> although [[Silvia Hagen]] describes these as being largely due to \"misunderstanding\".<ref>IPv6 Essentials by Silvia Hagen, p. 28, chapter 3.5.</ref> When privacy extensions are enabled, the operating system generates random host identifiers to combine with the assigned network prefix. These ephemeral addresses are used to communicate with remote hosts making it more difficult to track a single device.<ref>[http://www.elektronik-kompendium.de/sites/net/1601271.htm Privacy Extensions (IPv6)], Elektronik Kompendium.</ref>\n\nPrivacy extensions are enabled by default in Windows (since XP SP1), OS X (since 10.7), and iOS (since version 4.3).<ref>[http://support.microsoft.com/kb/817778 Overview of the Advanced Networking Pack for Windows XP], Revision: 8.14</ref><ref>[http://www.heise.de/netze/artikel/IPv6-Privacy-Extensions-einschalten-1204783.html IPv6: Privacy Extensions einschalten], Reiko Kaps, 13 April 2011</ref> Some Linux distributions have enabled privacy extensions as well.<ref>{{cite web|url=http://bugs.launchpad.net/ubuntu/+source/procps/+bug/176125/comments/61|title=Comment #61 : Bug #176125 : Bugs: \"procps\" package: Ubuntu|publisher=Bugs.launchpad.net|accessdate=19 February 2012}}</ref>\n\nIn addition to the temporary address assignments, interfaces also receive a stable address.<ref>{{cite IETF |title= A Method for Generating Semantically Opaque Interface Identifiers with IPv6 Stateless Address Autoconfiguration (SLAAC) |rfc=7217|year=2014 |month=April | first = F | last = Gont}}</ref> Interface Identifiers are generated such that they are stable for each subnet, but change as a host moves from one network to another. In this way it is difficult to track a host as it moves from network to network, but within a particular network it will always have the same address (unless the state used in generating the address is reset and the algorithm is run again) so that network access controls and auditing can potentially be configured.\n\nThe traditional method of generating interface identifiers in use for unique address assignments was based on MAC addressing. In favor of better privacy protection, this method has been deprecated in some operating systems with newly established methods of {{IETF RFC|7217}}.<ref>{{cite web | url =https://tools.ietf.org/html/draft-ietf-6man-default-iids-16 | title = Recommendation on Stable IPv6 Interface Identifiers | author = Fernando Gont |date=September 2016}}</ref>\n\nPrivacy extensions do not protect the user from other forms of tracking at other layers, e.g. Application Layer: [[tracking cookie]]s or [[browser fingerprinting]] and Link Layer: [[IMSI-catcher]] or [[iBeacon]]\n\n==Packet format==\n{{Main|IPv6 packet}}\n[[File:Ipv6 header.svg|thumb|IPv6 packet header]]\n\nAn IPv6 packet has two parts: a [[Header (computing)|header]] and [[Payload (computing)|payload]].\n\nThe header consists of a fixed portion with minimal functionality required for all packets and may be followed by optional extensions to implement special features.\n\nThe fixed header occupies the first 40&nbsp;[[octet (computing)|octets]] (320 bits) of the IPv6 packet. It contains the source and destination addresses, traffic classification options, a hop counter, and the type of the optional extension or payload which follows the header. This ''Next Header'' field tells the receiver how to interpret the data which follows the header. If the packet contains options, this field contains the option type of the next option. The \"Next Header\" field of the last option, points to the upper-layer protocol that is carried in the packet's [[payload (computing)|payload]].\n\nExtension headers carry options that are used for special treatment of a packet in the network, e.g., for routing, fragmentation, and for security using the [[IPsec]] framework.\n\nWithout special options, a payload must be less than {{gaps|64|KB}}. With a Jumbo Payload option (in a ''Hop-By-Hop Options'' extension header), the payload must be less than 4&nbsp;GB.\n\nUnlike with IPv4, routers never fragment a packet. Hosts are expected to use [[Path MTU Discovery]] to make their packets small enough to reach the destination without needing to be fragmented. See [[IPv6 Packet#Fragmentation|IPv6 packet fragmentation]].\n\n==Addressing==\n{{Main|IPv6 address}}\n\n[[IPv6 address]]es have 128 bits. The design of the IPv6 address space implements a very different design philosophy than in IPv4, in which subnetting was used to improve the efficiency of utilization of the small address space. In IPv6, the address space is deemed large enough for the foreseeable future, and a local area subnet always uses 64 bits for the host portion of the address, designated as the interface identifier, while the most-significant 64 bits are used as the routing prefix.<ref>{{IETF RFC|4291}}, p. 9</ref>\n\nThe identifier is only unique within the subnet to which a host is connected. IPv6 has a mechanism for automatic address detection,<ref name=\"rfc-editor.org\">{{IETF RFC|3315}}, R. Droms, J. Bound, B. Volz, T. Lemon, C. Perkins, and M. Carney, ''Dynamic Host Configuration Protocol for IPv6 (DHCPv6)'', July 2003 (Proposed Standard)</ref> so that address autoconfiguration always produces unique assignments.\n\n===Address representation===\nThe 128 bits of an IPv6 address are represented in 8 groups of 16 bits each. Each group is written as four hexadecimal digits (sometimes called [[hextet]]s<ref name=\"Graziani2012\">{{cite book |author-first=Rick |author-last=Graziani |title=IPv6 Fundamentals: A Straightforward Approach to Understanding IPv6 |date=2012 |publisher=[[Cisco Press]] |isbn=978-0-13-303347-2 |page=55 |url=https://books.google.com/books?id=FbYjJjZNA5gC&pg=PA55}}</ref><ref name=\"Coffeen2014\">{{cite book |author-first=Tom |author-last=Coffeen |title=IPv6 Address Planning: Designing an Address Plan for the Future |date=2014 |publisher=[[O'Reilly Media]] |isbn=978-1-4919-0326-1 |page=170 |url=https://books.google.com/books?id=dZU8BQAAQBAJ&pg=PT170}}</ref>) and the groups are separated by colons (:). An example of this representation is 2001:0db8:0000:0000:0000:ff00:0042:8329.\n\nFor convenience, an IPv6 address may be abbreviated to shorter notations by application of the following rules.\n* One or more [[leading zero]]es from any groups of hexadecimal digits are removed; this is usually done to either all or none of the leading zeroes. For example, the group ''0042'' is converted to ''42''.\n* Consecutive sections of zeroes are replaced with a double colon (::). The double colon may only be used once in an address, as multiple use would render the address indeterminate. {{IETF RFC|5952}} recommends that a double colon not be used to denote an omitted single section of zeroes.<ref name=rfc5952sec422>{{cite web|rfc=5952|title=A Recommendation for IPv6 Address Text Representation|author=S. Kawamura|date=August 2010|at=section 4.2.2|url=http://tools.ietf.org/html/rfc5952#section-4.2.2}}</ref>\n\nAn example of application of these rules:\n:Initial address: 2001:0db8:0000:0000:0000:ff00:0042:8329\n:After removing all leading zeroes in each group: 2001:db8:0:0:0:ff00:42:8329\n:After omitting consecutive sections of zeroes: 2001:db8::ff00:42:8329\n\nThe loopback address, 0000:0000:0000:0000:0000:0000:0000:0001, may be abbreviated to ::1 by using both rules.\n\nAs an IPv6 address may have more than one representation, the IETF has issued a [[IPv6 address#Recommended representation as text|proposed standard for representing them in text]].<ref name=rfc5952>{{cite web|rfc=5952|title=A Recommendation for IPv6 Address Text Representation|author=S. Kawamura|date=August 2010}}</ref>\n\n===Address uniqueness===\nHosts verify the uniqueness of addresses assigned by sending a neighbor solicitation message asking for the Link Layer address of the IP address. If any other host is using that address, it responds. However, MAC addresses are designed to be unique on each network card which minimizes chances of duplication.<ref name=\"T. Narten pp. 54\">{{cite journal|first=T.|last=Narten|title=Neighbor discovery and stateless autoconfiguration in IPv6|journal=IEEE Internet Computing|volume=3|issue=4|pages=54–62|date=August 1999|doi=10.1109/4236.780961}}</ref>\n\nThe host first determines if the network is connected to any routers at all, because if not, then all nodes are reachable using the link-local address that already is assigned to the host. The host will send out a Router Solicitation message to the all-routers<ref name=rfc4862sec551>{{cite web|rfc=4862|title=IPv6 Stateless Address Autoconfiguration|author=S. Thomson|date=September 2007|at=section 5.5.1|url=http://tools.ietf.org/html/rfc4862#section-5.5.1}}</ref><ref name=rfc4861sec637>{{cite web|rfc=4861|title=Neighbor Discovery for IP version 6 (IPv6)|author=T. Narten|date=September 2007|at=section 6.3.7|url=http://tools.ietf.org/html/rfc4861#section-6.3.7}}</ref> multicast group with its link-local address as source. If there is no answer after a predetermined number of attempts, the host concludes that no routers are connected. If it does get a response from a router, there will be network information inside that is needed to create a globally unique address. There are also two flag bits that tell the host whether it should use DHCP to get further information and addresses:\n* The Manage bit, that indicates whether or not the host should use DHCP to obtain additional addresses\n* The Other bit, that indicates whether or not the host should obtain other information through DHCP. The other information consists of one or more prefix information options for the subnets that the host is attached to, a lifetime for the prefix, and two flags:<ref name=\"T. Narten pp. 54\"/>\n** On-link: If this flag is set, the host will treat all addresses on the specific subnet as being on-link, and send packets directly to them instead of sending them to a router for the duration of the given lifetime.\n** Address: This is the flag that tells the host to actually create a global address.\n\n===Link-local address===\nAll interfaces of IPv6 hosts require a link-local address. A link-local address is derived from the MAC address of the interface and the prefix fe80::/10. The process involves filling the address space with prefix bits left-justified to the most-significant bit, and filling the MAC address in EUI-64 format into the least-significant bits. If any bits remain to be filled between the two parts, those are set to zero.<ref name=\"rfc-editor.org\"/>\n\nThe uniqueness of the address on the subnet is tested with the [[IPv6 address#Duplicate address detection|Duplicate Address Detection]] (DAD) method.<ref>{{cite web|author1=S. Thomson|author2=T. Narten|author3=T. Jinmei|title=IPv6 Stateless Address Autoconfiguration|rfc=4862|date=September 2007|url=https://tools.ietf.org/html/rfc4862}}</ref>\n\n===Global addressing===\nThe assignment procedure for global addresses is similar to local address construction. The prefix is supplied from router advertisements on the network. Multiple prefix announcements cause multiple addresses to be configured.<ref name=\"T. Narten pp. 54\"/>\n\nStateless address autoconfiguration (SLAAC) requires a /64 address block, as defined in {{IETF RFC|4291}}. [[Local Internet registries]] are assigned at least /32 blocks, which they divide among subordinate networks.<ref>{{cite web|title=IPv6 Address Allocation and Assignment Policy|publisher=RIPE NCC|date=8 February 2011|accessdate=27 March 2011|url=http://www.ripe.net/ripe/docs/ripe-512}}</ref> The initial recommendation stated assignment of a /48 subnet to end-consumer sites ({{IETF RFC|3177}}). This was replaced by {{IETF RFC|6177}}, which \"recommends giving home sites significantly more than a single /64, but does not recommend that every home site be given a /48 either\". /56s are specifically considered. It remains to be seen if ISPs will honor this recommendation. For example, during initial trials, [[Comcast]] customers were given a single /64 network.<ref>{{cite web|title=Comcast Activates First Users With IPv6 Native Dual Stack Over DOCSIS |website= Comcast.com |publisher=[[Comcast]] |date=31 January 2011|url=http://blog.comcast.com/2011/01/comcast-activates-first-users-with-ipv6-native-dual-stack-over-docsis.html}}</ref>\n\nIPv6 addresses are classified by three types of networking methodologies: [[unicast]] addresses identify each network interface, [[anycast]] addresses identify a group of interfaces, usually at different locations of which the nearest one is automatically selected, and [[multicast]] addresses are used to deliver one packet to many interfaces. The [[Broadcasting (computing)|broadcast]] method is not implemented in IPv6. Each IPv6 address has a scope, which specifies in which part of the network it is valid and unique. Some addresses are unique only on the local (sub-)network. Others are globally unique.\n\nSome IPv6 addresses are reserved for special purposes, such as [[loopback]], [[6to4]] tunneling, and [[Teredo tunneling]], as outlined in {{IETF RFC|5156}}. Also, some address ranges are considered special, such as link-local addresses for use on the local link only, Unique Local addresses (ULA), as described in {{IETF RFC|4193}}, and solicited-node multicast addresses used in the [[Neighbor Discovery Protocol]].\n\n==IPv6 in the Domain Name System==\nIn the [[Domain Name System]], [[hostname]]s are mapped to IPv6 addresses by AAAA resource records, so-called ''quad-A'' records. For [[Reverse DNS lookup|reverse resolution]], the IETF reserved the domain [[.arpa|ip6.arpa]], where the name space is hierarchically divided by the 1-digit [[hexadecimal]] representation of [[nibble]] units (4 bits) of the IPv6 address. This scheme is defined in {{IETF RFC|3596}}.\n\n<!-- [[A6 record]] redirects to this section. -->\nAt the design stage of the IPv6 DNS architecture, the AAAA scheme faced a rival proposal. This alternate approach, designed to facilitate network renumbering, uses ''A6'' records for the forward lookup and a number of other innovations such as ''bit-string labels'' and ''DNAME'' records. It is defined in {{IETF RFC|2874}} and its references (with further discussion of the pros and cons of both schemes in {{IETF RFC|3364}}), but has been deprecated to experimental status ({{IETF RFC|3363}}).\n\n==Transition mechanisms==\n{{Main|IPv6 transition mechanism}}\n\nIPv6 is not foreseen to supplant IPv4 instantaneously. Both protocols will continue to operate simultaneously for some time. Therefore, some [[IPv6 transition mechanisms]] are needed to enable IPv6 hosts to reach IPv4 services and to allow isolated IPv6 hosts and networks to reach each other over IPv4 infrastructure.<ref name=sixxs>{{cite web|url=http://www.sixxs.net/faq/connectivity/?faq=comparison|title=IPv6 Transition Mechanism / Tunneling Comparison|publisher=Sixxs.net|accessdate=20 January 2012}}</ref>\n\nMany of these transition mechanisms use tunneling to encapsulate IPv6 traffic within IPv4 networks. This is an imperfect solution, which reduces the [[maximum transmission unit]] (MTU) of a link and therefore complicates [[Path MTU Discovery]], and may increase [[latency (engineering)#Communication latency|latency]].<ref>{{cite web|rfc=6343|title=Advisory Guidelines for 6to4 Deployment|publisher=IETF|accessdate=2012-08-20}}</ref> [[Tunneling protocol]]s are a temporary solution for networks that do not support native dual-stack, where both IPv6 and IPv4 run independently.\n\n===Dual-stack IP implementation===\nDual-stack IP implementations provide complete IPv4 and IPv6 protocol stacks in the same network node on top of common physical layer implementation, such as [[Ethernet]]. This permits dual-stack hosts to participate in IPv6 and IPv4 networks simultaneously. The method is defined in {{IETF RFC|4213}}<ref>{{cite web|rfc=4213|title=Basic Transition Mechanisms for IPv6 Hosts and Routers|publisher=IETF|accessdate=2012-08-20}}</ref>.\n\nDual-stack configuration is the most desirable IPv6 implementation during the transition from IPv4 to IPv6, as it avoids the complexities of tunneling and security considerations, increased latency, management overhead, and a reduced [[Maximum transmission unit#Path MTU Discovery|path MTU]].<ref>{{cite web|url=http://www.networkworld.com/news/tech/2007/090507-tech-uodate.html|title=IPv6: Dual stack where you can; tunnel where you must|publisher=www.networkworld.com|date=5 September 2007|accessdate=27 November 2012}}</ref> However, it is not always possible when outdated network equipment may not support IPv6.\n\nDual-stack configurations, however, might introduce additional security issues as hosts could be subject to attacks from both IPv4 and IPv6 networks. It has been argued that the dual-stack architecture could ultimately overburden the global networking infrastructure by requiring routers to support IPv4 and IPv6 routing simultaneously.<ref name=\"computerworld.com\">{{cite web|author=Sun, Charles C.|url=http://www.computerworld.com/article/2488886/networking/stop-using-internet-protocol-version-4-.html|title=Stop using Internet Protocol Version 4!|work=Computerworld|date=1 May 2014}}<!-- Original ref: http://www.computerworld.com/s/article/9248043/Stop_using_Internet_Protocol_Version_4 --></ref>\n\nDual-stack implementation still requires an IPv4 address on every node, which is limited by [[IPv4 address exhaustion]], one of the main motivations for IPv6. To address this, [[IPv6 transition mechanism#Dual-Stack Lite (DS-Lite)|Dual-stack Lite]] (DS-Lite) was introduced, which uses [[network address translation]] and [[Tunneling protocol|tunneling]] to encapsulate IPv4 packets in IPv6 transport, then deliver them to their final destination.<ref name=\"citrix-blog\">{{Cite web |url=https://www.citrix.com/blogs/2012/03/22/ds-lite-%E2%80%93-ipv4-over-ipv6-and-nat/ |title=DS-Lite – IPv4 over IPv6 and NAT |date=2012-03-22}}</ref>\n\n===Tunneling===\nMany current Internet users do not have IPv6 dual-stack support, and thus cannot reach IPv6 sites directly. Instead, they must use IPv4 infrastructure to carry IPv6 packets. This is done using a technique known as ''[[tunneling protocol|tunneling]]'', which encapsulates IPv6 packets within IPv4, in effect using IPv4 as a link layer for IPv6.\n\nIP protocol 41 indicates IPv4 packets which encapsulate IPv6 datagrams. Some routers or network address translation devices may block protocol 41. To pass through these devices, UDP packets may be used to encapsulate IPv6 datagrams. Other encapsulation schemes, such as [[AYIYA]] or [[Generic Routing Encapsulation]], are also popular.\n\nConversely, on IPv6-only Internet links, when access to IPv4 network facilities is needed, tunneling of IPv4 over IPv6 protocol occurs, using the IPv6 as a link layer for IPv4.\n\n====Automatic tunneling====\n''Automatic tunneling'' refers to a technique by which the routing infrastructure automatically determines the tunnel endpoints. Some automatic tunneling techniques are below.\n\n[[6to4]] is recommended by {{IETF RFC|3056}}. It uses protocol 41 encapsulation.<ref name=rfc3056>{{IETF RFC|3056}}, ''Connection of IPv6 Domains via IPv4 Clouds'', B. Carpenter, February 2001.</ref> Tunnel endpoints are determined by using a well-known IPv4 anycast address on the remote side, and embedding IPv4 address information within IPv6 addresses on the local side. 6to4 is the most common tunnel protocol currently deployed.\n\n[[Teredo tunneling|Teredo]] is an automatic tunneling technique that uses UDP encapsulation and can allegedly cross multiple NAT nodes.<ref name=rfc4380>{{IETF RFC|4380}}, ''Teredo: Tunneling IPv6 over UDP through Network Address Translations (NATs)'', C. Huitema, Februari 2006</ref> IPv6, including 6to4 and Teredo tunneling, are enabled by default in [[Windows Vista]]<ref name=vista>{{cite web|url=http://msdn2.microsoft.com/en-us/library/aa480152.aspx|title=The Windows Vista Developer Story: Application Compatibility Cookbook|publisher=Msdn2.microsoft.com|date=24 April 2006|accessdate=20 January 2012}}</ref> and [[Windows 7]]. Most Unix systems implement only 6to4, but Teredo can be provided by third-party software such as [[Miredo]].\n\n[[ISATAP]] (Intra-Site Automatic Tunnel Addressing Protocol)<ref name=rfc5214>{{IETF RFC|5214}}, ''Intra-Site Automatic Tunnel Addressing Protocol (ISATAP)'', F. Templin, T. Gleeson, D. Thaler, March 2008.</ref> uses the IPv4 network as a virtual IPv6 local link, with mappings from each IPv4 address to a link-local IPv6 address. Unlike 6to4 and Teredo, which are ''inter-site'' tunneling mechanisms, ISATAP is an ''intra-site'' mechanism, meaning that it is designed to provide IPv6 connectivity between nodes within a single organization.\n\n====Configured and automated tunneling (6in4)====\n[[6in4]] tunneling requires the tunnel endpoints to be explicitly configured, either by an administrator manually or the operating system's configuration mechanisms, or by an automatic service known as a [[tunnel broker]];<ref name=rfc3053>{{IETF RFC|3053}}, ''IPv6 Tunnel Broker'', A. Durand, P. Fasano, I. Guardini, D. Lento (January 2001)</ref> this is also referred to as ''automated tunneling''. Configured tunneling is usually more deterministic and easier to debug than automatic tunneling, and is therefore recommended for large, well-administered networks. Automated tunneling provides a compromise between the ease of use of automatic tunneling and the deterministic behavior of configured tunneling.\n\nRaw encapsulation of IPv6 packets using [[Internet Protocol|IPv4]] protocol number 41 is recommended for configured tunneling; this is sometimes known as [[6in4]] tunneling. As with automatic tunneling, encapsulation within UDP may be used in order to cross NAT boxes and firewalls.\n\n===Proxying and translation for IPv6-only hosts===\nAfter the [[Regional Internet registry|regional Internet registries]] have exhausted their pools of available IPv4 addresses, it is likely that hosts newly added to the Internet might only have IPv6 connectivity. For these clients to have backward-compatible connectivity to existing IPv4-only resources, suitable [[IPv6 transition mechanisms]] must be deployed.\n\nOne form of address translation is the use of a dual-stack application-layer [[proxy server]], for example a web proxy.\n\nNAT-like techniques for application-agnostic translation at the lower layers in routers and gateways have been proposed. The NAT-PT standard was dropped because of criticisms;<ref name=rfc4966>{{IETF RFC|4966}}, ''Reasons to Move the Network Address Translator-Protocol Translator (NAT-PT) to Historic Status''</ref> however, more recently, the continued low adoption of IPv6 has prompted a new standardization effort of a technology called [[NAT64]].\n\n==IPv6 readiness==\nCompatibility with IPv6 networking is mainly a software or firmware issue. However, much of the older hardware that could in principle be upgraded is likely to be replaced instead. In 2010, the [[American Registry for Internet Numbers]] (ARIN) suggested that all Internet servers be prepared to serve IPv6-only clients by January 2012.<ref>{{Cite journal|url=https://www.networkworld.com/article/2242635/lan-wan/web-sites-must-support-ipv6-by-2012--expert-warns.html|title=Web sites must support IPv6 by 2012, expert warns|publisher=Network World|accessdate=30 September 2010|date=21 January 2010}}</ref>\n\n===Software===\nHost software may have only IPv4 or only IPv6 networking software, or it may support dual-stack, or hybrid dual-stack operation. The majority of personal computers running recent [[operating system]] versions support IPv6. Many popular applications with networking capabilities are compliant.\n\nSome software transitioning mechanisms are outlined in {{IETF RFC|4038}}, {{IETF RFC|3493}}, and {{IETF RFC|3542}}.\n\n====IPv4-mapped IPv6 addresses====\nHybrid dual-stack IPv6/IPv4 implementations recognize a special class of addresses, the IPv4-mapped IPv6 addresses. These addresses consist of an 80-bit prefix of zeros, the next 16 bits are ones, and the remaining, least-significant 32 bits contain the IPv4 address. These addresses are typically written with a 96-bit prefix in the standard IPv6 format, and the remaining 32 bits written in the customary [[dot-decimal notation]] of IPv4. For example, ::ffff:192.0.2.128 represents the IPv4 address 192.0.2.128. A deprecated format for IPv4-compatible IPv6 addresses is ::192.0.2.128.<ref>{{cite web|url=https://tools.ietf.org/html/rfc4291|rfc=4291|title=IP Version 6 Addressing Architecture|publisher=IETF|date=February 2006|accessdate=2017-11-28}}</ref>\n\nBecause of the significant internal differences between IPv4 and IPv6, some of the lower-level functionality available to programmers in the IPv6 stack does not work the same when used with IPv4-mapped addresses. Some common IPv6 stacks do not implement the IPv4-mapped address feature, either because the IPv6 and IPv4 stacks are separate implementations (e.g., [[Microsoft Windows]] 2000, XP, and Server 2003), or because of security concerns ([[OpenBSD]]).<ref name=openbsd-mapped-addr>{{man|4|inet6|OpenBSD}}</ref> On these operating systems, a program must open a separate socket for each IP protocol it uses. On some systems, e.g., the [[Linux kernel]], [[NetBSD]], and [[FreeBSD]], this feature is controlled by the socket option IPV6_V6ONLY, as specified in {{IETF RFC|3493}}.<ref>{{cite web|url=http://tools.ietf.org/html/rfc3493#page-22|rfc=3493|title=Basic Socket Interface Extensions for IPv6|publisher=IETF|page=22|date=February 2003|accessdate=2017-11-28}}</ref>\n\n===Hardware and embedded systems===\nThe [[CableLabs]] consortium published the 160 Mbit/s [[DOCSIS]] 3.0 IPv6-ready specification for [[cable modem]]s in August 2006. DOCSIS 2.0 was updated as ''DOCSIS 2.0 + IPv6'' to provide IPv6 support, which may be available with a firmware upgrade.<ref>{{cite web|url=http://www.cablemodem.com/specifications/specifications20.html |title=DOCSIS 2.0 Interface |publisher=Cablemodem.com |date=29 October 2007 |accessdate=31 August 2009 |deadurl=yes |archiveurl=https://web.archive.org/web/20090904062229/http://www.cablemodem.com/specifications/specifications20.html |archivedate=4 September 2009 |df=dmy-all }}</ref><ref>{{cite web|url=http://rmv6tf.org/2008-IPv6-Summit-Presentations/Dan%20Torbet%20-%20IPv6andCablev2.pdf |title=RMV6TF.org |format=PDF |accessdate=20 January 2012 |deadurl=yes |archiveurl=https://web.archive.org/web/20120105112751/http://rmv6tf.org/2008-IPv6-Summit-Presentations/Dan%20Torbet%20-%20IPv6andCablev2.pdf |archivedate=5 January 2012 }}</ref>\n\n===Shadow networks===\nThe addition of nodes having IPv6 enabled by default by the software manufacturer, may result in the inadvertent creation of ''shadow networks'', causing IPv6 traffic flowing into networks having only IPv4 security management in place. This may also occur with operating system upgrades, when the newer operating system enables IPv6 by default, while the older one did not. Failing to update the security infrastructure to accommodate IPv6 can lead to IPv6 traffic bypassing it.<ref>{{citation|title = Shadow Networks: an Unintended IPv6 Side Effect |url = http://www.networkcomputing.com/ipv6-tech-center/shadow-networks-an-unintended-ipv6-side/232800326|last = Mullins|first = Robert|date = April 5, 2012|accessdate = March 2, 2013}}</ref> Shadow networks have occurred on business networks in which enterprises are replacing [[Windows XP]] systems that do not have an IPv6 stack enabled by default, with [[Windows 7]] systems, that do.<ref>{{cite book|title = IPv6 For All: A Guide for IPv6 Usage and Application in Different Environments|url = http://www.ipv6forum.com/dl/books/ipv6forall.pdf|first1 = Guillermo|last1 = Cicileo|first2 = Roque|last2 = Gagliano|first3 = Christian|last3 = O’Flaherty|first4 = Mariela|last4 = Rocha|first5 = César Olvera|last5 = Morales|first6 = Jordi Palet|last6 = Martínez|first7 = Álvaro Vives|last7 = Martínez|display-authors = 3|page = 5|format = PDF|date = October 2009|accessdate = March 2, 2013}}</ref> Some IPv6 stack implementors have therefore recommended disabling IPv4 mapped addresses and instead using a dual-stack network where supporting both IPv4 and IPv6 is necessary.<ref>{{cite web | url = http://tools.ietf.org/html/draft-itojun-v6ops-v4mapped-harmful-02 | title = IPv4-Mapped Addresses on the Wire Considered Harmful | author = Jun-ichiro itojun Hagino |date=October 2003}}</ref>\n\n==Security==\nResearch has shown that the use of fragmentation can be leveraged to evade network security controls. As a result, {{IETF RFC|7112}} requires that the first fragment of an IPv6 packet contains the entire IPv6 header chain, such that some very pathological fragmentation cases are forbidden. Additionally, as a result of research on the evasion of RA-Guard in {{IETF RFC|7113}}, {{IETF RFC|6980}} has deprecated the use of fragmentation with Neighbor Discovery, and discouraged the use of fragmentation with Secure Neighbor Discovery (SEND).\n\n==Deployment==\n{{Main|IPv6 deployment}}\nThe 1993 introduction of [[Classless Inter-Domain Routing]] (CIDR) in the routing and IP address allocation for the Internet, and the extensive use of [[network address translation]] (NAT), delayed [[IPv4 address exhaustion]]. The final phase of exhaustion started on 3 February 2011.<ref name=\"IPv4 Address Report\">{{cite web|url=http://www.potaroo.net/tools/ipv4/|title=IPv4 Address Report|publisher=Potaroo.net|accessdate=20 January 2012}}</ref> However, despite a decade long development and implementation history as a Standards Track protocol, general worldwide deployment of IPv6 is increasing slowly. {{As of|September 2013}}, about 4% of domain names and 16.2% of the networks on the Internet had IPv6 protocol support.<ref name=hestat>{{cite web|title=Global IPv6 Deployment Progress Report|url=http://bgp.he.net/ipv6-progress-report.cgi|author=Mike Leber|publisher=Hurricane Electric|accessdate=19 October 2011|date=2 October 2010}}</ref>\n\nIPv6 has been implemented on all major operating systems in use in commercial, business, and home consumer environments. Since 2008, the [[domain name system]] can be used in IPv6. IPv6 was first used in a major world event during the [[2008 Summer Olympic Games]],<ref name=\"beijing2008-pressrelease\">{{cite press release|title=Beijing2008.cn leaps to next-generation Net |publisher=The Beijing Organizing Committee for the Games of the XXIX Olympiad |date=30 May 2008 |url=http://en.beijing2008.cn/news/official/preparation/n214384681.shtml |deadurl=yes |archiveurl=https://web.archive.org/web/20090204051327/http://en.beijing2008.cn/news/official/preparation/n214384681.shtml |archivedate=4 February 2009 |df=dmy-all }}</ref> the largest showcase of IPv6 technology since the inception of IPv6.<ref>{{cite web|url=http://ipv6.com/articles/general/IPv6-Olympics-2008.htm|title=IPv6 and the 2008 Beijing Olympics|accessdate =15 August 2008|last=Das|first=Kaushik|year=2008|work=IPv6.com|quote=As thousands of engineers, technologists have worked for a significant time to perfect this (IPv6) technology, there is no doubt, this technology brings considerable promises but this is for the first time that it will showcase its strength when in use for such a mega-event.}}</ref> Some governments including the [[Federal government of the United States]] and [[China]] have issued guidelines and requirements for IPv6 capability.\n\nIn 2009, Verizon mandated IPv6 operation, and reduced IPv4 to an optional capability, for [[LTE (telecommunication)|LTE]] cellular hardware.<ref name=\"verizon\">{{cite web|author=Derek Morr|title=Verizon Mandates IPv6 Support for Next-Gen Cell Phones|url=http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/|publisher=CircleID|date=9 June 2009}}</ref> {{As of|June 2012}}, T-Mobile USA also supports external IPv6 access.<ref name=\"t-mobile\">{{cite web|author=theipv6guy |title=T-Mobile USA Launches External IPv6 |url=http://support.t-mobile.com/thread/27171 |publisher=T-Mobile |date=31 July 2012 |deadurl=yes |archiveurl=https://web.archive.org/web/20131019144339/https://support.t-mobile.com/thread/27171 |archivedate=19 October 2013 |df=dmy-all }}</ref>\n\nAs of 2014, IPv4 still carried more than 99% of worldwide [[Internet traffic]].<ref>{{cite web|last1=van Beijnum|first1=Iljitsch|title=IPv6 adoption starting to add up to real numbers: 0.6 percent|url=https://arstechnica.com/business/2014/08/ipv6-adoption-starting-to-add-up-to-real-numbers-0-6-percent/|website=Ars Technica|accessdate=9 April 2015}}</ref><ref>{{cite web|author=David Frost|url=http://www.itwire.com/business-it-news/networking/46689-ipv6-traffic-volumes-going-backwards|title=Ipv6 traffic volumes going backwards|publisher=iTWire|date=20 April 2011|accessdate=19 February 2012}}</ref> The Internet exchange in Amsterdam and Seattle are the only large exchanges that publicly show IPv6 traffic statistics, which as of December 2017 are tracking at about 2.1% and 8.8%, growing at about 0.9% and 4.0% per year, respectively.<ref>{{Cite web|url=https://www.seattleix.net/statistics/|title=Traffic Graphs {{!}} www.seattleix.net|website=www.seattleix.net|language=en|access-date=2017-10-30}}</ref><ref>{{Cite web|title = Amsterdam Internet Exchange Ether Type|url = https://ams-ix.net/technical/statistics/sflow-stats/ether-type|website = ams-ix.net|accessdate = 2015-10-06}}</ref> {{As of|2017|December|31}}, the percentage of users reaching [[Google]] services with IPv6 reached 22.6% for the first time in regular measurements, growing at about 5.8% per year, although varying widely by region.<ref>{{cite web|title = IPv6|url = http://www.google.com/ipv6/statistics.html|work = Google Statistics|publisher = Google|accessdate = 27 April 2015}}</ref> {{As of|2017|12}} about 33% of Alexa Top 500 web servers support IPv6.<ref>{{cite web|url=http://6lab.cisco.com/stats/cible.php?country=world |title=6lab IPv6 website |publisher=6lab.cisco.com |date= |accessdate=2015-01-28}}</ref>\n\n==See also==\n{{portal|Internet}}\n* [[DHCPv6]]\n* [[China Next Generation Internet]]\n* [[Comparison of IPv6 support in operating systems]]\n* [[Comparison of IPv6 support in common applications]]\n* [[DoD IPv6 product certification]]\n* [[Happy Eyeballs]]\n* [[List of IPv6 tunnel brokers]]\n* [[University of New Hampshire InterOperability Laboratory]]\n\n==References==\n{{reflist|30em}}\n\n==External links==\n{{Wikiversity | IPv6}}\n* [http://www.haifux.org/lectures/187 IPv6 in the Linux Kernel ] by Rami Rosen.\n* [http://www.nro.net/news/ipv4-free-pool-depleted Free Pool of IPv4 Address Space Depleted]\n* [http://www.google.com/intl/en/ipv6/ An Introduction and Statistics about IPV6]\n\n{{IPv6}}\n\n{{Authority control}}\n\n[[Category:IPv6| ]]\n[[Category:Internet layer protocols]]\n[[Category:Internet Protocol]]\n[[Category:Network layer protocols]]\n[[Category:Computer-related introductions in 1996]]",
            "slug": "ipv6",
            "date_updated": 1518336751712,
            "imported": "https://en.wikipedia.org/wiki/IPv6"
        }
    ]
}