{
	"next_topic_id": 2,
	"topic": [
		{
			"topic_id": 1,
			"title": "Аспекты ZeroNet",
			"body": "Можно примерно представить, что делает Tor таким маргинальным, а i2pd - столь непопулярным (при том, что в обоих случаях разработчики делают довольно удобные продукты) - пользователи. Но в ZeroNet ситуация (мы рассматриваем непопулярность, в таком контексте сравнивать данные сети можно), на мой взгляд, иная.\n\nZeroNet привлекателен: вам не нужно думать о ддос, а хостинг на своих компьютерах дает вам свободу от многочисленных JS-баннеров и тяжелейших фронтендов - но у него есть и ряд очень весомых недостатков. Причем к недостаткам можно отнести и наличие deus ex движков (ZeroTalk, ZeroBlog и так далее).\n\nДа, для посетителя сайтов все это работает из коробки, но если вы решите заглянуть в овальную нору (а именно - в директорию ZeroBundle), начинаются чудеса: перед вами неожиданно вырастает порог, и вырастает этот порог настолько, что не запнуться о него довольно сложно. Но разработчики, на мой взгляд, предусмотрели не только высокий порог вхождения, нужно еще умудриться не стукнуться головой о предусмотренный ими низкий дверной проем. Как, например, можно было умудриться сделать в конфигах JSON такую кашу? И пресловутое клонирование представленных движков, на самом деле, морока, если вы не ограничиваетесь переименованием файлов, и начинаете что-то настраивать. А любовь к CoffeeScript напоминает мне историю о том, что разработчик Netsukuku пишет код на Vala.\n\nВ этом чувствуется современная эпоха, в которой разработчики во-первых, мыслят в первую очередь о том, как им связать имеющиеся у них разнородные модули, во-вторых, вам показывают один-два-три красивых переключателя (ВКЛ. ТОР/ВЫКЛ. ТОР), а все остальные вещи оказываются предельно неудобными.\n\nТехнологии BitTorrent: когда вы собираетесь скачать сайт в ZeroNet, вы никогда не знаете, как давно он был создан и как давно в последний раз модифицировался, что там, внутри - какая там структура директорий, и сколько там файлов, и какие это файлы, каких расширений, и даже сколько все это будет весить, -- вы абсолютно ничего этого не знаете. Имея все эти данные перед началом загрузки, вы внезапно можете хотя бы не тратить время на сайты-заглушки, если видите, что очередной обещанный поисковик представляет из себя один-единственный index.html, созданный когда-нибудь два года назад.\n\nСразу, с момента появления ZeroNet, стало понятно, что если владелец может модифицировать сайт, он может закачивать впоследствии на невинный с виду сайт абсолютно любую информацию. Это особенность сети, и с ней ничего не поделать. Но почему бы не сделать чек для сидов об измененных, появляющихся, а в ряде случаев - что тоже потенциально оказывается очень важным, - удаленных, файлах (и предусматривать возможность их фонового бэкапа)?\n\nСовершенно понятно, что ZeroNet - это изначально не анонимная сеть, зачем мне нужно лицезреть предупреждение о том, что я использую _небезопасный_ браузер? И зачем ZeroNet предупреждает об этом, когда он уже открыл браузер (и делает это по дефолту)? И почему я должен считать, что tor browser - это \"безопасный\" браузер?\n\nЕсли вы удаляете сайт ZeroNet, вы не удаляете его полностью. Информация о нем остается в sites.json и users.json. Поэтому, чтобы избавиться от сайта, нужно зайти в sites.json и users.json, и удалить оттуда информацию о сайте. И это становится еще сложнее, когда вы понимаете, что в sites.json и users.json записано много сайтов, все, которые вы вообще посещали. Это пример того, как неудобно все устроено под капотом. Как раз здесь, где мы ожидаем увидеть полную автономию и модульность - отдельные конфиги для отдельных сайтов, -- мы этой автономии не находим.\n\nУ вас есть приватный ключ от сайта и приватный ключ id. Одни вещи подписываются приватными ключами от сайта, другие - приватными ключами id. Это очень просто, но будь эта схема даже более сложной, все равно разработчики могли бы попытаться не превращать все это в кашу в конфигах.\n\nВ движках не все очевидно. В корне лежит конфиг content.json. В /data/users лежит конфиг, и называется он content.json. В ZeroBundle и сайты, и личные данные, все свалено в одну директорию. Все, кто не разработчик ZeroNet, идут гуглить, потому что хотят знать, какие файлы нужно перенести, чтобы перенести на другую машину свой id и свои сайты, не теряя при этом доступ и не унося с собой что-то излишнее. То есть тут ровно тот же подход, но в ином масштабе: простая и неочевидная директория, простые, неочевидные, повторяющиеся названия файлов, и какая-то внутренняя логика внутри файлов. Я знаю, разработчики не признаются, что у них есть ZeroAI, который играет немаловажную роль во всем этом.\n\nОткрывая ZeroDocs, я обнаруживаю, что передо мной ZeroNomicon. После прочтения данной книги все лишь еще больше погружается в туман (например, раздел про dbschema.json, в котором мы находим листинги трех примеров магических файлов dbschema.json, data.json и content.json, и указание, что происходит с ними при апотропических изменениях в магической директории data/users/*/data.json).\n\nЯ по всему вижу, что во всем проекте предпринята попытка стандартизации всего сущего (что хорошо), но не предпринято попытки объяснить происходящее (что плохо). Предлагается просто принять все это в качестве аксиом. Разработка не должна превращаться в самостоятельную религию. Религии - отдельно, разработка - отдельно.\n\nВыводы: слишком многое было сделано разработчиками для показательного фронтенда - ряда симпатично выглядящих (в которых мало кто решился менять не только облик, но и хоть что-то поменять технически) движков (один простейший движок без css и без динамического обновления страниц оказался бы более полезным), - а лучше было бы сосредоточиться на ZeroFrame.js, пользовательских конфигах и подробной документации.\n\nПОСЛЕСЛОВИЕ: Я понимаю, что вы и так поправите меня там, где я неточен. Уверен, что комментарии не сведутся к святой войне.",
			"added": 1555629137
		}
	],
	"topic_vote": {},
	"next_comment_id": 1,
	"comment": {},
	"comment_vote": {}
}