{
	"next_topic_id": 2,
	"topic": [
		{
			"topic_id": 1,
			"title": "Просто и быстро зашифровать/расшифровать/хэшировать данные",
			"body": "ZeroNet HASHER. Одним из интересных случаев является шифрование данных с использованием ключевой фразы.\n\nОтправитель секретных данных:\n\n- Нажмите AES Encrypt\n- Укажите любую парольную фразу и секретный текст ниже\n- Получите зашифрованные данные в результате\n- Отправьте секретные данные получателю\n- Используя другой канал связи, отправьте секретную фразу для расшифровки получателю, если у него её нет.\n\nКак получатель секретных данных:\n\n- Нажмите AES Decrypt\n- Укажите секретную фразу-пароль\n- Укажите зашифрованные секретные данные\n- Получите расшифрованные данные от отправителя в результате\n\nВы можете выполнять аналогичные действия, используя другие алгоритмы шифрования: DES, 3DES, Rabbit, RC4.\n\nВсе функции шифрования выполняются локально в вашем браузере и никуда не передаются.\nHASHER: http://127.0.0.1:43110/1FrvGG1JhEe7Y7zMzcTDP5ThMj49hpcLxL\n\nПоддерживаемые операции:\n\n- HEX to BYTE array\n- BYTE array to HEX\n- DEC to HEX\n- HEX to DEC\n- DEC to OCT\n- DEC to BIN\n- BIN to DEC\n- Hash SHA-1\n- Hash SHA-3\n- Hash SHA-224\n- Hash SHA-256\n- Hash SHA-384\n- Hash SHA-512\n- Hash MD5\n- Hash RIPEMD-160\n- Base64 Encode\n- Base64 Decode\n- Base58 Encode\n- Base58 Decode\n- AES Encrypt\n- AES Decrypt\n- DES Encrypt\n- DES Decrypt\n- 3DES Encrypt\n- 3DES Decrypt\n- Rabbit Encrypt\n- Rabbit Decrypt\n- RC4 Encrypt\n- RC4 Decrypt",
			"added": 1562849382
		}
	],
	"topic_vote": {
		"1_1BFQ7DxzahfiVbbxyJpeHXuPR8FAmVkrEy": 1,
		"9_1GooUE19488nDwG3TdkM8seYAHct4gjkq4": 1
	},
	"next_comment_id": 4,
	"comment": {
		"1_1C8aYoko2ccsGN96xqjCYvWV6jvMWbi7bF": [
			{
				"comment_id": 1,
				"body": "Как по мне vagrant  в разработке удобнее, наверное дело привычки",
				"added": 1522503528
			}
		],
		"1_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di": [
			{
				"comment_id": 2,
				"body": "да ничего не остановится, просто форк основного репа и погнали дальше",
				"added": 1562528290
			},
			{
				"comment_id": 3,
				"body": "> [if0](#comment_110_1HwxLJm2n3oKw7W9jaSAznUvAavLwZo35x): Сделать форк - дело не хитрое. А что потом? У кого хватит упорства его поддерживать, хотя бы для обеспечения совместимости, когда расхождения станут значительными? Я промолчу про новые фитчи, которые тоже могут оказаться в будущем несовместимыми.\n\nТут вы абсолютно правы! Вероятно упорства хватит лишь безумцам. \nНесколько месяцев разбираю код ZN, первая проблема, я не питонщик, благо нашлись альтернативные имплементации кода и это ускорило прогресс.\n\nПараллельно тестировал кандидат-технологии такие как IPFS, Webtorrent на внедрение.\n\nIPFS - несмотря на крутые фичи с дедупликацией контента, разных разностей, потребляет гигабайты на серверах и весь канал. Кстати в германии без предупреждения отключают сервера с ipfs (неожиданная неприятность). А всё потому - большая куча хлам контента в ipfs. Да можно выпустить свою приват сеть (кластер) чтобы не обслуживать сервером весь мусор, но это не то + разбивка на блоки не оптимальна, SSD ложатся, хех. Но сама идея с дедупликацией контента имеет смысл, может в будущем чтото изменится. Они ведь на основе lib2p.\n\nWebtorrent - порадовал фичами с онлайн видеостримами, мгновенным воспроизведением медиа контента, есть свои недостатки с трекерами и фиксированными файлами (некоторые могут быть решены тем же ipfs, хотя отдельный демон на трекер хех..).\n\nПодобраны 2 кандидата на реализацию/рефакторинг ядра:\n\n- Type Script (не торопитесь закидывать помидорами) это сторого типизированный язык, а значит не даст вам допускать простых ошибок в коде, и возможно подключить большее число разработчиков и созданных библиотек.\nЛучшая поддерджка webstorage > localforage и конечно простая обертка electron имеется.\nКомпиляция под nix, mac, win, android, ios вполне проста и имеет единую кодовую базу.\n\n- JAVA хорош, проверен и строг. Но почти никого на нём не учат писать объектно. И как известно обязательна JVM на устройтве. Хотя очень уж стабилен при прямом коде на любых ОС.\n\n- На плюсах уйдут годы, и тут соотвественно стоит выбирать компромисс между продуктивностью разработки до релиза.\n\n1. Необходимо продумать запасной вариант миграции контента в новые версии без танцев с бубном, для совместимости\n2. Балансировщик, т.е. если контент хранится на max N пирах, нет смысла заливать на все, если число пиров < N, тогда добавляем пиры, что частично избавит от дублирования данных. Конечно тут и кэширование потребуется как в браузере, на временный контент. Хотя под вопросом..\n3. Мотивация узлов сети. Без достаточной мотивации сеть не вырастить. Как вариант завязать на крипте.\n\nК сожалению всё перечеркивает факт - это работает через коммерческих провайдеров-каналы, которые контролируются властями (да можно шифровать, маскировать траффик но всё уже украдено до нас..), как бы мы не старались создавать лучшие децентрализованные сети и софт, пока не будет самоорганизованной глобальной MESH-сети, всё это игры в песочнице. Но мы продолжим делать то, что делаем и надеюсь найдётся оптимальное работающее решение.\n\nПо поводу выбора лучших 4х человек - делегатов по голосам, т.е. тем кому будут делегированы полномочия развития, поверьте это не работает.\n\nСпорить и доказывать ни скем не намерен, считайте размышлениями безумца.",
				"added": 1562542117
			}
		]
	},
	"comment_vote": {
		"110_1HwxLJm2n3oKw7W9jaSAznUvAavLwZo35x": 1,
		"13_14TFq8NmtKS3GG9briTFV874KdxJkVLhzB": 1
	}
}