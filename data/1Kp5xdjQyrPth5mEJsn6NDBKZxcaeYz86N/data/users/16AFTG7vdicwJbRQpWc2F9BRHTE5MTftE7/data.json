{
	"next_comment_id": 4,
	"comment": [
		{
			"comment_id": 1,
			"body": "looks like young reddit =) ",
			"post_id": 2,
			"date_added": 1455269171
		},
		{
			"comment_id": 2,
			"body": "> [ekaterina](#comment_4_1Mk5sVKeCrwMc3wSD11jM7DZTiqF5D9BaD): True, as long as the UI is actually enhanced for mobile. Running a ZeroNet server on a mobile (once that becomes a thing) might also drain the battery too much for some people. Mobiles are getting smaller and faster but the battery stays as crappy as it always was :)\ngateways is bad idea, perfect is - rewrite it in swift/c\n",
			"post_id": 2,
			"date_added": 1455274404
		},
		{
			"comment_id": 3,
			"body": "> [ekaterina](#comment_5_1Mk5sVKeCrwMc3wSD11jM7DZTiqF5D9BaD): Probably easier to write it in a cross platform language that compiles to Objective-C and Java so the core only has to be written once to support both iOS and Android natively. Otherwise it's just too much work for a small team, at that point you'd have to keep three separate implementations updated (Python, Swift, Java). Then you could even scrap the Python version and just use that cross platform language for Win/Mac/Linux/iOS/Android, all native.\n> Is Swift usable yet? When it was first released and Apple said it's so darn fast, I remember seeing a few companies write angry articles a month or two later saying Apple lied and it's multiple times slower than Objective-C (I think it was 5 to 15 times slower depending on what you're doing) so they had to scrap all their Swift work and go back to Objective-C because Swift was just way too slow for them (still a lot faster than interpreted languages of course).\ni don't sure that you can launch python app on ios =) ",
			"post_id": 2,
			"date_added": 1455280512
		}
	],
	"comment_vote": {},
	"topic_vote": {},
	"post_vote": {
		"6": 1,
		"10": 1
	}
}