

Dear author,

The 10th International Conference on Software Language Engineering (SLE
2017) program committee is sorry to inform you that your paper #18 was
rejected, and will not appear in the conference.

       Title: Pyash: One Language to Unite Them All
     Authors: Andrii (Logan) Zvorygin (LiberIT Liberty Information
              Technology Services)
  Paper site: https://sle17.hotcrp.com/paper/18?cap=018aVcDEyQs836k

19 papers were accepted and 5 conditionally accepted out of 57 submissions.

Reviews on your paper are appended to this email. The submissions site also
has the paper's reviews, as well as more information about review scores.

Contact sle2017-pc@inria.fr with any questions or concerns.

- SLE 2017 Submissions

===========================================================================
                           SLE 2017 Review #18A
---------------------------------------------------------------------------
             Paper #18: Pyash: One Language to Unite Them All
---------------------------------------------------------------------------

                      Overall merit: 1. Reject
                 Reviewer expertise: 3. Knowledgeable

                         ===== Paper summary =====

This paper proposes Pyash, a constructed language that aims to be usable as both
a programming and human language, and to be translatable to and from every
natural language. It describes a number of aspects of the design process,
including vocabulary and grammar selection, wire encoding, specific applications
envisaged, and the implementation history of the system.

                      ===== Comments for author =====

The paper has a noble goal of making programming more accessible to non-English
speakers than it presently is with most current languages. However, it seems to
overstate its claims somewhat.

The overall approach of mining existing natural languages for structure and
vocabulary to create a programming language that is easier to use for more
people is not inherently unreasonable, and would be interesting to address.
Programming in a spoken language has been a stretch goal for a number of design
projects over many years. Enhancing communication with a world auxiliary
language also has a long history. This paper does both too much and too little,
reaching all of these areas and more.

The paper flits from topic to topic quickly without much pattern and does not
deeply address any one area. Covering both vocabulary selection and bit-level
encoding in one paper may be too much, and it seems like there will be different
audiences for each of those. At least, foreshadowing the role and importance of
the different parts earlier would make the pivot less jarring.

There is a lack of engagement with the literature, with a total of two published
papers referenced and many claims uncited. References to software projects or
web sites are appropriate when necessary, but 25 of the 28 references are to
these, and the one remaining to a pop-science paperback.

The literature review section is quite cursory, addressing only COBOL,
Hypertalk, and Lojban, only the last of which sections contains any references
to substantiate its claims at all. I would like to see both positioning amongst
and reference to a wider range of programming languages, and in particular
natural-language programming languages. There seems to be plenty of space left
under the page limit for research papers.

Even within the paper's main focus of constructed languages, it seems like there
should be a wider range of material to address. Only Lojban is mentioned, but
not parallels of many languages with the approach to vocabulary and grammar
taken in Pyash, while high-level aspects of constructed-language theory (a
priori or a posteriori?) are not covered either. On the other hand, linguistic
terms of art such as "relexification" are used without explanation, which is
probably unsuitable for a programming venue.

I was surprised by the sudden pivot into bit-level encoding in section 3.4. The
decisions in that section could use more justification. The discussion section
as a whole could be more efficient and would benefit from citations, but section
4.1.5 on communication protocols in particular.

The paper as currently presented does not seem suitable for SLE. It could
perhaps be restructured as a series of blog posts. There is an active
non-academic constructed- and auxiliary-language community that the author might
enjoy. Alternatively, a revised version that concentrated on substantiable
claims and design elements, probably in a more limited area, might be suitable
for a programming-language venue in future. In particular, the (or a) grammar-
and vocabulary-mining approach here seems plausibly useful for language design.

There are a number of composition and typographical errors:
* Frequently sentence fragments are used as sentences; for example, "With the
  exception of the conditional mood, which is treated the same as a
grammatical-case for encoding." is all subordinate clause and no principal verb.
"Though" at the start of the sentence is similar.
* Possessive "its" should not have an apostrophe.
* "Berkeley" has a secret "e" in the middle.
* Lengthy phrases are used in attribution that I'm not able to parse easily,
  such as "most placement based parameter family of languages".
* Additional or missing commas and articles are widespread.

===========================================================================
                           SLE 2017 Review #18B
---------------------------------------------------------------------------
             Paper #18: Pyash: One Language to Unite Them All
---------------------------------------------------------------------------

                      Overall merit: 1. Reject
                 Reviewer expertise: 2. Some familiarity

                         ===== Paper summary =====

The paper „Pyash: One Language to Unite Them All“ propose a new general-purpose
language for vertical integration (i.e., communication. documentation, and
programming) and as pivot language for language-to-language translation. The
vision of a language that lends itself to discussion as well as to programming
is interesting and the process designing Pyash most appears to be sound. The
paper overall is well-written and the examples serve its comprehension. However,
the paper lacks (i) any discussion of the language’s semantics as well as (ii)
any evaluation of Pyash. Moreover, the arguments for specific design decisions
are debatable, e.g., it is not discussed 
- that the author opted for verb-final order of sentences,
- why the grammar words of FrameNet or the universal networking language are
  insufficient and require a „more organic approach“,
- why the author applied the three specific filters described in. Sect. 3.2#
- why a golden fraction was _felt_ a natural choice for filtering thresholds

Moreover, the benefits of inter-language translation are not explained. From the
case study of „print(„hello world“)“ (Table 3), I see no benefit of complicating
speaking or programming by using Pyash English (especially as no. 5 of Table 3
doesn’t make sense to a C compiler). Maybe better examples of Pyash’s benefits
would help convincing the reader. 

Minor issues:
- it is left for the reader how the language has evolved through „several
  different iterations“
- Table 1: curd, loch, and click cross the column’s border
- ca. 1/4th of the references are the author’s open source projects

===========================================================================
                           SLE 2017 Review #18C
---------------------------------------------------------------------------
             Paper #18: Pyash: One Language to Unite Them All
---------------------------------------------------------------------------

                      Overall merit: 1. Reject
                 Reviewer expertise: 4. Expert

                         ===== Paper summary =====

The paper claims to introduce a language that can be used for everything from
human communication to computer programming and as an intermediate language to
translate between all human languages.

                      ===== Comments for author =====

This paper makes sweeping claims with no substantiation and is well below the
bar for acceptance.

The paper exhibits a very shallow understanding of what a language is (either
software language or human language), focusing entirely on aspects of
vocabulary, morphology, and syntax, but ignoring semantics completely. For
example, the paper claims repeatedly that the proposed language can be used for
computer programming, data modeling, and all sorts of other applications based
on the fact that it can express concepts in these domains. So can any natural
language, but that does not make natural language suitable for these tasks.
Additionally, the supposed applications to translation consider only
word-for-word translation.

The development of the vocabulary and morphology of the language is discussed at
length, but little is provided in the way of convincing rationale. Instead the
paper repeatedly appeals to the depth of the author's research on these topics.



