{
	"title": "Capybaraaa's\nDaily",
	"description": "I don't know what to do.",
	"links": "*   *我*\n*   [水豚豚豚の图](/186apNAbr1pdc5CB65vg9jn4ocRYMvfvz6)\n*   [Capybaraaa's Daily](/1FjA71G8f9vBkZcpL31vbijR6fq2ybXLEf/)\n*   [My ZeroMe](/Me.ZeroNetwork.bit/?Profile/1White24UrrwQrD86o6Vrc1apgZ1x1o51/1BiZXB95Wx1fxb8qgGX9DJungiUCn7hj4T/capybaraaa@zeroid.bit)\n*   *我的朋友们*\n\n*   [零点二次元](/02chan.bit)",
	"next_post_id": 4,
	"demo": false,
	"modified": 1512108176,
	"post": [
		{
			"post_id": 3,
			"title": "GET https://capybaraaa.info",
			"date_published": 1501247974.585,
			"body": "今天才发现，Namecheap的域名服务又便宜又舒心，自带免费Whois隐私保护，比GoDaddy好多了...\n\n后者唯一好处是支持支付宝，三年前没有Visa卡，只能在这家（境外）服务商注册。\n\nNamecheap的购买流程没有任何捆绑，界面清晰，肥肠顺畅。对比一下，GoDaddy的付款流程很恶心，会默认勾选一大堆你不会用到的东西。\n\n最重要的是，价格贵！.INFO域名在Namecheap上￥80/year，GoDaddy上是￥100+/year，其它域名我大体对比了下也是这种比例的差距。而且前者域名隐私保护免费，后者要加￥60/year。\n\n对了，GoDaddy很多云主机服务器都被墙了，连DNS服务器都被墙了你敢信= =。不过我的DNS还是托管在CloudFlare上了，这方面服务不重要。\n\n话说回来，今天再Nc上买了个capybaraaa.info域名，用来干嘛好呢..."
		},
		{
			"post_id": 2,
			"title": "搭建Https的ZeroNet节点反向代理",
			"date_published": 1500652832.553,
			"body": "如果你想：\n\n1.  分享资源需要**做种**，但不能天天挂机；\n\n2.  想要扩展你的博客节点，让别人更方便地访问到你和你的博客、你喜欢的博客；\n\n3.  有空闲的Vps（翻墙用的并不会很忙，而且流量空余，更适合了，对吧），并且觉得ZeroNet还不错，愿意帮助拓展；\n\n4.  想要方便自己跨设备、随时访问ZeroNet；\n\n那么这篇教程还算适合你，不妨来看一下。\n\n* * *\n\n**> 注：**本文并非我的研究，仅仅是总结前人的成果，在使用过程中遇到了些问题，花费了一晚上的时间查错纠正，直到正常运行后的记录。\n\n> 详细步骤参考[1]，但由于ZeroNet更新，导致配置文件过时，我在配置时一直报错：\n\n```\nConnection with uiServer websocket lost.... reconnecting\n```\n\n> 经过一晚上时间的查错，终于找到需要做调整的部分，因此我在这里将所有步骤的命令列出。\n> \n> 搭建环境：Vultr $2.5/month, Ubuntu 16.04 x64\n> \n> 可选：为了更快连接Vps，可以升级4.10.0内核并开启BBR；\n> \n> 为了链接安全性，请搭建HTTPS服务器，**注意**，搭建HTTPS前，需要有一个域名：DOMAIN.MY。下文中所有带有DOMAIN.MY的命令和配置请手动替换成你的域名。\n\n_Updated 17/08/30: 修改几处格式，完善命令。_\n\n_Updated 17/12/01: 修正crontab处指令_\n\na. 安装Nginx\n\n```bash\nsudo apt update\n\nsudo apt-get install -y nginx\n\nsudo service nginx stop\n```\n\nb. 安装LetsEncrypt并获取证书\n\n```bash\nsudo apt-get install letsencrypt\n\nletsencrypt certonly --standalone -d DOMAIN.MY\n\nsudo crontab -e\n```\n\n此处需要手动将以下内容添加到当前文件末尾，意思是每月1日00:00更新HTTPS证书。保存并退出：\n\n```\n0 0 1 * * service nginx stop\n1 0 1 * * letsencrypt renew\n2 0 1 * * service nginx start\n```\n\n然后继续执行：\n\n```bash\nsudo service cron restart\n\nopenssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n```\n\n此处需要较长时间（大约五到十分钟），喝杯茶先。\n\nc. 配置ZeroNet\n\n```bash\nsudo apt-get install -y python-dev\nsudo apt-get install -y python-setuptools\nsudo apt-get install -y python-pip\nsudo pip install --upgrade pip\nsudo apt-get install -y msgpack-python\nsudo pip install msgpack-python --upgrade\nsudo apt-get install -y python-gevent\nsudo pip install gevent --upgrade\n\ncd ~\nwget https://github.com/HelloZeroNet/ZeroNet/archive/master.tar.gz\ntar -xzvf master.tar.gz\n```\n\nd. 配置Nginx\n\n```bash\nsudo mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default_bak\n\nsudo nano /etc/nginx/sites-available/default\n```\n\n将以下内容（记得替换掉所有DOMAIN.MY，总共五处）粘贴后保存退出：\n\n```\nserver {\nlisten 443 ssl;\nserver_name DOMAIN.MY;\nssl_certificate /etc/letsencrypt/live/DOMAIN.MY/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/DOMAIN.MY/privkey.pem;\nssl_trusted_certificate /etc/letsencrypt/live/DOMAIN.MY/chain.pem;\nssl_protocols TLSv1.2;\nssl_prefer_server_ciphers on;\nssl_dhparam /etc/ssl/certs/dhparam.pem;\nssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';\nssl_session_timeout 1d;\nssl_session_cache shared:SSL:50m;\nssl_stapling on;\nssl_stapling_verify on;\nadd_header Strict-Transport-Security max-age=15768000;\nlocation / {\nproxy_pass http://127.0.0.1:43110;\nproxy_set_header Host $host;\nproxy_http_version 1.1;\nproxy_read_timeout 1h;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection \"upgrade\";\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n}\naccess_log /var/log/nginx_success;\nerror_log /var/log/nginx_error;\n}\nserver {\nlisten 80;\nserver_name DOMAIN.MY;\nreturn 301 https://$host$request_uri;  \n}\n```\n\n最后重新启动nginx：\n\n```bash\nsudo service nginx reload\n```\n\ne. 启动与关闭ZeroNet\n\n如果想要和本地的ZeroNet用户信息保持一致，需要将本地data/users.json上传至~/ZeroNet-master/data/users.json，如果有相同名称的文件覆盖即可。\n\n执行以下指令，首先启用UiPassword防止非本人的访问，其次设置自定义密码（将CUSTOM_PASSWORD替换为你随意设计一个密码）。\n\n```bash\ncd ~\n\nmv ZeroNet-master/plugins/disabled-UiPassword ZeroNet-master/plugins/UiPassword\n\nnohup python ZeroNet-master/zeronet.py --ui_ip 0.0.0.0 --ui_password CUSTOM_PASSWORD >/dev/null 2>&1 & echo $! > zerorun.pid\n```\n\n这样即可后台启动ZeroNet节点服务器。\n\n如果需要关闭，使用`kill -9 'cat zerorun.pid'`杀掉即可。\n\n也可以建立两个脚本：`nano ~/zerorun`\n\n将下面这行粘贴进去，再Ctrl+O保存，Ctrl+X退出：\n\n```bash\nnohup python ZeroNet-master/zeronet.py --ui_ip 0.0.0.0 --ui_password CUSTOM_PASSWORD >/dev/null 2>&1 & echo $! > zerorun.pid\n```\n\n然后：`nano ~/zerostop`\n\n将下面这行粘贴进去，再Ctrl+O保存，Ctrl+X退出：\n\n```\nkill -9 `cat zerorun.pid`\n```\n\n最后给这两个脚本可执行权限：\n\n```\nchmod +x zerorun\nchmod +x zerostop\n```\n\n启动时，执行`~/zerorun`，关闭时，执行`~/zerostop`。\n\n然后就可以直接访问你的域名了，会得到以下页面：\n\n![登录页面](img/17072201.png)\n\n输入密码，选择\"Keep me logged in\"。\n\n参考文献：\n\n[1] [.com bind to .bit](/yangleitj.bit/?Post:18) （[无法访问？](https://127.0.0.1:43110/yangleitj.bit/?Post:18)）\n\n[2] [ZeroNet/issues#228](https://github.com/HelloZeroNet/ZeroNet/issues/288)\n\n[3] [在VPS上运行ZeroNet，并通过Https访问](https://127.0.0.1:43110/1H82fzqWPCaQP622b1iyFuTbbqDEMt9Tk4/?Post:3:%E5%9C%A8VPS%E4%B8%8A%E8%BF%90%E8%A1%8CZeroNet%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87Https%E8%AE%BF%E9%97%AE) （[无法访问？](https://127.0.0.1:43110/1H82fzqWPCaQP622b1iyFuTbbqDEMt9Tk4/?Post:3:%E5%9C%A8VPS%E4%B8%8A%E8%BF%90%E8%A1%8CZeroNet%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87Https%E8%AE%BF%E9%97%AE)）"
		},
		{
			"post_id": 1,
			"title": "Yes, here we begin.",
			"date_published": 1433033779.604,
			"body": "Creation is always the first step of abandon."
		}
	]
}