{"config":{"lang":["fr"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Qu'est ce que ZeroNet ? ZeroNet utilise Bitcoin cryptographie et BitTorrent technologie afin de cr\u00e9er un r\u00e9seau d\u00e9centralis\u00e9 r\u00e9sistant \u00e0 la censure . Les utilisateurs peuvent publier des sites statiques ou dynamiques sur ZeroNet et les visiteurs peuvent choisir s'ils souhaitent ou pas distribuer le site eux-m\u00eame. Les sites internet resteront en ligne tant qu'un pair sera toujours en ligne. Quand un site est mis \u00e0 jour par son propri\u00e9taire, tous les noeuds distribuant ce site (pr\u00e9c\u00e9dents visiteurs) receveront seulement les mises \u00e0 jour faite au contenu du site. ZeroNet est distribu\u00e9 avec une base de donn\u00e9e SQL pr\u00eate \u00e0 l'utilisation. Cela rend les sites avec beaucoup de contenus facile \u00e0 d\u00e9veloper. La base de donn\u00e9e est ensuite synchronis\u00e9e avec les noeuds h\u00f4tes \u00e0 chaque mise \u00e0 jour incr\u00e9mentale. Pourquoi ? Nous croyons dans la communication ouvert, libre et non censur\u00e9e. Aucune censure: Apr\u00e8s que quelque chose soit publi\u00e9 il n'y a aucun moyen de le supprim\u00e9. Aucun point unique de d\u00e9faillance: Le contenu reste en ligne m\u00eame si seulement un pair le distribue. Impossible \u00e0 arr\u00e9ter: C'est nulle part parce que c'est partout. Le contenu est distribu\u00e9 par n'importe quel utilisateur qui souhaite contribuer. Rapide: ZeroNet utilise BitTorrent technologie pour d\u00e9livrer le contenu rapidement sans serveur centrale. Fonctionne hors-ligne: Vous pourvez acc\u00e9der aux sites m\u00eame si votre internet n'est pas disponible. Secure: Le contenu post\u00e9 est s\u00e9curis\u00e9 avec la m\u00eame cryptographie utilis\u00e9 par votre porte-feuille Bitcoin. Avantages Facile, zero configuration n\u00e9cessaire pour commencer. Pas de mots de passe mais un syst\u00e8me d'authorization base sur BIP32 . Votre compte est prot\u00e9g\u00e9 avec la m\u00eame cryptographie utilis\u00e9 dans votre portefeuille Bitcoin. Site mis \u00e0 jour en temps r\u00e9el, pas besoin de refra\u00eechir votre page. Supporte les noms de domaine en .bit de Namecoin. Base de donn\u00e9e SQL support\u00e9e : Facilite de d\u00e9velopment de site et permet un chargement de page plus rapide. Anonymat : Supporte Tor r\u00e9seau avec .onion service cach\u00e9 \u00e0 la place des addresses ipv4. Connection chiffr\u00e9es TLS. Ouverture des ports via uPnP automatiquement. Plugin pour multi-utilisateur service (openproxy). Fonctionne avec n'import quel navigateurs/OS. Comment \u00e7a fonctionne ? Apr\u00e8s avoir install\u00e9 et lanc\u00e9 ZeroNet, vous pouvez visiter un site en tapant l'url : http://127.0.0.1:43110/{zeronet_site_address} (exemple - http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D ) ZeroNet utilisera le r\u00e9seau BitTorrent pour trouver des pairs qui partage le site et commencera \u00e0 t\u00e9l\u00e9charger son contenu (HTML, CSS, JS...) depuis ces pairs. Chaque site visit\u00e9 sera ensuite distribu\u00e9 depuis votre ordinateur/serveur. Ces sites peuvent effacer ou blacklister si n\u00e9cessaire. Tous les sites contiennent une liste de tous ses fichiers, chaque entr\u00e9e \u00e9tant assign\u00e9 un hash SHA512 et une signature g\u00e9n\u00e9r\u00e9e \u00e0 partir de la cl\u00e9 priv\u00e9e du propri\u00e9taire du site. Si le propri\u00e9taire du site modifie celui-ci, alors la personne signe la nouvelle liste et la publie aux pairs. Apr\u00e8s avoir v\u00e9rifi\u00e9 l'int\u00e9grit\u00e9 de la liste (utilisant la signature), ils peuvent t\u00e9l\u00e9charger les fichiers modifi\u00e9s an publi\u00e9 le nouveau contenu \u00e0 d'autres pairs. Slideshow about ZeroNet cryptography, content updates, multi-user sites Capture d'\u00e9crans Plus de capture d'\u00e9crans Limites Pas de d\u00e9coupement des gros fichiers \u00e0 la Torrent (BigFile plugin ajout\u00e9) Transfert de fichier non compress\u00e9 ou chiffr\u00e9 (chiffrement TLS ajout\u00e9) Pas de sites priv\u00e9s Contribution financi\u00e8re Bitcoin: 1QDhxQ6PraUZa21ET5fYUCPgdrwBomnFgX Page de donation Merci ! Plus d'info, aide, changelog, sites zeronet : http://www.reddit.com/r/zeronet/ Viens ! Regarde comme on est bien. Discuter avec nous : #zeronet @ FreeNode or on gitter","title":"Introduction"},{"location":"#quest-ce-que-zeronet","text":"ZeroNet utilise Bitcoin cryptographie et BitTorrent technologie afin de cr\u00e9er un r\u00e9seau d\u00e9centralis\u00e9 r\u00e9sistant \u00e0 la censure . Les utilisateurs peuvent publier des sites statiques ou dynamiques sur ZeroNet et les visiteurs peuvent choisir s'ils souhaitent ou pas distribuer le site eux-m\u00eame. Les sites internet resteront en ligne tant qu'un pair sera toujours en ligne. Quand un site est mis \u00e0 jour par son propri\u00e9taire, tous les noeuds distribuant ce site (pr\u00e9c\u00e9dents visiteurs) receveront seulement les mises \u00e0 jour faite au contenu du site. ZeroNet est distribu\u00e9 avec une base de donn\u00e9e SQL pr\u00eate \u00e0 l'utilisation. Cela rend les sites avec beaucoup de contenus facile \u00e0 d\u00e9veloper. La base de donn\u00e9e est ensuite synchronis\u00e9e avec les noeuds h\u00f4tes \u00e0 chaque mise \u00e0 jour incr\u00e9mentale.","title":"Qu'est ce que ZeroNet ?"},{"location":"#pourquoi","text":"Nous croyons dans la communication ouvert, libre et non censur\u00e9e. Aucune censure: Apr\u00e8s que quelque chose soit publi\u00e9 il n'y a aucun moyen de le supprim\u00e9. Aucun point unique de d\u00e9faillance: Le contenu reste en ligne m\u00eame si seulement un pair le distribue. Impossible \u00e0 arr\u00e9ter: C'est nulle part parce que c'est partout. Le contenu est distribu\u00e9 par n'importe quel utilisateur qui souhaite contribuer. Rapide: ZeroNet utilise BitTorrent technologie pour d\u00e9livrer le contenu rapidement sans serveur centrale. Fonctionne hors-ligne: Vous pourvez acc\u00e9der aux sites m\u00eame si votre internet n'est pas disponible. Secure: Le contenu post\u00e9 est s\u00e9curis\u00e9 avec la m\u00eame cryptographie utilis\u00e9 par votre porte-feuille Bitcoin.","title":"Pourquoi ?"},{"location":"#avantages","text":"Facile, zero configuration n\u00e9cessaire pour commencer. Pas de mots de passe mais un syst\u00e8me d'authorization base sur BIP32 . Votre compte est prot\u00e9g\u00e9 avec la m\u00eame cryptographie utilis\u00e9 dans votre portefeuille Bitcoin. Site mis \u00e0 jour en temps r\u00e9el, pas besoin de refra\u00eechir votre page. Supporte les noms de domaine en .bit de Namecoin. Base de donn\u00e9e SQL support\u00e9e : Facilite de d\u00e9velopment de site et permet un chargement de page plus rapide. Anonymat : Supporte Tor r\u00e9seau avec .onion service cach\u00e9 \u00e0 la place des addresses ipv4. Connection chiffr\u00e9es TLS. Ouverture des ports via uPnP automatiquement. Plugin pour multi-utilisateur service (openproxy). Fonctionne avec n'import quel navigateurs/OS.","title":"Avantages"},{"location":"#comment-ca-fonctionne","text":"Apr\u00e8s avoir install\u00e9 et lanc\u00e9 ZeroNet, vous pouvez visiter un site en tapant l'url : http://127.0.0.1:43110/{zeronet_site_address} (exemple - http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D ) ZeroNet utilisera le r\u00e9seau BitTorrent pour trouver des pairs qui partage le site et commencera \u00e0 t\u00e9l\u00e9charger son contenu (HTML, CSS, JS...) depuis ces pairs. Chaque site visit\u00e9 sera ensuite distribu\u00e9 depuis votre ordinateur/serveur. Ces sites peuvent effacer ou blacklister si n\u00e9cessaire. Tous les sites contiennent une liste de tous ses fichiers, chaque entr\u00e9e \u00e9tant assign\u00e9 un hash SHA512 et une signature g\u00e9n\u00e9r\u00e9e \u00e0 partir de la cl\u00e9 priv\u00e9e du propri\u00e9taire du site. Si le propri\u00e9taire du site modifie celui-ci, alors la personne signe la nouvelle liste et la publie aux pairs. Apr\u00e8s avoir v\u00e9rifi\u00e9 l'int\u00e9grit\u00e9 de la liste (utilisant la signature), ils peuvent t\u00e9l\u00e9charger les fichiers modifi\u00e9s an publi\u00e9 le nouveau contenu \u00e0 d'autres pairs.","title":"Comment \u00e7a fonctionne ?"},{"location":"#slideshow-about-zeronet-cryptography-content-updates-multi-user-sites","text":"","title":"Slideshow about ZeroNet cryptography, content updates, multi-user sites &raquo;"},{"location":"#capture-decrans","text":"","title":"Capture d'\u00e9crans"},{"location":"#plus-de-capture-decrans","text":"","title":"Plus de capture d'\u00e9crans &raquo;"},{"location":"#limites","text":"Pas de d\u00e9coupement des gros fichiers \u00e0 la Torrent (BigFile plugin ajout\u00e9) Transfert de fichier non compress\u00e9 ou chiffr\u00e9 (chiffrement TLS ajout\u00e9) Pas de sites priv\u00e9s","title":"Limites"},{"location":"#contribution-financiere","text":"Bitcoin: 1QDhxQ6PraUZa21ET5fYUCPgdrwBomnFgX Page de donation","title":"Contribution financi\u00e8re"},{"location":"#merci","text":"Plus d'info, aide, changelog, sites zeronet : http://www.reddit.com/r/zeronet/ Viens ! Regarde comme on est bien. Discuter avec nous : #zeronet @ FreeNode or on gitter","title":"Merci !"},{"location":"faq/","text":"Questions Fr\u00e9quentes Est-ce que j'ai besoin d'avoir un port d'ouvert ? C'est optionel , vous pouvez naviguer et utiliser ZeroNet sans avoir le port ZeroNet d'ouvert. Si vous souhaitez cr\u00e9er un nouveau site il est par contre fortement recommand\u00e9 d'avoir un port ouvert. Pendant son lancement ZeroNet essaye d'ouvrir un port pour vous sur votre router en utilisant UPnP , si cela \u00e9choue vous devez le faire manuellement : Essayer d'acc\u00e9der \u00e0 votre router via son interface web http://192.168.1.1 ou http://192.168.0.1 Chercher un \"Activer UPnP\"/\"Enable UPnP support\" ou une option similaire puis relancer ZeroNet. Si cela ne fonctionne pas encore alors essayer de trouver une section 'redirection de port' sur l'interface web de votre router. C'est diff\u00e9rent pour tout les routers. Voici un tutorial Youtube. Le port \u00e0 rediriger est 15441. Est-ce que ZeroNet est anonyme ? Ce n'est pas plus anonyme que BitTorrent, mais la confidentialit\u00e9 (la possibilit\u00e9 de trouver qui est l'auteur d'un commentaire/site) augmentera avec avec le r\u00e9seau et quand les sites gagneront plus de pairs. ZeroNet a \u00e9t\u00e9 cr\u00e9e pour fonctionner avec des r\u00e9seaux anonymisant : vous pouvez facilment cacher votre adresse IP en utilisant Tor. Comment utiliser ZeroNet avec le navigateur Tor ? En mode Tor, il est recommand\u00e9 d'utiliser ZeroNet avec le navigateur Tor: Lancer le navigateur Tor Aller sur about:preferences#advanced Cliquer sur Settings... Entrer 127.0.0.1 dans le champs No proxy for Ouvrer http://127.0.0.1:43110 dans votre navigateur Si vous voyez une page blanche : - Cliquer sur le bouton 'NoScript' (premier ic\u00f4ne sur la barre d'outil) - Choisisser \"Temporary allow all this page\" - Rafra\u00eechisser la page Comment utiliser ZeroNet avec Tor ? Si vous souhaitez cacher votre adresse IP, installez la derni\u00e8re version de ZeroNet ensuite cliquez Tor Enable Tor pour chaque connection sur ZeroHello. Sur Windows, Tor est packag\u00e9 avec avec ZeroNet. ZeroNet essayera de t\u00e9l\u00e9charger and ouvrir Tor au premier lancement. Si cela \u00e9choue pour n'importe quel raison, vous pouvez l'installer manuellement en suivant les instructions (en anglais) dans core\\tools\\tor\\manual_install.txt . Pour les autres OS, suivez les instructions dans la section \"Comment ZeroNet fonctionne avec Tor sous Linux/MacOS\". Tip: Vous pouvez v\u00e9rifier quel adresse IP ZeroNet utilise sur la page Stats . Tip: Si votre connection \u00e9choue, soyez sure que vous avez la derni\u00e8re version de Tor install\u00e9. (0.2.7.5+ required) Comment ZeroNet fonctionne avec Tor sous Linux/MacOS ? Installer Tor pour votre OS en suivant le tutoriel officiel sur le Tor : Linux Mac . sudo nano /etc/tor/torrc Retirer le caract\u00e8re # sur les lignes ControlPort 9051 et CookieAuthentication 1 (line ~57) Relancer Tor Ajouter la permission \u00e0 votre utilisateur pour lire le cookie d'authentication. Sou Debian Linux, la commande est sudo usermod -a -G debian-tor [yourlinuxuser] (Si vous n'\u00eates pas sous Debian v\u00e9rifier le fichier avec ls -al /var/run/tor/control.authcookie ) D\u00e9connecter/Re-connecter avec votre utilisateur pour appliquer les changements faites au groupe Tip: Vous pouvez v\u00e9rifier si votre configuration Tor est fonctionnel avec echo 'PROTOCOLINFO' | nc 127.0.0.1 9051 Tip: Il est aussi possible d'utiliser Tor sans modifier torrc (ou d'utiliser une version plus ancienne du client Tor), en tapant zeronet.py --tor disable --proxy 127.0.0.1:9050 --disable_udp , mais vous perdrez aussi la possibilit\u00e9 de communiquer avec les adresses en .onion. Es ce qu'il est possible d'utiliser un fichier de configuration ? Chaque argument de configuration utilis\u00e9 en ligne de commande peut \u00eatre aussi utilis\u00e9 comme option de configuration. Ajouter ces options ligne par ligne dans un fichier appeler zeronet.conf dans votre r\u00e9pertoire zeronet (celui avec zeronet.py) Exemple: [global] data_dir = my-data-dir log_dir = my-log-dir ui_restrict = 1.2.3.4 2.3.4.5 Ppour afficher toute les options, utilis\u00e9 la commande zeronet.py --help . Comment faire fonctionner Tor si mon FAI ou mon gouvernement bloque son utilisation ? ZeroNet n'inclut pas encore le plugin de transport Tor . La fa\u00e7on la plus facile de faire fonctionner Tor sur un r\u00e9seau censur\u00e9 est de lancer le navigateur Tor, le configurer avec le plugin, et modifier ZeroNet pour qu'il utilise le navigateur Tor et son port en lan\u00e7ant ZeroNet avec --tor_controller 127.0.0.1:9151 --tor_proxy 127.0.0.1:9150 ou en ajoutant les param\u00e8tres au fichier de configuration zeronet.conf . [global] tor_controller = 127.0.0.1:9151 tor_proxy = 127.0.0.1:9150 Est-ce que je peux utiliser le m\u00eame nom d'utilisateur sur plusieurs machines ? Oui, il suffit juste de copier le fichier data/users.json sur votre nouvelle machine. Comment cr\u00e9er une adresse de site \"sophistiqu\u00e9\" (pas un .bit) ? Utiliser vanitygen pour en g\u00e9n\u00e9rer une. Une fois votre clef g\u00e9n\u00e9r\u00e9e, cr\u00e9er le r\u00e9pertoire data/1YourPublicKey...tCkBzAXTKvJk4uj8 . Ajouter vos fichiers. Ensuite visiter http://127.0.0.1:43110/1YourPublicKey...tCkBzAXTKvJk4uj8/ . Faites glisser le bouton 0 sur la gauche et utiliser le menu pour y signer votre site. Comment puis-je enregistrer un nom de domaie en .bit ? Vous pouvez enregistrer un nom de domaine en .bit en utilisant Namecoin . Il est possible de manager vos noms de domaines via l'interface client ou par l'interface en ligne de commande . Apr\u00e8s avoir enregistrer votre nom de domaine, il vous faut \u00e9diter le registre de celui-ci en y ajoutant la section zeronet. Exemple : { ... zeronet : { : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , blog : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , talk : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ }, ... } Le champ vide ( \"\" ) signifie que c'est le domaine sup\u00e9rieur, les autres champs sont des sous-domaines. Tip: Vous pouvez acheter des Namecoins avec des bitcoins sur shapeshift.io . Tip: Autres moyens pour enregistrer un nom de domaine en .bit : domaincoin.net , peername.com , dotbit.me Tip: Vous pouvez v\u00e9rifier votre nom de domaine sur namecha.in , par exemple: zeroid.bit Tip: Vous devez seulement utiliser des lettres en minuscules, nombres er - dans votre nom de domaine . Tip: Pour faire en sorte que ZeroHello montre votre nom de domaine au lieu de votre adresse Bitcoin, ajouter un champ \"domaine\" avec votre nom de domaine Namecoin \u00e0 votre fichier content.json. ( Example ) Est-ce que je peux utiliser l'adresse/clef priv\u00e9e g\u00e9n\u00e9r\u00e9e d'un site pour accepter des paiments en Bitcoin ? Oui, c'est une adresse Bitcoin standard. La clef priv\u00e9e est, elle, au format WIF, il est donc possible de l'importer dans la plupart des clients. Tip: Il est malgr\u00e9 tout d\u00e9conseill\u00e9 de garder une somme d'argent cons\u00e9quente sur ces adresses car \u00e0 chaque fois que votre site est modifi\u00e9 il vous faut utiliser votre clef priv\u00e9e. Que se passe-t-il si quelqu'un int\u00e8gre du contenu malveillant ? Les sites ZeroNets sont \"sandbox\u00e9s\", ils ont les m\u00eames privil\u00e8ges que n'importe quel site sur internet. Vous \u00eates en plein contr\u00f4le de ce que vous h\u00e9bergez. Si vous trouvez du contenu suspicieux, vous pouvez arr\u00e9ter de le l'h\u00e9berger \u00e0 tout moment. Est-ce qu'il est possible d'installer ZeroNet sur une machine distante ? Oui, vous devez activer le plugin UiPassword en rennomant le r\u00e9pertoire plugins/disabled-UiPassword en plugins/UiPassword , ensuite relancer ZeroNet sur la machine avec la commande zeronet.py --ui_ip \"*\" --ui_password anypassword . Cela reliera le serveur web ZeroNet UI \u00e0 toutes les interfaces, mais pour le garde s\u00e9curis\u00e9 vous pouvez seulement y acc\u00e9der en y entrant le mot de passe. Tip: Vous pouvez aussi restreindre l'acc\u00e8s par IP en utilisant l'option --ui_restrict ip1 ip2 . Tip: Vous pouvez sp\u00e9cifier le mot de passe dans le fichier de configuration zeronet.conf en ajoutant les lignes [global] et ui_password = anypassword . Est-ce qu'il est possible de traquer la bande passante utilis\u00e9 par ZeroNet ? The ratio re\u00e7u/envoy\u00e9 est affich\u00e9 dans le menu ZeroNet. (vous pouvez l'ouvrir en faisant glisser le bouton 0 en haut \u00e0 gauche) Tip: Page contenant les statistiques : http://127.0.0.1:43110/Stats Que se passe-t-il si deux personnes utilisent la m\u00eame clef pour modifier un site ? Chaque fichier content.json est horodat\u00e9, les clients choisissent toujours la verssion la plus r\u00e9cente et avec une signateure valide. Est-ce que ZeroNet utilise la blockchain de Bitcoin ? Non, ZeroNet utilise seulement la cryptographie de Bitcoin pour les adresses des sites et signer/v\u00e9rifier le contenu. L'identification des utilisateurs repose sur le standard BIP32 . La blockchain de Namecoin est n\u00e9amoins utilis\u00e9 pour l'enregistrement des noms de domaines, cependant les clients ne la t\u00e9l\u00e9charge pas. Les m\u00e9tadonn\u00e9es sont pass\u00e9s via le r\u00e9seau ZeroNet. Est-ce que ZeroNet supporte seulement les pages HTML/CSS ? ZeroNet a \u00e9t\u00e9 construit pour h\u00e9berger des sites dynamiques avec des mise \u00e0 jour en temps r\u00e9el, mais vous pouvez servir n'importe quel genre de fichiers, comme des r\u00e9pertoires VCS, votre propre client l\u00e9ger, base de donn\u00e9e, etc. Comment cr\u00e9er un nouveau site ? Suivez ces instructions. Que se passe-t-il quand j'acc\u00e8de \u00e0 un site ? Lorsque vous visitez un nouveau site, ZeroNet demande les adresses IP de visiteurs pr\u00e9c\u00e9dents aux traqueurs BitTorrent. En premier, un fichier nomm\u00e9 content.json est t\u00e9l\u00e9charg\u00e9. Il contient tout les noms de fichiers, leurs hashes et la signature cryptographique du propri\u00e9taire. Le fichier content.json t\u00e9l\u00e9charg\u00e9 est ensuite v\u00e9rifi\u00e9 en utilisant la clef publique du site et la signature du propri\u00e9taire du site. Les autres fichiers (html, css, js...) sont ensuite t\u00e9l\u00e9charg\u00e9 et v\u00e9rifi\u00e9 en les comparant \u00e0 leur hash SHA256 inscrit dans le fichier content.json. Chaque site visit\u00e9 sera ensuite distribu\u00e9 par vous . Si le propri\u00e9taire du site (celui qui a la clef priv\u00e9e associ\u00e9e \u00e0 l'adresse du site) modifie le site, alors la personne signe le nouveau content.json et le publie \u00e0 ses pairs . Apr\u00e8s que ces derniers ont bien v\u00e9rifi\u00e9 l'int\u00e9grit\u00e9 du fichier (via la signature), ils peuvent t\u00e9l\u00e9charg\u00e9 le contenu modifi\u00e9 et le distribu\u00e9 \u00e0 leur tour \u00e0 leurs pairs. Plus d'info: exemple de sites ZeroNet , Pr\u00e9sentation sur le r\u00e9seau ZeroNet","title":"Questions Fr\u00e9quentes"},{"location":"faq/#questions-frequentes","text":"","title":"Questions Fr\u00e9quentes"},{"location":"faq/#est-ce-que-jai-besoin-davoir-un-port-douvert","text":"C'est optionel , vous pouvez naviguer et utiliser ZeroNet sans avoir le port ZeroNet d'ouvert. Si vous souhaitez cr\u00e9er un nouveau site il est par contre fortement recommand\u00e9 d'avoir un port ouvert. Pendant son lancement ZeroNet essaye d'ouvrir un port pour vous sur votre router en utilisant UPnP , si cela \u00e9choue vous devez le faire manuellement : Essayer d'acc\u00e9der \u00e0 votre router via son interface web http://192.168.1.1 ou http://192.168.0.1 Chercher un \"Activer UPnP\"/\"Enable UPnP support\" ou une option similaire puis relancer ZeroNet. Si cela ne fonctionne pas encore alors essayer de trouver une section 'redirection de port' sur l'interface web de votre router. C'est diff\u00e9rent pour tout les routers. Voici un tutorial Youtube. Le port \u00e0 rediriger est 15441.","title":"Est-ce que j'ai besoin d'avoir un port d'ouvert ?"},{"location":"faq/#est-ce-que-zeronet-est-anonyme","text":"Ce n'est pas plus anonyme que BitTorrent, mais la confidentialit\u00e9 (la possibilit\u00e9 de trouver qui est l'auteur d'un commentaire/site) augmentera avec avec le r\u00e9seau et quand les sites gagneront plus de pairs. ZeroNet a \u00e9t\u00e9 cr\u00e9e pour fonctionner avec des r\u00e9seaux anonymisant : vous pouvez facilment cacher votre adresse IP en utilisant Tor.","title":"Est-ce que ZeroNet est anonyme ?"},{"location":"faq/#comment-utiliser-zeronet-avec-le-navigateur-tor","text":"En mode Tor, il est recommand\u00e9 d'utiliser ZeroNet avec le navigateur Tor: Lancer le navigateur Tor Aller sur about:preferences#advanced Cliquer sur Settings... Entrer 127.0.0.1 dans le champs No proxy for Ouvrer http://127.0.0.1:43110 dans votre navigateur Si vous voyez une page blanche : - Cliquer sur le bouton 'NoScript' (premier ic\u00f4ne sur la barre d'outil) - Choisisser \"Temporary allow all this page\" - Rafra\u00eechisser la page","title":"Comment utiliser ZeroNet avec le navigateur Tor ?"},{"location":"faq/#comment-utiliser-zeronet-avec-tor","text":"Si vous souhaitez cacher votre adresse IP, installez la derni\u00e8re version de ZeroNet ensuite cliquez Tor Enable Tor pour chaque connection sur ZeroHello. Sur Windows, Tor est packag\u00e9 avec avec ZeroNet. ZeroNet essayera de t\u00e9l\u00e9charger and ouvrir Tor au premier lancement. Si cela \u00e9choue pour n'importe quel raison, vous pouvez l'installer manuellement en suivant les instructions (en anglais) dans core\\tools\\tor\\manual_install.txt . Pour les autres OS, suivez les instructions dans la section \"Comment ZeroNet fonctionne avec Tor sous Linux/MacOS\". Tip: Vous pouvez v\u00e9rifier quel adresse IP ZeroNet utilise sur la page Stats . Tip: Si votre connection \u00e9choue, soyez sure que vous avez la derni\u00e8re version de Tor install\u00e9. (0.2.7.5+ required)","title":"Comment utiliser ZeroNet avec Tor ?"},{"location":"faq/#comment-zeronet-fonctionne-avec-tor-sous-linuxmacos","text":"Installer Tor pour votre OS en suivant le tutoriel officiel sur le Tor : Linux Mac . sudo nano /etc/tor/torrc Retirer le caract\u00e8re # sur les lignes ControlPort 9051 et CookieAuthentication 1 (line ~57) Relancer Tor Ajouter la permission \u00e0 votre utilisateur pour lire le cookie d'authentication. Sou Debian Linux, la commande est sudo usermod -a -G debian-tor [yourlinuxuser] (Si vous n'\u00eates pas sous Debian v\u00e9rifier le fichier avec ls -al /var/run/tor/control.authcookie ) D\u00e9connecter/Re-connecter avec votre utilisateur pour appliquer les changements faites au groupe Tip: Vous pouvez v\u00e9rifier si votre configuration Tor est fonctionnel avec echo 'PROTOCOLINFO' | nc 127.0.0.1 9051 Tip: Il est aussi possible d'utiliser Tor sans modifier torrc (ou d'utiliser une version plus ancienne du client Tor), en tapant zeronet.py --tor disable --proxy 127.0.0.1:9050 --disable_udp , mais vous perdrez aussi la possibilit\u00e9 de communiquer avec les adresses en .onion.","title":"Comment ZeroNet fonctionne avec Tor sous Linux/MacOS ?"},{"location":"faq/#es-ce-quil-est-possible-dutiliser-un-fichier-de-configuration","text":"Chaque argument de configuration utilis\u00e9 en ligne de commande peut \u00eatre aussi utilis\u00e9 comme option de configuration. Ajouter ces options ligne par ligne dans un fichier appeler zeronet.conf dans votre r\u00e9pertoire zeronet (celui avec zeronet.py) Exemple: [global] data_dir = my-data-dir log_dir = my-log-dir ui_restrict = 1.2.3.4 2.3.4.5 Ppour afficher toute les options, utilis\u00e9 la commande zeronet.py --help .","title":"Es ce qu'il est possible d'utiliser un fichier de configuration ?"},{"location":"faq/#comment-faire-fonctionner-tor-si-mon-fai-ou-mon-gouvernement-bloque-son-utilisation","text":"ZeroNet n'inclut pas encore le plugin de transport Tor . La fa\u00e7on la plus facile de faire fonctionner Tor sur un r\u00e9seau censur\u00e9 est de lancer le navigateur Tor, le configurer avec le plugin, et modifier ZeroNet pour qu'il utilise le navigateur Tor et son port en lan\u00e7ant ZeroNet avec --tor_controller 127.0.0.1:9151 --tor_proxy 127.0.0.1:9150 ou en ajoutant les param\u00e8tres au fichier de configuration zeronet.conf . [global] tor_controller = 127.0.0.1:9151 tor_proxy = 127.0.0.1:9150","title":"Comment faire fonctionner Tor si mon FAI ou mon gouvernement bloque son utilisation ?"},{"location":"faq/#est-ce-que-je-peux-utiliser-le-meme-nom-dutilisateur-sur-plusieurs-machines","text":"Oui, il suffit juste de copier le fichier data/users.json sur votre nouvelle machine.","title":"Est-ce que je peux utiliser le m\u00eame nom d'utilisateur sur plusieurs machines ?"},{"location":"faq/#comment-creer-une-adresse-de-site-sophistique-pas-un-bit","text":"Utiliser vanitygen pour en g\u00e9n\u00e9rer une. Une fois votre clef g\u00e9n\u00e9r\u00e9e, cr\u00e9er le r\u00e9pertoire data/1YourPublicKey...tCkBzAXTKvJk4uj8 . Ajouter vos fichiers. Ensuite visiter http://127.0.0.1:43110/1YourPublicKey...tCkBzAXTKvJk4uj8/ . Faites glisser le bouton 0 sur la gauche et utiliser le menu pour y signer votre site.","title":"Comment cr\u00e9er une adresse de site \"sophistiqu\u00e9\" (pas un .bit) ?"},{"location":"faq/#comment-puis-je-enregistrer-un-nom-de-domaie-en-bit","text":"Vous pouvez enregistrer un nom de domaine en .bit en utilisant Namecoin . Il est possible de manager vos noms de domaines via l'interface client ou par l'interface en ligne de commande . Apr\u00e8s avoir enregistrer votre nom de domaine, il vous faut \u00e9diter le registre de celui-ci en y ajoutant la section zeronet. Exemple : { ... zeronet : { : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , blog : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , talk : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ }, ... } Le champ vide ( \"\" ) signifie que c'est le domaine sup\u00e9rieur, les autres champs sont des sous-domaines. Tip: Vous pouvez acheter des Namecoins avec des bitcoins sur shapeshift.io . Tip: Autres moyens pour enregistrer un nom de domaine en .bit : domaincoin.net , peername.com , dotbit.me Tip: Vous pouvez v\u00e9rifier votre nom de domaine sur namecha.in , par exemple: zeroid.bit Tip: Vous devez seulement utiliser des lettres en minuscules, nombres er - dans votre nom de domaine . Tip: Pour faire en sorte que ZeroHello montre votre nom de domaine au lieu de votre adresse Bitcoin, ajouter un champ \"domaine\" avec votre nom de domaine Namecoin \u00e0 votre fichier content.json. ( Example )","title":"Comment puis-je enregistrer un nom de domaie en .bit ?"},{"location":"faq/#est-ce-que-je-peux-utiliser-ladresseclef-privee-generee-dun-site-pour-accepter-des-paiments-en-bitcoin","text":"Oui, c'est une adresse Bitcoin standard. La clef priv\u00e9e est, elle, au format WIF, il est donc possible de l'importer dans la plupart des clients. Tip: Il est malgr\u00e9 tout d\u00e9conseill\u00e9 de garder une somme d'argent cons\u00e9quente sur ces adresses car \u00e0 chaque fois que votre site est modifi\u00e9 il vous faut utiliser votre clef priv\u00e9e.","title":"Est-ce que je peux utiliser l'adresse/clef priv\u00e9e g\u00e9n\u00e9r\u00e9e d'un site pour accepter des paiments en Bitcoin ?"},{"location":"faq/#que-se-passe-t-il-si-quelquun-integre-du-contenu-malveillant","text":"Les sites ZeroNets sont \"sandbox\u00e9s\", ils ont les m\u00eames privil\u00e8ges que n'importe quel site sur internet. Vous \u00eates en plein contr\u00f4le de ce que vous h\u00e9bergez. Si vous trouvez du contenu suspicieux, vous pouvez arr\u00e9ter de le l'h\u00e9berger \u00e0 tout moment.","title":"Que se passe-t-il si quelqu'un int\u00e8gre du contenu malveillant ?"},{"location":"faq/#est-ce-quil-est-possible-dinstaller-zeronet-sur-une-machine-distante","text":"Oui, vous devez activer le plugin UiPassword en rennomant le r\u00e9pertoire plugins/disabled-UiPassword en plugins/UiPassword , ensuite relancer ZeroNet sur la machine avec la commande zeronet.py --ui_ip \"*\" --ui_password anypassword . Cela reliera le serveur web ZeroNet UI \u00e0 toutes les interfaces, mais pour le garde s\u00e9curis\u00e9 vous pouvez seulement y acc\u00e9der en y entrant le mot de passe. Tip: Vous pouvez aussi restreindre l'acc\u00e8s par IP en utilisant l'option --ui_restrict ip1 ip2 . Tip: Vous pouvez sp\u00e9cifier le mot de passe dans le fichier de configuration zeronet.conf en ajoutant les lignes [global] et ui_password = anypassword .","title":"Est-ce qu'il est possible d'installer ZeroNet sur une machine distante ?"},{"location":"faq/#est-ce-quil-est-possible-de-traquer-la-bande-passante-utilise-par-zeronet","text":"The ratio re\u00e7u/envoy\u00e9 est affich\u00e9 dans le menu ZeroNet. (vous pouvez l'ouvrir en faisant glisser le bouton 0 en haut \u00e0 gauche) Tip: Page contenant les statistiques : http://127.0.0.1:43110/Stats","title":"Est-ce qu'il est possible de traquer la bande passante utilis\u00e9 par ZeroNet ?"},{"location":"faq/#que-se-passe-t-il-si-deux-personnes-utilisent-la-meme-clef-pour-modifier-un-site","text":"Chaque fichier content.json est horodat\u00e9, les clients choisissent toujours la verssion la plus r\u00e9cente et avec une signateure valide.","title":"Que se passe-t-il si deux personnes utilisent la m\u00eame clef pour modifier un site ?"},{"location":"faq/#est-ce-que-zeronet-utilise-la-blockchain-de-bitcoin","text":"Non, ZeroNet utilise seulement la cryptographie de Bitcoin pour les adresses des sites et signer/v\u00e9rifier le contenu. L'identification des utilisateurs repose sur le standard BIP32 . La blockchain de Namecoin est n\u00e9amoins utilis\u00e9 pour l'enregistrement des noms de domaines, cependant les clients ne la t\u00e9l\u00e9charge pas. Les m\u00e9tadonn\u00e9es sont pass\u00e9s via le r\u00e9seau ZeroNet.","title":"Est-ce que ZeroNet utilise la blockchain de Bitcoin ?"},{"location":"faq/#est-ce-que-zeronet-supporte-seulement-les-pages-htmlcss","text":"ZeroNet a \u00e9t\u00e9 construit pour h\u00e9berger des sites dynamiques avec des mise \u00e0 jour en temps r\u00e9el, mais vous pouvez servir n'importe quel genre de fichiers, comme des r\u00e9pertoires VCS, votre propre client l\u00e9ger, base de donn\u00e9e, etc.","title":"Est-ce que ZeroNet supporte seulement les pages HTML/CSS ?"},{"location":"faq/#comment-creer-un-nouveau-site","text":"Suivez ces instructions.","title":"Comment cr\u00e9er un nouveau site ?"},{"location":"faq/#que-se-passe-t-il-quand-jaccede-a-un-site","text":"Lorsque vous visitez un nouveau site, ZeroNet demande les adresses IP de visiteurs pr\u00e9c\u00e9dents aux traqueurs BitTorrent. En premier, un fichier nomm\u00e9 content.json est t\u00e9l\u00e9charg\u00e9. Il contient tout les noms de fichiers, leurs hashes et la signature cryptographique du propri\u00e9taire. Le fichier content.json t\u00e9l\u00e9charg\u00e9 est ensuite v\u00e9rifi\u00e9 en utilisant la clef publique du site et la signature du propri\u00e9taire du site. Les autres fichiers (html, css, js...) sont ensuite t\u00e9l\u00e9charg\u00e9 et v\u00e9rifi\u00e9 en les comparant \u00e0 leur hash SHA256 inscrit dans le fichier content.json. Chaque site visit\u00e9 sera ensuite distribu\u00e9 par vous . Si le propri\u00e9taire du site (celui qui a la clef priv\u00e9e associ\u00e9e \u00e0 l'adresse du site) modifie le site, alors la personne signe le nouveau content.json et le publie \u00e0 ses pairs . Apr\u00e8s que ces derniers ont bien v\u00e9rifi\u00e9 l'int\u00e9grit\u00e9 du fichier (via la signature), ils peuvent t\u00e9l\u00e9charg\u00e9 le contenu modifi\u00e9 et le distribu\u00e9 \u00e0 leur tour \u00e0 leurs pairs. Plus d'info: exemple de sites ZeroNet , Pr\u00e9sentation sur le r\u00e9seau ZeroNet","title":"Que se passe-t-il quand j'acc\u00e8de \u00e0 un site ?"},{"location":"translation/","text":"Traduction documentation Ici les instructions pour aider \u00e0 la traduction.","title":"Traduction documentation"},{"location":"translation/#traduction-documentation","text":"Ici les instructions pour aider \u00e0 la traduction.","title":"Traduction documentation"},{"location":"help_zeronet/coding_conventions/","text":"Les standards de programmation pour contribuer \u00e0 ZeroNet Suivre PEP8 Simple est mieux que complexe L'optimisation pr\u00e9matur\u00e9e est la racine du mal Nommage NomDeClasse: Capital, CamelCased nomDeFonction: commence avec une minuscule, camelCased nom_de_variable: en minuscule, avec un under_score Variables file_path: chemin relative au r\u00e9pertoire de travail (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: fichier relative au r\u00e9pertoire du site (css/all.css) file_name: all.css file: Objet fichier en python privatekey: Clef priv\u00e9e du site (sans _) Fichiers sources, r\u00e9pertoires et nommage Une classe par fichier de pr\u00e9f\u00e9r\u00e9nce Nom du fichier et du r\u00e9pertoire vient du NomDeClasse : WorkerManager class = Worker/WorkerManager.py","title":"Les standards de programmation pour contribuer \u00e0 ZeroNet"},{"location":"help_zeronet/coding_conventions/#les-standards-de-programmation-pour-contribuer-a-zeronet","text":"Suivre PEP8 Simple est mieux que complexe L'optimisation pr\u00e9matur\u00e9e est la racine du mal","title":"Les standards de programmation pour contribuer \u00e0 ZeroNet"},{"location":"help_zeronet/coding_conventions/#nommage","text":"NomDeClasse: Capital, CamelCased nomDeFonction: commence avec une minuscule, camelCased nom_de_variable: en minuscule, avec un under_score","title":"Nommage"},{"location":"help_zeronet/coding_conventions/#variables","text":"file_path: chemin relative au r\u00e9pertoire de travail (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: fichier relative au r\u00e9pertoire du site (css/all.css) file_name: all.css file: Objet fichier en python privatekey: Clef priv\u00e9e du site (sans _)","title":"Variables"},{"location":"help_zeronet/coding_conventions/#fichiers-sources-repertoires-et-nommage","text":"Une classe par fichier de pr\u00e9f\u00e9r\u00e9nce Nom du fichier et du r\u00e9pertoire vient du NomDeClasse : WorkerManager class = Worker/WorkerManager.py","title":"Fichiers sources, r\u00e9pertoires et nommage"},{"location":"help_zeronet/contributing/","text":"Contribuer \u00e0 ZeroNet Merci \u00e0 vous d'utiliser ZeroNet. ZeroNet est un effort collaborative de 67+ enthousiastes juste comme vous. Nous avons besoin d'utilisateurs qui reportent des bugs, am\u00e9liorent la documentation et partagent leurs id\u00e9es/exp\u00e9riences en d\u00e9velopement de protocole. Voici quelques informations sur comment vous pouvez contribuer au projet. Vous n'avez pas besoin d'\u00e9crire du code En r\u00e9alit\u00e9, la majorit\u00e9 des contributeurs ne soumettent pas de code source. M\u00eame si vous pouvez \u00e9crire en language de programmations, tout autre forme de contribution est la bienvenue. Est-ce que vous aimez \u00e9crire ? Ecrivez sur ZeroNet. Ecrivez des tutoriels pour aider les gens \u00e0 commencer. Aidez \u00e0 traduire ZeroNet. Am\u00e9liorez cette documentation. Cette page a \u00e9t\u00e9 r\u00e9dig\u00e9 par de nombreux membres de la communaut\u00e9 partout dans le monde. Est-ce que vous aimez aider les gens ? Abonnez-vous \u00e0 notre issue tracker sur Github et aider \u00e0 r\u00e9soudre les probl\u00e8mes. Rejoignez-nous sur Gitter et notre IRC #zeronet @ freenode et aidez \u00e0 r\u00e9pondre aux questions. Mettez en place une seed box et aider \u00e0 rendre le r\u00e9seau plus performant. Est-ce que vous aimez cr\u00e9er des sites ? Cr\u00e9ez un nouveau site. Essayez et cr\u00e9ez votre propre blog sur ZeroNet. C'est facile et \u00e7a co\u00fbte presque rien. \u201cLe contenu est roi !\u201d comme le dit NoFish. Le r\u00e9seau ne sert \u00e0 rien sans contenu, c'est maintenant \u00e0 vous d'en faire un super r\u00e9seau. Est-ce que vous aimez faire des recherches ? Aidez nous \u00e0 r\u00e9soudre les probl\u00e8mes les plus difficiles . Rejoignez les discussions sur comment apporter de nouvelles fonctionalit\u00e9es comme I2P et l'ajout de DHT . Est-ce que vous d\u00e9tenez un Raspberry Pi , un C.H.I.P. ou un un router ? Essayez de faire tourner ZeroNet dessus et partagez votre exp\u00e9rience avec les autres. Vous aimez programmer ? Si vous connaissez Python, vous pouvez choisir une t\u00e2che sur le Github du projet . Vous \u00eates aussi inviter \u00e0 d\u00e9veloper votre propre id\u00e9e. Avant de commencer, ouvrez une nouvelle discussion pour partager votre id\u00e9e, \u00eatre sure d'aller dans la bonne direction et collaborer avec d'autres membres. Gardez votre style consistant. Pour faciliter la collaboration veillez \u00e0 suivre les conventions d\u00e9critent ci-dessous. Est-ce que vous souhaiter offrir votre soutien financier ? Vous pouvez donner des bitcoins pour supporter ZeroNet. Les standards de programmation Suivre PEP8 Simple est mieux que complexe L'optimisation pr\u00e9matur\u00e9e est la racine du mal Nommage NomDeClasse: Capital, CamelCased nomDeFonction: commence avec une minuscule, camelCased nom_de_variable: en minuscule, avec un under_score Variables file_path: chemin relative au r\u00e9pertoire de travail (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: fichier relative au r\u00e9pertoire du site (css/all.css) file_name: all.css file: Objet fichier en python privatekey: Clef priv\u00e9e du site (sans _) Fichiers sources, r\u00e9pertoires et nommage Une classe par fichier de pr\u00e9f\u00e9r\u00e9nce Nom du fichier et du r\u00e9pertoire vient du NomDeClasse : WorkerManager class = Worker/WorkerManager.py","title":"Contribuer \u00e0 ZeroNet"},{"location":"help_zeronet/contributing/#contribuer-a-zeronet","text":"Merci \u00e0 vous d'utiliser ZeroNet. ZeroNet est un effort collaborative de 67+ enthousiastes juste comme vous. Nous avons besoin d'utilisateurs qui reportent des bugs, am\u00e9liorent la documentation et partagent leurs id\u00e9es/exp\u00e9riences en d\u00e9velopement de protocole. Voici quelques informations sur comment vous pouvez contribuer au projet.","title":"Contribuer \u00e0 ZeroNet"},{"location":"help_zeronet/contributing/#vous-navez-pas-besoin-decrire-du-code","text":"En r\u00e9alit\u00e9, la majorit\u00e9 des contributeurs ne soumettent pas de code source. M\u00eame si vous pouvez \u00e9crire en language de programmations, tout autre forme de contribution est la bienvenue.","title":"Vous n'avez pas besoin d'\u00e9crire du code"},{"location":"help_zeronet/contributing/#est-ce-que-vous-aimez-ecrire","text":"Ecrivez sur ZeroNet. Ecrivez des tutoriels pour aider les gens \u00e0 commencer. Aidez \u00e0 traduire ZeroNet. Am\u00e9liorez cette documentation. Cette page a \u00e9t\u00e9 r\u00e9dig\u00e9 par de nombreux membres de la communaut\u00e9 partout dans le monde.","title":"Est-ce que vous aimez \u00e9crire ?"},{"location":"help_zeronet/contributing/#est-ce-que-vous-aimez-aider-les-gens","text":"Abonnez-vous \u00e0 notre issue tracker sur Github et aider \u00e0 r\u00e9soudre les probl\u00e8mes. Rejoignez-nous sur Gitter et notre IRC #zeronet @ freenode et aidez \u00e0 r\u00e9pondre aux questions. Mettez en place une seed box et aider \u00e0 rendre le r\u00e9seau plus performant.","title":"Est-ce que vous aimez aider les gens ?"},{"location":"help_zeronet/contributing/#est-ce-que-vous-aimez-creer-des-sites","text":"Cr\u00e9ez un nouveau site. Essayez et cr\u00e9ez votre propre blog sur ZeroNet. C'est facile et \u00e7a co\u00fbte presque rien. \u201cLe contenu est roi !\u201d comme le dit NoFish. Le r\u00e9seau ne sert \u00e0 rien sans contenu, c'est maintenant \u00e0 vous d'en faire un super r\u00e9seau.","title":"Est-ce que vous aimez cr\u00e9er des sites ?"},{"location":"help_zeronet/contributing/#est-ce-que-vous-aimez-faire-des-recherches","text":"Aidez nous \u00e0 r\u00e9soudre les probl\u00e8mes les plus difficiles . Rejoignez les discussions sur comment apporter de nouvelles fonctionalit\u00e9es comme I2P et l'ajout de DHT . Est-ce que vous d\u00e9tenez un Raspberry Pi , un C.H.I.P. ou un un router ? Essayez de faire tourner ZeroNet dessus et partagez votre exp\u00e9rience avec les autres.","title":"Est-ce que vous aimez faire des recherches ?"},{"location":"help_zeronet/contributing/#vous-aimez-programmer","text":"Si vous connaissez Python, vous pouvez choisir une t\u00e2che sur le Github du projet . Vous \u00eates aussi inviter \u00e0 d\u00e9veloper votre propre id\u00e9e. Avant de commencer, ouvrez une nouvelle discussion pour partager votre id\u00e9e, \u00eatre sure d'aller dans la bonne direction et collaborer avec d'autres membres. Gardez votre style consistant. Pour faciliter la collaboration veillez \u00e0 suivre les conventions d\u00e9critent ci-dessous.","title":"Vous aimez programmer ?"},{"location":"help_zeronet/contributing/#est-ce-que-vous-souhaiter-offrir-votre-soutien-financier","text":"Vous pouvez donner des bitcoins pour supporter ZeroNet.","title":"Est-ce que vous souhaiter offrir votre soutien financier ?"},{"location":"help_zeronet/contributing/#les-standards-de-programmation","text":"Suivre PEP8 Simple est mieux que complexe L'optimisation pr\u00e9matur\u00e9e est la racine du mal","title":"Les standards de programmation"},{"location":"help_zeronet/contributing/#nommage","text":"NomDeClasse: Capital, CamelCased nomDeFonction: commence avec une minuscule, camelCased nom_de_variable: en minuscule, avec un under_score","title":"Nommage"},{"location":"help_zeronet/contributing/#variables","text":"file_path: chemin relative au r\u00e9pertoire de travail (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: fichier relative au r\u00e9pertoire du site (css/all.css) file_name: all.css file: Objet fichier en python privatekey: Clef priv\u00e9e du site (sans _)","title":"Variables"},{"location":"help_zeronet/contributing/#fichiers-sources-repertoires-et-nommage","text":"Une classe par fichier de pr\u00e9f\u00e9r\u00e9nce Nom du fichier et du r\u00e9pertoire vient du NomDeClasse : WorkerManager class = Worker/WorkerManager.py","title":"Fichiers sources, r\u00e9pertoires et nommage"},{"location":"help_zeronet/donate/","text":"Contribution financi\u00e8re ZeroNet Donation g\u00e9n\u00e9ral pour le d\u00e9velopment de ZeroNet ou avec PayPal: Bitmessage int\u00e9gration Envoyer et recevoir des messages Bitmessage Avantages : Envoyer votre requ\u00e8te de permission au propri\u00e9taire du site via bitmessage Possibilit\u00e9 d'int\u00e9grer un webui priv\u00e9e pour les messages/commentaires sur les sites Github issue Int\u00e9gration Namecoin (done in version 0.2.8) Utiliser les noms de domaines Namecoin pour acc\u00e9der aux sites Avantages : Adresses lisible et facile \u00e0 retenir Github issue DHT Int\u00e9gration D\u00e9couverte de pair via DHT (comme pour BitTorrent) Avantages : La d\u00e9couverte de pair ne d\u00e9pendra plus du r\u00e9seau torrent Ipv6 et d\u00e9couverte de pair Tor Github issue Sites priv\u00e9s Site avec authorization utilisant un mot de passe ou bas\u00e9 sur un syst\u00e8me de cl\u00e9 publique Avantages : Contr\u00f4le sur quel pair a acc\u00e8s \u00e0 votre site Github issue Tor int\u00e9gration (done in version 0.3.5) Allow to seed sites and connect other peers using Tor network (Probably depends on DHT support) Benefits: Hiding your IP when distributing new content or downloading site Github issue Multiuser proxy support (done in version 0.2.7) User login/logout using bip32 master seed Benefits: Makes open ZeroNet proxies usable Use local ZeroNet more than one user Github issue Where does the donation go? The task's received donation goes directly to the developer(s) who successfully and properly integrates the feature (please add your plans and ideas to the issue before you start working on anything big). Sponsors Better OSX/Safari compatibility made possible by BrowserStack.com","title":"Contribution financi\u00e8re"},{"location":"help_zeronet/donate/#contribution-financiere","text":"","title":"Contribution financi\u00e8re"},{"location":"help_zeronet/donate/#zeronet","text":"Donation g\u00e9n\u00e9ral pour le d\u00e9velopment de ZeroNet ou avec PayPal:","title":"ZeroNet"},{"location":"help_zeronet/donate/#bitmessage-integration","text":"Envoyer et recevoir des messages Bitmessage Avantages : Envoyer votre requ\u00e8te de permission au propri\u00e9taire du site via bitmessage Possibilit\u00e9 d'int\u00e9grer un webui priv\u00e9e pour les messages/commentaires sur les sites Github issue","title":"Bitmessage int\u00e9gration"},{"location":"help_zeronet/donate/#integration-namecoin-done-in-version-028","text":"Utiliser les noms de domaines Namecoin pour acc\u00e9der aux sites Avantages : Adresses lisible et facile \u00e0 retenir Github issue","title":"Int\u00e9gration Namecoin (done in version 0.2.8)"},{"location":"help_zeronet/donate/#dht-integration","text":"D\u00e9couverte de pair via DHT (comme pour BitTorrent) Avantages : La d\u00e9couverte de pair ne d\u00e9pendra plus du r\u00e9seau torrent Ipv6 et d\u00e9couverte de pair Tor Github issue","title":"DHT Int\u00e9gration"},{"location":"help_zeronet/donate/#sites-prives","text":"Site avec authorization utilisant un mot de passe ou bas\u00e9 sur un syst\u00e8me de cl\u00e9 publique Avantages : Contr\u00f4le sur quel pair a acc\u00e8s \u00e0 votre site Github issue","title":"Sites priv\u00e9s"},{"location":"help_zeronet/donate/#tor-integration-done-in-version-035","text":"Allow to seed sites and connect other peers using Tor network (Probably depends on DHT support) Benefits: Hiding your IP when distributing new content or downloading site Github issue","title":"Tor int\u00e9gration (done in version 0.3.5)"},{"location":"help_zeronet/donate/#multiuser-proxy-support-done-in-version-027","text":"User login/logout using bip32 master seed Benefits: Makes open ZeroNet proxies usable Use local ZeroNet more than one user Github issue","title":"Multiuser proxy support (done in version 0.2.7)"},{"location":"help_zeronet/donate/#where-does-the-donation-go","text":"The task's received donation goes directly to the developer(s) who successfully and properly integrates the feature (please add your plans and ideas to the issue before you start working on anything big).","title":"Where does the donation go?"},{"location":"help_zeronet/donate/#sponsors","text":"Better OSX/Safari compatibility made possible by BrowserStack.com","title":"Sponsors"},{"location":"help_zeronet/network_protocol/","text":"Le protocole r\u00e9seau ZeroNet Tous les messages sont encod\u00e9s avec MessagePack Toute requ\u00eate poss\u00e8de 3 param\u00e8tres: cmd : La requ\u00eate commande req_id : L'unique id de la requ\u00eate (simple, nonce incr\u00e9ment\u00e9 \u00e0 chaque connection) params : Param\u00e8tre de la requ\u00eate Exemple de requ\u00eate : {\"cmd\": \"getFile\", \"req_id\": 1, \"params:\" {\"site\": \"1EU...\", \"inner_path\": \"content.json\", \"location\": 0}} Exemple de r\u00e9ponse : {\"cmd\": \"response\", \"to\": 1, \"body\": \"content.json content\", \"location\": 1132, \"size\": 1132} Exemple de r\u00e9ponse signalant une erreur: {\"cmd\": \"response\", \"to\": 1, \"error\": \"Unknown site\"} Poign\u00e9e de main (Handshake) Chaque connection commence avec une poign\u00e9e de main en envoyant une requ\u00eate \u00e0 l'adresse du r\u00e9seau sp\u00e9cifi\u00e9e : Param\u00e8tre Description crypt Null/None, seulement utilis\u00e9 dans les r\u00e9ponses crypt_supported Une collection de m\u00e9thode de chiffrement support\u00e9e par le client fileserver_port Le port de distribution des fichiers du client onion (Seulement avec Tor) L'adresse onion du client protocol La version du protocole utilis\u00e9 (v1 ou v2) port_opened Le status du port client du client peer_id (Pas utilis\u00e9 avec Tor) L'id du client rev La version de r\u00e9vision du client version La version du client target_ip L'adresse du serveur sur le r\u00e9seau La cible initialise la connection chiffr\u00e9e via socket en se basant sur le param\u00e8tre crypt_supported , puis retourne : R\u00e9sultat Description crypt La m\u00e9thode de chrifremment utilis\u00e9e crypt_supported Une collection de m\u00e9thode de chiffrement support\u00e9e par le serveur fileserver_port Le port de distribution des fichiers du serveur onion (Seulement avec Tor) L'adresse onion du serveur protocol La version du protocole utilis\u00e9 (v1 ou v2) port_opened Le status du port client du serveur peer_id (Pas utilis\u00e9 avec Tor) L'id du serveur rev La version de r\u00e9vision du serveur version La version du serveur target_ip L'adresse du client sur le r\u00e9seau Note: Pas de chiffrement sur utilis\u00e9 pour les connections en .onion car le r\u00e9seau Tor a d\u00e9j\u00e0 une couche de chiffrement activ\u00e9 par d\u00e9faut. Note: Vous pouvez aussi explicitement initialis\u00e9 SSL avant le \"handshake\" si vous pensez que le client le supporte. Example : Envoi \"Handshake\": { cmd : handshake , req_id : 0 , params : { crypt : None , crypt_supported : [ tls-rsa ], fileserver_port : 15441 , onion : zp2ynpztyxj2kw7x , protocol : v2 , port_opened : True , peer_id : -ZN0056-DMK3XX30mOrw , rev : 2122 , target_ip : 192.168.1.13 , version : 0.5.6 } } R\u00e9sultat: { protocol : v2 , onion : boot3rdez4rzn36x , to : 0, crypt : None, cmd : response , rev : 2092, crypt_supported : [], target_ip : zp2ynpztyxj2kw7x.onion , version : 0.5.5 , fileserver_port : 15441, port_opened : False, peer_id : } Requ\u00eates de pair getFile site , inner_path , location , [file_size] Requ\u00eate d'un fichier depuis le client Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path Chemin relative du fichier dans le r\u00e9pertoire du site location Demander ce fichier en commen\u00e7ant par ce byte (max 512 bytes sont envoy\u00e9s dans la requ\u00eate, donc il faut plusieurs requ\u00eates pour un large fichier) file_size Taille totale du fichier demand\u00e9 (optionel) Return : R\u00e9sultat D\u00e9scription body Le contenu du fichier demand\u00e9 location La place du dernier byte envoy\u00e9 dans le fichier size La taille totale du fichier streamFile site , inner_path , location , [file_size] Stream un fichier depuis le client Return : R\u00e9sultat D\u00e9scription stream_bytes La taille des donn\u00e9es du fichier apr\u00e8s MessagePack payload Afin d'\u00e9viter d'avoir python-msgpack s\u00e9rialiser de cha\u00eene de cract\u00e8re trop cons\u00e9quent, le corps du fichier est directement ajout\u00e9 apr\u00e8s le MessagePack payload. Par exemple, { cmd : streamFile , id : 1, inner_path : content.json , size : 1234} { cmd : response , to : 1, stream_bytes : 1234} content of the file D\u00e9tail sur l'impl\u00e9mentation dans ZeroNet : Pour les s\u00e9gments de fichier plus gros que 256kb, le streaming est activ\u00e9 par d\u00e9faut. ping V\u00e9rifie si le client est toujours en vie Return : R\u00e9sultat D\u00e9scription body Pong pex site , peers , need Echange de paris avec le client. Pairs packag\u00e9 en 6 bytes (4 bytes IP avec inet_ntoa + 2 bytes pour le port) Pram\u00e8tres D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) peers Liste des pairs que la personne envoyant la requ\u00eate connait (packag\u00e9) peers_onion Liste des pairs Tor Onion que la personne envoyant connait (packag\u00e9) need Nombre de pairs demand\u00e9 Return : R\u00e9sultat D\u00e9scription peers Liste des pairs IPV4 connu pour ce site (packag\u00e9) peers_onion Liste des pairs Tor Onion pour ce site (packag\u00e9) Chaque \u00e9l\u00e8ment dans la liste peers est sous la forme d'adresse IPv4 packag\u00e9. Adresse IP Port 4 bytes 2 bytes Chaque \u00e9l\u00e8ment de la liste peers_onion est sous la forme d'adresse Tor Onion Service. B32-decoded onion address Port binary_str[0:-2] binary_str[-2:] Pour retrouver la l'adresse onion, passe la premi\u00e8re partie dans base64.b32encode puis ajoute .onion \u00e0 la valeur retourn\u00e9e. update site , inner_path , body , [diffs] Met \u00e0 jour le fichier d'un site. Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path Chemin relative du fichier dans le r\u00e9pertoire du site body Contenu du fichier content.json mis \u00e0 jour diffs (optionel) Code modifi\u00e9 (diff) des fichiers modifi\u00e9s dans le content.json Return : R\u00e9sultat D\u00e9scription ok Message de remerciement lors d'une mise \u00e0 jour r\u00e9ussite :) Format Diffs A \"dict\" qui contient les modifications Key: chemin du fichier modifi\u00e9 relative au content.json (eg.: data.json ) Value: La liste des diff opcodes pour le fichier (eg.: [['=', 5], ['+', '\\nhello new line'], ['-', 6]] ) Diff opcodes possibles: Opcode D\u00e9scription ['=', nombre de m\u00eame caract\u00e8re] Partie du fichier sans modification (eg.: ['=', 5] ) ['+', nouveau texte] Caract\u00e8res ajout\u00e9s (eg.: ['+', '\\nhello new line'] ) ['-', nombre de caract\u00e8re supprim\u00e9s] Caract\u00e8res suprim\u00e9s (eg.: ['-', 6] ) Apr\u00e8s avoir re\u00e7u la mise \u00e0 jour, le client essaye de patcher les fichiers en utilisant les diffs. Si le r\u00e9sultat ne correspond pas au hash SHA256 fourni par le fichier content.json (diff\u00e9rente version du fichier), le client re-t\u00e9l\u00e9charge le fichier dans son int\u00e9gralit\u00e9 depuis le pair qui a \u00e9mit le message de mis \u00e0 jour. Note: Les patches sont limit\u00e9s \u00e0 30KB par fichier et seulement utilis\u00e9 pour les fichiers en .json. listModified site , since Listes les fichiers r\u00e9pertori\u00e9s dans le content.json et modifi\u00e9 depuis le param\u00e8tre since envoy\u00e9. Il \u00e9tait utilis\u00e9 pour r\u00e9cup\u00e9rer le contenu soumit par un utilisateur du site. Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) since Liste des fichiers modifi\u00e9s depuis ce timestamp. Return : R\u00e9sultat D\u00e9scription modified_files Key: content.json inner_path Value: Date de la derni\u00e8re modification Exemple : zeronet.py --silent peerCmd 127.0 . 0.1 15441 listModified { site : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , since : 1497507030} { to : 1 , cmd : response , modified_files : { data/users/1NM9k7VJfrb1UWw5agAvyRfSn3ws1wTJ5U/content.json : 1497579272 , data/users/1QEfmMwKVxgR4rkREbdJYjgUmF3Zy8pwHt/content.json : 1497565986 , data/users/16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd/content.json : 1497575039 , data/users/1CjXarXgvcNeCJ2nMQxUi4DRFWp3GEur2W/content.json : 1497513808 , data/users/1L5rGDgTs4W2V7gekSvJNhKa7XaHkVwotD/content.json : 1497615798 , data/users/1LWuc6JBhUGrKEAh1aPrPU85dEMcKmg3pS/content.json : 1497594716 , data/users/1KdnTJVBGzEZrJppFZtzfG9chukuMv8xSb/content.json : 1497584640 , data/users/1GMNmr2bDPbT4c8yVnyCoDHke52CNCdqAa/content.json : 1497614188 , data/users/1GRm9rED83Tkfi3iWS9m3LWHiRpPZehWLd/content.json : 1497827772 , data/users/12Ugp53jiMdvj1Kxa1w7c2LcXUBdGPs1oK/content.json : 1497692901 , data/users/1F6BMqittjWUStzUbRXm2kG2GQ3RdBLqFQ/content.json : 1497571485 , data/users/1GgNo3CmxPd7n2pMSF3uyqf1XHvgtTUqCe/content.json : 1497560829 , data/users/16nArdxrSaNThNp83kL8E6NLL9WD98iUne/content.json : 1497627929 , data/users/16CAJkbfNRxNJq4aKdrZ2MSYFfFGvQ8JPi/content.json : 1497664899 , data/users/1DrBS2sTD3BX5BBxG8eqYsxXSvGt9kc5HE/content.json : 1497632000 , data/users/19sggoAZ4hcorrrfWoFWP9rwfpVsL29cnZ/content.json : 1497928134 , data/users/1NYpJupegoTXL4cFpkNdLNJ4XaAhTNhPe1/content.json : 1497535771 , data/users/1R67TfYzNkCnh89EFfGmXn5LMb4hXaMRQ/content.json : 1497691787 , data/users/1C9HXUYFSVafLxanwkaFPZRcRgCEGsj2Cn/content.json : 1497572833 , data/users/1LgoHzNGWeijeZbJ8a1YgGjMCnjaM4BWG/content.json : 1497620232 , content.json : 1497623639 } } getHashfield site R\u00e9cup\u00e9rer les identifiants uniques des fichiers optionels . Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) Return : R\u00e9sultat D\u00e9scription hashfield_raw Identifiants des fichiers optionels encod\u00e9s avec array.array(\"H\", [1000, 1001..]).tostring() Exemple : zeronet.py --silent peerCmd 192.168 . 1.13 15441 getHashfield { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h } { to : 1, hashfield_raw : iG\\xde\\x02\\xc6o\\r;... , cmd : response } setHashfield site , hashfield_raw Ajoute la liste des identifiants des fichiers optionels que le client requ\u00eateur poss\u00e8de. Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hashfield_raw Identifiants des fichiers optionels encod\u00e9s avec array.array(\"H\", [1000, 1001..]).tostring() Return : R\u00e9sultat D\u00e9scription ok Mis \u00e0 jour :) findHashIds site , hash_ids Demande si le client connait un pair poss\u00e8dant ces hash_ids Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hash_ids Liste des identifiants des fichiers optionels que le client recherche Return : R\u00e9sultat D\u00e9scription peers Key: identifiant du fichier optionel Value: Liste des pairs ipv4 encod\u00e9s avec socket.inet_aton(ip) + struct.pack(\"H\", port) peers_onion Key: identifiant du fichier optionel Value: Liste des pairs onion encod\u00e9s avec base64.b32decode(onion.replace(\".onion\", \"\").upper()) + struct.pack(\"H\", port) Exemple : zeronet.py --silent peerCmd 192.168 . 1.13 15441 findHashIds { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h , hash_ids : [59948, 29811]} { to : 1, peers : { 29811: [ S 9\\xd3Q , f\\x94\\x98N\\xa4 , gIB\\x90Q , \\xb4\\xady\\xf7Q ], 59948: [ x\\xcc \\xf6Q , S\\xa1\\xddkQ , \\x05\\xac\\xe8\\x8dQ , \\x05\\xc4\\xe1\\x93Q , Q\\x02\\xed\\nQ ] } , cmd : response , peers_onion : { 29811: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ], 59948: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ] } } Identifiant pour fichier optionel Nombre entier repr\u00e9sentant les 4 premiers cract\u00e8res du hash : int( ea2c2acb30bd5e1249021976536574dd3f0fd83340e023bb4e78d0d818adf30a [0:4], 16) 59948 checkport port V\u00e9rifie le port sp\u00e9cifi\u00e9 de l'autre pair. Param\u00e8tre D\u00e9scription port Port \u00e0 v\u00e9rifier. Return : R\u00e9sultat D\u00e9scription status Statut du port sp\u00e9cifi\u00e9 (\"open\"/ouvert ou \"closed\"/ferm\u00e9) ip_external IP externe du demandeur Le plugin BigFile getPieceFields site Renvoie tous les morceaux de fichiers de tout les larges fichiers du client dans une liste. Param\u00e8tre D\u00e9scription site Adresse du site Return : R\u00e9sultat D\u00e9scription piecefields_packed Key: Hash Sha512/256 de la racine de merkle du large fichier Value: piecefield packag\u00e9. setPieceFields site , piecefields_packed Ajoute au client les piecefields pour ce site. Param\u00e8tre D\u00e9scription site Adresse du site piecefields_packed Key: Hash Sha512/256 de la racine de merkle du large fichier Value: piecefield packag\u00e9. Return : Return key Description ok Updated Bigfile piecefield D\u00e9tient les informations sur les pi\u00e8ces d'un large fichier, l'information est repr\u00e9sent\u00e9 par les valeurs 1/0 (1 = t\u00e9l\u00e9charg\u00e9, 0 = pas t\u00e9l\u00e9charg\u00e9). Example : 1110000001 signifie que le fichier est de taille 9-10MB et le client a t\u00e9l\u00e9charg\u00e9 le 3MB du debut du fichier et le dernier 1MB (chaque pi\u00e8ce fait 1MB).s Format packag\u00e9 : Transforme la cha\u00eene de cract\u00e8re en une liste d'entier en comptant le nombre de r\u00e9pititions en commen\u00e7ant avec 1 . Example : 1110000001 devient [3, 6, 1] , 0000000001 devient [0, 9, 1] , 1111111111 devient [10] Apr\u00e8s la conversion il est ensuite transform\u00e9 en un array avec array.array('H', piecefield) Bigfile merkle root Pendant la proc\u00e9dure qui consiste \u00e0 hasher un large fichier, en plus de collelecter les sha512/256 dans le fichier piecemap , l'algorithme calcule aussi le SHA-512/256 l'arbre de merkle avec l'outil merkle-tools . L'arbre de merkle est seulement utilis\u00e9 comme un identifiant unique pour le large fichier, pas (encore) pour v\u00e9rifier les morceaux du fichier. Note : L'arbre de merkle est choisi pour identifier le fichier, au lieu de l'actuel hash SHA-512/256 du fichier. De toute \u00e9vidence, utilisant ce dernier r\u00e9sultat pour le hasher deux fois. (une fois pour piecemap et une autre pour le fichier en entier) Note : L'arbre de merkle n'est pas utilis\u00e9 pour v\u00e9rifier l'int\u00e9grit\u00e9 des pi\u00e8ces ou du large fichier, parce que cela n\u00e9cessiterait beaucoup de bande passante et d'espace pour transf\u00e9rer et collecter les preuves partiels de v\u00e9rification, alors que le fichier piecemap est suffisant et prend moins de place. Bigfile piecemap Il contient les hashs SHA-512/256 de chaque morceau. La taille du morceau et le nom du ficher piecemap sont d\u00e9fini dans le content.json , exemple : ... files_optional : { bigfile.mp4 : { piece_size : 1048576, piecemap : bigfile.mp4.piecemap.msgpack , sha512 : d1f0d150e1e73bb1e684d370224315d7ba21e656189eb646ef7cc394d033bc2b , size : 42958831 }, ... Avec la structure d\u00e9finit, le fichier piecemap est packag\u00e9 au format msgpack : { b bigfile.mp4 : {b sha512_pieces : [ b e\\xde\\x0fx\\xec\\xc5LZ9\\x0e\\xe7\\x85E\\x1b\\xd5\\xe4C \\xe7req\\xe3 \\xff\\\\\\xbb\\xc8b\\xc2\\xc1\\x8e , b \\xef\\xe8\\xed\\xfe\\x16/\\x96\\xdb;;\\x06n[8_\\x06\\x9ak|\\xe1\\x9f\\xe1\\xaf\\x87\\x96\\xdd\\xfd\\x9bEf\\xd9! , b \\x1c\\xd6-\\x1f\\xce\\xde{\\xcd\\x01\\x93un =D\\x0brmB-\\xd1\\x8c\\xbf\\xfe\\xca\\x8a\\x1c\\xf60\\xbb\\xedD , b \\x1aQdF\\xd2\\xbc\\xdff{\\xb7\\x89\\xf2\\xd3\\r\\xa9\\xe1\\xefA-V\\x18\\xa4\\xc8e\\x13\\x88v\\x13\\\\ \\xfbW , ... ]} }","title":"Le protocole r\u00e9seau ZeroNet"},{"location":"help_zeronet/network_protocol/#le-protocole-reseau-zeronet","text":"Tous les messages sont encod\u00e9s avec MessagePack Toute requ\u00eate poss\u00e8de 3 param\u00e8tres: cmd : La requ\u00eate commande req_id : L'unique id de la requ\u00eate (simple, nonce incr\u00e9ment\u00e9 \u00e0 chaque connection) params : Param\u00e8tre de la requ\u00eate Exemple de requ\u00eate : {\"cmd\": \"getFile\", \"req_id\": 1, \"params:\" {\"site\": \"1EU...\", \"inner_path\": \"content.json\", \"location\": 0}} Exemple de r\u00e9ponse : {\"cmd\": \"response\", \"to\": 1, \"body\": \"content.json content\", \"location\": 1132, \"size\": 1132} Exemple de r\u00e9ponse signalant une erreur: {\"cmd\": \"response\", \"to\": 1, \"error\": \"Unknown site\"}","title":"Le protocole r\u00e9seau ZeroNet"},{"location":"help_zeronet/network_protocol/#poignee-de-main-handshake","text":"Chaque connection commence avec une poign\u00e9e de main en envoyant une requ\u00eate \u00e0 l'adresse du r\u00e9seau sp\u00e9cifi\u00e9e : Param\u00e8tre Description crypt Null/None, seulement utilis\u00e9 dans les r\u00e9ponses crypt_supported Une collection de m\u00e9thode de chiffrement support\u00e9e par le client fileserver_port Le port de distribution des fichiers du client onion (Seulement avec Tor) L'adresse onion du client protocol La version du protocole utilis\u00e9 (v1 ou v2) port_opened Le status du port client du client peer_id (Pas utilis\u00e9 avec Tor) L'id du client rev La version de r\u00e9vision du client version La version du client target_ip L'adresse du serveur sur le r\u00e9seau La cible initialise la connection chiffr\u00e9e via socket en se basant sur le param\u00e8tre crypt_supported , puis retourne : R\u00e9sultat Description crypt La m\u00e9thode de chrifremment utilis\u00e9e crypt_supported Une collection de m\u00e9thode de chiffrement support\u00e9e par le serveur fileserver_port Le port de distribution des fichiers du serveur onion (Seulement avec Tor) L'adresse onion du serveur protocol La version du protocole utilis\u00e9 (v1 ou v2) port_opened Le status du port client du serveur peer_id (Pas utilis\u00e9 avec Tor) L'id du serveur rev La version de r\u00e9vision du serveur version La version du serveur target_ip L'adresse du client sur le r\u00e9seau Note: Pas de chiffrement sur utilis\u00e9 pour les connections en .onion car le r\u00e9seau Tor a d\u00e9j\u00e0 une couche de chiffrement activ\u00e9 par d\u00e9faut. Note: Vous pouvez aussi explicitement initialis\u00e9 SSL avant le \"handshake\" si vous pensez que le client le supporte. Example : Envoi \"Handshake\": { cmd : handshake , req_id : 0 , params : { crypt : None , crypt_supported : [ tls-rsa ], fileserver_port : 15441 , onion : zp2ynpztyxj2kw7x , protocol : v2 , port_opened : True , peer_id : -ZN0056-DMK3XX30mOrw , rev : 2122 , target_ip : 192.168.1.13 , version : 0.5.6 } } R\u00e9sultat: { protocol : v2 , onion : boot3rdez4rzn36x , to : 0, crypt : None, cmd : response , rev : 2092, crypt_supported : [], target_ip : zp2ynpztyxj2kw7x.onion , version : 0.5.5 , fileserver_port : 15441, port_opened : False, peer_id : }","title":"Poign\u00e9e de main (Handshake)"},{"location":"help_zeronet/network_protocol/#requetes-de-pair","text":"","title":"Requ\u00eates de pair"},{"location":"help_zeronet/network_protocol/#getfile-site-inner_path-location-file_size","text":"Requ\u00eate d'un fichier depuis le client Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path Chemin relative du fichier dans le r\u00e9pertoire du site location Demander ce fichier en commen\u00e7ant par ce byte (max 512 bytes sont envoy\u00e9s dans la requ\u00eate, donc il faut plusieurs requ\u00eates pour un large fichier) file_size Taille totale du fichier demand\u00e9 (optionel) Return : R\u00e9sultat D\u00e9scription body Le contenu du fichier demand\u00e9 location La place du dernier byte envoy\u00e9 dans le fichier size La taille totale du fichier","title":"getFile site, inner_path, location, [file_size]"},{"location":"help_zeronet/network_protocol/#streamfile-site-inner_path-location-file_size","text":"Stream un fichier depuis le client Return : R\u00e9sultat D\u00e9scription stream_bytes La taille des donn\u00e9es du fichier apr\u00e8s MessagePack payload Afin d'\u00e9viter d'avoir python-msgpack s\u00e9rialiser de cha\u00eene de cract\u00e8re trop cons\u00e9quent, le corps du fichier est directement ajout\u00e9 apr\u00e8s le MessagePack payload. Par exemple, { cmd : streamFile , id : 1, inner_path : content.json , size : 1234} { cmd : response , to : 1, stream_bytes : 1234} content of the file D\u00e9tail sur l'impl\u00e9mentation dans ZeroNet : Pour les s\u00e9gments de fichier plus gros que 256kb, le streaming est activ\u00e9 par d\u00e9faut.","title":"streamFile site, inner_path, location, [file_size]"},{"location":"help_zeronet/network_protocol/#ping","text":"V\u00e9rifie si le client est toujours en vie Return : R\u00e9sultat D\u00e9scription body Pong","title":"ping"},{"location":"help_zeronet/network_protocol/#pex-site-peers-need","text":"Echange de paris avec le client. Pairs packag\u00e9 en 6 bytes (4 bytes IP avec inet_ntoa + 2 bytes pour le port) Pram\u00e8tres D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) peers Liste des pairs que la personne envoyant la requ\u00eate connait (packag\u00e9) peers_onion Liste des pairs Tor Onion que la personne envoyant connait (packag\u00e9) need Nombre de pairs demand\u00e9 Return : R\u00e9sultat D\u00e9scription peers Liste des pairs IPV4 connu pour ce site (packag\u00e9) peers_onion Liste des pairs Tor Onion pour ce site (packag\u00e9) Chaque \u00e9l\u00e8ment dans la liste peers est sous la forme d'adresse IPv4 packag\u00e9. Adresse IP Port 4 bytes 2 bytes Chaque \u00e9l\u00e8ment de la liste peers_onion est sous la forme d'adresse Tor Onion Service. B32-decoded onion address Port binary_str[0:-2] binary_str[-2:]","title":"pex site, peers, need"},{"location":"help_zeronet/network_protocol/#pour-retrouver-la-ladresse-onion-passe-la-premiere-partie-dans-base64b32encode-puis-ajoute-onion-a-la-valeur-retournee","text":"","title":"Pour retrouver la l'adresse onion, passe la premi\u00e8re partie dans base64.b32encode puis ajoute .onion \u00e0  la valeur retourn\u00e9e."},{"location":"help_zeronet/network_protocol/#update-site-inner_path-body-diffs","text":"Met \u00e0 jour le fichier d'un site. Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path Chemin relative du fichier dans le r\u00e9pertoire du site body Contenu du fichier content.json mis \u00e0 jour diffs (optionel) Code modifi\u00e9 (diff) des fichiers modifi\u00e9s dans le content.json Return : R\u00e9sultat D\u00e9scription ok Message de remerciement lors d'une mise \u00e0 jour r\u00e9ussite :)","title":"update site, inner_path, body, [diffs]"},{"location":"help_zeronet/network_protocol/#format-diffs","text":"A \"dict\" qui contient les modifications Key: chemin du fichier modifi\u00e9 relative au content.json (eg.: data.json ) Value: La liste des diff opcodes pour le fichier (eg.: [['=', 5], ['+', '\\nhello new line'], ['-', 6]] )","title":"Format Diffs"},{"location":"help_zeronet/network_protocol/#diff-opcodes-possibles","text":"Opcode D\u00e9scription ['=', nombre de m\u00eame caract\u00e8re] Partie du fichier sans modification (eg.: ['=', 5] ) ['+', nouveau texte] Caract\u00e8res ajout\u00e9s (eg.: ['+', '\\nhello new line'] ) ['-', nombre de caract\u00e8re supprim\u00e9s] Caract\u00e8res suprim\u00e9s (eg.: ['-', 6] ) Apr\u00e8s avoir re\u00e7u la mise \u00e0 jour, le client essaye de patcher les fichiers en utilisant les diffs. Si le r\u00e9sultat ne correspond pas au hash SHA256 fourni par le fichier content.json (diff\u00e9rente version du fichier), le client re-t\u00e9l\u00e9charge le fichier dans son int\u00e9gralit\u00e9 depuis le pair qui a \u00e9mit le message de mis \u00e0 jour. Note: Les patches sont limit\u00e9s \u00e0 30KB par fichier et seulement utilis\u00e9 pour les fichiers en .json.","title":"Diff opcodes possibles:"},{"location":"help_zeronet/network_protocol/#listmodified-site-since","text":"Listes les fichiers r\u00e9pertori\u00e9s dans le content.json et modifi\u00e9 depuis le param\u00e8tre since envoy\u00e9. Il \u00e9tait utilis\u00e9 pour r\u00e9cup\u00e9rer le contenu soumit par un utilisateur du site. Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) since Liste des fichiers modifi\u00e9s depuis ce timestamp. Return : R\u00e9sultat D\u00e9scription modified_files Key: content.json inner_path Value: Date de la derni\u00e8re modification Exemple : zeronet.py --silent peerCmd 127.0 . 0.1 15441 listModified { site : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , since : 1497507030} { to : 1 , cmd : response , modified_files : { data/users/1NM9k7VJfrb1UWw5agAvyRfSn3ws1wTJ5U/content.json : 1497579272 , data/users/1QEfmMwKVxgR4rkREbdJYjgUmF3Zy8pwHt/content.json : 1497565986 , data/users/16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd/content.json : 1497575039 , data/users/1CjXarXgvcNeCJ2nMQxUi4DRFWp3GEur2W/content.json : 1497513808 , data/users/1L5rGDgTs4W2V7gekSvJNhKa7XaHkVwotD/content.json : 1497615798 , data/users/1LWuc6JBhUGrKEAh1aPrPU85dEMcKmg3pS/content.json : 1497594716 , data/users/1KdnTJVBGzEZrJppFZtzfG9chukuMv8xSb/content.json : 1497584640 , data/users/1GMNmr2bDPbT4c8yVnyCoDHke52CNCdqAa/content.json : 1497614188 , data/users/1GRm9rED83Tkfi3iWS9m3LWHiRpPZehWLd/content.json : 1497827772 , data/users/12Ugp53jiMdvj1Kxa1w7c2LcXUBdGPs1oK/content.json : 1497692901 , data/users/1F6BMqittjWUStzUbRXm2kG2GQ3RdBLqFQ/content.json : 1497571485 , data/users/1GgNo3CmxPd7n2pMSF3uyqf1XHvgtTUqCe/content.json : 1497560829 , data/users/16nArdxrSaNThNp83kL8E6NLL9WD98iUne/content.json : 1497627929 , data/users/16CAJkbfNRxNJq4aKdrZ2MSYFfFGvQ8JPi/content.json : 1497664899 , data/users/1DrBS2sTD3BX5BBxG8eqYsxXSvGt9kc5HE/content.json : 1497632000 , data/users/19sggoAZ4hcorrrfWoFWP9rwfpVsL29cnZ/content.json : 1497928134 , data/users/1NYpJupegoTXL4cFpkNdLNJ4XaAhTNhPe1/content.json : 1497535771 , data/users/1R67TfYzNkCnh89EFfGmXn5LMb4hXaMRQ/content.json : 1497691787 , data/users/1C9HXUYFSVafLxanwkaFPZRcRgCEGsj2Cn/content.json : 1497572833 , data/users/1LgoHzNGWeijeZbJ8a1YgGjMCnjaM4BWG/content.json : 1497620232 , content.json : 1497623639 } }","title":"listModified site, since"},{"location":"help_zeronet/network_protocol/#gethashfield-site","text":"R\u00e9cup\u00e9rer les identifiants uniques des fichiers optionels . Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) Return : R\u00e9sultat D\u00e9scription hashfield_raw Identifiants des fichiers optionels encod\u00e9s avec array.array(\"H\", [1000, 1001..]).tostring() Exemple : zeronet.py --silent peerCmd 192.168 . 1.13 15441 getHashfield { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h } { to : 1, hashfield_raw : iG\\xde\\x02\\xc6o\\r;... , cmd : response }","title":"getHashfield site"},{"location":"help_zeronet/network_protocol/#sethashfield-site-hashfield_raw","text":"Ajoute la liste des identifiants des fichiers optionels que le client requ\u00eateur poss\u00e8de. Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hashfield_raw Identifiants des fichiers optionels encod\u00e9s avec array.array(\"H\", [1000, 1001..]).tostring() Return : R\u00e9sultat D\u00e9scription ok Mis \u00e0 jour :)","title":"setHashfield site, hashfield_raw"},{"location":"help_zeronet/network_protocol/#findhashids-site-hash_ids","text":"Demande si le client connait un pair poss\u00e8dant ces hash_ids Param\u00e8tre D\u00e9scription site Adresse du site (exemple: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hash_ids Liste des identifiants des fichiers optionels que le client recherche Return : R\u00e9sultat D\u00e9scription peers Key: identifiant du fichier optionel Value: Liste des pairs ipv4 encod\u00e9s avec socket.inet_aton(ip) + struct.pack(\"H\", port) peers_onion Key: identifiant du fichier optionel Value: Liste des pairs onion encod\u00e9s avec base64.b32decode(onion.replace(\".onion\", \"\").upper()) + struct.pack(\"H\", port) Exemple : zeronet.py --silent peerCmd 192.168 . 1.13 15441 findHashIds { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h , hash_ids : [59948, 29811]} { to : 1, peers : { 29811: [ S 9\\xd3Q , f\\x94\\x98N\\xa4 , gIB\\x90Q , \\xb4\\xady\\xf7Q ], 59948: [ x\\xcc \\xf6Q , S\\xa1\\xddkQ , \\x05\\xac\\xe8\\x8dQ , \\x05\\xc4\\xe1\\x93Q , Q\\x02\\xed\\nQ ] } , cmd : response , peers_onion : { 29811: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ], 59948: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ] } }","title":"findHashIds site, hash_ids"},{"location":"help_zeronet/network_protocol/#identifiant-pour-fichier-optionel","text":"Nombre entier repr\u00e9sentant les 4 premiers cract\u00e8res du hash : int( ea2c2acb30bd5e1249021976536574dd3f0fd83340e023bb4e78d0d818adf30a [0:4], 16) 59948","title":"Identifiant pour fichier optionel"},{"location":"help_zeronet/network_protocol/#checkport-port","text":"V\u00e9rifie le port sp\u00e9cifi\u00e9 de l'autre pair. Param\u00e8tre D\u00e9scription port Port \u00e0 v\u00e9rifier. Return : R\u00e9sultat D\u00e9scription status Statut du port sp\u00e9cifi\u00e9 (\"open\"/ouvert ou \"closed\"/ferm\u00e9) ip_external IP externe du demandeur","title":"checkport port"},{"location":"help_zeronet/network_protocol/#le-plugin-bigfile","text":"","title":"Le plugin BigFile"},{"location":"help_zeronet/network_protocol/#getpiecefields-site","text":"Renvoie tous les morceaux de fichiers de tout les larges fichiers du client dans une liste. Param\u00e8tre D\u00e9scription site Adresse du site Return : R\u00e9sultat D\u00e9scription piecefields_packed Key: Hash Sha512/256 de la racine de merkle du large fichier Value: piecefield packag\u00e9.","title":"getPieceFields site"},{"location":"help_zeronet/network_protocol/#setpiecefields-site-piecefields_packed","text":"Ajoute au client les piecefields pour ce site. Param\u00e8tre D\u00e9scription site Adresse du site piecefields_packed Key: Hash Sha512/256 de la racine de merkle du large fichier Value: piecefield packag\u00e9. Return : Return key Description ok Updated","title":"setPieceFields site, piecefields_packed"},{"location":"help_zeronet/network_protocol/#bigfile-piecefield","text":"D\u00e9tient les informations sur les pi\u00e8ces d'un large fichier, l'information est repr\u00e9sent\u00e9 par les valeurs 1/0 (1 = t\u00e9l\u00e9charg\u00e9, 0 = pas t\u00e9l\u00e9charg\u00e9). Example : 1110000001 signifie que le fichier est de taille 9-10MB et le client a t\u00e9l\u00e9charg\u00e9 le 3MB du debut du fichier et le dernier 1MB (chaque pi\u00e8ce fait 1MB).s Format packag\u00e9 : Transforme la cha\u00eene de cract\u00e8re en une liste d'entier en comptant le nombre de r\u00e9pititions en commen\u00e7ant avec 1 . Example : 1110000001 devient [3, 6, 1] , 0000000001 devient [0, 9, 1] , 1111111111 devient [10] Apr\u00e8s la conversion il est ensuite transform\u00e9 en un array avec array.array('H', piecefield)","title":"Bigfile piecefield"},{"location":"help_zeronet/network_protocol/#bigfile-merkle-root","text":"Pendant la proc\u00e9dure qui consiste \u00e0 hasher un large fichier, en plus de collelecter les sha512/256 dans le fichier piecemap , l'algorithme calcule aussi le SHA-512/256 l'arbre de merkle avec l'outil merkle-tools . L'arbre de merkle est seulement utilis\u00e9 comme un identifiant unique pour le large fichier, pas (encore) pour v\u00e9rifier les morceaux du fichier. Note : L'arbre de merkle est choisi pour identifier le fichier, au lieu de l'actuel hash SHA-512/256 du fichier. De toute \u00e9vidence, utilisant ce dernier r\u00e9sultat pour le hasher deux fois. (une fois pour piecemap et une autre pour le fichier en entier) Note : L'arbre de merkle n'est pas utilis\u00e9 pour v\u00e9rifier l'int\u00e9grit\u00e9 des pi\u00e8ces ou du large fichier, parce que cela n\u00e9cessiterait beaucoup de bande passante et d'espace pour transf\u00e9rer et collecter les preuves partiels de v\u00e9rification, alors que le fichier piecemap est suffisant et prend moins de place.","title":"Bigfile merkle root"},{"location":"help_zeronet/network_protocol/#bigfile-piecemap","text":"Il contient les hashs SHA-512/256 de chaque morceau. La taille du morceau et le nom du ficher piecemap sont d\u00e9fini dans le content.json , exemple : ... files_optional : { bigfile.mp4 : { piece_size : 1048576, piecemap : bigfile.mp4.piecemap.msgpack , sha512 : d1f0d150e1e73bb1e684d370224315d7ba21e656189eb646ef7cc394d033bc2b , size : 42958831 }, ... Avec la structure d\u00e9finit, le fichier piecemap est packag\u00e9 au format msgpack : { b bigfile.mp4 : {b sha512_pieces : [ b e\\xde\\x0fx\\xec\\xc5LZ9\\x0e\\xe7\\x85E\\x1b\\xd5\\xe4C \\xe7req\\xe3 \\xff\\\\\\xbb\\xc8b\\xc2\\xc1\\x8e , b \\xef\\xe8\\xed\\xfe\\x16/\\x96\\xdb;;\\x06n[8_\\x06\\x9ak|\\xe1\\x9f\\xe1\\xaf\\x87\\x96\\xdd\\xfd\\x9bEf\\xd9! , b \\x1c\\xd6-\\x1f\\xce\\xde{\\xcd\\x01\\x93un =D\\x0brmB-\\xd1\\x8c\\xbf\\xfe\\xca\\x8a\\x1c\\xf60\\xbb\\xedD , b \\x1aQdF\\xd2\\xbc\\xdff{\\xb7\\x89\\xf2\\xd3\\r\\xa9\\xe1\\xefA-V\\x18\\xa4\\xc8e\\x13\\x88v\\x13\\\\ \\xfbW , ... ]} }","title":"Bigfile piecemap"},{"location":"site_development/cert_authority/","text":"Autorit\u00e9 de certification Un compte sans mot de passe ? Un certificat pour moi ? On peut noter que le syst\u00e8me d'identification de ZeroNet est \u00e9loign\u00e9 des conventions. Dans cette section, nous allons parler de comment les comptes utilisateurs et les autorit\u00e9s de certification fonctionnent dans ZeroNet. Qu'est ce qu'une autorit\u00e9 de certification fait ? Dans ZeroNet, tout est sign\u00e9 avec des clefs Bitcoin. Un certificat offre un nom lisible et unique pour une adresse Bitcoin. Une autorit\u00e9 de certification (ou un ) Format du certificat Corps Le corps d'un certificat contiens une adresse Bitcoin, un type de portail, et un nom d'utilisateur humainement lisible. [BitcoinAddress]#[PortalType]/[UserName] Exemple: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft#web/hellozeronet Adresse Bitcoin: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft Type de portail: web Nom d'utilisateur: hellozeronet R\u00e8gles g\u00e9n\u00e9rales: L'adresse Bitcoin, le type de portail et le nom d'utilisateur ne doit pas contenir les caract\u00e8res # , @ ou / . Seul les chiffres de 0-9 et les lettres a-z sont autoris\u00e9s dans le nom d'utilisateur. Toute les lettre anglaises dans le nom d'utilisateur doivent \u00eatre en minuscule. Les caract\u00e8res non autoris\u00e9s ne doivent pas \u00eatre utilis\u00e9 dans le nom d'utilisateur. Un nom d'utilisateur ne devrait pas \u00eatre trop long. Un nom d'utilisateur devrait \u00eatre lisible et ne devrait pas int\u00e9ref\u00e9rer avec le rendu de l'interface. Un nom d'utilisateur doit \u00eatre unique. Signature Un algorithm de signature de certificat utilise une clef secr\u00e8te et g\u00e9n\u00e8re une signature Bitcoin d\u00e9terministique pour le corps. Code source : sign = os . popen ( python zeronet.py --debug cryptSign %s #bitmsg/ %s %s 2 1 % ( auth_address , user_name , config . site_privatekey )) . readlines ()[ - 1 ] . strip () Certificat En regardant le code source de ZeroID, on note comment le certificat est stock\u00e9 dans la base de donn\u00e9e. data [ users ][ user_name ] = bitmsg, %s , %s % ( auth_address , sign ) Exemple: hellozeronet : web,1H28iygiKXe3GUMcD77HiifVqtf3858Aft,HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA= Un certficat peut \u00eatre stock\u00e9 sous de multiple formats. Cependant, tout les formats doivent inclure : L'adresse Bitcoin : 1H28iygiKXe3GUMcD77HiifVqtf3858Aft Le type de portail : web Le nomo d'utilisateur : hellozeronet La signature de l'autorit\u00e9: HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA= Utilisation dans content.json Les propri\u00e9taires des sites peuvent choisir quel autorit\u00e9 de certificat utilis\u00e9. Le Blue Hub, par exemple, accepte les certificats sign\u00e9s par ZeroId. La r\u00e8gle est d\u00e9finis dans son data/users/content.json L'\u00e9metteur d'ID a un nom lisible : zeroid.bit La clef publiaue de l'\u00e9metteur d'ID est : 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz user_contents : { cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] } } Chaque utilisateur pr\u00e9sente son certificat dans le fichier manifest de r\u00e9pertoire utilisateur (nomm\u00e9 apr\u00e8s son adresse Bitcoin). Par exemple, data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json dit : { address : 1BLueGvui1GdbtsjcKqCf4F67uKfritG49 , cert_auth_type : web , cert_sign : HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik= , cert_user_id : nofish@zeroid.bit , files : { data.json : { sha512 : 8e597412a2bc2726ac9a1ee85428fb3a94b09f4e7a3f5f589119973231417b15 , size : 21422 } }, inner_path : data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , modified : 1492458379 , signs : { 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj : G8kaZIGAstsiWLVY20e2ogJQi4OO+QuwqJ9GTj3gz7YleST/jst7RQH7hDn0uf8BJMBjFs35H3LPhNHHj4jueh8= } } Site : Url du site requis: \"address\": \"1BLueGvui1GdbtsjcKqCf4F67uKfritG49\" Chemin du fichier requis: \"inner_path\": \"data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json\" Information certificat : Fournisseur d'ID: zeroid.bit Nom d'utilisateur: nofish Adresse Bitcoin de l'utilisateur: 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj Type de portail: web Signature du fournisseur d'ID: HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik= La proc\u00e9dure de v\u00e9rification L'algorithme qui v\u00e9rifie la signature lit le contenu du fichier data/users/content.json pour d\u00e9terminer les sp\u00e9cifit\u00e9s pour le contenus utilisateur. L'algorithme lit ensuite data/users/content.json pour rechercher la clef publique du fournisseur de l'ID. Avec une adresse Bitcoin d'utilisateur, un type de portail et un nom d'utilisateur, l'algorithme reconstruit le corps du certificat. L'algorithme v\u00e9rifie la signature du fournisseur d'ID, avec la clef publique d\u00e9finit dans data/users/content.json , pour s'assurer de l'authenticit\u00e9 du corps du certificat. L'algorithme utilise la clef publique de l'utilisateur pour v\u00e9rifier l'authencit\u00e9 du contenu de l'utilisateur. Avantages et limites des autorit\u00e9s de certifications Une autorit\u00e9 de certification fournit un nom humainement lisible pour la clef publique d'un utilisateur. Cela aide aussi \u00e0 diminuer les spams et le contenu non-solicit\u00e9. Un utilisateur ne doit pas divilguer des informations secr\u00e8tes comme un mot de passe (syst\u00e8me actuel). De plus, l'utilisateur doit seulement s'authentifier une fois. Une autorit\u00e9 de certificaion n'a pas \u00e0 \u00eatre approuv\u00e9 par aucun d\u00e9veloppeur ZeroNet. Un propri\u00e9taire de site peut chosir quelle autorit\u00e9 il/elle souhaite utiliser pour son site afin d'am\u00e9liorer la qualit\u00e9 de son service pour l'utilisateur. Une autorit\u00e9 de certification est responsable de la maintenance de son groupe d'utilisateur. ZeroID ne supprime pas et ne renouvelle pas les certifcats lui-m\u00eame. Est-ce que je peux utiliser ZeroNet sans un certificat ? G\u00e9n\u00e9ralement, un certificat est demand\u00e9 lorsque vous souhaitez poster du contenu sur le site de quelqu'un d'autre. Vous n'avez pas besoin de certificat lorsque vous mettez \u00e0 jour le contenu de votre propre site.","title":"Autorit\u00e9 de certification"},{"location":"site_development/cert_authority/#autorite-de-certification","text":"Un compte sans mot de passe ? Un certificat pour moi ? On peut noter que le syst\u00e8me d'identification de ZeroNet est \u00e9loign\u00e9 des conventions. Dans cette section, nous allons parler de comment les comptes utilisateurs et les autorit\u00e9s de certification fonctionnent dans ZeroNet.","title":"Autorit\u00e9 de certification"},{"location":"site_development/cert_authority/#quest-ce-quune-autorite-de-certification-fait","text":"Dans ZeroNet, tout est sign\u00e9 avec des clefs Bitcoin. Un certificat offre un nom lisible et unique pour une adresse Bitcoin. Une autorit\u00e9 de certification (ou un )","title":"Qu'est ce qu'une autorit\u00e9 de certification fait ?"},{"location":"site_development/cert_authority/#format-du-certificat","text":"","title":"Format du certificat"},{"location":"site_development/cert_authority/#corps","text":"Le corps d'un certificat contiens une adresse Bitcoin, un type de portail, et un nom d'utilisateur humainement lisible. [BitcoinAddress]#[PortalType]/[UserName] Exemple: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft#web/hellozeronet Adresse Bitcoin: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft Type de portail: web Nom d'utilisateur: hellozeronet R\u00e8gles g\u00e9n\u00e9rales: L'adresse Bitcoin, le type de portail et le nom d'utilisateur ne doit pas contenir les caract\u00e8res # , @ ou / . Seul les chiffres de 0-9 et les lettres a-z sont autoris\u00e9s dans le nom d'utilisateur. Toute les lettre anglaises dans le nom d'utilisateur doivent \u00eatre en minuscule. Les caract\u00e8res non autoris\u00e9s ne doivent pas \u00eatre utilis\u00e9 dans le nom d'utilisateur. Un nom d'utilisateur ne devrait pas \u00eatre trop long. Un nom d'utilisateur devrait \u00eatre lisible et ne devrait pas int\u00e9ref\u00e9rer avec le rendu de l'interface. Un nom d'utilisateur doit \u00eatre unique.","title":"Corps"},{"location":"site_development/cert_authority/#signature","text":"Un algorithm de signature de certificat utilise une clef secr\u00e8te et g\u00e9n\u00e8re une signature Bitcoin d\u00e9terministique pour le corps. Code source : sign = os . popen ( python zeronet.py --debug cryptSign %s #bitmsg/ %s %s 2 1 % ( auth_address , user_name , config . site_privatekey )) . readlines ()[ - 1 ] . strip ()","title":"Signature"},{"location":"site_development/cert_authority/#certificat","text":"En regardant le code source de ZeroID, on note comment le certificat est stock\u00e9 dans la base de donn\u00e9e. data [ users ][ user_name ] = bitmsg, %s , %s % ( auth_address , sign ) Exemple: hellozeronet : web,1H28iygiKXe3GUMcD77HiifVqtf3858Aft,HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA= Un certficat peut \u00eatre stock\u00e9 sous de multiple formats. Cependant, tout les formats doivent inclure : L'adresse Bitcoin : 1H28iygiKXe3GUMcD77HiifVqtf3858Aft Le type de portail : web Le nomo d'utilisateur : hellozeronet La signature de l'autorit\u00e9: HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA=","title":"Certificat"},{"location":"site_development/cert_authority/#utilisation-dans-contentjson","text":"Les propri\u00e9taires des sites peuvent choisir quel autorit\u00e9 de certificat utilis\u00e9. Le Blue Hub, par exemple, accepte les certificats sign\u00e9s par ZeroId. La r\u00e8gle est d\u00e9finis dans son data/users/content.json L'\u00e9metteur d'ID a un nom lisible : zeroid.bit La clef publiaue de l'\u00e9metteur d'ID est : 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz user_contents : { cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] } } Chaque utilisateur pr\u00e9sente son certificat dans le fichier manifest de r\u00e9pertoire utilisateur (nomm\u00e9 apr\u00e8s son adresse Bitcoin). Par exemple, data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json dit : { address : 1BLueGvui1GdbtsjcKqCf4F67uKfritG49 , cert_auth_type : web , cert_sign : HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik= , cert_user_id : nofish@zeroid.bit , files : { data.json : { sha512 : 8e597412a2bc2726ac9a1ee85428fb3a94b09f4e7a3f5f589119973231417b15 , size : 21422 } }, inner_path : data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , modified : 1492458379 , signs : { 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj : G8kaZIGAstsiWLVY20e2ogJQi4OO+QuwqJ9GTj3gz7YleST/jst7RQH7hDn0uf8BJMBjFs35H3LPhNHHj4jueh8= } } Site : Url du site requis: \"address\": \"1BLueGvui1GdbtsjcKqCf4F67uKfritG49\" Chemin du fichier requis: \"inner_path\": \"data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json\" Information certificat : Fournisseur d'ID: zeroid.bit Nom d'utilisateur: nofish Adresse Bitcoin de l'utilisateur: 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj Type de portail: web Signature du fournisseur d'ID: HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik=","title":"Utilisation dans content.json"},{"location":"site_development/cert_authority/#la-procedure-de-verification","text":"L'algorithme qui v\u00e9rifie la signature lit le contenu du fichier data/users/content.json pour d\u00e9terminer les sp\u00e9cifit\u00e9s pour le contenus utilisateur. L'algorithme lit ensuite data/users/content.json pour rechercher la clef publique du fournisseur de l'ID. Avec une adresse Bitcoin d'utilisateur, un type de portail et un nom d'utilisateur, l'algorithme reconstruit le corps du certificat. L'algorithme v\u00e9rifie la signature du fournisseur d'ID, avec la clef publique d\u00e9finit dans data/users/content.json , pour s'assurer de l'authenticit\u00e9 du corps du certificat. L'algorithme utilise la clef publique de l'utilisateur pour v\u00e9rifier l'authencit\u00e9 du contenu de l'utilisateur.","title":"La proc\u00e9dure de v\u00e9rification"},{"location":"site_development/cert_authority/#avantages-et-limites-des-autorites-de-certifications","text":"Une autorit\u00e9 de certification fournit un nom humainement lisible pour la clef publique d'un utilisateur. Cela aide aussi \u00e0 diminuer les spams et le contenu non-solicit\u00e9. Un utilisateur ne doit pas divilguer des informations secr\u00e8tes comme un mot de passe (syst\u00e8me actuel). De plus, l'utilisateur doit seulement s'authentifier une fois. Une autorit\u00e9 de certificaion n'a pas \u00e0 \u00eatre approuv\u00e9 par aucun d\u00e9veloppeur ZeroNet. Un propri\u00e9taire de site peut chosir quelle autorit\u00e9 il/elle souhaite utiliser pour son site afin d'am\u00e9liorer la qualit\u00e9 de son service pour l'utilisateur. Une autorit\u00e9 de certification est responsable de la maintenance de son groupe d'utilisateur. ZeroID ne supprime pas et ne renouvelle pas les certifcats lui-m\u00eame.","title":"Avantages et limites des autorit\u00e9s de certifications"},{"location":"site_development/cert_authority/#est-ce-que-je-peux-utiliser-zeronet-sans-un-certificat","text":"G\u00e9n\u00e9ralement, un certificat est demand\u00e9 lorsque vous souhaitez poster du contenu sur le site de quelqu'un d'autre. Vous n'avez pas besoin de certificat lorsque vous mettez \u00e0 jour le contenu de votre propre site.","title":"Est-ce que je peux utiliser ZeroNet sans un certificat ?"},{"location":"site_development/content_json/","text":"Structure du fichier content.json Tout les sites ZeroNet ont un fichier content.json . ( Exemple de fichier content.json ) Ce fichier aura, entre autre, une liste de tout les fichiers sur votre site et une signature cr\u00e9e avec votre cl\u00e9e priv\u00e9e. C'est utilis\u00e9 pour assurer l'authenticit\u00e9 des fichiers du site et \u00e9viter des modifications non souhait\u00e9s. (NB: seulement vous, ou des personnes que vous avez choissit, peuvent mettre \u00e0 jour le contenu du site). Voici une liste des champs support\u00e9 dans le fichier content.json : Champs g\u00e9n\u00e9r\u00e9s automatiquement Ces chaps sint ajout\u00e9s automatiquement lorsque le site est cr\u00e9\u00e9 ou clon\u00e9. address L'adresse de votre site Example : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ address_index L'index de la sous-cl\u00e9 BIP 32 correspondant \u00e0 l'adresse de votre site. Ajout\u00e9 automatiquement lorsque que vous clonez un site. Cela permet de reg\u00e9n\u00e9r\u00e9 votre cl\u00e9 priv\u00e9 \u00e0 partir de votre BIP32 source (ou 'seed'). Example : 30926910 cloned_from Seulement pour les sites clon\u00e9s. L'adresse du site depuis lequel il a \u00e9t\u00e9 clon\u00e9. Example : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 clone_root Seulement pour les sites clon\u00e9s. Le sous-r\u00e9pertoire du site qui a \u00e9t\u00e9 clon\u00e9. Example : template-new files Taille et sha512 des fichiers automatiquement t\u00e9l\u00e9charg\u00e9s appartenant au site. Automatiquement ajout\u00e9 avec la commande zeronet.py siteSign siteaddress privatekey . Example : css/all.css : { sha512 : 869b09328f07bac538c313c4702baa5276544346418378199fa5cef644c139e8 , size : 148208 } files_optional Taille et sha512 des fichiers optionnels appartenant au site. Automatiquement ajout\u00e9 avec la commande zeronet.py siteSign siteaddress privatekey . Example : data/myvideo.mp4 : { sha512 : 538c09328aa52765443464135cef644c144346418378199fa5cef61837819538 , size : 832103 } modified Temps (timestamps) lorsque le content.json est g\u00e9n\u00e9r\u00e9. Example : 1425857522.076 sign (deprecated) Signature ECDSA du contenu du fichier content.json. (champs dans l'ordre, sans espace et les noeuds sign et signers_sign ). Pour compatibilit\u00e9 avec les version ant\u00e9rieur, sera retir\u00e9 bient\u00f4t. Example : sign : [ 43117356513690007125104018825100786623580298637039067305407092800990252156956 , 94139380599940414070721501960181245022427741524702752954181461080408625270000 ], signers_sign Les adresses authoris\u00e9s \u00e0 signer le principale content.json sign\u00e9 utilisant la cl\u00e9 priv\u00e9e de l'adresse du site. Plusieurs entr\u00e9es sont possible ici, permettant d'activer la fonctionalit\u00e9 multisig. Format de la chaine de caract\u00e8re sign\u00e9 : [number_of_signers_required]:[signer address],[signer address] Example : signs_required : 1 : 1 PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G , 1 CK6KHY6MHgYvmRQ4PAafKYDrg1ejbH1cE signers_sign : MEUCIQDuz + CzOVvFkv1P2ra9i5E1p1G0 /1cOGecm7GpLpMLhuwIgBIbCL0YHXD1S2+x48QS5VO/ rISrkdLiUR + o + x1X0y1A = Le messagne sign\u00e9 ci-dessus a \u00e9t\u00e9 sign\u00e9 avec l'adresse \"1PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G\". signs Signature ECDSA pour le contenu du content.json : sign , signs champs JSON sont retir\u00e9s JSON reformatt\u00e9 avec ses champs dans l'ordre alphab\u00e9tique et sans espace Signature g\u00e9n\u00e9r\u00e9 sur les donn\u00e9es format\u00e9es avec Electrum Bitcoin format de signature de message : Message encod\u00e9 : sha256(\"\\x18\" || \"Bitcoin Signed Message:\\n\" || num_to_var_int(len(message)) || message) Format : recovery_id || r || s , o\u00f9 27 \u2264 recovery_id \u2264 30; taille de la signature = 1 + 32 + 32 = 65 bytes. La double barre verticale || repr\u00e9sente la concatenation des bytes. Exemple : signs : { 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ : G6/QXFKvACPQ7LhoZG4fgqmeOSK99vGM2arVWkm9pV/WPCfc2ulv6iuQnuzw4v5z82qWswcRq907VPdBsdb9VRo= }, zeronet_version La version de Zeronet utilis\u00e9 pour g\u00e9n\u00e9rer le fichier content.json . Exemple : 0.2.5 Champs optionels Les champs suivants peuvent \u00eatre ajout\u00e9 si besoin. background-color Couleur de fond du wrapper. Exemple : #F5F5F5 cloneable Authorise n'importe qui \u00e0 cloner le site si true . To make your site properly cloneable you have to have a separate folder of data files for a clean start (e.g. without any blog posts). To do this you have to add the -default postfix to your data files and directories. During the cloning process, only directories with the -default postfix are copied. The postfix is removed from the new site. description Description de votre site, il sera affich\u00e9 sous son titre dans ZeroHello. Example : Forum d\u00e9centralis\u00e9 (d\u00e9mo) domain Le nom de domaine Namecoin pour votre site. ZeroHello lien redirigera vers celui-ci le plugin Zeroname est activ\u00e9. Example : Blog.ZeroNetwork.bit ignore Ne pas signer les fichiers associ\u00e9s \u00e0 cette r\u00e8gle. Exemple : ((js|css)/(?!all.(js|css))|data/users/.*) (ignore tout les fichiers js et css sauf all.js et all.css et ignore le contenu du dossier data/users/ ) Note: Quelques restrictions sur les combinaisons possibles. includes Ajoute un autre content.json au site. C'est souvent utilis\u00e9 pour ajouter un sous content.json pour les donn\u00e9es des utilisateurs. Exemple : includes : { data/users/content.json : { signers : [ # Signataire autoris\u00e9 pour ce site 1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f ], signers_required : 1 # Nombre de signature valide n\u00e9cessaire pour accepter le fichier files_allowed : data.json , # Fichiers autoris\u00e9s (peut \u00eatre une expression r\u00e9guli\u00e8re) includes_allowed : false , # Si des sous-includes sont autoris\u00e9s max_size : 10000 , # Taille maximale du content.json inclus et fichiers sign\u00e9s (en bytes) } } merged_type Le type de groupe ('merger') ce site fait partie. Exemple : ZeroMe optional Expression r\u00e9guli\u00e8re pour les fichiers optionnels. Exemple : (data/mp4/.*|updater/.*) (tout dans le r\u00e9pertoire data/mp4 et updater/ est optionnel) Note: Quelques restrictions sur les combinaisons possibles. signs_required Le nombre de signature valide n\u00e9cessaire pour accepter le fichier. Permet d'obtenir des site Multisig. Exemple : 1 title Le titre du site, visible depuis le navigateur et sur ZeroHello. Exemple : ZeroTalk translate Fichier \u00e0 traduire. (utilise les fichiers de language json qui sont dans le r\u00e9pertoire languages ) Exemple : [\"index.html\", \"js/all.js\"] favicon Le favicon du site. Va remplacer l'ic\u00f4ne Zeronet qui est utilis\u00e9 par d\u00e9fault avec l'ic\u00f4ne sp\u00e9cifi\u00e9. Il peut \u00eatre .ico, .png, .svg, etc. Exemple : favicon.ico user_contents R\u00e8gles autoris\u00e9es pour le contenu de l'utilisateur dans ce r\u00e9pertoire. Noeud D\u00e9scription archived Efface le contenu du r\u00e9pertoire de l'utilisateur sp\u00e9cifi\u00e9 qui a \u00e9t\u00e9 sign\u00e9 avant la date specifi\u00e9 (key: directory name, value: timestamp) archived_before Efface tout le contenu des r\u00e9pertoires d'utilisateur qui ont \u00e9t\u00e9 sign\u00e9 avant la date sp\u00e9cifi\u00e9 (unix timestamp) cert_signers Nom de domaine accept\u00e9e et addresse de signataire valide cert_signers_pattern Expression r\u00e9guli\u00e8re accept\u00e9 pour les signataire de certificat permission_rules Noms de fichiers autoris\u00e9s et taille du r\u00e9pertoire autoris\u00e9s par domaine permissions Permission cas par cas Exemple : user_contents : { archived : { 1165u6pt5mQNFjyhMVwy6azB7bZuQGLA9b : 1523088096 }, archived_before : 1523088096 , cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] }, cert_signers_pattern : 1Zero[0-9].* , permission_rules : { .* : { files_allowed : data.json , max_size : 10000 }, bitid/.*@zeroid.bit : { max_size : 40000 }, bitmsg/.*@zeroid.bit : { max_size : 15000 } }, permissions : { bad@zeroid.bit : false , nofish@zeroid.bit : { max_size : 100000 } } } Note: Quelques restrictions sur les combinaisons possibles. viewport Contenu pour le meta tag \"viewport\". (A utiliser pour les pages mobile-friendly) Exemple : width=device-width, initial-scale=1.0 Regular expression limitations Pour \u00e9viter des attaques ReDoS , les restrictions suivantes sur chaque expression sont appliqu\u00e9s: Le . caract\u00e8re est obligatoire avant la r\u00e9pitions des caract\u00e8res *,+,{ Une expression peut avoir au maximum 9 r\u00e9p\u00e9titions La longueur maximale d'une expression est de 255 caract\u00e8res Exemples: ((?!json).)*$ pas autoris\u00e9 \u00e0 cause du ) avant le caract\u00e8re * . Alternative : .*(?!json)$ (.*.epub|.*.jpg|.*.jpeg|.*.png|data/.*.gif|.*.avi|.*.ogg|.*.webm|.*.mp4|.*.mp3|.*.mkv|.*.eot) pas autoris\u00e9 car poss\u00e8de 12 r\u00e9p\u00e9titions .* . Alternative: .*(epub|jpg|jpeg|png|data/gif|avi|ogg|webm|mp4|mp3|mkv|eot)","title":"Structure du fichier content.json"},{"location":"site_development/content_json/#structure-du-fichier-contentjson","text":"Tout les sites ZeroNet ont un fichier content.json . ( Exemple de fichier content.json ) Ce fichier aura, entre autre, une liste de tout les fichiers sur votre site et une signature cr\u00e9e avec votre cl\u00e9e priv\u00e9e. C'est utilis\u00e9 pour assurer l'authenticit\u00e9 des fichiers du site et \u00e9viter des modifications non souhait\u00e9s. (NB: seulement vous, ou des personnes que vous avez choissit, peuvent mettre \u00e0 jour le contenu du site). Voici une liste des champs support\u00e9 dans le fichier content.json :","title":"Structure du fichier content.json"},{"location":"site_development/content_json/#champs-generes-automatiquement","text":"Ces chaps sint ajout\u00e9s automatiquement lorsque le site est cr\u00e9\u00e9 ou clon\u00e9.","title":"Champs g\u00e9n\u00e9r\u00e9s automatiquement"},{"location":"site_development/content_json/#address","text":"L'adresse de votre site Example : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ","title":"address"},{"location":"site_development/content_json/#address_index","text":"L'index de la sous-cl\u00e9 BIP 32 correspondant \u00e0 l'adresse de votre site. Ajout\u00e9 automatiquement lorsque que vous clonez un site. Cela permet de reg\u00e9n\u00e9r\u00e9 votre cl\u00e9 priv\u00e9 \u00e0 partir de votre BIP32 source (ou 'seed'). Example : 30926910","title":"address_index"},{"location":"site_development/content_json/#cloned_from","text":"Seulement pour les sites clon\u00e9s. L'adresse du site depuis lequel il a \u00e9t\u00e9 clon\u00e9. Example : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8","title":"cloned_from"},{"location":"site_development/content_json/#clone_root","text":"Seulement pour les sites clon\u00e9s. Le sous-r\u00e9pertoire du site qui a \u00e9t\u00e9 clon\u00e9. Example : template-new","title":"clone_root"},{"location":"site_development/content_json/#files","text":"Taille et sha512 des fichiers automatiquement t\u00e9l\u00e9charg\u00e9s appartenant au site. Automatiquement ajout\u00e9 avec la commande zeronet.py siteSign siteaddress privatekey . Example : css/all.css : { sha512 : 869b09328f07bac538c313c4702baa5276544346418378199fa5cef644c139e8 , size : 148208 }","title":"files"},{"location":"site_development/content_json/#files_optional","text":"Taille et sha512 des fichiers optionnels appartenant au site. Automatiquement ajout\u00e9 avec la commande zeronet.py siteSign siteaddress privatekey . Example : data/myvideo.mp4 : { sha512 : 538c09328aa52765443464135cef644c144346418378199fa5cef61837819538 , size : 832103 }","title":"files_optional"},{"location":"site_development/content_json/#modified","text":"Temps (timestamps) lorsque le content.json est g\u00e9n\u00e9r\u00e9. Example : 1425857522.076","title":"modified"},{"location":"site_development/content_json/#sign-deprecated","text":"Signature ECDSA du contenu du fichier content.json. (champs dans l'ordre, sans espace et les noeuds sign et signers_sign ). Pour compatibilit\u00e9 avec les version ant\u00e9rieur, sera retir\u00e9 bient\u00f4t. Example : sign : [ 43117356513690007125104018825100786623580298637039067305407092800990252156956 , 94139380599940414070721501960181245022427741524702752954181461080408625270000 ],","title":"sign (deprecated)"},{"location":"site_development/content_json/#signers_sign","text":"Les adresses authoris\u00e9s \u00e0 signer le principale content.json sign\u00e9 utilisant la cl\u00e9 priv\u00e9e de l'adresse du site. Plusieurs entr\u00e9es sont possible ici, permettant d'activer la fonctionalit\u00e9 multisig. Format de la chaine de caract\u00e8re sign\u00e9 : [number_of_signers_required]:[signer address],[signer address] Example : signs_required : 1 : 1 PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G , 1 CK6KHY6MHgYvmRQ4PAafKYDrg1ejbH1cE signers_sign : MEUCIQDuz + CzOVvFkv1P2ra9i5E1p1G0 /1cOGecm7GpLpMLhuwIgBIbCL0YHXD1S2+x48QS5VO/ rISrkdLiUR + o + x1X0y1A = Le messagne sign\u00e9 ci-dessus a \u00e9t\u00e9 sign\u00e9 avec l'adresse \"1PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G\".","title":"signers_sign"},{"location":"site_development/content_json/#signs","text":"Signature ECDSA pour le contenu du content.json : sign , signs champs JSON sont retir\u00e9s JSON reformatt\u00e9 avec ses champs dans l'ordre alphab\u00e9tique et sans espace Signature g\u00e9n\u00e9r\u00e9 sur les donn\u00e9es format\u00e9es avec Electrum Bitcoin format de signature de message : Message encod\u00e9 : sha256(\"\\x18\" || \"Bitcoin Signed Message:\\n\" || num_to_var_int(len(message)) || message) Format : recovery_id || r || s , o\u00f9 27 \u2264 recovery_id \u2264 30; taille de la signature = 1 + 32 + 32 = 65 bytes. La double barre verticale || repr\u00e9sente la concatenation des bytes. Exemple : signs : { 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ : G6/QXFKvACPQ7LhoZG4fgqmeOSK99vGM2arVWkm9pV/WPCfc2ulv6iuQnuzw4v5z82qWswcRq907VPdBsdb9VRo= },","title":"signs"},{"location":"site_development/content_json/#zeronet_version","text":"La version de Zeronet utilis\u00e9 pour g\u00e9n\u00e9rer le fichier content.json . Exemple : 0.2.5","title":"zeronet_version"},{"location":"site_development/content_json/#champs-optionels","text":"Les champs suivants peuvent \u00eatre ajout\u00e9 si besoin.","title":"Champs optionels"},{"location":"site_development/content_json/#background-color","text":"Couleur de fond du wrapper. Exemple : #F5F5F5","title":"background-color"},{"location":"site_development/content_json/#cloneable","text":"Authorise n'importe qui \u00e0 cloner le site si true . To make your site properly cloneable you have to have a separate folder of data files for a clean start (e.g. without any blog posts). To do this you have to add the -default postfix to your data files and directories. During the cloning process, only directories with the -default postfix are copied. The postfix is removed from the new site.","title":"cloneable"},{"location":"site_development/content_json/#description","text":"Description de votre site, il sera affich\u00e9 sous son titre dans ZeroHello. Example : Forum d\u00e9centralis\u00e9 (d\u00e9mo)","title":"description"},{"location":"site_development/content_json/#domain","text":"Le nom de domaine Namecoin pour votre site. ZeroHello lien redirigera vers celui-ci le plugin Zeroname est activ\u00e9. Example : Blog.ZeroNetwork.bit","title":"domain"},{"location":"site_development/content_json/#ignore","text":"Ne pas signer les fichiers associ\u00e9s \u00e0 cette r\u00e8gle. Exemple : ((js|css)/(?!all.(js|css))|data/users/.*) (ignore tout les fichiers js et css sauf all.js et all.css et ignore le contenu du dossier data/users/ ) Note: Quelques restrictions sur les combinaisons possibles.","title":"ignore"},{"location":"site_development/content_json/#includes","text":"Ajoute un autre content.json au site. C'est souvent utilis\u00e9 pour ajouter un sous content.json pour les donn\u00e9es des utilisateurs. Exemple : includes : { data/users/content.json : { signers : [ # Signataire autoris\u00e9 pour ce site 1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f ], signers_required : 1 # Nombre de signature valide n\u00e9cessaire pour accepter le fichier files_allowed : data.json , # Fichiers autoris\u00e9s (peut \u00eatre une expression r\u00e9guli\u00e8re) includes_allowed : false , # Si des sous-includes sont autoris\u00e9s max_size : 10000 , # Taille maximale du content.json inclus et fichiers sign\u00e9s (en bytes) } }","title":"includes"},{"location":"site_development/content_json/#merged_type","text":"Le type de groupe ('merger') ce site fait partie. Exemple : ZeroMe","title":"merged_type"},{"location":"site_development/content_json/#optional","text":"Expression r\u00e9guli\u00e8re pour les fichiers optionnels. Exemple : (data/mp4/.*|updater/.*) (tout dans le r\u00e9pertoire data/mp4 et updater/ est optionnel) Note: Quelques restrictions sur les combinaisons possibles.","title":"optional"},{"location":"site_development/content_json/#signs_required","text":"Le nombre de signature valide n\u00e9cessaire pour accepter le fichier. Permet d'obtenir des site Multisig. Exemple : 1","title":"signs_required"},{"location":"site_development/content_json/#title","text":"Le titre du site, visible depuis le navigateur et sur ZeroHello. Exemple : ZeroTalk","title":"title"},{"location":"site_development/content_json/#translate","text":"Fichier \u00e0 traduire. (utilise les fichiers de language json qui sont dans le r\u00e9pertoire languages ) Exemple : [\"index.html\", \"js/all.js\"]","title":"translate"},{"location":"site_development/content_json/#favicon","text":"Le favicon du site. Va remplacer l'ic\u00f4ne Zeronet qui est utilis\u00e9 par d\u00e9fault avec l'ic\u00f4ne sp\u00e9cifi\u00e9. Il peut \u00eatre .ico, .png, .svg, etc. Exemple : favicon.ico","title":"favicon"},{"location":"site_development/content_json/#user_contents","text":"R\u00e8gles autoris\u00e9es pour le contenu de l'utilisateur dans ce r\u00e9pertoire. Noeud D\u00e9scription archived Efface le contenu du r\u00e9pertoire de l'utilisateur sp\u00e9cifi\u00e9 qui a \u00e9t\u00e9 sign\u00e9 avant la date specifi\u00e9 (key: directory name, value: timestamp) archived_before Efface tout le contenu des r\u00e9pertoires d'utilisateur qui ont \u00e9t\u00e9 sign\u00e9 avant la date sp\u00e9cifi\u00e9 (unix timestamp) cert_signers Nom de domaine accept\u00e9e et addresse de signataire valide cert_signers_pattern Expression r\u00e9guli\u00e8re accept\u00e9 pour les signataire de certificat permission_rules Noms de fichiers autoris\u00e9s et taille du r\u00e9pertoire autoris\u00e9s par domaine permissions Permission cas par cas Exemple : user_contents : { archived : { 1165u6pt5mQNFjyhMVwy6azB7bZuQGLA9b : 1523088096 }, archived_before : 1523088096 , cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] }, cert_signers_pattern : 1Zero[0-9].* , permission_rules : { .* : { files_allowed : data.json , max_size : 10000 }, bitid/.*@zeroid.bit : { max_size : 40000 }, bitmsg/.*@zeroid.bit : { max_size : 15000 } }, permissions : { bad@zeroid.bit : false , nofish@zeroid.bit : { max_size : 100000 } } } Note: Quelques restrictions sur les combinaisons possibles.","title":"user_contents"},{"location":"site_development/content_json/#viewport","text":"Contenu pour le meta tag \"viewport\". (A utiliser pour les pages mobile-friendly) Exemple : width=device-width, initial-scale=1.0","title":"viewport"},{"location":"site_development/content_json/#regular-expression-limitations","text":"Pour \u00e9viter des attaques ReDoS , les restrictions suivantes sur chaque expression sont appliqu\u00e9s: Le . caract\u00e8re est obligatoire avant la r\u00e9pitions des caract\u00e8res *,+,{ Une expression peut avoir au maximum 9 r\u00e9p\u00e9titions La longueur maximale d'une expression est de 255 caract\u00e8res","title":"Regular expression limitations"},{"location":"site_development/content_json/#exemples","text":"((?!json).)*$ pas autoris\u00e9 \u00e0 cause du ) avant le caract\u00e8re * . Alternative : .*(?!json)$ (.*.epub|.*.jpg|.*.jpeg|.*.png|data/.*.gif|.*.avi|.*.ogg|.*.webm|.*.mp4|.*.mp3|.*.mkv|.*.eot) pas autoris\u00e9 car poss\u00e8de 12 r\u00e9p\u00e9titions .* . Alternative: .*(epub|jpg|jpeg|png|data/gif|avi|ogg|webm|mp4|mp3|mkv|eot)","title":"Exemples:"},{"location":"site_development/dbschema_json/","text":"Structure of dbschema.json Example dbschema.json file The code below will do the following: If an updated data/users/*/data.json file is received (eg.: a user posted something): Every row in data[\"topics\"] is loaded to the topic table Every key in data[\"comment_votes\"] is loaded to the comment_vote table as comment_hash col and the values stored in same line as vote If an updated data/users/content.json file is received (eg.: new user created): The \"user_id\", \"user_name\", \"max_size\", \"added\" key in value of content[\"include\"] is loaded into the user table and the key is stored as path Note: Some restriction apply to regular expressions to avoid possible ReDoS vulnerability. { db_name : ZeroTalk , # Database name (only used for debugging) db_file : data/users/zerotalk.db , # Database file relative to site s directory version : 2 , # 1 = Json table has path column that includes directory and filename # 2 = Json table has separate directory and file_name column # 3 = Same as version 2, but also has site column (for merger sites) maps : { # Json to database mappings .*/data.json : { # Regex pattern of file relative to db_file to_table : [ # Load values to table { node : topics , # Reading data.json[topics] key value table : topic # Feeding data to topic table }, { node : comment_votes , # Reading data.json[comment_votes] key value table : comment_vote , # Feeding data to comment_vote table key_col : comment_hash , # data.json[comment_votes] is a simple dict, the keys of the # dict are loaded to comment_vote table comment_hash column val_col : vote # The data.json [ comment_votes ] dict values loaded to comment_vote table vote column } ], to_keyvalue : [ next_message_id , next_topic_id ] # Load data.json [ next_topic_id ] to keyvalue table # (key : next_message_id , value: data.json[next_message_id] value) }, content.json : { to_table : [ { node : includes , table : user , key_col : path , import_cols : [ user_id , user_name , max_size , added ], # Only import these columns to user table replaces : { path : { content.json : data.json } # Replace content.json to data.json in the # value of path column (required for joining) } } ], to_json_table : [ cert_auth_type , cert_user_id ] # Save cert_auth_type and cert_user_id directly to json table (easier and faster data queries) } }, tables : { # Table definitions topic : { # Define topic table cols : [ # Cols of the table [ topic_id , INTEGER ], [ title , TEXT ], [ body , TEXT ], [ type , TEXT ], [ parent_topic_hash , TEXT ], [ added , DATETIME ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX topic_key ON topic(topic_id, json_id) ], # Indexes automatically created schema_changed : 1426195822 # Last time of the schema changed , if the client s version is different then # automatically destroy the old, create the new table then reload the data into it }, comment_vote : { cols : [ [ comment_hash , TEXT ], [ vote , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX comment_vote_key ON comment_vote(comment_hash, json_id) , CREATE INDEX comment_vote_hash ON comment_vote(comment_hash) ], schema_changed : 1426195826 }, user : { cols : [ [ user_id , INTEGER ], [ user_name , TEXT ], [ max_size , INTEGER ], [ path , TEXT ], [ added , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX user_id ON user(user_id) , CREATE UNIQUE INDEX user_path ON user(path) ], schema_changed : 1426195825 }, json : { # Json table format only required if you have specified to_json_table pattern anywhere cols : [ [ json_id , INTEGER PRIMARY KEY AUTOINCREMENT ], [ directory , TEXT ], [ file_name , TEXT ], [ cert_auth_type , TEXT ], [ cert_user_id , TEXT ] ], indexes : [ CREATE UNIQUE INDEX path ON json(directory, site, file_name) ], schema_changed : 4 } } } Example for data.json file { next_topic_id : 2 , topics : [ { topic_id : 1 , title : Newtopic , body : Topic! , added : 1426628540 , parent_topic_hash : 5@2 } ], next_message_id : 19 , comments : { 1@2 : [ { comment_id : 1 , body : New user test! , added : 1423442049 } ], 1@13 : [ { comment_id : 2 , body : hello , added : 1424653288 }, { comment_id : 13 , body : test 123 , added : 1426463715 } ] }, topic_votes : { 1@2 : 1 , 4@2 : 1 , 2@2 : 1 , 1@5 : 1 , 1@6 : 1 , 3@2 : 1 , 1@13 : 1 , 4@5 : 1 }, comment_votes : { 5@5 : 1 , 2@12 : 1 , 1@12 : 1 , 33@2 : 1 , 45@2 : 1 , 12@5 : 1 , 34@2 : 1 , 46@2 : 1 } } Example for content.json file { files : {}, ignore : .*/.* , includes : { 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW/content.json : { added : 1426683897 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW ], signers_required : 1 , user_id : 15 , user_name : meginthelloka }, 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ/content.json : { added : 1426687209 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ ], signers_required : 1 , user_id : 18 , user_name : habla } } }","title":"Structure of dbschema.json"},{"location":"site_development/dbschema_json/#structure-of-dbschemajson","text":"Example dbschema.json file The code below will do the following: If an updated data/users/*/data.json file is received (eg.: a user posted something): Every row in data[\"topics\"] is loaded to the topic table Every key in data[\"comment_votes\"] is loaded to the comment_vote table as comment_hash col and the values stored in same line as vote If an updated data/users/content.json file is received (eg.: new user created): The \"user_id\", \"user_name\", \"max_size\", \"added\" key in value of content[\"include\"] is loaded into the user table and the key is stored as path Note: Some restriction apply to regular expressions to avoid possible ReDoS vulnerability. { db_name : ZeroTalk , # Database name (only used for debugging) db_file : data/users/zerotalk.db , # Database file relative to site s directory version : 2 , # 1 = Json table has path column that includes directory and filename # 2 = Json table has separate directory and file_name column # 3 = Same as version 2, but also has site column (for merger sites) maps : { # Json to database mappings .*/data.json : { # Regex pattern of file relative to db_file to_table : [ # Load values to table { node : topics , # Reading data.json[topics] key value table : topic # Feeding data to topic table }, { node : comment_votes , # Reading data.json[comment_votes] key value table : comment_vote , # Feeding data to comment_vote table key_col : comment_hash , # data.json[comment_votes] is a simple dict, the keys of the # dict are loaded to comment_vote table comment_hash column val_col : vote # The data.json [ comment_votes ] dict values loaded to comment_vote table vote column } ], to_keyvalue : [ next_message_id , next_topic_id ] # Load data.json [ next_topic_id ] to keyvalue table # (key : next_message_id , value: data.json[next_message_id] value) }, content.json : { to_table : [ { node : includes , table : user , key_col : path , import_cols : [ user_id , user_name , max_size , added ], # Only import these columns to user table replaces : { path : { content.json : data.json } # Replace content.json to data.json in the # value of path column (required for joining) } } ], to_json_table : [ cert_auth_type , cert_user_id ] # Save cert_auth_type and cert_user_id directly to json table (easier and faster data queries) } }, tables : { # Table definitions topic : { # Define topic table cols : [ # Cols of the table [ topic_id , INTEGER ], [ title , TEXT ], [ body , TEXT ], [ type , TEXT ], [ parent_topic_hash , TEXT ], [ added , DATETIME ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX topic_key ON topic(topic_id, json_id) ], # Indexes automatically created schema_changed : 1426195822 # Last time of the schema changed , if the client s version is different then # automatically destroy the old, create the new table then reload the data into it }, comment_vote : { cols : [ [ comment_hash , TEXT ], [ vote , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX comment_vote_key ON comment_vote(comment_hash, json_id) , CREATE INDEX comment_vote_hash ON comment_vote(comment_hash) ], schema_changed : 1426195826 }, user : { cols : [ [ user_id , INTEGER ], [ user_name , TEXT ], [ max_size , INTEGER ], [ path , TEXT ], [ added , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX user_id ON user(user_id) , CREATE UNIQUE INDEX user_path ON user(path) ], schema_changed : 1426195825 }, json : { # Json table format only required if you have specified to_json_table pattern anywhere cols : [ [ json_id , INTEGER PRIMARY KEY AUTOINCREMENT ], [ directory , TEXT ], [ file_name , TEXT ], [ cert_auth_type , TEXT ], [ cert_user_id , TEXT ] ], indexes : [ CREATE UNIQUE INDEX path ON json(directory, site, file_name) ], schema_changed : 4 } } }","title":"Structure of dbschema.json"},{"location":"site_development/dbschema_json/#example-for-datajson-file","text":"{ next_topic_id : 2 , topics : [ { topic_id : 1 , title : Newtopic , body : Topic! , added : 1426628540 , parent_topic_hash : 5@2 } ], next_message_id : 19 , comments : { 1@2 : [ { comment_id : 1 , body : New user test! , added : 1423442049 } ], 1@13 : [ { comment_id : 2 , body : hello , added : 1424653288 }, { comment_id : 13 , body : test 123 , added : 1426463715 } ] }, topic_votes : { 1@2 : 1 , 4@2 : 1 , 2@2 : 1 , 1@5 : 1 , 1@6 : 1 , 3@2 : 1 , 1@13 : 1 , 4@5 : 1 }, comment_votes : { 5@5 : 1 , 2@12 : 1 , 1@12 : 1 , 33@2 : 1 , 45@2 : 1 , 12@5 : 1 , 34@2 : 1 , 46@2 : 1 } }","title":"Example for data.json file"},{"location":"site_development/dbschema_json/#example-for-contentjson-file","text":"{ files : {}, ignore : .*/.* , includes : { 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW/content.json : { added : 1426683897 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW ], signers_required : 1 , user_id : 15 , user_name : meginthelloka }, 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ/content.json : { added : 1426687209 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ ], signers_required : 1 , user_id : 18 , user_name : habla } } }","title":"Example for content.json file"},{"location":"site_development/getting_started/","text":"Commencer ZeroNet allows you to publish static and dynamic websites on a distributed web platform. In ZeroNet there is no concept of servers. Thus, server-side languages like PHP or Ruby are not needed. Instead, one can create dynamic content using ZeroNet's API (called ZeroFrame), JavaScript (or CoffeeScript) and the SQL database provided to all websites. Tutorials ZeroChat tutorial In this tutorial we are going to build a P2P, decentralized, server-less chat site in less then 100 lines of code. Read on ZeroBlog Read on Medium.com Useful Information ZeroNet Debug mode ZeroNet comes with a --debug flag that will make site development easier. To run ZeroNet in debug mode use: python zeronet.py --debug If you are using compiled/bundled version of ZeroNet: On Windows: lib\\ZeroNet.cmd --debug On Linux: ./ZeroNet.sh --debug On Mac: ./ZeroNet.app/Contents/MacOS/ZeroNet --debug Debug mode features: Automatic CoffeeScript - JavaScript conversion (All examples used in this documentation and sample sites are written in CoffeeScript ) Debug messages will appear in the console Auto reload of some source files (UiRequest, UiWebsocket, FileRequest) on modification to prevent restarting (Requires PyFilesystem on GNU/Linux) http://127.0.0.1:43110/Debug Traceback and interactive Python console at the last error position (using the wonderful Werkzeug debugger - Requires Werkzeug ) http://127.0.0.1:43110/Console Spawns an interactive Python console (Requires Werkzeug ) Disable HTTP Browser Caching In addition to Debug Mode, disabling HTTP Caching in the browser is an essential part of ZeroNet site development. Modern web browsers attempt to cache web content whenever they can. As all ZeroNet sites run in an iframe, web browsers cannot detect when a ZeroNet site's content changes, and thus site changes are often not reflected if HTTP Caching is enabled. To disable, open your browser's devtools, navigate to the devtools settings and check the option along the lines of 'Disable HTTP Cache (when toolbox is open)'. As the setting suggests, make sure to keep devtools open when testing new changes to your site! Extra features (works only for sites that you own) Merged CSS files: All CSS files inside the site folder will be merged into one file called all.css . You can choose to include only this file to your site. If you want to keep the other CSS files to make the development easier, you can add them to the ignore key of your content.json . This way, they won't be published with your site. (eg: add to your content.json \"ignore\": \"(js|css)/(?!all.(js|css))\" this will ignore all CSS and JS files except all.js and all.css ) Merged JS files: All JS files inside the site folder will be merged into one file called all.js . If a CoffeeScript compiler is present (bundled for Windows) it will convert .coffee to .js . Order in which files are merged into all.css/all.js: Files inside subdirectories of the css/js folder comes first; Files in the css/js folder will be merged according to file name ordering (01_a.css, 02_a.css, etc) Need Help? ZeroNet has a growing community of developers who hang out in various spaces. If you would like to ask for help, advice or just want to hang out, feel free to connect in to the following services: Forums ZeroExchange , a p2p StackOverflow clone ZeroTalk , a p2p Reddit-like forum Chat #zeronet-dev:matrix.org on Matrix IRC at #zeronet on Freenode","title":"Commencer"},{"location":"site_development/getting_started/#commencer","text":"ZeroNet allows you to publish static and dynamic websites on a distributed web platform. In ZeroNet there is no concept of servers. Thus, server-side languages like PHP or Ruby are not needed. Instead, one can create dynamic content using ZeroNet's API (called ZeroFrame), JavaScript (or CoffeeScript) and the SQL database provided to all websites.","title":"Commencer"},{"location":"site_development/getting_started/#tutorials","text":"","title":"Tutorials"},{"location":"site_development/getting_started/#zerochat-tutorial","text":"In this tutorial we are going to build a P2P, decentralized, server-less chat site in less then 100 lines of code. Read on ZeroBlog Read on Medium.com","title":"ZeroChat tutorial"},{"location":"site_development/getting_started/#useful-information","text":"","title":"Useful Information"},{"location":"site_development/getting_started/#zeronet-debug-mode","text":"ZeroNet comes with a --debug flag that will make site development easier. To run ZeroNet in debug mode use: python zeronet.py --debug If you are using compiled/bundled version of ZeroNet: On Windows: lib\\ZeroNet.cmd --debug On Linux: ./ZeroNet.sh --debug On Mac: ./ZeroNet.app/Contents/MacOS/ZeroNet --debug","title":"ZeroNet Debug mode"},{"location":"site_development/getting_started/#debug-mode-features","text":"Automatic CoffeeScript - JavaScript conversion (All examples used in this documentation and sample sites are written in CoffeeScript ) Debug messages will appear in the console Auto reload of some source files (UiRequest, UiWebsocket, FileRequest) on modification to prevent restarting (Requires PyFilesystem on GNU/Linux) http://127.0.0.1:43110/Debug Traceback and interactive Python console at the last error position (using the wonderful Werkzeug debugger - Requires Werkzeug ) http://127.0.0.1:43110/Console Spawns an interactive Python console (Requires Werkzeug )","title":"Debug mode features:"},{"location":"site_development/getting_started/#disable-http-browser-caching","text":"In addition to Debug Mode, disabling HTTP Caching in the browser is an essential part of ZeroNet site development. Modern web browsers attempt to cache web content whenever they can. As all ZeroNet sites run in an iframe, web browsers cannot detect when a ZeroNet site's content changes, and thus site changes are often not reflected if HTTP Caching is enabled. To disable, open your browser's devtools, navigate to the devtools settings and check the option along the lines of 'Disable HTTP Cache (when toolbox is open)'. As the setting suggests, make sure to keep devtools open when testing new changes to your site!","title":"Disable HTTP Browser Caching"},{"location":"site_development/getting_started/#extra-features-works-only-for-sites-that-you-own","text":"Merged CSS files: All CSS files inside the site folder will be merged into one file called all.css . You can choose to include only this file to your site. If you want to keep the other CSS files to make the development easier, you can add them to the ignore key of your content.json . This way, they won't be published with your site. (eg: add to your content.json \"ignore\": \"(js|css)/(?!all.(js|css))\" this will ignore all CSS and JS files except all.js and all.css ) Merged JS files: All JS files inside the site folder will be merged into one file called all.js . If a CoffeeScript compiler is present (bundled for Windows) it will convert .coffee to .js . Order in which files are merged into all.css/all.js: Files inside subdirectories of the css/js folder comes first; Files in the css/js folder will be merged according to file name ordering (01_a.css, 02_a.css, etc)","title":"Extra features (works only for sites that you own)"},{"location":"site_development/getting_started/#need-help","text":"ZeroNet has a growing community of developers who hang out in various spaces. If you would like to ask for help, advice or just want to hang out, feel free to connect in to the following services:","title":"Need Help?"},{"location":"site_development/getting_started/#forums","text":"ZeroExchange , a p2p StackOverflow clone ZeroTalk , a p2p Reddit-like forum","title":"Forums"},{"location":"site_development/getting_started/#chat","text":"#zeronet-dev:matrix.org on Matrix IRC at #zeronet on Freenode","title":"Chat"},{"location":"site_development/zeroframe_api_reference/","text":"ZeroFrame API Reference The ZeroFrame API ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created. The library can be imported like any other JavaScript file, or site developers also have the option of importing through NPM . Please see the ZeroFrame API Reference for API details. Wrapper These commands are handled by the wrapper frame and are thus not sent to the UiServer using websocket. wrapperConfirm Display a notification with confirm button Parameter Description message The message you want to display button_caption (optional) Caption of the confirmation button (default: OK) Return : True if clicked on button Example: # Delete site siteDelete: (address) - site = @sites [ address ] title = site . content . title if title . length 40 title = title . substring ( 0 , 15 ) + ... + title . substring ( title . length - 10 ) @cmd wrapperConfirm , [ Are you sure you sure? b #{ title } /b , Delete ], (confirmed) = @log Deleting #{ site . address } ... , confirmed if confirmed $ ( .site- #{ site . address } ). addClass ( deleted ) @cmd siteDelete , { address : address } wrapperInnerLoaded Applies the windows.location.hash to page url. Call when you page is fully loaded to jump to the desired anchor point. wrapperGetLocalStorage Return : Browser's local store for the site Example: @cmd wrapperGetLocalStorage , [], (res) = res ?= {} @log Local storage value: , res wrapperGetState Return : Browser's current history state object wrapperGetAjaxKey Return : The key you need to initilize ajax requests Example: ajax_key = await page . cmdp ( wrapperGetAjaxKey ) req = new window . XMLHttpRequest () req . open ( GET , content.json?ajax_key= + ajax_key ) req . setRequestHeader ( Range , bytes=10-200 ) // Optional: only if you want request partial file req . send () console . log ( req . response ) wrapperNotification Display a notification Parameter Description type Possible values: info, error, done message The message you want to display timeout (optional) Hide display after this interval (milliseconds) Return : None Example: @cmd wrapperNotification , [ done , Your registration has been sent! , 10000 ] wrapperOpenWindow Navigates or opens a new popup window. Parameter Description url Url of the opened page target (optional) Target window name specs (optional) Special properties of the window (see: window.open specs ) Example: @cmd wrapperOpenWindow , [ https://zeronet.io , _blank , width=550,height=600,location=no,menubar=no ] wrapperPermissionAdd Request new permission for site Parameter Description permission Name of permission (eg. Merger:ZeroMe) wrapperPrompt Prompt text input from user Parameter Description message The message you want to display type (optional) Type of the input (default: text) Return : Text entered to input Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res wrapperPushState Change the url and adds new entry to browser's history. See: pushState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None Example: @cmd wrapperPushState , [{ scrollY : 100 }, Profile page , Profile ] wrapperReplaceState Change the url without adding new entry to browser's history. See: replaceState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None @cmd wrapperReplaceState , [{ scrollY : 100 }, Profile page , Profile ] wrapperRequestFullscreen Set the current page to fullscreen. (request permission for the site on first call) Note: Starting from ZeroNet Rev3136 you can use the fullscreen javascript API directly, without fullscreen request Example: page . cmd ( wrapperRequestFullscreen ) wrapperSetLocalStorage Set browser's local store data stored for the site Parameter Description data Any data structure you want to store for the site Return : None Example: Page . local_storage [ topic. #{ @topic_id } _ #{ @topic_user_id } .visited ] = Time . timestamp () Page . cmd wrapperSetLocalStorage , Page . local_storage wrapperSetTitle Set browser's title Parameter Description title New browser tab title Return : None Example: Page . cmd wrapperSetTitle , newtitle wrapperSetViewport Set sites's viewport meta tag content (required for mobile sites) Parameter Description viewport The viewport meta tag content Return : None Example: # Prompt the private key @cmd wrapperSetViewport , width=device-width, initial-scale=1.0 UiServer The UiServer is for ZeroNet what the LAMP setup is for normal websites. The UiServer will do all the 'backend' work (eg: querying the DB, accessing files, etc). This are the API calls you will need to make your site dynamic. announcerInfo Tracker statistics for current site Return : { stats : { zero://45.77.23.92:15555 : { status : announced , num_success : 1 , time_last_error : 0 , time_status : 1541776998.782 , num_request : 1 , time_request : 1541776996.884 , num_error : 0 }, ... } } certAdd Add a new certificate to current user. Parameter Description domain Certificate issuer domain auth_type Auth type used on registration auth_user_name User name used on registration cert The cert itself: auth_address#auth_type/auth_user_name string signed by the cert site owner Return : \"ok\", \"Not changed\" or {\"error\": error_message} Example: @cmd certAdd , [ zeroid.bit , auth_type , user_name , cert_sign ], (res) = $ ( .ui ). removeClass ( flipped ) if res . error @cmd wrapperNotification , [ error , #{ res . error } ] certSelect Display certificate selector. Parameter Description accepted_domains List of domains that accepted by site as authorization provider accept_any Does not limits the accepted certificate providers accepted_pattern Regexp pattern for accepted certificate providers address Return : None Example: @cmd certSelect , { accepted_domains : [ zeroid.bit ], accepted_pattern : 1ZeroiD[0-9] } channelJoin Request notifications about sites's events. Parameter Description channel Channel to join Return : None Channels : siteChanged (joined by default) Events: peers_added, file_started, file_done, file_failed Example : # Wrapper websocket connection ready onOpenWebsocket: (e) = @cmd channelJoinAllsite , { channel : siteChanged } # Route incoming requests and messages route: (cmd, data) - if cmd == setSiteInfo @log Site changed , data else @log Unknown command , cmd , data Example event data { tasks : 0 , size_limit : 10 , address : 1RivERqttrjFqwp9YH1FviduBosQPtdBN , next_size_limit : 10 , event :[ file_done , index.html ], [...] # Same as siteInfo return dict } dbQuery Run a query on the sql cache Parameter Description query Sql query command params Parameter substitution to the sql query Return : Result of the query Example: Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name = :file_name , { file_name : data.json } ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name IN :file_names , { file_names : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json ? , { file_name : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) @log Updating user info... , @my_address Page . cmd dbQuery , [ SELECT user.*, json.json_id AS data_json_id FROM user LEFT JOIN json USING(path) WHERE path= #{ @my_address } /data.json ], (res) = if res . error or res . length == 0 # Db not ready yet or No user found $ ( .head-user.visitor ). css ( display , ) $ ( .user_name-my ). text ( Visitor ) if cb then cb () return @my_row = res [ 0 ] @my_id = @my_row [ user_id ] @my_name = @my_row [ user_name ] @my_max_size = @my_row [ max_size ] dirList List a content of a directory Parameter Description inner_path Directory you want to list Return : List of file and directory names fileDelete Delete a file Parameter Description inner_path The file you want to delete Return : \"ok\" on success else the error message fileGet Get file content Parameter Description inner_path The file you want to get required (optional) Try and wait for the file if it's not exists. (default: True) format (optional) Encoding of returned data. (text or base64) (default: text) timeout (optional) Maximum wait time to data arrive (default: 300) Return : The content of the file Example: # Upvote a topic on ZeroTalk submitTopicVote: (e) = if not Users . my_name # Not registered Page . cmd wrapperNotification , [ info , Please, request access before posting. ] return false elem = $ ( e . currentTarget ) elem . toggleClass ( active ). addClass ( loading ) inner_path = data/users/ #{ Users . my_address } /data.json Page . cmd fileGet , [ inner_path ], (data) = data = JSON . parse ( data ) data . topic_votes ?= {} # Create if not exits topic_address = elem . parents ( .topic ). data ( topic_address ) if elem . hasClass ( active ) # Add upvote to topic data . topic_votes [ topic_address ] = 1 else # Remove upvote from topic delete data . topic_votes [ topic_address ] # Write file and publish to other peers Page . writePublish inner_path , Page . jsonEncode ( data ), (res) = elem . removeClass ( loading ) if res == true @log File written else # Failed elem . toggleClass ( active ) # Change back return false fileList Recursively list of files in a directory Parameter Description inner_path Directory you want to list Return : List of files in the directory (recursive) fileNeed Initialize download of a (optional) file. Parameter Description inner_path The file you want to get timeout (optional) Maximum wait time to data arrive (default: 300) Return : \"ok\" on successfull download fileQuery Simple json file query command Parameter Description dir_inner_path Pattern of queried files query Query command (optional) Return : Matched content Query examples: [\"data/users/*/data.json\", \"topics\"] : Returns all topics node from all user files [\"data/users/*/data.json\", \"comments.1@2\"] : Returns user_data[\"comments\"][\"1@2\"] value from all user files [\"data/users/*/data.json\", \"\"] : Returns all data from users files [\"data/users/*/data.json\"] : Returns all data from users files (same as above) Example: @cmd fileQuery , [ data/users/*/data.json , topics ], (topics) = topics . sort (a, b) - # Sort by date return a . added - b . added for topic in topics @log topic . topic_id , topic . inner_path , topic . title fileRules Return the rules for the file. Parameter Description inner_path File inner path Return : Matched content Example result: { current_size : 2485 , cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ]}, files_allowed : data.json , signers : [ 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj ], user_address : 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj , max_size : 100000 } Example: @cmd fileRules , data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , (rules) = @log rules fileWrite Write file content Parameter Description inner_path Inner path of the file you want to write content_base64 Content you want to write to file (base64 encoded) Return : \"ok\" on success else the error message Example: writeData: (cb=null) - # Encode to json, encode utf8 json_raw = unescape ( encodeURIComponent ( JSON . stringify ({ hello : ZeroNet }, undefined , \\t ))) # Convert to to base64 and send @cmd fileWrite , [ data.json , btoa ( json_raw )], (res) = if res == ok if cb then cb ( true ) else @cmd wrapperNotification , [ error , File write error: #{ res } ] if cb then cb ( false ) Note: to write files that not in content.json yet, you must have \"own\": true in data/sites.json at the site you want to write ping Test UiServer websocket connection Return: pong serverInfo Return: All information about the server Example: @cmd serverInfo , {}, (server_info) = @log Server info: , server_info Example return value: { debug : true , # Running in debug mode fileserver_ip : * , # Fileserver binded to fileserver_port : 15441 , # FileServer port ip_external : true , # Active of passive mode platform : win32 , # Operating system ui_ip : 127.0.0.1 , # UiServer binded to ui_port : 43110 , # UiServer port (Web) version : 0.2.5 # Version } siteInfo Return : All information about the site Example: @cmd siteInfo , {}, (site_info) = @log Site info: , site_info Example return value: { tasks : 0 , # Number of files currently under download size_limit : 10 , # Current site size limit in MB address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , # Site address next_size_limit : 10 , # Size limit required by sum of site s files auth_address : 2D6xXUmCVAXGrbVUGRRJdS4j1hif1EMfae , # Current user s bitcoin address auth_key_sha512 : 269a0f4c1e0c697b9d56ccffd9a9748098e51acc5d2807adc15a587779be13cf , # Deprecated, dont use peers : 14 , # Peers of site auth_key : pOBdl00EJ29Ad8OmVIc763k4 , # Deprecated, dont use settings : { peers : 13 , # Saved peers num for sorting serving : true , # Site enabled modified : 1425344149.365 , # Last modification time of all site s files own : true , # Own site permissions : [ ADMIN ], # Site s permission size : 342165 # Site total size in bytes }, bad_files : 0 , # Files that needs to be download workers : 0 , # Current concurent downloads content : { # Root content.json files : 12 , # Number of file, detailed file info removed to reduce data transfer and parse time description : This site , title : ZeroHello , signs_required : 1 , modified : 1425344149.365 , ignore : (js|css)/(?!all.(js|css)) , signers_sign : null , address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , zeronet_version : 0.2.5 , includes : 0 }, cert_user_id : zeronetuser@zeroid.bit , # Currently selected certificate for the site started_task_num : 1 , # Last number of files downloaded content_updated : 1426008289.71 # Content.json update time } sitePublish Publish a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to publish (default: content.json) sign (optional) If True then sign the content.json before publish (default: True) Return : \"ok\" on success else the error message Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res siteReload Reload content.json file content and scans for optional files Return : \"ok\" on success siteSign Sign a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to sign (default: content.json) remove_missing_optional (optional) Remove the optional files from content.json that no longer present in the directory (default: False) Return : \"ok\" on success else the error message Note: Use \"stored\" as privatekey if its definied in users.json (eg. cloned sites) Example: if @site_info [ privatekey ] # Private key stored in users.json @cmd siteSign , [ stored , content.json ], (res) = @log Sign result , res siteUpdate Force check and download changed content from other peers (only necessary if user is in passive mode and using old version of Zeronet) Parameter Description address Address of site want to update (only current site allowed without site ADMIN permission) Return: None Example: # Manual site update for passive connections updateSite: = $ ( #passive_error a ). addClass ( loading ). removeClassLater ( loading , 1000 ) @log Updating site... @cmd siteUpdate , { address : @site_info . address } userGetSettings Get user's saved settings. Return: The user specific site's settings saved using userSetSettings. userSetSettings Set user's site specific settings. Parameter Description settings The user's site specific settings you want to store. Return: ok on success Plugin: Bigfile BigfileUploadInit Initialize a new upload endpoint for a bigfile. Parameter Description inner_path Upload location size File size Return : A dict with the information about the upload: Parameter Description url Http upload endpoint piece_size Size of each separately hashed part of the file inner_path File path within the site file_relative_path File path relative to content.json Note: Not supported non-ascii characters will be automatically removed from inner_path and file_relative_path values Example var input = document . createElement ( input ) document . body . appendChild ( input ) input . type = file input . style . visibility = hidden input . onchange = () = { var file = input . files [ 0 ] page . cmd ( bigfileUploadInit , [ optional/ + file . name , file . size ], ( init_res ) = { var formdata = new FormData () formdata . append ( file . name , file ) var req = new XMLHttpRequest () req . upload . addEventListener ( progress , console . log ) req . upload . addEventListener ( loadend , () = page . cmd ( wrapperConfirm , [ Upload finished! , Open file ], () = { window . top . location = init_res . inner_path } ) ) req . withCredentials = true req . open ( POST , init_res . url ) req . send ( formdata ) }) } input . click () Plugin: Chart chartDbQuery Run database query on chart database. Arguments and return value: Same as dbQuery chartGetPeerLocations Get list of unique peers in client Return : List of unique peers Example : Page . cmd ( chartGetPeerLocations ) [ { lat : 43.6655 , city : Toronto , ping : null , lon : - 79.4204 , country : Canada }, ... ] Plugin: Cors Allow cross-site file access under virtual directory /cors-siteaddress/ and grant cross-site database query using the as API command. corsPermission Request Cross origin resource sharing permission with the given site. Parameter Description address The site address you want get cors access Return : ok on success After the permission is granted the other site's files will be available under /cors-siteaddress/ virtual directory via http request or by the fileGet API command. The site will be added to user's client if it's required. Plugin: CryptMessage userPublickey Get user's site specific publickey Parameter Description index (optional) Sub-publickey within site (default: 0) Return : base64 encoded publickey eciesEncrypt Encrypt a text using a publickey Parameter Description text Text to encrypt publickey (optional) User's publickey index (int) or base64 encoded publickey (default: 0) return_aes_key (optional) Get the AES key used in encryption (default: False) Return : Encrypted text in base64 format or [Encrypted text in base64 format, AES key in base64 format] eciesDecrypt Try to decrypt list of texts Parameter Description params A text or list of encrypted texts privatekey (optional) User's privatekey index (int) or base64 encoded privatekey (default: 0) Return : Decrypted text or list of decrypted texts (null for failed decodings) aesEncrypt Encrypt a text using the key and the iv Parameter Description text A text encrypt using AES key (optional) Base64 encoded password (default: generate new) iv (optional) Base64 encoded iv (default: generate new) Return : [base64 encoded key, base64 encoded iv, base64 encoded encrypted text] aesDecrypt Decrypt text using the IV and AES key Parameter Description iv IV in Base64 format encrypted_text Encrypted text in Base64 format encrypted_texts List of [base64 encoded iv, base64 encoded encrypted text] pairs key Base64 encoded password for the text keys Keys for decoding (tries every one for every pairs) Return : Decoded text or list of decoded texts Plugin: Newsfeed feedFollow Set followed sql queries. The SQL query should result in rows with cols: Field Description type Type: post, article, comment, mention date_added Event time title Event's first line to be displayed body Event's second and third line url Link to event's page Parameter Description feeds Format: {\"query name\": [SQL query, [param1, param2, ...], ...}, parameters will be escaped, joined by , inserted in place of :params in the Sql query. Return : ok Example: # Follow ZeroBlog posts query = SELECT post_id AS event_uri, post AS type, date_published AS date_added, title AS title, body AS body, ?Post: || post_id AS url FROM post params = [ ] Page . cmd feedFollow [{ Posts : [ query , params ]}] feedListFollow Return of current followed feeds Return : The currently followed feeds in the same format as in the feedFollow commands feedQuery Execute all followed sql query Return : The result of the followed Sql queries Parameter Description limit Limit of results per followed site (default: 10) day_limit Return no older than number of this days (default: 3) Plugin: MergerSite mergerSiteAdd Start downloading new merger site(s) Parameter Description addresses Site address or list of site addresses mergerSiteDelete Stop seeding and delete a merged site Parameter Description address Site address mergerSiteList Return merged sites. Parameter Description query_site_info If True, then gives back detailed site info for merged sites Plugin: Mute muteAdd Add new user to mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. cert_user_id Cert user name of the user reason Reason of the muting Return : ok if confirmed Example: Page . cmd ( muteAdd , [ 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz , helloworld@kaffie.bit , Spammer ]) muteRemove Remove a user from mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. Return : ok if confirmed Example: Page . cmd ( muteRemove , 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz ) muteList List muted users. (Requires ADMIN permission on site) Return : List of muted users Plugin: OptionalManager optionalFileList Return list of optional files Parameter Description address The site address you want to list optional files (default: current site) orderby Order of returned optional files (default: time_downloaded DESC) limit Max number of returned optional files (default: 10) Return : Database row of optional files: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed optionalFileInfo Query optional file info from database Parameter Description inner_path The path of the file Return : Database row of optional file: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed optionalFilePin Pin (exclude from automatized optional file cleanup) downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site) optionalFileUnpin Remove pinning (include from automatized optional file cleanup) of downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site) optionalFileDelete Query a downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site) optionalLimitStats Return currently used disk space by optional files Return : limit, used and free space statistics optionalLimitSet Set the optional file limit Parameter Description limit Max space used by the optional files in gb or percent of used space optionalHelpList List the auto-downloaded directories of optional files Parameter Description address Address of site you want to list helped directories (default: current site) Return : Dict of auto-downloaded directories and descriptions optionalHelp Add directory to auto-download list Parameter Description directory Directory you want to add to auto-download list title Title for the entry (displayed on ZeroHello) address Address of site you want to add the auto-download directory (default: current site) optionalHelpRemove Remove an auto-download entry Parameter Description directory Directory you want to remove from auto-download list address Address of affected site (default: current site) optionalHelpAll Help download every new uploaded optional file to the site Parameter Description value Enable or Disable the auto-download address Address of affected site (default: current site) Admin commands (requires ADMIN permission in data/sites.json) as Execute command in other site's context Parameter Description address The context site's address cmd API command name arguments API command arguments Return : Command's return value Example Page . cmd ( as , [ 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP , siteSetLimit , 20 ], console . log ) address = 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP query = SELECT * FROM json WHERE file_name = :file_name params = { file_name : data.json } Page . cmd ( as , [ address , dbQuery , [ query , params ]], function ( res ) { console . log ( res . length ) } ) Return : ok configSet Create or update an entry in ZeroNet config file. (zeronet.conf by default) Parameter Description key Configuration entry name value Configuration entry new value Return : ok certSet Set the used certificate for current site. Parameter Description domain Domain of the certificate issuer Return : None channelJoinAllsite Request notifications about every site's events. Parameter Description channel Channel to join (see channelJoin) Return : None serverPortcheck Start checking if port is opened Return : True (port opened) or False (port closed) serverShutdown Stop running ZeroNet client. Return : None serverUpdate Re-download ZeroNet from github. Return : None siteClone Copy site files into a new one. Every file and directory will be skipped if it has a -default subfixed version and the subfixed version will be copied instead of it. Eg. If you have a data and a data-default directory: The data directory will not be copied and the data-default directory will be renamed to data. Parameter Description address Address of site want to clone root_inner_path The source directory of the new site Return : None, automatically redirects to new site on completion siteList Return : SiteInfo list of all downloaded sites sitePause Pause site serving Parameter Description address Address of site want to pause Return : None siteResume Resume site serving Parameter Description address Address of site want to resume Return : None","title":"ZeroFrame API Reference"},{"location":"site_development/zeroframe_api_reference/#zeroframe-api-reference","text":"","title":"ZeroFrame API Reference"},{"location":"site_development/zeroframe_api_reference/#the-zeroframe-api","text":"ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created. The library can be imported like any other JavaScript file, or site developers also have the option of importing through NPM . Please see the ZeroFrame API Reference for API details.","title":"The ZeroFrame API"},{"location":"site_development/zeroframe_api_reference/#wrapper","text":"These commands are handled by the wrapper frame and are thus not sent to the UiServer using websocket.","title":"Wrapper"},{"location":"site_development/zeroframe_api_reference/#wrapperconfirm","text":"Display a notification with confirm button Parameter Description message The message you want to display button_caption (optional) Caption of the confirmation button (default: OK) Return : True if clicked on button Example: # Delete site siteDelete: (address) - site = @sites [ address ] title = site . content . title if title . length 40 title = title . substring ( 0 , 15 ) + ... + title . substring ( title . length - 10 ) @cmd wrapperConfirm , [ Are you sure you sure? b #{ title } /b , Delete ], (confirmed) = @log Deleting #{ site . address } ... , confirmed if confirmed $ ( .site- #{ site . address } ). addClass ( deleted ) @cmd siteDelete , { address : address }","title":"wrapperConfirm"},{"location":"site_development/zeroframe_api_reference/#wrapperinnerloaded","text":"Applies the windows.location.hash to page url. Call when you page is fully loaded to jump to the desired anchor point.","title":"wrapperInnerLoaded"},{"location":"site_development/zeroframe_api_reference/#wrappergetlocalstorage","text":"Return : Browser's local store for the site Example: @cmd wrapperGetLocalStorage , [], (res) = res ?= {} @log Local storage value: , res","title":"wrapperGetLocalStorage"},{"location":"site_development/zeroframe_api_reference/#wrappergetstate","text":"Return : Browser's current history state object","title":"wrapperGetState"},{"location":"site_development/zeroframe_api_reference/#wrappergetajaxkey","text":"Return : The key you need to initilize ajax requests Example: ajax_key = await page . cmdp ( wrapperGetAjaxKey ) req = new window . XMLHttpRequest () req . open ( GET , content.json?ajax_key= + ajax_key ) req . setRequestHeader ( Range , bytes=10-200 ) // Optional: only if you want request partial file req . send () console . log ( req . response )","title":"wrapperGetAjaxKey"},{"location":"site_development/zeroframe_api_reference/#wrappernotification","text":"Display a notification Parameter Description type Possible values: info, error, done message The message you want to display timeout (optional) Hide display after this interval (milliseconds) Return : None Example: @cmd wrapperNotification , [ done , Your registration has been sent! , 10000 ]","title":"wrapperNotification"},{"location":"site_development/zeroframe_api_reference/#wrapperopenwindow","text":"Navigates or opens a new popup window. Parameter Description url Url of the opened page target (optional) Target window name specs (optional) Special properties of the window (see: window.open specs ) Example: @cmd wrapperOpenWindow , [ https://zeronet.io , _blank , width=550,height=600,location=no,menubar=no ]","title":"wrapperOpenWindow"},{"location":"site_development/zeroframe_api_reference/#wrapperpermissionadd","text":"Request new permission for site Parameter Description permission Name of permission (eg. Merger:ZeroMe)","title":"wrapperPermissionAdd"},{"location":"site_development/zeroframe_api_reference/#wrapperprompt","text":"Prompt text input from user Parameter Description message The message you want to display type (optional) Type of the input (default: text) Return : Text entered to input Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res","title":"wrapperPrompt"},{"location":"site_development/zeroframe_api_reference/#wrapperpushstate","text":"Change the url and adds new entry to browser's history. See: pushState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None Example: @cmd wrapperPushState , [{ scrollY : 100 }, Profile page , Profile ]","title":"wrapperPushState"},{"location":"site_development/zeroframe_api_reference/#wrapperreplacestate","text":"Change the url without adding new entry to browser's history. See: replaceState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None @cmd wrapperReplaceState , [{ scrollY : 100 }, Profile page , Profile ]","title":"wrapperReplaceState"},{"location":"site_development/zeroframe_api_reference/#wrapperrequestfullscreen","text":"Set the current page to fullscreen. (request permission for the site on first call) Note: Starting from ZeroNet Rev3136 you can use the fullscreen javascript API directly, without fullscreen request Example: page . cmd ( wrapperRequestFullscreen )","title":"wrapperRequestFullscreen"},{"location":"site_development/zeroframe_api_reference/#wrappersetlocalstorage","text":"Set browser's local store data stored for the site Parameter Description data Any data structure you want to store for the site Return : None Example: Page . local_storage [ topic. #{ @topic_id } _ #{ @topic_user_id } .visited ] = Time . timestamp () Page . cmd wrapperSetLocalStorage , Page . local_storage","title":"wrapperSetLocalStorage"},{"location":"site_development/zeroframe_api_reference/#wrappersettitle","text":"Set browser's title Parameter Description title New browser tab title Return : None Example: Page . cmd wrapperSetTitle , newtitle","title":"wrapperSetTitle"},{"location":"site_development/zeroframe_api_reference/#wrappersetviewport","text":"Set sites's viewport meta tag content (required for mobile sites) Parameter Description viewport The viewport meta tag content Return : None Example: # Prompt the private key @cmd wrapperSetViewport , width=device-width, initial-scale=1.0","title":"wrapperSetViewport"},{"location":"site_development/zeroframe_api_reference/#uiserver","text":"The UiServer is for ZeroNet what the LAMP setup is for normal websites. The UiServer will do all the 'backend' work (eg: querying the DB, accessing files, etc). This are the API calls you will need to make your site dynamic.","title":"UiServer"},{"location":"site_development/zeroframe_api_reference/#announcerinfo","text":"Tracker statistics for current site Return : { stats : { zero://45.77.23.92:15555 : { status : announced , num_success : 1 , time_last_error : 0 , time_status : 1541776998.782 , num_request : 1 , time_request : 1541776996.884 , num_error : 0 }, ... } }","title":"announcerInfo"},{"location":"site_development/zeroframe_api_reference/#certadd","text":"Add a new certificate to current user. Parameter Description domain Certificate issuer domain auth_type Auth type used on registration auth_user_name User name used on registration cert The cert itself: auth_address#auth_type/auth_user_name string signed by the cert site owner Return : \"ok\", \"Not changed\" or {\"error\": error_message} Example: @cmd certAdd , [ zeroid.bit , auth_type , user_name , cert_sign ], (res) = $ ( .ui ). removeClass ( flipped ) if res . error @cmd wrapperNotification , [ error , #{ res . error } ]","title":"certAdd"},{"location":"site_development/zeroframe_api_reference/#certselect","text":"Display certificate selector. Parameter Description accepted_domains List of domains that accepted by site as authorization provider accept_any Does not limits the accepted certificate providers accepted_pattern Regexp pattern for accepted certificate providers address Return : None Example: @cmd certSelect , { accepted_domains : [ zeroid.bit ], accepted_pattern : 1ZeroiD[0-9] }","title":"certSelect"},{"location":"site_development/zeroframe_api_reference/#channeljoin","text":"Request notifications about sites's events. Parameter Description channel Channel to join Return : None Channels : siteChanged (joined by default) Events: peers_added, file_started, file_done, file_failed Example : # Wrapper websocket connection ready onOpenWebsocket: (e) = @cmd channelJoinAllsite , { channel : siteChanged } # Route incoming requests and messages route: (cmd, data) - if cmd == setSiteInfo @log Site changed , data else @log Unknown command , cmd , data Example event data { tasks : 0 , size_limit : 10 , address : 1RivERqttrjFqwp9YH1FviduBosQPtdBN , next_size_limit : 10 , event :[ file_done , index.html ], [...] # Same as siteInfo return dict }","title":"channelJoin"},{"location":"site_development/zeroframe_api_reference/#dbquery","text":"Run a query on the sql cache Parameter Description query Sql query command params Parameter substitution to the sql query Return : Result of the query Example: Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name = :file_name , { file_name : data.json } ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name IN :file_names , { file_names : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json ? , { file_name : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) @log Updating user info... , @my_address Page . cmd dbQuery , [ SELECT user.*, json.json_id AS data_json_id FROM user LEFT JOIN json USING(path) WHERE path= #{ @my_address } /data.json ], (res) = if res . error or res . length == 0 # Db not ready yet or No user found $ ( .head-user.visitor ). css ( display , ) $ ( .user_name-my ). text ( Visitor ) if cb then cb () return @my_row = res [ 0 ] @my_id = @my_row [ user_id ] @my_name = @my_row [ user_name ] @my_max_size = @my_row [ max_size ]","title":"dbQuery"},{"location":"site_development/zeroframe_api_reference/#dirlist","text":"List a content of a directory Parameter Description inner_path Directory you want to list Return : List of file and directory names","title":"dirList"},{"location":"site_development/zeroframe_api_reference/#filedelete","text":"Delete a file Parameter Description inner_path The file you want to delete Return : \"ok\" on success else the error message","title":"fileDelete"},{"location":"site_development/zeroframe_api_reference/#fileget","text":"Get file content Parameter Description inner_path The file you want to get required (optional) Try and wait for the file if it's not exists. (default: True) format (optional) Encoding of returned data. (text or base64) (default: text) timeout (optional) Maximum wait time to data arrive (default: 300) Return : The content of the file Example: # Upvote a topic on ZeroTalk submitTopicVote: (e) = if not Users . my_name # Not registered Page . cmd wrapperNotification , [ info , Please, request access before posting. ] return false elem = $ ( e . currentTarget ) elem . toggleClass ( active ). addClass ( loading ) inner_path = data/users/ #{ Users . my_address } /data.json Page . cmd fileGet , [ inner_path ], (data) = data = JSON . parse ( data ) data . topic_votes ?= {} # Create if not exits topic_address = elem . parents ( .topic ). data ( topic_address ) if elem . hasClass ( active ) # Add upvote to topic data . topic_votes [ topic_address ] = 1 else # Remove upvote from topic delete data . topic_votes [ topic_address ] # Write file and publish to other peers Page . writePublish inner_path , Page . jsonEncode ( data ), (res) = elem . removeClass ( loading ) if res == true @log File written else # Failed elem . toggleClass ( active ) # Change back return false","title":"fileGet"},{"location":"site_development/zeroframe_api_reference/#filelist","text":"Recursively list of files in a directory Parameter Description inner_path Directory you want to list Return : List of files in the directory (recursive)","title":"fileList"},{"location":"site_development/zeroframe_api_reference/#fileneed","text":"Initialize download of a (optional) file. Parameter Description inner_path The file you want to get timeout (optional) Maximum wait time to data arrive (default: 300) Return : \"ok\" on successfull download","title":"fileNeed"},{"location":"site_development/zeroframe_api_reference/#filequery","text":"Simple json file query command Parameter Description dir_inner_path Pattern of queried files query Query command (optional) Return : Matched content Query examples: [\"data/users/*/data.json\", \"topics\"] : Returns all topics node from all user files [\"data/users/*/data.json\", \"comments.1@2\"] : Returns user_data[\"comments\"][\"1@2\"] value from all user files [\"data/users/*/data.json\", \"\"] : Returns all data from users files [\"data/users/*/data.json\"] : Returns all data from users files (same as above) Example: @cmd fileQuery , [ data/users/*/data.json , topics ], (topics) = topics . sort (a, b) - # Sort by date return a . added - b . added for topic in topics @log topic . topic_id , topic . inner_path , topic . title","title":"fileQuery"},{"location":"site_development/zeroframe_api_reference/#filerules","text":"Return the rules for the file. Parameter Description inner_path File inner path Return : Matched content Example result: { current_size : 2485 , cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ]}, files_allowed : data.json , signers : [ 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj ], user_address : 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj , max_size : 100000 } Example: @cmd fileRules , data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , (rules) = @log rules","title":"fileRules"},{"location":"site_development/zeroframe_api_reference/#filewrite","text":"Write file content Parameter Description inner_path Inner path of the file you want to write content_base64 Content you want to write to file (base64 encoded) Return : \"ok\" on success else the error message Example: writeData: (cb=null) - # Encode to json, encode utf8 json_raw = unescape ( encodeURIComponent ( JSON . stringify ({ hello : ZeroNet }, undefined , \\t ))) # Convert to to base64 and send @cmd fileWrite , [ data.json , btoa ( json_raw )], (res) = if res == ok if cb then cb ( true ) else @cmd wrapperNotification , [ error , File write error: #{ res } ] if cb then cb ( false ) Note: to write files that not in content.json yet, you must have \"own\": true in data/sites.json at the site you want to write","title":"fileWrite"},{"location":"site_development/zeroframe_api_reference/#ping","text":"Test UiServer websocket connection Return: pong","title":"ping"},{"location":"site_development/zeroframe_api_reference/#serverinfo","text":"Return: All information about the server Example: @cmd serverInfo , {}, (server_info) = @log Server info: , server_info Example return value: { debug : true , # Running in debug mode fileserver_ip : * , # Fileserver binded to fileserver_port : 15441 , # FileServer port ip_external : true , # Active of passive mode platform : win32 , # Operating system ui_ip : 127.0.0.1 , # UiServer binded to ui_port : 43110 , # UiServer port (Web) version : 0.2.5 # Version }","title":"serverInfo"},{"location":"site_development/zeroframe_api_reference/#siteinfo","text":"Return : All information about the site Example: @cmd siteInfo , {}, (site_info) = @log Site info: , site_info Example return value: { tasks : 0 , # Number of files currently under download size_limit : 10 , # Current site size limit in MB address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , # Site address next_size_limit : 10 , # Size limit required by sum of site s files auth_address : 2D6xXUmCVAXGrbVUGRRJdS4j1hif1EMfae , # Current user s bitcoin address auth_key_sha512 : 269a0f4c1e0c697b9d56ccffd9a9748098e51acc5d2807adc15a587779be13cf , # Deprecated, dont use peers : 14 , # Peers of site auth_key : pOBdl00EJ29Ad8OmVIc763k4 , # Deprecated, dont use settings : { peers : 13 , # Saved peers num for sorting serving : true , # Site enabled modified : 1425344149.365 , # Last modification time of all site s files own : true , # Own site permissions : [ ADMIN ], # Site s permission size : 342165 # Site total size in bytes }, bad_files : 0 , # Files that needs to be download workers : 0 , # Current concurent downloads content : { # Root content.json files : 12 , # Number of file, detailed file info removed to reduce data transfer and parse time description : This site , title : ZeroHello , signs_required : 1 , modified : 1425344149.365 , ignore : (js|css)/(?!all.(js|css)) , signers_sign : null , address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , zeronet_version : 0.2.5 , includes : 0 }, cert_user_id : zeronetuser@zeroid.bit , # Currently selected certificate for the site started_task_num : 1 , # Last number of files downloaded content_updated : 1426008289.71 # Content.json update time }","title":"siteInfo"},{"location":"site_development/zeroframe_api_reference/#sitepublish","text":"Publish a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to publish (default: content.json) sign (optional) If True then sign the content.json before publish (default: True) Return : \"ok\" on success else the error message Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res","title":"sitePublish"},{"location":"site_development/zeroframe_api_reference/#sitereload","text":"Reload content.json file content and scans for optional files Return : \"ok\" on success","title":"siteReload"},{"location":"site_development/zeroframe_api_reference/#sitesign","text":"Sign a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to sign (default: content.json) remove_missing_optional (optional) Remove the optional files from content.json that no longer present in the directory (default: False) Return : \"ok\" on success else the error message Note: Use \"stored\" as privatekey if its definied in users.json (eg. cloned sites) Example: if @site_info [ privatekey ] # Private key stored in users.json @cmd siteSign , [ stored , content.json ], (res) = @log Sign result , res","title":"siteSign"},{"location":"site_development/zeroframe_api_reference/#siteupdate","text":"Force check and download changed content from other peers (only necessary if user is in passive mode and using old version of Zeronet) Parameter Description address Address of site want to update (only current site allowed without site ADMIN permission) Return: None Example: # Manual site update for passive connections updateSite: = $ ( #passive_error a ). addClass ( loading ). removeClassLater ( loading , 1000 ) @log Updating site... @cmd siteUpdate , { address : @site_info . address }","title":"siteUpdate"},{"location":"site_development/zeroframe_api_reference/#usergetsettings","text":"Get user's saved settings. Return: The user specific site's settings saved using userSetSettings.","title":"userGetSettings"},{"location":"site_development/zeroframe_api_reference/#usersetsettings","text":"Set user's site specific settings. Parameter Description settings The user's site specific settings you want to store. Return: ok on success","title":"userSetSettings"},{"location":"site_development/zeroframe_api_reference/#plugin-bigfile","text":"","title":"Plugin: Bigfile"},{"location":"site_development/zeroframe_api_reference/#bigfileuploadinit","text":"Initialize a new upload endpoint for a bigfile. Parameter Description inner_path Upload location size File size Return : A dict with the information about the upload: Parameter Description url Http upload endpoint piece_size Size of each separately hashed part of the file inner_path File path within the site file_relative_path File path relative to content.json Note: Not supported non-ascii characters will be automatically removed from inner_path and file_relative_path values Example var input = document . createElement ( input ) document . body . appendChild ( input ) input . type = file input . style . visibility = hidden input . onchange = () = { var file = input . files [ 0 ] page . cmd ( bigfileUploadInit , [ optional/ + file . name , file . size ], ( init_res ) = { var formdata = new FormData () formdata . append ( file . name , file ) var req = new XMLHttpRequest () req . upload . addEventListener ( progress , console . log ) req . upload . addEventListener ( loadend , () = page . cmd ( wrapperConfirm , [ Upload finished! , Open file ], () = { window . top . location = init_res . inner_path } ) ) req . withCredentials = true req . open ( POST , init_res . url ) req . send ( formdata ) }) } input . click ()","title":"BigfileUploadInit"},{"location":"site_development/zeroframe_api_reference/#plugin-chart","text":"","title":"Plugin: Chart"},{"location":"site_development/zeroframe_api_reference/#chartdbquery","text":"Run database query on chart database. Arguments and return value: Same as dbQuery","title":"chartDbQuery"},{"location":"site_development/zeroframe_api_reference/#chartgetpeerlocations","text":"Get list of unique peers in client Return : List of unique peers Example : Page . cmd ( chartGetPeerLocations ) [ { lat : 43.6655 , city : Toronto , ping : null , lon : - 79.4204 , country : Canada }, ... ]","title":"chartGetPeerLocations"},{"location":"site_development/zeroframe_api_reference/#plugin-cors","text":"Allow cross-site file access under virtual directory /cors-siteaddress/ and grant cross-site database query using the as API command.","title":"Plugin: Cors"},{"location":"site_development/zeroframe_api_reference/#corspermission","text":"Request Cross origin resource sharing permission with the given site. Parameter Description address The site address you want get cors access Return : ok on success After the permission is granted the other site's files will be available under /cors-siteaddress/ virtual directory via http request or by the fileGet API command. The site will be added to user's client if it's required.","title":"corsPermission"},{"location":"site_development/zeroframe_api_reference/#plugin-cryptmessage","text":"","title":"Plugin: CryptMessage"},{"location":"site_development/zeroframe_api_reference/#userpublickey","text":"Get user's site specific publickey Parameter Description index (optional) Sub-publickey within site (default: 0) Return : base64 encoded publickey","title":"userPublickey"},{"location":"site_development/zeroframe_api_reference/#eciesencrypt","text":"Encrypt a text using a publickey Parameter Description text Text to encrypt publickey (optional) User's publickey index (int) or base64 encoded publickey (default: 0) return_aes_key (optional) Get the AES key used in encryption (default: False) Return : Encrypted text in base64 format or [Encrypted text in base64 format, AES key in base64 format]","title":"eciesEncrypt"},{"location":"site_development/zeroframe_api_reference/#eciesdecrypt","text":"Try to decrypt list of texts Parameter Description params A text or list of encrypted texts privatekey (optional) User's privatekey index (int) or base64 encoded privatekey (default: 0) Return : Decrypted text or list of decrypted texts (null for failed decodings)","title":"eciesDecrypt"},{"location":"site_development/zeroframe_api_reference/#aesencrypt","text":"Encrypt a text using the key and the iv Parameter Description text A text encrypt using AES key (optional) Base64 encoded password (default: generate new) iv (optional) Base64 encoded iv (default: generate new) Return : [base64 encoded key, base64 encoded iv, base64 encoded encrypted text]","title":"aesEncrypt"},{"location":"site_development/zeroframe_api_reference/#aesdecrypt","text":"Decrypt text using the IV and AES key Parameter Description iv IV in Base64 format encrypted_text Encrypted text in Base64 format encrypted_texts List of [base64 encoded iv, base64 encoded encrypted text] pairs key Base64 encoded password for the text keys Keys for decoding (tries every one for every pairs) Return : Decoded text or list of decoded texts","title":"aesDecrypt"},{"location":"site_development/zeroframe_api_reference/#plugin-newsfeed","text":"","title":"Plugin: Newsfeed"},{"location":"site_development/zeroframe_api_reference/#feedfollow","text":"Set followed sql queries. The SQL query should result in rows with cols: Field Description type Type: post, article, comment, mention date_added Event time title Event's first line to be displayed body Event's second and third line url Link to event's page Parameter Description feeds Format: {\"query name\": [SQL query, [param1, param2, ...], ...}, parameters will be escaped, joined by , inserted in place of :params in the Sql query. Return : ok Example: # Follow ZeroBlog posts query = SELECT post_id AS event_uri, post AS type, date_published AS date_added, title AS title, body AS body, ?Post: || post_id AS url FROM post params = [ ] Page . cmd feedFollow [{ Posts : [ query , params ]}]","title":"feedFollow"},{"location":"site_development/zeroframe_api_reference/#feedlistfollow","text":"Return of current followed feeds Return : The currently followed feeds in the same format as in the feedFollow commands","title":"feedListFollow"},{"location":"site_development/zeroframe_api_reference/#feedquery","text":"Execute all followed sql query Return : The result of the followed Sql queries Parameter Description limit Limit of results per followed site (default: 10) day_limit Return no older than number of this days (default: 3)","title":"feedQuery"},{"location":"site_development/zeroframe_api_reference/#plugin-mergersite","text":"","title":"Plugin: MergerSite"},{"location":"site_development/zeroframe_api_reference/#mergersiteadd","text":"Start downloading new merger site(s) Parameter Description addresses Site address or list of site addresses","title":"mergerSiteAdd"},{"location":"site_development/zeroframe_api_reference/#mergersitedelete","text":"Stop seeding and delete a merged site Parameter Description address Site address","title":"mergerSiteDelete"},{"location":"site_development/zeroframe_api_reference/#mergersitelist","text":"Return merged sites. Parameter Description query_site_info If True, then gives back detailed site info for merged sites","title":"mergerSiteList"},{"location":"site_development/zeroframe_api_reference/#plugin-mute","text":"","title":"Plugin: Mute"},{"location":"site_development/zeroframe_api_reference/#muteadd","text":"Add new user to mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. cert_user_id Cert user name of the user reason Reason of the muting Return : ok if confirmed Example: Page . cmd ( muteAdd , [ 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz , helloworld@kaffie.bit , Spammer ])","title":"muteAdd"},{"location":"site_development/zeroframe_api_reference/#muteremove","text":"Remove a user from mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. Return : ok if confirmed Example: Page . cmd ( muteRemove , 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz )","title":"muteRemove"},{"location":"site_development/zeroframe_api_reference/#mutelist","text":"List muted users. (Requires ADMIN permission on site) Return : List of muted users","title":"muteList"},{"location":"site_development/zeroframe_api_reference/#plugin-optionalmanager","text":"","title":"Plugin: OptionalManager"},{"location":"site_development/zeroframe_api_reference/#optionalfilelist","text":"Return list of optional files Parameter Description address The site address you want to list optional files (default: current site) orderby Order of returned optional files (default: time_downloaded DESC) limit Max number of returned optional files (default: 10) Return : Database row of optional files: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed","title":"optionalFileList"},{"location":"site_development/zeroframe_api_reference/#optionalfileinfo","text":"Query optional file info from database Parameter Description inner_path The path of the file Return : Database row of optional file: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed","title":"optionalFileInfo"},{"location":"site_development/zeroframe_api_reference/#optionalfilepin","text":"Pin (exclude from automatized optional file cleanup) downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site)","title":"optionalFilePin"},{"location":"site_development/zeroframe_api_reference/#optionalfileunpin","text":"Remove pinning (include from automatized optional file cleanup) of downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site)","title":"optionalFileUnpin"},{"location":"site_development/zeroframe_api_reference/#optionalfiledelete","text":"Query a downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site)","title":"optionalFileDelete"},{"location":"site_development/zeroframe_api_reference/#optionallimitstats","text":"Return currently used disk space by optional files Return : limit, used and free space statistics","title":"optionalLimitStats"},{"location":"site_development/zeroframe_api_reference/#optionallimitset","text":"Set the optional file limit Parameter Description limit Max space used by the optional files in gb or percent of used space","title":"optionalLimitSet"},{"location":"site_development/zeroframe_api_reference/#optionalhelplist","text":"List the auto-downloaded directories of optional files Parameter Description address Address of site you want to list helped directories (default: current site) Return : Dict of auto-downloaded directories and descriptions","title":"optionalHelpList"},{"location":"site_development/zeroframe_api_reference/#optionalhelp","text":"Add directory to auto-download list Parameter Description directory Directory you want to add to auto-download list title Title for the entry (displayed on ZeroHello) address Address of site you want to add the auto-download directory (default: current site)","title":"optionalHelp"},{"location":"site_development/zeroframe_api_reference/#optionalhelpremove","text":"Remove an auto-download entry Parameter Description directory Directory you want to remove from auto-download list address Address of affected site (default: current site)","title":"optionalHelpRemove"},{"location":"site_development/zeroframe_api_reference/#optionalhelpall","text":"Help download every new uploaded optional file to the site Parameter Description value Enable or Disable the auto-download address Address of affected site (default: current site)","title":"optionalHelpAll"},{"location":"site_development/zeroframe_api_reference/#admin-commands","text":"(requires ADMIN permission in data/sites.json)","title":"Admin commands"},{"location":"site_development/zeroframe_api_reference/#as","text":"Execute command in other site's context Parameter Description address The context site's address cmd API command name arguments API command arguments Return : Command's return value Example Page . cmd ( as , [ 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP , siteSetLimit , 20 ], console . log ) address = 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP query = SELECT * FROM json WHERE file_name = :file_name params = { file_name : data.json } Page . cmd ( as , [ address , dbQuery , [ query , params ]], function ( res ) { console . log ( res . length ) } ) Return : ok","title":"as"},{"location":"site_development/zeroframe_api_reference/#configset","text":"Create or update an entry in ZeroNet config file. (zeronet.conf by default) Parameter Description key Configuration entry name value Configuration entry new value Return : ok","title":"configSet"},{"location":"site_development/zeroframe_api_reference/#certset","text":"Set the used certificate for current site. Parameter Description domain Domain of the certificate issuer Return : None","title":"certSet"},{"location":"site_development/zeroframe_api_reference/#channeljoinallsite","text":"Request notifications about every site's events. Parameter Description channel Channel to join (see channelJoin) Return : None","title":"channelJoinAllsite"},{"location":"site_development/zeroframe_api_reference/#serverportcheck","text":"Start checking if port is opened Return : True (port opened) or False (port closed)","title":"serverPortcheck"},{"location":"site_development/zeroframe_api_reference/#servershutdown","text":"Stop running ZeroNet client. Return : None","title":"serverShutdown"},{"location":"site_development/zeroframe_api_reference/#serverupdate","text":"Re-download ZeroNet from github. Return : None","title":"serverUpdate"},{"location":"site_development/zeroframe_api_reference/#siteclone","text":"Copy site files into a new one. Every file and directory will be skipped if it has a -default subfixed version and the subfixed version will be copied instead of it. Eg. If you have a data and a data-default directory: The data directory will not be copied and the data-default directory will be renamed to data. Parameter Description address Address of site want to clone root_inner_path The source directory of the new site Return : None, automatically redirects to new site on completion","title":"siteClone"},{"location":"site_development/zeroframe_api_reference/#sitelist","text":"Return : SiteInfo list of all downloaded sites","title":"siteList"},{"location":"site_development/zeroframe_api_reference/#sitepause","text":"Pause site serving Parameter Description address Address of site want to pause Return : None","title":"sitePause"},{"location":"site_development/zeroframe_api_reference/#siteresume","text":"Resume site serving Parameter Description address Address of site want to resume Return : None","title":"siteResume"},{"location":"using_zeronet/create_new_site/","text":"Create new ZeroNet site Easy way: Using the web interface Click on \u22ee \"Create new, empty site\" menu item on the site ZeroHello . You will be redirected to a completely new site that is only modifiable by you! You can find and modify your site's content in data/[yoursiteaddress] directory After the modifications open your site, drag the topright \"0\" button to left, then press sign and publish buttons on the bottom Manual way: Using the command line 1. Create site structure Shut down ZeroNet if it is running Browse to the folder where ZeroNet is installed and run: $ zeronet.py siteCreate ... - Site private key: 23DKQpzxhbVBrAtvLEc2uvk7DZweh4qL3fn3jpM3LgHDczMK2TtYUq - Site address: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... - Site created! $ zeronet.py ... This will create the initial files for your site inside data/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 . Note: Windows users using the bundle version must browse into the ZeroBundle/ZeroNet folder and run \"../Python/python.exe\" zeronet.py siteCreate 2. Build/Modify site Update the site files located in data/[your site address key] (eg: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2). When your site is ready run: $ zeronet.py siteSign 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 - Signing site: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2... Private key ( input hidden ) : Enter the private key you got when you created the site. This will sign all files so peers can verify that the site owner is who made the changes. 3. Publish site changes In order to inform peers about the changes you made you need to run: $ zeronet.py sitePublish 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... Site:13DNDk..bhC2 Publishing to 3 /10 peers... Site:13DNDk..bhC2 Successfuly published to 3 peers - Serving files.... That's it! You've successfully signed and published your modifications. Your site will be accessible from: http://localhost:43110/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 Next steps: ZeroNet Developer Documentation","title":"Create new ZeroNet site"},{"location":"using_zeronet/create_new_site/#create-new-zeronet-site","text":"","title":"Create new ZeroNet site"},{"location":"using_zeronet/create_new_site/#easy-way-using-the-web-interface","text":"Click on \u22ee \"Create new, empty site\" menu item on the site ZeroHello . You will be redirected to a completely new site that is only modifiable by you! You can find and modify your site's content in data/[yoursiteaddress] directory After the modifications open your site, drag the topright \"0\" button to left, then press sign and publish buttons on the bottom","title":"Easy way: Using the web interface"},{"location":"using_zeronet/create_new_site/#manual-way-using-the-command-line","text":"","title":"Manual way: Using the command line"},{"location":"using_zeronet/create_new_site/#1-create-site-structure","text":"Shut down ZeroNet if it is running Browse to the folder where ZeroNet is installed and run: $ zeronet.py siteCreate ... - Site private key: 23DKQpzxhbVBrAtvLEc2uvk7DZweh4qL3fn3jpM3LgHDczMK2TtYUq - Site address: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... - Site created! $ zeronet.py ... This will create the initial files for your site inside data/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 . Note: Windows users using the bundle version must browse into the ZeroBundle/ZeroNet folder and run \"../Python/python.exe\" zeronet.py siteCreate","title":"1. Create site structure"},{"location":"using_zeronet/create_new_site/#2-buildmodify-site","text":"Update the site files located in data/[your site address key] (eg: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2). When your site is ready run: $ zeronet.py siteSign 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 - Signing site: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2... Private key ( input hidden ) : Enter the private key you got when you created the site. This will sign all files so peers can verify that the site owner is who made the changes.","title":"2. Build/Modify site"},{"location":"using_zeronet/create_new_site/#3-publish-site-changes","text":"In order to inform peers about the changes you made you need to run: $ zeronet.py sitePublish 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... Site:13DNDk..bhC2 Publishing to 3 /10 peers... Site:13DNDk..bhC2 Successfuly published to 3 peers - Serving files.... That's it! You've successfully signed and published your modifications. Your site will be accessible from: http://localhost:43110/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 Next steps: ZeroNet Developer Documentation","title":"3. Publish site changes"},{"location":"using_zeronet/installing/","text":"Installing ZeroNet Download ZeroBundle package: Microsoft Windows , Apple macOS , Linux 64bit , Linux 32bit Unpack anywhere Run ZeroNet.exe (win), ZeroNet(.app) (macOS), ZeroNet.sh (linux) Manual install for Debian Linux sudo apt-get update sudo apt-get install msgpack-python python-gevent wget https://github.com/HelloZeroNet/ZeroNet/archive/master.tar.gz tar xvpfz master.tar.gz cd ZeroNet-master Start with python zeronet.py Open http://127.0.0.1:43110/ in your browser Vagrant vagrant up Access VM with vagrant ssh cd /vagrant Run python zeronet.py --ui_ip 0.0.0.0 Open http://127.0.0.1:43110/ in your browser Docker docker run -d -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet This Docker image includes the Tor proxy, which is disabled by default. Beware that some hosting providers may not allow you running Tor in their servers. If you want to enable it, set ENABLE_TOR environment variable to true (Default: false ). E.g.: docker run -d -e \"ENABLE_TOR=true\" -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet * Open http://127.0.0.1:43110/ in your browser Virtualenv virtualenv env source env/bin/activate pip install msgpack-python gevent python zeronet.py Open http://127.0.0.1:43110/ in your browser","title":"Installing ZeroNet"},{"location":"using_zeronet/installing/#installing-zeronet","text":"Download ZeroBundle package: Microsoft Windows , Apple macOS , Linux 64bit , Linux 32bit Unpack anywhere Run ZeroNet.exe (win), ZeroNet(.app) (macOS), ZeroNet.sh (linux)","title":"Installing ZeroNet"},{"location":"using_zeronet/installing/#manual-install-for-debian-linux","text":"sudo apt-get update sudo apt-get install msgpack-python python-gevent wget https://github.com/HelloZeroNet/ZeroNet/archive/master.tar.gz tar xvpfz master.tar.gz cd ZeroNet-master Start with python zeronet.py Open http://127.0.0.1:43110/ in your browser","title":"Manual install for Debian Linux"},{"location":"using_zeronet/installing/#vagrant","text":"vagrant up Access VM with vagrant ssh cd /vagrant Run python zeronet.py --ui_ip 0.0.0.0 Open http://127.0.0.1:43110/ in your browser","title":"Vagrant"},{"location":"using_zeronet/installing/#docker","text":"docker run -d -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet This Docker image includes the Tor proxy, which is disabled by default. Beware that some hosting providers may not allow you running Tor in their servers. If you want to enable it, set ENABLE_TOR environment variable to true (Default: false ). E.g.: docker run -d -e \"ENABLE_TOR=true\" -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet * Open http://127.0.0.1:43110/ in your browser","title":"Docker"},{"location":"using_zeronet/installing/#virtualenv","text":"virtualenv env source env/bin/activate pip install msgpack-python gevent python zeronet.py Open http://127.0.0.1:43110/ in your browser","title":"Virtualenv"},{"location":"using_zeronet/sample_sites/","text":"Sample ZeroNet sites ZeroHello The homepage of ZeroNet Lists all added sites: Title, Peer number, Modification date, etc. Site actions: Update, Pause, Resume, Delete, Check Files and Save as .zip Clone sites to have your own blog / forum ZeroNet Statistics If an update is available, ZeroNet can be updated with one click Address: 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D Source code ZeroBlog Self publishing blog demo Inline content editor Markdown syntax Code syntax highlighting Site signing publishing through the web interface How does it work? data.json contained within site files contain blog posts and comments. Each user has their own. Upon pressing Sign Publish new content , the blogger is asked for the site private key (displayed when creating a new site using zeronet.py siteCreate command ) Your ZeroNet client signs the new/modified files and publishes directly to other peers The site will then be accessible until to other peers to view Address: 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 or blog.zeronetwork.bit Source code ZeroTalk Decentralized, P2P forum demo Post and comment creation, modification, deletion and upvoting Commenting and content modifications pushed directly to other peers Only you can sign and modify your own files Real time display of new comments How does it work? To post and comment you have to request a certificate of registration (a cryptographic sign) from a ZeroID provider After you have the certificate you can publish your content (messages, posts, upvotes) directly to other peers Address: 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT or talk.zeronetwork.bit Source code ZeroMail End-to-end encrypted, distributed, P2P messaging site. To improve privacy it uses a BitMessage-like solution and will not expose the message recipient. Using ECIES for secret exchange, AES256 for message encoding When you first visit the site, it adds your public key to your data file. At that point anyone is able to send a message to you Everyone tries to decrypt every message, this improves privacy by making it impossible to find the message recipient To reduce per message overhead and increase decryption speed, we re-use the AES key, but a new IV is generated every time Address: 1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27 or mail.zeronetwork.bit Source code ZeroMe Decentralized, Twitter-like P2P social network. Stores user information in ZeroMe user registry Stores posts and comments in MergerSites called Hubs Upload images as optional files Real time display of feed activity Address: 1MeFqFfFFGQfa1J3gJyYYUvb5Lksczq7nH Source code ReactionGIFs Demo for optional files, files which only download from other peers if your browser requests them. Address: 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h Source code ZeroChat The finished site for the tutorial of creating a server-less, SQL backed, real-time updated P2P chat application using ZeroNet in less than 100 lines of code. Uses ZeroID certificate for authentication Stores messages in a SQLite database Posts messages and distribute directly to other users in real-time Real-time update the messages as they arrive Address of finished site: 1AvF5TpcaamRNtqvN1cnDEWzNmUtD47Npg Tutorial on ZeroBlog: Part1 , Part2","title":"Sample ZeroNet sites"},{"location":"using_zeronet/sample_sites/#sample-zeronet-sites","text":"","title":"Sample ZeroNet sites"},{"location":"using_zeronet/sample_sites/#zerohello","text":"The homepage of ZeroNet Lists all added sites: Title, Peer number, Modification date, etc. Site actions: Update, Pause, Resume, Delete, Check Files and Save as .zip Clone sites to have your own blog / forum ZeroNet Statistics If an update is available, ZeroNet can be updated with one click Address: 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D Source code","title":"ZeroHello"},{"location":"using_zeronet/sample_sites/#zeroblog","text":"Self publishing blog demo Inline content editor Markdown syntax Code syntax highlighting Site signing publishing through the web interface How does it work? data.json contained within site files contain blog posts and comments. Each user has their own. Upon pressing Sign Publish new content , the blogger is asked for the site private key (displayed when creating a new site using zeronet.py siteCreate command ) Your ZeroNet client signs the new/modified files and publishes directly to other peers The site will then be accessible until to other peers to view Address: 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 or blog.zeronetwork.bit Source code","title":"ZeroBlog"},{"location":"using_zeronet/sample_sites/#zerotalk","text":"Decentralized, P2P forum demo Post and comment creation, modification, deletion and upvoting Commenting and content modifications pushed directly to other peers Only you can sign and modify your own files Real time display of new comments How does it work? To post and comment you have to request a certificate of registration (a cryptographic sign) from a ZeroID provider After you have the certificate you can publish your content (messages, posts, upvotes) directly to other peers Address: 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT or talk.zeronetwork.bit Source code","title":"ZeroTalk"},{"location":"using_zeronet/sample_sites/#zeromail","text":"End-to-end encrypted, distributed, P2P messaging site. To improve privacy it uses a BitMessage-like solution and will not expose the message recipient. Using ECIES for secret exchange, AES256 for message encoding When you first visit the site, it adds your public key to your data file. At that point anyone is able to send a message to you Everyone tries to decrypt every message, this improves privacy by making it impossible to find the message recipient To reduce per message overhead and increase decryption speed, we re-use the AES key, but a new IV is generated every time Address: 1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27 or mail.zeronetwork.bit Source code","title":"ZeroMail"},{"location":"using_zeronet/sample_sites/#zerome","text":"Decentralized, Twitter-like P2P social network. Stores user information in ZeroMe user registry Stores posts and comments in MergerSites called Hubs Upload images as optional files Real time display of feed activity Address: 1MeFqFfFFGQfa1J3gJyYYUvb5Lksczq7nH Source code","title":"ZeroMe"},{"location":"using_zeronet/sample_sites/#reactiongifs","text":"Demo for optional files, files which only download from other peers if your browser requests them. Address: 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h Source code","title":"ReactionGIFs"},{"location":"using_zeronet/sample_sites/#zerochat","text":"The finished site for the tutorial of creating a server-less, SQL backed, real-time updated P2P chat application using ZeroNet in less than 100 lines of code. Uses ZeroID certificate for authentication Stores messages in a SQLite database Posts messages and distribute directly to other users in real-time Real-time update the messages as they arrive Address of finished site: 1AvF5TpcaamRNtqvN1cnDEWzNmUtD47Npg Tutorial on ZeroBlog: Part1 , Part2","title":"ZeroChat"}]}