{
	"title": "PaintNinja's blog",
	"description": "Author of NinjaBeats",
	"links": "- [My ZeroMe profile](http://127.0.0.1:43110/1Lj1oPcN7oZQL8HkS5KbkzQuKqs42zQWY6/?Profile/1RedkCkVaXuVXrqCMpoXQS29bwaqsuFdL/12EgeG4vgNHzuPJYZqVJQwy2W9vkywbQQu/paintninja@zeroid.bit)",
	"next_post_id": 7,
	"demo": false,
	"modified": 1483022329,
	"post": [
		{
			"post_id": 6,
			"title": "Some scripts to fix Windows problems",
			"date_published": 1483020633.546,
			"body": "Just some scripts I've wrote to fix the most common Windows issues I've come across when fixing clients' broken machines...\n\nCompletely open source, uses native Windows commands and libraries so no install needed - just **run as admin** and done! All these scripts are compatible with Windows Vista, 7, 8, 8.1 and 10: the script runs the appropriate commands for the appropriate OS and automatically detects the exact OS version, including whether there's any service packs or updates installed and notifying the user if the system is lacking important security updates.\n\n## RepairCorruptWindows.cmd\nThis essentially does a full reinstall of the booted Windows image the script is run on, while keeping all of the user's files, settings and programs (both modern apps and classic Win32 apps).\n\nIt does this by scanning and verifying the hash of every single system file part of the OS with the hash on Microsoft's server. For any files with an invalid or mismatching hash, it is replaced with a proper copy direct from the Windows Update servers. This basically does what a full reinstall would do, minus formatting the disk and overwriting files that are okay. It uses SFC (System File Checker) and DISM (Deployment Image Servicing and Management) on the online image to achieve this.\n\nSource code:\n```bat\n@echo off\ntitle=GadgetWorks RepairCorruptWindows tool\necho GadgetWorks RepairCorruptWindows tool - December 2016\necho ======================================================\necho This tool will take a long time to run - especially on mechanical hard drives.\npause\n:StartRepair1\necho.\necho Initialising\necho -------------\n@echo on\nset BINDIR=%~dp0\ncd /D %BINDIR%\n@echo off\n\necho.\necho Detecting OS...\necho ----------------\nFOR /F \"usebackq tokens=4 delims=] \" %%I IN (`ver`) DO for /F \"tokens=1,2 delims=.\" %%J IN (\"%%I\") do set WindowsVersionNum=%%J.%%K\nFOR /F \"usebackq tokens=4 delims=] \" %%I IN (`ver`) DO for /F \"tokens=1,3 delims=.\" %%J IN (\"%%I\") do set WindowsBuildNum=%%K\necho WindowsVersionNum: %WindowsVersionNum%\necho WindowsBuildNum: %WindowsBuildNum%\nif %WindowsVersionNum% EQU 10.0 (set WindowsVersion=10)\nif %WindowsVersionNum% EQU 6.3 (set WindowsVersion=8.1)\nif %WindowsVersionNum% EQU 6.2 (set WindowsVersion=8)\nif %WindowsVersionNum% EQU 6.1 (set WindowsVersion=7)\nif %WindowsVersionNum% EQU 6.0 (set WindowsVersion=Vista)\nif %WindowsBuildNum% EQU 14393 (set WindowsUpdateName=Anniversary Update)\nif %WindowsBuildNum% EQU 10586 (set WindowsUpdateName=November Update)\nif %WindowsBuildNum% EQU 10240 (set WindowsUpdateName=RTM) && REM Windows 10 without updates\nif %WindowsBuildNum% EQU 9600 (set WindowsUpdateName=Update 1) && REM Windows 8.1.1\nif %WindowsBuildNum% EQU 7601 (set WindowsUpdateName=Service Pack 1) && REM Windows 7 SP1\nif %WindowsBuildNum% EQU 7600 (set WindowsUpdateName=RTM) && REM Windows 7 without any Service Packs\nif %WindowsBuildNum% EQU 6002 (set WindowsUpdateName=Service Pack 2) && REM Windows Vista SP2\nif %WindowsBuildNum% EQU 6001 (set WindowsUpdateName=Service Pack 1) && REM Windows Vista SP1\nif %WindowsBuildNum% EQU 6000 (set WindowsUpdateName=RTM) && REM Windows Vista without any Service Packs\necho Detected Windows %WindowsVersion% %WindowsUpdateName%\nif %WindowsBuildNum% EQU 10586 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 10240 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 7600 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 6001 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 6000 (call:ConsiderUpdating)\n\necho.\necho Checking compatibility...\necho --------------------------\nif \"%WindowsVersion%\"==\"10\" (\n\tREM Bugfix for Windows version detection on Windows 10\n\tset WindowsVersionNum=9.9\n)\nif %WindowsVersionNum% GEQ 6.2 (\n\techo Your Windows version is new enough to fully support this tool!\n\techo No compatibility fallbacks have been enabled.\n)\nif %WindowsVersionNum% LSS 6.2 (\n\techo Falling back to basic mode as DISM is not available on your version of Windows...\n\tset FallbackMode=TRUE\n)\nif %WindowsVersionNum% LSS 6.0 (\n\techo ERROR: Your Windows version is too old and is not supported by this tool.\n\techo Press any key to exit...\n\tpause >NUL\n\texit\n)\n\necho.\necho Running System File Integrity Scan and Repair...\necho -------------------------------------------------\n@echo on\nsfc /scannow\n@echo off\n\nif \"FallbackMode\"==\"TRUE\" (goto SkipDISM)\necho.\necho Running DISM Online Image Cleanup, Scan and Repair...\necho ------------------------------------------------------\n@echo on\nDISM /Online /Cleanup-Image /RestoreHealth\n@echo off\n:SkipDISM\n\necho.\necho ********\necho Finished\necho ********\necho To exit, press any key...\npause >NUL\nexit\n\n:ConsiderUpdating\necho Warning: You should consider installing the latest updates on Windows Update.\ngoto:eof\n```\n\n## RepairCorruptStorage.cmd\nRemember to run this as admin too! This tool does a filesystem integrity check and also tries to repair bad sectors, allowing it to use as many system resources as needed so that the process finishes as quickly as possible (if supported by the OS)\n\nSource code:\n```bat\n@echo off\ntitle=GadgetWorks RepairCorruptStorage tool\necho GadgetWorks RepairCorruptStorage tool - December 2016\necho ======================================================\necho This tool will take a long time to run - especially on mechanical hard drives.\npause\n\necho.\necho Initialising\necho -------------\n@echo on\nset BINDIR=%~dp0\ncd /D %BINDIR%\n@echo off\n\necho.\necho Detecting OS...\necho ----------------\nFOR /F \"usebackq tokens=4 delims=] \" %%I IN (`ver`) DO for /F \"tokens=1,2 delims=.\" %%J IN (\"%%I\") do set WindowsVersionNum=%%J.%%K\nFOR /F \"usebackq tokens=4 delims=] \" %%I IN (`ver`) DO for /F \"tokens=1,3 delims=.\" %%J IN (\"%%I\") do set WindowsBuildNum=%%K\necho WindowsVersionNum: %WindowsVersionNum%\necho WindowsBuildNum: %WindowsBuildNum%\nif %WindowsVersionNum% EQU 10.0 (set WindowsVersion=10)\nif %WindowsVersionNum% EQU 6.3 (set WindowsVersion=8.1)\nif %WindowsVersionNum% EQU 6.2 (set WindowsVersion=8)\nif %WindowsVersionNum% EQU 6.1 (set WindowsVersion=7)\nif %WindowsVersionNum% EQU 6.0 (set WindowsVersion=Vista)\nif %WindowsBuildNum% EQU 14393 (set WindowsUpdateName=Anniversary Update)\nif %WindowsBuildNum% EQU 10586 (set WindowsUpdateName=November Update)\nif %WindowsBuildNum% EQU 10240 (set WindowsUpdateName=RTM) && REM Windows 10 without updates\nif %WindowsBuildNum% EQU 9600 (set WindowsUpdateName=Update 1) && REM Windows 8.1.1\nif %WindowsBuildNum% EQU 7601 (set WindowsUpdateName=Service Pack 1) && REM Windows 7 SP1\nif %WindowsBuildNum% EQU 6002 (set WindowsUpdateName=Service Pack 2) && REM Windows Vista SP2\necho Detected Windows %WindowsVersion% %WindowsUpdateName%\nif %WindowsBuildNum% EQU 10240 (\n\techo Warning: You should consider installing the latest updates on Windows Update.\n)\n\necho.\necho Checking compatibility...\necho --------------------------\nif \"%WindowsVersion%\"==\"10\" (\n\tREM Bugfix for Windows version detection on Windows 10\n\tset WindowsVersionNum=9.9\n)\nif %WindowsVersionNum% GEQ 6.2 (\n\techo Your Windows version is new enough to fully support this tool!\n\techo No compatibility fallbacks have been enabled.\n)\nif %WindowsVersionNum% LSS 6.2 (\n\techo Falling back to basic mode as CHKDSK /perf option is not available on your version of Windows...\n\tset FallbackMode=TRUE\n)\n\nif \"FallbackMode\"==\"TRUE\" (goto CHKDSKFallback)\necho.\necho Running CHKDSK...\necho ------------------\n@echo on\nCHKDSK /perf /F /R /I /scan %systemdrive%\n@echo off\nif not \"FallbackMode\"==\"TRUE\" (goto SkipFallback)\n\n:CHKDSKFallback\necho.\necho Running CHKDSK in fallback mode...\necho ------------------\n@echo on\nCHKDSK /F /R /I /scan %systemdrive%\n@echo off\n:SkipFallback\n\necho.\necho ********\necho Finished\necho ********\necho To exit, press any key...\npause >NUL\nexit\n```\n\n## EnableSuperfetch.cmd\nThis turns on Windows Superfetch which can significantly improve system performance on all computers. This is on by default on Windows Vista and newer, but some malware may turn it off. You can also use this tool to fix ReadyBoost being unavailable due to a service failing to run.\n\nSource code:\n```bat\n@echo off\ntitle=EnableSuperfetch\necho Note: This tool needs to be run as admin.\npause\nsc config SysMain start= auto\nsc start SysMain\nsc query SysMain\npause\nexit\n```\n\n## ReduceGoogleBGActivity.cmd\nNeeds to be run as admin. This reduces the sometimes excessive background activity caused by most Google products. An explanation of what specifically the tool reduces and why can be found at the top of the source code, or when you run the file before confirming the action.\n\nSource code:\n```bat\n@echo off\ntitle=GadgetWorks ReduceGoogleBGActivity tool\necho GadgetWorks ReduceGoogleBGActivity tool - December 2016\necho ========================================================\necho This tool disables and uninstalls certain known Google\necho background services that cause system slowdown and are not\necho required. The most well-known one is \"Google Update Helper\"\necho which runs on boot, logon and every hour. This is not needed\necho and uses a lot of system resources. Updates are checked by\necho the Google app every time when it's opened, so we don't need\necho an excessive background service on top of that.\npause\n:StartRepair1\necho.\necho Initialising\necho -------------\n@echo on\nset BINDIR=%~dp0\ncd /D %BINDIR%\n@echo off\n\necho.\necho Detecting OS...\necho ----------------\nFOR /F \"usebackq tokens=4 delims=] \" %%I IN (`ver`) DO for /F \"tokens=1,2 delims=.\" %%J IN (\"%%I\") do set WindowsVersionNum=%%J.%%K\nFOR /F \"usebackq tokens=4 delims=] \" %%I IN (`ver`) DO for /F \"tokens=1,3 delims=.\" %%J IN (\"%%I\") do set WindowsBuildNum=%%K\necho WindowsVersionNum: %WindowsVersionNum%\necho WindowsBuildNum: %WindowsBuildNum%\nif %WindowsVersionNum% EQU 10.0 (set WindowsVersion=10)\nif %WindowsVersionNum% EQU 6.3 (set WindowsVersion=8.1)\nif %WindowsVersionNum% EQU 6.2 (set WindowsVersion=8)\nif %WindowsVersionNum% EQU 6.1 (set WindowsVersion=7)\nif %WindowsVersionNum% EQU 6.0 (set WindowsVersion=Vista)\nif %WindowsBuildNum% EQU 14393 (set WindowsUpdateName=Anniversary Update)\nif %WindowsBuildNum% EQU 10586 (set WindowsUpdateName=November Update)\nif %WindowsBuildNum% EQU 10240 (set WindowsUpdateName=RTM) && REM Windows 10 without updates\nif %WindowsBuildNum% EQU 9600 (set WindowsUpdateName=Update 1) && REM Windows 8.1.1\nif %WindowsBuildNum% EQU 7601 (set WindowsUpdateName=Service Pack 1) && REM Windows 7 SP1\nif %WindowsBuildNum% EQU 7600 (set WindowsUpdateName=RTM) && REM Windows 7 without any Service Packs\nif %WindowsBuildNum% EQU 6002 (set WindowsUpdateName=Service Pack 2) && REM Windows Vista SP2\nif %WindowsBuildNum% EQU 6001 (set WindowsUpdateName=Service Pack 1) && REM Windows Vista SP1\nif %WindowsBuildNum% EQU 6000 (set WindowsUpdateName=RTM) && REM Windows Vista without any Service Packs\necho Detected Windows %WindowsVersion% %WindowsUpdateName%\nif %WindowsBuildNum% EQU 10586 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 10240 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 7600 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 6001 (call:ConsiderUpdating)\nif %WindowsBuildNum% EQU 6000 (call:ConsiderUpdating)\n\necho.\necho Checking compatibility...\necho --------------------------\nif \"%WindowsVersion%\"==\"10\" (\n\tREM Bugfix for Windows version detection on Windows 10\n\tset WindowsVersionNum=9.9\n)\nif %WindowsVersionNum% GEQ 6.2 (\n\techo Your Windows version is new enough to fully support this tool!\n\techo No compatibility fallbacks have been enabled.\n)\nif %WindowsVersionNum% LSS 6.2 (\n\techo Falling back to basic mode as DISM is not available on your version of Windows...\n\tset FallbackMode=TRUE\n)\nif %WindowsVersionNum% LSS 6.0 (\n\techo ERROR: Your Windows version is too old and is not supported by this tool.\n\techo Press any key to exit...\n\tpause >NUL\n\texit\n)\n\necho.\necho Disabling Google Update background service...\necho ----------------------------------------------\n@echo on\nsc config gupdate start= disabled\nsc stop gupdate\n@echo off\n\necho.\necho Removing excessive background update checking...\necho -------------------------------------------------\n:: Google Update Helper\nstart /wait msiexec /qn /norestart /x {60EC980A-BDA2-4CB6-A427-B07A5498B4CA}\nstart /wait msiexec /qn /norestart /x {A92DAB39-4E2C-4304-9AB6-BC44E68B55E2}\nstart /wait msiexec /qn /norestart /x {A4DE5CD7-96D6-3979-8C39-E864396AFFC0}\nstart /wait msiexec /qn /norestart /x {5BAA8884-F661-464B-B5B2-5C6C632BFC21}\n\necho.\necho ********\necho Finished\necho ********\necho To exit, press any key...\npause >NUL\nexit\n\n:ConsiderUpdating\necho Warning: You should consider installing the latest updates on Windows Update.\ngoto:eof\n```"
		},
		{
			"post_id": 5,
			"title": "Why does music licensing still exist and why are there so many restrictions on digital music? (Analysis)",
			"date_published": 1482418773.222,
			"body": "*Warning: Very long article :P*\nI [posted](http://127.0.0.1:43110/1Lj1oPcN7oZQL8HkS5KbkzQuKqs42zQWY6/?Post/1RedkCkVaXuVXrqCMpoXQS29bwaqsuFdL/12EgeG4vgNHzuPJYZqVJQwy2W9vkywbQQu/1482343508) on ZeroMe about some research I was going to do concerning my personal curiosity about why people still pirate music and why even when using legal methods there are still heavy restrictions in place that weren't really an issue back when CDs were the format of choice back in the day...\n\n## So, what *is* music licensing for?\nTo understand what music licensing is for, you really need to look at the whole chain from the music artist and people behind making the music all the way to the consumer. Note that my analysis is for the UK market and it is slightly different in how it works in different continents and countries, although I've found that it's mostly the same procedure - just different names for the intermediaries mainly and slightly different copyright laws.\n\n- In a nutshell, **music licensing is how music artists make money from and gain recognition for their work** - it's as simple as that.\n- You usually only need to license music when you are using it for commercial uses (such as playing or performing music at a live event, as background audio in a TV show, selling a CD with copyrighted music, etc...)\n- **You do not need a license to play music for your own personal enjoyment or leisure** - either at home or [in a workplace with headphones on](http://prsformusic.com/users/businessesandliveevents/Pages/PRSforMusicchargingpolicies.aspx#5). This is where things get interesting... as this gets complicated when someone is using an online music service for their own personal enjoyment or leisure, as both personal and commercial uses are involved simultaneously. See \"Why the restrictions on modern day services?\" lower down.\n\n## What intermediaries are involved?\nI've made a chart that explains all the usual intermediaries and people involved in creating, recording, promoting, licensing and selling music. Please excuse it being flipped, you need to read it from the bottom upwards as I didn't realise my mistake until it was all finished.\n![Music licensing chart](img/HowMusicMakesProfit.png)\n\n## How much money actually goes to the artist?\nI've asked but they were unable to provide me with an answer as there are too many variables involved. The amount of the licensing fee that actually goes to the artist depends on stuff like:\n- How often their song has been played on music streaming services\n- How often their song has been bought as a download (e.g. iTunes purchases)\n- How much their label/publisher takes from their revenue to pay for the recording, marketing, etc...\n\nThe last point is the most variable, as internally the amount they will charge will depend on how well their label is doing, how much profit they want to make, how much it actually cost them to produce the ads, and much, much more.\n\n## Why the restrictions on modern day services? And how much does licensing cost?\nThis is what I found the most interesting... you see, each intermediary has their own job that they carry out for the music artist behind the scenes. Obviously, they all want a profit as very few people will do or even be able to volunteer to work for free - especially considering that most of the time the exact people behind a song aren't fully listed in credits like a film does.\n\nWhile online music streaming is likely to be used for personal leisure purposes, it is still a public commercial service, hence licensing costs still apply regardless of the use behind the service.\n\n**The restrictions on modern music streaming services are because of either technical or licensing constraints**\n\nThe licensing fees are fixed costs paid annually, but depending on your usage and revenue/income, the charge is different.\n- If your business' annual gross revenue is [under £12.5k](http://www.prsformusic.com/users/broadcastandonline/onlinemobile/MusicServices/LOML/Documents/LOML-Guide-2016.pdf), it costs around **£0.002 per stream** - that's less than half a penny!\n- If your business' annual gross revenue is [between £12.5k and £200k](http://www.prsformusic.com/users/broadcastandonline/onlinemobile/MusicServices/LOMLPlus/Documents/LOML-Plus-Guide-2016.pdf), it costs around £0.003 per stream, BUT your allowance is different depending on how you sold the service:\n- - There's a restriction on how people can listen to music, including how many devices they can listen to it on and if they can play it offline without needing a \"premium subscription\"\n- - Depending on whether you use a subscription-based service or a pay-per-stream service, the allowance and restrictions differ massively\n- If you become a [multinational business](http://icerights.com/ice-licensing/), you are required to go through a [thorough assessment](http://www.prsformusic.com/users/broadcastandonline/onlinemobile/MusicServices/oml/Documents/PRS%20for%20Music%20OML%20Application%20Form.pdf) about your business' contributions to the music industry, how you generate revenue, a full financial assessment and more. They won't give you a quote until you've gone through this long process however the fees and restrictions are _highly negotiable_.\n\nWhat's interesting here is that economies of scale _don't_ apply, instead diseconomies of scale do. The better or more popular your online music service becomes, the higher the licensing fees and the more restrictions are involved, which explains why services require you to subscribe to a premium variant in order to do certain things like listen to music offline - it's not the business' choice, it's the licensing restriction.\n\n**Can the restrictions be worked around by using a decentralised method? Yes**, as long as you still accurately report how many songs have been streamed, how many streams are a song from a specific artist, etc...\n\n## Skipping the intermediaries entirely with NinjaBeats\nBoth me and @technoshaman777 have collectively come up with some ideas that could potentially skip all of the intermediaries between the artist and consumer, by using advanced cutting-edge decentralised technologies and concepts that would remove the technical limitations and can theoretically make the service work as a hybrid streaming service and label/publisher.\n\nWhat does this mean? It means no technical costs, at all. All while being fully legal! It would mean there would be no hosting costs, no licensing costs, no required reliance on third-party online advertising... The only costs would be the general management of the business and R&D.\n\nExciting stuff indeed, I could actually see this as a viable business that offers complete freedom of music and therefore eliminates the need for music piracy! :)\n\n## A word on piracy\nAfter some internal anonymous research, I found that a significant amount of people who pirate music is because they either do not want to pay for it or they dislike the restrictions that free legal alternatives provide. I'll officially say it now: NinjaBeats' mission is to combine the benefits of pirated and legal offerings into a single, decentralised, free and legal music service. Think of it as like a legal form of piracy with the added benefits of good metadata and audio quality :P"
		},
		{
			"post_id": 4,
			"title": "Ideas for a better ZeroNet search engine",
			"date_published": 1482326590.058,
			"body": "It looks like ZeroNet search engines have been slightly neglected for a while, with a huge boom in ZeroNet content since both were last maintained. It's great that Bwoi and Kaffiene, the two big search offerings, are picking up search again and carrying on to further improve it, which is great!\n\nHere's some of my ideas for search on ZeroNet that could dramatically improve its productivity...\n\n## Spellcorrect\nA basic but helpful feature - especially for those whose native language isn't English. For example, typing \"musik\" instead of \"music\" would still show search results with the tag \"music\" rather than showing no results.\n\n## Zite descriptions\nA meta description tag on zites that could be read by search engines would be nice. Sometimes, you just can't really tell what one of the search results are until you click them, which isn't ideal for those who don't know how to delete sites from their client. Having a description provided by the zite author would be great as it would:\n1. Improve the potential of a lower ranked zite getting clicked rather than a higher ranked one\n2. Give people more insight on what zite they're visiting, which is important on an unmoderated Internet like ZeroNet.\n\n## Zite icons\nA small improvement could be to show the zite's favicon next to its search result.\n\n## Tag aliases\nNot everyone uses the same wording when searching for something - for example: someone might type \"reading\" rather than \"books\". Having aliases for different tags would reduce the amount of \"no results found\" messages.\n\n## Sentence comprehension\nCurrently both Kaffiene and Bwoi search for tags and site names as far as I know, but it would be cooler if a search engine could have an understanding of what I was looking for without needing to use the exact same wording on file - think of it as tag aliases but for full questions and sentences. This combined with \"tag aliases\" would make a ZeroNet search engine _very_ powerful.\n\nFor example, if I ask the question \"where can I share music with others?\" on Kaffiene or Bwoi, I get no results. But with sentence comprehension, the search engine would understand that I'm looking for sites with the tags music and sharing or something like that, and show NinjaBeats in the search results, along with any other service that allows sharing music, ranked by certainty of how suitable each result is to the question.\nHere's something you could use to achieve this: https://github.com/NaturalNode/natural#classifiers\n\n## Search within services\nWhile currently, you search an index of zites, it would be cool if you could search within select services. For example, you can use ZeroMePlus to search for certain posts on ZeroMe.\n\nBeing able to go to your normal ZeroNet search engine and search both zites and ZeroMe posts would be cool!"
		},
		{
			"post_id": 1,
			"title": "Welcome to my blog",
			"date_published": 1482198979,
			"body": "Here you can find posts about anything I want to write really... although it'll probably be about NinjaBeats or something of the like.\n\nBy the way, you can use either [KaffieID](http://127.0.0.1:43110/id.kaffie.bit) or the usual ZeroID to post comments on here. Enjoy!"
		}
	],
	"tag": [
		{
			"value": "welcome",
			"post_id": 1
		},
		{
			"value": "search",
			"post_id": 4
		},
		{
			"value": "ideas",
			"post_id": 4
		},
		{
			"value": "AI",
			"post_id": 4
		},
		{
			"value": "music",
			"post_id": 5
		},
		{
			"value": "licensing",
			"post_id": 5
		},
		{
			"value": "analysis",
			"post_id": 5
		},
		{
			"value": "tools",
			"post_id": 6
		}
	]
}