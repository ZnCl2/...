{
	"next_topic_id": 2,
	"topic": [
		{
			"topic_id": 1,
			"title": "Why does 1./3 give a random number in C?",
			"body": "I have found this code on rosettacode for a rock, paper, scissors game https://rosettacode.org/wiki/Rock-paper-scissors#C\n\nand I noticed this line: double  p[LEN] = { 1./3, 1./3, 1./3 }; the array p is later passed to the rand_idx function which then uses it to generate a random number but the point is that when I try to print out p[0] for example like so: printf(\"%d\", p[0]); I get a seemingly random number each time (-1937734296, 766073272 etc...) so I assume this is why the value 1./3 is being used to generate a more random number.\nBut why does it do this? (1./3) is a division between an int and a float so I guess this could be causing weird behaviour but gcc gives me no warnings about casting etc.\n\nAny help would be welcome.",
			"added": 1561064147
		}
	],
	"topic_vote": {
		"1_1JPA4C9KDNkw3ru3n63CAgfRKZNaDZVucq": 1
	},
	"next_comment_id": 1,
	"comment": {},
	"comment_vote": {}
}