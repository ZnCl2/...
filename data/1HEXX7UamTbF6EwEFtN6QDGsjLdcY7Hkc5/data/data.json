{
	"title": "hexkey's zite",
	"description": "just some guy with a keyboard",
	"links": "[contact](?Post:3)\n\n[about](?Post:2)",
	"next_post_id": 18,
	"demo": false,
	"modified": 1509832152,
	"post": [
		{
			"post_id": 17,
			"title": "NixOS torrent [19w]",
			"date_published": 1509831801.209,
			"body": "I made [a torrent](http://127.0.0.1:43110/192dZ1EG5tU7PnCfuwGMDEBrr2eLqvs4t3/?Topic:1_18NsJqjikBYBjwLzMVp7aBJSpqtyRSd9qF) for the latest version of NixOS. Give it a bit o' love, if you please :)"
		},
		{
			"post_id": 16,
			"title": "Life happened again [57w]",
			"date_published": 1508899870.202,
			"body": "Isn't it funny how that happens? -_-\n\nBut anyway: I haven't given up on this blog just yet. Once I find more stuff to put here I will do so.\n\nNot much else to say for now. Cya around!! ^_^\n\n**Edit**: Just realized my toc is borked up. I'll fix that at some point."
		},
		{
			"post_id": 15,
			"title": "Index",
			"date_published": 32472165600,
			"body": "All my posts and stuff.\n\n* * *\n\nMisc/Personal\n\n[First Post](?Post:1) **//** [About Me](?Post:2) **//** [Contact Me](?Post:3)\n\n#### Blog Posts\n\n[Cool Stuff](?Post:4) **//** [Getting a Custom Address](?Post:5) **//** [Unique Domain List](?Post:6)\n\n[Here comes dat Dat!](?Post:7) **//** [Moderation is Hard](?Post:8) **//** [The Stability of Zeronet](?Post:9)\n\n[My Keys](?Post:10) **//** [Another P2P DNS system](?Post:11) **//** [NixOS is Pretty Cool](?Post:12)\n\n[Giving LBRY a try](?Post:13) **// [Oh hey I'm back again](?Post:16) // [NixOS torrent](http://127.0.0.1:43110/1HEXX7UamTbF6EwEFtN6QDGsjLdcY7Hkc5/?Post:17)**"
		},
		{
			"post_id": 14,
			"title": "Giving LBRY a try [390w]",
			"date_published": 1498523644.614,
			"body": "If you haven't given LBRY a spin yet, here's a quick summary:\n\nIt's a decentralized content distribution network much like Bittorrent. Unlike Bittorrent, though, a currency system is involved--LBRY credits. This allows content creators to (optionally) charge for their work. The minimum charge is 0.1 LBRY (about $0.06 or €0.05 at time of writing), although prices will vary (obviously).\n\n* * *\n\nWe've had attempts at a decentralized/payment-incentivized content network before. [Joystream](http://joystream.co/) appears to be a working model, but it has a few shortcomings in comparison: mostly the two facts that there is no equivalent of LBRY's identity model (meaning that the whole content producer/ consumer dynamic doesn't exist) and that it's closed source.\n\nLBRY itself isn't complete yet--for example, I don't think you can get compensated for hosting content yet--but the GUI version is functional.\n\n![it's pretty shinny](img/lbry-gui.png)\n\nNot only that, but the developers are approaching it in a fairly decent manner.\n\nWhen it comes to creating a product heavily based around user-produced content, three things matter: the backend, the frontend, and the users/content. The first two are often blent together, but it's best to view them as separate concerns. Personally, I prefer the 'If you build it, they will come' approach--the idea that when developing, the backend/frontend should be priority one--and that the users and content will naturally arrive if the platform is well-made.\n\nThere's a 'stronger' version of this view that basically states that 'if you build it [the backend], they [frontend developers] will come', with the version above being an implied sequel of sorts. I don't mind this version for certain things (depends on the project), but social platforms that only attract developers and similar people don't always become quite as successful as they otherwise could.\n\nThe LBRY devs have given more attention to the userbase concern than I would've expected from a project this technical; I'd say the screenshot above shows that pretty well. I can't guess at LBRY's future with any huge degree of accuracy, but I think that it has an excellent shot at gaining significant prominence.\n\nIf you wanna give it a spin, please do use [my referral link](https://lbry.io/get?r=drZ1p)--we both get a little something out of that :)\n\n~h"
		},
		{
			"post_id": 13,
			"title": "NixOS is pretty cool (also: I'm back!) [153w]",
			"date_published": 1496453356.682,
			"body": "Sorry for being away for awhile--life and stuff happened.\n\nBut I did come across (and finally try) NixOS, a new-ish Linux distro with some pretty cool features. I'll let a snippet of the [distrowatch](http://distrowatch.com/table.php?distribution=nixos) page do the talking:\n\n> In NixOS, the entire operating system, including the kernel, applications, system packages and configuration files, are built by the Nix package manager. Nix stores all packages in isolation from each other; as a result there are no /bin, /sbin, /lib or /usr directories and all packages are kept in /nix/store instead. Other innovative features of NixOS include reliable upgrades, rollbacks, reproducible system configurations, source-based model with binaries, and multi-user package management.\n\nInstallation was pretty painless (on a VM at least), and an instruction manual is even included. The site is [here](http://nixos.org/) if you want to give it a spin."
		},
		{
			"post_id": 12,
			"title": "Another Another Decentralized DNS system [94w]",
			"date_published": 1492656702,
			"body": "I swear, this blog (zero-blog? zlog?) is becoming a 'hey, look at this thing I found' list. I don't think I actually mind that, though.\n\nBut anyway, [DNSSB](https://github.com/ansuz/dnssb) is a DNS system based off Secure Scuttle Butt (stop laughing). It's an append-only cryptographically secure gossiping protocol, which makes it ideal for a drop-in twitter replacement, among other things. Read more about the mini social network built around it [here](http://scuttlebot.io/more/protocols/secure-scuttlebutt.html), and more about the concepts behind it [here](https://www.scuttlebutt.nz/concepts/). It's a fairly neat read, and I'd highly recommend it."
		},
		{
			"post_id": 11,
			"title": "Another Decentralized DNS system [137w]",
			"date_published": 1488691227.41,
			"body": "I just stumbled across a DNS system called [dename](https://github.com/andres-erbsen/dename), which (if it works) could offer the same functionality as Namecoin--without a blockchain. Yes, really.\n\n* * *\n\nI've come across attempts like this before--but the only reasonable one I can recall is [DJDNS](https://github.com/DJDNS/djdns), which appears to be dead in the water.\n\nDename's consensus methodology requires only one 'correct' server to be contactable, all others can be compromised and it will still function. This property is also a part of [Riffle](http://news.mit.edu/2016/stay-anonymous-online-0711)--a new project by MIT designed to make onion routing more both faster and more secure.\n\nAll three look like promising potential solutions to our DNS woes, and I think I might try messing around with them in the near future."
		},
		{
			"post_id": 10,
			"title": "I have keys now [198w]",
			"date_published": 1488615324.602,
			"body": "I've made myself some keys for signing things. One is an offline only key (11A3490E), which I will use only for managing my other keys, and the other (7A8ED964) will be my main key. I've used the offline one to sign both the my main key and its SHA3-512 checksum, and have put all relevant files here:\n\n[Main public key](data/keys/main/pub-cert_7A8ED964_734C73C1633CA4C389D307B1BD3A7BDD7A8ED964.asc)\n\n[SHA3-512 of the key](data/keys/main/SHA3-512.txt) (for verification)\n\n[Offline key](data/keys/offline_key/pub-cert_11A3490E_EF535DA45E56F071C026F6E0A09B770911A3490E.asc) (for verifying the main key only)\n\nOffline key's signature [of the main key](data/keys/signatures/cold_sig_of_pub-cert_7A8ED964.asc) and [of the above hash](data/keys/signatures/cold_sig_of_pub-cert_7A8ED964_SHA3-512_hash.asc)\n\nAgain, I will be using the _offline_ key only for managing other keys, the _main_ one (7A8ED964) will be used for everything else.\n\nI don't know if the lengths I went to were too excessive (or perhaps not excessive enough), but I'm fairly sure my arrangement is alright. Please let me know if you have noticed a mistake, or if you want to sign keys.\n\n**Edit**: made my main key available [here](key.html) for convenience."
		},
		{
			"post_id": 9,
			"title": "The stability of Zeronet [804w]",
			"date_published": 1487879083.15,
			"body": "A day or two ago, someone on [the forums](/Talk.ZeroNetwork.bit/?Topic:1_17To4zKQntCiVqSZqHK3mwEpbLWVCtLHEe) brought up concerns over Zeronet's resistance to attacks and takedowns, specifically regarding its reliance on trackers. My original response is still there (quoted in somebody else's comment), but I've also moved it here for two reasons: so that I can elaborate on it, and to save precious space on Zerotalk. Here it is:\n\n* * *\n\nOkay. I have a few things to say.\n\nFirst: _There is no such thing as 'safe', only safer_. The same goes for 'uncensorable' and other similar words. Focusing only on the scariest sounding scenarios is flawed thinking (like how some people are scared of being killed by lightning--despite stroke and heart disease being thousands of times more common). If you are concerned, Analyze and inspect the possibilities, but keep yourself grounded in reality.\n\nPiggybacking off the torrent infrastructure eliminates a much more concerning what-if situation: 'what if we were using a custom zeronet-only tracking system and most of it was taken down?' Instead, everyone who keeps torrent trackers online is also keeping Zeronet online, regardless of if they even know that Zeronet exists.\n\nThere are a [lot](https://newtrackon.com) of trackers in operation, some in countries that are much less vulnerable than others. Technically, this kind of doomsday situation _could_ still happen, and a worldwide shutdown could be put in place--But It would be much more impractical. Not only would locating and catching them all spread this hypothetical enemy's resources very thin (and spark worldwide outrage that they would prefer not to deal with), but it would buy everyone else time to put up even more. Trackers are targets, but they are targets with a **massive** social shield in front of them.\n\nBut again, that's an extreme hypothetical situation. It's best to put effort into what's likely instead of wasting it on things that might never happen. Here are a few relevant things:\n\n1\\. If possible, [donate to help develop DHT Functionality](http://zeronet.readthedocs.io/en/latest/help_zeronet/donate).\n\n2\\. If you can, actually help [develop](https://github.com/HelloZeroNet/ZeroNet/issues/57) it (or recruit someone that can help).\n\n3\\. Same for [i2p support](https://github.com/HelloZeroNet/ZeroNet/issues/45).\n\n4\\. Keep tabs on what trackers are up (but not too obsessively, because we [already](/17Tzm1HYknrRiiHZ5xLJqGNooebmoLqit7) have [people](http://torrentfreak.com) for that).\n\n5\\. Learn Ham radio. Not as capable, but _much more reliable_ communication.\n\nAnd any other suggestions anyone might have.\n\n**More details**:\n\nHere's a rough rundown of the main methods for locating nodes in a p2p network (these definitions are a bit rough, but good enough for this list).\n\nTrackers are relatively easy to set up (and easy for peers to work with), but expensive to keep running under the load of bazillions of queries per day--they are also the most centralized option, making them the most vulnerable. Workarounds include having more of them, using tracker exchange (sometimes supported), and only relying on them when necessary.\n\nDHT is much more scalable, but still requires a known address to enter the network--and peers are less likely to be online as continuously as trackers. Some workarounds are including a list of peers in the installation, and having one or more servers that can distribute active peer lists (This shares some weakness with trackers though).\n\nThe third option isn't too common: Address surveying, or randomly scanning address until finding one which offers the service you're looking for. Unlike the others, this one is guaranteed to succeed at some point--however, the internet is huge, so it won't always be practical. Also, randomly scanning thousands of ports is bound to piss some people off--_probably not anybody you want to be dealing with._\n\nSome combination of these will eventually locate one peer, which can then cascade into knowing as many as you need--by more use of these methods, and/or these as well:\n\nPeer exchange: asking already known peers for any other peers they know. Cascades quickly, but not if it can't reach a certain 'critical mass' first (vaguely like if two or more circles of friends have none in common).\n\nLocal peer discovery: like address surveying, but much less obnoxious (and only on your local network area). Usefulness roughly depends on the size of said network.\n\nThat's all I got for now, but I'll add anything I think of later.\n\nThere are some other nice goodies [here](http://bittorrent.org/beps/bep_0000.html). Not all of them will apply to Zeronet, but it's still a handy reference if you want to do your own investigating. Also keep in mind that Wikipedia and stackOverflow are always a good first place to look."
		},
		{
			"post_id": 8,
			"title": "Moderation is hard [WIP][1,385w]",
			"date_published": 1487472850.976,
			"body": "![xkcd #1357](https://imgs.xkcd.com/comics/free_speech.png)\n\nThere is an ongoing [conversation](/Talk.ZeroNetwork.bit/?Topic:1_1Mr36Z4TSbWQ236NfvRPeLn3qsAwngBzMd) about how to moderate content on zerotalk. It's proving to be pretty complicated (as it always has been). When trying to balance free expression and quality control, having both is _really_ hard. I've made a list of things that should probably be put into consideration. Keep in mind that this list is not complete or absolute in any way:\n\n* * *\n\nKinds of unwanted Content (UC). These are the ones I can think of right now (most are partly subjective):\n\n1.  Off-topic content: Content that doesn't contribute to the conversation.\n\n2.  Spam: Advertising or endorsing something (free or otherwise), usually irrelevant to the conversation at hand.\n\n3.  'Swamping': Posting repetitive/ nearly repetitive content in one place.\n\n4.  Offensive content: Text, images, or otherwise. Includes both hate-based content and generally uncivil content.\n\n5.  Harassment: Directed at a specific person.\n\n6.  Targeted Harassment: Content directing others to harass a specific user.\n\nHere are some general approaches (not 'solutions', since no system is perfect):\n\n1.  Centralized moderation: by mod(s) who are self-appointed, elected by a higher level set of users ('sub-moderators'), the common users, or some degree of each.\n\n    1.  Mods are given certain abilities, eg deleting posts or hiding posts; flagging users/posts/subsections of site as potentially offensive (for subjective UC), offensive (for less subjectively UC) suspicious, warned (Content source (CS) has been warned of breaking/bending site rules 1+ times), and potentially more.\n\n    2.  A 'chain of command'--where power is distributed in a tree-like structure-- is possible.\n\n    3.  Relies on good intentions of mod(s) in order to curate / sanitize community and content.\n\n    4.  Moderator modification of user content is not possible with ZeroID-like systems--and the ability to delete posts means it is likely unneeded anyway.\n\n2.  Voting systems: posts are up/downvoted based on content.\n\n    1.  Less centralized than moderator based systems.\n\nHere are some specific approaches:\n\n1.  Standard Voting System: up/down votes determine content visibility. Allows for a majority of 'good' users to prod a minority of 'bad' users into either leaving the community or changing what they post.\n\n    1.  **+**: Community-based. not enforced by a single entity.\n\n    2.  **+**: Can address all six types listed above to a degree.\n\n    3.  **+**: Can address UC while also promoting higher-quality non-UC.\n\n    4.  **+**: Karma/Reputation systems are possible.\n\n    5.  **-**: Vulnerable to the hivemind/echo chamber effect, where communities selectively filter out content that challenges their existing mindset.\n\n    6.  **-**: Vote manipulation/brigading may be possible (depending on how IDs are distributed and assigned).\n\n    7.  **-**: UC is not actually removed (may/may not be desired depending on circumstances). Different types of UC may demand different courses of action.\n\n2.  Extended voting system: different kinds of votes are available for the different kinds of UC listed above, and up/down votes for each one have different effects.\n\n    1.  **+**: Custom vote behavior may be defined per site owner/user. Examples:\n\n        1.  site configured so posts DV'd for quality are collapsed/grayed out.\n\n        2.  Posts DV'd for swamping are placed in a separate subsection on the page, and duplicate posts are simply stored once with multiple timestamps (may/may not cause individual posts to no longer be editable, either by necessity or as a penalty).\n\n        3.  An owner may configure their site so that a post is automatically removed when it has x% more downvotes in a specific category (eg #4) than compared to other posts across the site, other posts within that specific subsection of the site, other posts by that user, or some combination of those.\n\n        4.  A post in one subsection that has been DV'd a lot in a short timespan--but only by users that have a history of abusing their votes/ users that all subscribe to a different subsection--is flagged as 'suspected vote abuse'.\n\n        5.  Posts which are DV'd enough have a separate 'visibility rating' adjusted, which affects visibility in one of the ways above (or another way). Users have a 'visibility tolerance' setting they may adjust for one or more of the UC categories.\n\n        6.  Posts DV'd enough in one or more UC categories may cause a notification to be sent to a moderator (assuming the site uses moderators) with an attached priority that depends on the amount/rate/types of DVs. A certain priority may send the notification to an admin instead (if the site uses admins).\n\n    2.  **+**: Vote behavior configs could be exportable (eg as json) and shared/modified so site owners don't have to set up their own from scratch.\n\n    3.  **+**: Reduces or eliminates SVS flaws 5 and 6.\n\n    4.  **+**: customizabillity reduces impact of the 'tough luck'/ 'if you don't like it then leave' mindset.\n\n    5.  **-**: Complicated to implement and set up.\n\n    6.  **-**: Understanding what configs are most effective in general/for certain types of sites probably requires a degree in sociology.\n\n    7.  **-**: If the site configuration is encrypted (which might help prevent loophole abuse/ 'working around' the rules), site users may have to simply trust that the site's settings are as the owner says. A possible solution is to have sections of the rules split into different files, so that the owner can reveal select rules by providing salted hashes of them. Still, choosing how much to reveal is difficult.\n\n3.  Web of Trust (WOT) models: Similar to Karma systems. (WIP)\n\n4.  Proof of work (POW) based systems, where certain actions require some amount of computation to complete.\n\n    1.  **+**: Effective against swamping.\n\n    2.  **+**: partly effective against spam and off-topic content.\n\n    3.  **+**: Amount of POW required can be adjusted based on amount of content.\n\n    4.  **+**: Amount of POW required can be adjusted depending on reputation of user or site subsystem.\n\n    5.  **+**: More drastic actions can require greater POW.\n\n    6.  **+**: Actions that affect multiple users/ an entire subsection may require POW from multiple users, with demanded strings encrypted with one or more public keys.\n\n    7.  **-**: Does very little to address any other kinds of UC.\n\n    8.  **-**: Power imbalance: users with more processing power are given more priority (depends on availible POW systems).\n\n    9.  **-**: limits speed of content distribution (undesired in some cases).\n\nDefintions:\n[1]: UC: unwanted content.\n[2]: LQC: low quality content. discouraged, but not removed. Exact definition varies per site. opposite of HQC\n[3]: Subsection: a a specific area of a site (eg a subreddit or similar). May be represented as a merger site.\n[4]: CS: content source; refrers to users, subsections, and (when applicable) posts.\n[5]: MVS(u/d): minimal voting system; users up/downvote content based (ideally) on quality. Content is usually not sorted by votes (hence 'minimal'). An extra 'u' refers to systems where only upvotes are available (eg zerochat), and a 'd' is refered to when only downvotes are available (flagging systems are similar, but actual 'downvotes only' systems don't appear to be used).\n[5]: SVS: standard voting system; like an MVS, but posts may have their order, visibility, and more determined by number of votes. Reddit's SVS is competent, but other versions may be used.\n[6]: EVS: extended voting system; like the SVS, but multiple categories of votes are available that have different, customizable effects (see below).\n[7]: Curating - Manually or automatically promoting visibility of / encouraging creation of high quality content, while also doing the reverse for low quality content.\n[8]: Sanitizing - Manually or automatically removing UC, optionally with a 'holding period' where the removal maybe challenged before becoming permanent.\n[9]: CaS: curating and sanitizing; also simply known as moderating (this term is discouraged because it can also refer to self-moderation, among other things).\n[10]: MDR: management dispersion ratio; refers to how concentrated the burden of moderation is. Determined by effort spent (measured as time until a better measure can be found). For example, a system where 10 mods spend half their time managing 100 users (who spend 0% of their time moderating anything) has a ratio of (10*.5)/100=0.05\\. MDR is not a perfect measure because estimating spent time is difficult, and the time spent will be very unlikely to be constant.\n[11]: KRS: karma reputation system; vote scores on a user's past posts may influence certain aspects of their account/ future posts."
		},
		{
			"post_id": 7,
			"title": "Here comes dat Dat! [282w]",
			"date_published": 1487228053.786,
			"body": "While prodding around on the internet, I recently came across [Dat](https://datproject.org/)--a secure, decentralized data storage system.\n\nIf you're thinking that seems familiar, I did too: It sounds an awful lot like IPFS. But after a bit of reading, I found the main difference: the storage is mutable. This means that it's not content-based addressing anymore, but the ability to modify shared data will certainly have its own use cases. It seems robust enough that you could probably reimplement Resilio or Syncthing on top of it with little to no loss in functionality. It might even be possible to use it as a full or partial backend for Zeronet itself, potentially solving the [large files](https://github.com/HelloZeroNet/ZeroNet/issues/7) problem!\n\nI really don't know why I haven't come across it before--the [metrics](https://nodejs.libhunt.com/project/dat/vs/js-ipfs) suggest that it's even _more_ popular than IPFS, yet I see so little hype over it here compared to IPFS. Strange.\n\nOne other thing: there is also an experimental [browser](https://beakerbrowser.com/) built off similar ideas--it even does IPFS sites too. If you're running not-Windows, you might wanna give it a try.\n\n**Edit:**: I just realized that I was comparing Dat with IPFS's _Javascript_ implementation, not their main Go one. My bad. When comparing both projects' main versions, IPFS defiantly gets more attention (makes sense). Still, Dat looks like it has a lot of potential behind it--and unlike IPFS-JS (which is still in alpha), Dat is pretty much functional as of now. I think that it's still worth checking out."
		},
		{
			"post_id": 6,
			"title": "List of unique domains [70w]",
			"date_published": 1486515893.17,
			"body": "The way [zeroname](/1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F) is sorted makes finding unique sites a bit of a pain--so after a bit of tinkering with Excel, I managed to create a list of unique domain names. It's 795 entries long, as opposed to the 1435 entries before deduplication. You can view it [here](data/domainlist/zn-domains_2017-02-07.txt). I'm planning on whipping up a way to automate this process, and will post it here when I can."
		},
		{
			"post_id": 5,
			"title": "Getting a custom address [613w] [old]",
			"date_published": 1485974418.066,
			"body": "My address begins with HEX, and that's not by coincidence.\n\n* * *\n\nI found a tool that can randomly generate addresses until getting one containing a pattern of your choice. Detailed instructions were written by 3x71nc7; the post is [here](/13x71nc7fju6afMqpEPfcu3Gx9Z5hNhH48/?Post:5).\n\nThe command I used was `vanitygen64.exe -i 1hex` (-i for ignore case), which had a calculated difficulty of 18,973\\. That apparently isn't much, because it took less than two seconds to finish.\n\nI considered searching for an address with the string 'hexkey', but the difficulty for a case-insensitive search was 462,732,609 (estimated completion time of eleven minutes), and case-sensitive was 888,446,610,538 (eighteen days estimated). I considered going for the first one, but I'm pretty happy with what I have now.\n\nHaving a non-random string within your address may seem like a security flaw (since it makes the random part of your address shorter)--but it doesn't really. [The only way to get a public key is to generate it from a private key](https://en.wikipedia.org/wiki/keypair); it can't be done in reverse. I had to randomly generate private keys until I got one whose public key contained the string 'hex'.\n\nIf an adversary wanted to generate the same pair of keys as me, they'd have to do the exact same thing--not until they got an address that also contained 'hex', but until they got an address that was an **exact match** of mine. How long would that take? Well...\n\n```\nvanitygen-0.22-win>vanitygen64.exe 1HEXX7UamTbF6EwEFtN6QDGsjLdcY7Hkc5\nPrefix '1HEXX7UamTbF6EwEFtN6QDGsjLdcY7Hkc5' is too long\n```\n\nVanitygen wont even attempt such a task.\n\nBut what if I shorten it a bit? I mean, the last few digits might still be different from my actual address, but there's still a tiny chance it might get the whole string correct.\n\nAfter repeatedly removing one character off the end and retrying I got the longest possible piece of text Vanitygen will attempt to work with:\n\n```\nvanitygen-0.22-win>vanitygen64.exe 1HEXX7UamTbF6EwEFtN6QDGsjLd\nDifficulty: 2794725737275825531787289201741966674434639341\n[560.31 Kkey/s][total 7894272][Prob 0.0%][50% in 1.096308e+032y]\n```\n\n**Dear fucking fuck.** those numbers are monstrously, dizziyingly, **_terrifyingly huge_**. Some cult somewhere is probably worshiping these numbers like the math version of Cthulhu. I feel like [some eerie music](https://www.youtube.com/watch?v=ZVs1x8s7Ono&list=PLjinT9VYUjb_vbKwPXrPUWNaTBilRIXrr) is necessary while we take a closer look at them.\n\nThat difficulty number has 46 digits, and [Wolfram Alpha](http://www.wolframalpha.com/input/?t=crmtb01&f=ob&i=2794725737275825531787289201741966674434639341) tells me that the phonetic reading of it starts as '2 quattuordecillion, 794 tredecillion...'.\n\nThat very last number describes the number of years until there is a 50% chance of the desired key being found. It's apparently [**eight sextillion times the age of the universe**](http://www.wolframalpha.com/input/?i=1.096308e%2B032+years), and Wolfram [tells me](http://www.wolframalpha.com/input/?t=crmtb01&f=ob&i=8*10%5E21) _that_ number is roughly somewhere between **0.008 and 80 times the number of grains of sand on the Earth.** Damn.\n\nSo you want to crack a 30-ish digit long public-private keypair? Sure, you can try. All you'll need to do is burn up one universe worth of time per grain of sand on earth--and presumably several thousand galaxies worth of raw power each time--and you _might_ get what you want.\n\nMaybe.\n\nAt this point, I'm a little scared. Numbers are neat, but having to think about colossal behemoths like this is making me feel uneasy. I didn't plan on this tangent taking place, but I still think I learned something here: that humans are small, the universe is massive, and I need to find some less unsettling music If I want to sleep at all tonight. I'm going to leave this here for now and go find some Jpop or something.\n\n~Hex"
		},
		{
			"post_id": 4,
			"title": "Cool stuff [122w]",
			"date_published": 1485970638.311,
			"body": "More will be added whenever I find new cool things to share.\n\n#### Languages\n\n[Typescript](https://www.typescriptlang.org): javascript plus extra awesome and minus some of the obnoxiousness. Personally, I like it even more than coffeescript (sorry nofish :\\).\n\n[elixir](http://elixir-lang.org): higher level language designed for easily managing concurrency and large-scale multitasking.\n\n[rust](https://www.rust-lang.org): lower level drop-in replacement for C, but with functional-ness, extensive memory safety measures, package management, and a lot more.\n\n[go](https://golang.org/): mid to high level language with good thread management and package ecosystem, among other things.\n\n[haxe](http://haxe.org/): toolkit/language that can cross-compile into C++, C#, Python, node.js, and more. Pretty neat."
		},
		{
			"post_id": 3,
			"title": "Contact me",
			"date_published": 1485970562.748,
			"body": "_**Zeromail**_: [hexkey@zeroid.bit](/1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27/?to=hexkey)\n\n_**Bitmessage**_: BM-2cT8UGDVaaJMzqBfVYgU9Y8RsGTWXB7Q4d\n\n_Note_: please set the TTL slider to 7 days or more (if you can) for maximum assurance of delivery (but not for super long messages, please). Also consider looking at your Resend options in the Settings, or just keeping it short and simple to begin with.\n\n_**Email**_: hecks-kee oh-three-sekz at pro-ton-mael dawt see-ach\n\n[_Note 1: translate this anti-spam gibberish accordingly._]\n\n[_Note 2: use you own protonmail account (if you have one) for extra security, otherwise you **really** should use my PGP key._]\n\n[PGP Key](data/keys/main/pub-cert_7A8ED964_734C73C1633CA4C389D307B1BD3A7BDD7A8ED964.asc) (more info [here](?Post:14))"
		},
		{
			"post_id": 2,
			"title": "About me [17w]",
			"date_published": 1485970377.926,
			"body": "I do programming-y stuff in my spare time. Right now messing with [Elixir](https://elixir-lang.org) is my main jam."
		},
		{
			"post_id": 1,
			"title": "It begins [105w]",
			"date_published": 1485928800,
			"body": "I have a blog now. Neat.\n\nI plan on writing about general tech things, as well as whatever else happens to be on my mind at the moment. I'll try to put stuff here roughly every other week, but I can't guarantee that real life won't get in the way and prevent that.\n\nI had an older version of this blog at one point, but I've deleted/remade it because I didn't like having the site layout from two versions ago. I'll be porting the old posts over here gradually over time (they will have [old] in the title)."
		}
	]
}