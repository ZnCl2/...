{
	"pages": [
		{
			"id": "1b3bc880-10e8-11e8-a1eb-316a01e254dd",
			"body": "[//]: <> (Sorry if have typo or some type of english errors/discordance/repetition or even is in the wrong style, i will be trying to make it better when possible)\n[//]: <> (I would be happy if someone could help *us* improve it)\n\nCreating Zeronet Sites ([[Zite]]s)\n===\nAs in the official documentation there are two ways of creating [[Zite]]s:\n\n## The \"easy\" way [[ZeroHello]] Interface\n* In the right corner of the page click on '⋮' symbol and then on \"Create new, empty site\" menu item\n* It will create and redirect you to a copy of a default site which will only show basic informations about itself(page address, number of peers, and the last modification date) all available by the javascript class \"site_info\"\n* Now you can easily modify your site information at the data/[yoursiteaddress] folder acessible inside your zeronet installation(/var/lib/zeronet on linux installations), then to commit the modifications scroll the ZeroNet traybar(Drag the 0 button to left) and click Sign and Publish\n\n## The \"hard\" way, using the command line\n* Is recommended that you shut down the zeronet service if it is running\n* Browsing to the folder where zeronet is installed run the commands:\n* ```./zeronet.py siteCreate``` what will return the site private key and address\n* When the server is ready to be \"deployed\" run ```./zeronet.py siteSign {siteAddress}``` wich will ask input of the previously returned site private key\n* To publish changes by the command line is used the command  ```zeronet.py sitePublish {siteAddress}```",
			"date_added": 1518544971016,
			"slug": "creating-zites"
		},
		{
			"id": "0619eea0-10e8-11e8-b991-0fc3c8ab1410",
			"body": "[//]: <> (Sorry if have typo or some type of english errors/discordance/repetition or even is in the wrong style, i will be trying to make it better when possible)\n[//]: <> (I would be happy if someone could help *us* improve it)\n\nCreating Zeronet Sites ([[Zite]]s)\n===\nAs in the official documentation there are two ways of creating [[Zite]]s:\n\n## The \"easy\" way [[ZeroHello]] Interface\n* In the right corner of the page click on '⋮' symbol and then on \"Create new, empty site\" menu item\n* It will create and redirect you to a copy of a default site which will only show basic informations about itself(page address, number of peers, and the last modification date) all available by the javascript class \"site_info\"\n* Now you can easily modify your site information at the data/[yoursiteaddress] folder acessible inside your zeronet installation(/var/lib/zeronet on linux installations), then to commit the modifications scroll the ZeroNet traybar(Drag the 0 button to left) and click Sign and Publish\n\n## The \"hard\" way, using the command line\n* Is recommended that you shut down the zeronet service if it is running\n* Browsing to the folder where zeronet is installed run the commands:\n* ```./zeronet.py siteCreate``` what will return the site private key and address\n* When the server is ready to be \"deployed\" run ```./zeronet.py siteSign {siteAddress}``` wich will ask input of the previously returned site private key\n* To publish changes by the command line is used the command  ```zeronet.py sitePublish {siteAddress}```",
			"date_added": 1518544935563,
			"slug": "creating-zites"
		},
		{
			"id": "0398c200-10e8-11e8-b991-0fc3c8ab1410",
			"body": "[//]: <> (Sorry if have typo or some type of english errors/discordance/repetition or even is in the wrong style, i will be trying to make it better when possible)\n[//]: <> (I would be happy if someone could help *us* improve it)\n\nCreating Zeronet Sites ([[Zite]]s)\n===\nAs in the official documentation there are two ways of creating [[Zite]]s:\n\n## The \"easy\" way [[ZeroHello]] Interface\n* In the right corner of the page click on '⋮' symbol and then on \"Create new, empty site\" menu item\n* It will create and redirect you to a copy of a default site which will only show basic informations about itself(page address, number of peers, and the last modification date) all available by the javascript class \"site_info\"\n* Now you can easily modify your site information at the data/[yoursiteaddress] folder acessible inside your zeronet installation(/var/lib/zeronet on linux installations), then to commit the modifications scroll the ZeroNet traybar(Drag the 0 button to left) and click Sign and Publish\n\n## The \"hard\" way, using the command line\n* Is recommended that you shut down the zeronet service if it is running\n* Browsing to the folder where zeronet is installed run the commands:\n* ```./zeronet.py siteCreate``` what will return the site private key and address\n* When the server is ready to be \"deployed\" run ```./zeronet.py siteSign {siteAddress}``` wich will ask input of the previously returned site private key\n* To publish changes by the command line is used the command  ```zeronet.py sitePublish {siteAddress}```",
			"date_added": 1518544931360,
			"slug": "creating-zites"
		},
		{
			"id": "4517af30-10e7-11e8-b81c-7d82a393e7bb",
			"body": "Creating Zeronet Sites ([[Zite]]s)\n===\nAs in the official documentation there are two ways of creating [[Zite]]s:\n\n## The \"easy\" way [[ZeroHello]] Interface\n* In the right corner of the page click on '⋮' symbol and then on \"Create new, empty site\" menu item\n* It will create and redirect you to a copy of a default site which will only show basic informations about itself(page address, number of peers, and the last modification date) all available by the javascript class \"site_info\"\n* Now you can easily modify your site information at the data/[yoursiteaddress] folder acessible inside your zeronet installation(/var/lib/zeronet on linux installations), then to commit the modifications scroll the ZeroNet traybar(Drag the 0 button to left) and click Sign and Publish\n\n## The \"hard\" way, using the command line\n* Is recommended that you shut down the zeronet service if it is running\n* Browsing to the folder where zeronet is installed run the commands:\n* ```./zeronet.py siteCreate``` what will return the site private key and address\n* When the server is ready to be \"deployed\" run ```./zeronet.py siteSign {siteAddress}``` wich will ask input of the previously returned site private key\n* To publish changes by the command line is used the command  ```zeronet.py sitePublish {siteAddress}```\n\n[//]: <> (Sorry if have typo or some type of english errors/discordance/repetition or even is in the wrong style, i will be trying to make it better when possible)\n[//]: <> (I would be happy if someone could help *us* improve it)",
			"date_added": 1518544611747,
			"slug": "creating-zites"
		},
		{
			"id": "bf3d53b0-10e6-11e8-b14a-dd6673788b3c",
			"body": "",
			"date_added": 1518544387180,
			"slug": "sandbox"
		},
		{
			"id": "bc14ea90-10e6-11e8-b14a-dd6673788b3c",
			"body": "[//]: <> (This is also a comment.)",
			"date_added": 1518544381881,
			"slug": "sandbox"
		},
		{
			"id": "9a821920-10e6-11e8-adcf-8f526fcb9daa",
			"body": "Creating Zeronet Sites ([[Zite]]s)\n===\nAs in the official documentation there are two ways of creating [[Zite]]s:\n\n## The \"easy\" way [[ZeroHello]] Interface\n* In the right corner of the page click on '⋮' symbol and then on \"Create new, empty site\" menu item\n* It will create and redirect you to a copy of a default site which will only show basic informations about itself(page address, number of peers, and the last modification date) all available by the javascript class \"site_info\"\n* Now you can easily modify your site information at the data/[yoursiteaddress] folder acessible inside your zeronet installation(/var/lib/zeronet on linux installations), then to commit the modifications scroll the ZeroNet traybar(Drag the 0 button to left) and click Sign and Publish\n\n## The \"hard\" way, using the command line\n* Is recommended that you shut down the zeronet service if it is running\n* Browsing to the folder where zeronet is installed run the commands:\n* ```./zeronet.py siteCreate``` what will return the site private key and address\n* When the server is ready to be \"deployed\" run ```./zeronet.py siteSign {siteAddress}``` wich will ask input of the previously returned site private key\n* To publish changes by the command line is used the command  ```zeronet.py sitePublish {siteAddress}```",
			"date_added": 1518544325554,
			"slug": "creating-zites"
		},
		{
			"id": "c550b9b0-10e4-11e8-b504-c189bd8a2b25",
			"body": "",
			"date_added": 1518543538380,
			"slug": "sandbox"
		},
		{
			"id": "b64ae670-10e4-11e8-8409-159b29ef5da5",
			"body": "Creating Zeronet Sites (Zites)\n===\nAs in the official documentation there are two ways of creating [[Zite]]s, the easy way is creating trough the [[ZeroHello]] web interface:\n> In the right corner of the page click on '⋮' symbol and then on \"Create new, empty site\" menu item\n> It will create and redirect you to a copy of a default site which will only show basic informations about itself(page address, number of peers, and the last modification date) all available by the javascript class \"site_info\"\n> Now you can easily modify your site information at the data/[yoursiteaddress] folder acessible inside your zeronet installation(/var/lib/zeronet on linux installations), then to commit the modifications scroll the ZeroNet traybar(Drag the 0 button to left) and click Sign and Publish\nAnd the \"hard\" way, using the command line:\n> Is recommended that you shut down the zeronet service if it is running\n> Browsing to the folder where zeronet is installed run the commands:\n> ```./zeronet.py siteCreate```",
			"date_added": 1518543513175,
			"slug": "sandbox"
		},
		{
			"id": "66b78050-10e4-11e8-98e5-19bb3141ec36",
			"body": "# Sandbox\n\nYou can use this page to test out ZeroWiki before editing other pages.\n\n---",
			"date_added": 1518543379669,
			"slug": "sandbox"
		},
		{
			"id": "03577770-10e1-11e8-8160-ed61b0d9cada",
			"body": "# Zite | [[ZeroNet]]\n\nA Zite is a [[ZeroNet]] [[website]]. Zites have the notable difference of being entirely [[decentralized]] and work even if the visitor is offline. Zites are designed to be entirely [[open source]] and freely shared. Zite owners can also make their site [[cloning|cloneable]]. This ensures content is not censored and cannot be forcefully taken down.\n\nHowever, due to how the site is distributed and viewed, sites must be entirely contained within local [[HTML]] and [[JavaScript]] files. Information for the site can be stored in an [[SQLite]] database or in [[JSON]] files.\n\nZites require the private key generated with the address in order to be edited or published. Users of the zite have a subdirectory they may edit within the zite's file structure.\n\n[ZeroTuto](/1Jtjb5CU9aod4jtz8hF5NPPqFKofRSsb4x), is a great resource for creating zites.\n\nVarious attempts have been made to index and search the hundreds of zites that have been created. [[Search engine|Search engines]] like [[Kaffiene]] or [[ZeroSearch]] allow searching through hand-crafted indexes using key terms. While other zites, like [[0list]] or [[ZeroCentral]], allow user submissions to generate a list.\n\n## See Also\n* [[Zite Categories]]\n* [[Well-Known Developers]]\n* [[Creating Zites]]\n* [[Search engine|Search engines]]\n\n### Well-Known Zites\n* [[ZeroHello]]\n* [[ZeroTalk]]\n* [[ZeroMe]]\n* [[ZeroBlog]]\n* [[ZeroMail]]\n* [[ZeroSites]]\n* [[ZeroUp]]\n* [[ZeroUpdate]]\n* [[0list]]\n* [[ZeroWiki]]\n* [[Git Center]]\n* [[CodeR]]\n* [[ThunderWave]]\n* [[Important Zites]]\n* [[ZeroNet Dev Center]]\n* [[ZeroMedium]]\n* [[ZeroDB]]\n* [[ThunderWave]]\n* [[Kopy Kate]]\n* [[KopyKate Big]]",
			"date_added": 1518541924455,
			"slug": "zite"
		}
	]
}