{
	"title": "cpp bfgminer dog office 2018-2-22",
	"description": "My Blog.",
	"links": "- [Starnet](http://127.0.0.1:43110/1Fc6zxe5FSJkUFsH2qmJ2eZcFwCa3Yr7yD)",
	"next_post_id": 9,
	"demo": false,
	"modified": 1519292282,
	"post": [
		{
			"post_id": 8,
			"title": "New blog post",
			"date_published": 1519292282.964,
			"body": "Blog post body"
		},
		{
			"post_id": 7,
			"title": "New blog post",
			"date_published": 1519291495.755,
			"body": "Web applications were originally developed around a client/server model, where the Web client is always the initiator of transactions, requesting data from the server. Thus, there was no mechanism for the server to independently send, or push, data to the client without the client first making a request.\n\nWhat is HTTP Long Polling? from PubNub on Vimeo.\n\nIn a Nutshell: HTTP Long Polling\nTo overcome this deficiency, Web app developers can implement a technique called HTTP long polling, where the client polls the server requesting new information.  The server holds the request open until new data is available. Once available, the server responds and sends the new information. When the client receives the new information, it immediately sends another request, and the operation is repeated. This effectively emulates a server push feature. "
		},
		{
			"post_id": 6,
			"title": "New blog post",
			"date_published": 1519290580.4,
			"body": "should use port 8332 for p2pool"
		},
		{
			"post_id": 5,
			"title": "New blog post",
			"date_published": 1519269567.215,
			"body": "PARENT = networks.nets['bitcoin']\nSHARE_PERIOD = 30 # seconds\nCHAIN_LENGTH = 24*60*60//10 # shares\nREAL_CHAIN_LENGTH = 24*60*60//10 # shares\nTARGET_LOOKBEHIND = 200 # shares\nSPREAD = 3 # blocks\nIDENTIFIER = 'fc70035c7a81bc6f'.decode('hex')\nPREFIX = '2472ef181efcd37b'.decode('hex')\nP2P_PORT = 9333\nMIN_TARGET = 0\nMAX_TARGET = 2**256//2**32 - 1\nPERSIST = True\nWORKER_PORT = 9332\nBOOTSTRAP_ADDRS = 'forre.st vps.forre.st portals94.ns01.us 54.227.25.14 119.1.96.99 204.10.105.113 76.104.150.248 89.71.151.9 76.114.13.54 72.201.24.106 79.160.2.128 207.244.175.195 168.7.116.243 94.23.215.27 218.54.45.177 5.9.157.150 78.155.217.76 91.154.90.163 173.52.43.124 78.225.49.209 220.135.57.230 169.237.101.193:8335 98.236.74.28 204.19.23.19 98.122.165.84:8338 71.90.88.222 67.168.132.228 193.6.148.18 80.218.174.253 50.43.56.102 68.13.4.106 24.246.31.2 176.31.208.222 1.202.128.218 86.155.135.31 204.237.15.51 5.12.158.126:38007 202.60.68.242 94.19.53.147 65.130.126.82 184.56.21.182 213.112.114.73 218.242.51.246 86.173.200.160 204.15.85.157 37.59.15.50 62.217.124.203 80.87.240.47 198.61.137.12 108.161.134.32 198.154.60.183:10333 71.39.52.34:9335 46.23.72.52:9343 83.143.42.177 192.95.61.149 144.76.17.34 46.65.68.119 188.227.176.66:9336 75.142.155.245:9336 213.67.135.99 76.115.224.177 50.148.193.245 64.53.185.79 80.65.30.137 109.126.14.42 76.84.63.146 62.213.58.41 61.219.119.37 209.195.4.74 114.32.105.215 221.15.35.2 78.46.88.136 211.100.23.119 84.75.252.230 123.243.155.184:9350 68.193.128.182'.split(' ')\nANNOUNCE_CHANNEL = '#p2pool'\nVERSION_CHECK = lambda v: None if 100000 <= v else 'Bitcoin version too old. Upgrade to 0.11.2 or newer!' # not a bug. BIP65 support is ensured by SOFTFORKS_REQUIRED\nVERSION_WARNING = lambda v: None\nSOFTFORKS_REQUIRED = set(['bip65', 'csv', 'segwit'])\nMINIMUM_PROTOCOL_VERSION = 1600\nNEW_MINIMUM_PROTOCOL_VERSION = 1700\nSEGWIT_ACTIVATION_VERSION = 17"
		},
		{
			"post_id": 4,
			"title": "miner is a good measure of general difficulty in mm in current digital society",
			"date_published": 1519268924.927,
			"body": "Blog post body"
		},
		{
			"post_id": 3,
			"title": "New blog post",
			"date_published": 1519268387.951,
			"body": "https://github.com/luke-jr/bfgminer"
		},
		{
			"post_id": 1,
			"title": "Congratulations!",
			"date_published": 1433033779.604,
			"body": "Your blog has been successfully created!"
		}
	]
}