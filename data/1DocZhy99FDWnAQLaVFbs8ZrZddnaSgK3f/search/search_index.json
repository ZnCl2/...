{"config":{"lang":["jp"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u524d\u8a00 \u672c\u6587\u6539\u7f16\u81ea The-truth-about-zeronet \u3002 Tip \u5b98\u65b9\u6587\u6863\uff08\u5df2\u88ab\u5899\uff09\uff1a https://zeronet.io/docs/zh/ \u8fd8\u6709\u5728\u96f6\u7f51\u4e0a\u7684\u955c\u50cf\uff08\u5b98\u65b9\u7684\uff09\uff1a http://127.0.0.1:43110/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/zh/ \u7ad9\u70b9 \u96f6\u7f51\u7ad9\u70b9\uff0c\u53c8\u79f0 zite 1 \uff0c\u6b63\u5982\u5176\u540d\uff0c\u7ad9\u70b9\u5728\u5206\u5e03\u5f0f\u7f51\u7edc\u4e0a\u5206\u53d1\u3002 \u6297\u5899\u80fd\u529b \u5e38\u89c4\u4e92\u8054\u7f51 \u7f51\u7ad9\u5bb9\u6613\u88ab\u5899\u3002 \u96f6\u7f51 \u7f51\u7ad9\u5728\u6bcf\u4e2a\u8bbf\u95ee\u8005\u7684\u8bbe\u5907\u4e0a\u90fd\u6709\uff0c\u96be\u4ee5\u5c4f\u853d\u3002 \u5b89\u88c5 \u8981\u5728 Windows\uff0cMac \u548c Linux \u4e0a\u4f7f\u7528\u96f6\u7f51\uff0c\u5148\u5f97\u5b89\u88c5\u5ba2\u6237\u7aef\u3002 \u8bbf\u95ee https://zeronet.io \u5e76\u4e0b\u8f7d\u5b89\u88c5\u3002 \u5728\u5927\u9646\u5730\u533a\uff0c\u53ef\u4ee5\u5728github\u4e0a\u4e0b\u8f7d\uff0c https://github.com/HelloZeroNet/ZeroNet-win/tree/dist \u8bbf\u95ee\u7ad9\u70b9 \u96f6\u7f51\u5728\u672c\u5730\u67b6\u8bbe\u670d\u52a1\u5668\u4e8e http://127.0.0.1:43110 \u3002\u542f\u52a8\u96f6\u7f51\u4f1a\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668\u3002 \u4f60\u53ef\u4ee5\u5728\u5de6\u4fa7\u5217\u8868\u770b\u5230\u5df2\u4e0b\u8f7d\u7684\u7f51\u7ad9\u548c\u4e00\u4e9b\u94fe\u63a5\uff0c\u73b0\u5728\u5c31\u6253\u5f00\u770b\u770b\u5427\u3002 \u81f3\u4e8e\u4e3a\u4f55\u8bf4\u662f \u4e0b\u8f7d \uff0c\u8fd9\u8ddf\u96f6\u7f51\u7684\u539f\u7406\u6709\u5173\uff0c\u5f85\u4f1a\u518d\u89e3\u91ca\u3002 \u6ce8\u518c ZeroID \u7528\u6237\u53ef\u4ee5\u5728\u4e92\u8054\u7f51 2 \u4e0a\u5982 Google, eBay\uff0c\u7b49\u7f51\u7ad9\u4e0a\u6ce8\u518c\u8d26\u53f7\u3002\u800c\u96f6\u7f51\u4e0a\u6ce8\u518c\u8d26\u53f7\uff0c\u6280\u672f\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u76f8\u5e94\u7684\uff0c\u96f6\u7f51\u5f15\u5165\u4e86 \u8bc1\u4e66\u6388\u6743\u7ad9 3 \u3002 \u4f8b\u5982\uff0c ZeroID \uff0c\u662f\u4f7f\u7528\u5f97\u6700\u5e7f\u6cdb\u7684\u8bc1\u4e66\u6388\u6743\u7ad9\u70b9\uff0c\u5c31\u5148\u5728\u8fd9\u6ce8\u518c\u5427\u3002 \u8bbf\u95ee ZeroID \u5e76\u6ce8\u518c Warning \u5982\u679c\u8981\u533f\u540d\uff0c\u5373\u9690\u85cfIP\uff0c\u53ef\u4ee5\u4f7f\u7528Tor \u8f93\u5165\u4e86\u6635\u79f0\uff0c\u5bc6\u7801\u5462\uff1f\u7b54\u6848\u662f\u2014\u2014\u81ea\u52a8\u751f\u6210\u3002\u96f6\u7f51\u6839\u76ee\u5f55\u4e0b\u6709\u4e2a users.json \u6587\u4ef6\uff0c\u6ce8\u518c\u7684\u65b0\u8d26\u53f7\u4f1a\u653e\u5728\u91cc\u9762 : \u79c1\u94a5\u548c\u516c\u94a5\uff0c\u8fd8\u6709\u6635\u79f0\u3002\u4e0d\u8981\u6cc4\u9732\u79c1\u94a5\u7ed9\u522b\u4eba - \u79c1\u94a5\u662f\u5bc6\u7801\u3002\u516c\u94a5\u5c31\u662f\u8d26\u53f7\u3002 \u5982\u679c users.json \u4e22\u5931\u6216\u8005\u88ab\u7be1\u6539\uff0c\u5c31\u6ca1\u6cd5\u8bbf\u95ee\u4f60\u7684\u8d26\u53f7\u4e86\u3002\u6240\u4ee5\u8981\u7ecf\u5e38\u5907\u4efd\u3002 \u83b7\u53d6 ZeroTalk \u8d26\u53f7 \u73b0\u5728\u770b\u4e0b\u80fd\u7528 ZeroID \u7684\u7ad9\u70b9\uff0c\u8bba\u575b ZeroTalk \u662f\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c \u8bbf\u95ee ZeroTalk \uff0c\u70b9\u51fb Test messages \u5e16\u5b50\uff0c \u518d\u70b9 \u767b\u9646\u4e3a... \u9009\u62e9 {\u4f60\u7684\u7528\u6237\u540d}@zeroid.bit \u3002\u8f93\u5165\u4e00\u4e9b Hello, world! \u4e4b\u7c7b\u7684\u6587\u672c\u518d\u70b9\u51fb\u63d0\u4ea4\u3002 \u4e0d\u60f3\u53d1 Hello, world! \u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u53d1\u4e00\u4e0b\u672c\u6559\u7a0b :) \u53ef\u4ee5\u70b9\u51fb\u9876\u90e8 Forums: English \u00b7 Dansk \u00b7 Espa\u00f1ol \u00b7 Fran\u00e7ais ... \u83dc\u5355\u680f\u9009\u62e9\u76f8\u5e94\u8bba\u575b\u3002\u4e2d\u6587\u8bba\u575b New GFW Talk \u3002 \u5173\u4e8e\u4f5c\u8005 \u539f\u4f5c\u8005\uff1a imachug \u3001 krixano \u8bd1\u8005\uff1a blurHY \u5177\u4f53\u7684\u8981\u770bgithub repo\u3002 Z eroNet S ite \u21a9 \u6307\u5e38\u89c4\u7684\u3001\u4e2d\u5fc3\u5316\u7684\u4e92\u8054\u7f51\u3002 \u21a9 Certificate Authorities \u21a9","title":"\u524d\u8a00"},{"location":"#_1","text":"\u672c\u6587\u6539\u7f16\u81ea The-truth-about-zeronet \u3002 Tip \u5b98\u65b9\u6587\u6863\uff08\u5df2\u88ab\u5899\uff09\uff1a https://zeronet.io/docs/zh/ \u8fd8\u6709\u5728\u96f6\u7f51\u4e0a\u7684\u955c\u50cf\uff08\u5b98\u65b9\u7684\uff09\uff1a http://127.0.0.1:43110/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/zh/","title":"\u524d\u8a00"},{"location":"#_2","text":"\u96f6\u7f51\u7ad9\u70b9\uff0c\u53c8\u79f0 zite 1 \uff0c\u6b63\u5982\u5176\u540d\uff0c\u7ad9\u70b9\u5728\u5206\u5e03\u5f0f\u7f51\u7edc\u4e0a\u5206\u53d1\u3002","title":"\u7ad9\u70b9"},{"location":"#_3","text":"","title":"\u6297\u5899\u80fd\u529b"},{"location":"#_4","text":"\u7f51\u7ad9\u5bb9\u6613\u88ab\u5899\u3002","title":"\u5e38\u89c4\u4e92\u8054\u7f51"},{"location":"#_5","text":"\u7f51\u7ad9\u5728\u6bcf\u4e2a\u8bbf\u95ee\u8005\u7684\u8bbe\u5907\u4e0a\u90fd\u6709\uff0c\u96be\u4ee5\u5c4f\u853d\u3002","title":"\u96f6\u7f51"},{"location":"#_6","text":"\u8981\u5728 Windows\uff0cMac \u548c Linux \u4e0a\u4f7f\u7528\u96f6\u7f51\uff0c\u5148\u5f97\u5b89\u88c5\u5ba2\u6237\u7aef\u3002 \u8bbf\u95ee https://zeronet.io \u5e76\u4e0b\u8f7d\u5b89\u88c5\u3002 \u5728\u5927\u9646\u5730\u533a\uff0c\u53ef\u4ee5\u5728github\u4e0a\u4e0b\u8f7d\uff0c https://github.com/HelloZeroNet/ZeroNet-win/tree/dist","title":"\u5b89\u88c5"},{"location":"#_7","text":"\u96f6\u7f51\u5728\u672c\u5730\u67b6\u8bbe\u670d\u52a1\u5668\u4e8e http://127.0.0.1:43110 \u3002\u542f\u52a8\u96f6\u7f51\u4f1a\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668\u3002 \u4f60\u53ef\u4ee5\u5728\u5de6\u4fa7\u5217\u8868\u770b\u5230\u5df2\u4e0b\u8f7d\u7684\u7f51\u7ad9\u548c\u4e00\u4e9b\u94fe\u63a5\uff0c\u73b0\u5728\u5c31\u6253\u5f00\u770b\u770b\u5427\u3002 \u81f3\u4e8e\u4e3a\u4f55\u8bf4\u662f \u4e0b\u8f7d \uff0c\u8fd9\u8ddf\u96f6\u7f51\u7684\u539f\u7406\u6709\u5173\uff0c\u5f85\u4f1a\u518d\u89e3\u91ca\u3002","title":"\u8bbf\u95ee\u7ad9\u70b9"},{"location":"#zeroid","text":"\u7528\u6237\u53ef\u4ee5\u5728\u4e92\u8054\u7f51 2 \u4e0a\u5982 Google, eBay\uff0c\u7b49\u7f51\u7ad9\u4e0a\u6ce8\u518c\u8d26\u53f7\u3002\u800c\u96f6\u7f51\u4e0a\u6ce8\u518c\u8d26\u53f7\uff0c\u6280\u672f\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u76f8\u5e94\u7684\uff0c\u96f6\u7f51\u5f15\u5165\u4e86 \u8bc1\u4e66\u6388\u6743\u7ad9 3 \u3002 \u4f8b\u5982\uff0c ZeroID \uff0c\u662f\u4f7f\u7528\u5f97\u6700\u5e7f\u6cdb\u7684\u8bc1\u4e66\u6388\u6743\u7ad9\u70b9\uff0c\u5c31\u5148\u5728\u8fd9\u6ce8\u518c\u5427\u3002 \u8bbf\u95ee ZeroID \u5e76\u6ce8\u518c Warning \u5982\u679c\u8981\u533f\u540d\uff0c\u5373\u9690\u85cfIP\uff0c\u53ef\u4ee5\u4f7f\u7528Tor \u8f93\u5165\u4e86\u6635\u79f0\uff0c\u5bc6\u7801\u5462\uff1f\u7b54\u6848\u662f\u2014\u2014\u81ea\u52a8\u751f\u6210\u3002\u96f6\u7f51\u6839\u76ee\u5f55\u4e0b\u6709\u4e2a users.json \u6587\u4ef6\uff0c\u6ce8\u518c\u7684\u65b0\u8d26\u53f7\u4f1a\u653e\u5728\u91cc\u9762 : \u79c1\u94a5\u548c\u516c\u94a5\uff0c\u8fd8\u6709\u6635\u79f0\u3002\u4e0d\u8981\u6cc4\u9732\u79c1\u94a5\u7ed9\u522b\u4eba - \u79c1\u94a5\u662f\u5bc6\u7801\u3002\u516c\u94a5\u5c31\u662f\u8d26\u53f7\u3002 \u5982\u679c users.json \u4e22\u5931\u6216\u8005\u88ab\u7be1\u6539\uff0c\u5c31\u6ca1\u6cd5\u8bbf\u95ee\u4f60\u7684\u8d26\u53f7\u4e86\u3002\u6240\u4ee5\u8981\u7ecf\u5e38\u5907\u4efd\u3002","title":"\u6ce8\u518c ZeroID"},{"location":"#zerotalk","text":"\u73b0\u5728\u770b\u4e0b\u80fd\u7528 ZeroID \u7684\u7ad9\u70b9\uff0c\u8bba\u575b ZeroTalk \u662f\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c \u8bbf\u95ee ZeroTalk \uff0c\u70b9\u51fb Test messages \u5e16\u5b50\uff0c \u518d\u70b9 \u767b\u9646\u4e3a... \u9009\u62e9 {\u4f60\u7684\u7528\u6237\u540d}@zeroid.bit \u3002\u8f93\u5165\u4e00\u4e9b Hello, world! \u4e4b\u7c7b\u7684\u6587\u672c\u518d\u70b9\u51fb\u63d0\u4ea4\u3002 \u4e0d\u60f3\u53d1 Hello, world! \u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u53d1\u4e00\u4e0b\u672c\u6559\u7a0b :) \u53ef\u4ee5\u70b9\u51fb\u9876\u90e8 Forums: English \u00b7 Dansk \u00b7 Espa\u00f1ol \u00b7 Fran\u00e7ais ... \u83dc\u5355\u680f\u9009\u62e9\u76f8\u5e94\u8bba\u575b\u3002\u4e2d\u6587\u8bba\u575b New GFW Talk \u3002","title":"\u83b7\u53d6 ZeroTalk \u8d26\u53f7"},{"location":"#_8","text":"\u539f\u4f5c\u8005\uff1a imachug \u3001 krixano \u8bd1\u8005\uff1a blurHY \u5177\u4f53\u7684\u8981\u770bgithub repo\u3002 Z eroNet S ite \u21a9 \u6307\u5e38\u89c4\u7684\u3001\u4e2d\u5fc3\u5316\u7684\u4e92\u8054\u7f51\u3002 \u21a9 Certificate Authorities \u21a9","title":"\u5173\u4e8e\u4f5c\u8005"},{"location":"changing-tables/","text":"\u7f16\u8f91\u6570\u636e\u5e93 \u8fd9\u7ae0\u8bb2\u8ff0\u4e86\u5982\u4f55\u7f16\u8f91 SQLite . \u81ea\u589e \u60f3\u6dfb\u52a0\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f46 ID \u7528\u51e0\u5462\uff1f\u8fd9\u6709\u4e2a\u86ee\u597d\u7684\u7b54\u6848\u3002\u5148\u5411 data/admin/data.json \u6dfb\u52a0\u4e00\u4e2a\u65b0\u5c5e\u6027\u3002 { \"next_post_id\" : 3 , \"posts\" : [ { \"id\" : 1 , \"title\" : \"Post 1\" , \"content\" : \"Post 1\" }, { \"id\" : 2 , \"title\" : \"Post 2\" , \"content\" : \"Post 2\" } ] } \u8bb8\u591a\u7ad9\u70b9\u90fd\u8fd9\u4e48\u505a: \u4f7f\u7528 next_..._id . \u54b1\u4e5f\u8fd9\u6837. \u6dfb\u52a0\u65b0\u6587\u7ae0\u65f6\uff0c\u4ee5 next_post_id \u4e3a\u65b0 ID\u3002 \u6570\u636e\u5e93\u7684\u5199\u6743\u9650 \u4e4b\u524d\u5df2\u7ecf\u8bf4\u8fc7\u4e86, \u53ea\u6709 SELECT \u662f\u5141\u8bb8\u7684\u3002\u8fd8\u8bb0\u5f97\u54b1\u4ece\u54ea\u7f16\u8f91\u6587\u7ae0\u7684\u5417?\u55ef\u5bf9\uff0c\u5728 data/admin/data.json \u6587\u4ef6\u91cc\u3002\u5c31\u7528\u4e0a\u8282\u8bfe\u8bb2\u7684 readFile() \u548c writeFile() \u51fd\u6570: function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , [ file , false ], callback ); } function writeFile ( file , content , callback ) { zeroFrame . cmd ( \"fileWrite\" , [ file , base64Encode ( content )], callback ); } function base64Encode ( content ) { content = encodeURIComponent ( content ); // Split to bytes in % notation content = unescape ( content ); // Join % notation as bytes (not as chars) return btoa ( content ); } \u6dfb\u5165 js/files.js . \u522b\u5fd8\u4e86\u628a\u8fd9\u6587\u4ef6\u4e5f\u5f15\u5165\u5230 index.html \uff0c\u800c\u4e14\u8981\u653e\u5728\u5728 index.js \u4e4b\u524d\uff1a < script type = \"text/javascript\" src = \"js/files.js\" ></ script > \u7b2c\u4e00\u6b65\u8981\u8bfb\u53d6 data/admin/data.json \u6587\u4ef6\u5e76\u89e3\u6790\uff0c\u8bd5\u7740\u81ea\u5df1\u5f04\u4e0b\u3002 \u7b54\u6848: function addPost ( title , postContent ) { readFile ( \"data/admin/data.json\" , function ( content ) { content = content || \"\" ; // Convert undefined and null to \"\" // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { posts : [], next_post_id : 0 , }; } console . log ( content ); }); } addPost ( \"test\" , \"test content\" ); \u6253\u5f00\u63a7\u5236\u53f0\u5e76\u5237\u65b0\u9875\u9762\uff0c\u5c31\u80fd\u770b\u5230\u6709 posts \u548c next_post_id \u5c5e\u6027\u7684\u5bf9\u8c61\u3002 \u7b80\u5355\u5730\u7528 next_post_id \u5e76\u7f16\u8f91 posts \u6570\u7ec4: function addPost ( title , postContent , callback ) { // Notice new callback argument readFile ( \"data/admin/data.json\" , function ( content ) { ... // Parse JSON ... content . posts . push ({ id : content . next_post_id ++ , // Use next_post_id and then increment it title : title , content : postContent }); content = JSON . stringify ( content , null , 4 ); // Make content string writeFile ( \"data/admin/data.json\" , content , function ( result ) { callback ( result == \"ok\" ); }); }); } addPost ( \"test\" , \"test content\" , function ( result ) { console . log ( result ? \"OK\" : \"Error\" ); }); \u5c1d\u8bd5\u8fd0\u884c\u4ee3\u7801\uff0c\u89c2\u5bdf data/admin/data.json \u7684\u53d8\u5316. \u6253\u5f00 data/mydatabase.db . \u548b\u53ea\u6709\u4ee5\u524d\u7684\u6587\u7ae0?\u56e0\u4e3a\u6539\u5b8c\u6570\u636e\u8fd8\u6ca1\u6709\u7b7e\u540d\u3002\u4e0b\u9762\u662f\u6211\u4eec\u9700\u8981\u7684 API: siteSign \u7ed9\u7ad9\u70b9\u7684content.json\u7b7e\u540d \u53c2\u6570 \u5b9a\u4e49 privatekey (\u53ef\u9009) \u7528\u4e8e\u7b7e\u540d\u7684\u79c1\u94a5 (\u9ed8\u8ba4\u503c: \u5f53\u524d\u7528\u6237\u7684\u79c1\u94a5) inner_path (\u53ef\u9009) \u6b32\u7b7e\u540d\u7684content json\u6587\u4ef6\u7684\u5185\u90e8\u8def\u5f84 (\u9ed8\u8ba4\u503c: content.json) remove_missing_optional (\u53ef\u9009) \u79fb\u9664\u5728content.json\u6587\u4ef6\u5185\uff0c\u4f46\u5b9e\u9645\u4e0a\u5df2\u4e0d\u5b58\u5728\u7684\u53ef\u9009\u6587\u4ef6\u3002 (\u9ed8\u8ba4\u503c: False) \u8fd4\u56de\u503c \u6210\u529f\u5219\u8fd4\u56de\"ok\" \uff0c\u5931\u8d25\u5219\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002 \u6ce8\u610f\uff1a \u5982\u679c\u79c1\u94a5\u5728users.json\u4e2d\uff0c\u5c31\u7528\"stored\"\u4f5c\u4e3aprivatekey\u7684\u53c2\u6570\u503c\u3002(\u4f8b\u5982 cloned sites) sitePublish \u53d1\u5e03\u4e00\u4e2a\u7ad9\u70b9\u7684content.json \u53c2\u6570 \u5b9a\u4e49 privatekey (\u53ef\u9009) \u7528\u4e8e\u7b7e\u540d\u7684\u79c1\u94a5 (\u9ed8\u8ba4\u503c: current user's privatekey) inner_path (\u53ef\u9009) \u6b32\u53d1\u5e03\u7684content json\u7684\u5185\u90e8\u8def\u5f84 (\u9ed8\u8ba4\u503c: content.json) sign (\u53ef\u9009) \u82e5\u503c\u4e3aTrue\u5219\u4f1a\u5728\u53d1\u5e03\u524d\u7ed9content.json\u7b7e\u540d (\u9ed8\u8ba4\u503c: True) \u8fd4\u56de\u503c \"ok\" on success else the error message writeFile ( \"data/admin/data.json\" , content , function ( result ) { if ( result != \"ok\" ) { callback ( false ); return ; } zeroFrame . cmd ( \"sitePublish\" , { privatekey : \"stored\" }, function ( result ) { callback ( result == \"ok\" ); }); }); \u8bd5\u7740\u5237\u65b0\u9875\u9762\u5e76\u6253\u5f00\u6570\u636e\u5e93 data/mydatabase.db . \u79c1\u94a5 siteSign \u548c sitePublish \u547d\u4ee4\u4e2d\u4e3b\u8981\u662f privatekey \u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u6bd4\u8f83\u96be\u61c2\uff0c\u4f46\u7ecf\u5e38\u7528\u3002\u4f60\u5f97\u8bb0\u4f4f\u5b83\u7684\u610f\u601d\u3002 privatekey: null \u610f\u4e3a \"\u4f7f\u7528\u96f6\u7f51\u4e3a\u7528\u6237\u548c\u7ad9\u70b9\u521b\u5efa\u7684\u79c1\u94a5\". \u6709\u4e9b\u7ad9\u70b9(like ZeroTalk) \u5305\u542b\u7528\u6237\u5185\u5bb9 (\u5e16\u5b50\u548c\u6295\u7968). \u4f7f\u7528\u7528\u6237\u7684\u5bc6\u94a5\u7b7e\u540d\u6570\u636e\uff0c\u5e76\u4e0d\u7528\u4f20\u9012 privatekey \u53c2\u6570\uff0c\u76f4\u63a5\u8bbe\u4e3a null . privatekey: \"stored\" \u610f\u4e3a \"\u4f7f\u7528\u7ad9\u70b9\u7684\u79c1\u94a5\" \u53ea\u6709\u5728\u7528\u6237\u662f\u7ad9\u957f\u65f6\u624d\u80fd\u7528\u3002 privatekey: \"...\" \u610f\u4e3a \"\u4f7f\u7528\u6307\u5b9a\u7684\u79c1\u94a5\". \u6743\u9650 \u6211\u4eec\u4e5f\u7ecf\u5e38\u9700\u8981\u77e5\u9053\u7528\u6237\u662f\u5426\u4e3a\u7ad9\u957f\uff0c\u4f8b\u5982\uff0c\u535a\u5ba2\uff0c\u53ea\u5e94\u8be5\u5411\u7ad9\u957f\u663e\u793a\u201c\u6dfb\u52a0\u6587\u7ae0\u201d\u6309\u94ae\u3002ZeroFrame \u5c31\u662f! \u5229\u7528 siteInfo \u547d\u4ee4\uff0c \u5b83\u8fd4\u56de\u4e00\u4e2ajs\u5bf9\u8c61\uff0c\u5305\u542b\u4e00\u4e2a privatekey \u7684\u5e03\u5c14\u503c\u5c5e\u6027 - \u5982\u679c\u662ftrue\u90a3\u4e48\u5f53\u524d\u7528\u6237\u5c31\u662f\u7ad9\u957f\u3002 function isAdmin ( callback ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( info ) { callback ( !! info . privatekey ); }); } \u4f8b\u5b50 \u535a\u5ba2\u4f8b\u5b50 . \u6539\u8fdb\u5efa\u8bae: \u6dfb\u52a0\u4e00\u4e2a\u5220\u9664\u6309\u94ae\u3002 \u66f4\u597d\u770b\u7684\u7f16\u8f91\u9875\u9762\u3002 \u5728 Add post \u9875\u9762\uff0c Cancel \u70b9\u51fb\u540e\u5220\u9664\u521b\u5efa\u7684\u6587\u7ae0 \u4f7f\u7528\u975eHTML\u7684\u6807\u8bb0\u8bed\u8a00","title":"\u64cd\u4f5c\u6570\u636e\u5e93"},{"location":"changing-tables/#_1","text":"\u8fd9\u7ae0\u8bb2\u8ff0\u4e86\u5982\u4f55\u7f16\u8f91 SQLite .","title":"\u7f16\u8f91\u6570\u636e\u5e93"},{"location":"changing-tables/#_2","text":"\u60f3\u6dfb\u52a0\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f46 ID \u7528\u51e0\u5462\uff1f\u8fd9\u6709\u4e2a\u86ee\u597d\u7684\u7b54\u6848\u3002\u5148\u5411 data/admin/data.json \u6dfb\u52a0\u4e00\u4e2a\u65b0\u5c5e\u6027\u3002 { \"next_post_id\" : 3 , \"posts\" : [ { \"id\" : 1 , \"title\" : \"Post 1\" , \"content\" : \"Post 1\" }, { \"id\" : 2 , \"title\" : \"Post 2\" , \"content\" : \"Post 2\" } ] } \u8bb8\u591a\u7ad9\u70b9\u90fd\u8fd9\u4e48\u505a: \u4f7f\u7528 next_..._id . \u54b1\u4e5f\u8fd9\u6837. \u6dfb\u52a0\u65b0\u6587\u7ae0\u65f6\uff0c\u4ee5 next_post_id \u4e3a\u65b0 ID\u3002","title":"\u81ea\u589e"},{"location":"changing-tables/#_3","text":"\u4e4b\u524d\u5df2\u7ecf\u8bf4\u8fc7\u4e86, \u53ea\u6709 SELECT \u662f\u5141\u8bb8\u7684\u3002\u8fd8\u8bb0\u5f97\u54b1\u4ece\u54ea\u7f16\u8f91\u6587\u7ae0\u7684\u5417?\u55ef\u5bf9\uff0c\u5728 data/admin/data.json \u6587\u4ef6\u91cc\u3002\u5c31\u7528\u4e0a\u8282\u8bfe\u8bb2\u7684 readFile() \u548c writeFile() \u51fd\u6570: function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , [ file , false ], callback ); } function writeFile ( file , content , callback ) { zeroFrame . cmd ( \"fileWrite\" , [ file , base64Encode ( content )], callback ); } function base64Encode ( content ) { content = encodeURIComponent ( content ); // Split to bytes in % notation content = unescape ( content ); // Join % notation as bytes (not as chars) return btoa ( content ); } \u6dfb\u5165 js/files.js . \u522b\u5fd8\u4e86\u628a\u8fd9\u6587\u4ef6\u4e5f\u5f15\u5165\u5230 index.html \uff0c\u800c\u4e14\u8981\u653e\u5728\u5728 index.js \u4e4b\u524d\uff1a < script type = \"text/javascript\" src = \"js/files.js\" ></ script > \u7b2c\u4e00\u6b65\u8981\u8bfb\u53d6 data/admin/data.json \u6587\u4ef6\u5e76\u89e3\u6790\uff0c\u8bd5\u7740\u81ea\u5df1\u5f04\u4e0b\u3002 \u7b54\u6848: function addPost ( title , postContent ) { readFile ( \"data/admin/data.json\" , function ( content ) { content = content || \"\" ; // Convert undefined and null to \"\" // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { posts : [], next_post_id : 0 , }; } console . log ( content ); }); } addPost ( \"test\" , \"test content\" ); \u6253\u5f00\u63a7\u5236\u53f0\u5e76\u5237\u65b0\u9875\u9762\uff0c\u5c31\u80fd\u770b\u5230\u6709 posts \u548c next_post_id \u5c5e\u6027\u7684\u5bf9\u8c61\u3002 \u7b80\u5355\u5730\u7528 next_post_id \u5e76\u7f16\u8f91 posts \u6570\u7ec4: function addPost ( title , postContent , callback ) { // Notice new callback argument readFile ( \"data/admin/data.json\" , function ( content ) { ... // Parse JSON ... content . posts . push ({ id : content . next_post_id ++ , // Use next_post_id and then increment it title : title , content : postContent }); content = JSON . stringify ( content , null , 4 ); // Make content string writeFile ( \"data/admin/data.json\" , content , function ( result ) { callback ( result == \"ok\" ); }); }); } addPost ( \"test\" , \"test content\" , function ( result ) { console . log ( result ? \"OK\" : \"Error\" ); }); \u5c1d\u8bd5\u8fd0\u884c\u4ee3\u7801\uff0c\u89c2\u5bdf data/admin/data.json \u7684\u53d8\u5316. \u6253\u5f00 data/mydatabase.db . \u548b\u53ea\u6709\u4ee5\u524d\u7684\u6587\u7ae0?\u56e0\u4e3a\u6539\u5b8c\u6570\u636e\u8fd8\u6ca1\u6709\u7b7e\u540d\u3002\u4e0b\u9762\u662f\u6211\u4eec\u9700\u8981\u7684 API:","title":"\u6570\u636e\u5e93\u7684\u5199\u6743\u9650"},{"location":"changing-tables/#sitesign","text":"\u7ed9\u7ad9\u70b9\u7684content.json\u7b7e\u540d \u53c2\u6570 \u5b9a\u4e49 privatekey (\u53ef\u9009) \u7528\u4e8e\u7b7e\u540d\u7684\u79c1\u94a5 (\u9ed8\u8ba4\u503c: \u5f53\u524d\u7528\u6237\u7684\u79c1\u94a5) inner_path (\u53ef\u9009) \u6b32\u7b7e\u540d\u7684content json\u6587\u4ef6\u7684\u5185\u90e8\u8def\u5f84 (\u9ed8\u8ba4\u503c: content.json) remove_missing_optional (\u53ef\u9009) \u79fb\u9664\u5728content.json\u6587\u4ef6\u5185\uff0c\u4f46\u5b9e\u9645\u4e0a\u5df2\u4e0d\u5b58\u5728\u7684\u53ef\u9009\u6587\u4ef6\u3002 (\u9ed8\u8ba4\u503c: False) \u8fd4\u56de\u503c \u6210\u529f\u5219\u8fd4\u56de\"ok\" \uff0c\u5931\u8d25\u5219\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002 \u6ce8\u610f\uff1a \u5982\u679c\u79c1\u94a5\u5728users.json\u4e2d\uff0c\u5c31\u7528\"stored\"\u4f5c\u4e3aprivatekey\u7684\u53c2\u6570\u503c\u3002(\u4f8b\u5982 cloned sites)","title":"siteSign"},{"location":"changing-tables/#sitepublish","text":"\u53d1\u5e03\u4e00\u4e2a\u7ad9\u70b9\u7684content.json \u53c2\u6570 \u5b9a\u4e49 privatekey (\u53ef\u9009) \u7528\u4e8e\u7b7e\u540d\u7684\u79c1\u94a5 (\u9ed8\u8ba4\u503c: current user's privatekey) inner_path (\u53ef\u9009) \u6b32\u53d1\u5e03\u7684content json\u7684\u5185\u90e8\u8def\u5f84 (\u9ed8\u8ba4\u503c: content.json) sign (\u53ef\u9009) \u82e5\u503c\u4e3aTrue\u5219\u4f1a\u5728\u53d1\u5e03\u524d\u7ed9content.json\u7b7e\u540d (\u9ed8\u8ba4\u503c: True) \u8fd4\u56de\u503c \"ok\" on success else the error message writeFile ( \"data/admin/data.json\" , content , function ( result ) { if ( result != \"ok\" ) { callback ( false ); return ; } zeroFrame . cmd ( \"sitePublish\" , { privatekey : \"stored\" }, function ( result ) { callback ( result == \"ok\" ); }); }); \u8bd5\u7740\u5237\u65b0\u9875\u9762\u5e76\u6253\u5f00\u6570\u636e\u5e93 data/mydatabase.db .","title":"sitePublish"},{"location":"changing-tables/#_4","text":"siteSign \u548c sitePublish \u547d\u4ee4\u4e2d\u4e3b\u8981\u662f privatekey \u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u6bd4\u8f83\u96be\u61c2\uff0c\u4f46\u7ecf\u5e38\u7528\u3002\u4f60\u5f97\u8bb0\u4f4f\u5b83\u7684\u610f\u601d\u3002 privatekey: null \u610f\u4e3a \"\u4f7f\u7528\u96f6\u7f51\u4e3a\u7528\u6237\u548c\u7ad9\u70b9\u521b\u5efa\u7684\u79c1\u94a5\". \u6709\u4e9b\u7ad9\u70b9(like ZeroTalk) \u5305\u542b\u7528\u6237\u5185\u5bb9 (\u5e16\u5b50\u548c\u6295\u7968). \u4f7f\u7528\u7528\u6237\u7684\u5bc6\u94a5\u7b7e\u540d\u6570\u636e\uff0c\u5e76\u4e0d\u7528\u4f20\u9012 privatekey \u53c2\u6570\uff0c\u76f4\u63a5\u8bbe\u4e3a null . privatekey: \"stored\" \u610f\u4e3a \"\u4f7f\u7528\u7ad9\u70b9\u7684\u79c1\u94a5\" \u53ea\u6709\u5728\u7528\u6237\u662f\u7ad9\u957f\u65f6\u624d\u80fd\u7528\u3002 privatekey: \"...\" \u610f\u4e3a \"\u4f7f\u7528\u6307\u5b9a\u7684\u79c1\u94a5\".","title":"\u79c1\u94a5"},{"location":"changing-tables/#_5","text":"\u6211\u4eec\u4e5f\u7ecf\u5e38\u9700\u8981\u77e5\u9053\u7528\u6237\u662f\u5426\u4e3a\u7ad9\u957f\uff0c\u4f8b\u5982\uff0c\u535a\u5ba2\uff0c\u53ea\u5e94\u8be5\u5411\u7ad9\u957f\u663e\u793a\u201c\u6dfb\u52a0\u6587\u7ae0\u201d\u6309\u94ae\u3002ZeroFrame \u5c31\u662f! \u5229\u7528 siteInfo \u547d\u4ee4\uff0c \u5b83\u8fd4\u56de\u4e00\u4e2ajs\u5bf9\u8c61\uff0c\u5305\u542b\u4e00\u4e2a privatekey \u7684\u5e03\u5c14\u503c\u5c5e\u6027 - \u5982\u679c\u662ftrue\u90a3\u4e48\u5f53\u524d\u7528\u6237\u5c31\u662f\u7ad9\u957f\u3002 function isAdmin ( callback ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( info ) { callback ( !! info . privatekey ); }); }","title":"\u6743\u9650"},{"location":"changing-tables/#_6","text":"\u535a\u5ba2\u4f8b\u5b50 . \u6539\u8fdb\u5efa\u8bae: \u6dfb\u52a0\u4e00\u4e2a\u5220\u9664\u6309\u94ae\u3002 \u66f4\u597d\u770b\u7684\u7f16\u8f91\u9875\u9762\u3002 \u5728 Add post \u9875\u9762\uff0c Cancel \u70b9\u51fb\u540e\u5220\u9664\u521b\u5efa\u7684\u6587\u7ae0 \u4f7f\u7528\u975eHTML\u7684\u6807\u8bb0\u8bed\u8a00","title":"\u4f8b\u5b50"},{"location":"cloning-zites/","text":"\u521b\u5efa\u7ad9\u70b9 \u514b\u9686\u7ad9\u70b9 \u54b1\u5efa\u4e2a\u81ea\u5df1\u7684\u535a\u5ba2\u5427\u8bbf\u95ee ZeroHello \uff0c\u5e76\u4e0b\u8f7d ZeroBlog \uff0c\u70b9\u51fb\u4e09\u4e2a\u70b9\u7684\u90a3\u4e2a\u6309\u94ae\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u83dc\u5355\uff1a \u6536\u85cf \u66f4\u65b0 \u68c0\u67e5\u6587\u4ef6 \u6682\u505c \u514b\u9686 Save as .zip \u5220\u9664 \u70b9\u51fb \u514b\u9686 \uff0c\u7136\u540e\u535a\u5ba2\u5c31\u6709\u4e86\uff0c\u514b\u9686\u5c31\u8fd9\u4e9b\u3002 \u66f4\u6539 ZeroBlog \u9f20\u6807\u60ac\u6d6e\u5728\u535a\u5ba2\u6807\u9898\u3001\u7b80\u4ecb\u2026\u2026\u4e0a\uff0c\u518d\u70b9\u51fb \ud83d\udd8a\uff0c\u5c31\u53ef\u4ee5\u7f16\u8f91\u4e86\u3002 \u90a3\u4e48\u5c31\u53d1\u7535\u5565\u5427\uff0c\u70b9\u51fb \u6dfb\u52a0\u65b0\u6587\u7ae0 \u3002\u7f16\u8f91\u6807\u9898\u3001\u5185\u5bb9\uff0c\u518d\u70b9\u5e95\u90e8\u7684 Sign & Publish new content \u3002\u5bf9\u6570\u636e\u7b7e\u540d\u540e\uff0c content.json \u7684\u5185\u5bb9\u4f1a\u6539\u53d8\u3002\u53d1\u5e03\u5185\u5bb9\u65f6\uff0c\u96f6\u7f51\u5ba2\u6237\u7aef\u4f1a\u5c06\u7ad9\u70b9\u53d1\u5e03\u5230\u5176\u4ed6\u8282\u70b9\uff0c\u7136\u540e\u4ed6\u4eec\u5c31\u518d\u5206\u53d1\u8fd9\u4e9b\u5185\u5bb9\u3002 \u8981\u662f\u53ea\u6709\u4f60\u6709\u8fd9\u4e2a\u7ad9\u70b9\uff0c\u5c31\u4f1a\u5f88\u96be\u53d1\u5e03\u3002 \u4e0b\u8f7d\u5e76\u66f4\u65b0\u7ad9\u70b9 \u4e0b\u8f7d\u7f51\u7ad9\u65f6\uff0c\u96f6\u7f51\u4f1a\u5728\u8282\u70b9\u5217\u8868\u91cc\u627e\u6709\u8fd9\u4e2a\u7f51\u7ad9\u7684\u8282\u70b9\u3002\u53ef\u4ee5\u662f\u4f60\u7684\u7b2c\u4e8c\u53f0\u7535\u8111\uff0c\u4e0d\u77e5\u9053\u4f60\u7b2c\u4e00\u53f0\u7535\u8111\u7684\u5b58\u5728\uff0c\u82e5\u662f\u5b83\u60f3\u4e0b\u8f7d\u8fd9\u4e2a\u7ad9\u70b9\uff0c\u600e\u4e48\u529e\u5462\uff1f \u7b54\u6848\u662f... \u7528 tracker \uff08 \u8ddf\u8e2a\u5668 \uff09\u6240\u6709\u7684\u8282\u70b9\u90fd\u4f1a\u9891\u7e41\u8fde\u63a5 tracker \u5e76\u544a\u8bc9\u4ed6\uff1a\u6211\u7684 ip \u662f xx \u6211\u6709\u8fd9\u4e9b\u7ad9\u70b9 : ... \u3002\u6240\u4ee5\u5462\uff0c\u7b2c\u4e00\u53f0\u7535\u8111\u544a\u8bc9\u8ddf\u8e2a\u5668\u6211\u6709\u7ad9\u70b9 a\uff0c\u7136\u540e\u7b2c\u4e8c\u5929\u7535\u8111\u95ee\u8ddf\u8e2a\u5668\u6709\u6ca1\u6709\u7ad9\u70b9 a\u3002\u5c31\u8fd9\u4e48\u7b80\u5355\u3002 \u518d\u8bf4\u70b9\u5173\u4e8e\u8ddf\u8e2a\u5668\u7684\uff0c\u82e5\u662f\u8282\u70b9\u4e0d\u63a5\u6536\u4f60\u7684\u66f4\u65b0\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u6ca1\u6709\u8fd9\u4e2a\u7ad9\u70b9\uff09\uff0c\u4f60\u53ef\u80fd\u8981\u4e00\u4e2a\u56fa\u5b9a IP \u6216\u662f Tor\u3002 \u4ee3\u7406 \u53ea\u8981\u6709\u4e00\u4e2a\u7535\u8111\u5f00\u7740\uff08\u6709\u4f60\u7684\u7f51\u7ad9\u7684\uff09\uff0c\u7f51\u7ad9\u5c31\u662f\u4e0a\u7ebf\u7684\u3002\u800c\u4f60\u53ef\u80fd\u60f3\u5728\u665a\u4e0a\u5173\u7535\u8111\uff0c\u6240\u4ee5\u6709\u5fc5\u8981\u67b6\u8bbe\u4e00\u4e2a\u4e00\u76f4\u5f00\u673a\u7684\u7535\u8111\u3002 \u597d\u5728\u96f6\u7f51\u6709\u8fd9\u4e9b\u7535\u8111 ZeroNet proxies \uff08 \u96f6\u7f51\u4ee3\u7406/\u7f51\u95e8 \uff09. 0net.io \u662f\u5176\u4e2d\u4e4b\u4e00\uff0c\u7528\u6cd5\u548c\u5ba2\u6237\u7aef\u4e00\u6837\u3002\u90a3\u4e2a\u4ee3\u7406\u4e0a\u7684 ZeroTalk \u5730\u5740\u4e3a https://0net.io/1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u505a\u597d\u535a\u5ba2\u4e4b\u540e\uff0c\u8bbf\u95ee https://0net.io/{\u7ad9\u70b9\u516c\u94a5\uff08\u5730\u5740\uff09}/ \uff0c \u5730\u5740\u7c7b\u4f3c\u4e8e\u672c\u5730\u5ba2\u6237\u7aef\u7684 http://127.0.0.1:43110/{\u7ad9\u70b9\u516c\u94a5\uff08\u5730\u5740\uff09}/ . \u53ef\u7528\u4ee3\u7406\uff1a 0net.io , @amorgan's proxy \u4ee5\u53ca ZeroGate . .bit \u5730\u5740 \u7ad9\u70b9\u53ef\u4ee5\u901a\u8fc7\u516c\u94a5\u8bbf\u95ee (\u4f8b\u5982 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u662f ZeroTalk )\u3002\u90e8\u7f72\u8fd9\u79cd\u7f51\u7ad9\u4e0d\u82b1\u94b1\uff0c\u4f46\u4f60\u53ef\u80fd\u5e76\u4e0d\u89c9\u5f97 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u8fd9\u540d\u5b57\u591a\u597d\uff0c\u82e5\u662f zerotalk.com \u5c82\u4e0d\u66f4\u597d? \u5b9e\u9645\u4e0a\uff0c\u80fd\u901a\u8fc7 Namecoin \u5b9e\u73b0\u3002 Namecoin \u57fa\u4e8e\u533a\u5757\u94fe\u3002\u82e5\u60f3\u6ce8\u518c .bit \u5730\u5740 (\u9700\u8981\u94b1)\uff0c\u5e94\u4e0b\u8f7d Namecoin \u5ba2\u6237\u7aef\uff0c\u5e76\u8f93\u5165 .bit \u5730\u5740 (\u53ea\u652f\u6301 .bit \u540e\u7f00). \u82e5\u662f\u4e0d\u60f3\u4e0b\u8f7d Namecoin \u5ba2\u6237\u7aef\u548c\u6574\u4e2a\u533a\u5757\u94fe\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5728\u7ebf\u670d\u52a1, \u4f8b\u5982 Dotbit.me \u548c Peername. \u5927\u591a\u6570\u7248\u672c\u7684\u96f6\u7f51\u5ba2\u6237\u7aef\u90fd\u6709 Namecoin \u63d2\u4ef6\uff0c\u6240\u4ee5\u5c31\u80fd\u8bbf\u95ee ZeroTalk \u7528.bit \u5730\u5740 http://127.0.0.1:43110/Talk.ZeroNetwork.bit/ \u4e86\u3002 \u53ef\u4ee5\u5728 ZeroName \u67e5\u770b\u4f60\u6ce8\u518c\u7684\u57df\u540d .bit \u7ec3\u4e60 \u5c1d\u8bd5\u514b\u9686 ZeroTalk \u5e76\u5f00\u53d1\u4e00\u4e2a\u81ea\u5df1\u7684\u7ad9\u70b9\u3002","title":"\u7ad9\u70b9\u514b\u9686"},{"location":"cloning-zites/#_1","text":"","title":"\u521b\u5efa\u7ad9\u70b9"},{"location":"cloning-zites/#_2","text":"\u54b1\u5efa\u4e2a\u81ea\u5df1\u7684\u535a\u5ba2\u5427\u8bbf\u95ee ZeroHello \uff0c\u5e76\u4e0b\u8f7d ZeroBlog \uff0c\u70b9\u51fb\u4e09\u4e2a\u70b9\u7684\u90a3\u4e2a\u6309\u94ae\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u83dc\u5355\uff1a \u6536\u85cf \u66f4\u65b0 \u68c0\u67e5\u6587\u4ef6 \u6682\u505c \u514b\u9686 Save as .zip \u5220\u9664 \u70b9\u51fb \u514b\u9686 \uff0c\u7136\u540e\u535a\u5ba2\u5c31\u6709\u4e86\uff0c\u514b\u9686\u5c31\u8fd9\u4e9b\u3002","title":"\u514b\u9686\u7ad9\u70b9"},{"location":"cloning-zites/#zeroblog","text":"\u9f20\u6807\u60ac\u6d6e\u5728\u535a\u5ba2\u6807\u9898\u3001\u7b80\u4ecb\u2026\u2026\u4e0a\uff0c\u518d\u70b9\u51fb \ud83d\udd8a\uff0c\u5c31\u53ef\u4ee5\u7f16\u8f91\u4e86\u3002 \u90a3\u4e48\u5c31\u53d1\u7535\u5565\u5427\uff0c\u70b9\u51fb \u6dfb\u52a0\u65b0\u6587\u7ae0 \u3002\u7f16\u8f91\u6807\u9898\u3001\u5185\u5bb9\uff0c\u518d\u70b9\u5e95\u90e8\u7684 Sign & Publish new content \u3002\u5bf9\u6570\u636e\u7b7e\u540d\u540e\uff0c content.json \u7684\u5185\u5bb9\u4f1a\u6539\u53d8\u3002\u53d1\u5e03\u5185\u5bb9\u65f6\uff0c\u96f6\u7f51\u5ba2\u6237\u7aef\u4f1a\u5c06\u7ad9\u70b9\u53d1\u5e03\u5230\u5176\u4ed6\u8282\u70b9\uff0c\u7136\u540e\u4ed6\u4eec\u5c31\u518d\u5206\u53d1\u8fd9\u4e9b\u5185\u5bb9\u3002 \u8981\u662f\u53ea\u6709\u4f60\u6709\u8fd9\u4e2a\u7ad9\u70b9\uff0c\u5c31\u4f1a\u5f88\u96be\u53d1\u5e03\u3002","title":"\u66f4\u6539 ZeroBlog"},{"location":"cloning-zites/#_3","text":"\u4e0b\u8f7d\u7f51\u7ad9\u65f6\uff0c\u96f6\u7f51\u4f1a\u5728\u8282\u70b9\u5217\u8868\u91cc\u627e\u6709\u8fd9\u4e2a\u7f51\u7ad9\u7684\u8282\u70b9\u3002\u53ef\u4ee5\u662f\u4f60\u7684\u7b2c\u4e8c\u53f0\u7535\u8111\uff0c\u4e0d\u77e5\u9053\u4f60\u7b2c\u4e00\u53f0\u7535\u8111\u7684\u5b58\u5728\uff0c\u82e5\u662f\u5b83\u60f3\u4e0b\u8f7d\u8fd9\u4e2a\u7ad9\u70b9\uff0c\u600e\u4e48\u529e\u5462\uff1f \u7b54\u6848\u662f... \u7528 tracker \uff08 \u8ddf\u8e2a\u5668 \uff09\u6240\u6709\u7684\u8282\u70b9\u90fd\u4f1a\u9891\u7e41\u8fde\u63a5 tracker \u5e76\u544a\u8bc9\u4ed6\uff1a\u6211\u7684 ip \u662f xx \u6211\u6709\u8fd9\u4e9b\u7ad9\u70b9 : ... \u3002\u6240\u4ee5\u5462\uff0c\u7b2c\u4e00\u53f0\u7535\u8111\u544a\u8bc9\u8ddf\u8e2a\u5668\u6211\u6709\u7ad9\u70b9 a\uff0c\u7136\u540e\u7b2c\u4e8c\u5929\u7535\u8111\u95ee\u8ddf\u8e2a\u5668\u6709\u6ca1\u6709\u7ad9\u70b9 a\u3002\u5c31\u8fd9\u4e48\u7b80\u5355\u3002 \u518d\u8bf4\u70b9\u5173\u4e8e\u8ddf\u8e2a\u5668\u7684\uff0c\u82e5\u662f\u8282\u70b9\u4e0d\u63a5\u6536\u4f60\u7684\u66f4\u65b0\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u6ca1\u6709\u8fd9\u4e2a\u7ad9\u70b9\uff09\uff0c\u4f60\u53ef\u80fd\u8981\u4e00\u4e2a\u56fa\u5b9a IP \u6216\u662f Tor\u3002","title":"\u4e0b\u8f7d\u5e76\u66f4\u65b0\u7ad9\u70b9"},{"location":"cloning-zites/#_4","text":"\u53ea\u8981\u6709\u4e00\u4e2a\u7535\u8111\u5f00\u7740\uff08\u6709\u4f60\u7684\u7f51\u7ad9\u7684\uff09\uff0c\u7f51\u7ad9\u5c31\u662f\u4e0a\u7ebf\u7684\u3002\u800c\u4f60\u53ef\u80fd\u60f3\u5728\u665a\u4e0a\u5173\u7535\u8111\uff0c\u6240\u4ee5\u6709\u5fc5\u8981\u67b6\u8bbe\u4e00\u4e2a\u4e00\u76f4\u5f00\u673a\u7684\u7535\u8111\u3002 \u597d\u5728\u96f6\u7f51\u6709\u8fd9\u4e9b\u7535\u8111 ZeroNet proxies \uff08 \u96f6\u7f51\u4ee3\u7406/\u7f51\u95e8 \uff09. 0net.io \u662f\u5176\u4e2d\u4e4b\u4e00\uff0c\u7528\u6cd5\u548c\u5ba2\u6237\u7aef\u4e00\u6837\u3002\u90a3\u4e2a\u4ee3\u7406\u4e0a\u7684 ZeroTalk \u5730\u5740\u4e3a https://0net.io/1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u505a\u597d\u535a\u5ba2\u4e4b\u540e\uff0c\u8bbf\u95ee https://0net.io/{\u7ad9\u70b9\u516c\u94a5\uff08\u5730\u5740\uff09}/ \uff0c \u5730\u5740\u7c7b\u4f3c\u4e8e\u672c\u5730\u5ba2\u6237\u7aef\u7684 http://127.0.0.1:43110/{\u7ad9\u70b9\u516c\u94a5\uff08\u5730\u5740\uff09}/ . \u53ef\u7528\u4ee3\u7406\uff1a 0net.io , @amorgan's proxy \u4ee5\u53ca ZeroGate .","title":"\u4ee3\u7406"},{"location":"cloning-zites/#bit","text":"\u7ad9\u70b9\u53ef\u4ee5\u901a\u8fc7\u516c\u94a5\u8bbf\u95ee (\u4f8b\u5982 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u662f ZeroTalk )\u3002\u90e8\u7f72\u8fd9\u79cd\u7f51\u7ad9\u4e0d\u82b1\u94b1\uff0c\u4f46\u4f60\u53ef\u80fd\u5e76\u4e0d\u89c9\u5f97 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u8fd9\u540d\u5b57\u591a\u597d\uff0c\u82e5\u662f zerotalk.com \u5c82\u4e0d\u66f4\u597d? \u5b9e\u9645\u4e0a\uff0c\u80fd\u901a\u8fc7 Namecoin \u5b9e\u73b0\u3002 Namecoin \u57fa\u4e8e\u533a\u5757\u94fe\u3002\u82e5\u60f3\u6ce8\u518c .bit \u5730\u5740 (\u9700\u8981\u94b1)\uff0c\u5e94\u4e0b\u8f7d Namecoin \u5ba2\u6237\u7aef\uff0c\u5e76\u8f93\u5165 .bit \u5730\u5740 (\u53ea\u652f\u6301 .bit \u540e\u7f00). \u82e5\u662f\u4e0d\u60f3\u4e0b\u8f7d Namecoin \u5ba2\u6237\u7aef\u548c\u6574\u4e2a\u533a\u5757\u94fe\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5728\u7ebf\u670d\u52a1, \u4f8b\u5982 Dotbit.me \u548c Peername. \u5927\u591a\u6570\u7248\u672c\u7684\u96f6\u7f51\u5ba2\u6237\u7aef\u90fd\u6709 Namecoin \u63d2\u4ef6\uff0c\u6240\u4ee5\u5c31\u80fd\u8bbf\u95ee ZeroTalk \u7528.bit \u5730\u5740 http://127.0.0.1:43110/Talk.ZeroNetwork.bit/ \u4e86\u3002 \u53ef\u4ee5\u5728 ZeroName \u67e5\u770b\u4f60\u6ce8\u518c\u7684\u57df\u540d .bit","title":".bit \u5730\u5740"},{"location":"cloning-zites/#_5","text":"\u5c1d\u8bd5\u514b\u9686 ZeroTalk \u5e76\u5f00\u53d1\u4e00\u4e2a\u81ea\u5df1\u7684\u7ad9\u70b9\u3002","title":"\u7ec3\u4e60"},{"location":"creating-static-zite/","text":"\u521b\u5efa\u9759\u6001\u7ad9\u70b9 \u672c\u7ae0\u8bb2\u8ff0\u4e86\u5982\u4f55\u521b\u5efa\u7ad9\u70b9\u2014\u2014\u201c\u5173\u4e8e\u6211\u201d\u3002 \u521b\u5efa\u7a7a\u7ad9\u70b9 \u521b\u5efa\u5b8c\u540e\u5f39\u51fa\u65b0\u7ad9\u70b9\u3002 Page address \u5373 \u7ad9\u70b9\u7684\u516c\u94a5 Peers \u5c31\u662f\u96f6\u7f51\u5ba2\u6237\u7aef\u5df2\u627e\u5230\u7684\u4e14\u62e5\u6709\u4f60\u7684\u7ad9\u70b9\u7684\u8282\u70b9. Peers \u5e76\u4e0d\u4ee3\u8868\u591a\u5c11\u4eba\u8bbf\u95ee\u8fc7\u4f60\u7684\u7ad9\u70b9\u3002 Size \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684 \u7ad9\u70b9\u5927\u5c0f\u3002 index.html \u91cc\u6709\u5565 \u6253\u5f00\u7ad9\u70b9\u4e2d\u7684 index.html \u3002\u5148\u6253\u5f00\u96f6\u7f51\u6839\u76ee\u5f55: \u5bf9\u4e8e macOS\uff0c\u96f6\u7f51\u4f4d\u4e8e ~/Application Support/ZeroNet/ \u6216\u8005 ZeroNet.app \u7684\u4f4d\u7f6e\u3002 \u5bf9\u4e8e Windows\uff0c\u5728\u96f6\u7f51\u5b89\u88c5\u76ee\u5f55 (\u5982 C:\\Program Files\\ZeroNet\\ ). \u5982\u679c\u4f60\u7528 Git \u5b89\u88c5\u96f6\u7f51\uff0c\u6839\u76ee\u5f55\u5c31\u662f repo \u7684\u76ee\u5f55\u3002 \u6253\u5f00 data \u76ee\u5f55\uff0c\u518d\u6253\u5f00\u4ee5\u7ad9\u70b9\u516c\u94a5\u4e3a\u6587\u4ef6\u5939\u540d\u7684\u76ee\u5f55 (\u5f39\u51fa\u7684\u9875\u9762\u7684\u7f51\u5740\uff0c\u7c7b\u4f3c\u4e8e 1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm )\u3002\u5176\u4ed6\u76ee\u5f55\u5c31\u662f\u96f6\u7f51\u7f51\u7ad9\u7684\u672c\u5730\u526f\u672c\u3002 \u6253\u5f00 index.html : <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body > < div id = \"out\" ></ div > < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > < script > class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ); out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + new Date ( site_info . content . modified * 1000 ); } onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ); }); } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ); else this . log ( \"Unknown incoming message:\" , cmd ); } } page = new Page (); </ script > </ body > </ html > \u8fd9\u4e1c\u897f\u4e0d\u592a\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u5148\u522b\u6025\uff0c\u54b1\u5148\u5220\u70b9\u4e1c\u897f\u3002 <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body ></ body > </ html > \u8fd9\u6837\u597d\u70b9\u4e86\uff0c\u79fb\u9664\u4e86\u4e00\u4e9b\u5bf9\u54b1\u6765\u8bf4\u6ca1\u5565\u7528\u7684\u811a\u672c\u3002\u518d\u91cd\u65b0\u7f29\u8fdb\u4e00\u4e0b\u3002 <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body ></ body > </ html > \u9664\u4e86 <base> \u548c\u8fb9\u4e0a\u7684 <script> \uff0c\u5176\u4ed6\u7684\u90fd\u53ef\u4ee5\u5220\u6539\u3002 \u6bcf\u4e2a\u96f6\u7f51\u7ad9\u70b9\u90fd\u8fd0\u884c\u5728\u6c99\u76d2 <iframe> \u91cc\uff0c\u4e00\u4e9b\u5982 localStorage \u5c31\u4e0d\u80fd\u7528\u4e86\u3002 \u4e0d\u8981\u5220\u9664 js/ZeroFrame.js \u6587\u4ef6\uff0c\u4f60\u7684\u7ad9\u70b9\u53ef\u80fd\u7528\u4e0d\u5230\uff0c\u4f46\u51e0\u4e4e\u6240\u6709\u7684\u96f6\u7f51\u7f51\u7ad9\u7684\u9700\u8981\u8fd9\u4e2a\u6587\u4ef6\u3002 \u5c0f\u6280\u5de7 \u7981\u7528\u7f13\u5b58 \u7f16\u8f91\u6587\u4ef6\u540e\uff0c\u6d4f\u89c8\u5668\u4e2d\u7684\u7f51\u9875\u5e76\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\uff0c\u8fd9\u662f\u56e0\u4e3a\u6709\u7f13\u5b58\u3002\u6253\u5f00 \u5f00\u53d1\u8005\u5de5\u5177 \uff0c\u91cc\u9762\u5e94\u8be5\u6709\u9009\u9879\u7981\u7528\u7f13\u5b58\u3002 \u5bf9\u4e8e Firefox\uff0c\u6309 F12 \u6253\u5f00 \u5f00\u53d1\u8005\u5de5\u5177 \uff0c\u70b9\u51fb \u53f3\u4e0a\u89d2\u7684 Settings \u56fe\u6807 \uff0c\u5e76\u9009\u62e9 Disable HTTP cache \u5bf9\u4e8e Chrome, \u6309 F12 \u6253\u5f00 \u5f00\u53d1\u8005\u5de5\u5177 \uff0c\u518d\u6309 F1, \u70b9\u51fb\u5de6\u5bfc\u822a\u680f\u7684 Preferences \uff0c\u5e76\u9009\u62e9 Network \u83dc\u5355\u4e2d\u7684 Disable cache \u65e0\u6cd5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84 \u5148\u521b\u5efa\u4e00\u4e9b <div> \u5e76\u5f15\u5165 css\u3002 \u6dfb\u52a0 <div>1</div> \u5230 index.html \uff0c 1 \u5c31\u6709\u4e86\u3002 \u518d\u521b\u5efa\u6587\u4ef6 css/index.css \uff0c\u5305\u542b\u4e0b\u5217\u5185\u5bb9\uff1a div { color : red ; } ...\u5e76\u5f15\u5165\u5230 index.html \u4e2d\uff1a < link rel = \"stylesheet\" href = \"/css/index.css\" type = \"text/css\" /> \u6ca1\u5565\u53d8\u5316\uff0c\u4e3a\u5565\u5462\uff1f\u770b\u5730\u5740: http://127.0.0.1:43110/1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm/ \u3002 /css/index.css \u8ba1\u7b97\u540e\u6210\u4e86 http://127.0.0.1:43110/css/index.css . \u6240\u4ee5\u5728\u96f6\u7f51\u4e2d\u7edd\u5bf9\u8def\u5f84\u4e0d\u53ef\u7528\uff0c\u90a3\u4e48\u5c31\u628a <link> \u6539\u6210\uff1a < link rel = \"stylesheet\" href = \"css/index.css\" type = \"text/css\" /> <iframe> \u5143\u7d20\u6ca1\u6cd5\u7528 \u6bcf\u4e2a\u96f6\u7f51\u7f51\u9875\u90fd\u5305\u542b\u4e0b\u5217\u4ee3\u7801\uff1a &lt;script&gt; // If we are inside iframe escape from it if (window.self !== window.top) window.open(window.location.toString(), \"_top\"); if (window.self !== window.top) window.stop(); if (window.self !== window.top &amp;&amp; document.execCommand) document.execCommand(\"Stop\", false) &lt;/script&gt; \u6240\u4ee5\u4e0d\u80fd\u628a\u5176\u4ed6\u96f6\u7f51\u7684\u7f51\u9875\u653e\u5728 <iframe> \u91cc\uff0c\u8fde\u81ea\u5df1\u7684\u7ad9\u70b9\u7684\u7f51\u9875\u90fd\u4e0d\u80fd\u653e\u3002 \u8bbe\u8ba1 \u8fd9\u4e2a\u4f60\u81ea\u5df1\u8bbe\u8ba1\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u770b\u770b\u6211\u7684 downloads . \u7ad9\u70b9\u8bbe\u7f6e \u5728\u4fa7\u8fb9\u680f\u91cc\u8bbe\u7f6e\u7ad9\u70b9\u63cf\u8ff0\u548c\u6807\u9898\uff0c\u770b\u5230\u53f3\u4e0a\u89d2\u7684 0 \u6309\u94ae\u4e86\u5417\uff1f\u70b9\u51fb\u6309\u94ae\u5c31\u4f1a\u8fd4\u56de\u5230 ZeroHello \uff0c\u5f80\u5de6\u62fd\u8bd5\u8bd5: _____ _____ / \\ / \\ | 0 | <------- | 0 | \\_____/ \\_____/ \u4fa7\u8fb9\u680f\u5c31\u4f1a\u5f39\u51fa\uff0c\u663e\u793a\u4e86\u5df2\u8fde\u63a5\u7684\u8282\u70b9\u6570\u3001\u6587\u4ef6\u3001\u6570\u636e\u5e93\u4fe1\u606f\uff0c\u8fd8\u6709\u4f60\u7684 ID \u7684\u5730\u5740 (\u767b\u9646 ZeroID \u3001 KaffieID \u3001 CryptoID \u540e\u5c31\u4f1a\u53d8). \u7ad9\u957f\u4e5f\u53ef\u4ee5\u6539\u53d8\u7ad9\u70b9\u4fe1\u606f\u3002 \u6eda\u52a8\u5230\u5e95\u90e8\u7f16\u8f91 \u7ad9\u70b9\u6807\u9898 \u548c \u7ad9\u70b9\u63cf\u8ff0 \u53c2\u6570\uff0c\u7f16\u8f91\u5b8c\u540e\u8981\u70b9 \u4fdd\u5b58\u7ad9\u70b9\u8bbe\u7f6e ,\u8bbe\u7f6e\u5c31\u4fdd\u5b58\u5728 content.json \u91cc\u4e86\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a\u6587\u4ef6\u4e86\u5417? \u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4f60\u7684\u7ad9\u70b9\u4fe1\u606f\u3001\u8bbe\u7f6e\u7b49\u3002 \u70b9\u51fb\u4fa7\u8fb9\u680f\u6700\u5e95\u4e0b\u7684 \u7b7e\u540d\u5e76\u53d1\u5e03 \uff0c \u7136\u540e\u5c31\u4f1a\u5f39\u51fa \u5185\u5bb9\u53d1\u5e03\u5931\u8d25\u3002 \uff0c \u8fd9\u5f88\u6b63\u5e38\uff0c\u73b0\u5728\u53ea\u6709\u4f60\u6709\u8fd9\u4e2a\u7ad9\u70b9\u3002 \u7b49\u522b\u4eba\u6765\u4e0b\u8f7d\u4f60\u7684\u7ad9\u70b9\u5c31\u884c\u3002 \u5982\u679c\u4f60\u6709\u56fa\u5b9a IP \u6216\u8005\u6253\u5f00\u4e86 tor\uff0c\u522b\u4eba\u5c31\u53ef\u4ee5\u4e0b\u8f7d\u4f60\u7684\u7ad9\u70b9\uff0c\u82e5\u662f\u4f60\u60f3\u5173\u7535\u8111\uff0c\u5c31\u8bbf\u95ee 0net.io : https://0net.io/{\u7ad9\u70b9\u516c\u94a5}/ (\u4fa7\u8fb9\u680f\u4e2d\u7684\u7ad9\u70b9\u5730\u5740)\u540e\u518d\u5173\u3002 \u53ef\u7528\u4ee3\u7406: 0net.io , @amorgan's proxy \u4ee5\u53ca ZeroGate . .bit \u5730\u5740 \u5982\u679c\u4f60\u60f3\u8981\u4e2a\u57df\u540d\u50cf ivanq.bit , \u7528 Namecoin \uff0c\u8fd9\u4e2a\u4e0d\u8bb2\uff0c\u6559\u7a0b\u81ea\u5df1\u627e\u3002","title":"\u9759\u6001\u7ad9\u70b9"},{"location":"creating-static-zite/#_1","text":"\u672c\u7ae0\u8bb2\u8ff0\u4e86\u5982\u4f55\u521b\u5efa\u7ad9\u70b9\u2014\u2014\u201c\u5173\u4e8e\u6211\u201d\u3002","title":"\u521b\u5efa\u9759\u6001\u7ad9\u70b9"},{"location":"creating-static-zite/#_2","text":"\u521b\u5efa\u5b8c\u540e\u5f39\u51fa\u65b0\u7ad9\u70b9\u3002 Page address \u5373 \u7ad9\u70b9\u7684\u516c\u94a5 Peers \u5c31\u662f\u96f6\u7f51\u5ba2\u6237\u7aef\u5df2\u627e\u5230\u7684\u4e14\u62e5\u6709\u4f60\u7684\u7ad9\u70b9\u7684\u8282\u70b9. Peers \u5e76\u4e0d\u4ee3\u8868\u591a\u5c11\u4eba\u8bbf\u95ee\u8fc7\u4f60\u7684\u7ad9\u70b9\u3002 Size \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684 \u7ad9\u70b9\u5927\u5c0f\u3002","title":"\u521b\u5efa\u7a7a\u7ad9\u70b9"},{"location":"creating-static-zite/#indexhtml","text":"\u6253\u5f00\u7ad9\u70b9\u4e2d\u7684 index.html \u3002\u5148\u6253\u5f00\u96f6\u7f51\u6839\u76ee\u5f55: \u5bf9\u4e8e macOS\uff0c\u96f6\u7f51\u4f4d\u4e8e ~/Application Support/ZeroNet/ \u6216\u8005 ZeroNet.app \u7684\u4f4d\u7f6e\u3002 \u5bf9\u4e8e Windows\uff0c\u5728\u96f6\u7f51\u5b89\u88c5\u76ee\u5f55 (\u5982 C:\\Program Files\\ZeroNet\\ ). \u5982\u679c\u4f60\u7528 Git \u5b89\u88c5\u96f6\u7f51\uff0c\u6839\u76ee\u5f55\u5c31\u662f repo \u7684\u76ee\u5f55\u3002 \u6253\u5f00 data \u76ee\u5f55\uff0c\u518d\u6253\u5f00\u4ee5\u7ad9\u70b9\u516c\u94a5\u4e3a\u6587\u4ef6\u5939\u540d\u7684\u76ee\u5f55 (\u5f39\u51fa\u7684\u9875\u9762\u7684\u7f51\u5740\uff0c\u7c7b\u4f3c\u4e8e 1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm )\u3002\u5176\u4ed6\u76ee\u5f55\u5c31\u662f\u96f6\u7f51\u7f51\u7ad9\u7684\u672c\u5730\u526f\u672c\u3002 \u6253\u5f00 index.html : <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body > < div id = \"out\" ></ div > < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > < script > class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ); out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + new Date ( site_info . content . modified * 1000 ); } onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ); }); } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ); else this . log ( \"Unknown incoming message:\" , cmd ); } } page = new Page (); </ script > </ body > </ html > \u8fd9\u4e1c\u897f\u4e0d\u592a\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u5148\u522b\u6025\uff0c\u54b1\u5148\u5220\u70b9\u4e1c\u897f\u3002 <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body ></ body > </ html > \u8fd9\u6837\u597d\u70b9\u4e86\uff0c\u79fb\u9664\u4e86\u4e00\u4e9b\u5bf9\u54b1\u6765\u8bf4\u6ca1\u5565\u7528\u7684\u811a\u672c\u3002\u518d\u91cd\u65b0\u7f29\u8fdb\u4e00\u4e0b\u3002 <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body ></ body > </ html > \u9664\u4e86 <base> \u548c\u8fb9\u4e0a\u7684 <script> \uff0c\u5176\u4ed6\u7684\u90fd\u53ef\u4ee5\u5220\u6539\u3002 \u6bcf\u4e2a\u96f6\u7f51\u7ad9\u70b9\u90fd\u8fd0\u884c\u5728\u6c99\u76d2 <iframe> \u91cc\uff0c\u4e00\u4e9b\u5982 localStorage \u5c31\u4e0d\u80fd\u7528\u4e86\u3002 \u4e0d\u8981\u5220\u9664 js/ZeroFrame.js \u6587\u4ef6\uff0c\u4f60\u7684\u7ad9\u70b9\u53ef\u80fd\u7528\u4e0d\u5230\uff0c\u4f46\u51e0\u4e4e\u6240\u6709\u7684\u96f6\u7f51\u7f51\u7ad9\u7684\u9700\u8981\u8fd9\u4e2a\u6587\u4ef6\u3002","title":"index.html\u91cc\u6709\u5565"},{"location":"creating-static-zite/#_3","text":"","title":"\u5c0f\u6280\u5de7"},{"location":"creating-static-zite/#_4","text":"\u7f16\u8f91\u6587\u4ef6\u540e\uff0c\u6d4f\u89c8\u5668\u4e2d\u7684\u7f51\u9875\u5e76\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\uff0c\u8fd9\u662f\u56e0\u4e3a\u6709\u7f13\u5b58\u3002\u6253\u5f00 \u5f00\u53d1\u8005\u5de5\u5177 \uff0c\u91cc\u9762\u5e94\u8be5\u6709\u9009\u9879\u7981\u7528\u7f13\u5b58\u3002 \u5bf9\u4e8e Firefox\uff0c\u6309 F12 \u6253\u5f00 \u5f00\u53d1\u8005\u5de5\u5177 \uff0c\u70b9\u51fb \u53f3\u4e0a\u89d2\u7684 Settings \u56fe\u6807 \uff0c\u5e76\u9009\u62e9 Disable HTTP cache \u5bf9\u4e8e Chrome, \u6309 F12 \u6253\u5f00 \u5f00\u53d1\u8005\u5de5\u5177 \uff0c\u518d\u6309 F1, \u70b9\u51fb\u5de6\u5bfc\u822a\u680f\u7684 Preferences \uff0c\u5e76\u9009\u62e9 Network \u83dc\u5355\u4e2d\u7684 Disable cache","title":"\u7981\u7528\u7f13\u5b58"},{"location":"creating-static-zite/#_5","text":"\u5148\u521b\u5efa\u4e00\u4e9b <div> \u5e76\u5f15\u5165 css\u3002 \u6dfb\u52a0 <div>1</div> \u5230 index.html \uff0c 1 \u5c31\u6709\u4e86\u3002 \u518d\u521b\u5efa\u6587\u4ef6 css/index.css \uff0c\u5305\u542b\u4e0b\u5217\u5185\u5bb9\uff1a div { color : red ; } ...\u5e76\u5f15\u5165\u5230 index.html \u4e2d\uff1a < link rel = \"stylesheet\" href = \"/css/index.css\" type = \"text/css\" /> \u6ca1\u5565\u53d8\u5316\uff0c\u4e3a\u5565\u5462\uff1f\u770b\u5730\u5740: http://127.0.0.1:43110/1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm/ \u3002 /css/index.css \u8ba1\u7b97\u540e\u6210\u4e86 http://127.0.0.1:43110/css/index.css . \u6240\u4ee5\u5728\u96f6\u7f51\u4e2d\u7edd\u5bf9\u8def\u5f84\u4e0d\u53ef\u7528\uff0c\u90a3\u4e48\u5c31\u628a <link> \u6539\u6210\uff1a < link rel = \"stylesheet\" href = \"css/index.css\" type = \"text/css\" />","title":"\u65e0\u6cd5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84"},{"location":"creating-static-zite/#ltiframegt","text":"\u6bcf\u4e2a\u96f6\u7f51\u7f51\u9875\u90fd\u5305\u542b\u4e0b\u5217\u4ee3\u7801\uff1a &lt;script&gt; // If we are inside iframe escape from it if (window.self !== window.top) window.open(window.location.toString(), \"_top\"); if (window.self !== window.top) window.stop(); if (window.self !== window.top &amp;&amp; document.execCommand) document.execCommand(\"Stop\", false) &lt;/script&gt; \u6240\u4ee5\u4e0d\u80fd\u628a\u5176\u4ed6\u96f6\u7f51\u7684\u7f51\u9875\u653e\u5728 <iframe> \u91cc\uff0c\u8fde\u81ea\u5df1\u7684\u7ad9\u70b9\u7684\u7f51\u9875\u90fd\u4e0d\u80fd\u653e\u3002","title":"&lt;iframe&gt;\u5143\u7d20\u6ca1\u6cd5\u7528"},{"location":"creating-static-zite/#_6","text":"\u8fd9\u4e2a\u4f60\u81ea\u5df1\u8bbe\u8ba1\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u770b\u770b\u6211\u7684 downloads .","title":"\u8bbe\u8ba1"},{"location":"creating-static-zite/#_7","text":"\u5728\u4fa7\u8fb9\u680f\u91cc\u8bbe\u7f6e\u7ad9\u70b9\u63cf\u8ff0\u548c\u6807\u9898\uff0c\u770b\u5230\u53f3\u4e0a\u89d2\u7684 0 \u6309\u94ae\u4e86\u5417\uff1f\u70b9\u51fb\u6309\u94ae\u5c31\u4f1a\u8fd4\u56de\u5230 ZeroHello \uff0c\u5f80\u5de6\u62fd\u8bd5\u8bd5: _____ _____ / \\ / \\ | 0 | <------- | 0 | \\_____/ \\_____/ \u4fa7\u8fb9\u680f\u5c31\u4f1a\u5f39\u51fa\uff0c\u663e\u793a\u4e86\u5df2\u8fde\u63a5\u7684\u8282\u70b9\u6570\u3001\u6587\u4ef6\u3001\u6570\u636e\u5e93\u4fe1\u606f\uff0c\u8fd8\u6709\u4f60\u7684 ID \u7684\u5730\u5740 (\u767b\u9646 ZeroID \u3001 KaffieID \u3001 CryptoID \u540e\u5c31\u4f1a\u53d8). \u7ad9\u957f\u4e5f\u53ef\u4ee5\u6539\u53d8\u7ad9\u70b9\u4fe1\u606f\u3002 \u6eda\u52a8\u5230\u5e95\u90e8\u7f16\u8f91 \u7ad9\u70b9\u6807\u9898 \u548c \u7ad9\u70b9\u63cf\u8ff0 \u53c2\u6570\uff0c\u7f16\u8f91\u5b8c\u540e\u8981\u70b9 \u4fdd\u5b58\u7ad9\u70b9\u8bbe\u7f6e ,\u8bbe\u7f6e\u5c31\u4fdd\u5b58\u5728 content.json \u91cc\u4e86\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a\u6587\u4ef6\u4e86\u5417? \u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4f60\u7684\u7ad9\u70b9\u4fe1\u606f\u3001\u8bbe\u7f6e\u7b49\u3002 \u70b9\u51fb\u4fa7\u8fb9\u680f\u6700\u5e95\u4e0b\u7684 \u7b7e\u540d\u5e76\u53d1\u5e03 \uff0c \u7136\u540e\u5c31\u4f1a\u5f39\u51fa \u5185\u5bb9\u53d1\u5e03\u5931\u8d25\u3002 \uff0c \u8fd9\u5f88\u6b63\u5e38\uff0c\u73b0\u5728\u53ea\u6709\u4f60\u6709\u8fd9\u4e2a\u7ad9\u70b9\u3002 \u7b49\u522b\u4eba\u6765\u4e0b\u8f7d\u4f60\u7684\u7ad9\u70b9\u5c31\u884c\u3002 \u5982\u679c\u4f60\u6709\u56fa\u5b9a IP \u6216\u8005\u6253\u5f00\u4e86 tor\uff0c\u522b\u4eba\u5c31\u53ef\u4ee5\u4e0b\u8f7d\u4f60\u7684\u7ad9\u70b9\uff0c\u82e5\u662f\u4f60\u60f3\u5173\u7535\u8111\uff0c\u5c31\u8bbf\u95ee 0net.io : https://0net.io/{\u7ad9\u70b9\u516c\u94a5}/ (\u4fa7\u8fb9\u680f\u4e2d\u7684\u7ad9\u70b9\u5730\u5740)\u540e\u518d\u5173\u3002 \u53ef\u7528\u4ee3\u7406: 0net.io , @amorgan's proxy \u4ee5\u53ca ZeroGate .","title":"\u7ad9\u70b9\u8bbe\u7f6e"},{"location":"creating-static-zite/#bit","text":"\u5982\u679c\u4f60\u60f3\u8981\u4e2a\u57df\u540d\u50cf ivanq.bit , \u7528 Namecoin \uff0c\u8fd9\u4e2a\u4e0d\u8bb2\uff0c\u6559\u7a0b\u81ea\u5df1\u627e\u3002","title":".bit \u5730\u5740"},{"location":"databases/","text":"\u521b\u5efa\u6570\u636e\u5e93 \u4eca\u5929\u54b1\u5efa\u4e2a\u535a\u5ba2\u7ad9\u3002 \u521b\u5efa\u7ad9\u70b9 \u6211\u63a8\u8350\u76f4\u63a5\u521b\u5efa\u65b0\u7ad9\u70b9\uff0c\u56e0\u4e3a\u66f4\u6539\u4e00\u4e2a\u5199\u597d\u7684\u7ad9\u70b9\u7684\u6570\u636e\u5e93\u914d\u7f6e\u6bd4\u8f83\u96be\u8c03\u8bd5\u3002\u6211\u8fd8\u662f\u4f1a\u7167\u5e38\u7ed9\u4f60\u4e24\u79cd\u4ee3\u7801\u683c\u5f0f\uff1a\u4e00\u4e2a\u7528 ZeroFrame\uff0c\u53e6\u4e00\u4e2a\u7528\u6211\u7684\u5e93\u3002 \u6982\u89c8 \u96f6\u7f51\u5185\u7f6e SQLite\u3002\u5f53\u7136\uff0c\u4f60\u81ea\u5df1\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u8fd9\u4e0d\u662f\u5f88\u96be\u3002\u54b1\u5f00\u59cb\u521b\u5efa\u6570\u636e\u5e93\u5427\u3002 \u6570\u636e\u6e90 \u96f6\u7f51\u4e2d\u53ea\u6709 SELECT \u8bed\u53e5\u662f\u5141\u8bb8\u7684\uff0c\u6570\u636e\u5e93\u662f\u7531 JSON \u6587\u4ef6\u5bfc\u5165\u800c\u6210\u7684\uff0c\u6240\u4ee5\u73b0\u5728\u5c31\u5199\u70b9 JSON \u6587\u4ef6\u5427\u3002 data.json \u4f9d\u636e\u4f20\u7edf\uff0c\u7528\u6237\u6570\u636e\u90fd\u653e\u5728 data/*/data.json \u6587\u4ef6\u3002\u73b0\u5728\u54b1\u5199\u4e2a data/admin/data.json \u5427\u3002\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4 posts \uff0c\u91cc\u9762\u6709\u51e0\u884c\u6570\u636e\u3002 { \"posts\" : [ { \"id\" : 1 , \"title\" : \"Post 1\" , \"content\" : \"Post 1\" }, { \"id\" : 2 , \"title\" : \"Post 2\" , \"content\" : \"Post 2\" } ] } \u6570\u636e\u5e93\u6a21\u5f0f dbschema.json \u662f\u4e2a\u7b80\u5355\u7684 JSON \u6587\u4ef6\uff0c\u4e0b\u9762\u662f\u4e2a\u7a7a\u6570\u636e\u5e93\uff1a { \"db_name\": \"mydatabase\", \"db_file\": \"data/mydatabase.db\", \"version\": 2, \"maps\": {}, \"tables\": {} } db_name \u6307\u6570\u636e\u5e93\u540d\uff0c\u53ea\u7528\u4e8e\u8c03\u8bd5\u3002\u4e00\u4e2a\u7ad9\u70b9\u4e0d\u80fd\u6709\u591a\u4e2a\u6570\u636e\u5e93\u3002 SQLite \u662f\u5355\u4e2a\u6587\u4ef6\uff0c db_file \u662f\u5176\u8def\u5f84\u3002 version \u4e0d\u662f SQLite \u7248\u672c\uff0c\u662f\u96f6\u7f51\u7684\u6570\u636e\u5e93\u7684\u7248\u672c\u3002 maps \u6570\u636e\u5e93\u548c\u6587\u4ef6\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002 tables \u8868\u7ed3\u6784\u3002 \u628a dbschema.json \u590d\u5236\u5230\u7ad9\u70b9\u6839\u76ee\u5f55\u3002 json \u8868 \u5bf9\u4e8e\u6bcf\u4e2a\u6ce8\u518c\u7528\u6237\uff08\u7ad9\u957f\u6216\u8005\u662f ZeroID \u7528\u6237\uff09\uff0c\u5728 json \u8868\u91cc\u90fd\u6709\u4e00\u6761\u8bb0\u5f55\u3002\u96f6\u7f51\u9700\u8981\u8fd9\u4e2a\u8868\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u73b0\u5728\u5f80\u6587\u4ef6\u91cc\u52a0\u70b9\u5185\u5bb9\u3002 dbschema.json : { \"db_name\" : \"mydatabase\" , \"db_file\" : \"data/mydatabase.db\" , \"version\" : 2 , \"maps\" : {}, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 } } } \u6dfb\u52a0\u8868 \u518d\u6dfb\u52a0 posts \u8868 \u5148\u8bbe\u7f6e\u8868\u540d { \"db_name\" : \"mydatabase\" , \"db_file\" : \"data/mydatabase.db\" , \"version\" : 2 , \"maps\" : {}, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 }, \"posts\" : { ... } } } \u770b json \u8868\u7684\u683c\u5f0f\uff0c\u6bcf\u4e2a\u8868\u90fd\u7531 cols , indexes \u548c schema_changed \u7ec4\u6210\u3002 schema_changed \u5c31\u662f\u8868\u7684\u7248\u672c\uff0c\u6539\u53d8\u8868\u540e\u8981\u589e\u52a0\u8fd9\u4e2a\u503c\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u624d\u4f1a\u91cd\u5efa\u6570\u636e\u5e93\u3002 \"posts\" : { \"cols\" : [ ... ], \"indexes\" : [ ... ], \"schema_changed\" : 1 } cols \u662f\u5217\uff08column\uff09\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u662f\u5217\u540d (SQL \u5173\u952e\u5b57, \u5982 GROUP \u548c UPDATE \u662f\u4e0d\u5141\u8bb8\u7684). \u7b2c\u4e8c\u4e2a\u662f SQLite \u5217\u7684\u7c7b\u578b - integer , float \u6216 text . \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"title\" , \"text\" ], [ \"content\" , \"text\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ ... ], \"schema_changed\" : 1 } \u6ce8\u610f\u5230 json_id \u5217\u4e86\u5417? \u8fd9\u662f dbschema.json \u4e2d\u53c8\u4e00\u4e2a\u5947\u602a\u7684\u4e8b\u60c5\uff0c \u6bcf\u4e2a\u8868\u90fd\u8981\u6709\u8fd9\u4e2a\u5217\u3002 indexes \u6570\u7ec4\u91cc\u5217\u51fa\u4e86\u7d22\u5f15\uff0c CREATE INDEX \u53ef\u4ee5\u653e\u5728\u90a3\u91cc\uff0c\u7d22\u5f15\u540d\u5e76\u4e0d\u4ee3\u8868\u4ec0\u4e48\u3002 \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"title\" , \"text\" ], [ \"content\" , \"text\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX post_id ON posts(id)\" ], \"schema_changed\" : 1 } \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u7b7e\u540d content.json .\u7136\u540e\u5c31\u4f1a\u51fa\u6765\u4e00\u4e2a\u65b0\u6587\u4ef6 data/mydatabase.db (\u4f9d\u636e dbschema.json \u91cc db_file \u6307\u5b9a\u7684\u6587\u4ef6\u540d). \u8fd9\u662f SQLite \u6570\u636e\u5e93 \uff0c\u6211\u63a8\u8350\u7528 SQLiteStudio \u6d4f\u89c8\u3001\u7f16\u8f91\u6570\u636e\u5e93\u3002\u73b0\u5728\u4f60\u53ea\u80fd\u770b\u5230\u7a7a\u7684 json \u548c post \u8868,\u5df2\u7ecf\u4e00\u4e2a\u7279\u6b8a\u7684 keyvalue \u8868\uff0c\u8fd9\u662f\u96f6\u7f51\u7684\u5185\u90e8\u8868\uff0c\u4e0d\u8981\u52a8\u5b83\u3002 \u8bd1\u8005\u6ce8\uff1a SQLiteStudio \u592a\u8001\u4e86\uff0c\u7528 DB Browser for SQLite \u5427\u3002 \u6620\u5c04\u8868 to_table \u73b0\u5728\u53ea\u6709\u7a7a\u8868\uff0c\u7a7a\u8868\u6709\u5565\u7528\u5462\uff1f\u7528 data/admin/data.json \u586b\u5145 posts \u8868\u5427\u3002 \u8fd8\u8bb0\u5f97 dbschema.json \u7684 maps \u5bf9\u8c61\u5417 ? ... \"version\" : 2 , \"maps\" : {} , \"tables\" : { ... \u6539\u6389\u3002 \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" } ] } } \u952e\u540d admin/data.json \u662f \u6b63\u5219\u8868\u8fbe\u5f0f \uff0c\u7b26\u5408\u6b64\u8868\u8fbe\u5f0f\u7684\u6587\u4ef6\u90fd\u4f1a\u88ab\u5bfc\u5165\u5230\u8fd9\u4e2a\u8868\u3002\u76ee\u524d\u53ea\u6709 to_table \uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u7b26\u5408\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 JSON \u6587\u4ef6\u7684 posts \u5bf9\u8c61\u90fd\u4f1a\u88ab\u5bfc\u5165\u5230\u6570\u636e\u5e93\u7684 posts \u8868\u4e2d\u3002 \u7b7e\u540d content.json \uff0c\u518d\u67e5\u770b\u4e00\u4e0b\u6570\u636e\u5e93\uff0c\u770b\u5230\u53d8\u5316\u4e86\u5417? \u55ef\uff0c posts \u8868\u4e2d\u7684 json_id \u5bf9\u5e94\u7740 json \u8868\u4e2d\u7684 json_id \u3002\u6bcf\u4e2a json \u6587\u4ef6\u90fd\u5728 json \u8868\u4e2d\u6709\u8bb0\u5f55\uff0c\u4f60\u53ef\u80fd\u89c9\u5f97\u6ca1\u6709\u4ec0\u4e48\u5fc5\u8981\uff0c\u4f46\u4ee5\u540e\u53ef\u80fd\u5c31\u4f1a\u7528\u5230\u3002 \u6570\u636e\u5e93\u7684\u8bfb\u6743\u9650 \u521b\u5efa\u65b0\u6587\u4ef6 js/index.js \uff0c\u5e76\u5728 index.html \u4e2d\u5f15\u5165\u5b83\u548c js/ZeroFrame.js \u3002 \u8bb0\u5f97\u600e\u4e48\u7528 ZeroFrame \u5427? \u8c03\u7528 dbQuery : +-------------------------------------------------------------------------+ | dbQuery | +-------------------------------------------------------------------------+ | Run a query on the sql cache | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | query | Sql query command | +-------------------------+-----------------------------------------------+ | Return: Result of query as array or object with \"error\" property | +-------------------------------------------------------------------------+ var zeroFrame = new ZeroFrame(); zeroFrame.cmd(\"dbQuery\", [\"SELECT * FROM posts\"], function(posts) { if(posts.error) { console.warn(posts.error); return; } console.log(posts); }); \u6253\u5f00\u63a7\u63a7\u5236\u53f0\u5e76\u5237\u65b0\uff0c\u4f60\u5c31\u80fd\u770b\u5230: Array [ Object, Object ] Object { content: \"Post 1\", id: 1, json_id: 1, title: \"Post 1\" } \u4ee5\u540e\u4f1a\u8bb2\u5982\u4f55\u52a8\u6001\u7f16\u8f91\u6570\u636e\u3002\u81f3\u4e8e\u73b0\u5728\uff0c\u4f60\u624b\u52a8\u7f16\u8f91\u5c31\u662f\uff0c\u7ed9\u6587\u4ef6\u7b7e\u540d\uff0c\u7136\u540e\u5237\u65b0\uff0c\u770b\u770b\u6709\u54ea\u4e9b\u53d8\u5316\u3002 We'll cover dynamic data changing and design in the following parts. For now, you can directly change data/admin/data.json , sign content.json and reload zite to see what changes.","title":"\u6570\u636e\u5e93"},{"location":"databases/#_1","text":"\u4eca\u5929\u54b1\u5efa\u4e2a\u535a\u5ba2\u7ad9\u3002","title":"\u521b\u5efa\u6570\u636e\u5e93"},{"location":"databases/#_2","text":"\u6211\u63a8\u8350\u76f4\u63a5\u521b\u5efa\u65b0\u7ad9\u70b9\uff0c\u56e0\u4e3a\u66f4\u6539\u4e00\u4e2a\u5199\u597d\u7684\u7ad9\u70b9\u7684\u6570\u636e\u5e93\u914d\u7f6e\u6bd4\u8f83\u96be\u8c03\u8bd5\u3002\u6211\u8fd8\u662f\u4f1a\u7167\u5e38\u7ed9\u4f60\u4e24\u79cd\u4ee3\u7801\u683c\u5f0f\uff1a\u4e00\u4e2a\u7528 ZeroFrame\uff0c\u53e6\u4e00\u4e2a\u7528\u6211\u7684\u5e93\u3002","title":"\u521b\u5efa\u7ad9\u70b9"},{"location":"databases/#_3","text":"\u96f6\u7f51\u5185\u7f6e SQLite\u3002\u5f53\u7136\uff0c\u4f60\u81ea\u5df1\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u8fd9\u4e0d\u662f\u5f88\u96be\u3002\u54b1\u5f00\u59cb\u521b\u5efa\u6570\u636e\u5e93\u5427\u3002","title":"\u6982\u89c8"},{"location":"databases/#_4","text":"\u96f6\u7f51\u4e2d\u53ea\u6709 SELECT \u8bed\u53e5\u662f\u5141\u8bb8\u7684\uff0c\u6570\u636e\u5e93\u662f\u7531 JSON \u6587\u4ef6\u5bfc\u5165\u800c\u6210\u7684\uff0c\u6240\u4ee5\u73b0\u5728\u5c31\u5199\u70b9 JSON \u6587\u4ef6\u5427\u3002","title":"\u6570\u636e\u6e90"},{"location":"databases/#datajson","text":"\u4f9d\u636e\u4f20\u7edf\uff0c\u7528\u6237\u6570\u636e\u90fd\u653e\u5728 data/*/data.json \u6587\u4ef6\u3002\u73b0\u5728\u54b1\u5199\u4e2a data/admin/data.json \u5427\u3002\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4 posts \uff0c\u91cc\u9762\u6709\u51e0\u884c\u6570\u636e\u3002 { \"posts\" : [ { \"id\" : 1 , \"title\" : \"Post 1\" , \"content\" : \"Post 1\" }, { \"id\" : 2 , \"title\" : \"Post 2\" , \"content\" : \"Post 2\" } ] }","title":"data.json"},{"location":"databases/#_5","text":"dbschema.json \u662f\u4e2a\u7b80\u5355\u7684 JSON \u6587\u4ef6\uff0c\u4e0b\u9762\u662f\u4e2a\u7a7a\u6570\u636e\u5e93\uff1a { \"db_name\": \"mydatabase\", \"db_file\": \"data/mydatabase.db\", \"version\": 2, \"maps\": {}, \"tables\": {} } db_name \u6307\u6570\u636e\u5e93\u540d\uff0c\u53ea\u7528\u4e8e\u8c03\u8bd5\u3002\u4e00\u4e2a\u7ad9\u70b9\u4e0d\u80fd\u6709\u591a\u4e2a\u6570\u636e\u5e93\u3002 SQLite \u662f\u5355\u4e2a\u6587\u4ef6\uff0c db_file \u662f\u5176\u8def\u5f84\u3002 version \u4e0d\u662f SQLite \u7248\u672c\uff0c\u662f\u96f6\u7f51\u7684\u6570\u636e\u5e93\u7684\u7248\u672c\u3002 maps \u6570\u636e\u5e93\u548c\u6587\u4ef6\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002 tables \u8868\u7ed3\u6784\u3002 \u628a dbschema.json \u590d\u5236\u5230\u7ad9\u70b9\u6839\u76ee\u5f55\u3002","title":"\u6570\u636e\u5e93\u6a21\u5f0f"},{"location":"databases/#json","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u6ce8\u518c\u7528\u6237\uff08\u7ad9\u957f\u6216\u8005\u662f ZeroID \u7528\u6237\uff09\uff0c\u5728 json \u8868\u91cc\u90fd\u6709\u4e00\u6761\u8bb0\u5f55\u3002\u96f6\u7f51\u9700\u8981\u8fd9\u4e2a\u8868\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u73b0\u5728\u5f80\u6587\u4ef6\u91cc\u52a0\u70b9\u5185\u5bb9\u3002 dbschema.json : { \"db_name\" : \"mydatabase\" , \"db_file\" : \"data/mydatabase.db\" , \"version\" : 2 , \"maps\" : {}, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 } } }","title":"json \u8868"},{"location":"databases/#_6","text":"\u518d\u6dfb\u52a0 posts \u8868 \u5148\u8bbe\u7f6e\u8868\u540d { \"db_name\" : \"mydatabase\" , \"db_file\" : \"data/mydatabase.db\" , \"version\" : 2 , \"maps\" : {}, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 }, \"posts\" : { ... } } } \u770b json \u8868\u7684\u683c\u5f0f\uff0c\u6bcf\u4e2a\u8868\u90fd\u7531 cols , indexes \u548c schema_changed \u7ec4\u6210\u3002 schema_changed \u5c31\u662f\u8868\u7684\u7248\u672c\uff0c\u6539\u53d8\u8868\u540e\u8981\u589e\u52a0\u8fd9\u4e2a\u503c\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u624d\u4f1a\u91cd\u5efa\u6570\u636e\u5e93\u3002 \"posts\" : { \"cols\" : [ ... ], \"indexes\" : [ ... ], \"schema_changed\" : 1 } cols \u662f\u5217\uff08column\uff09\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u662f\u5217\u540d (SQL \u5173\u952e\u5b57, \u5982 GROUP \u548c UPDATE \u662f\u4e0d\u5141\u8bb8\u7684). \u7b2c\u4e8c\u4e2a\u662f SQLite \u5217\u7684\u7c7b\u578b - integer , float \u6216 text . \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"title\" , \"text\" ], [ \"content\" , \"text\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ ... ], \"schema_changed\" : 1 } \u6ce8\u610f\u5230 json_id \u5217\u4e86\u5417? \u8fd9\u662f dbschema.json \u4e2d\u53c8\u4e00\u4e2a\u5947\u602a\u7684\u4e8b\u60c5\uff0c \u6bcf\u4e2a\u8868\u90fd\u8981\u6709\u8fd9\u4e2a\u5217\u3002 indexes \u6570\u7ec4\u91cc\u5217\u51fa\u4e86\u7d22\u5f15\uff0c CREATE INDEX \u53ef\u4ee5\u653e\u5728\u90a3\u91cc\uff0c\u7d22\u5f15\u540d\u5e76\u4e0d\u4ee3\u8868\u4ec0\u4e48\u3002 \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"title\" , \"text\" ], [ \"content\" , \"text\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX post_id ON posts(id)\" ], \"schema_changed\" : 1 } \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u7b7e\u540d content.json .\u7136\u540e\u5c31\u4f1a\u51fa\u6765\u4e00\u4e2a\u65b0\u6587\u4ef6 data/mydatabase.db (\u4f9d\u636e dbschema.json \u91cc db_file \u6307\u5b9a\u7684\u6587\u4ef6\u540d). \u8fd9\u662f SQLite \u6570\u636e\u5e93 \uff0c\u6211\u63a8\u8350\u7528 SQLiteStudio \u6d4f\u89c8\u3001\u7f16\u8f91\u6570\u636e\u5e93\u3002\u73b0\u5728\u4f60\u53ea\u80fd\u770b\u5230\u7a7a\u7684 json \u548c post \u8868,\u5df2\u7ecf\u4e00\u4e2a\u7279\u6b8a\u7684 keyvalue \u8868\uff0c\u8fd9\u662f\u96f6\u7f51\u7684\u5185\u90e8\u8868\uff0c\u4e0d\u8981\u52a8\u5b83\u3002 \u8bd1\u8005\u6ce8\uff1a SQLiteStudio \u592a\u8001\u4e86\uff0c\u7528 DB Browser for SQLite \u5427\u3002","title":"\u6dfb\u52a0\u8868"},{"location":"databases/#_7","text":"","title":"\u6620\u5c04\u8868"},{"location":"databases/#to_table","text":"\u73b0\u5728\u53ea\u6709\u7a7a\u8868\uff0c\u7a7a\u8868\u6709\u5565\u7528\u5462\uff1f\u7528 data/admin/data.json \u586b\u5145 posts \u8868\u5427\u3002 \u8fd8\u8bb0\u5f97 dbschema.json \u7684 maps \u5bf9\u8c61\u5417 ? ... \"version\" : 2 , \"maps\" : {} , \"tables\" : { ... \u6539\u6389\u3002 \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" } ] } } \u952e\u540d admin/data.json \u662f \u6b63\u5219\u8868\u8fbe\u5f0f \uff0c\u7b26\u5408\u6b64\u8868\u8fbe\u5f0f\u7684\u6587\u4ef6\u90fd\u4f1a\u88ab\u5bfc\u5165\u5230\u8fd9\u4e2a\u8868\u3002\u76ee\u524d\u53ea\u6709 to_table \uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u7b26\u5408\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 JSON \u6587\u4ef6\u7684 posts \u5bf9\u8c61\u90fd\u4f1a\u88ab\u5bfc\u5165\u5230\u6570\u636e\u5e93\u7684 posts \u8868\u4e2d\u3002 \u7b7e\u540d content.json \uff0c\u518d\u67e5\u770b\u4e00\u4e0b\u6570\u636e\u5e93\uff0c\u770b\u5230\u53d8\u5316\u4e86\u5417? \u55ef\uff0c posts \u8868\u4e2d\u7684 json_id \u5bf9\u5e94\u7740 json \u8868\u4e2d\u7684 json_id \u3002\u6bcf\u4e2a json \u6587\u4ef6\u90fd\u5728 json \u8868\u4e2d\u6709\u8bb0\u5f55\uff0c\u4f60\u53ef\u80fd\u89c9\u5f97\u6ca1\u6709\u4ec0\u4e48\u5fc5\u8981\uff0c\u4f46\u4ee5\u540e\u53ef\u80fd\u5c31\u4f1a\u7528\u5230\u3002","title":"to_table"},{"location":"databases/#_8","text":"\u521b\u5efa\u65b0\u6587\u4ef6 js/index.js \uff0c\u5e76\u5728 index.html \u4e2d\u5f15\u5165\u5b83\u548c js/ZeroFrame.js \u3002 \u8bb0\u5f97\u600e\u4e48\u7528 ZeroFrame \u5427? \u8c03\u7528 dbQuery : +-------------------------------------------------------------------------+ | dbQuery | +-------------------------------------------------------------------------+ | Run a query on the sql cache | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | query | Sql query command | +-------------------------+-----------------------------------------------+ | Return: Result of query as array or object with \"error\" property | +-------------------------------------------------------------------------+ var zeroFrame = new ZeroFrame(); zeroFrame.cmd(\"dbQuery\", [\"SELECT * FROM posts\"], function(posts) { if(posts.error) { console.warn(posts.error); return; } console.log(posts); }); \u6253\u5f00\u63a7\u63a7\u5236\u53f0\u5e76\u5237\u65b0\uff0c\u4f60\u5c31\u80fd\u770b\u5230: Array [ Object, Object ] Object { content: \"Post 1\", id: 1, json_id: 1, title: \"Post 1\" } \u4ee5\u540e\u4f1a\u8bb2\u5982\u4f55\u52a8\u6001\u7f16\u8f91\u6570\u636e\u3002\u81f3\u4e8e\u73b0\u5728\uff0c\u4f60\u624b\u52a8\u7f16\u8f91\u5c31\u662f\uff0c\u7ed9\u6587\u4ef6\u7b7e\u540d\uff0c\u7136\u540e\u5237\u65b0\uff0c\u770b\u770b\u6709\u54ea\u4e9b\u53d8\u5316\u3002 We'll cover dynamic data changing and design in the following parts. For now, you can directly change data/admin/data.json , sign content.json and reload zite to see what changes.","title":"\u6570\u636e\u5e93\u7684\u8bfb\u6743\u9650"},{"location":"dbschema/","text":"\u6df1\u5165\u6570\u636e\u5e93\u6a21\u5f0f \u4eca\u5929\u8bb2\u8bb2\u600e\u4e48\u6539\u8fdb dbschema.json . \u5c31\u7528\u8fd9\u4e2a dbschema.json : { \"db_name\" : \"mydatabase\" , \"db_file\" : \"data/mydatabase.db\" , \"version\" : 2 , \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" } ] } }, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 }, \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"content\" , \"text\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX post_id ON posts(id)\" ], \"schema_changed\" : 1 } } } \u6709\u4e00\u4e2a\u542b id \u548c content \u5b57\u6bb5\u7684 posts \u8868\uff0c\u7136\u540e\u4ece data/admin/data.json \u7684 posts \u4e2d\u5bfc\u5165\u6570\u636e\u3002 key_col \u60f3\u4e00\u4e0b\u54ea\u4e9b\u6570\u636e\u884c\u662f\u552f\u4e00\u7684\uff0c\u6bd4\u5982\u6295\u7968\u6570\u636e\u2014\u2014\u4e00\u5bf9\u7684 id \u548c author_id \u662f\u552f\u4e00\u7684\u3002\u6216\u8005\u5c31\u76f4\u63a5\u662f json \u8868\u4e2d\u7684 id \u3002 \u6570\u636e\u662f\u4ece JSON \u6570\u7ec4\u52a0\u8f7d\u7684\uff0c\u90a3\u600e\u4e48\u6dfb\u52a0\u552f\u4e00\u5b57\u6bb5\u5462\uff0cJSON \u91cc\u4e5f\u6ca1\u6709\u552f\u4e00\u6570\u636e? \u54ea\u8fd8\u6709?.. \u55ef\uff0c\u7684\u786e\u6709\uff0c\u8bb0\u5f97\u5bf9\u8c61\u4e0d? \u952e\u552f\u4e00\uff0c\u6240\u4ee5\u54b1\u5f04\u4e2a\u552f\u4e00\u7684\u5b57\u6bb5\uff0c\u4f8b\u5982\uff0c Post ID\u3002 \u5728 data/admin/data.json , \u6211\u4eec\u628a\u6570\u7ec4\u6539\u4e3a\u5bf9\u8c61\uff0c\u628a\u5143\u7d20\u6539\u4e3a\u952e\u503c\u3002 { \"posts\" : { \"1\" : { \"content\" : \"Post 1\" }, \"2\" : { \"content\" : \"Post 2\" } } } \u5728 dbschema.json , \u6dfb\u52a0 key_col \u5c5e\u6027\uff0c \u544a\u8bc9\u628a\u5bf9\u8c61\u7684\u952e\u540d\u5b58\u50a8\u5728\u5b57\u6bb5\"id\"\u4e2d\u3002 \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" , \"key_col\" : \"id\" } ] } } \u7b7e\u540d content.json \uff0c\u6253\u5f00 data/mydatabase.db .\u6ca1\u4ec0\u4e48\u53d8\u5316\uff0c \u4f46 id \u5b57\u6bb5\u552f\u4e00 - \u56e0\u4e3a JSON. \u55ef, \u5b9e\u9645\u4e0a\u4e0d\u662f\u4e00\u76f4\u90fd\u552f\u4e00\u7684\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u4e00\u6837\u7684 admin/data.json \u6587\u4ef6 (e.g. data/a/admin/data.json \u548c data/b/admin/data.json )\uff0c\u53ef\u80fd\u6709\u4e24\u4e2a\u76f8\u540c ID\u3002\u4f46\u7ad9\u957f\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6709\u7528\u6237\u9650\u5236\u89c4\u5219\u3002 val_col \u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61\u4e0d\u591f\u7b80\u6d01\uff0c\u6539 data.json \u6210\u8fd9\u6837\u4f1a\u597d\u70b9: { \"posts\" : { \"1\" : \"Post 1\" , \"2\" : \"Post 2\" } } \u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u5c31\u662f val_col \u7684\u9b45\u529b\uff0c\u5148\u6539 data/admin/data.json \uff0c\u518d\u6539 dbschema.json : \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" , \"key_col\" : \"id\" , \"val_col\" : \"content\" } ] } } \u6dfb\u52a0 val_col \u5c5e\u6027\uff0c\u544a\u8bc9\u96f6\u7f51\u628a\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\u5b58\u50a8\u5728 content \u5b57\u6bb5\u4e2d\u3002\u7b7e\u540d content.json \uff0c\u518d\u770b\u770b\u6709\u4ec0\u4e48\u53d8\u5316\uff0c\u4f60\u53ef\u4ee5\u518d\u52a0\u70b9\u6587\u4ef6\u770b\u770b\u3002 \u8fd9\u5c31\u662f\u95ee\u4ec0\u4e48\u6211\u8bf4\u51e0\u4e4e\u4efb\u4f55 JSON \u7ed3\u6784\u90fd\u662f\u53ef\u884c\u7684\uff0c\u4ece\u7b80\u5355\u7684 to_table \u5230\u66f4\u5148\u8fdb\u7684 key_col \u548c val_col \u90fd\u884c\u3002 version \u770b\u4e0b json \u8868. \u76ee\u524d\u53ea\u6709\u4e09\u4e2a\u5b57\u6bb5: json_id , directory \u548c file_name .\u8fd9\u662f\u56e0\u4e3a version: 2 \u3002 \u8bb2\u8bb2 version \u5c5e\u6027: version: 1 json_id - JSON \u6587\u4ef6\u7684 ID path - JSON \u6587\u4ef6\u8def\u5f84 \u95ee\u9898 : \u65e0 version: 2 json_id - JSON \u6587\u4ef6\u7684 ID directory - JSON \u6587\u4ef6\u7684\u76ee\u5f55 file_name - JSON \u6587\u4ef6\u540d \u95ee\u9898 : directory \u662f\u76f8\u5bf9\u4e8e\u6570\u636e\u5e93\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u5982\u679c\u6587\u4ef6\u8def\u5f84\u662f data/admin/data.json \uff0c\u6570\u636e\u5e93\u8def\u5f84\u662f data/mydatabase.db \uff0c\u5219 directory \u5c31\u662f admin \uff0c\u6240\u4ee5\u540c\u4e00\u76ee\u5f55\u4e0b\u5c31\u4e0d\u80fd\u6709\u6570\u636e\u5e93\u3002 version: 3 json_id - JSON \u6587\u4ef6\u7684 ID site - JSON \u6587\u4ef6\u6240\u5728\u7ad9\u70b9 directory - JSON \u6587\u4ef6\u7684\u76ee\u5f55 file_name - JSON \u6587\u4ef6\u540d \u95ee\u9898 : \u540c version: 2 , \u4f46 site \u5c31\u662f directory \u659c\u6760\u524d\u7684\u90e8\u5206, \u800c directory \u5c31\u662f\u7b2c\u4e00\u4e2a\u659c\u6760\u540e\u7684\u90e8\u5206\u3002\u6240\u4ee5\u5728\u6570\u636e\u5e93\u7684\u540c\u4e00\u76ee\u5f55\u6216\u8005\u5b50\u76ee\u5f55\u4e0d\u80fd\u6709\u8981\u5bfc\u5165\u7684 JSON \u6587\u4ef6\uff0c\u4f46\u5b50\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u662f\u53ef\u4ee5\u7684\u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\uff1a \"\u4e3a\u4ec0\u4e48\u662f site ?\"\uff0c\u90a3\u8ddf\u805a\u5408\u7ad9\u6709\u5173\uff0c\u5f85\u4f1a\u518d\u8c08\u3002","title":"\u6570\u636e\u5e93\u6a21\u5f0f"},{"location":"dbschema/#_1","text":"\u4eca\u5929\u8bb2\u8bb2\u600e\u4e48\u6539\u8fdb dbschema.json . \u5c31\u7528\u8fd9\u4e2a dbschema.json : { \"db_name\" : \"mydatabase\" , \"db_file\" : \"data/mydatabase.db\" , \"version\" : 2 , \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" } ] } }, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 }, \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"content\" , \"text\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX post_id ON posts(id)\" ], \"schema_changed\" : 1 } } } \u6709\u4e00\u4e2a\u542b id \u548c content \u5b57\u6bb5\u7684 posts \u8868\uff0c\u7136\u540e\u4ece data/admin/data.json \u7684 posts \u4e2d\u5bfc\u5165\u6570\u636e\u3002","title":"\u6df1\u5165\u6570\u636e\u5e93\u6a21\u5f0f"},{"location":"dbschema/#key_col","text":"\u60f3\u4e00\u4e0b\u54ea\u4e9b\u6570\u636e\u884c\u662f\u552f\u4e00\u7684\uff0c\u6bd4\u5982\u6295\u7968\u6570\u636e\u2014\u2014\u4e00\u5bf9\u7684 id \u548c author_id \u662f\u552f\u4e00\u7684\u3002\u6216\u8005\u5c31\u76f4\u63a5\u662f json \u8868\u4e2d\u7684 id \u3002 \u6570\u636e\u662f\u4ece JSON \u6570\u7ec4\u52a0\u8f7d\u7684\uff0c\u90a3\u600e\u4e48\u6dfb\u52a0\u552f\u4e00\u5b57\u6bb5\u5462\uff0cJSON \u91cc\u4e5f\u6ca1\u6709\u552f\u4e00\u6570\u636e? \u54ea\u8fd8\u6709?.. \u55ef\uff0c\u7684\u786e\u6709\uff0c\u8bb0\u5f97\u5bf9\u8c61\u4e0d? \u952e\u552f\u4e00\uff0c\u6240\u4ee5\u54b1\u5f04\u4e2a\u552f\u4e00\u7684\u5b57\u6bb5\uff0c\u4f8b\u5982\uff0c Post ID\u3002 \u5728 data/admin/data.json , \u6211\u4eec\u628a\u6570\u7ec4\u6539\u4e3a\u5bf9\u8c61\uff0c\u628a\u5143\u7d20\u6539\u4e3a\u952e\u503c\u3002 { \"posts\" : { \"1\" : { \"content\" : \"Post 1\" }, \"2\" : { \"content\" : \"Post 2\" } } } \u5728 dbschema.json , \u6dfb\u52a0 key_col \u5c5e\u6027\uff0c \u544a\u8bc9\u628a\u5bf9\u8c61\u7684\u952e\u540d\u5b58\u50a8\u5728\u5b57\u6bb5\"id\"\u4e2d\u3002 \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" , \"key_col\" : \"id\" } ] } } \u7b7e\u540d content.json \uff0c\u6253\u5f00 data/mydatabase.db .\u6ca1\u4ec0\u4e48\u53d8\u5316\uff0c \u4f46 id \u5b57\u6bb5\u552f\u4e00 - \u56e0\u4e3a JSON. \u55ef, \u5b9e\u9645\u4e0a\u4e0d\u662f\u4e00\u76f4\u90fd\u552f\u4e00\u7684\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u4e00\u6837\u7684 admin/data.json \u6587\u4ef6 (e.g. data/a/admin/data.json \u548c data/b/admin/data.json )\uff0c\u53ef\u80fd\u6709\u4e24\u4e2a\u76f8\u540c ID\u3002\u4f46\u7ad9\u957f\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6709\u7528\u6237\u9650\u5236\u89c4\u5219\u3002","title":"key_col"},{"location":"dbschema/#val_col","text":"\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61\u4e0d\u591f\u7b80\u6d01\uff0c\u6539 data.json \u6210\u8fd9\u6837\u4f1a\u597d\u70b9: { \"posts\" : { \"1\" : \"Post 1\" , \"2\" : \"Post 2\" } } \u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u5c31\u662f val_col \u7684\u9b45\u529b\uff0c\u5148\u6539 data/admin/data.json \uff0c\u518d\u6539 dbschema.json : \"maps\" : { \"admin/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" , \"key_col\" : \"id\" , \"val_col\" : \"content\" } ] } } \u6dfb\u52a0 val_col \u5c5e\u6027\uff0c\u544a\u8bc9\u96f6\u7f51\u628a\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\u5b58\u50a8\u5728 content \u5b57\u6bb5\u4e2d\u3002\u7b7e\u540d content.json \uff0c\u518d\u770b\u770b\u6709\u4ec0\u4e48\u53d8\u5316\uff0c\u4f60\u53ef\u4ee5\u518d\u52a0\u70b9\u6587\u4ef6\u770b\u770b\u3002 \u8fd9\u5c31\u662f\u95ee\u4ec0\u4e48\u6211\u8bf4\u51e0\u4e4e\u4efb\u4f55 JSON \u7ed3\u6784\u90fd\u662f\u53ef\u884c\u7684\uff0c\u4ece\u7b80\u5355\u7684 to_table \u5230\u66f4\u5148\u8fdb\u7684 key_col \u548c val_col \u90fd\u884c\u3002","title":"val_col"},{"location":"dbschema/#version","text":"\u770b\u4e0b json \u8868. \u76ee\u524d\u53ea\u6709\u4e09\u4e2a\u5b57\u6bb5: json_id , directory \u548c file_name .\u8fd9\u662f\u56e0\u4e3a version: 2 \u3002 \u8bb2\u8bb2 version \u5c5e\u6027: version: 1 json_id - JSON \u6587\u4ef6\u7684 ID path - JSON \u6587\u4ef6\u8def\u5f84 \u95ee\u9898 : \u65e0 version: 2 json_id - JSON \u6587\u4ef6\u7684 ID directory - JSON \u6587\u4ef6\u7684\u76ee\u5f55 file_name - JSON \u6587\u4ef6\u540d \u95ee\u9898 : directory \u662f\u76f8\u5bf9\u4e8e\u6570\u636e\u5e93\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u5982\u679c\u6587\u4ef6\u8def\u5f84\u662f data/admin/data.json \uff0c\u6570\u636e\u5e93\u8def\u5f84\u662f data/mydatabase.db \uff0c\u5219 directory \u5c31\u662f admin \uff0c\u6240\u4ee5\u540c\u4e00\u76ee\u5f55\u4e0b\u5c31\u4e0d\u80fd\u6709\u6570\u636e\u5e93\u3002 version: 3 json_id - JSON \u6587\u4ef6\u7684 ID site - JSON \u6587\u4ef6\u6240\u5728\u7ad9\u70b9 directory - JSON \u6587\u4ef6\u7684\u76ee\u5f55 file_name - JSON \u6587\u4ef6\u540d \u95ee\u9898 : \u540c version: 2 , \u4f46 site \u5c31\u662f directory \u659c\u6760\u524d\u7684\u90e8\u5206, \u800c directory \u5c31\u662f\u7b2c\u4e00\u4e2a\u659c\u6760\u540e\u7684\u90e8\u5206\u3002\u6240\u4ee5\u5728\u6570\u636e\u5e93\u7684\u540c\u4e00\u76ee\u5f55\u6216\u8005\u5b50\u76ee\u5f55\u4e0d\u80fd\u6709\u8981\u5bfc\u5165\u7684 JSON \u6587\u4ef6\uff0c\u4f46\u5b50\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u662f\u53ef\u4ee5\u7684\u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\uff1a \"\u4e3a\u4ec0\u4e48\u662f site ?\"\uff0c\u90a3\u8ddf\u805a\u5408\u7ad9\u6709\u5173\uff0c\u5f85\u4f1a\u518d\u8c08\u3002","title":"version"},{"location":"editing-user-data/","text":"\u7f16\u8f91\u7528\u6237\u6570\u636e \u8bd5\u4e00\u4e0b\u7f16\u8f91\u7528\u6237\u6570\u636e\u6587\u4ef6\uff0c\u505a\u4e00\u4e2a\u6295\u7968\u7cfb\u7edf\u3002 data.json \u6587\u4ef6 \u5199\u4e00\u4e2a\u7528\u4e8e\u6dfb\u52a0\u95ee\u9898\u7684\u51fd\u6570 \u9996\u5148\u628a js/files.js \u5f15\u5165 index.html : function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , [ file , false ], callback ); } function writeFile ( file , content , callback ) { zeroFrame . cmd ( \"fileWrite\" , [ file , base64Encode ( content )], callback ); } function base64Encode ( content ) { content = encodeURIComponent ( content ); // Split to bytes in % notation content = unescape ( content ); // Join % notation as bytes (not as chars) return btoa ( content ); } \u5199 addQuestion() \u51fd\u6570\uff0c\u4fdd\u5b58\u5230 js/votes.js : function addQuestion ( question , answers , callback ) { ... } \u5982\u679c\u67d0\u4eba\u60f3\u6dfb\u52a0\u95ee\u9898\uff0c\u9996\u5148\u5f97\u6709 ZeroID\uff0c\u5e76\u4e14\u4ed6\u6388\u6743\u672c\u7ad9\u4f7f\u7528\u3002 function addQuestion ( question , answers , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } ... }); } \u6253\u5f00\u7528\u6237\u7684 JSON\uff1a function addQuestion ( question , answers , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } ... }); }); } \u6ce8\u610f\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u7528\u6237\u5730\u5740\u6253\u5f00\u76ee\u5f55\uff0c\u5373\u7528\u6237\u7684\u516c\u94a5\uff0c\u5982\u679c\u7528\u6237\u7528 KaffieID\uff0c\u516c\u94a5\u4e2a\u7528\u6237\u540d( user )\u5c31\u4e0d\u4e00\u6837\u3002 \u6dfb\u52a0\u95ee\u9898\uff0c\u4fdd\u6301 JSON\uff0c\u53d1\u5e03 content.json : function addQuestion ( question , answers , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } var id = content . next_question_id ; content . questions . push ({ id : id ++ , question : question , answers : answers.join ( \"\\n\" ), date_added : Math.floor ( Date . now () / 1000 ) }); content = JSON . stringify ( content ); writeFile ( \"data/users/\" + user . address + \"/data.json\" , content , function () { zeroFrame . cmd ( \"sitePublish\" , { inner_path : \"data/users/\" + user . address + \"/content.json\" }, function () { callback ( id ); }); }); }); }); } \u4e0d\u9700\u8981\u4f20\u9012 privatekey \u53c2\u6570\u5230 sitePublish \u547d\u4ee4\uff0c\u56e0\u4e3a privatekey: null \u610f\u4e3a \"\u7528\u7528\u6237\u79c1\u94a5\u7b7e\u540d\". \u8fd8\u8981\u7b7e\u540d data/users/{address}/content.json ,\u800c\u6587\u4ef6\u53ef\u80fd\u4e0d\u5b58\u5728 (\u6bd4\u5982\u7528\u6237\u7b2c\u4e00\u6b21\u521b\u5efa\u6587\u4ef6)\uff0c\u8fd8\u597d\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u96f6\u7f51\u4f1a\u81ea\u52a8\u521b\u5efa\u3002 \u68c0\u9a8c\u4e0b\u4ee3\u7801\uff0c\u6253\u5f00\u5f00\u53d1\u5de5\u5177\uff0c\u5237\u65b0\u9875\u9762\uff0c\u8f93\u5165\u4e0b\u5217\u6587\u672c\u3002 addQuestion(\"What's nofish's name?\", [\"nofish\", \"Tomas\", \"Jack\"], console.log.bind(console)); \u6388\u6743\u7ad9\u70b9\u4f7f\u7528 ZeroID\uff0c\u5e76\u5173\u6ce8 data/votes.db \u7684\u53d8\u5316\u3002 \u7b54\u6848 \u5c1d\u8bd5\u81ea\u5df1\u7f16\u5199 addAnswer() \u3002 \u7b54\u6848: function addQuestion ( questionId , answerId , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } content . answers [ questionId ] = answerId ; content = JSON . stringify ( content ); writeFile ( \"data/users/\" + user . address + \"/data.json\" , content , function () { zeroFrame . cmd ( \"sitePublish\" , { inner_path : \"data/users/\" + user . address + \"/content.json\" }, callback ); }); }); }); } \u6ce8\u610f\u6211\u4eec\u6709\u76f8\u4f3c\u7684\u51fd\u6570\uff0c\u5c31\u5199\u4e2a\u5e93\u5427\uff1a function editUserData ( handler , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } handler ( content ); content = JSON . stringify ( content ); writeFile ( \"data/users/\" + user . address + \"/data.json\" , content , function () { zeroFrame . cmd ( \"sitePublish\" , { inner_path : \"data/users/\" + user . address + \"/content.json\" }, callback ); }); }); }); } function addQuestion ( question , answers , callback ) { var id ; editUserData ( function ( content ) { id = content . next_question_id ; content . questions . push ({ id : content.next_question_id ++ , question : question , answers : answers.join ( \"\\n\" ), date_added : Math.floor ( Date . now () / 1000 ) }); }, function () { callback ( id ); }); } function addAnswer ( questionId , answerId , callback ) { editUserData ( function ( content ) { content . answers [ questionId ] = answerId ; }, callback ); } \u8bfb\u53d6\u6570\u636e \u7f16\u5199 getQuestionList() , getQuestion() \u548c getAnswers() \u51fd\u6570: function getQuestionList ( sort , callback ) { if ( sort == \"popular\" ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT questions.*, CASE WHEN answers.answer_count IS NULL THEN 0 ELSE answers.answer_count END AS answer_count FROM questions LEFT JOIN (SELECT question_id, COUNT(*) as answer_count FROM answers GROUP BY question_id) AS answers ON (answers.question_id = questions.id) ORDER BY answers.answer_count DESC, questions.date_added DESC LIMIT 0, 10\" ], callback ); } else if ( sort == \"latest\" ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT * FROM questions ORDER BY date_added DESC LIMIT 0, 10\" ], callback ); } } function getQuestion ( id , callback ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT * FROM questions WHERE id = \" + id ], function ( questions ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { if ( siteInfo . cert_user_id ) { // User logged in zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT answers.*, json.* FROM answers, json WHERE json.directory = \\\"users/\" + siteInfo . auth_address + \"\\\" AND answers.json_id = json.json_id AND answers.question_id = \" + id ], function ( answer ) { if ( answer . length ) { questions [ 0 ]. answered = answer [ 0 ]. answer_id ; getAnswers ( id , function ( answers ) { questions [ 0 ]. answers = answers ; callback ( questions [ 0 ]); }); } else { questions [ 0 ]. answered = - 1 ; callback ( questions [ 0 ]); } }); } else { questions [ 0 ]. answered = - 1 ; callback ( questions [ 0 ]); } }); }); } function getAnswers ( id , callback ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT answer_id, COUNT(*) as answer_count FROM answers WHERE question_id = \" + id + \" GROUP BY answer_id\" ], function ( answers ) { var result = {}; for ( var i = 0 ; i & lt ; answers . length ; i ++ ) { result [ answers [ i ]. answer_id ] = answers [ i ]. answer_count ; } callback ( result ); }); } \u6838\u5fc3\u4ee3\u7801\u5199\u597d\u4e86\uff0c\u53ea\u5dee\u8bbe\u8ba1\u7f51\u9875, \u8fd9 \u662f\u4e2a\u4f8b\u5b50\u3002","title":"\u7f16\u8f91\u7528\u6237\u6570\u636e"},{"location":"editing-user-data/#_1","text":"\u8bd5\u4e00\u4e0b\u7f16\u8f91\u7528\u6237\u6570\u636e\u6587\u4ef6\uff0c\u505a\u4e00\u4e2a\u6295\u7968\u7cfb\u7edf\u3002","title":"\u7f16\u8f91\u7528\u6237\u6570\u636e"},{"location":"editing-user-data/#datajson","text":"\u5199\u4e00\u4e2a\u7528\u4e8e\u6dfb\u52a0\u95ee\u9898\u7684\u51fd\u6570 \u9996\u5148\u628a js/files.js \u5f15\u5165 index.html : function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , [ file , false ], callback ); } function writeFile ( file , content , callback ) { zeroFrame . cmd ( \"fileWrite\" , [ file , base64Encode ( content )], callback ); } function base64Encode ( content ) { content = encodeURIComponent ( content ); // Split to bytes in % notation content = unescape ( content ); // Join % notation as bytes (not as chars) return btoa ( content ); } \u5199 addQuestion() \u51fd\u6570\uff0c\u4fdd\u5b58\u5230 js/votes.js : function addQuestion ( question , answers , callback ) { ... } \u5982\u679c\u67d0\u4eba\u60f3\u6dfb\u52a0\u95ee\u9898\uff0c\u9996\u5148\u5f97\u6709 ZeroID\uff0c\u5e76\u4e14\u4ed6\u6388\u6743\u672c\u7ad9\u4f7f\u7528\u3002 function addQuestion ( question , answers , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } ... }); } \u6253\u5f00\u7528\u6237\u7684 JSON\uff1a function addQuestion ( question , answers , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } ... }); }); } \u6ce8\u610f\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u7528\u6237\u5730\u5740\u6253\u5f00\u76ee\u5f55\uff0c\u5373\u7528\u6237\u7684\u516c\u94a5\uff0c\u5982\u679c\u7528\u6237\u7528 KaffieID\uff0c\u516c\u94a5\u4e2a\u7528\u6237\u540d( user )\u5c31\u4e0d\u4e00\u6837\u3002 \u6dfb\u52a0\u95ee\u9898\uff0c\u4fdd\u6301 JSON\uff0c\u53d1\u5e03 content.json : function addQuestion ( question , answers , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } var id = content . next_question_id ; content . questions . push ({ id : id ++ , question : question , answers : answers.join ( \"\\n\" ), date_added : Math.floor ( Date . now () / 1000 ) }); content = JSON . stringify ( content ); writeFile ( \"data/users/\" + user . address + \"/data.json\" , content , function () { zeroFrame . cmd ( \"sitePublish\" , { inner_path : \"data/users/\" + user . address + \"/content.json\" }, function () { callback ( id ); }); }); }); }); } \u4e0d\u9700\u8981\u4f20\u9012 privatekey \u53c2\u6570\u5230 sitePublish \u547d\u4ee4\uff0c\u56e0\u4e3a privatekey: null \u610f\u4e3a \"\u7528\u7528\u6237\u79c1\u94a5\u7b7e\u540d\". \u8fd8\u8981\u7b7e\u540d data/users/{address}/content.json ,\u800c\u6587\u4ef6\u53ef\u80fd\u4e0d\u5b58\u5728 (\u6bd4\u5982\u7528\u6237\u7b2c\u4e00\u6b21\u521b\u5efa\u6587\u4ef6)\uff0c\u8fd8\u597d\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u96f6\u7f51\u4f1a\u81ea\u52a8\u521b\u5efa\u3002 \u68c0\u9a8c\u4e0b\u4ee3\u7801\uff0c\u6253\u5f00\u5f00\u53d1\u5de5\u5177\uff0c\u5237\u65b0\u9875\u9762\uff0c\u8f93\u5165\u4e0b\u5217\u6587\u672c\u3002 addQuestion(\"What's nofish's name?\", [\"nofish\", \"Tomas\", \"Jack\"], console.log.bind(console)); \u6388\u6743\u7ad9\u70b9\u4f7f\u7528 ZeroID\uff0c\u5e76\u5173\u6ce8 data/votes.db \u7684\u53d8\u5316\u3002","title":"data.json \u6587\u4ef6"},{"location":"editing-user-data/#_2","text":"\u5c1d\u8bd5\u81ea\u5df1\u7f16\u5199 addAnswer() \u3002 \u7b54\u6848: function addQuestion ( questionId , answerId , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } content . answers [ questionId ] = answerId ; content = JSON . stringify ( content ); writeFile ( \"data/users/\" + user . address + \"/data.json\" , content , function () { zeroFrame . cmd ( \"sitePublish\" , { inner_path : \"data/users/\" + user . address + \"/content.json\" }, callback ); }); }); }); } \u6ce8\u610f\u6211\u4eec\u6709\u76f8\u4f3c\u7684\u51fd\u6570\uff0c\u5c31\u5199\u4e2a\u5e93\u5427\uff1a function editUserData ( handler , callback ) { authAsZeroID ( function ( user ) { // User rejected to authorizate if ( ! user ) { callback ( false ); return ; } readFile ( \"data/users/\" + user . address + \"/data.json\" , function ( content ) { content = content || \"\" ; // Parse JSON try { content = JSON . parse ( content ); } catch ( e ) { content = { questions : [], answers : {}, next_question_id : 0 }; } handler ( content ); content = JSON . stringify ( content ); writeFile ( \"data/users/\" + user . address + \"/data.json\" , content , function () { zeroFrame . cmd ( \"sitePublish\" , { inner_path : \"data/users/\" + user . address + \"/content.json\" }, callback ); }); }); }); } function addQuestion ( question , answers , callback ) { var id ; editUserData ( function ( content ) { id = content . next_question_id ; content . questions . push ({ id : content.next_question_id ++ , question : question , answers : answers.join ( \"\\n\" ), date_added : Math.floor ( Date . now () / 1000 ) }); }, function () { callback ( id ); }); } function addAnswer ( questionId , answerId , callback ) { editUserData ( function ( content ) { content . answers [ questionId ] = answerId ; }, callback ); }","title":"\u7b54\u6848"},{"location":"editing-user-data/#_3","text":"\u7f16\u5199 getQuestionList() , getQuestion() \u548c getAnswers() \u51fd\u6570: function getQuestionList ( sort , callback ) { if ( sort == \"popular\" ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT questions.*, CASE WHEN answers.answer_count IS NULL THEN 0 ELSE answers.answer_count END AS answer_count FROM questions LEFT JOIN (SELECT question_id, COUNT(*) as answer_count FROM answers GROUP BY question_id) AS answers ON (answers.question_id = questions.id) ORDER BY answers.answer_count DESC, questions.date_added DESC LIMIT 0, 10\" ], callback ); } else if ( sort == \"latest\" ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT * FROM questions ORDER BY date_added DESC LIMIT 0, 10\" ], callback ); } } function getQuestion ( id , callback ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT * FROM questions WHERE id = \" + id ], function ( questions ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { if ( siteInfo . cert_user_id ) { // User logged in zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT answers.*, json.* FROM answers, json WHERE json.directory = \\\"users/\" + siteInfo . auth_address + \"\\\" AND answers.json_id = json.json_id AND answers.question_id = \" + id ], function ( answer ) { if ( answer . length ) { questions [ 0 ]. answered = answer [ 0 ]. answer_id ; getAnswers ( id , function ( answers ) { questions [ 0 ]. answers = answers ; callback ( questions [ 0 ]); }); } else { questions [ 0 ]. answered = - 1 ; callback ( questions [ 0 ]); } }); } else { questions [ 0 ]. answered = - 1 ; callback ( questions [ 0 ]); } }); }); } function getAnswers ( id , callback ) { zeroFrame . cmd ( \"dbQuery\" , [ \"SELECT answer_id, COUNT(*) as answer_count FROM answers WHERE question_id = \" + id + \" GROUP BY answer_id\" ], function ( answers ) { var result = {}; for ( var i = 0 ; i & lt ; answers . length ; i ++ ) { result [ answers [ i ]. answer_id ] = answers [ i ]. answer_count ; } callback ( result ); }); } \u6838\u5fc3\u4ee3\u7801\u5199\u597d\u4e86\uff0c\u53ea\u5dee\u8bbe\u8ba1\u7f51\u9875, \u8fd9 \u662f\u4e2a\u4f8b\u5b50\u3002","title":"\u8bfb\u53d6\u6570\u636e"},{"location":"merger-sites/","text":"\u805a\u5408\u7ad9\u70b9 (Merger sites) \u770b\u4e0bZeroMe\uff0c\u4e00\u4e2a\u6709\u4e00\u4e07\u7528\u6237\u7684\u793e\u4ea4\u7f51\u7edc\uff0c\u6bcf\u4e2a\u7528\u6237\u90fd\u6709\u5f88\u591a\u6570\u636e\uff0c\u603b\u5171\u5927\u6982600MB\u3002\u5f88\u5927\uff0c\u4e0d\u662f\u5f88\u597d\uff0c\u597d\u5728\u96f6\u7f51\u5f15\u5165\u4e86\u805a\u5408\u7ad9\u70b9\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u7ed3\u6784 \u60f3\u8c61\u4e00\u4e0b\u4e0b\u9762\u7684\u7ed3\u6784\uff1a ZeroMe = 500 MB | +-- data = 500 MB |-----------------------------------------------------------------------------------| | +-- users = 500 MB | | | | +-- user1 = 50 KB | | +-- user2 = 50 KB | | +-- user3 = 50 KB | | +-- user4 = 50 KB | | +-- user5 = 50 KB | | +-- user ... | | +-- user10000 = 50 KB | 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . js = 250 KB +-- index . css = 100 KB +-- index . html = 50 KB \u8fd9\u6837\u7684\u8bdd\u7528\u6237\u5c31\u5f97\u4e0b\u8f7d\u5176\u4ed6\u7528\u6237\u7684\u6240\u6709\u6570\u636e ( userN \u76ee\u5f55). \u8fd9\u6837\u5462: ZeroMe = 400 KB | +-- index . js = 250 KB +-- index . css = 100 KB +-- index . html = 50 KB UserDB = 10 MB | +-- data = 10 MB |----------------------------------------------------------------------------------| | +-- userinfo = 10 MB | | | | +-- user1 = 1 KB | | +-- user2 = 1 KB | | +-- user3 = 1 KB | | +-- user4 = 1 KB | | +-- user5 = 1 KB | | +-- user ... | | +-- user10000 = 1 KB |= 1 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB Hub1 = 167 MB | +-- data = 167 MB |---------------------------------------------------------------------------------| | +-- users = 167 MB | | | | +-- user1 = 50 KB | | +-- user2 = 50 KB | | +-- user ... | | +-- user3333 = 50 KB |= 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB Hub2 = 167 MB | +-- data = 167 MB |---------------------------------------------------------------------------------| | +-- users = 167 MB | | | | +-- user3334 = 50 KB | | +-- user3335 = 50 KB | | +-- user ... | | +-- user6666 = 50 KB |= 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB Hub3 = 167 MB | +-- data = 167 MB |----------------------------------------------------------------------------------| | +-- users = 167 MB | | | | +-- user6667 = 50 KB | | +-- user6668 = 50 KB | | +-- user ... | | +-- user10000 = 50 KB |= 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB \u6240\u4ee5\u6211\u4eec\u5c31\u628a\u6570\u636e\u5206\u5272\u5165\u4e0d\u540c\u7ad9\u70b9\uff0c\u805a\u5408\u7ad9\u5c31\u662f\u8fd9\u6837\u3002 ZeroMe ( 1MeFqFfFFGQfa1J3gJyYYUvb5Lksczq7nH ) \u53ea\u6709\u7f51\u9875\u548c\u4ee3\u7801, UserDB ( 1UDbADib99KE9d3qZ87NqJF2QLTHmMkoV ) \u7528\u6237\u5143\u6570\u636e,\u5176\u4ed6\u7ad9\u70b9 - hubs \u6709\u5176\u4ed6\u6570\u636e\u3002\u5f53\u7136\uff0c\u53ef\u4ee5\u4e0d\u4e0b\u8f7d\u8fd9\u4e9bhub\u7ad9\u70b9\uff0c\u90fd\u662f\u53ef\u9009\u7684\u3002 \u4f8b\u5982\uff0c\u82e5\u4f60\u60f3\u4e0b\u8f7d ZeroMe , UserDB \u548c Hub1 , \u4f60\u53ef\u4ee5\u8054\u7cfb user878 \u548c user678 \u5e76\u5f97\u77e5\u90a3\u8fd8\u6709 user5412 , user3453 \u548c user6789 \u90fd\u5728 Hub2 \u548c Hub3 \u7ad9\u70b9. \u8981\u60f3\u5411 user6789 \u6253\u62db\u547c\u6216\u8005\u8bfb\u4ed6\u7684\u5e16\u5b50\uff0c\u5f97\u5148\u4e0b\u8f7d Hub3 . \u4f46\u901a\u5e38\u4f60\u53ea\u9700\u8981\u8bfb\u4e00\u90e8\u5206\u5e16\u5b50\uff0c\u5e76\u4e0d\u662f\u5168\u7f51\u7684\u5e16\u5b50\u3002\u6240\u4ee5\u4e0b\u8f7d\u4e00\u4e24\u4e2aHub\u591f\u4e86\u3002 \u521b\u5efa\u805a\u5408\u7ad9\u70b9 \u5148\u521b\u5efa\u65b0\u7ad9\u70b9\uff0c\u6253\u5f00\u4fa7\u8fb9\u680f\uff0c\u547d\u540d\u7ad9\u70b9\u4e3a PostHere . \u79fb\u9664 index.html \u4e2d <body> \u5143\u7d20\u91cc\u7684\u6240\u6709\u5185\u5bb9\uff0c\u7528\u6237\u6570\u636e\u5b58\u5728Hub\u91cc\uff0c\u4ee3\u7801\u653e\u5728 PostHere \u7ad9\u70b9. \u521b\u5efa Hub \u521b\u5efa\u4e00\u4e2a\u65b0\u7ad9\u70b9\u5b58\u50a8\u7528\u6237\u5185\u5bb9\uff0c\u6211\u521b\u5efa\u7684\u7ad9\u70b9\u5730\u5740\u4e3a 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ \u3002 \u628a index.html \u6539\u4e3a: &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt; &lt;base href=\"\" target=\"_top\" id=\"base\"&gt; &lt;script&gt; base.href = document.location.href.replace(\"/media\", \"\").replace(\"index.html\", \"\").replace(/[&amp;?]wrapper=False/, \"\").replace(/[&amp;?]wrapper_nonce=[A-Za-z0-9]+/, \"\") &lt;/script&gt; &lt;/head&gt; &lt;body&gt; Use PostHere to watch content of this site. &lt;/body&gt; &lt;/html&gt; \u6539\u6807\u9898\u5e76\u7b7e\u540d content.json . \u914d\u7f6e\u805a\u5408\u7ad9\u70b9 \u805a\u5408\u7ad9\u70b9 (\u5728\u6211\u8fd9 1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm ) \u548c \u88ab\u805a\u5408\u7ad9\u70b9 ( 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ ) \u9700\u8981\u4e92\u76f8\u540c\u610f\u624d\u80fd\u5efa\u7acb\u94fe\u63a5\u3002 \u6240\u4ee5\u628a\u4e0b\u5217\u5185\u5bb9\u6dfb\u52a0\u5230 \u88ab\u805a\u5408\u7ad9\u70b9 ( 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ )\u7684\u6839 content.json \"merged_type\": \"PostHere\", \u521b\u5efa\u76ee\u5f55 merged-PostHere \u4e8e\u805a\u5408\u7ad9\u70b9\u7684\u6839\u76ee\u5f55\uff0c\u8ba9\u7528\u6237\u7ed9\u8fd9\u4e2a\u76ee\u5f55\u7b7e\u540d\uff0c\u5c31\u6dfb\u52a0: \"ignore\": \"merged-.*\", \u6dfb\u52a0\u5230\u4e3b\u7ad9\u70b9\u7684 content.json \uff0c\u8fd8\u9700\u8981\u8bf7\u6c42 Merger:PostHere \u7684\u8bb8\u53ef: +-------------------------------------------------------------------------+ | wrapperPermissionAdd | +-------------------------------------------------------------------------+ | Request new permission for site | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | permission | Name of permission | +-------------------------+-----------------------------------------------+ | Return: \"Granted\" if allowed, not send when disallowed | +-------------------------------------------------------------------------+ So, add the following to js/index.js file and add it to index.html of PostHere: window . zeroFrame = new ZeroFrame (); function requestPermission ( permission , callback ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { // Already have permission if ( siteInfo . settings . permissions . indexOf ( permission ) & gt ; - 1 ) { callback (); return ; } zeroFrame . cmd ( \"wrapperPermissionAdd\" , [ permission ], callback ); }); } requestPermission ( \"Merger:PostHere\" , function () { // TODO }); \u8bbf\u95ee\u805a\u5408\u7ad9 ZeroNet doesn't provide us a way to read and write other site's content, so MergerSite plugin makes all merged-... directories virtual. So to ZeroNet merged-PostHere structure is: merged-PostHere | +-- merger.db +-- 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ | +-- js |----------------------------------------------------------------------------------| | +-- ZeroFrame.js |roFrame.js |js |js |js |js |js |js |js |js |js |js |js |js |js |js +-- data |--------------------------------------------------------------------------------------| | +-- users | | | | +-- user1 | | | | | | +-- data.json | | | +-- content.json | | +-- content.json |ntent.json |on |on |on |on |on |on |on |on |on |on |on |on |on |on +-- index.html We have set db_path to merged-PostHere/merger.db because ZeroNet can gather data only from files which are in database directory, which is in this case merged-PostHere . So, if we want to access data/users/{address}/data.json of 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ , we have to access merged-PostHere/1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ/data/users/{address}/data.json . In the following part of the tutorial, we will fill our PostHere zite with user content.","title":"\u805a\u5408\u7ad9"},{"location":"merger-sites/#merger-sites","text":"\u770b\u4e0bZeroMe\uff0c\u4e00\u4e2a\u6709\u4e00\u4e07\u7528\u6237\u7684\u793e\u4ea4\u7f51\u7edc\uff0c\u6bcf\u4e2a\u7528\u6237\u90fd\u6709\u5f88\u591a\u6570\u636e\uff0c\u603b\u5171\u5927\u6982600MB\u3002\u5f88\u5927\uff0c\u4e0d\u662f\u5f88\u597d\uff0c\u597d\u5728\u96f6\u7f51\u5f15\u5165\u4e86\u805a\u5408\u7ad9\u70b9\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002","title":"\u805a\u5408\u7ad9\u70b9 (Merger sites)"},{"location":"merger-sites/#_1","text":"\u60f3\u8c61\u4e00\u4e0b\u4e0b\u9762\u7684\u7ed3\u6784\uff1a ZeroMe = 500 MB | +-- data = 500 MB |-----------------------------------------------------------------------------------| | +-- users = 500 MB | | | | +-- user1 = 50 KB | | +-- user2 = 50 KB | | +-- user3 = 50 KB | | +-- user4 = 50 KB | | +-- user5 = 50 KB | | +-- user ... | | +-- user10000 = 50 KB | 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . js = 250 KB +-- index . css = 100 KB +-- index . html = 50 KB \u8fd9\u6837\u7684\u8bdd\u7528\u6237\u5c31\u5f97\u4e0b\u8f7d\u5176\u4ed6\u7528\u6237\u7684\u6240\u6709\u6570\u636e ( userN \u76ee\u5f55). \u8fd9\u6837\u5462: ZeroMe = 400 KB | +-- index . js = 250 KB +-- index . css = 100 KB +-- index . html = 50 KB UserDB = 10 MB | +-- data = 10 MB |----------------------------------------------------------------------------------| | +-- userinfo = 10 MB | | | | +-- user1 = 1 KB | | +-- user2 = 1 KB | | +-- user3 = 1 KB | | +-- user4 = 1 KB | | +-- user5 = 1 KB | | +-- user ... | | +-- user10000 = 1 KB |= 1 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB Hub1 = 167 MB | +-- data = 167 MB |---------------------------------------------------------------------------------| | +-- users = 167 MB | | | | +-- user1 = 50 KB | | +-- user2 = 50 KB | | +-- user ... | | +-- user3333 = 50 KB |= 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB Hub2 = 167 MB | +-- data = 167 MB |---------------------------------------------------------------------------------| | +-- users = 167 MB | | | | +-- user3334 = 50 KB | | +-- user3335 = 50 KB | | +-- user ... | | +-- user6666 = 50 KB |= 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB Hub3 = 167 MB | +-- data = 167 MB |----------------------------------------------------------------------------------| | +-- users = 167 MB | | | | +-- user6667 = 50 KB | | +-- user6668 = 50 KB | | +-- user ... | | +-- user10000 = 50 KB |= 50 KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB | KB +-- index . html = 5 KB \u6240\u4ee5\u6211\u4eec\u5c31\u628a\u6570\u636e\u5206\u5272\u5165\u4e0d\u540c\u7ad9\u70b9\uff0c\u805a\u5408\u7ad9\u5c31\u662f\u8fd9\u6837\u3002 ZeroMe ( 1MeFqFfFFGQfa1J3gJyYYUvb5Lksczq7nH ) \u53ea\u6709\u7f51\u9875\u548c\u4ee3\u7801, UserDB ( 1UDbADib99KE9d3qZ87NqJF2QLTHmMkoV ) \u7528\u6237\u5143\u6570\u636e,\u5176\u4ed6\u7ad9\u70b9 - hubs \u6709\u5176\u4ed6\u6570\u636e\u3002\u5f53\u7136\uff0c\u53ef\u4ee5\u4e0d\u4e0b\u8f7d\u8fd9\u4e9bhub\u7ad9\u70b9\uff0c\u90fd\u662f\u53ef\u9009\u7684\u3002 \u4f8b\u5982\uff0c\u82e5\u4f60\u60f3\u4e0b\u8f7d ZeroMe , UserDB \u548c Hub1 , \u4f60\u53ef\u4ee5\u8054\u7cfb user878 \u548c user678 \u5e76\u5f97\u77e5\u90a3\u8fd8\u6709 user5412 , user3453 \u548c user6789 \u90fd\u5728 Hub2 \u548c Hub3 \u7ad9\u70b9. \u8981\u60f3\u5411 user6789 \u6253\u62db\u547c\u6216\u8005\u8bfb\u4ed6\u7684\u5e16\u5b50\uff0c\u5f97\u5148\u4e0b\u8f7d Hub3 . \u4f46\u901a\u5e38\u4f60\u53ea\u9700\u8981\u8bfb\u4e00\u90e8\u5206\u5e16\u5b50\uff0c\u5e76\u4e0d\u662f\u5168\u7f51\u7684\u5e16\u5b50\u3002\u6240\u4ee5\u4e0b\u8f7d\u4e00\u4e24\u4e2aHub\u591f\u4e86\u3002","title":"\u7ed3\u6784"},{"location":"merger-sites/#_2","text":"\u5148\u521b\u5efa\u65b0\u7ad9\u70b9\uff0c\u6253\u5f00\u4fa7\u8fb9\u680f\uff0c\u547d\u540d\u7ad9\u70b9\u4e3a PostHere . \u79fb\u9664 index.html \u4e2d <body> \u5143\u7d20\u91cc\u7684\u6240\u6709\u5185\u5bb9\uff0c\u7528\u6237\u6570\u636e\u5b58\u5728Hub\u91cc\uff0c\u4ee3\u7801\u653e\u5728 PostHere \u7ad9\u70b9.","title":"\u521b\u5efa\u805a\u5408\u7ad9\u70b9"},{"location":"merger-sites/#hub","text":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7ad9\u70b9\u5b58\u50a8\u7528\u6237\u5185\u5bb9\uff0c\u6211\u521b\u5efa\u7684\u7ad9\u70b9\u5730\u5740\u4e3a 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ \u3002 \u628a index.html \u6539\u4e3a: &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt; &lt;base href=\"\" target=\"_top\" id=\"base\"&gt; &lt;script&gt; base.href = document.location.href.replace(\"/media\", \"\").replace(\"index.html\", \"\").replace(/[&amp;?]wrapper=False/, \"\").replace(/[&amp;?]wrapper_nonce=[A-Za-z0-9]+/, \"\") &lt;/script&gt; &lt;/head&gt; &lt;body&gt; Use PostHere to watch content of this site. &lt;/body&gt; &lt;/html&gt; \u6539\u6807\u9898\u5e76\u7b7e\u540d content.json .","title":"\u521b\u5efa Hub"},{"location":"merger-sites/#_3","text":"\u805a\u5408\u7ad9\u70b9 (\u5728\u6211\u8fd9 1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm ) \u548c \u88ab\u805a\u5408\u7ad9\u70b9 ( 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ ) \u9700\u8981\u4e92\u76f8\u540c\u610f\u624d\u80fd\u5efa\u7acb\u94fe\u63a5\u3002 \u6240\u4ee5\u628a\u4e0b\u5217\u5185\u5bb9\u6dfb\u52a0\u5230 \u88ab\u805a\u5408\u7ad9\u70b9 ( 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ )\u7684\u6839 content.json \"merged_type\": \"PostHere\", \u521b\u5efa\u76ee\u5f55 merged-PostHere \u4e8e\u805a\u5408\u7ad9\u70b9\u7684\u6839\u76ee\u5f55\uff0c\u8ba9\u7528\u6237\u7ed9\u8fd9\u4e2a\u76ee\u5f55\u7b7e\u540d\uff0c\u5c31\u6dfb\u52a0: \"ignore\": \"merged-.*\", \u6dfb\u52a0\u5230\u4e3b\u7ad9\u70b9\u7684 content.json \uff0c\u8fd8\u9700\u8981\u8bf7\u6c42 Merger:PostHere \u7684\u8bb8\u53ef: +-------------------------------------------------------------------------+ | wrapperPermissionAdd | +-------------------------------------------------------------------------+ | Request new permission for site | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | permission | Name of permission | +-------------------------+-----------------------------------------------+ | Return: \"Granted\" if allowed, not send when disallowed | +-------------------------------------------------------------------------+ So, add the following to js/index.js file and add it to index.html of PostHere: window . zeroFrame = new ZeroFrame (); function requestPermission ( permission , callback ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { // Already have permission if ( siteInfo . settings . permissions . indexOf ( permission ) & gt ; - 1 ) { callback (); return ; } zeroFrame . cmd ( \"wrapperPermissionAdd\" , [ permission ], callback ); }); } requestPermission ( \"Merger:PostHere\" , function () { // TODO });","title":"\u914d\u7f6e\u805a\u5408\u7ad9\u70b9"},{"location":"merger-sites/#_4","text":"ZeroNet doesn't provide us a way to read and write other site's content, so MergerSite plugin makes all merged-... directories virtual. So to ZeroNet merged-PostHere structure is: merged-PostHere | +-- merger.db +-- 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ | +-- js |----------------------------------------------------------------------------------| | +-- ZeroFrame.js |roFrame.js |js |js |js |js |js |js |js |js |js |js |js |js |js |js +-- data |--------------------------------------------------------------------------------------| | +-- users | | | | +-- user1 | | | | | | +-- data.json | | | +-- content.json | | +-- content.json |ntent.json |on |on |on |on |on |on |on |on |on |on |on |on |on |on +-- index.html We have set db_path to merged-PostHere/merger.db because ZeroNet can gather data only from files which are in database directory, which is in this case merged-PostHere . So, if we want to access data/users/{address}/data.json of 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ , we have to access merged-PostHere/1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ/data/users/{address}/data.json . In the following part of the tutorial, we will fill our PostHere zite with user content.","title":"\u8bbf\u95ee\u805a\u5408\u7ad9"},{"location":"mergxed-sites/","text":"\u7f16\u8f91\u805a\u5408\u7ad9\u70b9 \u524d\u9762\u4e00\u7ae0\uff0c\u6211\u4eec\u5efa\u4e86\u4e00\u4e2a\u805a\u5408\u8005\u7ad9\u70b9\u548c\u88ab\u805a\u5408\u7ad9\uff08hub\uff09\uff0c\u7528\u4e8e\u642d\u5efa PostHere\u3002 \u521b\u5efa\u7528\u6237\u6570\u636e\u7684\u76ee\u5f55 \u5728\u88ab\u805a\u5408\u7ad9\u70b9\uff08hub\uff09\u4e2d\u521b\u5efa\u6587\u4ef6 data/users/content.json { \"ignore\" : \".*\" , \"user_contents\" : { \"cert_signers\" : { \"zeroid.bit\" : [ \"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\" ] }, \"permission_rules\" : { \".*\" : { \"files_allowed\" : \"data.json\" , \"max_size\" : 50000 } }, \"permissions\" : {} } } ignore - \u4e0d\u628a\u7528\u6237\u6dfb\u52a0\u5230 files \u5c5e\u6027.\u3002 user_contents - \u7531\u7528\u6237\u7b7e\u540d\u7684\u6570\u636e\u3002 user_contents.cert_signers - \u5141\u8bb8\u7684\u8bc1\u4e66\u9881\u53d1\u8005\u3002 user_contents.permission_rules - \u5bf9\u7b26\u5408\u67d0\u79cd\u6761\u4ef6\u7684\u7528\u6237\u7684\u89c4\u5219\u3002 user_contents.permissions - \u9488\u5bf9\u5355\u4e2a\u7528\u6237\u7684\u89c4\u5219\u3002 \u590d\u5236\u5b8c\u540e\u628a\u8fd9\u4e2a\u6587\u4ef6\u5f15\u5165\u81f3 content.json : \"ignore\" : \"data/users/.*\" , \"includes\" : { \"data/users/content.json\" : { \"signers\" : [], \"signers_required\" : 1 } } , \u7b7e\u540d content.json \u548c data/users/content.json \u6570\u636e\u5e93\u6a21\u5f0f \u6211\u4eec\u4f7f\u7528 SQLite\uff0c\u628a\u4e0b\u9762\u8fd9\u6bb5\u590d\u5236\u5230\u4e3b\u7ad9\u70b9\u7684 dbschema.json { \"db_name\" : \"merger\" , \"db_file\" : \"merged-PostHere/merger.db\" , \"version\" : 3 , \"maps\" : { \".+/data/users/.+/content.json\" : { \"to_json_table\" : [ \"cert_user_id\" ] }, \".+/data/users/.+/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" } ] } }, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"site\" , \"TEXT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ], [ \"cert_user_id\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, site, file_name)\" ], \"schema_changed\" : 2 }, \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"title\" , \"text\" ], [ \"content\" , \"text\" ], [ \"date_added\" , \"integer\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX post_id ON posts(id)\" ], \"schema_changed\" : 2 } } } version: 3 \u610f\u4e3a json \u8868\u4e5f\u6709 site \u5b57\u6bb5\u3002\u5bf9\u4e8e\u805a\u5408\u8005\u7ad9\u70b9\uff0c site \u5c31\u662f\u88ab\u805a\u5408\u7ad9\u70b9\u7684\u5730\u5740\uff0c merged-PostHere \u4e5f\u53ef\u4ee5\u7528\u3002 .+/data/users/.+/content.json \u5bf9\u8c61\u4e2d\u7684 to_json_table \uff1a json \u4e5f\u6709 cert_user_id \u5b57\u6bb5\u3002 to_json_table \u610f\u4e3a\uff1a \u201c\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u7684 cert_user_id \u5c5e\u6027\u4f5c\u4e3a json \u8868\u4e2d\u7684\u5f53\u524d\u6587\u4ef6\u5bf9\u5e94\u7684\u4e00\u884c\u7684 cert_user_id \u5b57\u6bb5\u7684\u503c\u201d. cert_user_id \u5c31\u662f\u7528\u6237\u540d\u3002 \u83b7\u53d6\u7528\u6237\u540d \u793a\u4f8b\uff1a +-------------------------------------------------------------------------+ | json | +---------+---------+-------------------+--------------+------------------+ | json_id | site | directory | file_name | cert_user_id | +---------+---------+-------------------+--------------+------------------+ | 1 | 1Red... | data/users/1Cv... | data.json | NULL | +---------+---------+-------------------+--------------+------------------+ | 2 | 1Red... | data/users/1CV... | content.json | ivanq@zeroid.bit | +---------+---------+-------------------+--------------+------------------+ +-------------------------------------------------------------------------+ | posts | +---------+-------------+--------------------------+------------+---------+ | id | title | content | date_added | json_id | +---------+-------------+--------------------------+------------+---------+ | 1 | Hello world | My first post in this... | 1234567890 | 1 | +---------+-------------+--------------------------+------------+---------+ \u4e3a\u4e86\u83b7\u5f97\u6587\u7ae0\u4f5c\u8005\u540d\uff0c\u5bf9\u4e8e\u6bcf\u7bc7\u6587\u7ae0\uff0c\u90fd\u8981\u5148\u83b7\u53d6\u76f8\u5e94\u7684 json_id \uff0c\u518d\u4e8e json \u8868\u6309\u6b64id\u4e2d\u53d6\u5f97 directory \u5b57\u6bb5\uff0c\u7136\u540e\u518d\u5728 json \u8868\u4e2d\u627e\u4e00\u6761\u540c\u4e00 directory \u4e14 file_name = content.json \u7684\u6570\u636e\uff0c\u6700\u7ec8\u53d6\u5f97 cert_user_id \u3002 \u6570\u636e\u5e93\u67e5\u8be2\u8bed\u53e5\uff1a SELECT posts . * , json2 . cert_user_id as username FROM posts , json , json AS json2 WHERE json . directory = json2 . directory AND json2 . file_name = \"content.json\" AND posts . json_id = json . json_id \u5f53\u7136\u8fd8\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a \".+/data/users/.+/content.json\" : { \"to_json_table\" : [ \"cert_user_id\" ], \"file_name\" : \"data.json\" } , file_name \u76f8\u5f53\u4e8e JOIN \u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7528\u6237\u7684 content.json , \u96f6\u7f51\u4f1a\u627e\u4e00\u6761 site \u548c directory \u5c5e\u6027\u76f8\u540c\u4e14 file_name = data.json \u7684\u6570\u636e\uff0c\u5e76\u628a cert_user_id \u6dfb\u52a0\u5230\u8fd9\u884c\u6570\u636e\u3002\u7ed3\u6784\u5c31\u53d8\u6210\u4e86\uff1a +-------------------------------------------------------------------------+ | json | +---------+---------+-------------------+--------------+------------------+ | json_id | site | directory | file_name | cert_user_id | +---------+---------+-------------------+--------------+------------------+ | 1 | 1Red... | data/users/1Cv... | data.json | ivanq@zeroid.bit | +---------+---------+-------------------+--------------+------------------+ +-------------------------------------------------------------------------+ | posts | +---------+-------------+--------------------------+------------+---------+ | id | title | content | date_added | json_id | +---------+-------------+--------------------------+------------+---------+ | 1 | Hello world | My first post in this... | 1234567890 | 1 | +---------+-------------+--------------------------+------------+---------+ \u53ef\u4ee5\u7b80\u5316\u67e5\u8be2\u8bed\u53e5\u4e86\uff1a SELECT posts . * , json . cert_user_id AS username FROM posts , json WHERE posts . json_id = json . json_id \u522b\u5fd8\u4e86\uff0c\u96f6\u7f51\u5728\u805a\u5408\u8005\u7ad9\u70b9\u4e2d\u4f7f\u7528\u865a\u62df\u76ee\u5f55\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u6539\u6587\u4ef6 merged-PostHere/{hub}/data/users/{address}/data.json . \u589e\u5220\u5b50\u7ad9 \u7528API mergerSiteList \u5217\u51fa\u5df2\u805a\u5408\u7684\u5b50\u7ad9\u3002 +-------------------------------------------------------------------------+ | mergerSiteList | +-------------------------------------------------------------------------+ | Return merged sites. | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | query_site_info | If True, then gives back detailed site info | | | for merged sites | +-------------------------+-----------------------------------------------+ | Return: List of merger sites as object | +-------------------------------------------------------------------------+ \u8bd5\u7740\u8fd0\u884c zeroFrame.cmd(\"mergerSiteList\", [false], console.log.bind(console)); \uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230 Object { 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ: \"PostHere\" } \u3002 \u4ee5\u53ca\u5176\u4ed6\u5e38\u7528\u547d\u4ee4: +-------------------------------------------------------------------------+ | mergerSiteAdd | +-------------------------------------------------------------------------+ | Start downloading new merger site (requires confirmation if called | | twice in 10 seconds) | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | addresses | Site address or list of site addresses | +-------------------------+-----------------------------------------------+ | Return: Always \"ok\" (even before site is added) | +-------------------------------------------------------------------------+ +-------------------------------------------------------------------------+ | mergerSiteDelete | +-------------------------------------------------------------------------+ | Stop seeding and delete a merged site | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | address | Site address | +-------------------------+-----------------------------------------------+ | Return: \"ok\" or object with \"error\" property | +-------------------------------------------------------------------------+ \u4f8b\u5b50 \u5df2\u5b8c\u6210\u7684\u7ad9\u70b9\uff1a \u8fd9 \u548c \u8fd9 .","title":"\u805a\u5408\u540e\u7684\u6570\u636e"},{"location":"mergxed-sites/#_1","text":"\u524d\u9762\u4e00\u7ae0\uff0c\u6211\u4eec\u5efa\u4e86\u4e00\u4e2a\u805a\u5408\u8005\u7ad9\u70b9\u548c\u88ab\u805a\u5408\u7ad9\uff08hub\uff09\uff0c\u7528\u4e8e\u642d\u5efa PostHere\u3002","title":"\u7f16\u8f91\u805a\u5408\u7ad9\u70b9"},{"location":"mergxed-sites/#_2","text":"\u5728\u88ab\u805a\u5408\u7ad9\u70b9\uff08hub\uff09\u4e2d\u521b\u5efa\u6587\u4ef6 data/users/content.json { \"ignore\" : \".*\" , \"user_contents\" : { \"cert_signers\" : { \"zeroid.bit\" : [ \"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\" ] }, \"permission_rules\" : { \".*\" : { \"files_allowed\" : \"data.json\" , \"max_size\" : 50000 } }, \"permissions\" : {} } } ignore - \u4e0d\u628a\u7528\u6237\u6dfb\u52a0\u5230 files \u5c5e\u6027.\u3002 user_contents - \u7531\u7528\u6237\u7b7e\u540d\u7684\u6570\u636e\u3002 user_contents.cert_signers - \u5141\u8bb8\u7684\u8bc1\u4e66\u9881\u53d1\u8005\u3002 user_contents.permission_rules - \u5bf9\u7b26\u5408\u67d0\u79cd\u6761\u4ef6\u7684\u7528\u6237\u7684\u89c4\u5219\u3002 user_contents.permissions - \u9488\u5bf9\u5355\u4e2a\u7528\u6237\u7684\u89c4\u5219\u3002 \u590d\u5236\u5b8c\u540e\u628a\u8fd9\u4e2a\u6587\u4ef6\u5f15\u5165\u81f3 content.json : \"ignore\" : \"data/users/.*\" , \"includes\" : { \"data/users/content.json\" : { \"signers\" : [], \"signers_required\" : 1 } } , \u7b7e\u540d content.json \u548c data/users/content.json","title":"\u521b\u5efa\u7528\u6237\u6570\u636e\u7684\u76ee\u5f55"},{"location":"mergxed-sites/#_3","text":"\u6211\u4eec\u4f7f\u7528 SQLite\uff0c\u628a\u4e0b\u9762\u8fd9\u6bb5\u590d\u5236\u5230\u4e3b\u7ad9\u70b9\u7684 dbschema.json { \"db_name\" : \"merger\" , \"db_file\" : \"merged-PostHere/merger.db\" , \"version\" : 3 , \"maps\" : { \".+/data/users/.+/content.json\" : { \"to_json_table\" : [ \"cert_user_id\" ] }, \".+/data/users/.+/data.json\" : { \"to_table\" : [ { \"node\" : \"posts\" , \"table\" : \"posts\" } ] } }, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"site\" , \"TEXT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ], [ \"cert_user_id\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, site, file_name)\" ], \"schema_changed\" : 2 }, \"posts\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"title\" , \"text\" ], [ \"content\" , \"text\" ], [ \"date_added\" , \"integer\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX post_id ON posts(id)\" ], \"schema_changed\" : 2 } } } version: 3 \u610f\u4e3a json \u8868\u4e5f\u6709 site \u5b57\u6bb5\u3002\u5bf9\u4e8e\u805a\u5408\u8005\u7ad9\u70b9\uff0c site \u5c31\u662f\u88ab\u805a\u5408\u7ad9\u70b9\u7684\u5730\u5740\uff0c merged-PostHere \u4e5f\u53ef\u4ee5\u7528\u3002 .+/data/users/.+/content.json \u5bf9\u8c61\u4e2d\u7684 to_json_table \uff1a json \u4e5f\u6709 cert_user_id \u5b57\u6bb5\u3002 to_json_table \u610f\u4e3a\uff1a \u201c\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u7684 cert_user_id \u5c5e\u6027\u4f5c\u4e3a json \u8868\u4e2d\u7684\u5f53\u524d\u6587\u4ef6\u5bf9\u5e94\u7684\u4e00\u884c\u7684 cert_user_id \u5b57\u6bb5\u7684\u503c\u201d. cert_user_id \u5c31\u662f\u7528\u6237\u540d\u3002","title":"\u6570\u636e\u5e93\u6a21\u5f0f"},{"location":"mergxed-sites/#_4","text":"\u793a\u4f8b\uff1a +-------------------------------------------------------------------------+ | json | +---------+---------+-------------------+--------------+------------------+ | json_id | site | directory | file_name | cert_user_id | +---------+---------+-------------------+--------------+------------------+ | 1 | 1Red... | data/users/1Cv... | data.json | NULL | +---------+---------+-------------------+--------------+------------------+ | 2 | 1Red... | data/users/1CV... | content.json | ivanq@zeroid.bit | +---------+---------+-------------------+--------------+------------------+ +-------------------------------------------------------------------------+ | posts | +---------+-------------+--------------------------+------------+---------+ | id | title | content | date_added | json_id | +---------+-------------+--------------------------+------------+---------+ | 1 | Hello world | My first post in this... | 1234567890 | 1 | +---------+-------------+--------------------------+------------+---------+ \u4e3a\u4e86\u83b7\u5f97\u6587\u7ae0\u4f5c\u8005\u540d\uff0c\u5bf9\u4e8e\u6bcf\u7bc7\u6587\u7ae0\uff0c\u90fd\u8981\u5148\u83b7\u53d6\u76f8\u5e94\u7684 json_id \uff0c\u518d\u4e8e json \u8868\u6309\u6b64id\u4e2d\u53d6\u5f97 directory \u5b57\u6bb5\uff0c\u7136\u540e\u518d\u5728 json \u8868\u4e2d\u627e\u4e00\u6761\u540c\u4e00 directory \u4e14 file_name = content.json \u7684\u6570\u636e\uff0c\u6700\u7ec8\u53d6\u5f97 cert_user_id \u3002 \u6570\u636e\u5e93\u67e5\u8be2\u8bed\u53e5\uff1a SELECT posts . * , json2 . cert_user_id as username FROM posts , json , json AS json2 WHERE json . directory = json2 . directory AND json2 . file_name = \"content.json\" AND posts . json_id = json . json_id \u5f53\u7136\u8fd8\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a \".+/data/users/.+/content.json\" : { \"to_json_table\" : [ \"cert_user_id\" ], \"file_name\" : \"data.json\" } , file_name \u76f8\u5f53\u4e8e JOIN \u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7528\u6237\u7684 content.json , \u96f6\u7f51\u4f1a\u627e\u4e00\u6761 site \u548c directory \u5c5e\u6027\u76f8\u540c\u4e14 file_name = data.json \u7684\u6570\u636e\uff0c\u5e76\u628a cert_user_id \u6dfb\u52a0\u5230\u8fd9\u884c\u6570\u636e\u3002\u7ed3\u6784\u5c31\u53d8\u6210\u4e86\uff1a +-------------------------------------------------------------------------+ | json | +---------+---------+-------------------+--------------+------------------+ | json_id | site | directory | file_name | cert_user_id | +---------+---------+-------------------+--------------+------------------+ | 1 | 1Red... | data/users/1Cv... | data.json | ivanq@zeroid.bit | +---------+---------+-------------------+--------------+------------------+ +-------------------------------------------------------------------------+ | posts | +---------+-------------+--------------------------+------------+---------+ | id | title | content | date_added | json_id | +---------+-------------+--------------------------+------------+---------+ | 1 | Hello world | My first post in this... | 1234567890 | 1 | +---------+-------------+--------------------------+------------+---------+ \u53ef\u4ee5\u7b80\u5316\u67e5\u8be2\u8bed\u53e5\u4e86\uff1a SELECT posts . * , json . cert_user_id AS username FROM posts , json WHERE posts . json_id = json . json_id \u522b\u5fd8\u4e86\uff0c\u96f6\u7f51\u5728\u805a\u5408\u8005\u7ad9\u70b9\u4e2d\u4f7f\u7528\u865a\u62df\u76ee\u5f55\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u6539\u6587\u4ef6 merged-PostHere/{hub}/data/users/{address}/data.json .","title":"\u83b7\u53d6\u7528\u6237\u540d"},{"location":"mergxed-sites/#_5","text":"\u7528API mergerSiteList \u5217\u51fa\u5df2\u805a\u5408\u7684\u5b50\u7ad9\u3002 +-------------------------------------------------------------------------+ | mergerSiteList | +-------------------------------------------------------------------------+ | Return merged sites. | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | query_site_info | If True, then gives back detailed site info | | | for merged sites | +-------------------------+-----------------------------------------------+ | Return: List of merger sites as object | +-------------------------------------------------------------------------+ \u8bd5\u7740\u8fd0\u884c zeroFrame.cmd(\"mergerSiteList\", [false], console.log.bind(console)); \uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230 Object { 1RedXn7jxM23y4WsR7ByWzhjFaCcBJwVQ: \"PostHere\" } \u3002 \u4ee5\u53ca\u5176\u4ed6\u5e38\u7528\u547d\u4ee4: +-------------------------------------------------------------------------+ | mergerSiteAdd | +-------------------------------------------------------------------------+ | Start downloading new merger site (requires confirmation if called | | twice in 10 seconds) | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | addresses | Site address or list of site addresses | +-------------------------+-----------------------------------------------+ | Return: Always \"ok\" (even before site is added) | +-------------------------------------------------------------------------+ +-------------------------------------------------------------------------+ | mergerSiteDelete | +-------------------------------------------------------------------------+ | Stop seeding and delete a merged site | +-------------------------+-----------------------------------------------+ | Parameter | Description | +-------------------------+-----------------------------------------------+ | address | Site address | +-------------------------+-----------------------------------------------+ | Return: \"ok\" or object with \"error\" property | +-------------------------------------------------------------------------+","title":"\u589e\u5220\u5b50\u7ad9"},{"location":"mergxed-sites/#_6","text":"\u5df2\u5b8c\u6210\u7684\u7ad9\u70b9\uff1a \u8fd9 \u548c \u8fd9 .","title":"\u4f8b\u5b50"},{"location":"security/","text":"\u5b89\u5168 \u8fd9\u7ae0\u8bb2\u96f6\u7f51\u5b89\u5168\u3002\u5982\u679c\u4e0d\u592a\u611f\u5174\u8da3\u6216\u8005\u6ca1\u6cd5\u7406\u89e3\uff0c\u7a0d\u5fae\u770b\u770b\u5c31\u597d\u3002 \u6bcf\u4e2a\u7ad9\u70b9\u90fd\u6709\u516c\u94a5\u548c\u79c1\u94a5\u3002\u8f93\u5165 http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/ \u8bbf\u95ee ZeroHello - \u5176\u4e2d\uff0c 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D \u4e3a\u516c\u94a5\u3002\u53ea\u6709\u7ad9\u957f\u6709\u79c1\u94a5\uff0c\u7528\u6765\u53d1\u5e03\u5185\u5bb9\u3002 \u4e0b\u8f7d\u7ad9\u70b9\u65f6\uff0c\u96f6\u7f51\u4f1a\u8fde\u63a5\u5df2\u77e5\u8282\u70b9\u5e76\u5411\u5b83\u4eec\u7d22\u8981\u6587\u4ef6\u3002 \u6ca1\u6709\u79c1\u94a5\u5c31\u65e0\u6cd5\u66f4\u6539\u7f51\u7ad9\u5185\u5bb9\u3002 \u9519\u8bef\u7684 SHA512 \u96f6\u7f51\u4e2d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4e3a\u5176\u6240\u8bbf\u95ee\u8fc7\u7684\u7ad9\u70b9\u670d\u52a1\u3002\u4f8b\u5982, Windows \u4e0a\u6709 ZeroMe , iPad \u60f3\u8981\u8bbf\u95ee\u8fd9\u4e2a\u7ad9\u70b9\uff0c iPad \u5c31\u4f1a\u76f4\u63a5 \u8fde\u63a5 Windows \u5e76\u8bf4\uff1a iPad : \u563f, Windows , \u7ed9\u6211 ZeroMe \u7684 content.json Windows : \u55ef\uff0c\u7ed9\u4f60 iPad : \u8c22\u5566\uff0c\u6211\u8fd8\u8981 index.html , js/all.js \u4ee5\u53ca ZeroMe \u7684 css/all.css Windows : \u7ed9\u4f60 index.html : ... \u4f46\u662f\u6211\u6ca1\u6709 js/all.js \u548c css/all.css , \u62b1\u6b49\u3002 Windows \u7ed9\u4e86 iPad index.html , \u4f46 iPad \u53bb\u54ea\u627e js/all.js \u548c css/all.css \u5462\uff1f\u4ece Windows \u6240\u77e5\u7684\u8282\u70b9\uff1f\u4f46\u8981\u662f Windows \u6000\u6709\u6076\u610f\uff0c\u4f1a\u63d0\u4f9b\u9519\u8bef\u7684\u8282\u70b9\u3002 iPad : \u518d\u89c1\uff0c Windows . iPad : ...\u5bfb\u627e\u8282\u70b9\u4e2d... iPad : \u563f, MacOS , \u4f60\u6709 js/all.js \u548c ZeroMe \u7684 css/all.css \u5417 MacOS : \u5f53\u7136\u6709\uff0c\u7ed9\u4f60 \u4f46 MacOS \u662f\u4e2a\u9ed1\u5ba2! \u4ed6\u7ed9\u4e86\u9519\u8bef\u7684 js/all.js \uff0c\u7136\u540e Windows \u5c31\u6709\u4e86\u4e2a\u5e26\u75c5\u6bd2\u7684 js/all.js ! ...\u5b9e\u9645\u4e0a\u5e76\u975e\u5982\u6b64\u3002\u6bcf\u4e2a\u7ad9\u70b9\u90fd\u6709\u76f8\u5e94\u7684\u516c\u94a5\u548c\u79c1\u94a5 1BewKAyyiMZHY3AjQn65J6f6Rcb9p1h64K . \u8fd9\u662f\u4e00\u4e2a\u516c\u94a5\uff0c\u5373\u7ad9\u70b9\u5730\u5740 \u6bcf\u4e2a\u4e00\u4e2a\u7ad9\u70b9\u7684 content.json \u4e2d\uff0c\u90fd\u5b58\u6709\u7ad9\u70b9\u6587\u4ef6\u7684 SHA512 \u548c\u5927\u5c0f\u3002 MacOS \u7ed9\u4e86 iPad \u5e26 SHA512 \u7684\u6587\u4ef6\uff0c iPad \u5c31\u8bf4\uff1a iPad : css/all.css \u6709\u6548\uff0c js/all.js \u88ab\u7be1\u6539\u3002 iPad : ...\u6dfb\u52a0 MacOS \u5230\u9ed1\u540d\u5355... iPad : \u62dc\u62dc\uff0c MacOS . iPad : ...\u5bfb\u627e\u8282\u70b9\u4e2d... iPad : \u563f, Linux , \u4f60\u6709 ZeroMe \u7684 js/all.js \u5417 ? Linux : \u6709\uff0c\u7ed9\u4f60\u3002 iPad : \u8c22\u5566\uff0c\u62dc\u62dc\uff0c Linux . \u73b0\u5728 iPad \u6709\u5b8c\u6574\u7684 ZeroMe \u53ef\u4ee5\u5411\u4f60\u5c55\u73b0\u4e86\u3002 \u96f6\u7f51\u5c31\u662f\u8fd9\u6837\u4f7f\u7528 SHA512 \u786e\u4fdd\u6570\u636e\u7684\u5b89\u5168\u3002 \u9519\u8bef\u7684 content.json Linux \u9700\u8981 ZeroTalk (\u516c\u94a5\u4e3a 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT ): Linux : \u4f60\u6709 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u7684 content.json \u5417 MacOS : \u6709\uff0c\u62ff\u53bb\u5427\u3002 \u6b63\u5982\u6211\u4eec\u6240\u77e5 MacOS \u662f\u4e2a\u9ed1\u5ba2\uff0c\u63d0\u4f9b\u9519\u8bef\u7684 content.json \uff0cSHA512 \u4e0d\u6b63\u786e\u3002 Linux \u5411 MacOS \u8981 js/all.js \uff0c\u7136\u540e MacOS \u4f1a\u7ed9 Linux \u5e26\u6bd2\u6587\u4ef6\u3002 Linux : \u8c22\u8c22! ...\u7b49\u4e0b content.json \u7684\u7b7e\u540d\u6709\u8bef\u3002 Linux : ...\u6dfb\u52a0 MacOS \u5230\u9ed1\u540d\u5355.. Linux : \u518d\u89c1\uff0c MacOS . Linux \u5f88\u806a\u660e\uff0c content.json \u7ecf\u8fc7\u79c1\u94a5\u7b7e\u540d\u3002 MacOS \u53ef\u80fd\u4f1a\u5077\u53d6\u79c1\u94a5\u6216\u8005\u66b4\u529b\u7a77\u4e3e\u7834\u89e3\uff0c\u540e\u8005\u6839\u672c\u4e0d\u53ef\u80fd\u3002\u524d\u8005\u8fd8\u662f\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u4e0d\u8981\u8ba9\u79c1\u94a5\u88ab\u7a83\u53d6\u3002 \u7b7e\u540d \u54b1\u77e5\u9053\u6570\u636e\u662f\u7ecf\u8fc7\u7b7e\u540d\u7684\u3002 content.json \u81ea\u8eab\u88ab\u7b7e\u540d\uff0c\u5176\u4ed6\u6587\u4ef6\u7684 SHA512 \u53c8\u662f\u653e\u5728 content.json \u91cc\u7684\u3002\u8fd9\u8868\u660e\u6ca1\u6709\u79c1\u94a5\u5c31\u65e0\u6cd5\u6539\u52a8\u6570\u636e\uff0c\u5e38\u89c4\u7684\u5f69\u8679\u8868\u4e5f\u65e0\u80fd\u4e3a\u529b\u3002 \u6c99\u76d2 \u96f6\u7f51\u4e0d\u4f1a\u7ed9\u6bcf\u4e2a\u7ad9\u70b9\u90fd\u67b6\u8bbe\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u53ea\u653e\u4e00\u4e2a\u670d\u52a1\u5668\u5728 http://127.0.0.1:43110/ \u3002\u6240\u4ee5\u8fd8\u9700\u8981\u5176\u4ed6\u5b89\u5168\u63aa\u65bd\uff0c\u6bcf\u4e2a\u7ad9\u70b9\u90fd\u662f\u653e\u5728\u6c99\u7bb1 <iframe> \u91cc\u9762\u7684\uff0c\u7136\u540e localStorage \u7b49\u4e1c\u897f\u5c31\u6ca1\u6cd5\u7528\u4e86\u3002 \u96f6\u7f51\u4e5f\u4e0d\u4f1a\u8ba9\u7ad9\u70b9\u9003\u9038\u51fa <iframe> - \u4f1a\u4f20\u9012\u4e00\u4e2a\u7279\u6b8a\u7684\u53e3\u4ee4(token)\u5230 <iframe> \u4e2d\uff0c\u7ad9\u70b9\u7528\u53e3\u4ee4\u4e0e\u96f6\u7f51\u670d\u52a1\u5668\u901a\u8baf\u4ee5\u4fbf\u6267\u884c\u4e00\u4e9b\u5e95\u5c42\u6307\u4ee4\u3002\u5237\u65b0\u9875\u9762\u65f6\u53e3\u4ee4\u4e5f\u4f1a\u4fbf\uff0c\u53ea\u6709\u66b4\u529b\u7a77\u4e3e wrapper_nonce (\u53e3\u4ee4 token) \u624d\u80fd\u9003\u9038\u51fa <iframe> . \u6570\u636e\u600e\u4e48\u4f20\u8fdb <iframe> \u5462? \u53ea\u6709\u67e5\u8be2\u5b57\u7b26\u4e32\uff08query string\uff09\u6240\u4ee5\u5462 wrapper_nonce \u5c31\u662f\u653e\u5728\u67e5\u8be2\u5b57\u7b26\u4e32\u91cc\u3002\u4f60\u53ef\u80fd\u89c9\u5f97\u67e5\u8be2\u5b57\u4e32\u662f ?a=2 \uff0c\u4f46\u5b9e\u9645\u4e0a ?a=2&wrapper_nonce=e0ccdebc9a804cfd8ac9eaf78a4a03054acbd400ce981219037647922219fbcd .","title":"\u5b89\u5168"},{"location":"security/#_1","text":"\u8fd9\u7ae0\u8bb2\u96f6\u7f51\u5b89\u5168\u3002\u5982\u679c\u4e0d\u592a\u611f\u5174\u8da3\u6216\u8005\u6ca1\u6cd5\u7406\u89e3\uff0c\u7a0d\u5fae\u770b\u770b\u5c31\u597d\u3002 \u6bcf\u4e2a\u7ad9\u70b9\u90fd\u6709\u516c\u94a5\u548c\u79c1\u94a5\u3002\u8f93\u5165 http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D/ \u8bbf\u95ee ZeroHello - \u5176\u4e2d\uff0c 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D \u4e3a\u516c\u94a5\u3002\u53ea\u6709\u7ad9\u957f\u6709\u79c1\u94a5\uff0c\u7528\u6765\u53d1\u5e03\u5185\u5bb9\u3002 \u4e0b\u8f7d\u7ad9\u70b9\u65f6\uff0c\u96f6\u7f51\u4f1a\u8fde\u63a5\u5df2\u77e5\u8282\u70b9\u5e76\u5411\u5b83\u4eec\u7d22\u8981\u6587\u4ef6\u3002 \u6ca1\u6709\u79c1\u94a5\u5c31\u65e0\u6cd5\u66f4\u6539\u7f51\u7ad9\u5185\u5bb9\u3002","title":"\u5b89\u5168"},{"location":"security/#sha512","text":"\u96f6\u7f51\u4e2d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4e3a\u5176\u6240\u8bbf\u95ee\u8fc7\u7684\u7ad9\u70b9\u670d\u52a1\u3002\u4f8b\u5982, Windows \u4e0a\u6709 ZeroMe , iPad \u60f3\u8981\u8bbf\u95ee\u8fd9\u4e2a\u7ad9\u70b9\uff0c iPad \u5c31\u4f1a\u76f4\u63a5 \u8fde\u63a5 Windows \u5e76\u8bf4\uff1a iPad : \u563f, Windows , \u7ed9\u6211 ZeroMe \u7684 content.json Windows : \u55ef\uff0c\u7ed9\u4f60 iPad : \u8c22\u5566\uff0c\u6211\u8fd8\u8981 index.html , js/all.js \u4ee5\u53ca ZeroMe \u7684 css/all.css Windows : \u7ed9\u4f60 index.html : ... \u4f46\u662f\u6211\u6ca1\u6709 js/all.js \u548c css/all.css , \u62b1\u6b49\u3002 Windows \u7ed9\u4e86 iPad index.html , \u4f46 iPad \u53bb\u54ea\u627e js/all.js \u548c css/all.css \u5462\uff1f\u4ece Windows \u6240\u77e5\u7684\u8282\u70b9\uff1f\u4f46\u8981\u662f Windows \u6000\u6709\u6076\u610f\uff0c\u4f1a\u63d0\u4f9b\u9519\u8bef\u7684\u8282\u70b9\u3002 iPad : \u518d\u89c1\uff0c Windows . iPad : ...\u5bfb\u627e\u8282\u70b9\u4e2d... iPad : \u563f, MacOS , \u4f60\u6709 js/all.js \u548c ZeroMe \u7684 css/all.css \u5417 MacOS : \u5f53\u7136\u6709\uff0c\u7ed9\u4f60 \u4f46 MacOS \u662f\u4e2a\u9ed1\u5ba2! \u4ed6\u7ed9\u4e86\u9519\u8bef\u7684 js/all.js \uff0c\u7136\u540e Windows \u5c31\u6709\u4e86\u4e2a\u5e26\u75c5\u6bd2\u7684 js/all.js ! ...\u5b9e\u9645\u4e0a\u5e76\u975e\u5982\u6b64\u3002\u6bcf\u4e2a\u7ad9\u70b9\u90fd\u6709\u76f8\u5e94\u7684\u516c\u94a5\u548c\u79c1\u94a5 1BewKAyyiMZHY3AjQn65J6f6Rcb9p1h64K . \u8fd9\u662f\u4e00\u4e2a\u516c\u94a5\uff0c\u5373\u7ad9\u70b9\u5730\u5740 \u6bcf\u4e2a\u4e00\u4e2a\u7ad9\u70b9\u7684 content.json \u4e2d\uff0c\u90fd\u5b58\u6709\u7ad9\u70b9\u6587\u4ef6\u7684 SHA512 \u548c\u5927\u5c0f\u3002 MacOS \u7ed9\u4e86 iPad \u5e26 SHA512 \u7684\u6587\u4ef6\uff0c iPad \u5c31\u8bf4\uff1a iPad : css/all.css \u6709\u6548\uff0c js/all.js \u88ab\u7be1\u6539\u3002 iPad : ...\u6dfb\u52a0 MacOS \u5230\u9ed1\u540d\u5355... iPad : \u62dc\u62dc\uff0c MacOS . iPad : ...\u5bfb\u627e\u8282\u70b9\u4e2d... iPad : \u563f, Linux , \u4f60\u6709 ZeroMe \u7684 js/all.js \u5417 ? Linux : \u6709\uff0c\u7ed9\u4f60\u3002 iPad : \u8c22\u5566\uff0c\u62dc\u62dc\uff0c Linux . \u73b0\u5728 iPad \u6709\u5b8c\u6574\u7684 ZeroMe \u53ef\u4ee5\u5411\u4f60\u5c55\u73b0\u4e86\u3002 \u96f6\u7f51\u5c31\u662f\u8fd9\u6837\u4f7f\u7528 SHA512 \u786e\u4fdd\u6570\u636e\u7684\u5b89\u5168\u3002","title":"\u9519\u8bef\u7684 SHA512"},{"location":"security/#contentjson","text":"Linux \u9700\u8981 ZeroTalk (\u516c\u94a5\u4e3a 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT ): Linux : \u4f60\u6709 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT \u7684 content.json \u5417 MacOS : \u6709\uff0c\u62ff\u53bb\u5427\u3002 \u6b63\u5982\u6211\u4eec\u6240\u77e5 MacOS \u662f\u4e2a\u9ed1\u5ba2\uff0c\u63d0\u4f9b\u9519\u8bef\u7684 content.json \uff0cSHA512 \u4e0d\u6b63\u786e\u3002 Linux \u5411 MacOS \u8981 js/all.js \uff0c\u7136\u540e MacOS \u4f1a\u7ed9 Linux \u5e26\u6bd2\u6587\u4ef6\u3002 Linux : \u8c22\u8c22! ...\u7b49\u4e0b content.json \u7684\u7b7e\u540d\u6709\u8bef\u3002 Linux : ...\u6dfb\u52a0 MacOS \u5230\u9ed1\u540d\u5355.. Linux : \u518d\u89c1\uff0c MacOS . Linux \u5f88\u806a\u660e\uff0c content.json \u7ecf\u8fc7\u79c1\u94a5\u7b7e\u540d\u3002 MacOS \u53ef\u80fd\u4f1a\u5077\u53d6\u79c1\u94a5\u6216\u8005\u66b4\u529b\u7a77\u4e3e\u7834\u89e3\uff0c\u540e\u8005\u6839\u672c\u4e0d\u53ef\u80fd\u3002\u524d\u8005\u8fd8\u662f\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u4e0d\u8981\u8ba9\u79c1\u94a5\u88ab\u7a83\u53d6\u3002","title":"\u9519\u8bef\u7684content.json"},{"location":"security/#_2","text":"\u54b1\u77e5\u9053\u6570\u636e\u662f\u7ecf\u8fc7\u7b7e\u540d\u7684\u3002 content.json \u81ea\u8eab\u88ab\u7b7e\u540d\uff0c\u5176\u4ed6\u6587\u4ef6\u7684 SHA512 \u53c8\u662f\u653e\u5728 content.json \u91cc\u7684\u3002\u8fd9\u8868\u660e\u6ca1\u6709\u79c1\u94a5\u5c31\u65e0\u6cd5\u6539\u52a8\u6570\u636e\uff0c\u5e38\u89c4\u7684\u5f69\u8679\u8868\u4e5f\u65e0\u80fd\u4e3a\u529b\u3002","title":"\u7b7e\u540d"},{"location":"security/#_3","text":"\u96f6\u7f51\u4e0d\u4f1a\u7ed9\u6bcf\u4e2a\u7ad9\u70b9\u90fd\u67b6\u8bbe\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u53ea\u653e\u4e00\u4e2a\u670d\u52a1\u5668\u5728 http://127.0.0.1:43110/ \u3002\u6240\u4ee5\u8fd8\u9700\u8981\u5176\u4ed6\u5b89\u5168\u63aa\u65bd\uff0c\u6bcf\u4e2a\u7ad9\u70b9\u90fd\u662f\u653e\u5728\u6c99\u7bb1 <iframe> \u91cc\u9762\u7684\uff0c\u7136\u540e localStorage \u7b49\u4e1c\u897f\u5c31\u6ca1\u6cd5\u7528\u4e86\u3002 \u96f6\u7f51\u4e5f\u4e0d\u4f1a\u8ba9\u7ad9\u70b9\u9003\u9038\u51fa <iframe> - \u4f1a\u4f20\u9012\u4e00\u4e2a\u7279\u6b8a\u7684\u53e3\u4ee4(token)\u5230 <iframe> \u4e2d\uff0c\u7ad9\u70b9\u7528\u53e3\u4ee4\u4e0e\u96f6\u7f51\u670d\u52a1\u5668\u901a\u8baf\u4ee5\u4fbf\u6267\u884c\u4e00\u4e9b\u5e95\u5c42\u6307\u4ee4\u3002\u5237\u65b0\u9875\u9762\u65f6\u53e3\u4ee4\u4e5f\u4f1a\u4fbf\uff0c\u53ea\u6709\u66b4\u529b\u7a77\u4e3e wrapper_nonce (\u53e3\u4ee4 token) \u624d\u80fd\u9003\u9038\u51fa <iframe> . \u6570\u636e\u600e\u4e48\u4f20\u8fdb <iframe> \u5462? \u53ea\u6709\u67e5\u8be2\u5b57\u7b26\u4e32\uff08query string\uff09\u6240\u4ee5\u5462 wrapper_nonce \u5c31\u662f\u653e\u5728\u67e5\u8be2\u5b57\u7b26\u4e32\u91cc\u3002\u4f60\u53ef\u80fd\u89c9\u5f97\u67e5\u8be2\u5b57\u4e32\u662f ?a=2 \uff0c\u4f46\u5b9e\u9645\u4e0a ?a=2&wrapper_nonce=e0ccdebc9a804cfd8ac9eaf78a4a03054acbd400ce981219037647922219fbcd .","title":"\u6c99\u76d2"},{"location":"ugly-things/","text":"\u7455\u75b5 This part is for developers who use ZeroNet and ZeroFrame API often. Here I'll talk about some strange things in ZeroFrame API which I know only because I read source code. dbQuery ? \u5360\u4f4d\u7b26 From ZeroMe source code: return Page.cmd(\"dbQuery\", [ \"SELECT * FROM json WHERE ?\", { directory: directory } ], function(subject_rows) { That is equal to (See note 1): SELECT * FROM json WHERE directory = ${ directory } You can also use multiple key/value pairs, that means: SELECT * FROM json WHERE key1 = ${ value1 } AND key2 = ${ value2 } AND key3 = ${ value3 } If you want to make some condition negative, prepend key with not__ : Page.cmd(\"dbQuery\", [ \"SELECT * FROM json WHERE ?\", { not__json_id: 2, file_name: \"data.json\" } ], handler); SELECT * FROM json WHERE json_id != 2 AND file_name = \"data.json\" You can also use array as value: (See note 2) Page.cmd(\"dbQuery\", [ \"SELECT * FROM json WHERE ?\", { not__json_id: [2, 3], file_name: [\"content.json\", \"data.json\"] } ], handler); SELECT * FROM json WHERE json_id NOT IN (2, 3) AND file_name IN (\"content.json\", \"data.json\") : \u5360\u4f4d\u7b26 But what if you want to use some special rules (like A=a and (B=b or C=c) ) but still want to use placeholders? Use : ! From ZeroMe source code: return Page.cmd(\"dbQuery\", [\"SELECT * FROM json WHERE site = :site AND directory = :directory LIMIT 1\", params], (function(_this) { Pass parameters as usual (object as second argument) and then use :{key} placeholder to get that value! \u7528\u6237\u6570\u636e Remember this data/users/content.json we often use? { \"files\": {}, \"ignore\": \".*\", \"user_contents\": { \"cert_signers\": { \"zeroid.bit\": [\"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\"] }, \"permission_rules\": { \".*\": { \"files_allowed\": \"data.json\", \"max_size\": 50000 } }, \"permissions\": {} } } Currently only site admin can sign user content (eg. delete posts). And what if we want to add moderators? ... \"permission_rules\": { \".*\": { \"files_allowed\": \"data.json\", \"max_size\": 50000, \"signers\": [\"1Abc\"] } }, ... We add signers to permission_rules items! Now, 1Abc can sign all users' content. And if you move signers to a new item, .*bot@.* , 1Abc will be able to sign only ...bot user content. \u6458\u5f55 Note 1 From Db/DbCursor.py of ZeroNet source code: def execute(self, query, params=None): if isinstance(params, dict) and \"?\" in query: # Make easier select and insert by allowing dict params if query.startswith(\"SELECT\") or query.startswith(\"DELETE\") or query.startswith(\"UPDATE\"): # Convert param dict to SELECT * FROM table WHERE key = ? AND key2 = ? format query_wheres = [] Note 2 From Db/DbCursor.py of ZeroNet source code: if type(value) is list: if key.startswith(\"not__\"): query_wheres.append(key.replace(\"not__\", \"\") + \" NOT IN (\" + \",\".join([\"?\"] * len(value)) + \")\") else: query_wheres.append(key + \" IN (\" + \",\".join([\"?\"] * len(value)) + \")\")","title":"\u8865\u5145"},{"location":"ugly-things/#_1","text":"This part is for developers who use ZeroNet and ZeroFrame API often. Here I'll talk about some strange things in ZeroFrame API which I know only because I read source code.","title":"\u7455\u75b5"},{"location":"ugly-things/#dbquery","text":"","title":"dbQuery"},{"location":"ugly-things/#_2","text":"From ZeroMe source code: return Page.cmd(\"dbQuery\", [ \"SELECT * FROM json WHERE ?\", { directory: directory } ], function(subject_rows) { That is equal to (See note 1): SELECT * FROM json WHERE directory = ${ directory } You can also use multiple key/value pairs, that means: SELECT * FROM json WHERE key1 = ${ value1 } AND key2 = ${ value2 } AND key3 = ${ value3 } If you want to make some condition negative, prepend key with not__ : Page.cmd(\"dbQuery\", [ \"SELECT * FROM json WHERE ?\", { not__json_id: 2, file_name: \"data.json\" } ], handler); SELECT * FROM json WHERE json_id != 2 AND file_name = \"data.json\" You can also use array as value: (See note 2) Page.cmd(\"dbQuery\", [ \"SELECT * FROM json WHERE ?\", { not__json_id: [2, 3], file_name: [\"content.json\", \"data.json\"] } ], handler); SELECT * FROM json WHERE json_id NOT IN (2, 3) AND file_name IN (\"content.json\", \"data.json\")","title":"? \u5360\u4f4d\u7b26"},{"location":"ugly-things/#_3","text":"But what if you want to use some special rules (like A=a and (B=b or C=c) ) but still want to use placeholders? Use : ! From ZeroMe source code: return Page.cmd(\"dbQuery\", [\"SELECT * FROM json WHERE site = :site AND directory = :directory LIMIT 1\", params], (function(_this) { Pass parameters as usual (object as second argument) and then use :{key} placeholder to get that value!","title":": \u5360\u4f4d\u7b26"},{"location":"ugly-things/#_4","text":"Remember this data/users/content.json we often use? { \"files\": {}, \"ignore\": \".*\", \"user_contents\": { \"cert_signers\": { \"zeroid.bit\": [\"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\"] }, \"permission_rules\": { \".*\": { \"files_allowed\": \"data.json\", \"max_size\": 50000 } }, \"permissions\": {} } } Currently only site admin can sign user content (eg. delete posts). And what if we want to add moderators? ... \"permission_rules\": { \".*\": { \"files_allowed\": \"data.json\", \"max_size\": 50000, \"signers\": [\"1Abc\"] } }, ... We add signers to permission_rules items! Now, 1Abc can sign all users' content. And if you move signers to a new item, .*bot@.* , 1Abc will be able to sign only ...bot user content.","title":"\u7528\u6237\u6570\u636e"},{"location":"ugly-things/#_5","text":"","title":"\u6458\u5f55"},{"location":"ugly-things/#note-1","text":"From Db/DbCursor.py of ZeroNet source code: def execute(self, query, params=None): if isinstance(params, dict) and \"?\" in query: # Make easier select and insert by allowing dict params if query.startswith(\"SELECT\") or query.startswith(\"DELETE\") or query.startswith(\"UPDATE\"): # Convert param dict to SELECT * FROM table WHERE key = ? AND key2 = ? format query_wheres = []","title":"Note 1"},{"location":"ugly-things/#note-2","text":"From Db/DbCursor.py of ZeroNet source code: if type(value) is list: if key.startswith(\"not__\"): query_wheres.append(key.replace(\"not__\", \"\") + \" NOT IN (\" + \",\".join([\"?\"] * len(value)) + \")\") else: query_wheres.append(key + \" IN (\" + \",\".join([\"?\"] * len(value)) + \")\")","title":"Note 2"},{"location":"user-content/","text":"\u7528\u6237\u6570\u636e \u4f60\u53ef\u80fd\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86 ZeroMe \u6216 ZeroTalk - \u4e00\u4e2a\u793e\u4ea4\u7f51\u7edc\u548c\u8bba\u575b\uff0c\u90fd\u4f7f\u7528 SQLite - \u4ee5\u524d\u8bf4\u8fc7\u3002 \u4e4b\u524d\u521b\u5efa\u4e86\u4e00\u4e2a\u7ad9\u957f\u53d1\u5e03\u5185\u5bb9\u7684\u7ad9\u70b9\uff0c\u8bb0\u5f97\u5427\uff0c\u6ca1\u6709\u6295\u7968\u529f\u80fd\uff0c\u4eca\u5929\u6211\u4eec\u4f1a\u6539\u8fdb\u8fd9\u4e2a\u4e1c\u897f\u3002 \u9996\u5148\u521b\u5efa\u65b0\u7ad9\u70b9\u3002 \u5305\u542b content.json \u6211\u4eec\u6709\u76ee\u5f55 data/users \uff0c\u8fd9\u4e2a\u76ee\u5f55\u4f1a\u6709\u5f88\u591a\u5b50\u76ee\u5f55 (\u76ee\u5f55\u540d\u4e3a\u7528\u6237\u7684\u516c\u94a5) \u5185\u542b\u7528\u6237\u6587\u4ef6. \u9996\u5148\u521b\u5efa content.json \u5728 data/users/content.json \u7528\u4e8e\u5b58\u50a8\u7528\u6237\u6570\u636e (\u7b7e\u540d\u65f6\u96f6\u7f51\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5fc5\u8981\u7684\u5bf9\u8c61\u5c5e\u6027): { \"files\": {} } \u5305\u542b\u5165 content.json : ..., \"ignore\": \"data/users/.*\", \"includes\": { \"data/users/content.json\": { \"signers\": [], \"signers_required\": 1 } }, ... \u7b2c\u4e00\u884c\u7684 ignore \u53eb\u96f6\u7f51\u5ffd\u7565\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002 \u5176\u4f59\u7684\u5185\u5bb9\u610f\u4e3a data/users/content.json \u4e5f\u5e94\u52a0\u8f7d\u3002 \u7b7e\u540d content.json \u548c data/users/content.json . \u521b\u5efa\u6b63\u786e\u7684 content.json \u7528 ZeroID . \u5148\u601d\u8003\u4e00\u4e0b: \u8282\u70b9\u5982\u4f55\u5f97\u77e5\u54ea\u4e9b\u8282\u70b9\u80fd\u7ed9\u54ea\u4e9b\u76ee\u5f55\u7b7e\u540d? ZeroID \u548c \u5176\u4ed6 \u8bc1\u4e66\u9881\u53d1\u8005 \u8bc1\u660e\u67d0\u7528\u6237\u53ef\u4ee5\u7b7e\u540d\u67d0\u6587\u4ef6\u3002 \u7f16\u8f91 data/users/content.json . { \"ignore\": \".*\", \"user_contents\": { \"cert_signers\": { \"zeroid.bit\": [\"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\"] }, \"permission_rules\": { \".*\": { \"files_allowed\": \"data.json\", \"max_size\": 10000 } }, \"permissions\": { \"ivanq@zeroid.bit\": { \"max_size\": 100000 } } } } ignore \u610f\u4e3a\u8fd9\u91cc\u9762\u7684\u6587\u4ef6\u4e0d\u662f\u7f51\u7ad9\u7ba1\u7406\u5458\u7b7e\u540d\u7684\u3002 user_contents.cert_signers \u662f \u8bc1\u4e66\u9881\u53d1\u8005 \u5217\u8868. \u8fd9\u6709 zeroid.bit \u548c 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz \u8bc1\u660e\u67d0\u7528\u6237\u80fd\u7b7e\u540d\u67d0\u76ee\u5f55\u3002 user_contents.permission_rules \u6309\u6b63\u5219\u8868\u8fbe\u5f0f\u89c4\u5b9a\u54ea\u4e9b\u7528\u6237\u53ef\u4ee5\u5e72\u4ec0\u4e48\u3001\u4e0d\u80fd\u5e72\u4ec0\u4e48\u3002\u90a3\u4e2a\u952e\u540d ( .* ) \u610f\u4e3a \"\u5c06\u4e0b\u5217\u89c4\u5219\u5e94\u7528\u4e8e\u6240\u6709\u7528\u6237\".\u8981\u5339\u914d\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u4e3a {authtype}/{username}@{zite} . authtype \u7531 \u8bc1\u4e66\u9881\u53d1\u8005 \u8bbe\u7f6e (\u901a\u5e38\u662f web \u6216 bitmsg ). files_allowed \u662f\u89c4\u5b9a\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u54ea\u4e9b\u7684\u6587\u4ef6\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 max_size \u662f\u6587\u4ef6\u7684\u6700\u5927\u5927\u5c0f\uff08\u5b57\u8282\uff09\u3002 user_contents.permissions \u5bf9\u5355\u4e00\u7528\u6237\u4f5c\u89c4\u5b9a\uff0c\u952e\u540d\u4e3a {username}@{zite} . \u503c\u540c permission_rules . \u8fd9\u91cc\u5141\u8bb8\u6240\u6709\u4eba\u5b58\u50a8 10KB\uff0c\u5141\u8bb8 ivanq@zeroid.bit 100KB(\u8fd9\u662f\u6211). \u521b\u5efa dbschema.json \u5728 dbschema.json \u521b\u5efa\u4e00\u4e9b\u8868: +-------------------------------------------------------------------------+ | questions | +-------------------------+-----------------------------------------------+ | Row | Type | +-------------------------+-----------------------------------------------+ | id | INTEGER | +-------------------------+-----------------------------------------------+ | question | TEXT | +-------------------------+-----------------------------------------------+ | answers | TEXT | +-------------------------+-----------------------------------------------+ | date_added | INTEGER | +-------------------------+-----------------------------------------------+ | json_id | INTEGER REFERENCES json(json_id) | +-------------------------------------------------------------------------+ +-------------------------------------------------------------------------+ | answers | +-------------------------+-----------------------------------------------+ | Row | Type | +-------------------------+-----------------------------------------------+ | question_id | INTEGER | +-------------------------+-----------------------------------------------+ | answer_id | INTEGER | +-------------------------+-----------------------------------------------+ | json_id | INTEGER REFERENCES json(json_id) | +-------------------------------------------------------------------------+ dbschema.json : { \"db_name\" : \"votes\" , \"db_file\" : \"data/votes.db\" , \"version\" : 2 , \"maps\" : { \"users/.*/data.json\" : { \"to_table\" : [ { \"node\" : \"questions\" , \"table\" : \"questions\" }, { \"node\" : \"answers\" , \"table\" : \"answers\" , \"key_col\" : \"question_id\" , \"val_col\" : \"answer_id\" } ] } }, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 }, \"questions\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"question\" , \"text\" ], [ \"answers\" , \"text\" ], [ \"date_added\" , \"integer\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX question_id ON questions(id)\" ], \"schema_changed\" : 1 }, \"answers\" : { \"cols\" : [ [ \"question_id\" , \"integer\" ], [ \"answer_id\" , \"integer\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX answer_value ON answers(question_id, json_id)\" ], \"schema_changed\" : 1 } } } \u53ea\u589e\u52a0\u4e86 users/.*/data.json \uff0c\u610f\u4e3a: \u8bfb\u53d6 data/users/{something}/data.json \u7684\u6240\u6709\u6587\u4ef6\u5e76\u6309\u4e0b\u5217\u65b9\u6cd5\u5904\u7406: ... . \u4ee5 ZeroID \u6388\u6743 \u4e4b\u524d\u8bf4\u8fc7\uff0c\u8981\u7528 ZeroID\u3002\u73b0\u5728\u5b9e\u73b0\u5b83\u3002 \u5148\u521b\u5efa js/index.js \uff0c\u5e76\u5728\u5176\u4ed6\u6587\u4ef6\u4e4b\u524d\u5f15\u5165\u3002 window.zeroFrame = new ZeroFrame(); \u521b\u5efa\u6587\u4ef6, js/zeroid.js \u5e76\u5f15\u5165\u5230 index.html : function authAsZeroID ( callback ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { // If logged in, return object with username and public key (address) if ( siteInfo . cert_user_id ) { callback ({ user : siteInfo . cert_user_id , address : siteInfo . auth_address , }); return ; } // Open authorization window and allow zeroid.bit zeroFrame . cmd ( \"certSelect\" , { accepted_domains : [ \"zeroid.bit\" ], }, function () { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { // If logged in, return object with username and public key (address), // else return false if ( siteInfo . cert_user_id ) { callback ({ user : siteInfo . cert_user_id , address : siteInfo . auth_address , }); } else { callback ( false ); } }); } ); }); } \u5c1d\u8bd5\u5728\u63a7\u5236\u53f0\u8f93\u5165 authAsZeroID(console.log.bind(console)) \uff0c\u5c31\u4f1a\u5f39\u51fa\u4e00\u4e2a\u7a97\u53e3 \uff0c\u5982\u679c\u4f60\u9009\u62e9 ZeroID, \u4e00\u4e2a\u6709 user \u548c address \u5c5e\u6027\u7684\u5bf9\u8c61\u5c31\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u5982\u679c\u9009 Unique to this site , false \u5c31\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 \u540e\u9762\u51e0\u7ae0\u8bb2\u5982\u4f55\u8bfb\u5199\u7528\u6237\u6570\u636e\u3002","title":"\u7528\u6237\u6570\u636e"},{"location":"user-content/#_1","text":"\u4f60\u53ef\u80fd\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86 ZeroMe \u6216 ZeroTalk - \u4e00\u4e2a\u793e\u4ea4\u7f51\u7edc\u548c\u8bba\u575b\uff0c\u90fd\u4f7f\u7528 SQLite - \u4ee5\u524d\u8bf4\u8fc7\u3002 \u4e4b\u524d\u521b\u5efa\u4e86\u4e00\u4e2a\u7ad9\u957f\u53d1\u5e03\u5185\u5bb9\u7684\u7ad9\u70b9\uff0c\u8bb0\u5f97\u5427\uff0c\u6ca1\u6709\u6295\u7968\u529f\u80fd\uff0c\u4eca\u5929\u6211\u4eec\u4f1a\u6539\u8fdb\u8fd9\u4e2a\u4e1c\u897f\u3002 \u9996\u5148\u521b\u5efa\u65b0\u7ad9\u70b9\u3002","title":"\u7528\u6237\u6570\u636e"},{"location":"user-content/#contentjson","text":"\u6211\u4eec\u6709\u76ee\u5f55 data/users \uff0c\u8fd9\u4e2a\u76ee\u5f55\u4f1a\u6709\u5f88\u591a\u5b50\u76ee\u5f55 (\u76ee\u5f55\u540d\u4e3a\u7528\u6237\u7684\u516c\u94a5) \u5185\u542b\u7528\u6237\u6587\u4ef6. \u9996\u5148\u521b\u5efa content.json \u5728 data/users/content.json \u7528\u4e8e\u5b58\u50a8\u7528\u6237\u6570\u636e (\u7b7e\u540d\u65f6\u96f6\u7f51\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5fc5\u8981\u7684\u5bf9\u8c61\u5c5e\u6027): { \"files\": {} } \u5305\u542b\u5165 content.json : ..., \"ignore\": \"data/users/.*\", \"includes\": { \"data/users/content.json\": { \"signers\": [], \"signers_required\": 1 } }, ... \u7b2c\u4e00\u884c\u7684 ignore \u53eb\u96f6\u7f51\u5ffd\u7565\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002 \u5176\u4f59\u7684\u5185\u5bb9\u610f\u4e3a data/users/content.json \u4e5f\u5e94\u52a0\u8f7d\u3002 \u7b7e\u540d content.json \u548c data/users/content.json .","title":"\u5305\u542bcontent.json"},{"location":"user-content/#contentjson_1","text":"\u7528 ZeroID . \u5148\u601d\u8003\u4e00\u4e0b: \u8282\u70b9\u5982\u4f55\u5f97\u77e5\u54ea\u4e9b\u8282\u70b9\u80fd\u7ed9\u54ea\u4e9b\u76ee\u5f55\u7b7e\u540d? ZeroID \u548c \u5176\u4ed6 \u8bc1\u4e66\u9881\u53d1\u8005 \u8bc1\u660e\u67d0\u7528\u6237\u53ef\u4ee5\u7b7e\u540d\u67d0\u6587\u4ef6\u3002 \u7f16\u8f91 data/users/content.json . { \"ignore\": \".*\", \"user_contents\": { \"cert_signers\": { \"zeroid.bit\": [\"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\"] }, \"permission_rules\": { \".*\": { \"files_allowed\": \"data.json\", \"max_size\": 10000 } }, \"permissions\": { \"ivanq@zeroid.bit\": { \"max_size\": 100000 } } } } ignore \u610f\u4e3a\u8fd9\u91cc\u9762\u7684\u6587\u4ef6\u4e0d\u662f\u7f51\u7ad9\u7ba1\u7406\u5458\u7b7e\u540d\u7684\u3002 user_contents.cert_signers \u662f \u8bc1\u4e66\u9881\u53d1\u8005 \u5217\u8868. \u8fd9\u6709 zeroid.bit \u548c 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz \u8bc1\u660e\u67d0\u7528\u6237\u80fd\u7b7e\u540d\u67d0\u76ee\u5f55\u3002 user_contents.permission_rules \u6309\u6b63\u5219\u8868\u8fbe\u5f0f\u89c4\u5b9a\u54ea\u4e9b\u7528\u6237\u53ef\u4ee5\u5e72\u4ec0\u4e48\u3001\u4e0d\u80fd\u5e72\u4ec0\u4e48\u3002\u90a3\u4e2a\u952e\u540d ( .* ) \u610f\u4e3a \"\u5c06\u4e0b\u5217\u89c4\u5219\u5e94\u7528\u4e8e\u6240\u6709\u7528\u6237\".\u8981\u5339\u914d\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u4e3a {authtype}/{username}@{zite} . authtype \u7531 \u8bc1\u4e66\u9881\u53d1\u8005 \u8bbe\u7f6e (\u901a\u5e38\u662f web \u6216 bitmsg ). files_allowed \u662f\u89c4\u5b9a\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u54ea\u4e9b\u7684\u6587\u4ef6\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 max_size \u662f\u6587\u4ef6\u7684\u6700\u5927\u5927\u5c0f\uff08\u5b57\u8282\uff09\u3002 user_contents.permissions \u5bf9\u5355\u4e00\u7528\u6237\u4f5c\u89c4\u5b9a\uff0c\u952e\u540d\u4e3a {username}@{zite} . \u503c\u540c permission_rules . \u8fd9\u91cc\u5141\u8bb8\u6240\u6709\u4eba\u5b58\u50a8 10KB\uff0c\u5141\u8bb8 ivanq@zeroid.bit 100KB(\u8fd9\u662f\u6211).","title":"\u521b\u5efa\u6b63\u786e\u7684 content.json"},{"location":"user-content/#dbschemajson","text":"\u5728 dbschema.json \u521b\u5efa\u4e00\u4e9b\u8868: +-------------------------------------------------------------------------+ | questions | +-------------------------+-----------------------------------------------+ | Row | Type | +-------------------------+-----------------------------------------------+ | id | INTEGER | +-------------------------+-----------------------------------------------+ | question | TEXT | +-------------------------+-----------------------------------------------+ | answers | TEXT | +-------------------------+-----------------------------------------------+ | date_added | INTEGER | +-------------------------+-----------------------------------------------+ | json_id | INTEGER REFERENCES json(json_id) | +-------------------------------------------------------------------------+ +-------------------------------------------------------------------------+ | answers | +-------------------------+-----------------------------------------------+ | Row | Type | +-------------------------+-----------------------------------------------+ | question_id | INTEGER | +-------------------------+-----------------------------------------------+ | answer_id | INTEGER | +-------------------------+-----------------------------------------------+ | json_id | INTEGER REFERENCES json(json_id) | +-------------------------------------------------------------------------+ dbschema.json : { \"db_name\" : \"votes\" , \"db_file\" : \"data/votes.db\" , \"version\" : 2 , \"maps\" : { \"users/.*/data.json\" : { \"to_table\" : [ { \"node\" : \"questions\" , \"table\" : \"questions\" }, { \"node\" : \"answers\" , \"table\" : \"answers\" , \"key_col\" : \"question_id\" , \"val_col\" : \"answer_id\" } ] } }, \"tables\" : { \"json\" : { \"cols\" : [ [ \"json_id\" , \"INTEGER PRIMARY KEY AUTOINCREMENT\" ], [ \"directory\" , \"TEXT\" ], [ \"file_name\" , \"TEXT\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX path ON json(directory, file_name)\" ], \"schema_changed\" : 1 }, \"questions\" : { \"cols\" : [ [ \"id\" , \"integer\" ], [ \"question\" , \"text\" ], [ \"answers\" , \"text\" ], [ \"date_added\" , \"integer\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX question_id ON questions(id)\" ], \"schema_changed\" : 1 }, \"answers\" : { \"cols\" : [ [ \"question_id\" , \"integer\" ], [ \"answer_id\" , \"integer\" ], [ \"json_id\" , \"integer references json(json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX answer_value ON answers(question_id, json_id)\" ], \"schema_changed\" : 1 } } } \u53ea\u589e\u52a0\u4e86 users/.*/data.json \uff0c\u610f\u4e3a: \u8bfb\u53d6 data/users/{something}/data.json \u7684\u6240\u6709\u6587\u4ef6\u5e76\u6309\u4e0b\u5217\u65b9\u6cd5\u5904\u7406: ... .","title":"\u521b\u5efa dbschema.json"},{"location":"user-content/#zeroid","text":"\u4e4b\u524d\u8bf4\u8fc7\uff0c\u8981\u7528 ZeroID\u3002\u73b0\u5728\u5b9e\u73b0\u5b83\u3002 \u5148\u521b\u5efa js/index.js \uff0c\u5e76\u5728\u5176\u4ed6\u6587\u4ef6\u4e4b\u524d\u5f15\u5165\u3002 window.zeroFrame = new ZeroFrame(); \u521b\u5efa\u6587\u4ef6, js/zeroid.js \u5e76\u5f15\u5165\u5230 index.html : function authAsZeroID ( callback ) { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { // If logged in, return object with username and public key (address) if ( siteInfo . cert_user_id ) { callback ({ user : siteInfo . cert_user_id , address : siteInfo . auth_address , }); return ; } // Open authorization window and allow zeroid.bit zeroFrame . cmd ( \"certSelect\" , { accepted_domains : [ \"zeroid.bit\" ], }, function () { zeroFrame . cmd ( \"siteInfo\" , [], function ( siteInfo ) { // If logged in, return object with username and public key (address), // else return false if ( siteInfo . cert_user_id ) { callback ({ user : siteInfo . cert_user_id , address : siteInfo . auth_address , }); } else { callback ( false ); } }); } ); }); } \u5c1d\u8bd5\u5728\u63a7\u5236\u53f0\u8f93\u5165 authAsZeroID(console.log.bind(console)) \uff0c\u5c31\u4f1a\u5f39\u51fa\u4e00\u4e2a\u7a97\u53e3 \uff0c\u5982\u679c\u4f60\u9009\u62e9 ZeroID, \u4e00\u4e2a\u6709 user \u548c address \u5c5e\u6027\u7684\u5bf9\u8c61\u5c31\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u5982\u679c\u9009 Unique to this site , false \u5c31\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 \u540e\u9762\u51e0\u7ae0\u8bb2\u5982\u4f55\u8bfb\u5199\u7528\u6237\u6570\u636e\u3002","title":"\u4ee5 ZeroID \u6388\u6743"},{"location":"zeroframe/","text":"ZeroFrame \u524d\u9762\u90a3\u7ae0\u6211\u8bf4\u4e86 localStorage \u7b49\u7279\u6027\u88ab\u7981\u7528\u4e86\u3002\u5728\u8fd9\u7ae0\uff0c\u6211\u5c06\u8bb2\u8ff0\u5982\u4f55\u4e0d\u4f7f\u7528\u90a3\u4e9b\u7279\u6027\u5b9e\u73b0\u76f8\u5e94\u529f\u80fd\u3002 WebSockets \u4e3a\u4e86\u8ba9\u7ad9\u70b9\u80fd\u8bfb\u5199\u6587\u4ef6\u3001\u4f7f\u7528 localStorage \u3001\u7ed9\u6570\u636e\u7b7e\u540d\uff0c\u7b49\u3002\u96f6\u7f51\u4f7f\u7528 WebSockets\uff0c ZeroFrame \u5df2\u7ecf\u505a\u597d\u76f8\u5173\u51c6\u5907\u5de5\u4f5c\u3002\u8bb0\u5f97 js/ZeroFrame.js \u5417? \u8fd9\u4e2a\u5c31\u662f API \u63a5\u53e3\u3002 \u5b89\u88c5 ZeroFrame \u521b\u5efa\u65b0\u7ad9\u70b9\uff0c\u6253\u5f00\u7ad9\u70b9\u76ee\u5f55 \u628a index.html \u6539\u4e3a: <!DOCTYPE html> < html > < head > < title ></ title > < meta charset = \"utf-8\" > < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" > < script > base . href = document . location . href . replace ( \"/media\" , \"\" ). replace ( \"index.html\" , \"\" ). replace ( /[&?]wrapper=False/ , \"\" ). replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ) </ script > </ head > < body > </ body > </ html > \u6211\u5df2\u7ecf\u79fb\u9664 <script> \u5e76\u7f29\u8fdb\u4ee3\u7801\u3002 \u5f15\u5165 js/ZeroFrame.js \u5e76\u521b\u5efa\u6587\u4ef6 js/index.js : <!DOCTYPE html> < html > < head > < title ></ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body > < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > < script type = \"text/javascript\" src = \"js/index.js\" ></ script > </ body > </ html > \u6253\u5f00\u3001\u7f16\u8f91 js/index.js : var zeroFrame = new ZeroFrame (); console . log ( zeroFrame ); \u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\u5e76\u5237\u65b0\u9875\u9762\uff1a Object { url: undefined, waiting_cb: Object, wrapper_nonce: \"45be457a20334e09dbda338264976328d1f\u2026\" , target: Object \u2192 1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm, next_message_id: 1 } \u53ef\u89c1\u7c7b\u4f3c\u5982\u4e0a\u7684\u4fe1\u606f\u3002 \u8fd9\u5c31\u662f ZeroFrame \u2014\u2014 \u63a5\u6536\u3001\u53d1\u9001\u5668\uff0c\u96f6\u7f51\u7ad9\u70b9\u7684\u57fa\u672c\u6846\u67b6\u4e4b\u4e00\u3002 \u9996\u6b21\u8c03\u7528 API ZeroFrame \u7684\u4e3b\u8981\u51fd\u6570\u4e3a ZeroFrame.prototype.cmd() . \u8bd5\u4e0b\u83b7\u53d6\u7ad9\u70b9\u4fe1\u606f var zeroFrame = new ZeroFrame (); zeroFrame . cmd ( \"siteInfo\" , [], function ( info ) { console . log ( info ); }); \u7b2c\u4e00\u884c\u5c1a\u80fd\u770b\u61c2\u3002\u987a\u4fbf\u8bf4\u4e0b\uff0c\u4e0d\u8981\u521b\u5efa\u591a\u4e2a ZeroFrame \u5b9e\u4f8b\u3002\u5269\u4e0b\u51e0\u884c\u5c31\u662f\u8c03\u7528 API\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u8c03\u7528\u7684\u65b9\u6cd5 - \u8fd9\u6bb5\u4ee3\u7801\u91cc\u662f siteInfo \uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4f20\u9012\u7ed9\u65b9\u6cd5\u7684\u53c2\u6570 - \u662f\u53ef\u9009\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u79fb\u9664 , [] \u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f\u56de\u8c03\u3002 \u5237\u65b0\u9875\u9762\uff0c\u89c2\u5bdf\u63a7\u5236\u53f0\uff0c\u53ef\u89c1\uff1a Object { tasks: 0, size_limit: 10, address: \"1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm\" , next_size_limit: 10, auth_address: \"1E3sYXHq99vXW5hS3M9PhQzQhpmWx1paHu\" , feed_follow_num: null, content: Object, peers: 1, auth_key: \"db87a590a113015ddf1b2c73f96baacaa097eee1747d71bdbe5748073bc6131b\" , settings: Object, 6 more... } \u6709\u4e2a\u95ee\u9898\u5c31\u662f ZeroFrame \u4f7f\u7528\u56de\u8c03\uff0c\u4f1a\u5f15\u8d77\u56de\u8c03\u5730\u72f1\u3002\u6211\u8ba4\u4e3a Promise \u66f4\u597d\uff0c\u6b64\u5916\uff0cPromise \u517c\u5bb9 async/await\u3002\u5982\u679c\u4f60\u8981\u7528\u56de\u8c03\uff0c\u5c31\u4f7f\u7528 ZeroFrame\u3002\u5982\u679c\u4f60\u60f3\u7528 Promise \u6216 async/await (\u96f6\u7f51\u4e0d\u652f\u6301\u540e\u8005\uff0c\u4f46\u4f60\u53ef\u4ee5\u7528 Babel)\uff0c\u7528\u6211\u5199\u7684 ZeroPage library (\u989d\u5916\u8bfe\u7a0b\u91cc\u8bb2\u4e86 ZeroPage\uff0c\u5728 \u8fd9 \u4e0b\u8f7d. \u6211\u4f1a\u6559\u4f60\u600e\u4e48\u5199\u7684 here . \u65b0\u7248 ZeroFrame \u6709 ZeroFrame.prototype.cmdp() \u51fd\u6570\u4e86\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a Promise\u3002\u4f46\u6211\u4ecd\u7136\u63a8\u8350\u6211\u7684\u5e93\uff0c\u8fd9\u6837\u4f60\u53ef\u4ee5\u5c11\u5199\u4ee3\u7801\u3002 \u6587\u4ef6\u7cfb\u7edf ZeroFrame \u8ba9\u4f60\u80fd\u7f16\u8f91\u7ad9\u70b9\u76ee\u5f55\u5185\u7684\u6587\u4ef6\uff0cAPI \u5b9a\u4e49\u4e3a: fileGet - \u8fd4\u56de\u6587\u4ef6\u5185\u5bb9\u6216\u8005 null\u3001undefined\u3002 | \u53c2\u6570 | \u5b9a\u4e49 | |:-------------------:|:-----------------------------------:| | inner_path | \u4f60\u9700\u8981\u7684\u6587\u4ef6\u7684\u5185\u90e8\u8def\u5f84 | | required (optional) | \u662f\u5426\u7b49\u5f85\u6587\u4ef6\u4e0b\u8f7d\uff0c\u9ed8\u8ba4\u4e3a True | | format (optional) | \u7f16\u7801\uff0ctext \u8fd8\u662f base64\uff0c\u9ed8\u8ba4\u4e3a text | | timeout (optional) | \u6700\u5927\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a 300 | fileWrite - \u8fd4\u56de\"ok\"\u6216\u8005\u9519\u8bef\u4fe1\u606f\u3002 | \u53c2\u6570 | \u5b9a\u4e49 | |:--------------:|:------------------------------:| | inner_path | \u4f60\u9700\u8981\u7684\u6587\u4ef6\u7684\u5185\u90e8\u8def\u5f84 | | content_base64 | \u8981\u5199\u5165\u7684\u5185\u5bb9\uff08\u5148\u7f16\u7801\u6210base64\uff09 | \u5982\u679c\u4f60\u7528 ZeroPage \u5e93\uff0c\u6211\u4e5f\u6709 ZeroFS \uff0c \u8fd9\u91cc \u4e0b\u8f7d \u7f16\u8f91 index.js \u4e3a\uff1a var zeroFrame = new ZeroFrame (); function readFile ( file , callback ) { ... } function writeFile ( file , content , callback ) { ... } \u8bfb\u53d6\u6587\u4ef6 \u770b\u7b54\u6848\u4e4b\u524d\uff0c\u8bd5\u8bd5\u81ea\u5df1\u7528 readFile() \uff0c\u51c6\u5907\u597d\u4e86\u5417? function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , [ file , false ], callback ); } \u4e5f\u53ef\u4ee5\u5199\u6210\uff1a function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , { inner_path : file , required : false }, callback ); } \u53c2\u6570\u53ef\u4ee5\u7528\u6570\u7ec4\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528\u5bf9\u8c61\u4f20\u9012\uff0c\u8be6\u89c1\u6587\u6863\u3002 \u82e5 required \u8bbe\u4e3a true \uff0c\u4ee3\u7801\u4ecd\u80fd\u8fd0\u884c\uff0c\u5c31\u662f\u4f1a\u6709\u4e00\u4e2a\u8b66\u544a\u3002 \u5199\u5165\u6587\u4ef6 writeFile() \u5f88\u590d\u6742\uff0c\u6211\u60f3\u8bf4\uff0c\u8fd9\u592a\u96be\u7528\u4e86\u3002\u8f93\u5165\u7684\u5f97\u662fBase64\uff0c\u6240\u4ee5\u4f60\u8981\u5199\uff1a function writeFile ( file , content , callback ) { zeroFrame . cmd ( \"fileWrite\" , [ file , btoa ( content )], callback ); } \u4f46 btoa() \u4e0d\u80fd\u7528\u4e8e UTF8\uff0c\u6240\u4ee5\u53c8\u8981\u5199\u53e6\u4e00\u4e2a\u51fd\u6570\uff1a function base64Encode ( content ) { content = encodeURIComponent ( content ); // Split to bytes in % notation content = unescape ( content ); // Join % notation as bytes (not as chars) return btoa ( content ); } \u7136\u540e\u66ff\u4ee3 writeFile() \u91cc\u7684 btoa() \u3002 \u6211\u4eec\u8f6c\u6362UTF8\u5230\u5b57\u8282\u6570\u636e\uff0c\u4f46\u5982\u679c content \u5c31\u662f\u5b57\u8282\u6570\u636e\u5462? encodeURIComponent \u548c unescape \u5c31\u4f1a\u7834\u574f\u6570\u636e\uff0c\u56e0\u4e3aUnicode\u4e00\u4e2a\u5b57\u7b26\u4f7f\u7528\u591a\u4e2a\u5b57\u8282\u3002\u6240\u4ee5\u6211\u4eec\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4e2d\u4f7f\u7528 btoa() \u800c\u975e base64Encode (\u6309 writeFile() \u4f60\u81ea\u5df1\u5199 writeBinaryFile() ). \u6587\u4ef6\u7cfb\u7edf\u7684\u5e93\u5df2\u7ecf\u5199\u597d\uff0c\u4e0d\u8fc7\u53ea\u6709\u6587\u4ef6\u64cd\u4f5c\u7684\u90e8\u5206\uff0c\u4f46\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u4f60\u53ef\u4ee5\u8bfb\u6211\u7684 ZeroFS \u7406\u89e3\u96f6\u7f51\u7684\u6587\u4ef6\u64cd\u4f5c\uff0c\u6216\u8005\u8bfb\u96f6\u7f51\u7684\u6587\u6863 \u955c\u50cf . \u8bb0\u4e8b\u672c \u7528\u6587\u4ef6\u64cd\u4f5c\u7684API\u7684\u6700\u7b80\u5355\u7684\u7a0b\u5e8f\u53ef\u80fd\u5c31\u662f\u7f16\u8f91\u5668\u4e86\uff0c\u8bd5\u7740\u81ea\u5df1\u5199\u4e00\u4e2a\uff0c\u518d\u5c1d\u8bd5\u8bfb\u61c2\u6211\u7684\u4ee3\u7801 notepad \u3002 \u5c0f\u63d0\u793a \u96f6\u7f51\u8fd8\u662f\u6709\u5f88\u591a\u95ee\u9898\u7684\uff0c\u6709\u4e9b\u95ee\u9898\u6839\u672c\u627e\u4e0d\u51fa\u6765\u539f\u56e0\uff08\u6211\u82b1\u4e86\u4e24\u4e2a\u6708\u8c03\u8bd5\u6570\u636e\u5e93\u2014\u2014\u56e0\u4e3a\u96f6\u7f51\u7f3a\u5c11\u6587\u6863\uff0c\u53ea\u80fd\u8bfb\u6e90\u7801\uff09\uff0c\u4f60\u53ef\u4ee5\u968f\u4fbf\u95ee\u6211\u95ee\u9898 ZeroMail . \u8bd1\u8005\u6ce8\uff1a\u4f60\u8054\u7cfb\u6211\u4e5f\u53ef\u4ee5\uff0cblurhy@outlook.com","title":"\u7ad9\u70b9\u6846\u67b6"},{"location":"zeroframe/#zeroframe","text":"\u524d\u9762\u90a3\u7ae0\u6211\u8bf4\u4e86 localStorage \u7b49\u7279\u6027\u88ab\u7981\u7528\u4e86\u3002\u5728\u8fd9\u7ae0\uff0c\u6211\u5c06\u8bb2\u8ff0\u5982\u4f55\u4e0d\u4f7f\u7528\u90a3\u4e9b\u7279\u6027\u5b9e\u73b0\u76f8\u5e94\u529f\u80fd\u3002","title":"ZeroFrame"},{"location":"zeroframe/#websockets","text":"\u4e3a\u4e86\u8ba9\u7ad9\u70b9\u80fd\u8bfb\u5199\u6587\u4ef6\u3001\u4f7f\u7528 localStorage \u3001\u7ed9\u6570\u636e\u7b7e\u540d\uff0c\u7b49\u3002\u96f6\u7f51\u4f7f\u7528 WebSockets\uff0c ZeroFrame \u5df2\u7ecf\u505a\u597d\u76f8\u5173\u51c6\u5907\u5de5\u4f5c\u3002\u8bb0\u5f97 js/ZeroFrame.js \u5417? \u8fd9\u4e2a\u5c31\u662f API \u63a5\u53e3\u3002","title":"WebSockets"},{"location":"zeroframe/#zeroframe_1","text":"\u521b\u5efa\u65b0\u7ad9\u70b9\uff0c\u6253\u5f00\u7ad9\u70b9\u76ee\u5f55 \u628a index.html \u6539\u4e3a: <!DOCTYPE html> < html > < head > < title ></ title > < meta charset = \"utf-8\" > < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" > < script > base . href = document . location . href . replace ( \"/media\" , \"\" ). replace ( \"index.html\" , \"\" ). replace ( /[&?]wrapper=False/ , \"\" ). replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ) </ script > </ head > < body > </ body > </ html > \u6211\u5df2\u7ecf\u79fb\u9664 <script> \u5e76\u7f29\u8fdb\u4ee3\u7801\u3002 \u5f15\u5165 js/ZeroFrame.js \u5e76\u521b\u5efa\u6587\u4ef6 js/index.js : <!DOCTYPE html> < html > < head > < title ></ title > < meta charset = \"utf-8\" /> < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" /> < script > base . href = document . location . href . replace ( \"/media\" , \"\" ) . replace ( \"index.html\" , \"\" ) . replace ( /[&?]wrapper=False/ , \"\" ) . replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" ); </ script > </ head > < body > < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > < script type = \"text/javascript\" src = \"js/index.js\" ></ script > </ body > </ html > \u6253\u5f00\u3001\u7f16\u8f91 js/index.js : var zeroFrame = new ZeroFrame (); console . log ( zeroFrame ); \u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\u5e76\u5237\u65b0\u9875\u9762\uff1a Object { url: undefined, waiting_cb: Object, wrapper_nonce: \"45be457a20334e09dbda338264976328d1f\u2026\" , target: Object \u2192 1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm, next_message_id: 1 } \u53ef\u89c1\u7c7b\u4f3c\u5982\u4e0a\u7684\u4fe1\u606f\u3002 \u8fd9\u5c31\u662f ZeroFrame \u2014\u2014 \u63a5\u6536\u3001\u53d1\u9001\u5668\uff0c\u96f6\u7f51\u7ad9\u70b9\u7684\u57fa\u672c\u6846\u67b6\u4e4b\u4e00\u3002","title":"\u5b89\u88c5 ZeroFrame"},{"location":"zeroframe/#api","text":"ZeroFrame \u7684\u4e3b\u8981\u51fd\u6570\u4e3a ZeroFrame.prototype.cmd() . \u8bd5\u4e0b\u83b7\u53d6\u7ad9\u70b9\u4fe1\u606f var zeroFrame = new ZeroFrame (); zeroFrame . cmd ( \"siteInfo\" , [], function ( info ) { console . log ( info ); }); \u7b2c\u4e00\u884c\u5c1a\u80fd\u770b\u61c2\u3002\u987a\u4fbf\u8bf4\u4e0b\uff0c\u4e0d\u8981\u521b\u5efa\u591a\u4e2a ZeroFrame \u5b9e\u4f8b\u3002\u5269\u4e0b\u51e0\u884c\u5c31\u662f\u8c03\u7528 API\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u8c03\u7528\u7684\u65b9\u6cd5 - \u8fd9\u6bb5\u4ee3\u7801\u91cc\u662f siteInfo \uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4f20\u9012\u7ed9\u65b9\u6cd5\u7684\u53c2\u6570 - \u662f\u53ef\u9009\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u79fb\u9664 , [] \u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f\u56de\u8c03\u3002 \u5237\u65b0\u9875\u9762\uff0c\u89c2\u5bdf\u63a7\u5236\u53f0\uff0c\u53ef\u89c1\uff1a Object { tasks: 0, size_limit: 10, address: \"1CyNApZ4zp7k3SSXsrW54vEFMHHBpDy3nm\" , next_size_limit: 10, auth_address: \"1E3sYXHq99vXW5hS3M9PhQzQhpmWx1paHu\" , feed_follow_num: null, content: Object, peers: 1, auth_key: \"db87a590a113015ddf1b2c73f96baacaa097eee1747d71bdbe5748073bc6131b\" , settings: Object, 6 more... } \u6709\u4e2a\u95ee\u9898\u5c31\u662f ZeroFrame \u4f7f\u7528\u56de\u8c03\uff0c\u4f1a\u5f15\u8d77\u56de\u8c03\u5730\u72f1\u3002\u6211\u8ba4\u4e3a Promise \u66f4\u597d\uff0c\u6b64\u5916\uff0cPromise \u517c\u5bb9 async/await\u3002\u5982\u679c\u4f60\u8981\u7528\u56de\u8c03\uff0c\u5c31\u4f7f\u7528 ZeroFrame\u3002\u5982\u679c\u4f60\u60f3\u7528 Promise \u6216 async/await (\u96f6\u7f51\u4e0d\u652f\u6301\u540e\u8005\uff0c\u4f46\u4f60\u53ef\u4ee5\u7528 Babel)\uff0c\u7528\u6211\u5199\u7684 ZeroPage library (\u989d\u5916\u8bfe\u7a0b\u91cc\u8bb2\u4e86 ZeroPage\uff0c\u5728 \u8fd9 \u4e0b\u8f7d. \u6211\u4f1a\u6559\u4f60\u600e\u4e48\u5199\u7684 here . \u65b0\u7248 ZeroFrame \u6709 ZeroFrame.prototype.cmdp() \u51fd\u6570\u4e86\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a Promise\u3002\u4f46\u6211\u4ecd\u7136\u63a8\u8350\u6211\u7684\u5e93\uff0c\u8fd9\u6837\u4f60\u53ef\u4ee5\u5c11\u5199\u4ee3\u7801\u3002","title":"\u9996\u6b21\u8c03\u7528 API"},{"location":"zeroframe/#_1","text":"ZeroFrame \u8ba9\u4f60\u80fd\u7f16\u8f91\u7ad9\u70b9\u76ee\u5f55\u5185\u7684\u6587\u4ef6\uff0cAPI \u5b9a\u4e49\u4e3a: fileGet - \u8fd4\u56de\u6587\u4ef6\u5185\u5bb9\u6216\u8005 null\u3001undefined\u3002 | \u53c2\u6570 | \u5b9a\u4e49 | |:-------------------:|:-----------------------------------:| | inner_path | \u4f60\u9700\u8981\u7684\u6587\u4ef6\u7684\u5185\u90e8\u8def\u5f84 | | required (optional) | \u662f\u5426\u7b49\u5f85\u6587\u4ef6\u4e0b\u8f7d\uff0c\u9ed8\u8ba4\u4e3a True | | format (optional) | \u7f16\u7801\uff0ctext \u8fd8\u662f base64\uff0c\u9ed8\u8ba4\u4e3a text | | timeout (optional) | \u6700\u5927\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a 300 | fileWrite - \u8fd4\u56de\"ok\"\u6216\u8005\u9519\u8bef\u4fe1\u606f\u3002 | \u53c2\u6570 | \u5b9a\u4e49 | |:--------------:|:------------------------------:| | inner_path | \u4f60\u9700\u8981\u7684\u6587\u4ef6\u7684\u5185\u90e8\u8def\u5f84 | | content_base64 | \u8981\u5199\u5165\u7684\u5185\u5bb9\uff08\u5148\u7f16\u7801\u6210base64\uff09 | \u5982\u679c\u4f60\u7528 ZeroPage \u5e93\uff0c\u6211\u4e5f\u6709 ZeroFS \uff0c \u8fd9\u91cc \u4e0b\u8f7d \u7f16\u8f91 index.js \u4e3a\uff1a var zeroFrame = new ZeroFrame (); function readFile ( file , callback ) { ... } function writeFile ( file , content , callback ) { ... }","title":"\u6587\u4ef6\u7cfb\u7edf"},{"location":"zeroframe/#_2","text":"\u770b\u7b54\u6848\u4e4b\u524d\uff0c\u8bd5\u8bd5\u81ea\u5df1\u7528 readFile() \uff0c\u51c6\u5907\u597d\u4e86\u5417? function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , [ file , false ], callback ); } \u4e5f\u53ef\u4ee5\u5199\u6210\uff1a function readFile ( file , callback ) { zeroFrame . cmd ( \"fileGet\" , { inner_path : file , required : false }, callback ); } \u53c2\u6570\u53ef\u4ee5\u7528\u6570\u7ec4\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528\u5bf9\u8c61\u4f20\u9012\uff0c\u8be6\u89c1\u6587\u6863\u3002 \u82e5 required \u8bbe\u4e3a true \uff0c\u4ee3\u7801\u4ecd\u80fd\u8fd0\u884c\uff0c\u5c31\u662f\u4f1a\u6709\u4e00\u4e2a\u8b66\u544a\u3002","title":"\u8bfb\u53d6\u6587\u4ef6"},{"location":"zeroframe/#_3","text":"writeFile() \u5f88\u590d\u6742\uff0c\u6211\u60f3\u8bf4\uff0c\u8fd9\u592a\u96be\u7528\u4e86\u3002\u8f93\u5165\u7684\u5f97\u662fBase64\uff0c\u6240\u4ee5\u4f60\u8981\u5199\uff1a function writeFile ( file , content , callback ) { zeroFrame . cmd ( \"fileWrite\" , [ file , btoa ( content )], callback ); } \u4f46 btoa() \u4e0d\u80fd\u7528\u4e8e UTF8\uff0c\u6240\u4ee5\u53c8\u8981\u5199\u53e6\u4e00\u4e2a\u51fd\u6570\uff1a function base64Encode ( content ) { content = encodeURIComponent ( content ); // Split to bytes in % notation content = unescape ( content ); // Join % notation as bytes (not as chars) return btoa ( content ); } \u7136\u540e\u66ff\u4ee3 writeFile() \u91cc\u7684 btoa() \u3002 \u6211\u4eec\u8f6c\u6362UTF8\u5230\u5b57\u8282\u6570\u636e\uff0c\u4f46\u5982\u679c content \u5c31\u662f\u5b57\u8282\u6570\u636e\u5462? encodeURIComponent \u548c unescape \u5c31\u4f1a\u7834\u574f\u6570\u636e\uff0c\u56e0\u4e3aUnicode\u4e00\u4e2a\u5b57\u7b26\u4f7f\u7528\u591a\u4e2a\u5b57\u8282\u3002\u6240\u4ee5\u6211\u4eec\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4e2d\u4f7f\u7528 btoa() \u800c\u975e base64Encode (\u6309 writeFile() \u4f60\u81ea\u5df1\u5199 writeBinaryFile() ). \u6587\u4ef6\u7cfb\u7edf\u7684\u5e93\u5df2\u7ecf\u5199\u597d\uff0c\u4e0d\u8fc7\u53ea\u6709\u6587\u4ef6\u64cd\u4f5c\u7684\u90e8\u5206\uff0c\u4f46\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u4f60\u53ef\u4ee5\u8bfb\u6211\u7684 ZeroFS \u7406\u89e3\u96f6\u7f51\u7684\u6587\u4ef6\u64cd\u4f5c\uff0c\u6216\u8005\u8bfb\u96f6\u7f51\u7684\u6587\u6863 \u955c\u50cf .","title":"\u5199\u5165\u6587\u4ef6"},{"location":"zeroframe/#_4","text":"\u7528\u6587\u4ef6\u64cd\u4f5c\u7684API\u7684\u6700\u7b80\u5355\u7684\u7a0b\u5e8f\u53ef\u80fd\u5c31\u662f\u7f16\u8f91\u5668\u4e86\uff0c\u8bd5\u7740\u81ea\u5df1\u5199\u4e00\u4e2a\uff0c\u518d\u5c1d\u8bd5\u8bfb\u61c2\u6211\u7684\u4ee3\u7801 notepad \u3002","title":"\u8bb0\u4e8b\u672c"},{"location":"zeroframe/#_5","text":"\u96f6\u7f51\u8fd8\u662f\u6709\u5f88\u591a\u95ee\u9898\u7684\uff0c\u6709\u4e9b\u95ee\u9898\u6839\u672c\u627e\u4e0d\u51fa\u6765\u539f\u56e0\uff08\u6211\u82b1\u4e86\u4e24\u4e2a\u6708\u8c03\u8bd5\u6570\u636e\u5e93\u2014\u2014\u56e0\u4e3a\u96f6\u7f51\u7f3a\u5c11\u6587\u6863\uff0c\u53ea\u80fd\u8bfb\u6e90\u7801\uff09\uff0c\u4f60\u53ef\u4ee5\u968f\u4fbf\u95ee\u6211\u95ee\u9898 ZeroMail . \u8bd1\u8005\u6ce8\uff1a\u4f60\u8054\u7cfb\u6211\u4e5f\u53ef\u4ee5\uff0cblurhy@outlook.com","title":"\u5c0f\u63d0\u793a"},{"location":"extra/StaticZite/","text":"Introduction In this tutorial, we are going to be making a very simple static zite, go through the different options in the content.json file, and talk about the ZeroFrame class that is auto-generated when you create an empty zite, what it is used for, and why it is important. Note: It is recommended to read The Basics tutorial first. It provides useful information on how zites are kept secure, updated, how to keep your zite online, and other important information. Creating An Empty Zite In order to create a zite, first we need to create an empty zite that will generate an address for us. You can very easily do this in the ZeroHello page by going to the menu (denoted by the 3 dots beside the ZeroHello Logo) and clicking Create new, empty site . It will create an address for you, along with a directory where you zite's files will be stored and a default index.html page. Do not delete this page, because it generates some code for us that will be talked about later in the tutorial. You will be redirected to your new zite by ZeroHello. Where Are The Zite's Files Located? When ZeroHello created your empty zite, it created a new directory for it. This directory is located in the zeronetroot/data directory under a folder named by your zite's address. You can find where the ZeroNet root directory is by pressing show data directory in ZeroHello's menu. The content.json File The first file we are going to open is the zite's content.json file. This file is used to keep your zite secure, and provide options for your zite. The Basics tutorial covers how this file is used to keep your zite secure and from being tampered with. However, this tutorial will cover the options that you can set in this file for your zite. If you are unfamiliar with JSON, you should learn it before going forward with zite development. Trust me, JSON is pretty easy. Description and Title The first thing we are going to do is change the zite's description and title. Look for the description and title fields and change them to what you want. The Title field is what is shown in the title/tab bar and in ZeroHello. The description is used for Search Engines, among other things. Ignore Field and Regexes Next, we are going to modify the ignore field. The ignore field is used to tell ZeroNet which files you do not want seeded and sent to peers. Any files/folders that match this ignore field will stay on your computer only, and will not be sent to other peers. This is useful for the git directory, an admin directory, and database files. Database files (ending in .db ) are ignored because the database is generated from the json files per client. Clients do not share database files. More information is provided about this in the Database Basics tutorial. The ignore field uses a regular expression to match any folders and files against it. Because of this, it is recommended to learn a little bit about regular expressions. However, here is a simple list of things most used in regular expressions and what they mean: . - any character * - zero or more of the character or group that comes before it + - one or more of the character or group that comes before it. Putting a letter that isn't a special symbol in regexes means it is a required character. ( and ) - Creates a group, useful for saying you want zero or more of a word (for example: (and)* means zero or more and words) | used in a group to mean or . For eample: (and|or) means it will match anything that is the word and or the word or . * \\. - the dot character. You are escaping the dot. This also works for \\* , \\| , \\\\ and any other special symbols. NOTE: It should be noted that a recent update to ZeroNet requires that you must place . before * , + , and { . You also cannot have more than 9 of these repetition characters. To fix this, if you are using .* for each or branch in a group, you can easily put it outside of the group (for example: change (.*.epub|.*.jpg|.*.jpeg|.*.png) to .*(epub|jpg|jpeg|png) ). This change was made for security and performance reasons. Here are some useful patterns used in regular expressions. We will be using some of these in our ignore regex. To ignore a folder, put foldername . To ignore a file with a certain extension, put .*db To ignore files of many extensions, you can use a group like this: .*(ext1|ext2|ext3) To ignore files, directories, and sub-directories in a folder, use this: folder/.*/.* For our ignore regex, we are going to use this: \"ignore\": \"(data/.*db|data/users/.*/.*|.git|admin)\", This will ignore the .git folder, the admin folder, any database files, and the data/users folder and its subdirectories. The reason for the last two will be covered in the Database Basics tutorial. Viewport The final thing we are going to do is add a viewport field. This is equivalent to adding the viewport meta tag. For mobile-supported zites, set the viewport to width=device-width, initial-scale=1.0, shrink-to-fit=no For non-mobile-supported zites, you can leave it off. content.json Docs You can find more information about the different options in the content.json file from the ZeroNet Docs . The Index File We are now done with the content.json file. Next, open up the index.html file. This is what the index file should look like: <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" > < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" > < script > base . href = document . location . href . replace ( \"/media\" , \"\" ). replace ( \"index.html\" , \"\" ). replace ( /[&?]wrapper=False/ , \"\" ). replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" )</ script > </ head > < body > < div id = \"out\" ></ div > < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > < script > class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ) }) } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } } page = new Page () </ script > </ body > </ html > You can see that most of it is just simple html. However, there is the javascript that has the ZeroFrame class. This is what we are going to be talking about next. The ZeroFrame Class The ZeroFrame class is used to talk to the ZeroFrame client via an API. There are many things you can do with ZeroFrame, including talking to ZeroNet Plugins 1 . A few of the most common things that you can do with ZeroFrame are: Open Link in New Tab Show Notifications and Prompts to the User Read and Write to Files Query the Database Sign and Publish files Show notifications to the User's ZeroHello NewsFeed (via the NewsFeed plugin) In this lesson, we are only going to talk about the onOpenWebsocket and onRequest methods and getting the Site Info. Defining Our Own Class In order to use ZeroFrame and provide our own methods and properties, we create our own class that extends the ZeroFrame class. Before we can do this though, we must first include the ZeroFrame.js file. < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > The class is then defined: class Page extends ZeroFrame { // ... } Afterwards, we Instantiate our class so we can access the methods and properties outside of the class: page = new Page (); Inside this class, we have three methods. The first is called onOpenWebsocket , and is what we will be talking about next. onOpenWebsocket The onOpenWebsocket method is called when your page has been loaded. This method is useful for getting site information and initializing everything on startup. Notice that ZeroHello generated code inside of this method. onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ) }) } The cmd method is called whenever you want to communicate with the ZeroNet Client. You pass in the command name as the first argument. In this case, it's siteInfo . This command returns information on our site - including who is currently logged in and peer count. The second argument passed in are the parameters for the command. In this case, siteInfo doesn't take any parameters, so we pass in an empty array. The next argument is a callback function. This is needed because ZeroFrame commands run asynchronously - which means the things called after the cmd method don't wait until the command is finished. This is what the third argument is for. Once the command has been run, the function will be called with the return information as the arguments. In this case, the command returns the site information. In this case, once the command has finished, the callback function is ran, and calls the setSiteInfo method with the site information passed in. This method simply displays the site information onto the page: setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } Notice that we call this inside of the callback function. If you need to do anything that requires reading from site_info , you must put it inside of this callback function - otherwise there's a great chance it will run while site_info is still null or undefined - or whatever default value you may have set it to. TIP: You can easily see everything that site_info gives you by simply printing it out to the console. onRequest The next method is called onRequest . This method is called by ZeroNet everytime something has happened to your zite. For example, if the site information has been changed (peer count changed, zite has been updated, logged in user has changed, etc). onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } In this case, whenever the site information has been changed, we are calling setSiteInfo , which shows the new information on the page. Notice that we are using the message.params variable. onRequest also sends messages with the command. This message contains a params property. This is what we are using to get the site information. The params property can also contain the event property, which gives you the event that happened. This is useful for doing an action on the file_done event. This event is called whenever a file has been updated and downloaded and is very useful for checking whether the database was updated in order to dynamically change the content on the zite. Requirement of the ZeroFrame Class If you want your zite completely static, and not change based on the user logged in, a database, site information, etc. then there might not be a need for you to include the ZeroFrame class - unless you are using any of the ZeroFrame API calls. There are some API calls that are useful even for static zites. For example, notifications, prompts, reading files (e.g. json files), opening a link in a new tab, client-side routing, and more. You can find more information about these and other ZeroFrame API commands in the ZeroFrame API Docs . TIP: All of the commands listed in the ZeroFrame API Docs are always called using the cmd() method. Signing and Publishing Your Zite You can start adding to your zite now by modifying the index page, creating new pages, etc. However, after your zite is done, you need to be sure to sign and publish it. Signing your zite will do a few things: Create a Digital Signature that is stored in the content.json file Update the content.json file to include the new hashes of all the non-ignored files in your zite * Change the modified field in the content.json file All of these are done to ensure the security of your zite. They are used so peers can reject changes to your zite that weren't made by you. The modified field is used by clients to ensure they are only downloading a content.json file that is newer than the one they have. If you have peers, you need to send your updated zite's files to other peers so they can then send it to more peers until everyone has the updated zite. You can do this by publishing your zite. However, if you have no peers yet, there is no need to do this because any new visitors to your zite will just download these updated files from your client. In order to publish and sign your zite, drag the 0 button in the top right corner to the left, scroll all the way down to the This is my site section. Click Sign , then Publish . This is also where you can more easily change the zite's title and description. Previous Tutorial: The Basics Next Tutorial: Users and Databases In ZeroNet To learn how to write a ZeroNet plugin, you can read the Writing A Plugin tutorial . \u21a9","title":"\u9759\u6001\u7ad9\u70b9"},{"location":"extra/StaticZite/#introduction","text":"In this tutorial, we are going to be making a very simple static zite, go through the different options in the content.json file, and talk about the ZeroFrame class that is auto-generated when you create an empty zite, what it is used for, and why it is important. Note: It is recommended to read The Basics tutorial first. It provides useful information on how zites are kept secure, updated, how to keep your zite online, and other important information.","title":"Introduction"},{"location":"extra/StaticZite/#creating-an-empty-zite","text":"In order to create a zite, first we need to create an empty zite that will generate an address for us. You can very easily do this in the ZeroHello page by going to the menu (denoted by the 3 dots beside the ZeroHello Logo) and clicking Create new, empty site . It will create an address for you, along with a directory where you zite's files will be stored and a default index.html page. Do not delete this page, because it generates some code for us that will be talked about later in the tutorial. You will be redirected to your new zite by ZeroHello.","title":"Creating An Empty Zite"},{"location":"extra/StaticZite/#where-are-the-zites-files-located","text":"When ZeroHello created your empty zite, it created a new directory for it. This directory is located in the zeronetroot/data directory under a folder named by your zite's address. You can find where the ZeroNet root directory is by pressing show data directory in ZeroHello's menu.","title":"Where Are The Zite's Files Located?"},{"location":"extra/StaticZite/#the-contentjson-file","text":"The first file we are going to open is the zite's content.json file. This file is used to keep your zite secure, and provide options for your zite. The Basics tutorial covers how this file is used to keep your zite secure and from being tampered with. However, this tutorial will cover the options that you can set in this file for your zite. If you are unfamiliar with JSON, you should learn it before going forward with zite development. Trust me, JSON is pretty easy.","title":"The content.json File"},{"location":"extra/StaticZite/#description-and-title","text":"The first thing we are going to do is change the zite's description and title. Look for the description and title fields and change them to what you want. The Title field is what is shown in the title/tab bar and in ZeroHello. The description is used for Search Engines, among other things.","title":"Description and Title"},{"location":"extra/StaticZite/#ignore-field-and-regexes","text":"Next, we are going to modify the ignore field. The ignore field is used to tell ZeroNet which files you do not want seeded and sent to peers. Any files/folders that match this ignore field will stay on your computer only, and will not be sent to other peers. This is useful for the git directory, an admin directory, and database files. Database files (ending in .db ) are ignored because the database is generated from the json files per client. Clients do not share database files. More information is provided about this in the Database Basics tutorial. The ignore field uses a regular expression to match any folders and files against it. Because of this, it is recommended to learn a little bit about regular expressions. However, here is a simple list of things most used in regular expressions and what they mean: . - any character * - zero or more of the character or group that comes before it + - one or more of the character or group that comes before it. Putting a letter that isn't a special symbol in regexes means it is a required character. ( and ) - Creates a group, useful for saying you want zero or more of a word (for example: (and)* means zero or more and words) | used in a group to mean or . For eample: (and|or) means it will match anything that is the word and or the word or . * \\. - the dot character. You are escaping the dot. This also works for \\* , \\| , \\\\ and any other special symbols. NOTE: It should be noted that a recent update to ZeroNet requires that you must place . before * , + , and { . You also cannot have more than 9 of these repetition characters. To fix this, if you are using .* for each or branch in a group, you can easily put it outside of the group (for example: change (.*.epub|.*.jpg|.*.jpeg|.*.png) to .*(epub|jpg|jpeg|png) ). This change was made for security and performance reasons. Here are some useful patterns used in regular expressions. We will be using some of these in our ignore regex. To ignore a folder, put foldername . To ignore a file with a certain extension, put .*db To ignore files of many extensions, you can use a group like this: .*(ext1|ext2|ext3) To ignore files, directories, and sub-directories in a folder, use this: folder/.*/.* For our ignore regex, we are going to use this: \"ignore\": \"(data/.*db|data/users/.*/.*|.git|admin)\", This will ignore the .git folder, the admin folder, any database files, and the data/users folder and its subdirectories. The reason for the last two will be covered in the Database Basics tutorial.","title":"Ignore Field and Regexes"},{"location":"extra/StaticZite/#viewport","text":"The final thing we are going to do is add a viewport field. This is equivalent to adding the viewport meta tag. For mobile-supported zites, set the viewport to width=device-width, initial-scale=1.0, shrink-to-fit=no For non-mobile-supported zites, you can leave it off.","title":"Viewport"},{"location":"extra/StaticZite/#contentjson-docs","text":"You can find more information about the different options in the content.json file from the ZeroNet Docs .","title":"content.json Docs"},{"location":"extra/StaticZite/#the-index-file","text":"We are now done with the content.json file. Next, open up the index.html file. This is what the index file should look like: <!DOCTYPE html> < html > < head > < title > New ZeroNet site! </ title > < meta charset = \"utf-8\" > < meta http-equiv = \"content-type\" content = \"text/html; charset=utf-8\" /> < base href = \"\" target = \"_top\" id = \"base\" > < script > base . href = document . location . href . replace ( \"/media\" , \"\" ). replace ( \"index.html\" , \"\" ). replace ( /[&?]wrapper=False/ , \"\" ). replace ( /[&?]wrapper_nonce=[A-Za-z0-9]+/ , \"\" )</ script > </ head > < body > < div id = \"out\" ></ div > < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > < script > class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ) }) } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } } page = new Page () </ script > </ body > </ html > You can see that most of it is just simple html. However, there is the javascript that has the ZeroFrame class. This is what we are going to be talking about next.","title":"The Index File"},{"location":"extra/StaticZite/#the-zeroframe-class","text":"The ZeroFrame class is used to talk to the ZeroFrame client via an API. There are many things you can do with ZeroFrame, including talking to ZeroNet Plugins 1 . A few of the most common things that you can do with ZeroFrame are: Open Link in New Tab Show Notifications and Prompts to the User Read and Write to Files Query the Database Sign and Publish files Show notifications to the User's ZeroHello NewsFeed (via the NewsFeed plugin) In this lesson, we are only going to talk about the onOpenWebsocket and onRequest methods and getting the Site Info.","title":"The ZeroFrame Class"},{"location":"extra/StaticZite/#defining-our-own-class","text":"In order to use ZeroFrame and provide our own methods and properties, we create our own class that extends the ZeroFrame class. Before we can do this though, we must first include the ZeroFrame.js file. < script type = \"text/javascript\" src = \"js/ZeroFrame.js\" ></ script > The class is then defined: class Page extends ZeroFrame { // ... } Afterwards, we Instantiate our class so we can access the methods and properties outside of the class: page = new Page (); Inside this class, we have three methods. The first is called onOpenWebsocket , and is what we will be talking about next.","title":"Defining Our Own Class"},{"location":"extra/StaticZite/#onopenwebsocket","text":"The onOpenWebsocket method is called when your page has been loaded. This method is useful for getting site information and initializing everything on startup. Notice that ZeroHello generated code inside of this method. onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ) }) } The cmd method is called whenever you want to communicate with the ZeroNet Client. You pass in the command name as the first argument. In this case, it's siteInfo . This command returns information on our site - including who is currently logged in and peer count. The second argument passed in are the parameters for the command. In this case, siteInfo doesn't take any parameters, so we pass in an empty array. The next argument is a callback function. This is needed because ZeroFrame commands run asynchronously - which means the things called after the cmd method don't wait until the command is finished. This is what the third argument is for. Once the command has been run, the function will be called with the return information as the arguments. In this case, the command returns the site information. In this case, once the command has finished, the callback function is ran, and calls the setSiteInfo method with the site information passed in. This method simply displays the site information onto the page: setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } Notice that we call this inside of the callback function. If you need to do anything that requires reading from site_info , you must put it inside of this callback function - otherwise there's a great chance it will run while site_info is still null or undefined - or whatever default value you may have set it to. TIP: You can easily see everything that site_info gives you by simply printing it out to the console.","title":"onOpenWebsocket"},{"location":"extra/StaticZite/#onrequest","text":"The next method is called onRequest . This method is called by ZeroNet everytime something has happened to your zite. For example, if the site information has been changed (peer count changed, zite has been updated, logged in user has changed, etc). onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } In this case, whenever the site information has been changed, we are calling setSiteInfo , which shows the new information on the page. Notice that we are using the message.params variable. onRequest also sends messages with the command. This message contains a params property. This is what we are using to get the site information. The params property can also contain the event property, which gives you the event that happened. This is useful for doing an action on the file_done event. This event is called whenever a file has been updated and downloaded and is very useful for checking whether the database was updated in order to dynamically change the content on the zite.","title":"onRequest"},{"location":"extra/StaticZite/#requirement-of-the-zeroframe-class","text":"If you want your zite completely static, and not change based on the user logged in, a database, site information, etc. then there might not be a need for you to include the ZeroFrame class - unless you are using any of the ZeroFrame API calls. There are some API calls that are useful even for static zites. For example, notifications, prompts, reading files (e.g. json files), opening a link in a new tab, client-side routing, and more. You can find more information about these and other ZeroFrame API commands in the ZeroFrame API Docs . TIP: All of the commands listed in the ZeroFrame API Docs are always called using the cmd() method.","title":"Requirement of the ZeroFrame Class"},{"location":"extra/StaticZite/#signing-and-publishing-your-zite","text":"You can start adding to your zite now by modifying the index page, creating new pages, etc. However, after your zite is done, you need to be sure to sign and publish it. Signing your zite will do a few things: Create a Digital Signature that is stored in the content.json file Update the content.json file to include the new hashes of all the non-ignored files in your zite * Change the modified field in the content.json file All of these are done to ensure the security of your zite. They are used so peers can reject changes to your zite that weren't made by you. The modified field is used by clients to ensure they are only downloading a content.json file that is newer than the one they have. If you have peers, you need to send your updated zite's files to other peers so they can then send it to more peers until everyone has the updated zite. You can do this by publishing your zite. However, if you have no peers yet, there is no need to do this because any new visitors to your zite will just download these updated files from your client. In order to publish and sign your zite, drag the 0 button in the top right corner to the left, scroll all the way down to the This is my site section. Click Sign , then Publish . This is also where you can more easily change the zite's title and description. Previous Tutorial: The Basics Next Tutorial: Users and Databases In ZeroNet To learn how to write a ZeroNet plugin, you can read the Writing A Plugin tutorial . \u21a9","title":"Signing and Publishing Your Zite"},{"location":"extra/TheBasics/","text":"Introduction Before we start creating zites, it is useful to know how zites work on ZeroNet. This tutorial will take you through how to create an empty zite, where to put your code, what you need before you can publish your zite, and how they are updated, transfered, and kept secure. Zites are made up of basic web code, including html, css, and js. Additionally, json files are used for storing data and for telling ZeroNet what databases you have and how they are structured. Since ZeroNet makes no use of a server - everything is downloaded to your computer and ran locally - there is no way to do server side scripting. However, this is remedied by using the ZeroNet API called ZeroFrame. This API lets you query server/site/user info, load or modify files using a WebSocket connection to your ZeroNet client, and query and modify databases. 1 Creating A Zite There are currently two ways of creating a zite. You can clone an existing zite, or you can create your own zite from scratch. If you decide to clone a zite, there are many of them you can choose from, including ZeroBlog . However, if you want to create your own zite from scratch, that is what the next few tutorials are going to cover. 2 In order to clone a zite, find a zite you want to clone, visit the zite so that it is downloaded to your computer. Next, go back to ZeroHello and find the zite in the sidebar. Click the menu icon, and press 'Clone'. To create an empty zite, go to ZeroHello, click the menu icon at the top left next to the ZeroHello logo, and click 'Create new, empty site'. Once you click on this, you will be redirected to your new empty zite. Take note of its address, this is the address people will use to visit your zite. An empty zite will setup everything necessary for you to start creating a zite from scratch. The Sidebar The Sidebar is the place, where you can view information about any zite. It can be accessed by visiting a zite, and pulling the transluscent circle with the 0 in the middle, to the left. Here you can see an interactive globe that you can rotate, which displays all the peers over the globe. There is a list of different items under it: 1. Peers : Shows to how many peers you are connected, how many there are to which you can connect, how many use Onion, and the total amount of peers 2. Data Transfer : Shows how much data you have sent and received on the zite opened 3. Files : Shows what the summed size of the different file-formats are 4. Size Limit : Shows, how much of the filesize-limit you are using (in %), what the available free space is, on your harddrive, and an input to set the zites filesize-limit 5. Optional Files : Shows how much data you have downloaded, of all the optional files on the zite 6. Download and help distribute all files : Switch, to toggle if you want to download and seed all the optional files 7. Database : Shows how big the database is, the path to it (relative to the zites path), a button to reload the Database-Scheme, and a button to rebuild the database 8. Identity Address : Shows how much storage you filled on the zite, of which the total is set by the Owner, and your Authentication-Address, with a button to select another account 9. Site Control : The first button tries to fetch the newest version available to any connected peer, the second pauses the download of any new data, and the third deletes the complete zite from the harddrive 10. Site Address : Displays the zites address (this might be helpful for finding the zite in your data-dir, if you are accessing it via a .bit -address) 11. Missing Files : Shows a list of all files, that are missing, according to the ZeroNet-Client 12. This is my site : Switch, to toggle, if you own this zite. If this is active, a few other items will appear underneath The List-part This is my site : 1. Site Title : Input to change the title of the zite 2. Site Description : Input to change the description of the zite 3. Save site settings : A button, to save the last two inputs to the zites content.json -File 4. Content Publishing : A list of files you can sign (click them to insert them into the input below), an input to input the file you want to sign/publish, a button to sign the selected file, and another one, to publish it to connected peers Where Is A Zite Stored Locally? If you need to change any of the code for your zite, you can find your zite in the ZeroNet_Root/data folder, under the directory of your zite address. This is the same as the site address shown in the sidebar. When you first start out, this directory should have a content.json file, an index.html file, and a js director where the ZeroFrame.js file is located. Content.json File, What is It? When a visitor visit's your zite, the first thing they download is the zite's content.json file. This content.json file holds all of the other file names which must be downloaded in order to use the zite, along with their hashes so it can be verified that they are downloading the correct files. It basically gives information on the content of the zite. This file also holds a cryptographic digital signature that was created by the owner to verify that the content.json file has not been tampered with by anyone other than the zite owner. The file does contain other information like what ZeroNet version the zite was created for, the modified number to tell what version of the zite you are downloading, the zite's title and description, the address from which you cloned the zite, and any other important information. Signing the Content.json File Whenever you make any changes to your zite, including to the content.json file, you must sign the file. This ensures that whenever a person downloads your zite, they know these changes were made by the zite owner. Signing your content.json file will update the hashes to all of the files stored and used on your zite. NOTE: If you do not sign this file, visitors will not be able to download this updated version of your zite for security reasons. If you have no peers, they will not be able to visit your zite at all since they can't download a signed content.json file elsewhere. So make sure you sign this file before you publish it. To sign this file, you go to the sidebar and, in the This is my site section, click Sign . How Zites Are Kept Secure ZeroNet secures zites by using private and public keys, the public key being your zite's address. The private key is always kept on your computer, in the users.json file under the ZeroNet_Root/data directory. This private key is used to create a digital signature and encrypt the hash of the content.json file in its current state (excluding the digital signature stored in the file). This digital signature (and encrypted hash) is then stored in this file. When a visitor downloads the file, they first decrypt the digital signature with the zite's public key (the zite's address). Then, they verify the file by comparing the hash of the file with the hash that has been decrypted and sent via the digital signature. This keeps your zite secure because the only person who can create the digital signature that holds the hash of the content.json file is the person with the private key - the zite owner. Publishing Your Zite In order to publish your zite, you simply sign your content.json file and click publish in the sidebar. These buttons are located in the sidebar under the This is my site section. If you do not have any peers, you do not need to click publish. Publishing sends the content.json file to other peers. Without peers, there is no need because these peers will download your zite from your computer when they go to visit your zite. Keeping Your Zite Online In order to keep your zite online, you need peers that are reliable and always on. If your computer will not be connected to ZeroNet all the time, you will have to either have enough peers to ensure your peer count won't go down to zero when you are offline, or you will have to find at least one peer that will always be online. It may be a good idea to seed your zite by ZeroNet proxies, for example bit.surf . To do this, you simply visit your zite using the proxy of your choosing. This will help keep your zite online by having another computer seed the zite. bit.surf is a good choice if you want your zite picked up by ZeroNet search engines like RVRE . You can also add your zite to New ZeroNet Sites , which will not only further spread your zite, but also get seeders who seed from this list of new zites. And finally, you will also want to add your zite to ZeroSites so it can more easily be discovered. Updating Your Zite Updating your zite is pretty simple. After making any changes to the zite, you must first sign your zite. This will update the hashes and the digital signature in the content.json file. After you have done that, click publish . This will send the new content.json file to a max of 6 different peers. These peers check if the file is newer than the one they already have. If it is, they download the rest of the files that have been changed/updated (by comparing the hashes in the new content.json file to the hashes in the old content.json file to see if they have changed). After a peer has the updated files, they then send them to other peers using the same method as above. Eventually, all peers will have the updated files. Note that before a peer download's the changed files, they first verify that the content.json file was modified by the zite owner by comparing the file's hash to the decrypted hash from the Digital Signature. And after they have download the updated files, they also verify them with the hashes in the content.json file. Next Tutorial: Creating A Static Zite Additionally: Tips & Tricks Tutorial There is a page on the ZeroNet Read The Docs that gives a reference to the ZeroFrame API here . \u21a9 There's also this tutorial from ZeroBlog. \u21a9","title":"\u57fa\u7840"},{"location":"extra/TheBasics/#introduction","text":"Before we start creating zites, it is useful to know how zites work on ZeroNet. This tutorial will take you through how to create an empty zite, where to put your code, what you need before you can publish your zite, and how they are updated, transfered, and kept secure. Zites are made up of basic web code, including html, css, and js. Additionally, json files are used for storing data and for telling ZeroNet what databases you have and how they are structured. Since ZeroNet makes no use of a server - everything is downloaded to your computer and ran locally - there is no way to do server side scripting. However, this is remedied by using the ZeroNet API called ZeroFrame. This API lets you query server/site/user info, load or modify files using a WebSocket connection to your ZeroNet client, and query and modify databases. 1","title":"Introduction"},{"location":"extra/TheBasics/#creating-a-zite","text":"There are currently two ways of creating a zite. You can clone an existing zite, or you can create your own zite from scratch. If you decide to clone a zite, there are many of them you can choose from, including ZeroBlog . However, if you want to create your own zite from scratch, that is what the next few tutorials are going to cover. 2 In order to clone a zite, find a zite you want to clone, visit the zite so that it is downloaded to your computer. Next, go back to ZeroHello and find the zite in the sidebar. Click the menu icon, and press 'Clone'. To create an empty zite, go to ZeroHello, click the menu icon at the top left next to the ZeroHello logo, and click 'Create new, empty site'. Once you click on this, you will be redirected to your new empty zite. Take note of its address, this is the address people will use to visit your zite. An empty zite will setup everything necessary for you to start creating a zite from scratch.","title":"Creating A Zite"},{"location":"extra/TheBasics/#the-sidebar","text":"The Sidebar is the place, where you can view information about any zite. It can be accessed by visiting a zite, and pulling the transluscent circle with the 0 in the middle, to the left. Here you can see an interactive globe that you can rotate, which displays all the peers over the globe. There is a list of different items under it: 1. Peers : Shows to how many peers you are connected, how many there are to which you can connect, how many use Onion, and the total amount of peers 2. Data Transfer : Shows how much data you have sent and received on the zite opened 3. Files : Shows what the summed size of the different file-formats are 4. Size Limit : Shows, how much of the filesize-limit you are using (in %), what the available free space is, on your harddrive, and an input to set the zites filesize-limit 5. Optional Files : Shows how much data you have downloaded, of all the optional files on the zite 6. Download and help distribute all files : Switch, to toggle if you want to download and seed all the optional files 7. Database : Shows how big the database is, the path to it (relative to the zites path), a button to reload the Database-Scheme, and a button to rebuild the database 8. Identity Address : Shows how much storage you filled on the zite, of which the total is set by the Owner, and your Authentication-Address, with a button to select another account 9. Site Control : The first button tries to fetch the newest version available to any connected peer, the second pauses the download of any new data, and the third deletes the complete zite from the harddrive 10. Site Address : Displays the zites address (this might be helpful for finding the zite in your data-dir, if you are accessing it via a .bit -address) 11. Missing Files : Shows a list of all files, that are missing, according to the ZeroNet-Client 12. This is my site : Switch, to toggle, if you own this zite. If this is active, a few other items will appear underneath The List-part This is my site : 1. Site Title : Input to change the title of the zite 2. Site Description : Input to change the description of the zite 3. Save site settings : A button, to save the last two inputs to the zites content.json -File 4. Content Publishing : A list of files you can sign (click them to insert them into the input below), an input to input the file you want to sign/publish, a button to sign the selected file, and another one, to publish it to connected peers","title":"The Sidebar"},{"location":"extra/TheBasics/#where-is-a-zite-stored-locally","text":"If you need to change any of the code for your zite, you can find your zite in the ZeroNet_Root/data folder, under the directory of your zite address. This is the same as the site address shown in the sidebar. When you first start out, this directory should have a content.json file, an index.html file, and a js director where the ZeroFrame.js file is located.","title":"Where Is A Zite Stored Locally?"},{"location":"extra/TheBasics/#contentjson-file-what-is-it","text":"When a visitor visit's your zite, the first thing they download is the zite's content.json file. This content.json file holds all of the other file names which must be downloaded in order to use the zite, along with their hashes so it can be verified that they are downloading the correct files. It basically gives information on the content of the zite. This file also holds a cryptographic digital signature that was created by the owner to verify that the content.json file has not been tampered with by anyone other than the zite owner. The file does contain other information like what ZeroNet version the zite was created for, the modified number to tell what version of the zite you are downloading, the zite's title and description, the address from which you cloned the zite, and any other important information.","title":"Content.json File, What is It?"},{"location":"extra/TheBasics/#signing-the-contentjson-file","text":"Whenever you make any changes to your zite, including to the content.json file, you must sign the file. This ensures that whenever a person downloads your zite, they know these changes were made by the zite owner. Signing your content.json file will update the hashes to all of the files stored and used on your zite. NOTE: If you do not sign this file, visitors will not be able to download this updated version of your zite for security reasons. If you have no peers, they will not be able to visit your zite at all since they can't download a signed content.json file elsewhere. So make sure you sign this file before you publish it. To sign this file, you go to the sidebar and, in the This is my site section, click Sign .","title":"Signing the Content.json File"},{"location":"extra/TheBasics/#how-zites-are-kept-secure","text":"ZeroNet secures zites by using private and public keys, the public key being your zite's address. The private key is always kept on your computer, in the users.json file under the ZeroNet_Root/data directory. This private key is used to create a digital signature and encrypt the hash of the content.json file in its current state (excluding the digital signature stored in the file). This digital signature (and encrypted hash) is then stored in this file. When a visitor downloads the file, they first decrypt the digital signature with the zite's public key (the zite's address). Then, they verify the file by comparing the hash of the file with the hash that has been decrypted and sent via the digital signature. This keeps your zite secure because the only person who can create the digital signature that holds the hash of the content.json file is the person with the private key - the zite owner.","title":"How Zites Are Kept Secure"},{"location":"extra/TheBasics/#publishing-your-zite","text":"In order to publish your zite, you simply sign your content.json file and click publish in the sidebar. These buttons are located in the sidebar under the This is my site section. If you do not have any peers, you do not need to click publish. Publishing sends the content.json file to other peers. Without peers, there is no need because these peers will download your zite from your computer when they go to visit your zite.","title":"Publishing Your Zite"},{"location":"extra/TheBasics/#keeping-your-zite-online","text":"In order to keep your zite online, you need peers that are reliable and always on. If your computer will not be connected to ZeroNet all the time, you will have to either have enough peers to ensure your peer count won't go down to zero when you are offline, or you will have to find at least one peer that will always be online. It may be a good idea to seed your zite by ZeroNet proxies, for example bit.surf . To do this, you simply visit your zite using the proxy of your choosing. This will help keep your zite online by having another computer seed the zite. bit.surf is a good choice if you want your zite picked up by ZeroNet search engines like RVRE . You can also add your zite to New ZeroNet Sites , which will not only further spread your zite, but also get seeders who seed from this list of new zites. And finally, you will also want to add your zite to ZeroSites so it can more easily be discovered.","title":"Keeping Your Zite Online"},{"location":"extra/TheBasics/#updating-your-zite","text":"Updating your zite is pretty simple. After making any changes to the zite, you must first sign your zite. This will update the hashes and the digital signature in the content.json file. After you have done that, click publish . This will send the new content.json file to a max of 6 different peers. These peers check if the file is newer than the one they already have. If it is, they download the rest of the files that have been changed/updated (by comparing the hashes in the new content.json file to the hashes in the old content.json file to see if they have changed). After a peer has the updated files, they then send them to other peers using the same method as above. Eventually, all peers will have the updated files. Note that before a peer download's the changed files, they first verify that the content.json file was modified by the zite owner by comparing the file's hash to the decrypted hash from the Digital Signature. And after they have download the updated files, they also verify them with the hashes in the content.json file. Next Tutorial: Creating A Static Zite Additionally: Tips & Tricks Tutorial There is a page on the ZeroNet Read The Docs that gives a reference to the ZeroFrame API here . \u21a9 There's also this tutorial from ZeroBlog. \u21a9","title":"Updating Your Zite"},{"location":"extra/TipsAndTricks/","text":"This tutorial has common tips and tricks for things that aren't readily apparent. Some of these will probably be expanded into full tutorials. Onpopstate won't work. What's going on? Since zeronet displays all zites in an iframe, the onpopstate is actually using the iframe's address. Therefore, you cannot use onpopstate. But don't worry, there's a way around this. It turns out that the ZeroFrame API has a way of hooking into onpopstate. The wrapper passes the onpopstate event into the inner iframe and you can catch it using onRequest . Here's how I'm doing it on this zite (and in my ZeroFrame Router): onRequest ( cmd , message ) { if ( cmd == \"wrapperPopState\" ) { if ( message . params . state ) { if ( ! message . params . state . url ) { message . params . state . url = message . params . href . replace ( /.*\\?/ , \"\" ); } // Don't worry too much about this, it's just a function // in my ZeroFrame Router to navigate to a route. this . navigate ( message . params . state . url . replace ( /^\\// , '' )); } } } Can A Zite Owner Modify A User's data.json File? Yes they can. All you have to do is modify the file, then manually put the path to the content.json file in the sidebar beside the Sign button and click Sign and Publish . Usually the path will be something like: data/users/[user's id key folder]/content.json . What Browsers Do I Need To Support For My Zite? You only need to support browser versions that support Web Socket's because that is a requirement for ZeroNet. This means you do not have to support any version of IE before version 10. Here's a link showing browser support for Web Sockets: https://caniuse.com/#search=websockets . AUTOINCREMENT Issue in Database There is an interesting thing that happens with AUTOINCREMENT . Everytime you rebuild the database for your zite, any columns that use AUTOINCREMENT will not be reset back to 1, but will instead start at the next integer after the integer of the last row, which was deleted during the rebuild along with the rows before it. I'm unsure if this is intended or not. If you are manually updating your json file, a way around this is to just hardcode the integer's, incrementing them yourself. This is currently what I do for the tutorial id's on this zite. Reloading List When Database Changes If you would like to reload a list, whose items were gotten from a database, whenever the database changes (for example, reloading comments when someone posts a new comment), all you need to do is add this to your onRequest function: if ( message . params . event [ 0 ] == \"file_done\" ) { loadComments (); } The file done message is sent whenever a json file was changed, the new version has been downloaded, and the database has reloaded/updated. Using A Data.json File That's Not User-specific You can use a data.json file that only you can sign and isn't stored in a users folder. This is what I use to store the tutorials list for this zite. First, you need to make sure it isn't ignored in your content.json file. Next, create the file in the data folder. Below, this will be called tutorials.json since it stores tutorials. Then, in your dbschema.json file, add this: In maps section: \"tutorials.json\" : { \"to_table\" : [ { \"node\" : \"tutorials\" , \"table\" : \"tutorials\" } ] } This tells ZeroNet that in the tutorials.json file, you have an array called tutorials whose data should be mapped into the tutorials table in the sqlite database. In tables section: \"tutorials\" : { \"cols\" : [ [ \"id\" , \"INTEGER PRIMARY KEY\" ], [ \"slug\" , \"TEXT NOT NULL\" ], [ \"file\" , \"TEXT NOT NULL\" ], [ \"title\" , \"TEXT NOT NULL\" ], [ \"description\" , \"TEXT\" ], [ \"author\" , \"TEXT NOT NULL\" ], [ \"tags\" , \"TEXT\" ], [ \"json_id\" , \"INTEGER REFERENCES json (json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX tutorial_key ON tutorials(id, json_id)\" , \"CREATE UNIQUE INDEX tutorials_slug ON tutorials(slug)\" , \"CREATE INDEX tutorial_file ON tutorials(slug)\" , \"CREATE INDEX tutorial_title ON tutorials(title)\" ], \"schema_changed\" : 12 } This tells ZeroNet all of the columns and indexes of the tutorials table. The columns should directly relate to what's in your data.json file. Make sure you add [\"json_id\", \"INTEGER REFERENCES json (json_id)\"] otherwise none of this will work. Whenever you change a table in your dbschema.json file, make sure you update the schema_changed field so ZeroNet knows to reload that table. Now all you need to do is press Reload and Rebuild on the sidebar on your zite.","title":"\u4e00\u4e9b\u6280\u5de7"},{"location":"extra/TipsAndTricks/#onpopstate-wont-work-whats-going-on","text":"Since zeronet displays all zites in an iframe, the onpopstate is actually using the iframe's address. Therefore, you cannot use onpopstate. But don't worry, there's a way around this. It turns out that the ZeroFrame API has a way of hooking into onpopstate. The wrapper passes the onpopstate event into the inner iframe and you can catch it using onRequest . Here's how I'm doing it on this zite (and in my ZeroFrame Router): onRequest ( cmd , message ) { if ( cmd == \"wrapperPopState\" ) { if ( message . params . state ) { if ( ! message . params . state . url ) { message . params . state . url = message . params . href . replace ( /.*\\?/ , \"\" ); } // Don't worry too much about this, it's just a function // in my ZeroFrame Router to navigate to a route. this . navigate ( message . params . state . url . replace ( /^\\// , '' )); } } }","title":"Onpopstate won't work. What's going on?"},{"location":"extra/TipsAndTricks/#can-a-zite-owner-modify-a-users-datajson-file","text":"Yes they can. All you have to do is modify the file, then manually put the path to the content.json file in the sidebar beside the Sign button and click Sign and Publish . Usually the path will be something like: data/users/[user's id key folder]/content.json .","title":"Can A Zite Owner Modify A User's data.json File?"},{"location":"extra/TipsAndTricks/#what-browsers-do-i-need-to-support-for-my-zite","text":"You only need to support browser versions that support Web Socket's because that is a requirement for ZeroNet. This means you do not have to support any version of IE before version 10. Here's a link showing browser support for Web Sockets: https://caniuse.com/#search=websockets .","title":"What Browsers Do I Need To Support For My Zite?"},{"location":"extra/TipsAndTricks/#autoincrement-issue-in-database","text":"There is an interesting thing that happens with AUTOINCREMENT . Everytime you rebuild the database for your zite, any columns that use AUTOINCREMENT will not be reset back to 1, but will instead start at the next integer after the integer of the last row, which was deleted during the rebuild along with the rows before it. I'm unsure if this is intended or not. If you are manually updating your json file, a way around this is to just hardcode the integer's, incrementing them yourself. This is currently what I do for the tutorial id's on this zite.","title":"AUTOINCREMENT Issue in Database"},{"location":"extra/TipsAndTricks/#reloading-list-when-database-changes","text":"If you would like to reload a list, whose items were gotten from a database, whenever the database changes (for example, reloading comments when someone posts a new comment), all you need to do is add this to your onRequest function: if ( message . params . event [ 0 ] == \"file_done\" ) { loadComments (); } The file done message is sent whenever a json file was changed, the new version has been downloaded, and the database has reloaded/updated.","title":"Reloading List When Database Changes"},{"location":"extra/TipsAndTricks/#using-a-datajson-file-thats-not-user-specific","text":"You can use a data.json file that only you can sign and isn't stored in a users folder. This is what I use to store the tutorials list for this zite. First, you need to make sure it isn't ignored in your content.json file. Next, create the file in the data folder. Below, this will be called tutorials.json since it stores tutorials. Then, in your dbschema.json file, add this: In maps section: \"tutorials.json\" : { \"to_table\" : [ { \"node\" : \"tutorials\" , \"table\" : \"tutorials\" } ] } This tells ZeroNet that in the tutorials.json file, you have an array called tutorials whose data should be mapped into the tutorials table in the sqlite database. In tables section: \"tutorials\" : { \"cols\" : [ [ \"id\" , \"INTEGER PRIMARY KEY\" ], [ \"slug\" , \"TEXT NOT NULL\" ], [ \"file\" , \"TEXT NOT NULL\" ], [ \"title\" , \"TEXT NOT NULL\" ], [ \"description\" , \"TEXT\" ], [ \"author\" , \"TEXT NOT NULL\" ], [ \"tags\" , \"TEXT\" ], [ \"json_id\" , \"INTEGER REFERENCES json (json_id)\" ] ], \"indexes\" : [ \"CREATE UNIQUE INDEX tutorial_key ON tutorials(id, json_id)\" , \"CREATE UNIQUE INDEX tutorials_slug ON tutorials(slug)\" , \"CREATE INDEX tutorial_file ON tutorials(slug)\" , \"CREATE INDEX tutorial_title ON tutorials(title)\" ], \"schema_changed\" : 12 } This tells ZeroNet all of the columns and indexes of the tutorials table. The columns should directly relate to what's in your data.json file. Make sure you add [\"json_id\", \"INTEGER REFERENCES json (json_id)\"] otherwise none of this will work. Whenever you change a table in your dbschema.json file, make sure you update the schema_changed field so ZeroNet knows to reload that table. Now all you need to do is press Reload and Rebuild on the sidebar on your zite.","title":"Using A Data.json File That's Not User-specific"},{"location":"extra/UsersAndDatabasesInZeroNet/","text":"Introduction This tutorial provides a basic overview of how Databases and Users in ZeroNet are handled so that both users and developers will understand them as a fundamental part of all zites on ZeroNet. Not only will this tutorial cover the purpose of Databases and Users in general, but also how each one is handled within each zite, how they connect to each other, and how they are fundamental in each other's functioning. First we will start with Users, then we will move onto Databases. Users ZeroNet uses Certificate Authorities to manage and verify users. With this, there is no need to remember or manage passwords, which makes the network stronger and safer as a whole. We will discover not only the way in which ZeroNet achieves a simple yet strong system, but how it allows zites to associate a certain level of trustworthiness by the use of Certificate Authorities (known as ID Providers within the network). We will also learn about the different methods employed by these Certificate Authorities and how they are used within zites to associate data with a user ID. Finally, we will go over how ZeroNet is able to very easily verify that a user belongs to a given ID Provider, which is in turn then used to verify the data of that user. How Certificate Authorities Work In ZeroNet, everything is signed using Bitcoin keys. A certificate authority associates memorizable ID names with Bitcoin addresses. There are currently five main ID Providers for ZeroNet: ZeroId - Official, names are unique, must access the clearnet to verify name uniqueness KaffieId - Names are not unique, fully decentralized CryptoId - Names are not unique, fully decentralized PolarId - Names are not unique, users verified by Google Account PeakId - Names are unique, users verified by Google Account A certificate is created for each user ID. The body of the certificate consists of a user's authentication address, portal type, and username. The user's authentication address and its private key are determined by the authentication address automatically assigned when you downloaded the ID provider's zite. The signature is generated by the certificate authority based on the body of the certificate. This signature is generated by encrypting the certificate body with a private key. How this encryption is done varies based on the method by which the CA uses, centralized (ZeroId, PolarId, and PeakId) or decentralized (KaffieId and CryptoId). Centralized Method For the centralized method, the certificate authority uses a central server to generate the signature. This is so that the server can verify certain things, such as usernames meeting specific character requirements, overall length, and uniqueness. The server also generates the signature with a private key. By using a server, the private key is only known to the owner of the ID provider. ZeroId, PolarId, and PeakId all employ this method, but PolarId does not enforce unique usernames. Decentralized Method In contrast, the decentralized method does not rely on a central server. Instead, the client generates the signature by using a publicly available private key. Because the private key is available, there is no way to ensure usernames meet specific requirements. This is why it is possible to create non-unique usernames with this method. KaffieId and CryptoId use this method, which is why they do not enforce unique usernames. With KaffieId, a private key that is separate from the zite's private key is used to ensure people are not able to edit the zite. This also means that the public key is different from the zite's address. Once registration is done, the certificate contents of your new ID will be stored in the zeronet_root/data/users.json file, including the signature given by the ID provider (this is done via the certAdd command). Use In Zites In order to allow users to sign-in and add their own content to a zite, the zite owner must allow certain ID providers. This can be done by setting rules in a content.json file on the zite, providing it with the public key and a friendly name (usually a .bit address) of the ID provider. For ZeroId, the public key is the address of the ZeroId zite. However, since KaffieId's private key is public, the private key, and therefore public key, is not the same as the zite's address. This is to ensure nobody can edit the KaffieId website. For this reason, it is the public key associated with the private key used to create user ID signatures that should be used, not the public key of KaffieId's zite. When a user logs in and posts content to the zite for the first time, a directory, named based on the user's public address, is created. This directory is used to store important files for the user, including any images, audio, video, etc. that the user may post to a zite. A content.json file is created within this directory, that stores the user's certificate information (username, portal type, public key, and the signature from the ID provider they signed up with). Verifying IDs The verification process for user IDs is very simple. ZeroNet is able to get the information of a user's certificate by reading their own content.json file in their directory. The signature is decrypted based on the public key given in the zite's content.json file. If the signature matches the certificate information stored in the user's content.json file, then the user is valid and ZeroNet continues to download and check the rest of the files in the user's directory. Databases Now that we have gone over Users, it is time to detail Databases, which have a direct link to Users. ZeroNet makes use of SQLite3 databases. The usage of databases in ZeroNet are very different from databases used on the clearnet. The main reason being ZeroNet is decentralized. This decentralization also requires that receiving updates from users should not be instant. Not only is there a waiting period of 30 seconds between content publishes, but there is also a waiting period for all of the changes to be spread across all peers of the network. Keeping this in mind, ZeroNet needs a way to ensure that databases are not overwritten when two people publish changes at the same time. In order to do this, ZeroNet creates separate json files for each user that will store all the information that should aggregate into the database. With this, a user only affects his own json file, meaning that these files should never be overwritten by someone else. Dbschema File All zites that use a database must have a dbschema.json file. This is a json file that simply details all the tables and columns of the database. It will also tell ZeroNet which json files should be aggregated into which tables inside the database. User Permissions Typically a user's files, including their json file used for the database, are stored within the data/users/[auth_address]/ directory of the zite's root directory. In order for the zite's owner to be able to control what the user can put inside this directory, they use a content.json file located in the data/users/ directory. This file controls which ID Provider users can use to add to the zite, as well as which files are allowed within their user directory and the file size limit. Users also get their own content.json file located within their user directory that will tell ZeroNet what files they've uploaded and their respective size and hashes. This is used to verify that the correct user files are being downloaded. Data File and Updates Usually, zite's use the data.json filename for the file that will store all of the user information that should be aggregated into the zite's database. Whenever the zite updates user content (which can only be done by the user using the zite on their own computer), the updated information is added to this file. Once this file updates, zites will usually instruct ZeroNet to sign the user directory's contents, which will add the hashes of all the files, including data.json , to the user's content.json file. Then, it will add a signature to the file. This signature is generated by creating a hash of the content.json file and encrypting that with the user's private key (which is located in the zeronet_root/data/users.json file). This is very similar to how a zite owner signs his own zite. Finally, the zite will publish the changes, which will give to at most 6 peers, the new content.json file. These peers will verify the user using the methods described in the first half of this tutorial. Then, they will ask for the other files. Once they have been downloaded, they will verify these files using the hashes provided in the content.json file and publish the content.json file to more peers until there are no peers left that need the file. Once a client receives a new data.json file, it will add the new information into the database and send a request to the zite. A zite could then respond to this request and reload the contents on the screen with the updated information by requerying the database. Previous Tutorial: Users and Databases In ZeroNet","title":"\u7528\u6237\u548c\u6570\u636e\u5e93"},{"location":"extra/UsersAndDatabasesInZeroNet/#introduction","text":"This tutorial provides a basic overview of how Databases and Users in ZeroNet are handled so that both users and developers will understand them as a fundamental part of all zites on ZeroNet. Not only will this tutorial cover the purpose of Databases and Users in general, but also how each one is handled within each zite, how they connect to each other, and how they are fundamental in each other's functioning. First we will start with Users, then we will move onto Databases.","title":"Introduction"},{"location":"extra/UsersAndDatabasesInZeroNet/#users","text":"ZeroNet uses Certificate Authorities to manage and verify users. With this, there is no need to remember or manage passwords, which makes the network stronger and safer as a whole. We will discover not only the way in which ZeroNet achieves a simple yet strong system, but how it allows zites to associate a certain level of trustworthiness by the use of Certificate Authorities (known as ID Providers within the network). We will also learn about the different methods employed by these Certificate Authorities and how they are used within zites to associate data with a user ID. Finally, we will go over how ZeroNet is able to very easily verify that a user belongs to a given ID Provider, which is in turn then used to verify the data of that user.","title":"Users"},{"location":"extra/UsersAndDatabasesInZeroNet/#how-certificate-authorities-work","text":"In ZeroNet, everything is signed using Bitcoin keys. A certificate authority associates memorizable ID names with Bitcoin addresses. There are currently five main ID Providers for ZeroNet: ZeroId - Official, names are unique, must access the clearnet to verify name uniqueness KaffieId - Names are not unique, fully decentralized CryptoId - Names are not unique, fully decentralized PolarId - Names are not unique, users verified by Google Account PeakId - Names are unique, users verified by Google Account A certificate is created for each user ID. The body of the certificate consists of a user's authentication address, portal type, and username. The user's authentication address and its private key are determined by the authentication address automatically assigned when you downloaded the ID provider's zite. The signature is generated by the certificate authority based on the body of the certificate. This signature is generated by encrypting the certificate body with a private key. How this encryption is done varies based on the method by which the CA uses, centralized (ZeroId, PolarId, and PeakId) or decentralized (KaffieId and CryptoId).","title":"How Certificate Authorities Work"},{"location":"extra/UsersAndDatabasesInZeroNet/#centralized-method","text":"For the centralized method, the certificate authority uses a central server to generate the signature. This is so that the server can verify certain things, such as usernames meeting specific character requirements, overall length, and uniqueness. The server also generates the signature with a private key. By using a server, the private key is only known to the owner of the ID provider. ZeroId, PolarId, and PeakId all employ this method, but PolarId does not enforce unique usernames.","title":"Centralized Method"},{"location":"extra/UsersAndDatabasesInZeroNet/#decentralized-method","text":"In contrast, the decentralized method does not rely on a central server. Instead, the client generates the signature by using a publicly available private key. Because the private key is available, there is no way to ensure usernames meet specific requirements. This is why it is possible to create non-unique usernames with this method. KaffieId and CryptoId use this method, which is why they do not enforce unique usernames. With KaffieId, a private key that is separate from the zite's private key is used to ensure people are not able to edit the zite. This also means that the public key is different from the zite's address. Once registration is done, the certificate contents of your new ID will be stored in the zeronet_root/data/users.json file, including the signature given by the ID provider (this is done via the certAdd command).","title":"Decentralized Method"},{"location":"extra/UsersAndDatabasesInZeroNet/#use-in-zites","text":"In order to allow users to sign-in and add their own content to a zite, the zite owner must allow certain ID providers. This can be done by setting rules in a content.json file on the zite, providing it with the public key and a friendly name (usually a .bit address) of the ID provider. For ZeroId, the public key is the address of the ZeroId zite. However, since KaffieId's private key is public, the private key, and therefore public key, is not the same as the zite's address. This is to ensure nobody can edit the KaffieId website. For this reason, it is the public key associated with the private key used to create user ID signatures that should be used, not the public key of KaffieId's zite. When a user logs in and posts content to the zite for the first time, a directory, named based on the user's public address, is created. This directory is used to store important files for the user, including any images, audio, video, etc. that the user may post to a zite. A content.json file is created within this directory, that stores the user's certificate information (username, portal type, public key, and the signature from the ID provider they signed up with).","title":"Use In Zites"},{"location":"extra/UsersAndDatabasesInZeroNet/#verifying-ids","text":"The verification process for user IDs is very simple. ZeroNet is able to get the information of a user's certificate by reading their own content.json file in their directory. The signature is decrypted based on the public key given in the zite's content.json file. If the signature matches the certificate information stored in the user's content.json file, then the user is valid and ZeroNet continues to download and check the rest of the files in the user's directory.","title":"Verifying IDs"},{"location":"extra/UsersAndDatabasesInZeroNet/#databases","text":"Now that we have gone over Users, it is time to detail Databases, which have a direct link to Users. ZeroNet makes use of SQLite3 databases. The usage of databases in ZeroNet are very different from databases used on the clearnet. The main reason being ZeroNet is decentralized. This decentralization also requires that receiving updates from users should not be instant. Not only is there a waiting period of 30 seconds between content publishes, but there is also a waiting period for all of the changes to be spread across all peers of the network. Keeping this in mind, ZeroNet needs a way to ensure that databases are not overwritten when two people publish changes at the same time. In order to do this, ZeroNet creates separate json files for each user that will store all the information that should aggregate into the database. With this, a user only affects his own json file, meaning that these files should never be overwritten by someone else.","title":"Databases"},{"location":"extra/UsersAndDatabasesInZeroNet/#dbschema-file","text":"All zites that use a database must have a dbschema.json file. This is a json file that simply details all the tables and columns of the database. It will also tell ZeroNet which json files should be aggregated into which tables inside the database.","title":"Dbschema File"},{"location":"extra/UsersAndDatabasesInZeroNet/#user-permissions","text":"Typically a user's files, including their json file used for the database, are stored within the data/users/[auth_address]/ directory of the zite's root directory. In order for the zite's owner to be able to control what the user can put inside this directory, they use a content.json file located in the data/users/ directory. This file controls which ID Provider users can use to add to the zite, as well as which files are allowed within their user directory and the file size limit. Users also get their own content.json file located within their user directory that will tell ZeroNet what files they've uploaded and their respective size and hashes. This is used to verify that the correct user files are being downloaded.","title":"User Permissions"},{"location":"extra/UsersAndDatabasesInZeroNet/#data-file-and-updates","text":"Usually, zite's use the data.json filename for the file that will store all of the user information that should be aggregated into the zite's database. Whenever the zite updates user content (which can only be done by the user using the zite on their own computer), the updated information is added to this file. Once this file updates, zites will usually instruct ZeroNet to sign the user directory's contents, which will add the hashes of all the files, including data.json , to the user's content.json file. Then, it will add a signature to the file. This signature is generated by creating a hash of the content.json file and encrypting that with the user's private key (which is located in the zeronet_root/data/users.json file). This is very similar to how a zite owner signs his own zite. Finally, the zite will publish the changes, which will give to at most 6 peers, the new content.json file. These peers will verify the user using the methods described in the first half of this tutorial. Then, they will ask for the other files. Once they have been downloaded, they will verify these files using the hashes provided in the content.json file and publish the content.json file to more peers until there are no peers left that need the file. Once a client receives a new data.json file, it will add the new information into the database and send a request to the zite. A zite could then respond to this request and reload the contents on the screen with the updated information by requerying the database. Previous Tutorial: Users and Databases In ZeroNet","title":"Data File and Updates"},{"location":"extra/WriteAPlugin/","text":"\u524d\u8a00 \u96f6\u7f51\u53ef\u4ee5\u7528\u63d2\u4ef6\u6269\u5c55\u529f\u80fd\u3001\u63d0\u4f9b\u989d\u5916\u7684\u7ad9\u70b9API\uff0c\u5b9e\u9645\u4e0a\u6709\u4e9b\u529f\u80fd\u5c31\u662f\u4e00\u4e2a\u63d2\u4ef6\u5b9e\u73b0\u7684\uff0c\u6bd4\u5982 MergerSite \u548c Newsfeed \u3002\u4f46\u662f\u96f6\u7f51\u73b0\u5728\u8fd8\u662f\u6ca1\u6709\u63d2\u4ef6\u5546\u5e97\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5\u63d2\u4ef6\u624d\u884c\u3002\u4e0d\u8fc7\u6dfb\u52a0\u3001\u7981\u7528\u3001\u521b\u5efa\u63d2\u4ef6\u8fd8\u662f\u633a\u7b80\u5355\u7684\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u5230\u5982\u4f55\u5199\u4e00\u4e2a\u96f6\u7f51\u63d2\u4ef6\uff0c\u7ed9\u7ad9\u70b9\u63d0\u4f9b\u989d\u5916\u7684API\u3002 \u96f6\u7f51\u63d2\u4ef6 \u96f6\u7f51\u5ba2\u6237\u7aef\u4e0b\u6709\u4e2a plugins \u76ee\u5f55\u3002\u5982\u679c\u4f60\u7528\u7684\u662fZeroBundle\uff0c\u8be5\u76ee\u5f55\u5e94\u4f4d\u4e8e core \u6587\u4ef6\u5939\u3002 \u7ed3\u6784\u7c7b\u4f3c\u4e8e\uff1a . \u251c\u2500\u2500 AnnounceZero \u251c\u2500\u2500 Cors \u251c\u2500\u2500 CryptMessage \u251c\u2500\u2500 disabled-Bootstrapper \u251c\u2500\u2500 disabled-Dnschain \u251c\u2500\u2500 disabled-DonationMessage \u251c\u2500\u2500 disabled-Multiuser \u251c\u2500\u2500 disabled-StemPort \u251c\u2500\u2500 disabled-UiPassword \u251c\u2500\u2500 disabled-Zeroname-local \u251c\u2500\u2500 FilePack \u251c\u2500\u2500 MergerSite \u251c\u2500\u2500 Mute \u251c\u2500\u2500 Newsfeed \u251c\u2500\u2500 OptionalManager \u251c\u2500\u2500 PeerDb \u251c\u2500\u2500 Sidebar \u251c\u2500\u2500 Stats \u251c\u2500\u2500 TranslateSite \u251c\u2500\u2500 Trayicon \u2514\u2500\u2500 Zeroname \u6709\u4e00\u4e9b\u76ee\u5f55\u5e26\u6709 disabled- \u524d\u7f00\uff0c\u610f\u4e3a\u8be5\u63d2\u4ef6\u975e\u6d3b\u8dc3\uff0c\u53ef\u4ee5\u79fb\u9664\u524d\u7f00\u4ee5\u542f\u7528\u63d2\u4ef6\uff0c\u518d\u91cd\u542f\u5ba2\u6237\u7aef\uff0c\u5c31\u80fd\u4f7f\u7528\u8fd9\u4e9b\u63d2\u4ef6\u4e86\u3002 \u8fd9\u610f\u5473\u7740\u82e5\u8981\u6dfb\u52a0\u65b0\u63d2\u4ef6\uff0c\u76f4\u63a5\u628a\u63d2\u4ef6\u76ee\u5f55\u590d\u5236\u5230 plugins \u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u3002 Hello World ZeroNet Plugin \u4e3a\u4e86\u521b\u5efa\u65b0\u63d2\u4ef6\uff0c\u9700\u8981\u521b\u5efa\u65b0\u6587\u4ef6\u5939\uff0c\u540d\u4e3a HelloWorld \u3002 $ mkdir HelloWorld $ cd HelloWorld \u518d\u5206\u522b\u521b\u5efa\u4e24\u4e2a\u6587\u4ef6\uff1a __init__.py \u548c HelloWorldPlugin.py . $ touch __init__.py HelloWorldPlugin.py \u5728 __init__.py \u4e2d import \u63d2\u4ef6\u3002 import HelloWorldPlugin \u597d\u73a9\u7684\u6765\u4e86\u3002\u3002 \u521b\u5efa\u4e00\u4e2aAPI\uff0c\u7136\u540e\u7ad9\u70b9ZeroFrame\u8c03\u7528\u547d\u4ee4 helloworld \uff0c\u63d2\u4ef6\u5c31\u4f1a\u8fd4\u56dejson\u6570\u636e Hello World ! \u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u70b9\uff0c\u8981\u5728 HelloWorldPlugin.py \u6587\u4ef6\u4e2d\u521b\u5efa UiWebsocketPlugin \u7c7b\u3002 from Plugin import PluginManager @PluginManager.registerTo ( \"UiWebsocket\" ) class UiWebsocketPlugin ( object ): PluginManager.registerTo(\"UiWebsocket\") \u88c5\u9970\u5668\u7528\u4e8e\u6ce8\u518c\u63d2\u4ef6\uff0c\u4f1a\u8ba9\u96f6\u7f51\u88c5\u8f7d\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u5e76\u6269\u5c55\u4e86 UiWebsocket \u3002 \u4e0b\u4e00\u6b65\uff0c\u521b\u5efa\u4e00\u4e2a action \uff0c\u7528\u4e8ewebsocket\u901a\u4fe1\u3002\u5728 UiWebsocketPlugin \u6dfb\u52a0\u8fd9\u4e2a\u51fd\u6570\uff1a from Plugin import PluginManager @PluginManager.registerTo ( \"UiWebsocket\" ) class UiWebsocketPlugin ( object ): # Create a new action that can be called using zeroframe api def actionHelloWorld ( self , to ): self . response ( to , { 'message' : 'Hello World' }) Warning action \u524d\u7f00\u662f\u5f3a\u5236\u6027\u7684\u3002 \u6709\u4e24\u4e2a\u91cd\u8981\u53c2\u6570\uff1a to \uff1a\u5373\u8c03\u7528\u8be5API\u7684\u7ad9\u70b9 response(to, json) \uff1a\u901a\u8fc7websocket\u4ee5json\u683c\u5f0f\u54cd\u5e94\u7ad9\u70b9\u3002 \u63d2\u4ef6\u505a\u597d\u4e86\uff0c\u8bd5\u4e00\u4e0b\u3002 Note \u8fd8\u6709\u5176\u4ed6\u63a5\u53d7\u63d2\u4ef6\u7684\u7c7b\uff0c\u5305\u62ec\uff1a UiRequest User UserManager WorkerManager TorManager Site SiteManager FileRequest ContentDb ConfigPlugin Actions SiteStorage UIWebsocket Hello World \u7ad9\u70b9 \u4e3a\u4e86\u6d4b\u8bd5\u63d2\u4ef6\uff0c\u63a5\u4e0b\u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7ad9\u3002 \u6253\u5f00 index.html \uff1a class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ) }) } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } } page = new Page () \u6dfb\u52a0\u65b0\u51fd\u6570\u5230 Page \u7528\u4e8e\u8f93\u51fa\u4fe1\u606f\uff1a setHelloWorld ( message ) { var out = document . getElementById ( \"out\" ) out . innerHTML = message } \u4fee\u6539 onOpenWebsocket \u51fd\u6570\uff0c\u4e0d\u8c03\u7528 \"siteInfo\" api\uff0c\u6362\u6210\u521a\u521b\u5efa\u7684\u7684 \"helloWorld\" api. onOpenWebsocket () { var self = this this . cmd ( \"helloWorld\" , [], function ( response ) { self . setHelloWorld ( response . message ) }) } Note \u63d2\u4ef6\u5185 action \u51fd\u6570\u7684\u540d\u79f0\u540e\u9762\u4e00\u6bb5\u51b3\u5b9a\u4e86api\u540d\uff0c\u5373\u79fb\u9664 action \u524d\u7f00\uff0c\u5e76\u5c0f\u5199\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3002 \u6700\u7ec8\u4ee3\u7801\uff1a class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } setHelloWorld ( message ) { var out = document . getElementById ( \"out\" ) out . innerHTML = message } onOpenWebsocket () { var self = this this . cmd ( \"helloWorld\" , [], function ( response ) { self . setHelloWorld ( response . message ) }) } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } } page = new Page () \u5f88\u591a\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u80fd\u4f5c\u4e3a\u96f6\u7f51\u63d2\u4ef6\u8fd0\u884c\uff0c\u624d\u6210\u5c31\u4e86\u96f6\u7f51\u3002\u96f6\u7f51\u81ea\u5e26\u4e00\u4e9b\u63d2\u4ef6\uff0c\u73b0\u5728\u4f60\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u4e86\u3002","title":"\u5199\u4e2a\u63d2\u4ef6"},{"location":"extra/WriteAPlugin/#_1","text":"\u96f6\u7f51\u53ef\u4ee5\u7528\u63d2\u4ef6\u6269\u5c55\u529f\u80fd\u3001\u63d0\u4f9b\u989d\u5916\u7684\u7ad9\u70b9API\uff0c\u5b9e\u9645\u4e0a\u6709\u4e9b\u529f\u80fd\u5c31\u662f\u4e00\u4e2a\u63d2\u4ef6\u5b9e\u73b0\u7684\uff0c\u6bd4\u5982 MergerSite \u548c Newsfeed \u3002\u4f46\u662f\u96f6\u7f51\u73b0\u5728\u8fd8\u662f\u6ca1\u6709\u63d2\u4ef6\u5546\u5e97\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5\u63d2\u4ef6\u624d\u884c\u3002\u4e0d\u8fc7\u6dfb\u52a0\u3001\u7981\u7528\u3001\u521b\u5efa\u63d2\u4ef6\u8fd8\u662f\u633a\u7b80\u5355\u7684\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u5230\u5982\u4f55\u5199\u4e00\u4e2a\u96f6\u7f51\u63d2\u4ef6\uff0c\u7ed9\u7ad9\u70b9\u63d0\u4f9b\u989d\u5916\u7684API\u3002","title":"\u524d\u8a00"},{"location":"extra/WriteAPlugin/#_2","text":"\u96f6\u7f51\u5ba2\u6237\u7aef\u4e0b\u6709\u4e2a plugins \u76ee\u5f55\u3002\u5982\u679c\u4f60\u7528\u7684\u662fZeroBundle\uff0c\u8be5\u76ee\u5f55\u5e94\u4f4d\u4e8e core \u6587\u4ef6\u5939\u3002 \u7ed3\u6784\u7c7b\u4f3c\u4e8e\uff1a . \u251c\u2500\u2500 AnnounceZero \u251c\u2500\u2500 Cors \u251c\u2500\u2500 CryptMessage \u251c\u2500\u2500 disabled-Bootstrapper \u251c\u2500\u2500 disabled-Dnschain \u251c\u2500\u2500 disabled-DonationMessage \u251c\u2500\u2500 disabled-Multiuser \u251c\u2500\u2500 disabled-StemPort \u251c\u2500\u2500 disabled-UiPassword \u251c\u2500\u2500 disabled-Zeroname-local \u251c\u2500\u2500 FilePack \u251c\u2500\u2500 MergerSite \u251c\u2500\u2500 Mute \u251c\u2500\u2500 Newsfeed \u251c\u2500\u2500 OptionalManager \u251c\u2500\u2500 PeerDb \u251c\u2500\u2500 Sidebar \u251c\u2500\u2500 Stats \u251c\u2500\u2500 TranslateSite \u251c\u2500\u2500 Trayicon \u2514\u2500\u2500 Zeroname \u6709\u4e00\u4e9b\u76ee\u5f55\u5e26\u6709 disabled- \u524d\u7f00\uff0c\u610f\u4e3a\u8be5\u63d2\u4ef6\u975e\u6d3b\u8dc3\uff0c\u53ef\u4ee5\u79fb\u9664\u524d\u7f00\u4ee5\u542f\u7528\u63d2\u4ef6\uff0c\u518d\u91cd\u542f\u5ba2\u6237\u7aef\uff0c\u5c31\u80fd\u4f7f\u7528\u8fd9\u4e9b\u63d2\u4ef6\u4e86\u3002 \u8fd9\u610f\u5473\u7740\u82e5\u8981\u6dfb\u52a0\u65b0\u63d2\u4ef6\uff0c\u76f4\u63a5\u628a\u63d2\u4ef6\u76ee\u5f55\u590d\u5236\u5230 plugins \u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u3002","title":"\u96f6\u7f51\u63d2\u4ef6"},{"location":"extra/WriteAPlugin/#hello-world-zeronet-plugin","text":"\u4e3a\u4e86\u521b\u5efa\u65b0\u63d2\u4ef6\uff0c\u9700\u8981\u521b\u5efa\u65b0\u6587\u4ef6\u5939\uff0c\u540d\u4e3a HelloWorld \u3002 $ mkdir HelloWorld $ cd HelloWorld \u518d\u5206\u522b\u521b\u5efa\u4e24\u4e2a\u6587\u4ef6\uff1a __init__.py \u548c HelloWorldPlugin.py . $ touch __init__.py HelloWorldPlugin.py \u5728 __init__.py \u4e2d import \u63d2\u4ef6\u3002 import HelloWorldPlugin \u597d\u73a9\u7684\u6765\u4e86\u3002\u3002 \u521b\u5efa\u4e00\u4e2aAPI\uff0c\u7136\u540e\u7ad9\u70b9ZeroFrame\u8c03\u7528\u547d\u4ee4 helloworld \uff0c\u63d2\u4ef6\u5c31\u4f1a\u8fd4\u56dejson\u6570\u636e Hello World ! \u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u70b9\uff0c\u8981\u5728 HelloWorldPlugin.py \u6587\u4ef6\u4e2d\u521b\u5efa UiWebsocketPlugin \u7c7b\u3002 from Plugin import PluginManager @PluginManager.registerTo ( \"UiWebsocket\" ) class UiWebsocketPlugin ( object ): PluginManager.registerTo(\"UiWebsocket\") \u88c5\u9970\u5668\u7528\u4e8e\u6ce8\u518c\u63d2\u4ef6\uff0c\u4f1a\u8ba9\u96f6\u7f51\u88c5\u8f7d\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u5e76\u6269\u5c55\u4e86 UiWebsocket \u3002 \u4e0b\u4e00\u6b65\uff0c\u521b\u5efa\u4e00\u4e2a action \uff0c\u7528\u4e8ewebsocket\u901a\u4fe1\u3002\u5728 UiWebsocketPlugin \u6dfb\u52a0\u8fd9\u4e2a\u51fd\u6570\uff1a from Plugin import PluginManager @PluginManager.registerTo ( \"UiWebsocket\" ) class UiWebsocketPlugin ( object ): # Create a new action that can be called using zeroframe api def actionHelloWorld ( self , to ): self . response ( to , { 'message' : 'Hello World' }) Warning action \u524d\u7f00\u662f\u5f3a\u5236\u6027\u7684\u3002 \u6709\u4e24\u4e2a\u91cd\u8981\u53c2\u6570\uff1a to \uff1a\u5373\u8c03\u7528\u8be5API\u7684\u7ad9\u70b9 response(to, json) \uff1a\u901a\u8fc7websocket\u4ee5json\u683c\u5f0f\u54cd\u5e94\u7ad9\u70b9\u3002 \u63d2\u4ef6\u505a\u597d\u4e86\uff0c\u8bd5\u4e00\u4e0b\u3002 Note \u8fd8\u6709\u5176\u4ed6\u63a5\u53d7\u63d2\u4ef6\u7684\u7c7b\uff0c\u5305\u62ec\uff1a UiRequest User UserManager WorkerManager TorManager Site SiteManager FileRequest ContentDb ConfigPlugin Actions SiteStorage UIWebsocket","title":"Hello World ZeroNet Plugin"},{"location":"extra/WriteAPlugin/#hello-world","text":"\u4e3a\u4e86\u6d4b\u8bd5\u63d2\u4ef6\uff0c\u63a5\u4e0b\u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7ad9\u3002 \u6253\u5f00 index.html \uff1a class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } onOpenWebsocket () { this . cmd ( \"siteInfo\" , [], function ( site_info ) { page . setSiteInfo ( site_info ) }) } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } } page = new Page () \u6dfb\u52a0\u65b0\u51fd\u6570\u5230 Page \u7528\u4e8e\u8f93\u51fa\u4fe1\u606f\uff1a setHelloWorld ( message ) { var out = document . getElementById ( \"out\" ) out . innerHTML = message } \u4fee\u6539 onOpenWebsocket \u51fd\u6570\uff0c\u4e0d\u8c03\u7528 \"siteInfo\" api\uff0c\u6362\u6210\u521a\u521b\u5efa\u7684\u7684 \"helloWorld\" api. onOpenWebsocket () { var self = this this . cmd ( \"helloWorld\" , [], function ( response ) { self . setHelloWorld ( response . message ) }) } Note \u63d2\u4ef6\u5185 action \u51fd\u6570\u7684\u540d\u79f0\u540e\u9762\u4e00\u6bb5\u51b3\u5b9a\u4e86api\u540d\uff0c\u5373\u79fb\u9664 action \u524d\u7f00\uff0c\u5e76\u5c0f\u5199\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3002 \u6700\u7ec8\u4ee3\u7801\uff1a class Page extends ZeroFrame { setSiteInfo ( site_info ) { var out = document . getElementById ( \"out\" ) out . innerHTML = \"Page address: \" + site_info . address + \"<br>- Peers: \" + site_info . peers + \"<br>- Size: \" + site_info . settings . size + \"<br>- Modified: \" + ( new Date ( site_info . content . modified * 1000 )) } setHelloWorld ( message ) { var out = document . getElementById ( \"out\" ) out . innerHTML = message } onOpenWebsocket () { var self = this this . cmd ( \"helloWorld\" , [], function ( response ) { self . setHelloWorld ( response . message ) }) } onRequest ( cmd , message ) { if ( cmd == \"setSiteInfo\" ) this . setSiteInfo ( message . params ) else this . log ( \"Unknown incoming message:\" , cmd ) } } page = new Page () \u5f88\u591a\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u80fd\u4f5c\u4e3a\u96f6\u7f51\u63d2\u4ef6\u8fd0\u884c\uff0c\u624d\u6210\u5c31\u4e86\u96f6\u7f51\u3002\u96f6\u7f51\u81ea\u5e26\u4e00\u4e9b\u63d2\u4ef6\uff0c\u73b0\u5728\u4f60\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u4e86\u3002","title":"Hello World \u7ad9\u70b9"}]}