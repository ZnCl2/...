{
	"pages": [
		{
			"id": "eadb8a40-c52c-11e9-a820-f188b7234584",
			"body": "[Crazylime@ZeroMe](/Me.ZeroNetwork.bit/?Profile/1MoonP8t4rk9QamBUPh5Aspkwa1Xhf5ux2/1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/crazylime@zeroid.bit) | [CrazyBlog](/138X2VRWW4DfMQLeFQZqvwtFXqhNPwRDew/?Post:4:New+blog+post)\n\n## ZeroNet Resources\n[Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1)\n\n[ZeroWiki](/138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/) | [New ZeroWiki](/1LX2wiouHctuUXtu5WkVM9TJJ3YoL6gAfm/?Page:home)\n\n[Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/) - ZeroNet Git repository hub\n\n[[Creating Zites]] - Developing ZeroNet Sites\n\n[[ZeroNet ID Providers]]\n\n[[ZeroNet Talk Sites]]\n\n[[Other ZeroNet Sites]] - Of potential value\n\n[[ZeroNet Design]] - looking under the hood\n\n## Technology\n\n[[Networking - Mesh]] - P2P Networking\n\n[[IPFS]] - InterPlanetary File System\n\n## Clearnet References\n[CJDNS NAT Gateway](https://github.com/cjdelisle/cjdns/blob/master/doc/nat-gateway.md) (Github)\n\n[[Wiki Testing]]\n\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n",
			"date_added": 1566513232100,
			"slug": "home"
		},
		{
			"id": "dc31e0c0-c52c-11e9-a820-f188b7234584",
			"body": "[Crazylime@ZeroMe](/Me.ZeroNetwork.bit/?Profile/1MoonP8t4rk9QamBUPh5Aspkwa1Xhf5ux2/1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/crazylime@zeroid.bit) | [CrazyBlog](/138X2VRWW4DfMQLeFQZqvwtFXqhNPwRDew/?Post:4:New+blog+post)\n\n## ZeroNet Resources\n[Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1)\n\n[ZeroWiki](/138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/) | [New ZeroWiki](/1LX2wiouHctuUXtu5WkVM9TJJ3YoL6gAfm/?Page:home)\n\n[Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/) - ZeroNet Git repository hub\n\n[[Creating Zites]] - Developing ZeroNet Sites\n\n[[ZeroNet ID Providers]]\n\n[[ZeroNet Talk Sites]]\n\n[[Other ZeroNet Sites]] - Of potential value\n\n[[ZeroNet Design]] - looking under the hood\n\n## Technology\n\n[[Networking - Mesh]]\n\n[[IPFS]] - InterPlanetary File System\n\n## Clearnet References\n[CJDNS NAT Gateway](https://github.com/cjdelisle/cjdns/blob/master/doc/nat-gateway.md) (Github)\n\n[[Wiki Testing]]\n\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n",
			"date_added": 1566513207500,
			"slug": "home"
		},
		{
			"id": "1b4ff000-c52b-11e9-86b0-d54f9bfd35c8",
			"body": "# IPFS\n\n[IPFS Scalability](https://medium.com/pinata/ipfs-scalability-f0a6f8a7d42b) - Building an IPFS Layer 2\n",
			"date_added": 1566512454400,
			"slug": "ipfs"
		},
		{
			"id": "14dffd00-c52b-11e9-86b0-d54f9bfd35c8",
			"body": "# IPFS\n\n[IPFS Scalability](https://medium.com/pinata/ipfs-scalability-f0a6f8a7d42b)\nBuilding an IPFS Layer 2\n",
			"date_added": 1566512443600,
			"slug": "ipfs"
		},
		{
			"id": "108618c0-c52b-11e9-86b0-d54f9bfd35c8",
			"body": "# IPFS\n\n[IPFS Scalability]\n(https://medium.com/pinata/ipfs-scalability-f0a6f8a7d42b)\nBuilding an IPFS Layer 2\n",
			"date_added": 1566512436300,
			"slug": "ipfs"
		},
		{
			"id": "fa785840-c52a-11e9-8144-c3fc009a385e",
			"body": "[Crazylime@ZeroMe](/Me.ZeroNetwork.bit/?Profile/1MoonP8t4rk9QamBUPh5Aspkwa1Xhf5ux2/1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/crazylime@zeroid.bit) | [CrazyBlog](/138X2VRWW4DfMQLeFQZqvwtFXqhNPwRDew/?Post:4:New+blog+post)\n\n## ZeroNet Resources\n[Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1)\n\n[ZeroWiki](/138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/) | [New ZeroWiki](/1LX2wiouHctuUXtu5WkVM9TJJ3YoL6gAfm/?Page:home)\n\n[Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/) - ZeroNet Git repository hub\n\n[[Creating Zites]] - Developing ZeroNet Sites\n\n[[ZeroNet ID Providers]]\n\n[[ZeroNet Talk Sites]]\n\n[[Other ZeroNet Sites]] - Of potential value\n\n[[ZeroNet Design]] - looking under the hood\n\n## Technology\n\n[[Networking - Mesh]]\n\n[[IPFS]]\n\n## Clearnet References\n[CJDNS NAT Gateway](https://github.com/cjdelisle/cjdns/blob/master/doc/nat-gateway.md) (Github)\n\n[[Wiki Testing]]\n\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n",
			"date_added": 1566512399300,
			"slug": "home"
		},
		{
			"id": "a272af00-c4f4-11e9-93b1-5187015a3274",
			"body": "# Networking - Mesh\n___\n[servalproject.org](http://www.servalproject.org)\n\n  [Android APK](http://developer.servalproject.org/dokuwiki/doku.php?id=content:servalmesh:Main%20Page)\n  [Serval Technology Stack](https://servalpaul.blogspot.com/2012/10/the-serval-technology-stack.html)\n  [Serval Technology Stack (Part 2) - Rhizome](https://servalpaul.blogspot.com/2013/01/serval-technology-stack-part-2-rhizome.html)\n___\n[goTenna](https://gotenna.com/) |  [wikipedia.org](https://en.wikipedia.org/wiki/GoTenna)\n\ngoTenna (goTenna Inc.) is a Brooklyn, New York-based startup that designs and develops technologies for off-grid and decentralized communications. \n___\n[Briar](https://briarproject.org/)\n\n  - Supports: text messages, emoji\n  - Lacks: images, files, voice\n  - Comms: Bluetooth, WiFi, Internet (via Tor)\n  - Platforms: Android (Play or F-Droid)\n  - Features: Contacts, F2F pairing via 2D bar codes, Private Groups, Forums, Blogs\n\n",
			"date_added": 1566489058800,
			"slug": "networking---mesh"
		},
		{
			"id": "738a0440-c4f4-11e9-93b1-5187015a3274",
			"body": "# Networking - Mesh\n___\n[servalproject.org](http://www.servalproject.org)\n\n  [Android APK](http://developer.servalproject.org/dokuwiki/doku.php?id=content:servalmesh:Main%20Page)\n  [Serval Technology Stack](https://servalpaul.blogspot.com/2012/10/the-serval-technology-stack.html)\n  [Serval Technology Stack (Part 2) - Rhizome](https://servalpaul.blogspot.com/2013/01/serval-technology-stack-part-2-rhizome.html)\n___\n[goTenna](https://gotenna.com/) |  [wikipedia.org](https://en.wikipedia.org/wiki/GoTenna)\n\ngoTenna (goTenna Inc.) is a Brooklyn, New York-based startup that designs and develops technologies for off-grid and decentralized communications. \n___\n[Briar](https://briarproject.org/)\n\n  - Supports: text messages, emoji\n  - Lacks: images, files, voice\n  - Comms: Bluetooth, WiFi, Internet (via Tor)\n  - Platforms: Android (Play or F-Droid)\n\n",
			"date_added": 1566488980100,
			"slug": "networking---mesh"
		},
		{
			"id": "ddb0ec00-c4f2-11e9-93b1-5187015a3274",
			"body": "# Networking - Mesh\n___\n[servalproject.org](http://www.servalproject.org)\n\n  [Android APK](http://developer.servalproject.org/dokuwiki/doku.php?id=content:servalmesh:Main%20Page)\n  [Serval Technology Stack](https://servalpaul.blogspot.com/2012/10/the-serval-technology-stack.html)\n  [Serval Technology Stack (Part 2) - Rhizome](https://servalpaul.blogspot.com/2013/01/serval-technology-stack-part-2-rhizome.html)\n___\n[goTenna](https://gotenna.com/) |  [wikipedia.org](https://en.wikipedia.org/wiki/GoTenna)\n\ngoTenna (goTenna Inc.) is a Brooklyn, New York-based startup that designs and develops technologies for off-grid and decentralized communications. \n___\n[Briar](https://briarproject.org/)\n\n  - Supports: text messages, emoji\n  - Lacks: images, files, voice\n  - Comms: Bluetooth, WiFi, Internet\n  - Platforms: Android (Play or F-Droid)\n\n",
			"date_added": 1566488299200,
			"slug": "networking---mesh"
		},
		{
			"id": "cabca080-c4f2-11e9-93b1-5187015a3274",
			"body": "# Networking - Mesh\n___\n[servalproject.org](http://www.servalproject.org)\n\n  [Android APK](http://developer.servalproject.org/dokuwiki/doku.php?id=content:servalmesh:Main%20Page)\n  [Serval Technology Stack](https://servalpaul.blogspot.com/2012/10/the-serval-technology-stack.html)\n  [Serval Technology Stack (Part 2) - Rhizome](https://servalpaul.blogspot.com/2013/01/serval-technology-stack-part-2-rhizome.html)\n___\n[goTenna](https://gotenna.com/) |  [wikipedia.org](https://en.wikipedia.org/wiki/GoTenna)\n___\n[Briar](https://briarproject.org/)\n\n  - Supports: text messages, emoji\n  - Lacks: images, files, voice\n  - Comms: Bluetooth, WiFi, Internet\n  - Platforms: Android (Play or F-Droid)\n\n",
			"date_added": 1566488267400,
			"slug": "networking---mesh"
		},
		{
			"id": "a0e4f500-c4f2-11e9-93b1-5187015a3274",
			"body": "# Networking - Mesh\n___\n[servalproject.org](http://www.servalproject.org)\n\n  [Android APK](http://developer.servalproject.org/dokuwiki/doku.php?id=content:servalmesh:Main%20Page)\n  [Serval Technology Stack](https://servalpaul.blogspot.com/2012/10/the-serval-technology-stack.html)\n  [Serval Technology Stack (Part 2) - Rhizome](https://servalpaul.blogspot.com/2013/01/serval-technology-stack-part-2-rhizome.html)\n___\n[goTenna](https://en.wikipedia.org/wiki/GoTenna)  (wikipedia.org)\n___\n[Briar](https://briarproject.org/)\n\n  - Supports: text messages, emoji\n  - Lacks: images, files, voice\n  - Comms: Bluetooth, WiFi, Internet\n  - Platforms: Android (Play or F-Droid)\n\n",
			"date_added": 1566488197200,
			"slug": "networking---mesh"
		},
		{
			"id": "5ba5b380-c38a-11e9-810a-05e31b53f004",
			"body": "These are sites most ZeroNet users might be interesting in checking out.  Please do not include p0rn or other high risk sites.  \n\n[ZeroMe](/Me.ZeroNetwork.bit) - Social networking.  \n\n[ZeroUp Unlimited](/1CiXRY9ATZSoZqBzwMfXEMsKtPRt2aQoF2) - Torrent sharing and seeding.  \n\n[Zoogle Zearch](13EYKqmPpwzBU4iaQq9Y4vfVMgj8dHeLkc)\n\n[TiddlyWiki](/1MVyVRFfQ8nSR3dMxisz1pZBwrd8jJRezy/) - TiddlyWiki ZeroNet Compatibility & Saver Plugin",
			"date_added": 1566333462200,
			"slug": "other-zeronet-sites"
		},
		{
			"id": "51df4280-c38a-11e9-810a-05e31b53f004",
			"body": "These are sites most ZeroNet users might be interesting in checking out.  Please do not include p0rn or other high risk sites.  \n\n[ZeroMe](/Me.ZeroNetwork.bit) - Social networking.  \n\n[ZeroUp Unlimited](/1CiXRY9ATZSoZqBzwMfXEMsKtPRt2aQoF2) - Torrent sharing and seeding.  \n\n[Zoogle Zearch](13EYKqmPpwzBU4iaQq9Y4vfVMgj8dHeLkc)\n\n[TiddlyWiki](/1MVyVRFfQ8nSR3dMxisz1pZBwrd8jJRezy/)",
			"date_added": 1566333445800,
			"slug": "other-zeronet-sites"
		},
		{
			"id": "1bdd4cc0-c387-11e9-9d39-5576c2f1f38b",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n## Client-side\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  Running ZN in DEBUG mode compiles this Coffee Script into Javascript, and put it in the all.js, which is loaded by [Wrapper.html](http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/template/wrapper.html@master), the template used to wrap the site's page with an IFrame.\n\n### Wrapper class (coffee)\n\nThis Coffee Script, with 704 lines, is the heart of the client side of the framework.  We continue our adventure with this line:\n\n```\n  window.addEventListener(\"message\", @onMessageInner, false)```\n\nAfter some checks, onMessageInner passes the message to:\n\n```\n  handleMessage: (message) =>```\n\nThis contains an `if` with a list of `else if` statements that primarily capture UI oriented commands that are executed client-side.  In our case, `wrapperPermissionAdd` does match an `if`, and that calls `actionPermissionAdd(message)` in Wrapper.coffee.  This then calls the server via WebSockets for `permissionDetails`, which is then used to as the user in the UI to confirm adding the new permission.  If the user consents, it calls the server again with `permissionAdd`.   \n\n### Invoking the server\n\nWrapper.handleMessage is really acting as a facade that can convert simple commands into operations that invoke the server multiple times, or perhaps do client-only execution.  However, if there is no match, the final `else` sends this to the server, **giving the UI the potential to invoke any command in the server in addition to those identified in the Wrapper**.  \n\n```javascript\n  @ws.send(message) # Pass message to websocket\n```\nThis `ws` was previously instantiated wtih \n\n```javascript\n  @ws = new ZeroWebsocket(ws_url)\n```\n\ndefined in [src/UI/media/lib/ZeroWebsocket.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/lib/ZeroWebsocket.coffee@master).\n\nwhich finally sends the message to the server:\n\n```javascript\n  if @connected\n    @ws.send(JSON.stringify(message))```\n\nwhere, this time, `ws` is a [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket). What URL was passed when this WebSocket was instantiated?  That is defined in Wrapper.coffee:\n\n```javascript\nws_url = proto.ws + \":\" + origin.replace(proto.http+\":\", \"\") + \"/ZeroNet-Internal/Websocket?wrapper_key=\" + window.wrapper_key\nwindow.wrapper = new Wrapper(ws_url)```\n\nwhich I quickly pulled debugging this page.  \n\n\"ws://127.0.0.1:43110/ZeroNet-Internal/Websocket?wrapper_key=e988d7e7ca8e...d0\"\n\n___\nSIDE OBSERVATION: if I refreshed the page, the wrapper_key remained the same.  But, when I debugged a different tab, that number was different.  \n \ngitcenter@zeroid.bit [clarified](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n#comment_18_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di):\n\"wrapper_key is unique to site. It's generated randomly each time you download a site and is used to make Websocket connections secure.\"\n___\nThis takes us to the server side.\n## Server-side\n### UiRequest class (python)\n\n(documented using rev4172+ of py3 branch Aug 2019)\n\n",
			"date_added": 1566332066700,
			"slug": "zeroframe-api"
		},
		{
			"id": "f1d7da80-c386-11e9-82de-3d892beac6ff",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  Running ZN in DEBUG mode compiles this Coffee Script into Javascript, and put it in the all.js, which is loaded by [Wrapper.html](http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/template/wrapper.html@master), the template used to wrap the site's page with an IFrame.\n\n### Wrapper class (coffee)\n\nThis Coffee Script, with 704 lines, is the heart of the client side of the framework.  We continue our adventure with this line:\n\n```\n  window.addEventListener(\"message\", @onMessageInner, false)```\n\nAfter some checks, onMessageInner passes the message to:\n\n```\n  handleMessage: (message) =>```\n\nThis contains an `if` with a list of `else if` statements that primarily capture UI oriented commands that are executed client-side.  In our case, `wrapperPermissionAdd` does match an `if`, and that calls `actionPermissionAdd(message)` in Wrapper.coffee.  This then calls the server via WebSockets for `permissionDetails`, which is then used to as the user in the UI to confirm adding the new permission.  If the user consents, it calls the server again with `permissionAdd`.   \n\n### Invoking the server\n\nWrapper.handleMessage is really acting as a facade that can convert simple commands into operations that invoke the server multiple times, or perhaps do client-only execution.  However, if there is no match, the final `else` sends this to the server, **giving the UI the potential to invoke any command in the server in addition to those identified in the Wrapper**.  \n\n```javascript\n  @ws.send(message) # Pass message to websocket\n```\nThis `ws` was previously instantiated wtih \n\n```javascript\n  @ws = new ZeroWebsocket(ws_url)\n```\n\ndefined in [src/UI/media/lib/ZeroWebsocket.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/lib/ZeroWebsocket.coffee@master).\n\nwhich finally sends the message to the server:\n\n```javascript\n  if @connected\n    @ws.send(JSON.stringify(message))```\n\nwhere, this time, `ws` is a [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket). What URL was passed when this WebSocket was instantiated?  That is defined in Wrapper.coffee:\n\n```javascript\nws_url = proto.ws + \":\" + origin.replace(proto.http+\":\", \"\") + \"/ZeroNet-Internal/Websocket?wrapper_key=\" + window.wrapper_key\nwindow.wrapper = new Wrapper(ws_url)```\n\nwhich I quickly pulled debugging this page.  \n\n\"ws://127.0.0.1:43110/ZeroNet-Internal/Websocket?wrapper_key=e988d7e7ca8e...d0\"\n\n___\nSIDE OBSERVATION: if I refreshed the page, the wrapper_key remained the same.  But, when I debugged a different tab, that number was different.  \n \ngitcenter@zeroid.bit [clarified](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n#comment_18_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di):\n\"wrapper_key is unique to site. It's generated randomly each time you download a site and is used to make Websocket connections secure.\"\n___\nThis takes us to the server side.\n\n### UiRequest class (python)\n\n(documented using rev4172+ of py3 branch Aug 2019)\n\n",
			"date_added": 1566331996200,
			"slug": "zeroframe-api"
		},
		{
			"id": "a3d21940-c386-11e9-aaad-bbb2a96f2455",
			"body": "# ZeroNet Design\nCode: [Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB) | [GitHub](https://github.com/HelloZeroNet/ZeroNet)\n\n## Functional Components\n[[ZeroNet Default Apps]]\n\n[[ZeroNet Design - Sandbox]]\n\n[[ZeroFrame API]]\n\n[[ZeroNet Internet Communications]]\n\n## Under the hood\nHow does ZeroNet work under the hood?  When happens when you start it and while you are using it?  \n\nWhen it starts up, it loads configuration using \n\n- default values in Config.py\n- parameters passed \n- values in zeronet.conf\n\nthen it creates two servers:\n\n- **FileServer** - Uses a random port that is placed in netzero.conf to make it persistent.  \n- **UIServer** - This is the HTTP server you connect to from your browser, defaulting to port 43110.  \n\n### other components\n\n- **SiteManager** - Used by UIServer to work with sites.\n- **UserManager** - \n- **PluginManager** - \n- **UiRequest** - \n\n### relationships\n\n- FileServer invokes ui_server.updateWebsocket() with \"serverChanged\". \n\n### third-party\n\n#### [gevent](http://www.gevent.org/)\nUsed heavily in NZ, this is a light threading framework, upon which they built a networking library, upon which they built an HTTP server that supports WebSockets.   It provides the core HTTP server capability used by UiServer via its WSGIHandler.  \n\nWSGIHandler - Handles HTTP requests from a socket, creates the WSGI environment, and interacts with the WSGI application.\n\n## Tor Always\n\n- Assigns ```tor_hs_port``` port to FileServer (default: 15441).  \n\n",
			"date_added": 1566331865300,
			"slug": "zeronet-design"
		},
		{
			"id": "f5fcc580-c359-11e9-864d-6d19a44c6a3c",
			"body": "[Crazylime@ZeroMe](/Me.ZeroNetwork.bit/?Profile/1MoonP8t4rk9QamBUPh5Aspkwa1Xhf5ux2/1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/crazylime@zeroid.bit) | [CrazyBlog](/138X2VRWW4DfMQLeFQZqvwtFXqhNPwRDew/?Post:4:New+blog+post)\n\n## ZeroNet Resources\n[Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1)\n\n[ZeroWiki](/138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/) | [New ZeroWiki](/1LX2wiouHctuUXtu5WkVM9TJJ3YoL6gAfm/?Page:home)\n\n[Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/) - ZeroNet Git repository hub\n\n[[Creating Zites]] - Developing ZeroNet Sites\n\n[[ZeroNet ID Providers]]\n\n[[ZeroNet Talk Sites]]\n\n[[Other ZeroNet Sites]] - Of potential value\n\n[[ZeroNet Design]] - looking under the hood\n\n## Technology\n\n[[Networking - Mesh]]\n\n## Clearnet References\n[CJDNS NAT Gateway](https://github.com/cjdelisle/cjdns/blob/master/doc/nat-gateway.md) (Github)\n\n[[Wiki Testing]]\n\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n",
			"date_added": 1566312675800,
			"slug": "home"
		},
		{
			"id": "36b5d200-c356-11e9-a016-b5f53d7d65d9",
			"body": "[[ZeroNet Design]]\n\n# Internet Communications\nZeroNet is bootstrapped with a user modifiable list of trackers that it uses to locate peers of content.  It then talks to these peers.  \n- trackers\n- peers\n\nThe Bootstrapper plugin can also discover peers using cjdns and yggdrasil in a local LAN or mesh topology, adding tracker server like features to your ZeroNet client.  Kaffie has a [tutorial on cjdns](/1N6zp6jCXPBktNMPfe7UJBpQGyfCq7k2M8/?Post:51:Using+CJDNS+with+ZeroNet).  \n\n## Encryption\n\nper gitcenter@zeroid.bit [in ZeroTalk](/Talk.ZeroNetwork.bit/?Topic:1566241934_13ifSHXbs2RtyHF4qkn4GrJ3krWEAAGmka/JavaScript+Tor#comment_625_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di): \n___\nZeroNet itself can't be encrypted -- it's just an application. What you are asking is whether ZeroNet protocol is encrypted. Actually, it can be both encrypted and raw, depending on:\n\n- ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, ZeroNet proceeds with unencrypted protocol.\n\nIf you set any config options manually, it's a bit more difficult.\n\n- If disable_encryption config option is set, the protocol is always raw;\n- Otherwise, ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, if force_encryption config option is set, ZeroNet disconnects from the peer;\n- In case the peer doesn't support encryption but there is no force_encryption option, ZeroNet proceeds with unencrypted protocol.\n\nSo if you want to be very secure, you can use force_encryption option.\n___",
			"date_added": 1566311066400,
			"slug": "zeronet-internet-communications"
		},
		{
			"id": "2bebfac0-c356-11e9-a016-b5f53d7d65d9",
			"body": "[[ZeroNet Design]]\n\n# Internet Communications\nZeroNet is bootstrapped with a user modifiable list of trackers that it uses to locate peers of content.  It then talks to these peers.  \n- trackers\n- peers\n\nThe Bootstrapper plugin can also discover peers using cjdns and yggdrasil in a local LAN or mesh topology, adding tracker server like features to your ZeroNet client.  Kaffie has a [tutorial on cjdns](/1N6zp6jCXPBktNMPfe7UJBpQGyfCq7k2M8/?Post:51:Using+CJDNS+with+ZeroNet).  \n\nper gitcenter@zeroid.bit [in ZeroTalk](/Talk.ZeroNetwork.bit/?Topic:1566241934_13ifSHXbs2RtyHF4qkn4GrJ3krWEAAGmka/JavaScript+Tor#comment_625_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di): \n___\nZeroNet itself can't be encrypted -- it's just an application. What you are asking is whether ZeroNet protocol is encrypted. Actually, it can be both encrypted and raw, depending on:\n\n- ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, ZeroNet proceeds with unencrypted protocol.\n\nIf you set any config options manually, it's a bit more difficult.\n\n- If disable_encryption config option is set, the protocol is always raw;\n- Otherwise, ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, if force_encryption config option is set, ZeroNet disconnects from the peer;\n- In case the peer doesn't support encryption but there is no force_encryption option, ZeroNet proceeds with unencrypted protocol.\n\nSo if you want to be very secure, you can use force_encryption option.\n___",
			"date_added": 1566311048300,
			"slug": "zeronet-internet-communications"
		},
		{
			"id": "fd9be680-c355-11e9-a016-b5f53d7d65d9",
			"body": "[[ZeroNet Design]]\n\nZeroNet is bootstrapped with a user modifiable list of trackers that it uses to locate peers of content.  It then talks to these peers.  \n- trackers\n- peers\n\nThe Bootstrapper plugin can also discover peers using cjdns and yggdrasil in a local LAN or mesh topology, adding tracker server like features to your ZeroNet client.  Kaffie has a [tutorial on cjdns](/1N6zp6jCXPBktNMPfe7UJBpQGyfCq7k2M8/?Post:51:Using+CJDNS+with+ZeroNet).  \n\n# Internet Communications\nper gitcenter@zeroid.bit [in ZeroTalk](/Talk.ZeroNetwork.bit/?Topic:1566241934_13ifSHXbs2RtyHF4qkn4GrJ3krWEAAGmka/JavaScript+Tor#comment_625_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di): \n___\nZeroNet itself can't be encrypted -- it's just an application. What you are asking is whether ZeroNet protocol is encrypted. Actually, it can be both encrypted and raw, depending on:\n\n- ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, ZeroNet proceeds with unencrypted protocol.\n\nIf you set any config options manually, it's a bit more difficult.\n\n- If disable_encryption config option is set, the protocol is always raw;\n- Otherwise, ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, if force_encryption config option is set, ZeroNet disconnects from the peer;\n- In case the peer doesn't support encryption but there is no force_encryption option, ZeroNet proceeds with unencrypted protocol.\n\nSo if you want to be very secure, you can use force_encryption option.\n___",
			"date_added": 1566310970600,
			"slug": "zeronet-internet-communications"
		},
		{
			"id": "7b6eb480-c355-11e9-a016-b5f53d7d65d9",
			"body": "[[ZeroNet Design]]\n\nZeroNet is bootstrapped with a user modifiable list of trackers that it uses to locate peers of content.  It then talks to these peers.  \n- trackers\n- peers\n\nThe Bootstrapper plugin can also discover peers using cjdns and yggdrasil in a local LAN or mesh topology.  Kaffie has a [tutorial on cjdns](/1N6zp6jCXPBktNMPfe7UJBpQGyfCq7k2M8/?Post:51:Using+CJDNS+with+ZeroNet).  \n\n# Internet Communications\nper gitcenter@zeroid.bit [in ZeroTalk](/Talk.ZeroNetwork.bit/?Topic:1566241934_13ifSHXbs2RtyHF4qkn4GrJ3krWEAAGmka/JavaScript+Tor#comment_625_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di): \n___\nZeroNet itself can't be encrypted -- it's just an application. What you are asking is whether ZeroNet protocol is encrypted. Actually, it can be both encrypted and raw, depending on:\n\n- ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, ZeroNet proceeds with unencrypted protocol.\n\nIf you set any config options manually, it's a bit more difficult.\n\n- If disable_encryption config option is set, the protocol is always raw;\n- Otherwise, ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, if force_encryption config option is set, ZeroNet disconnects from the peer;\n- In case the peer doesn't support encryption but there is no force_encryption option, ZeroNet proceeds with unencrypted protocol.\n\nSo if you want to be very secure, you can use force_encryption option.\n___",
			"date_added": 1566310752200,
			"slug": "zeronet-internet-communications"
		},
		{
			"id": "77f9b200-c355-11e9-a016-b5f53d7d65d9",
			"body": "[[ZeroNet Design]]\nZeroNet is bootstrapped with a user modifiable list of trackers that it uses to locate peers of content.  It then talks to these peers.  \n- trackers\n- peers\n\nThe Bootstrapper plugin can also discover peers using cjdns and yggdrasil in a local LAN or mesh topology.  Kaffie has a [tutorial on cjdns](/1N6zp6jCXPBktNMPfe7UJBpQGyfCq7k2M8/?Post:51:Using+CJDNS+with+ZeroNet).  \n\n# Internet Communications\nper gitcenter@zeroid.bit [in ZeroTalk](/Talk.ZeroNetwork.bit/?Topic:1566241934_13ifSHXbs2RtyHF4qkn4GrJ3krWEAAGmka/JavaScript+Tor#comment_625_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di): \n___\nZeroNet itself can't be encrypted -- it's just an application. What you are asking is whether ZeroNet protocol is encrypted. Actually, it can be both encrypted and raw, depending on:\n\n- ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, ZeroNet proceeds with unencrypted protocol.\n\nIf you set any config options manually, it's a bit more difficult.\n\n- If disable_encryption config option is set, the protocol is always raw;\n- Otherwise, ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, if force_encryption config option is set, ZeroNet disconnects from the peer;\n- In case the peer doesn't support encryption but there is no force_encryption option, ZeroNet proceeds with unencrypted protocol.\n\nSo if you want to be very secure, you can use force_encryption option.\n___",
			"date_added": 1566310746400,
			"slug": "zeronet-internet-communications"
		},
		{
			"id": "699bd400-c354-11e9-8389-fdf500814507",
			"body": "# ZeroNet Design\nCode: [Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB) | [GitHub](https://github.com/HelloZeroNet/ZeroNet)\n\n## Functional Components\n[[ZeroNet Default Apps]]\n\n[[ZeroNet Design - Sandbox]]\n\n[[ZeroFrame API]]\n\n[[ZeroNet Internet Communications]]\n\n## Under the hood\nHow does ZeroNet work under the hood?  When happens when you start it and while you are using it?  \n\nWhen it starts up, it loads configuration using \n\n- default values in Config.py\n- parameters passed \n- values in zeronet.conf\n\nthen it creates two servers:\n\n- **FileServer** - Uses a random port that is placed in netzero.conf to make it persistent.  \n- **UIServer** - This is the HTTP server you connect to from your browser, defaulting to port 43110.  \n\n### other components\n\n- **SiteManager** - Used by UIServer to work with sites.\n- **UserManager** - \n- **PluginManager** - \n- **UiRequest** - \n\n### relationships\n\n- FileServer invokes ui_server.updateWebsocket() with \"serverChanged\". \n\n### third-party\n\n#### [gevent](http://www.gevent.org/)\nThis is a networking library used heavily in ZN.  It provides the core HTTP server capability used by UiServer via its WSGIHandler.  \n\nWSGIHandler - Handles HTTP requests from a socket, creates the WSGI environment, and interacts with the WSGI application.\n\n## Tor Always\n\n- Assigns ```tor_hs_port``` port to FileServer (default: 15441).  \n\n",
			"date_added": 1566310292800,
			"slug": "zeronet-design"
		},
		{
			"id": "4502ee80-c354-11e9-bcb9-c99e687b2ca3",
			"body": "[[ZeroNet Design]]\n\n# Default Zites\n\nWhen ZN boots up, it begins configured to support a default homepage even if it cannot connect to the network. This is loaded when the URL is just the base \"/\".  While it defaults to the ZeroHello site, this can be overridden via the --homepage parameter.  \n\n```python3\nself.parser.add_argument('--homepage', help='Web interface Homepage', \ndefault='1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D', metavar='address')\n```\nThis app has it's own code to load the other demo apps in its all.js.  \n\nTo help with this bootstrapping, the ZeroHello app is included in the default data folder.  The ZeroName site is also in this folder, along with preconfigured sites.json and users.json.  The rest of the demo zites on the left sidebar are loaded via the network when the user clicks on them to activate.  \n\n",
			"date_added": 1566310231400,
			"slug": "zeronet-default-apps"
		},
		{
			"id": "d4861a80-c34c-11e9-980c-0beb9e517eb9",
			"body": "# ZeroNet Design\nCode: [Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB) | [GitHub](https://github.com/HelloZeroNet/ZeroNet)\n\nHow does ZeroNet work under the hood?  When happens when you start it and while you are using it?  \n\nWhen it starts up, it loads configuration using \n\n- default values in Config.py\n- parameters passed \n- values in zeronet.conf\n\nthen it creates two servers:\n\n- **FileServer** - Uses a random port that is placed in netzero.conf to make it persistent.  \n- **UIServer** - This is the HTTP server you connect to from your browser, defaulting to port 43110.  \n\n### other components\n\n- **SiteManager** - Used by UIServer to work with sites.\n- **UserManager** - \n- **PluginManager** - \n- **UiRequest** - \n\n### relationships\n\n- FileServer invokes ui_server.updateWebsocket() with \"serverChanged\". \n\n### third-party\n\n#### [gevent](http://www.gevent.org/)\nThis is a networking library used heavily in ZN.  It provides the core HTTP server capability used by UiServer via its WSGIHandler.  \n\nWSGIHandler - Handles HTTP requests from a socket, creates the WSGI environment, and interacts with the WSGI application.\n\n## Tor Always\n\n- Assigns ```tor_hs_port``` port to FileServer (default: 15441).  \n\n## Functional Components\n[[ZeroNet Default Apps]]\n\n[[ZeroNet Design - Sandbox]]\n\n[[ZeroFrame API]]\n\n[[ZeroNet Internet Communications]]",
			"date_added": 1566307036200,
			"slug": "zeronet-design"
		},
		{
			"id": "68a4c540-c311-11e9-8693-357a25229a66",
			"body": "[[ZeroNet Design]]\n\n# ZeroNet Default Zites\n\nWhen ZN boots up, it begins configured to support a default homepage even if it cannot connect to the network. This is loaded when the URL is just the base \"/\".  While it defaults to the ZeroHello site, this can be overridden via the --homepage parameter.  \n\n```python3\nself.parser.add_argument('--homepage', help='Web interface Homepage', \ndefault='1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D', metavar='address')\n```\nThis app has it's own code to load the other demo apps in its all.js.  \n\nTo help with this bootstrapping, the ZeroHello app is included in the default data folder.  The ZeroName site is also in this folder, along with preconfigured sites.json and users.json.  The rest of the demo zites on the left sidebar are loaded via the network when the user clicks on them to activate.  \n\n",
			"date_added": 1566281514900,
			"slug": "zeronet-default-apps"
		},
		{
			"id": "8cd25b40-c310-11e9-aca3-d7e8e3382035",
			"body": "[Crazylime@ZeroMe](/Me.ZeroNetwork.bit/?Profile/1MoonP8t4rk9QamBUPh5Aspkwa1Xhf5ux2/1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/crazylime@zeroid.bit) | [CrazyBlog](/138X2VRWW4DfMQLeFQZqvwtFXqhNPwRDew/?Post:4:New+blog+post)\n\n## ZeroNet Resources\n[Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1)\n\n[ZeroWiki](/138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP/) | [New ZeroWiki](/1LX2wiouHctuUXtu5WkVM9TJJ3YoL6gAfm/?Page:home)\n\n[Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/) - ZeroNet Git repository hub\n\n[[Creating Zites]] - Developing ZeroNet Sites\n\n[[ZeroNet ID Providers]]\n\n[[ZeroNet Talk Sites]]\n\n[[Other ZeroNet Sites]] - Of potential value\n\n[[ZeroNet Design]] - looking under the hood\n\n## Clearnet References\n[CJDNS NAT Gateway](https://github.com/cjdelisle/cjdns/blob/master/doc/nat-gateway.md) (Github)\n\n[[Wiki Testing]]\n\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n",
			"date_added": 1566281146100,
			"slug": "home"
		},
		{
			"id": "5b1c86c0-c310-11e9-85bf-61b997bad7c8",
			"body": "[Zer0Net Talk](/Talk.ZeroNetwork.bit) - original primary ZeroNet talk site.  \n\n[ZN Zites Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - Building ZeroNet Sites\n\n[ZN Sec](/14swNBgrE3cTbreHgTGAYiGRBiPrnFCDJB) - ZeroNet Security\n\n[UNLIMIT TALK](/1HMLvnRWViMnuvZc5LK4Dm86sZNcSH1jdh/?Home) - Talk without user space limits.\n\n",
			"date_added": 1566281062700,
			"slug": "zeronet-talk-sites"
		},
		{
			"id": "2f5c9340-c310-11e9-b812-0b31c12517ea",
			"body": "# Creating Zites\n\nZeroNet Sites (Zites) are creating using typical static content such as HTML, JavaScript, CSS and images with a file-system based database.  \n\n[Site Development Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/getting_started/)\n\n[ZeroChat tutorial](/Blog.ZeroNetwork.bit/?Post:99:ZeroChat+tutorial)\n\n[[ZeroNet Crypto]] - User signing and encrypting.  \n\n[ZeroNet Dev Center](http://127.0.0.1:43110/DevCenter.bit/) - dated intro docs.\n\nYou can use [[ZeroTemplate]] to create advanced ZeroNet sites with NPM dependencies and automatic building and releasing.\n\nYou can [create an Angular site](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565993644_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Testing+a+static+Angular+site+in+ZeroNet).\n\n## Handling SPAM\n\n[How to blacklist/block zeronet identity provider/authority in content.json, but whitelist some of this ID provider certificates](/Talk.ZeroNetwork.bit/?Topic:1565715792_1L4dZcDF2maSKHDy788yhxpYnBWnXadUtS/How+to+blacklist+block+zeronet+identity+provider+authority+in+content+json+but+whitelist+some+of+this+ID+provider+certificates)\nDescribes how to assign a 0 user limit size for self-signed certs to allow anonymous viewing, but require a Provider ID to publish.  \n",
			"date_added": 1566280989300,
			"slug": "creating-zites"
		},
		{
			"id": "963cbf00-c30f-11e9-b968-41bd1bd87ac2",
			"body": "# ZeroNet Design\nCode: [Git Center](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB) | [GitHub](https://github.com/HelloZeroNet/ZeroNet)\n\nHow does ZeroNet work under the hood?  When happens when you start it and while you are using it?  \n\nWhen it starts up, it loads configuration using \n\n- default values in Config.py\n- parameters passed \n- values in zeronet.conf\n\nthen it creates two servers:\n\n- **FileServer** - Uses a random port that is placed in netzero.conf to make it persistent.  \n- **UIServer** - This is the HTTP server you connect to from your browser, defaulting to port 43110.  \n\n### other components\n\n- **SiteManager** - Used by UIServer to work with sites.\n- **UserManager** - \n- **PluginManager** - \n- **UiRequest** - \n\n### relationships\n\n- FileServer invokes ui_server.updateWebsocket() with \"serverChanged\". \n\n### third-party\n\n#### [gevent](http://www.gevent.org/)\nThis is a networking library used heavily in ZN.  It provides the core HTTP server capability used by UiServer via its WSGIHandler.  \n\nWSGIHandler - Handles HTTP requests from a socket, creates the WSGI environment, and interacts with the WSGI application.\n\n## Tor Always\n\n- Assigns ```tor_hs_port``` port to FileServer (default: 15441).  \n\n## Functional Components\n[[ZeroNet Default Apps]]\n\n[[ZeroNet Design - Sandbox]]\n\n[[ZeroFrame API]]",
			"date_added": 1566280732400,
			"slug": "zeronet-design"
		},
		{
			"id": "ed4cd8c0-c305-11e9-b13d-75ded90299e6",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  Running ZN in DEBUG mode compiles this Coffee Script into Javascript, and put it in the all.js, which is loaded by [Wrapper.html](http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/template/wrapper.html@master), the template used to wrap the site's page with an IFrame.\n\n### Wrapper class (coffee)\n\nThis Coffee Script, with 704 lines, is the heart of the client side of the framework.  We continue our adventure with this line:\n\n```\n  window.addEventListener(\"message\", @onMessageInner, false)```\n\nAfter some checks, onMessageInner passes the message to:\n\n```\n  handleMessage: (message) =>```\n\nThis contains an `if` with a list of `else if` statements that primarily capture UI oriented commands that are executed client-side.  In our case, `wrapperPermissionAdd` does match an `if`, and that calls `actionPermissionAdd(message)` in Wrapper.coffee.  This then calls the server via WebSockets for `permissionDetails`, which is then used to as the user in the UI to confirm adding the new permission.  If the user consents, it calls the server again with `permissionAdd`.   \n\n### Invoking the server\n\nWrapper.handleMessage is really acting as a facade that can convert simple commands into operations that invoke the server multiple times, or perhaps do client-only execution.  However, if there is no match, the final `else` sends this to the server, **giving the UI the potential to invoke any command in the server in addition to those identified in the Wrapper**.  \n\n```javascript\n  @ws.send(message) # Pass message to websocket\n```\nThis `ws` was previously instantiated wtih \n\n```javascript\n  @ws = new ZeroWebsocket(ws_url)\n```\n\ndefined in [src/UI/media/lib/ZeroWebsocket.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/lib/ZeroWebsocket.coffee@master).\n\nwhich finally sends the message to the server:\n\n```javascript\n  if @connected\n    @ws.send(JSON.stringify(message))```\n\nwhere, this time, `ws` is a [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket). What URL was passed when this WebSocket was instantiated?  That is defined in Wrapper.coffee:\n\n```javascript\nws_url = proto.ws + \":\" + origin.replace(proto.http+\":\", \"\") + \"/ZeroNet-Internal/Websocket?wrapper_key=\" + window.wrapper_key\nwindow.wrapper = new Wrapper(ws_url)```\n\nwhich I quickly pulled debugging this page.  \n\n\"ws://127.0.0.1:43110/ZeroNet-Internal/Websocket?wrapper_key=e988d7e7ca8e...d0\"\n\nSIDE OBSERVATION: if I refreshed the page, the wrapper_key remained the same.  But, when I debugged a different tab, that number was different.  \n \nThis takes us to the server side.\n\n### UiRequest class (python)\n\n(documented using rev4172+ of py3 branch Aug 2019)\n\n",
			"date_added": 1566276583500,
			"slug": "zeroframe-api"
		},
		{
			"id": "290129c0-c2fc-11e9-ad01-494780f0252b",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  Running ZN in DEBUG mode compiles this Coffee Script into Javascript, and put it in the all.js, which is loaded by [Wrapper.html](http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/template/wrapper.html@master), the template used to wrap the site's page with an IFrame.\n\n### Wrapper class (coffee)\n\nThis Coffee Script, with 704 lines, is the heart of the client side of the framework.  We continue our adventure with this line:\n\n```\n  window.addEventListener(\"message\", @onMessageInner, false)```\n\nAfter some checks, onMessageInner passes the message to:\n\n```\n  handleMessage: (message) =>```\n\nThis contains an `if` with a list of `else if` statements that primarily capture UI oriented commands that are executed client-side.  In our case, `wrapperPermissionAdd` does match an `if`, and that calls `actionPermissionAdd(message)` in Wrapper.coffee.  This then calls the server via WebSockets for `permissionDetails`, which is then used to as the user in the UI to confirm adding the new permission.  If the user consents, it calls the server again with `permissionAdd`.   \n\n### Invoking the server\n\nWrapper.handleMessage is really acting as a facade that can convert simple commands into operations that invoke the server multiple times, or perhaps do client-only execution.  However, if there is no match, the final `else` sends this to the server, **giving the UI to potentially invoke any command in the server, even those not identified in the Wrapper**.  \n\n```javascript\n  @ws.send(message) # Pass message to websocket\n```\nThis `ws` was previously instantiated wtih \n\n```javascript\n  @ws = new ZeroWebsocket(ws_url)\n```\n\ndefined in [src/UI/media/lib/ZeroWebsocket.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/lib/ZeroWebsocket.coffee@master).\n\nwhich finally sends our message to the server:\n\n```javascript\n  if @connected\n    @ws.send(JSON.stringify(message))```\n\nwhere, this time, `ws` is a [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket). What URL was passed when this WebSocket was instantiated?  That is defined in Wrapper.coffee:\n\n```javascript\nws_url = proto.ws + \":\" + origin.replace(proto.http+\":\", \"\") + \"/ZeroNet-Internal/Websocket?wrapper_key=\" + window.wrapper_key\nwindow.wrapper = new Wrapper(ws_url)```\n\nwhich I quickly pulled debugging this page.  \n\n\"ws://127.0.0.1:43110/ZeroNet-Internal/Websocket?wrapper_key=e988d7e7ca8e...d0\"\n\nSIDE OBSERVATION: if I refreshed the page, the wrapper_key remained the same.  But, when I debugged a different tab, that number was different.  \n \nThis takes us to the server side.\n\n### UiRequest class (python)\n\n(documented using rev4172+ of py3 branch Aug 2019)\n\n",
			"date_added": 1566272388700,
			"slug": "zeroframe-api"
		},
		{
			"id": "ee864b80-c2f7-11e9-a9ed-f930d543f8c0",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  Running ZN in DEBUG mode compiles this Coffee Script into Javascript, and put it in the all.js, which is loaded by [Wrapper.html](http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/template/wrapper.html@master), the template used to wrap the site's page with an IFrame.\n\n### Wrapper class (coffee)\n\nThis Coffee Script, with 704 lines, is the heart of the client side of the framework.  We continue our adventure with this line:\n\n```\n  window.addEventListener(\"message\", @onMessageInner, false)```\n\nAfter some checks, onMessageInner passes the message to:\n\n```\n  handleMessage: (message) =>```\n\nThis contains an `if` with a list of `else if` statements that primarily capture UI oriented commands that are executed client-side.  If there is no match, the final `else` sends this to the server\n\n```javascript\n  @ws.send(message) # Pass message to websocket\n```\nThis `ws` was previously instantiated wtih \n\n```javascript\n  @ws = new ZeroWebsocket(ws_url)\n```\n\ndefined in [src/UI/media/lib/ZeroWebsocket.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/lib/ZeroWebsocket.coffee@master).\n\nwhich finally sends our message to the server:\n\n```javascript\n  if @connected\n    @ws.send(JSON.stringify(message))```\n\nwhere, this time, `ws` is a [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket). What URL was passed when this WebSocket was instantiated?  That is defined in Wrapper.coffee:\n\n```javascript\nws_url = proto.ws + \":\" + origin.replace(proto.http+\":\", \"\") + \"/ZeroNet-Internal/Websocket?wrapper_key=\" + window.wrapper_key\nwindow.wrapper = new Wrapper(ws_url)```\n\nwhich I quickly pulled debugging this page.  \n\n\"ws://127.0.0.1:43110/ZeroNet-Internal/Websocket?wrapper_key=e988d7e7ca8e...d0\"\n\nSIDE OBSERVATION: if I refreshed the page, the wrapper_key remained the same.  But, when I debugged a different tab, that number was different.  \n \nThis takes us to the server side.\n\n### UiRequest class (python)\n\n(documented using rev4172+ of py3 branch Aug 2019)\n\n",
			"date_added": 1566270572600,
			"slug": "zeroframe-api"
		},
		{
			"id": "fe9a2d00-c2ef-11e9-9a01-6f85da5c7056",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  Running ZN in DEBUG mode compiles this Coffee Script into Javascript, and put it in the all.js, which is loaded by [Wrapper.html](http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/template/wrapper.html@master), the template used to wrap the site's page with an IFrame.\n\n### Wrapper class\n\n\n   \n",
			"date_added": 1566267163600,
			"slug": "zeroframe"
		},
		{
			"id": "398c9e80-c2ef-11e9-b79c-c1fcb3fe4a4d",
			"body": "# ZeroNet Design\n\nHow does ZeroNet work under the hood?  When happens when you start it and while you are using it?  \n\nWhen it starts up, it loads configuration using \n\n- default values in Config.py\n- parameters passed \n- values in zeronet.conf\n\nthen it creates two servers:\n\n- **FileServer** - Uses a random port that is placed in netzero.conf to make it persistent.  \n- **UIServer** - This is the HTTP server you connect to from your browser, defaulting to port 43110.  \n\n### other components\n\n- **SiteManager** - Used by UIServer to work with sites.\n- **UserManager** - \n- **PluginManager** - \n- **UiRequest** - \n\n### relationships\n\n- FileServer invokes ui_server.updateWebsocket() with \"serverChanged\". \n\n### third-party\n\n#### [gevent](http://www.gevent.org/)\nThis is a networking library used heavily in ZN.  It provides the core HTTP server capability used by UiServer via its WSGIHandler.  \n\nWSGIHandler - Handles HTTP requests from a socket, creates the WSGI environment, and interacts with the WSGI application.\n\n## Tor Always\n\n- Assigns ```tor_hs_port``` port to FileServer (default: 15441).  \n\n## Functional Components\n[[ZeroNet Default Apps]]\n\n[[ZeroNet Design - Sandbox]]\n\n[[ZeroFrame API]]",
			"date_added": 1566266833000,
			"slug": "zeronet-design"
		},
		{
			"id": "1ed8ae80-c2ef-11e9-9c9e-3976bf097a3b",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  Running ZN in DEBUG mode compiles this Coffee Script into Javascript, and put it in the all.js, which is loaded by [Wrapper.html](http://127.0.0.1:43110/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/template/wrapper.html@master), the template used to wrap the site's page with an IFrame.\n\n   \n",
			"date_added": 1566266788200,
			"slug": "zeroframe"
		},
		{
			"id": "c912c900-c2ed-11e9-9c9e-3976bf097a3b",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe Wrapper class is defined in [src/UI/media/Wrapper.coffee](/1GitLiXB6t5r8vuU2zC6a8GYj9ME6HMQ4t/repo/file/?1P4w4Rvh4vS9r6G5xTiSh8qEW87EKZtnJB/src/Ui/media/Wrapper.coffee@master).  \n",
			"date_added": 1566266214800,
			"slug": "zeroframe"
		},
		{
			"id": "0ec61640-c2db-11e9-9c9e-3976bf097a3b",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  If your site does the following:  \n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nyou first get an instance of ZeroFrame.  You then call the asynchronous `cmd` method, which has two required parameters, the command and its parameters, and an optional response handler.  \n\nThis adds the wrapper nonce and an incremental message id resulting in this message being sent to the parent window:\n\n```json\n{\n  cmd: cmd,\n  params: params,\n  wrapper_nonce: wrapper_nonce,\n  id, next_message_id\n}\n```\nto the parent window, which is the wrapper for the IFrame containing your site, effectively using this:\n\n  window.parent.[postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)(message, '*')\n\nIf you have a response handler (callback), it is put on a map indexed by the message id.  \n\nThe code that receives this message is in the parent of the IFrame, the wrapper generated using src/Ui/template/wrapper.html.\n\n",
			"date_added": 1566258171300,
			"slug": "zeroframe"
		},
		{
			"id": "c73c8bc0-c2d4-11e9-9c9e-3976bf097a3b",
			"body": "[[ZeroNet Design]]\n# ZeroFrame API\n\n[ZeroFrame API Reference](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/zeroframe_api_reference/)\n> ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created.\n\nLet's follow the communications of a call to the back-end.  ",
			"date_added": 1566255474300,
			"slug": "zeroframe"
		},
		{
			"id": "68cd3640-c28c-11e9-8401-0f4798c5b85f",
			"body": "[[ZeroNet Design]]\n# Sandbox\n\nZeroNet wraps every page served in a site by an IFrame, and then uses its sandbox attribute to limit what it can do, effectively sandboxing zites.  \n\nThis breaks various types of sites, including [simple static Angular sites](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565995454_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/ISSUE+CORS+prevents+site+from+loading).  To live a happy life in ZeroNet, these apps can request that the user grant the NOSANDBOX permission to the site with this code:\n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nIf a user visits the site, but hasn't yet granted the NOSANDBOX permission, they'll get this message:\n\n![NOSANDBOX.png](img/NOSANDBOX.png)\n\nIf they grant it, this line is added to their sites.json:\n\n```\n  \"permissions\": [\"NOSANDBOX\"],\n```\n\nand they are no longer prompted for it.  \n\n## NOSANDBOX permission\n\nThe code in py3 branch Aug 2019 only shows one impact to this permission:\n\n```python\n        if \"NOSANDBOX\" in site.settings[\"permissions\"]:\n            sandbox_permissions += \" allow-same-origin\"\n```\n\nwhich then gets passed to the sandbox element in the `<iframe>` tag via the rendering using the `src/Ui/template/wrapper.html` template.  \n\nHere is the IFrame line from the template:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock {**sandbox_permissions**}\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nAnd the result in the browser for a site with NOSANDBOX permission:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock  **allow-same-origin**\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nand an iframe from a site that does not have the NOSANDBOX permission (this wiki):\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock \" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nA javascript variable is also set so the site can inquire on whether or not the user granted the permission, and perhaps displaying a notification otherwise.\n\n```javascript\npermissions = [\"NOSANDBOX\"]\n```\n\nAccording to [w3schools](https://www.w3schools.com/tags/att_iframe_sandbox.asp), allow-same-origin \"allows the iframe content to be treated as being from the same origin\".  \n\n## Impacts\n\nOne of the reasons why `NOSANDBOX` permission is all-caps and marked is dangerous is that sandbox traversal becomes easy. Consider the following PoC:\n\n```javascript\nwindow.parent.zeroframe.cmd(\"siteList\", [], console.log.bind(console));\n```\n\nYou'll see that site list is logged to the console, which lets sites deanonymize you. Another example:\n\n```javascript\nwindow.parent.zeroframe.cmd(\"setConfig\", [\"open_browser\", \"cmd && rem %s\"]);\nwindow.parent.zeroframe.cmd(\"serverShutdown\", [true]);\n```\n\nRunning this code results in ZeroNet restart and a shell appearing instead of ZeroNet console. This means that an attacker can run any software on your computer, possibly stealing private keys and setting up a data locker.\n\nThat's why using NOSANDBOX is not recommended.\n\n## Discussions\n[ZT Zite Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - [Using the NOSANDBOX permission](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Using+the+NOSANDBOX+permission)\n",
			"date_added": 1566224392100,
			"slug": "zeronet-design---sandbox"
		},
		{
			"id": "d2da2b00-c256-11e9-b1f6-97f348a54f18",
			"body": "A place to test creating wiki content.  \n\n[[Temp Page]]\n\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n\n![I love you](https://i.pinimg.com/originals/0c/08/7b/0c087b74b846ea254bc38dbdd2493aed.png \"nice day\")\n\n![gitcenter's logo](/gitcenter.bit/crazywiki.png)\n\n[![gitcenter's logo](/gitcenter.bit/crazywiki.png)](//1NtQvrYd8rJzQYP3j1snmi28mPn8wSXX4X)\n\n 👂 😤 😧 😈 💁‍♂️ 😋  ✌️  ⚡️  ⚗️ 💦 😒 🔋 🔋😵  🤭  👖 🤤  👏 👏 👄\n",
			"date_added": 1566201377200,
			"slug": "wiki-testing"
		},
		{
			"id": "7a99adc0-c243-11e9-903e-4d86f97b5e80",
			"body": "These are sites most ZeroNet users might be interesting in checking out.  Please do not include p0rn or other high risk sites.  \n\n[ZeroMe](/Me.ZeroNetwork.bit) - Social networking.  \n\n[ZeroUp Unlimited](/1CiXRY9ATZSoZqBzwMfXEMsKtPRt2aQoF2) - Torrent sharing and seeding.  \n\n[Zoogle Zearch](13EYKqmPpwzBU4iaQq9Y4vfVMgj8dHeLkc)\n",
			"date_added": 1566193068700,
			"slug": "other-zeronet-sites"
		},
		{
			"id": "8d7ab900-c23b-11e9-860c-07c16e2a6281",
			"body": "[[ZeroNet Design]]\n\n# ZeroNet Default Zites\n\nWhen ZN boots up, it begins configured to support a default homepage even if it cannot connect to the network. This is loaded when the URL is just the base \"/\".  While it defaults to the ZeroHello site, this can be overridden via the --homepage parameter.  \n\n```python3\nself.parser.add_argument('--homepage', help='Web interface Homepage', \ndefault='1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D', metavar='address')\n```\nThis app, in turns, has it's own code to load the other demo apps in its all.js.  \n\nTo help with this bootstrapping, the ZeroHello app is included in the default data folder.  The ZeroName site is also in this folder, along with preconfigured sites.json and users.json.  The rest of the demo zites on the left sidebar are loaded via the network when the user clicks on them to activate.  \n\n",
			"date_added": 1566189664400,
			"slug": "zeronet-default-apps"
		},
		{
			"id": "2568e080-c23b-11e9-85bc-cb070a424920",
			"body": "A place to test creating wiki content.  \n\n[[Temp Page]]\n\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n\n![I love you](https://i.pinimg.com/originals/0c/08/7b/0c087b74b846ea254bc38dbdd2493aed.png \"nice day\")\n\n![gitcenter's logo](/gitcenter.bit/crazywiki.png)\n\n[![gitcenter's logo](/gitcenter.bit/crazywiki.png)](//1NtQvrYd8rJzQYP3j1snmi28mPn8wSXX4X)\n\n",
			"date_added": 1566189489800,
			"slug": "wiki-testing"
		},
		{
			"id": "ec8bfe00-c23a-11e9-85bc-cb070a424920",
			"body": "A place to test creating wiki content.  \n\n[[Temp Page]]\n\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n\n![I love you](https://i.pinimg.com/originals/0c/08/7b/0c087b74b846ea254bc38dbdd2493aed.png \"nice day\")\n\n![gitcenter's logo](/gitcenter.bit/crazywiki.png)",
			"date_added": 1566189394400,
			"slug": "wiki-testing"
		},
		{
			"id": "549cd700-c239-11e9-9701-6f368ab6c6f2",
			"body": "[[ZeroNet Design]]\n\n# ZeroNet Default Zites\n\nWhen ZN boots up, it begins with a homepage.  While it defaults to the ZeroHello site, this can be overridden via the --homepage parameter.  \n\n```python3\nself.parser.add_argument('--homepage', help='Web interface Homepage', \ndefault='1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D', metavar='address')\n```\nThis app, in turns, has it's own code to load the other demo apps in its all.js.  \n\nTo help with this bootstrapping, the ZeroHello app is included in the default data folder.  The ZeroName site is also in this folder, along with preconfigured sites.json and users.json.  The rest of the demo zites on the left sidebar are loaded via the network when the user clicks on them to activate.  \n\n",
			"date_added": 1566188710000,
			"slug": "zeronet-default-apps"
		},
		{
			"id": "d7439b40-c238-11e9-a29b-fd67d64e7bc0",
			"body": "# ZeroNet Default Zites\n\nWhen ZN boots up, it begins with a homepage.  While it defaults to the ZeroHello site, this can be overridden via the --homepage parameter.  \n\n```python3\nself.parser.add_argument('--homepage', help='Web interface Homepage', \ndefault='1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D', metavar='address')\n```\nThis app, in turns, has it's own code to load the other demo apps in its all.js.  \n\nTo help with this bootstrapping, the ZeroHello app is included in the default data folder.  The ZeroName site is also in this folder, along with preconfigured sites.json and users.json.  The rest of the demo zites on the left sidebar are loaded via the network when the user clicks on them to activate.  \n\n",
			"date_added": 1566188499700,
			"slug": "zeronet-default-apps"
		},
		{
			"id": "7673d700-c231-11e9-b2a7-4fe2f08599fa",
			"body": "[[ZeroNet Design]]\n# Sandbox\n\nZeroNet wraps every page served in a site by an IFrame, and then uses its sandbox attribute to limit what it can do, effectively sandboxing zites.  \n\nThis breaks various types of sites, including [simple static Angular sites](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565995454_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/ISSUE+CORS+prevents+site+from+loading).  To live a happy life in ZeroNet, these apps can request that the user grant the NOSANDBOX permission to the site with this code:\n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nIf a user visits the site, but hasn't yet granted the NOSANDBOX permission, they'll get this message:\n\n![NOSANDBOX.png](img/NOSANDBOX.png)\n\nIf they grant it, this line is added to their sites.json:\n\n```\n  \"permissions\": [\"NOSANDBOX\"],\n```\n\nand they are no longer prompted for it.  \n\n## NOSANDBOX permission\n\nThe code in py3 branch Aug 2019 only shows one impact to this permission:\n\n```Python\n        if \"NOSANDBOX\" in site.settings[\"permissions\"]:\n            sandbox_permissions += \" allow-same-origin\"\n```\n\nwhich then gets passed to the sandbox element in the `<iframe>` tag via the rendering using the `src/Ui/template/wrapper.html` template.  \n\nHere is the IFrame line from the template:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock {**sandbox_permissions**}\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nAnd the result in the browser for a site with NOSANDBOX permission:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock  **allow-same-origin**\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nand an iframe from a site that does not have the NOSANDBOX permission (this wiki):\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock \" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nA javascript variable is also set so the site can inquire on whether or not the user granted the permission, and perhaps displaying a notification otherwise.\n\n```\npermissions = [\"NOSANDBOX\"]```\n\nAccording to [w3schools](https://www.w3schools.com/tags/att_iframe_sandbox.asp), allow-same-origin \"allows the iframe content to be treated as being from the same origin\".  \n\n## Discussions\n[ZT Zite Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - [Using the NOSANDBOX permission](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Using+the+NOSANDBOX+permission)\n",
			"date_added": 1566185330800,
			"slug": "zeronet-design---sandbox"
		},
		{
			"id": "653a0cc0-c231-11e9-b2a7-4fe2f08599fa",
			"body": "[[ZeroNet Design]]\n# Sandbox\n\nZeroNet wraps every page served in a site by an IFrame, and then uses its sandbox attribute to limit what it can do, effectively sandboxing zites.  \n\nThis breaks various types of sites, including [simple static Angular sites](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565995454_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/ISSUE+CORS+prevents+site+from+loading).  To live a happy life in ZeroNet, these apps can request that the user grant the NOSANDBOX permission to the site with this code:\n\n\n&nbsp;    page = new ZeroFrame()\n&nbsp;    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n\nIf a user visits the site, but hasn't yet granted the NOSANDBOX permission, they'll get this message:\n\n![NOSANDBOX.png](img/NOSANDBOX.png)\n\nIf they grant it, this line is added to their sites.json:\n\n```\n  \"permissions\": [\"NOSANDBOX\"],\n```\n\nand they are no longer prompted for it.  \n\n## NOSANDBOX permission\n\nThe code in py3 branch Aug 2019 only shows one impact to this permission:\n\n```Python\n        if \"NOSANDBOX\" in site.settings[\"permissions\"]:\n            sandbox_permissions += \" allow-same-origin\"\n```\n\nwhich then gets passed to the sandbox element in the `<iframe>` tag via the rendering using the `src/Ui/template/wrapper.html` template.  \n\nHere is the IFrame line from the template:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock {**sandbox_permissions**}\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nAnd the result in the browser for a site with NOSANDBOX permission:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock  **allow-same-origin**\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nand an iframe from a site that does not have the NOSANDBOX permission (this wiki):\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock \" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nA javascript variable is also set so the site can inquire on whether or not the user granted the permission, and perhaps displaying a notification otherwise.\n\n```\npermissions = [\"NOSANDBOX\"]```\n\nAccording to [w3schools](https://www.w3schools.com/tags/att_iframe_sandbox.asp), allow-same-origin \"allows the iframe content to be treated as being from the same origin\".  \n\n## Discussions\n[ZT Zite Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - [Using the NOSANDBOX permission](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Using+the+NOSANDBOX+permission)\n",
			"date_added": 1566185301900,
			"slug": "zeronet-design---sandbox"
		},
		{
			"id": "56be2a00-c231-11e9-b2a7-4fe2f08599fa",
			"body": "[[ZeroNet Design]]\n# Sandbox\n\nZeroNet wraps every page served in a site by an IFrame, and then uses its sandbox attribute to limit what it can do, effectively sandboxing zites.  \n\nThis breaks various types of sites, including [simple static Angular sites](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565995454_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/ISSUE+CORS+prevents+site+from+loading).  To live a happy life in ZeroNet, these apps can request that the user grant the NOSANDBOX permission to the site with this code:\n\n&nbsp;    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n\nIf a user visits the site, but hasn't yet granted the NOSANDBOX permission, they'll get this message:\n\n![NOSANDBOX.png](img/NOSANDBOX.png)\n\nIf they grant it, this line is added to their sites.json:\n\n```\n  \"permissions\": [\"NOSANDBOX\"],\n```\n\nand they are no longer prompted for it.  \n\n## NOSANDBOX permission\n\nThe code in py3 branch Aug 2019 only shows one impact to this permission:\n\n```Python\n        if \"NOSANDBOX\" in site.settings[\"permissions\"]:\n            sandbox_permissions += \" allow-same-origin\"\n```\n\nwhich then gets passed to the sandbox element in the `<iframe>` tag via the rendering using the `src/Ui/template/wrapper.html` template.  \n\nHere is the IFrame line from the template:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock {**sandbox_permissions**}\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nAnd the result in the browser for a site with NOSANDBOX permission:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock  **allow-same-origin**\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nand an iframe from a site that does not have the NOSANDBOX permission (this wiki):\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock \" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nA javascript variable is also set so the site can inquire on whether or not the user granted the permission, and perhaps displaying a notification otherwise.\n\n```\npermissions = [\"NOSANDBOX\"]```\n\nAccording to [w3schools](https://www.w3schools.com/tags/att_iframe_sandbox.asp), allow-same-origin \"allows the iframe content to be treated as being from the same origin\".  \n\n## Discussions\n[ZT Zite Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - [Using the NOSANDBOX permission](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Using+the+NOSANDBOX+permission)\n",
			"date_added": 1566185277600,
			"slug": "zeronet-design---sandbox"
		},
		{
			"id": "dd167a00-c22f-11e9-a160-71a2ade77182",
			"body": "[[ZeroNet Design]]\n# Sandbox\n\nZeroNet wraps every page served in a site by an IFrame, and then uses its sandbox attribute to limit what it can do, effectively sandboxing zites.  \n\nThis breaks various types of sites, including [simple static Angular sites](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565995454_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/ISSUE+CORS+prevents+site+from+loading).  To live a happy life in ZeroNet, these apps can request that the user grant the NOSANDBOX permission to the site with this code:\n\n   Page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\")  \n\nIf a user visits the site, but hasn't yet granted the NOSANDBOX permission, they'll get this message:\n\n![NOSANDBOX.png](img/NOSANDBOX.png)\n\nIf they grant it, this line is added to their sites.json:\n\n```\n  \"permissions\": [\"NOSANDBOX\"],\n```\n\nand they are no longer prompted for it.  \n\n## NOSANDBOX permission\n\nThe code in py3 branch Aug 2019 only shows one impact to this permission:\n\n```Python\n        if \"NOSANDBOX\" in site.settings[\"permissions\"]:\n            sandbox_permissions += \" allow-same-origin\"\n```\n\nwhich then gets passed to the sandbox element in the `<iframe>` tag via the rendering using the `src/Ui/template/wrapper.html` template.  \n\nHere is the IFrame line from the template:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock {**sandbox_permissions**}\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nAnd the result in the browser for a site with NOSANDBOX permission:\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock  **allow-same-origin**\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nand an iframe from a site that does not have the NOSANDBOX permission (this wiki):\n\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock \" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n\nA javascript variable is also set so the site can inquire on whether or not the user granted the permission, and perhaps displaying a notification otherwise.\n\n```\npermissions = [\"NOSANDBOX\"]```\n\nAccording to [w3schools](https://www.w3schools.com/tags/att_iframe_sandbox.asp), allow-same-origin \"allows the iframe content to be treated as being from the same origin\".  \n\n## Discussions\n[ZT Zite Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - [Using the NOSANDBOX permission](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Using+the+NOSANDBOX+permission)\n",
			"date_added": 1566184644000,
			"slug": "zeronet-design---sandbox"
		},
		{
			"id": "812eb5c0-c213-11e9-84f3-6feacd30e414",
			"body": "## Master Seed to Private Key\nEach data folder instance gets its own \"master_seed\" 64-byte value in users.json that is used to sign sites.  This is why copying a user.json to another is not enough to automatically sign sites.  \n\nzeronet.py cryptGetPrivatekey MASTER_SEED ADDRESS_INDEX\n\n```\nRecover cloned site's private key without users.json file\n using only your master seed: \n  zeronet.py cryptGetPrivatekey 219e...061 25650465 \nwill print the site's private key.\n\nWhere 219e...061 is your master_seed (64 char long) and \n25650465 is your address_index (can be found in the \ncloned site's content.json file)```\n(from [GitHub Issue 1776](https://github.com/HelloZeroNet/ZeroNet/issues/1776))\n",
			"date_added": 1566172463900,
			"slug": "zeronet-crypto"
		},
		{
			"id": "585a7080-c213-11e9-84f3-6feacd30e414",
			"body": "## Master Seed to Private Key\nEach data folder instance gets its own \"master_seed\" 64-byte value in users.json that is used to sign sites.  This is why copying a user.json to another is not enough to automatically sign sites.  \n\n```\nRecover cloned site's private key without users.json file\n using only your master seed: \n  zeronet.py cryptGetPrivatekey 219e...061 25650465 \nwill print the site's private key.\n\nWhere 219e...061 is your master_seed (64 char long) and \n25650465 is your address_index (can be found in the \ncloned site's content.json file)```\n(from [GitHub Issue 1776](https://github.com/HelloZeroNet/ZeroNet/issues/1776))\n",
			"date_added": 1566172395400,
			"slug": "zeronet-crypto"
		},
		{
			"id": "4a866680-c213-11e9-84f3-6feacd30e414",
			"body": "## Master Seed to Private Key\nEach data folder instance gets its own \"master_seed\" 64-byte value in users.json that is used to sign sites.  This is why copying a user.json to another is not enough to automatically sign sites.  \n\n```\nRecover cloned site's private key without users.json file using only your master seed: \n  zeronet.py cryptGetPrivatekey 219e...061 25650465 \nwill print the site's private key.\n\nWhere 219e...061 is your master_seed (64 char long) and \n25650465 is your address_index (can be found in the \ncloned site's content.json file)```\n(from [GitHub Issue 1776](https://github.com/HelloZeroNet/ZeroNet/issues/1776))\n",
			"date_added": 1566172372200,
			"slug": "zeronet-crypto"
		},
		{
			"id": "33e00f80-c213-11e9-84f3-6feacd30e414",
			"body": "## Master Seed to Private Key\nEach data folder instance gets its own \"master_seed\" 64-byte value in users.json that is used to sign sites.  This is why copying a user.json to another is not enough to automatically sign sites.  \n\n```\nRecover cloned site's private key without users.json file using only your master seed: \n  zeronet.py cryptGetPrivatekey 219e...061 25650465 \nwill print the site's private key.\n\nWhere 219e...061 is your master_seed (64 char long) and \n25650465 is your address_index (can be found in the cloned site's content.json file)```\n(from [GitHub Issue 1776](https://github.com/HelloZeroNet/ZeroNet/issues/1776))\n",
			"date_added": 1566172334200,
			"slug": "zeronet-crypto"
		},
		{
			"id": "2cc843c0-c213-11e9-84f3-6feacd30e414",
			"body": "## Master Seed to Private Key\nEach data folder instance gets its own \"master_seed\" 64-byte value in users.json that is used to sign sites.  This is why copying a user.json to another is not enough to automatically sign sites.  \n\n```Recover cloned site's private key without users.json file using only your master seed: \n  zeronet.py cryptGetPrivatekey 219e...061 25650465 \nwill print the site's private key.\n\nWhere 219e...061 is your master_seed (64 char long) and \n25650465 is your address_index (can be found in the cloned site's content.json file)```\n(from [GitHub Issue 1776](https://github.com/HelloZeroNet/ZeroNet/issues/1776))\n",
			"date_added": 1566172322300,
			"slug": "zeronet-crypto"
		},
		{
			"id": "907c83c0-c1ed-11e9-b1cf-cd931d0569cd",
			"body": "A place to test creating wiki content.  \n\n[[Temp Page]]\n\n![I love you](https://i.pinimg.com/originals/0c/08/7b/0c087b74b846ea254bc38dbdd2493aed.png \"nice day\")\n\n![gitcenter's logo](/gitcenter.bit/crazywiki.png)",
			"date_added": 1566156168700,
			"slug": "wiki-testing"
		},
		{
			"id": "bde87fc0-c1d0-11e9-a659-75f24022867e",
			"body": "# Creating Zites\n\nZeroNet Sites (Zites) are creating using typical static content such as HTML, JavaScript, CSS and images with a file-system based database.  \n\n[Site Development Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/getting_started/)\n\n[[ZeroNet Crypto]] - User signing and encrypting.  \n\n[ZeroNet Dev Center](http://127.0.0.1:43110/DevCenter.bit/) - dated intro docs.\n\nYou can [create an Angular site](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565993644_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Testing+a+static+Angular+site+in+ZeroNet).  \n\n## Handling SPAM\n\n[How to blacklist/block zeronet identity provider/authority in content.json, but whitelist some of this ID provider certificates](/Talk.ZeroNetwork.bit/?Topic:1565715792_1L4dZcDF2maSKHDy788yhxpYnBWnXadUtS/How+to+blacklist+block+zeronet+identity+provider+authority+in+content+json+but+whitelist+some+of+this+ID+provider+certificates)\nDescribes how to assign a 0 user limit size for self-signed certs to allow anonymous viewing, but require a Provider ID to publish.  \n",
			"date_added": 1566143789500,
			"slug": "creating-zites"
		},
		{
			"id": "20319c00-c174-11e9-b86c-3f1afcf62f9f",
			"body": "ZeroNet Sites (Zites) are creating using typical static content such as HTML, JavaScript, CSS and images with a file-system based database.  \n\n[Site Development Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/getting_started/)\n\n[[ZeroNet Crypto]] - User signing and encrypting.  \n\n[ZeroNet Dev Center](http://127.0.0.1:43110/DevCenter.bit/) - dated intro docs.\n\nYou can [create an Angular site](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565993644_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Testing+a+static+Angular+site+in+ZeroNet).  \n\n## Handling SPAM\n\n[How to blacklist/block zeronet identity provider/authority in content.json, but whitelist some of this ID provider certificates](/Talk.ZeroNetwork.bit/?Topic:1565715792_1L4dZcDF2maSKHDy788yhxpYnBWnXadUtS/How+to+blacklist+block+zeronet+identity+provider+authority+in+content+json+but+whitelist+some+of+this+ID+provider+certificates)\nDescribes how to assign a 0 user limit size for self-signed certs to allow anonymous viewing, but require a Provider ID to publish.  \n",
			"date_added": 1566104011200,
			"slug": "creating-zites"
		},
		{
			"id": "82642140-c08e-11e9-a590-57b854d26f1c",
			"body": "ZeroNet Sites (Zites) are creating using typical static content such as HTML, JavaScript, CSS and images with a file-system based database.  \n\n[Site Development Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/getting_started/)\n\n[[ZeroNet Crypto]] - User signing and encrypting.  \n\n[ZeroNet Dev Center](http://127.0.0.1:43110/DevCenter.bit/)\n\n## Handling SPAM\n\n[How to blacklist/block zeronet identity provider/authority in content.json, but whitelist some of this ID provider certificates](/Talk.ZeroNetwork.bit/?Topic:1565715792_1L4dZcDF2maSKHDy788yhxpYnBWnXadUtS/How+to+blacklist+block+zeronet+identity+provider+authority+in+content+json+but+whitelist+some+of+this+ID+provider+certificates)\nDescribes how to assign a 0 user limit size for self-signed certs to allow anonymous viewing, but require a Provider ID to publish.  \n",
			"date_added": 1566005391700,
			"slug": "creating-zites"
		},
		{
			"id": "8be6d680-c062-11e9-9afe-b11f577e06d2",
			"body": "These are sites most ZeroNet users might be interesting in checking out.  Please do not include p0rn or other high risk sites.  \n\n[ZeroMe](/Me.ZeroNetwork.bit) - Social networking.  \n\n[ZeroUp Unlimited](/1CiXRY9ATZSoZqBzwMfXEMsKtPRt2aQoF2) - Torrent sharing and seeding.  \n",
			"date_added": 1565986509800,
			"slug": "other-zeronet-sites"
		},
		{
			"id": "672f6c80-c062-11e9-9afe-b11f577e06d2",
			"body": "These are sites most ZeroNet users might be interesting in checking out.  Please do not include p0rn or other high risk sites.  \n\n[ZeroUp Unlimited](/1CiXRY9ATZSoZqBzwMfXEMsKtPRt2aQoF2) - Torrent sharing and seeding site.  \n",
			"date_added": 1565986448200,
			"slug": "other-zeronet-sites"
		},
		{
			"id": "ce98ec80-c061-11e9-afae-bf6bb935d1cd",
			"body": "[Zer0Net Talk](/Talk.ZeroNetwork.bit) - original primary ZeroNet talk site.  \n\n[ZN Zites Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3)\n\n[ZN Sec](/14swNBgrE3cTbreHgTGAYiGRBiPrnFCDJB) - ZeroNet Security\n\n[UNLIMIT TALK](/1HMLvnRWViMnuvZc5LK4Dm86sZNcSH1jdh/?Home) - Talk without user space limits.\n\n",
			"date_added": 1565986192200,
			"slug": "zeronet-talk-sites"
		},
		{
			"id": "92288300-c061-11e9-afae-bf6bb935d1cd",
			"body": "[ZN Zites Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3)\n\n[ZN Sec](/14swNBgrE3cTbreHgTGAYiGRBiPrnFCDJB) - ZeroNet Security\n\n[UNLIMIT TALK](/1HMLvnRWViMnuvZc5LK4Dm86sZNcSH1jdh/?Home) - Talk without user space limits.\n\n",
			"date_added": 1565986090800,
			"slug": "zeronet-talk-sites"
		},
		{
			"id": "780d2980-c061-11e9-976b-ebec6ff303a2",
			"body": "[[ZN Zites Dev]](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3)\n\n[[ZN Sec]] - ZeroNet Security\n\n[[UNLIMIT TALK]](/1HMLvnRWViMnuvZc5LK4Dm86sZNcSH1jdh/?Home) - Talk without user space limits.\n\n",
			"date_added": 1565986047000,
			"slug": "zeronet-talk-sites"
		},
		{
			"id": "c457e9c0-c060-11e9-976b-ebec6ff303a2",
			"body": "[[UNLIMIT TALK]](/1HMLvnRWViMnuvZc5LK4Dm86sZNcSH1jdh/?Home)\n\n",
			"date_added": 1565985745500,
			"slug": "zeronet-talk-sites"
		},
		{
			"id": "80112280-bf7b-11e9-8d11-ab8aaba576ee",
			"body": "A place to test creating wiki content.  \n\n[[Temp Page]]\n\n![I love you](https://i.pinimg.com/originals/0c/08/7b/0c087b74b846ea254bc38dbdd2493aed.png \"nice day\")\n",
			"date_added": 1565887276200,
			"slug": "wiki-testing"
		},
		{
			"id": "0563a680-be62-11e9-bcff-f7f83240590f",
			"body": "wt2",
			"date_added": 1565766381800,
			"slug": "wiki-testing-2"
		},
		{
			"id": "de49e280-be61-11e9-9986-d7e2a255d927",
			"body": "",
			"date_added": 1565766316200,
			"slug": "temp-page"
		},
		{
			"id": "d0efea80-be61-11e9-a261-cd5e5db11a06",
			"body": "ver3",
			"date_added": 1565766293800,
			"slug": "temp-page"
		},
		{
			"id": "c5d9c800-be61-11e9-9986-d7e2a255d927",
			"body": "ver2",
			"date_added": 1565766275200,
			"slug": "temp-page"
		},
		{
			"id": "a40e0c40-be61-11e9-9986-d7e2a255d927",
			"body": "ver1",
			"date_added": 1565766218500,
			"slug": "temp-page"
		},
		{
			"id": "27b68180-be3f-11e9-a576-45a1406a04e5",
			"body": "```\n  \"cert_signers\": {\n   \"0ch.anonymous\": [\"1LP86ye2hyMGP1UvGxnk7F8Qg9vN1HpVLy\"],\n   \"cryptoid.bit\": [\"18143WPue3rQykNaopx5KJKzYmaYhCjqhv\"],\n   \"ifs.anonymous\": [\"1AudNexptNDTGAwxFf2jnE8CX8UUks8NGD\"],\n   \"kaffie.bit\": [\"1KH5BdNnqxh2KRWMMT8wUXzUgz4vVQ4S8p\"],\n   \"kxoid.bit\": [\"12F5SvxoPR128aiudte78h8pY7mobroG6V\"],\n   \"millchan\": [\"1NwwLdiFBcVAA4jXQ712ZtQfDHEMvk8BiD\"],\n   \"nobody\": [\"1HfcDUpAgixShco52qfkVGyUjq7aybWHdG\"],\n   \"peak.id\": [\"1PEAKf9wJLTEEFAsQpLeLioWfY1f8pvFhD\"],\n   \"polar.id\": [\"1PoLARzautbsqCix1aia8jYN55JmPqGeFt\"],\n   \"zeroid.bit\": [\"1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\"],\n   \"zeropolska.bit\": [\"1GzEG1Hz82KMUp925PntbrhR7FoDZ4fRCF\"],\n   \"zeroverse.bit\": [\"1HPgDoReCFtE9qy71hnp55ksBVvV1gHJLQ\"],\n   \"zv.anonymous\": [\"1LtYcRchH5f5wKeW5jdFXGdnqnKNXBb7m6\"]\n  },\n```",
			"date_added": 1565751407000,
			"slug": "zeronet-id-providers"
		},
		{
			"id": "b3699d40-be38-11e9-94fd-6953d0a3d53c",
			"body": "ZeroNet Sites (Zites) are creating using typical static content such as HTML, JavaScript, CSS and images with a file-system based database.  \n\n[Site Development Documentation](/1DocsYf2tZVVMEMJFHiDsppmFicZCWkVv1/site_development/getting_started/)\n\n[[ZeroNet Crypto]] - User signing and encrypting.  \n\n## Handling SPAM\n\n[How to blacklist/block zeronet identity provider/authority in content.json, but whitelist some of this ID provider certificates](/Talk.ZeroNetwork.bit/?Topic:1565715792_1L4dZcDF2maSKHDy788yhxpYnBWnXadUtS/How+to+blacklist+block+zeronet+identity+provider+authority+in+content+json+but+whitelist+some+of+this+ID+provider+certificates)\nDescribes how to assign a 0 user limit size for self-signed certs to allow anonymous viewing, but require a Provider ID to publish.  \n",
			"date_added": 1565748634900,
			"slug": "creating-zites"
		},
		{
			"id": "921eab80-bd8e-11e9-8305-a763836a35dd",
			"body": "Wiki testing 2",
			"date_added": 1565675564600,
			"slug": "wiki-testing-2"
		}
	]
}