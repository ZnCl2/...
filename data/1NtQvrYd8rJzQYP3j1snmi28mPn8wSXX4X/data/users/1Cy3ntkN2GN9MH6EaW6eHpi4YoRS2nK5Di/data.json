{
	"pages": [
		{
			"id": "1a3e7cc0-c37a-11e9-a8ff-f99cc9abb89f",
			"body": "[[ZeroNet Design]]\n\n# Internet Communications\nZeroNet is bootstrapped with a user modifiable list of trackers that it uses to locate peers of content.  It then talks to these peers.  \n- trackers\n- peers\n\nThe Bootstrapper plugin can also discover peers using cjdns and yggdrasil in a local LAN or mesh topology, adding tracker server like features to your ZeroNet client.  Kaffie has a [tutorial on cjdns](/1N6zp6jCXPBktNMPfe7UJBpQGyfCq7k2M8/?Post:51:Using+CJDNS+with+ZeroNet).  \n\n## Encryption\n\nper Ivanq [in ZeroTalk](/Talk.ZeroNetwork.bit/?Topic:1566241934_13ifSHXbs2RtyHF4qkn4GrJ3krWEAAGmka/JavaScript+Tor#comment_625_1Cy3ntkN2GN9MH6EaW6eHpi4YoRS2nK5Di): \n___\nZeroNet itself can't be encrypted -- it's just an application. What you are asking is whether ZeroNet protocol is encrypted. Actually, it can be both encrypted and raw, depending on:\n\n- ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, ZeroNet proceeds with unencrypted protocol.\n\nIf you set any config options manually, it's a bit more difficult.\n\n- If disable_encryption config option is set, the protocol is always raw;\n- Otherwise, ZeroNet tries connecting to peers and does a handshake, then;\n- If the remote peer supports encryption, the protocol is encrypted;\n- Otherwise, if force_encryption config option is set, ZeroNet disconnects from the peer;\n- In case the peer doesn't support encryption but there is no force_encryption option, ZeroNet proceeds with unencrypted protocol.\n\nSo if you want to be very secure, you can use force_encryption option.\n___",
			"date_added": 1566326480524,
			"slug": "zeronet-internet-communications"
		},
		{
			"id": "356848a0-c280-11e9-9a8a-9b7d7d2a0aef",
			"body": "# ZeroNet Design\n\nHow does ZeroNet work under the hood?  When happens when you start it and while you are using it?  \n\nWhen it starts up, it loads configuration using \n\n- default values in Config.py\n- parameters passed \n- values in zeronet.conf\n\nthen it creates two servers:\n\n- **FileServer** - Uses a random port that is placed in netzero.conf to make it persistent.  \n- **UIServer** - This is the HTTP server you connect to from your browser, defaulting to port 43110.  \n\n### other components\n\n- **SiteManager** - Used by UIServer to work with sites.\n- **UserManager** - \n- **PluginManager** - \n- **UiRequest** - \n\n### relationships\n\n- FileServer invokes ui_server.updateWebsocket() with \"serverChanged\". \n\n### third-party\n\n#### [gevent](http://www.gevent.org/)\nThis is a networking library used heavily in ZN.  It provides the core HTTP server capability used by UiServer via its WSGIHandler.  \n\nWSGIHandler - Handles HTTP requests from a socket, creates the WSGI environment, and interacts with the WSGI application.\n\n## Tor Always\n\n- Assigns ```tor_hs_port``` port to FileServer (default: 15441).  \n\n## Functional Components\n[[ZeroNet Default Apps]]\n\n[[ZeroNet Design - Sandbox]]",
			"date_added": 1566219151914,
			"slug": "zeronet-design"
		},
		{
			"id": "588dfa70-c251-11e9-b9f5-f93d20c5f397",
			"body": "[[ZeroNet Design]]\n# Sandbox\n\nZeroNet wraps every page served in a site by an IFrame, and then uses its sandbox attribute to limit what it can do, effectively sandboxing zites.  \n\nThis breaks various types of sites, including [simple static Angular sites](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565995454_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/ISSUE+CORS+prevents+site+from+loading).  To live a happy life in ZeroNet, these apps can request that the user grant the NOSANDBOX permission to the site with this code:\n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nIf a user visits the site, but hasn't yet granted the NOSANDBOX permission, they'll get this message:\n\n![NOSANDBOX.png](img/NOSANDBOX.png)\n\nIf they grant it, this line is added to their sites.json:\n\n```\n  \"permissions\": [\"NOSANDBOX\"],\n```\n\nand they are no longer prompted for it.  \n\n## NOSANDBOX permission\n\nThe code in py3 branch Aug 2019 only shows one impact to this permission:\n\n```python\n        if \"NOSANDBOX\" in site.settings[\"permissions\"]:\n            sandbox_permissions += \" allow-same-origin\"\n```\n\nwhich then gets passed to the sandbox element in the `<iframe>` tag via the rendering using the `src/Ui/template/wrapper.html` template.  \n\nHere is the IFrame line from the template:\n\n```html\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock {**sandbox_permissions**}\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n```\n\nAnd the result in the browser for a site with NOSANDBOX permission:\n\n```html\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock  **allow-same-origin**\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n```\n\nand an iframe from a site that does not have the NOSANDBOX permission (this wiki):\n\n```html\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock \" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n```\n\nA javascript variable is also set so the site can inquire on whether or not the user granted the permission, and perhaps displaying a notification otherwise.\n\n```javascript\npermissions = [\"NOSANDBOX\"]\n```\n\nAccording to [w3schools](https://www.w3schools.com/tags/att_iframe_sandbox.asp), allow-same-origin \"allows the iframe content to be treated as being from the same origin\".  \n\n## Impacts\n\nOne of the reasons why `NOSANDBOX` permission is all-caps and marked is dangerous is that sandbox traversal becomes easy. Consider the following PoC:\n\n```javascript\nwindow.parent.zeroframe.cmd(\"siteList\", [], console.log.bind(console));\n```\n\nYou'll see that site list is logged to the console, which lets sites deanonymize you. Another example:\n\n```javascript\nwindow.parent.zeroframe.cmd(\"setConfig\", [\"open_browser\", \"cmd && rem %s\"]);\nwindow.parent.zeroframe.cmd(\"serverShutdown\", [true]);\n```\n\nRunning this code results in ZeroNet restart and a shell appearing instead of ZeroNet console. This means that an attacker can run any software on your computer, possibly stealing private keys and setting up a data locker.\n\nThat's why using NOSANDBOX is not recommended.\n\n## Discussions\n[ZT Zite Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - [Using the NOSANDBOX permission](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Using+the+NOSANDBOX+permission)\n",
			"date_added": 1566199024535,
			"slug": "zeronet-design---sandbox"
		},
		{
			"id": "d0121910-c250-11e9-b9f5-f93d20c5f397",
			"body": "[[ZeroNet Design]]\n# Sandbox\n\nZeroNet wraps every page served in a site by an IFrame, and then uses its sandbox attribute to limit what it can do, effectively sandboxing zites.  \n\nThis breaks various types of sites, including [simple static Angular sites](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1565995454_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/ISSUE+CORS+prevents+site+from+loading).  To live a happy life in ZeroNet, these apps can request that the user grant the NOSANDBOX permission to the site with this code:\n\n```javascript\n    page = new ZeroFrame()\n    page.cmd(\"wrapperPermissionAdd\", \"NOSANDBOX\", function(res) {\n        if (!res.error) page.cmd(\"wrapperReload\")\n    })\n```\n\nIf a user visits the site, but hasn't yet granted the NOSANDBOX permission, they'll get this message:\n\n![NOSANDBOX.png](img/NOSANDBOX.png)\n\nIf they grant it, this line is added to their sites.json:\n\n```\n  \"permissions\": [\"NOSANDBOX\"],\n```\n\nand they are no longer prompted for it.  \n\n## NOSANDBOX permission\n\nThe code in py3 branch Aug 2019 only shows one impact to this permission:\n\n```python\n        if \"NOSANDBOX\" in site.settings[\"permissions\"]:\n            sandbox_permissions += \" allow-same-origin\"\n```\n\nwhich then gets passed to the sandbox element in the `<iframe>` tag via the rendering using the `src/Ui/template/wrapper.html` template.  \n\nHere is the IFrame line from the template:\n\n```html\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock {**sandbox_permissions**}\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n```\n\nAnd the result in the browser for a site with NOSANDBOX permission:\n\n```html\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock  **allow-same-origin**\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n```\n\nand an iframe from a site that does not have the NOSANDBOX permission (this wiki):\n\n```html\n<iframe src='about:blank' id='inner-iframe' sandbox=\"allow-forms allow-scripts allow-top-navigation allow-popups allow-modals allow-presentation allow-pointer-lock \" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" oallowfullscreen=\"true\" msallowfullscreen=\"true\"></iframe>\n```\n\nA javascript variable is also set so the site can inquire on whether or not the user granted the permission, and perhaps displaying a notification otherwise.\n\n```javascript\npermissions = [\"NOSANDBOX\"]\n```\n\nAccording to [w3schools](https://www.w3schools.com/tags/att_iframe_sandbox.asp), allow-same-origin \"allows the iframe content to be treated as being from the same origin\".  \n\n## Discussions\n[ZT Zite Dev](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3) - [Using the NOSANDBOX permission](/1KmgpXc9BLFxw1ccGANYVzvDh3YG95tSe3/?Topic:1566178696_1D9oYXWZH2S55PeoCFDKTqq8roNXqZqP7n/Using+the+NOSANDBOX+permission)\n",
			"date_added": 1566198795553,
			"slug": "zeronet-design---sandbox"
		}
	]
}