{
	"next_post_id": 4,
	"next_comment_id": 1,
	"next_follow_id": 2,
	"avatar": "generate",
	"user_name": "0din",
	"hub": "1MoonP8t4rk9QamBUPh5Aspkwa1Xhf5ux2",
	"intro": "Random ZeroNet user",
	"post": [
		{
			"post_id": 1562275571,
			"body": "Why Telegram has no E2E encryption enabled by default?\n\n(as published in http://127.0.0.1:43110/Talk.ZeroNetwork.bit/?Topic:1561820909_16GG19wZtGAcebcKhf2hEmcf1sETig7DLA/Why+Telegram+is+not+E2E+encryption+by+default)\n\nIt seems to be simple for Telegram to implement the E2E encryption by default on chats, but why they didn't implement it?\n\nA few weeks ago we did some prototypes user <> bot and user <> user trying to recover files after being deleted by the other peer. \n\n# Test 1\nThe process for the first test was [user <> bot]: \n- Sending a document on a chat with a bot using Telegram's official app.\n- Deleting the file on the open chat\n- Accessing the file through the bot\n\nIt was possible to recover the file after being deleted through id and path, using Telegram API's. However, it could be a strictly internal process on how Telegram handles files and bots.\n\n# Test 2\nThen we did the second test [user <> user]:\n- Sending a document on a chat with another person using Telegram's official app.\n- Deleting the file on the open chat\n- Another peer was using the telegram-cli and successfully recovered the file\n\n*Old files are not available for recovering.* \n\nIf it is possible to recover a file after being deleted, it means that Telegram stores those files. \nIf the file is not accessible after some time, there's no way to prove they deleted it or moved it to another storage.\n\nAs you can follow in this link (https://core.telegram.org/bots/api#deletemessage), Telegram explains how to delete messages, but there's nothing on the whole documentation showing how to delete files. Messages and files have different treatment on their platform.\n\n# Conclusion\n\nHowever, maybe, it is a signal that explains why Telegram doesn't implement E2E encryption by default, because it can turn impossible to read the content of the files shared through peers.\n\nSo, it is plausible to believe that Telegram stores and scans all those files shared on their platform, and it raises many privacy concerns.",
			"date_added": 1562275569
		},
		{
			"post_id": 1563791837,
			"body": "Bluekeep ocean\n\nhttp://127.0.0.1:43110/1MgHVPCE1ve6QfKrgsqCURzRj72HrRWioz/?16GG19wZtGAcebcKhf2hEmcf1sETig7DLA_0",
			"date_added": 1563791834
		}
	],
	"post_like": {
		"16GG19wZtGAcebcKhf2hEmcf1sETig7DLA_1563791837": 1568414897
	},
	"comment": [],
	"follow": []
}